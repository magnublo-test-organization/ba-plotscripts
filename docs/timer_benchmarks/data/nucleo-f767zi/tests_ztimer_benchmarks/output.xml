<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 09:33:54.336" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:33:54.917" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:33:54.925" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:33:56.200" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:33:54.916" endtime="20201029 09:33:56.201"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:33:56.206" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:33:56.203" endtime="20201029 09:33:56.207"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:54.914" endtime="20201029 09:33:56.208"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:56.212" endtime="20201029 09:33:56.456"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.210" endtime="20201029 09:33:56.457"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:56.470" endtime="20201029 09:33:56.484"></status>
</kw>
<msg timestamp="20201029 09:33:56.485" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:56.468" endtime="20201029 09:33:56.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:56.487" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:56.486" endtime="20201029 09:33:56.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:56.490" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:56.488" endtime="20201029 09:33:56.491"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:56.466" endtime="20201029 09:33:56.491"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:56.463" endtime="20201029 09:33:56.492"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.462" endtime="20201029 09:33:56.492"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:56.496" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:56.495" endtime="20201029 09:33:56.497"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.493" endtime="20201029 09:33:56.497"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.461" endtime="20201029 09:33:56.498"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.461" endtime="20201029 09:33:56.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:56.499" endtime="20201029 09:33:56.500"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.459" endtime="20201029 09:33:56.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:56.501" endtime="20201029 09:33:56.503"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.458" endtime="20201029 09:33:56.503"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:54.912" endtime="20201029 09:33:56.504"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:56.512" endtime="20201029 09:33:56.534"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.509" endtime="20201029 09:33:56.536"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:56.559" endtime="20201029 09:33:56.573"></status>
</kw>
<msg timestamp="20201029 09:33:56.574" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:56.557" endtime="20201029 09:33:56.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:56.576" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:56.575" endtime="20201029 09:33:56.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:56.579" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:56.577" endtime="20201029 09:33:56.580"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:56.555" endtime="20201029 09:33:56.580"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:56.552" endtime="20201029 09:33:56.581"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.550" endtime="20201029 09:33:56.581"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:56.585" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:56.584" endtime="20201029 09:33:56.586"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.582" endtime="20201029 09:33:56.586"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.548" endtime="20201029 09:33:56.586"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.546" endtime="20201029 09:33:56.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:56.587" endtime="20201029 09:33:56.589"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.542" endtime="20201029 09:33:56.589"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.537" endtime="20201029 09:33:56.590"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.507" endtime="20201029 09:33:56.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:56.599" endtime="20201029 09:33:56.610"></status>
</kw>
<msg timestamp="20201029 09:33:56.610" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:56.596" endtime="20201029 09:33:56.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:56.613" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:56.611" endtime="20201029 09:33:56.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:56.614" endtime="20201029 09:33:56.616"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.593" endtime="20201029 09:33:56.616"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.591" endtime="20201029 09:33:56.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:56.621" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 09:33:56.620" endtime="20201029 09:33:56.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:56.623" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201029 09:33:56.622" endtime="20201029 09:33:56.623"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.617" endtime="20201029 09:33:56.624"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:56.504" endtime="20201029 09:33:56.624" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:33:54.448" endtime="20201029 09:33:56.626"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:33:56.680" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:33:56.688" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:33:57.925" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:33:56.678" endtime="20201029 09:33:57.926"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:33:57.931" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:33:57.928" endtime="20201029 09:33:57.932"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.677" endtime="20201029 09:33:57.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:57.937" endtime="20201029 09:33:58.221"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:57.935" endtime="20201029 09:33:58.222"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.234" endtime="20201029 09:33:58.248"></status>
</kw>
<msg timestamp="20201029 09:33:58.249" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:58.233" endtime="20201029 09:33:58.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.251" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:58.250" endtime="20201029 09:33:58.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.254" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:58.252" endtime="20201029 09:33:58.255"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:58.230" endtime="20201029 09:33:58.255"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:58.228" endtime="20201029 09:33:58.256"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.227" endtime="20201029 09:33:58.256"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:58.260" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:58.259" endtime="20201029 09:33:58.260"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.257" endtime="20201029 09:33:58.261"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.226" endtime="20201029 09:33:58.261"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.225" endtime="20201029 09:33:58.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.262" endtime="20201029 09:33:58.263"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.224" endtime="20201029 09:33:58.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.264" endtime="20201029 09:33:58.266"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.223" endtime="20201029 09:33:58.266"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.675" endtime="20201029 09:33:58.267"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:58.273" endtime="20201029 09:33:58.292"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.271" endtime="20201029 09:33:58.293"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.306" endtime="20201029 09:33:58.320"></status>
</kw>
<msg timestamp="20201029 09:33:58.321" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:58.304" endtime="20201029 09:33:58.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.324" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:58.322" endtime="20201029 09:33:58.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.327" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:58.325" endtime="20201029 09:33:58.327"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:58.302" endtime="20201029 09:33:58.328"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:58.299" endtime="20201029 09:33:58.328"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.298" endtime="20201029 09:33:58.328"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:58.332" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:58.331" endtime="20201029 09:33:58.333"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.329" endtime="20201029 09:33:58.333"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.297" endtime="20201029 09:33:58.333"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.297" endtime="20201029 09:33:58.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.334" endtime="20201029 09:33:58.335"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.295" endtime="20201029 09:33:58.336"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.294" endtime="20201029 09:33:58.336"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.270" endtime="20201029 09:33:58.336"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.345" endtime="20201029 09:33:58.356"></status>
</kw>
<msg timestamp="20201029 09:33:58.356" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:58.343" endtime="20201029 09:33:58.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.359" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:58.357" endtime="20201029 09:33:58.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.360" endtime="20201029 09:33:58.361"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.341" endtime="20201029 09:33:58.362"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.339" endtime="20201029 09:33:58.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.369" endtime="20201029 09:33:58.640"></status>
</kw>
<msg timestamp="20201029 09:33:58.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062825375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062825917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:58.367" endtime="20201029 09:33:58.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062825375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062825917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:58.643" endtime="20201029 09:33:58.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.648" endtime="20201029 09:33:58.650"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.365" endtime="20201029 09:33:58.650"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.363" endtime="20201029 09:33:58.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:58.654" level="INFO">${RESULT} = [{'diff': 5.419999999922709e-07}, {'diff': 3.0410000000091753e-06}, {'diff': 3.05600000000128e-06}, {'diff': 3.7499999999968114e-06}, {'diff': 3.945000000005194e-06}, {'diff': 3.597999999993551e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:33:58.652" endtime="20201029 09:33:58.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:58.658" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999922709e-07, 3.0410000000091753e-06, 3.05600000000128e-06, 3.7499999999968114e-06, 3.945000000005194e-06, 3.597999999993551e-06, 3.5550000000023063e-06, 3.1939999999980317e-06, 3.2...</msg>
<status status="PASS" starttime="20201029 09:33:58.655" endtime="20201029 09:33:58.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.662" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:58.661" endtime="20201029 09:33:58.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.664" level="INFO">VALUE: [5.419999999922709e-07, 3.0410000000091753e-06, 3.05600000000128e-06, 3.7499999999968114e-06, 3.945000000005194e-06, 3.597999999993551e-06, 3.5550000000023063e-06, 3.1939999999980317e-06, 3.29200000000196e-06, 3.875000000000406e-06, 3.2220000000110494e-06, 3.778000000009829e-06, 3.0980000000069285e-06, 3.805999999995091e-06, 2.610999999999586e-06, 3.5840000000009198e-06, 3.819000000002126e-06, 3.3329999999942572e-06, 3.137999999999752e-06, 3.9309999999986855e-06, 3.3329999999942572e-06, 2.8750000000132836e-06, 3.861000000007775e-06, 2.860999999992897e-06, 3.1389999999992257e-06]</msg>
<status status="PASS" starttime="20201029 09:33:58.663" endtime="20201029 09:33:58.665"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.659" endtime="20201029 09:33:58.665"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.338" endtime="20201029 09:33:58.666"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.338" endtime="20201029 09:33:58.666"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.674" endtime="20201029 09:33:58.683"></status>
</kw>
<msg timestamp="20201029 09:33:58.683" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:58.672" endtime="20201029 09:33:58.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.686" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:58.684" endtime="20201029 09:33:58.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.687" endtime="20201029 09:33:58.690"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.670" endtime="20201029 09:33:58.690"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.668" endtime="20201029 09:33:58.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.697" endtime="20201029 09:33:58.982"></status>
</kw>
<msg timestamp="20201029 09:33:58.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062825375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062825917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:58.695" endtime="20201029 09:33:58.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062825375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062825917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:58.987" endtime="20201029 09:33:58.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.995" endtime="20201029 09:33:58.997"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.693" endtime="20201029 09:33:58.998"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.691" endtime="20201029 09:33:58.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:59.002" level="INFO">${RESULT} = [{'diff': 5.419999999922709e-07}, {'diff': 3.0410000000091753e-06}, {'diff': 3.05600000000128e-06}, {'diff': 3.7499999999968114e-06}, {'diff': 3.945000000005194e-06}, {'diff': 3.597999999993551e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:33:58.999" endtime="20201029 09:33:59.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:59.006" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999922709e-07, 3.0410000000091753e-06, 3.05600000000128e-06, 3.7499999999968114e-06, 3.945000000005194e-06, 3.597999999993551e-06, 3.5550000000023063e-06, 3.1939999999980317e-06, 3.2...</msg>
<status status="PASS" starttime="20201029 09:33:59.003" endtime="20201029 09:33:59.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.011" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:59.009" endtime="20201029 09:33:59.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.014" level="INFO">VALUE: [5.419999999922709e-07, 3.0410000000091753e-06, 3.05600000000128e-06, 3.7499999999968114e-06, 3.945000000005194e-06, 3.597999999993551e-06, 3.5550000000023063e-06, 3.1939999999980317e-06, 3.29200000000196e-06, 3.875000000000406e-06, 3.2220000000110494e-06, 3.778000000009829e-06, 3.0980000000069285e-06, 3.805999999995091e-06, 2.610999999999586e-06, 3.5840000000009198e-06, 3.819000000002126e-06, 3.3329999999942572e-06, 3.137999999999752e-06, 3.9309999999986855e-06, 3.3329999999942572e-06, 2.8750000000132836e-06, 3.861000000007775e-06, 2.860999999992897e-06, 3.1389999999992257e-06, 0.318375431, 3.305000000008995e-06, 3.3609999999795193e-06, 3.6659999999577586e-06, 2.9719999999899827e-06, 3.069000000022193e-06, 3.3750000000276614e-06, 3.6800000000059008e-06, 3.235999999962047e-06, 2.4439999999903428e-06, 3.930000000040845e-06, 3.3339999999659753e-06, 2.8330000000353905e-06, 3.3609999999795193e-06, 3.4870000000242207e-06, 3.667000000040499e-06, 3.3749999999721503e-06, 3.111000000000086e-06, 3.05600000000128e-06, 3.90299999997179e-06, 2.7779999999810734e-06, 3.805999999995091e-06, 3.2919999999880822e-06, 3.152999999977979e-06, 2.917000000046688e-06, 3.5830000000292017e-06]</msg>
<status status="PASS" starttime="20201029 09:33:59.012" endtime="20201029 09:33:59.015"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.007" endtime="20201029 09:33:59.015"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.667" endtime="20201029 09:33:59.015"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.666" endtime="20201029 09:33:59.016"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.023" endtime="20201029 09:33:59.033"></status>
</kw>
<msg timestamp="20201029 09:33:59.033" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:59.022" endtime="20201029 09:33:59.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.036" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:59.034" endtime="20201029 09:33:59.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.037" endtime="20201029 09:33:59.039"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.019" endtime="20201029 09:33:59.039"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.018" endtime="20201029 09:33:59.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.046" endtime="20201029 09:33:59.341"></status>
</kw>
<msg timestamp="20201029 09:33:59.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062905792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.062909486, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:59.045" endtime="20201029 09:33:59.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062905792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.062909486, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:59.346" endtime="20201029 09:33:59.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.356" endtime="20201029 09:33:59.357"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.042" endtime="20201029 09:33:59.358"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.040" endtime="20201029 09:33:59.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:59.363" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.805999999995091e-06}, {'diff': 2.610999999999586e-06}, {'diff': 3.5840000000009198e-06}, {'diff': 3.819000000002126e-06}, {'diff': 3.3329999999942572e-06}, {'diff': 3.13799999...</msg>
<status status="PASS" starttime="20201029 09:33:59.359" endtime="20201029 09:33:59.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:59.368" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.805999999995091e-06, 2.610999999999586e-06, 3.5840000000009198e-06, 3.819000000002126e-06, 3.3329999999942572e-06, 3.137999999999752e-06, 3.9309999999986855e-06, 3.3329999999942572e-06,...</msg>
<status status="PASS" starttime="20201029 09:33:59.364" endtime="20201029 09:33:59.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.372" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:59.371" endtime="20201029 09:33:59.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.375" level="INFO">VALUE: [0, 3.805999999995091e-06, 2.610999999999586e-06, 3.5840000000009198e-06, 3.819000000002126e-06, 3.3329999999942572e-06, 3.137999999999752e-06, 3.9309999999986855e-06, 3.3329999999942572e-06, 2.8750000000132836e-06, 3.861000000007775e-06, 2.860999999992897e-06, 3.1389999999992257e-06, 0.318375431, 3.305000000008995e-06, 3.3609999999795193e-06, 3.6659999999577586e-06, 2.9719999999899827e-06, 3.069000000022193e-06, 3.3750000000276614e-06, 3.6800000000059008e-06, 3.235999999962047e-06, 2.4439999999903428e-06, 3.930000000040845e-06, 3.3339999999659753e-06, 2.8330000000353905e-06, 3.3609999999795193e-06, 3.4870000000242207e-06, 3.667000000040499e-06, 3.3749999999721503e-06, 3.111000000000086e-06, 3.05600000000128e-06, 3.90299999997179e-06, 2.7779999999810734e-06, 3.805999999995091e-06, 3.2919999999880822e-06, 3.152999999977979e-06, 2.917000000046688e-06, 3.5830000000292017e-06, 5.410000000205528e-07, 3.3890000000758036e-06, 2.555000000015184e-06, 3.721999999983794e-06, 2.9030000000540568e-06, 3.2370000000447874e-06, 2.9299999999565784e-06, 3.235999999962047e-06, 3.5549999999329174e-06, 4.000000000004e-06, 2.611999999957426e-06, 3.4450000000463277e-06, 2.9160000000194586e-06, 2.7639999999884424e-06, 3.097000000007455e-06, 3.401999999930183e-06, 3.6249999999515836e-06, 3.861000000049408e-06, 3.985999999955858e-06, 2.8750000000687947e-06, 3.0419999998976266e-06, 3.4440000000746096e-06, 3.68100000003313e-06, 2.6800000000326563e-06, 2.9580000000528628e-06]</msg>
<status status="PASS" starttime="20201029 09:33:59.374" endtime="20201029 09:33:59.376"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.369" endtime="20201029 09:33:59.376"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.016" endtime="20201029 09:33:59.377"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.016" endtime="20201029 09:33:59.377"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.385" endtime="20201029 09:33:59.394"></status>
</kw>
<msg timestamp="20201029 09:33:59.394" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:59.383" endtime="20201029 09:33:59.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.397" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:59.396" endtime="20201029 09:33:59.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.398" endtime="20201029 09:33:59.400"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.380" endtime="20201029 09:33:59.400"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.379" endtime="20201029 09:33:59.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.407" endtime="20201029 09:33:59.705"></status>
</kw>
<msg timestamp="20201029 09:33:59.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.381441375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.381444681, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:59.405" endtime="20201029 09:33:59.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.381441375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.381444681, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:59.710" endtime="20201029 09:33:59.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.720" endtime="20201029 09:33:59.722"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.403" endtime="20201029 09:33:59.723"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.401" endtime="20201029 09:33:59.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:59.727" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.3609999999795193e-06}, {'diff': 3.4870000000242207e-06}, {'diff': 3.667000000040499e-06}, {'diff': 3.3749999999721503e-06}, {'diff': 3.111000000000086e-06}, {'diff': 3.0560000...</msg>
<status status="PASS" starttime="20201029 09:33:59.724" endtime="20201029 09:33:59.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:59.732" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.3609999999795193e-06, 3.4870000000242207e-06, 3.667000000040499e-06, 3.3749999999721503e-06, 3.111000000000086e-06, 3.05600000000128e-06, 3.90299999997179e-06, 2.7779999999810734e-06, 3...</msg>
<status status="PASS" starttime="20201029 09:33:59.728" endtime="20201029 09:33:59.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.737" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:59.736" endtime="20201029 09:33:59.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.739" level="INFO">VALUE: [0, 3.3609999999795193e-06, 3.4870000000242207e-06, 3.667000000040499e-06, 3.3749999999721503e-06, 3.111000000000086e-06, 3.05600000000128e-06, 3.90299999997179e-06, 2.7779999999810734e-06, 3.805999999995091e-06, 3.2919999999880822e-06, 3.152999999977979e-06, 2.917000000046688e-06, 3.5830000000292017e-06, 5.410000000205528e-07, 3.3890000000758036e-06, 2.555000000015184e-06, 3.721999999983794e-06, 2.9030000000540568e-06, 3.2370000000447874e-06, 2.9299999999565784e-06, 3.235999999962047e-06, 3.5549999999329174e-06, 4.000000000004e-06, 2.611999999957426e-06, 3.4450000000463277e-06, 2.9160000000194586e-06, 2.7639999999884424e-06, 3.097000000007455e-06, 3.401999999930183e-06, 3.6249999999515836e-06, 3.861000000049408e-06, 3.985999999955858e-06, 2.8750000000687947e-06, 3.0419999998976266e-06, 3.4440000000746096e-06, 3.68100000003313e-06, 2.6800000000326563e-06, 2.9580000000528628e-06, 0.34928786199999995, 3.2640000000583314e-06, 3.514000000093276e-06, 2.5829999998894237e-06, 2.9999999999752447e-06, 3.457999999900707e-06, 3.6250000001736282e-06, 3.291999999932571e-06, 3.514000000093276e-06, 3.431000000109208e-06, 3.4580000001227518e-06, 3.3469999998203548e-06, 3.694000000109554e-06, 3.138999999929837e-06, 2.7360000001142026e-06, 3.4170000000610656e-06, 3.431000000109208e-06, 2.7639999999884424e-06, 3.235999999962047e-06, 3.6529999998258234e-06, 4.0420000000374046e-06, 2.6670000001782768e-06, 3.1810000000742633e-06, 3.4719999999488493e-06, 3.5830000000292017e-06]</msg>
<status status="PASS" starttime="20201029 09:33:59.738" endtime="20201029 09:33:59.740"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.733" endtime="20201029 09:33:59.740"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.378" endtime="20201029 09:33:59.741"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.377" endtime="20201029 09:33:59.741"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.749" endtime="20201029 09:33:59.759"></status>
</kw>
<msg timestamp="20201029 09:33:59.760" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:59.747" endtime="20201029 09:33:59.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.762" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:59.761" endtime="20201029 09:33:59.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.763" endtime="20201029 09:33:59.765"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.744" endtime="20201029 09:33:59.765"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.743" endtime="20201029 09:33:59.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.772" endtime="20201029 09:34:00.067"></status>
</kw>
<msg timestamp="20201029 09:34:00.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.723016903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.723019819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:59.771" endtime="20201029 09:34:00.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.723016903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.723019819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:00.072" endtime="20201029 09:34:00.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.082" endtime="20201029 09:34:00.084"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.768" endtime="20201029 09:34:00.084"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.766" endtime="20201029 09:34:00.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:00.089" level="INFO">${RESULT} = [{'diff': 2.9160000000194586e-06}, {'diff': 2.7639999999884424e-06}, {'diff': 3.097000000007455e-06}, {'diff': 3.401999999930183e-06}, {'diff': 3.6249999999515836e-06}, {'diff': 3.861000000049408e-06}...</msg>
<status status="PASS" starttime="20201029 09:34:00.085" endtime="20201029 09:34:00.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:00.094" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.9160000000194586e-06, 2.7639999999884424e-06, 3.097000000007455e-06, 3.401999999930183e-06, 3.6249999999515836e-06, 3.861000000049408e-06, 3.985999999955858e-06, 2.8750000000687947e-06, 3....</msg>
<status status="PASS" starttime="20201029 09:34:00.090" endtime="20201029 09:34:00.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.099" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:00.098" endtime="20201029 09:34:00.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.102" level="INFO">VALUE: [2.9160000000194586e-06, 2.7639999999884424e-06, 3.097000000007455e-06, 3.401999999930183e-06, 3.6249999999515836e-06, 3.861000000049408e-06, 3.985999999955858e-06, 2.8750000000687947e-06, 3.0419999998976266e-06, 3.4440000000746096e-06, 3.68100000003313e-06, 2.6800000000326563e-06, 2.9580000000528628e-06, 0.34928786199999995, 3.2640000000583314e-06, 3.514000000093276e-06, 2.5829999998894237e-06, 2.9999999999752447e-06, 3.457999999900707e-06, 3.6250000001736282e-06, 3.291999999932571e-06, 3.514000000093276e-06, 3.431000000109208e-06, 3.4580000001227518e-06, 3.3469999998203548e-06, 3.694000000109554e-06, 3.138999999929837e-06, 2.7360000001142026e-06, 3.4170000000610656e-06, 3.431000000109208e-06, 2.7639999999884424e-06, 3.235999999962047e-06, 3.6529999998258234e-06, 4.0420000000374046e-06, 2.6670000001782768e-06, 3.1810000000742633e-06, 3.4719999999488493e-06, 3.5830000000292017e-06, 0.35563783300000007, 3.2640000000583314e-06, 3.2640000000583314e-06, 3.235999999962047e-06, 3.194999999900361e-06, 3.0830000001813573e-06, 2.6390000000819924e-06, 2.9440000000047206e-06, 3.277999999884429e-06, 3.957999999970596e-06, 2.9999999999752447e-06, 3.5839999998898975e-06, 3.0829999999593127e-06, 3.3059999999807133e-06, 3.0829999999593127e-06, 3.0689999999111706e-06, 2.9859999999271025e-06, 2.9999999999752447e-06, 3.472999999809545e-06, 3.6529999998258234e-06, 2.7780000000365845e-06, 3.4030000000129235e-06, 3.3340000000769976e-06, 3.929999999874312e-06, 3.291999999932571e-06, 3.111000000055597e-06]</msg>
<status status="PASS" starttime="20201029 09:34:00.100" endtime="20201029 09:34:00.102"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.096" endtime="20201029 09:34:00.103"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.741" endtime="20201029 09:34:00.103"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.741" endtime="20201029 09:34:00.103"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.111" endtime="20201029 09:34:00.121"></status>
</kw>
<msg timestamp="20201029 09:34:00.121" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:00.109" endtime="20201029 09:34:00.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.124" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:00.122" endtime="20201029 09:34:00.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.125" endtime="20201029 09:34:00.126"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.107" endtime="20201029 09:34:00.127"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.105" endtime="20201029 09:34:00.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.134" endtime="20201029 09:34:00.430"></status>
</kw>
<msg timestamp="20201029 09:34:00.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.072467319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.072470861, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:00.132" endtime="20201029 09:34:00.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.072467319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.072470861, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:00.435" endtime="20201029 09:34:00.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.445" endtime="20201029 09:34:00.446"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.130" endtime="20201029 09:34:00.447"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.128" endtime="20201029 09:34:00.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:00.452" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.138999999929837e-06}, {'diff': 2.7360000001142026e-06}, {'diff': 3.4170000000610656e-06}, {'diff': 3.431000000109208e-06}, {'diff': 2.7639999999884424e-06}, {'diff': 3.2359999...</msg>
<status status="PASS" starttime="20201029 09:34:00.448" endtime="20201029 09:34:00.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:00.459" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.138999999929837e-06, 2.7360000001142026e-06, 3.4170000000610656e-06, 3.431000000109208e-06, 2.7639999999884424e-06, 3.235999999962047e-06, 3.6529999998258234e-06, 4.0420000000374046e-06...</msg>
<status status="PASS" starttime="20201029 09:34:00.453" endtime="20201029 09:34:00.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.463" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:00.462" endtime="20201029 09:34:00.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.466" level="INFO">VALUE: [0, 3.138999999929837e-06, 2.7360000001142026e-06, 3.4170000000610656e-06, 3.431000000109208e-06, 2.7639999999884424e-06, 3.235999999962047e-06, 3.6529999998258234e-06, 4.0420000000374046e-06, 2.6670000001782768e-06, 3.1810000000742633e-06, 3.4719999999488493e-06, 3.5830000000292017e-06, 0.35563783300000007, 3.2640000000583314e-06, 3.2640000000583314e-06, 3.235999999962047e-06, 3.194999999900361e-06, 3.0830000001813573e-06, 2.6390000000819924e-06, 2.9440000000047206e-06, 3.277999999884429e-06, 3.957999999970596e-06, 2.9999999999752447e-06, 3.5839999998898975e-06, 3.0829999999593127e-06, 3.3059999999807133e-06, 3.0829999999593127e-06, 3.0689999999111706e-06, 2.9859999999271025e-06, 2.9999999999752447e-06, 3.472999999809545e-06, 3.6529999998258234e-06, 2.7780000000365845e-06, 3.4030000000129235e-06, 3.3340000000769976e-06, 3.929999999874312e-06, 3.291999999932571e-06, 3.111000000055597e-06, 5.419999999922709e-07, 2.693999999969776e-06, 3.945000000005194e-06, 3.2910000000718753e-06, 2.7639999999884424e-06, 3.262999999975591e-06, 3.2220000001359494e-06, 3.360999999868497e-06, 3.4159999999783253e-06, 2.750000000162345e-06, 3.2080000000878073e-06, 2.9859999999271025e-06, 3.111000000055597e-06, 3.5560000000156577e-06, 3.5279999999193734e-06, 3.5000000000451337e-06, 4.056000000085547e-06, 2.9169999999911767e-06, 3.3480000001251398e-06, 3.152999999977979e-06, 3.208999999948503e-06, 2.804999999828084e-06, 3.1809999998522187e-06, 3.152999999977979e-06, 3.540999999884775e-06]</msg>
<status status="PASS" starttime="20201029 09:34:00.464" endtime="20201029 09:34:00.466"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.460" endtime="20201029 09:34:00.467"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.104" endtime="20201029 09:34:00.467"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.104" endtime="20201029 09:34:00.467"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.475" endtime="20201029 09:34:00.487"></status>
</kw>
<msg timestamp="20201029 09:34:00.488" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:00.474" endtime="20201029 09:34:00.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.493" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:00.489" endtime="20201029 09:34:00.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.495" endtime="20201029 09:34:00.497"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.471" endtime="20201029 09:34:00.500"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.469" endtime="20201029 09:34:00.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.511" endtime="20201029 09:34:00.806"></status>
</kw>
<msg timestamp="20201029 09:34:00.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.428265375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.428268681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:00.509" endtime="20201029 09:34:00.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.428265375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.428268681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:00.812" endtime="20201029 09:34:00.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.822" endtime="20201029 09:34:00.824"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.504" endtime="20201029 09:34:00.824"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.502" endtime="20201029 09:34:00.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:00.829" level="INFO">${RESULT} = [{'diff': 3.3059999999807133e-06}, {'diff': 3.0829999999593127e-06}, {'diff': 3.0689999999111706e-06}, {'diff': 2.9859999999271025e-06}, {'diff': 2.9999999999752447e-06}, {'diff': 3.472999999809545e-0...</msg>
<status status="PASS" starttime="20201029 09:34:00.826" endtime="20201029 09:34:00.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:00.834" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.3059999999807133e-06, 3.0829999999593127e-06, 3.0689999999111706e-06, 2.9859999999271025e-06, 2.9999999999752447e-06, 3.472999999809545e-06, 3.6529999998258234e-06, 2.7780000000365845e-06,...</msg>
<status status="PASS" starttime="20201029 09:34:00.830" endtime="20201029 09:34:00.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.839" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:00.838" endtime="20201029 09:34:00.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.842" level="INFO">VALUE: [3.3059999999807133e-06, 3.0829999999593127e-06, 3.0689999999111706e-06, 2.9859999999271025e-06, 2.9999999999752447e-06, 3.472999999809545e-06, 3.6529999998258234e-06, 2.7780000000365845e-06, 3.4030000000129235e-06, 3.3340000000769976e-06, 3.929999999874312e-06, 3.291999999932571e-06, 3.111000000055597e-06, 5.419999999922709e-07, 2.693999999969776e-06, 3.945000000005194e-06, 3.2910000000718753e-06, 2.7639999999884424e-06, 3.262999999975591e-06, 3.2220000001359494e-06, 3.360999999868497e-06, 3.4159999999783253e-06, 2.750000000162345e-06, 3.2080000000878073e-06, 2.9859999999271025e-06, 3.111000000055597e-06, 3.5560000000156577e-06, 3.5279999999193734e-06, 3.5000000000451337e-06, 4.056000000085547e-06, 2.9169999999911767e-06, 3.3480000001251398e-06, 3.152999999977979e-06, 3.208999999948503e-06, 2.804999999828084e-06, 3.1809999998522187e-06, 3.152999999977979e-06, 3.540999999884775e-06, 0.3538543470000002, 2.6659999998734918e-06, 3.5140000003153204e-06, 3.235999999962047e-06, 3.055999999723724e-06, 3.7910000001417643e-06, 3.1529999997559344e-06, 2.916000000130481e-06, 2.9029999999430345e-06, 3.443999999852565e-06, 3.666999999651921e-06, 3.5000000000451337e-06, 3.2079999998657627e-06, 3.389000000186826e-06, 3.194000000039665e-06, 3.167000000026121e-06, 2.6110000002077527e-06, 4.137999999986874e-06, 3.943999999922454e-06, 2.638999999859948e-06, 3.4719999999488493e-06, 3.1109999998335525e-06, 3.3329999999942572e-06, 3.3329999999942572e-06, 3.055000000085073e-06, 2.9999999999752447e-06]</msg>
<status status="PASS" starttime="20201029 09:34:00.840" endtime="20201029 09:34:00.842"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.835" endtime="20201029 09:34:00.843"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.468" endtime="20201029 09:34:00.843"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.468" endtime="20201029 09:34:00.843"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.853" endtime="20201029 09:34:00.863"></status>
</kw>
<msg timestamp="20201029 09:34:00.864" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:00.852" endtime="20201029 09:34:00.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.866" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:00.865" endtime="20201029 09:34:00.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.867" endtime="20201029 09:34:00.869"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.848" endtime="20201029 09:34:00.869"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.846" endtime="20201029 09:34:00.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.876" endtime="20201029 09:34:01.200"></status>
</kw>
<msg timestamp="20201029 09:34:01.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.777824389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.7778275, 'source': 'DUT_IC', 'event': 'RISI...</msg>
<status status="PASS" starttime="20201029 09:34:00.875" endtime="20201029 09:34:01.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.777824389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.7778275, 'source': 'DUT_IC', 'event': 'RISI...</msg>
<status status="PASS" starttime="20201029 09:34:01.205" endtime="20201029 09:34:01.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.216" endtime="20201029 09:34:01.218"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.872" endtime="20201029 09:34:01.218"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.871" endtime="20201029 09:34:01.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:01.223" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.5560000000156577e-06}, {'diff': 3.5279999999193734e-06}, {'diff': 3.5000000000451337e-06}, {'diff': 4.056000000085547e-06}, {'diff': 2.9169999999911767e-06}, {'diff': 3.348000...</msg>
<status status="PASS" starttime="20201029 09:34:01.219" endtime="20201029 09:34:01.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:01.229" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.5560000000156577e-06, 3.5279999999193734e-06, 3.5000000000451337e-06, 4.056000000085547e-06, 2.9169999999911767e-06, 3.3480000001251398e-06, 3.152999999977979e-06, 3.208999999948503e-06...</msg>
<status status="PASS" starttime="20201029 09:34:01.224" endtime="20201029 09:34:01.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.233" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:01.232" endtime="20201029 09:34:01.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.236" level="INFO">VALUE: [0, 3.5560000000156577e-06, 3.5279999999193734e-06, 3.5000000000451337e-06, 4.056000000085547e-06, 2.9169999999911767e-06, 3.3480000001251398e-06, 3.152999999977979e-06, 3.208999999948503e-06, 2.804999999828084e-06, 3.1809999998522187e-06, 3.152999999977979e-06, 3.540999999884775e-06, 0.3538543470000002, 2.6659999998734918e-06, 3.5140000003153204e-06, 3.235999999962047e-06, 3.055999999723724e-06, 3.7910000001417643e-06, 3.1529999997559344e-06, 2.916000000130481e-06, 2.9029999999430345e-06, 3.443999999852565e-06, 3.666999999651921e-06, 3.5000000000451337e-06, 3.2079999998657627e-06, 3.389000000186826e-06, 3.194000000039665e-06, 3.167000000026121e-06, 2.6110000002077527e-06, 4.137999999986874e-06, 3.943999999922454e-06, 2.638999999859948e-06, 3.4719999999488493e-06, 3.1109999998335525e-06, 3.3329999999942572e-06, 3.3329999999942572e-06, 3.055000000085073e-06, 2.9999999999752447e-06, 5.419999999922709e-07, 2.847000000194555e-06, 3.7079999999356517e-06, 3.4300000000264674e-06, 3.2499999997881446e-06, 3.7220000002058384e-06, 3.3469999998203548e-06, 2.6529999996860454e-06, 3.778000000398407e-06, 2.693999999969776e-06, 3.6530000002699126e-06, 2.8059999999108243e-06, 2.8609999995765634e-06, 2.9299999999565784e-06, 3.3610000000905416e-06, 3.416999999839021e-06, 3.0269999999887887e-06, 2.9029999999430345e-06, 3.0419999998976266e-06, 3.972000000018738e-06, 3.0269999999887887e-06, 3.208999999948503e-06, 3.374999999916639e-06, 3.0689999999111706e-06, 3.7640000001282203e-06]</msg>
<status status="PASS" starttime="20201029 09:34:01.234" endtime="20201029 09:34:01.236"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.230" endtime="20201029 09:34:01.237"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.844" endtime="20201029 09:34:01.237"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.844" endtime="20201029 09:34:01.237"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.245" endtime="20201029 09:34:01.255"></status>
</kw>
<msg timestamp="20201029 09:34:01.256" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:01.244" endtime="20201029 09:34:01.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.258" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:01.257" endtime="20201029 09:34:01.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.259" endtime="20201029 09:34:01.261"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.241" endtime="20201029 09:34:01.262"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.239" endtime="20201029 09:34:01.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.269" endtime="20201029 09:34:01.578"></status>
</kw>
<msg timestamp="20201029 09:34:01.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.131840014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.131843403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:01.268" endtime="20201029 09:34:01.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.131840014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.131843403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:01.583" endtime="20201029 09:34:01.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.593" endtime="20201029 09:34:01.595"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.264" endtime="20201029 09:34:01.595"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.263" endtime="20201029 09:34:01.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:01.600" level="INFO">${RESULT} = [{'diff': 3.389000000186826e-06}, {'diff': 3.194000000039665e-06}, {'diff': 3.167000000026121e-06}, {'diff': 2.6110000002077527e-06}, {'diff': 4.137999999986874e-06}, {'diff': 3.943999999922454e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:34:01.597" endtime="20201029 09:34:01.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:01.614" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.389000000186826e-06, 3.194000000039665e-06, 3.167000000026121e-06, 2.6110000002077527e-06, 4.137999999986874e-06, 3.943999999922454e-06, 2.638999999859948e-06, 3.4719999999488493e-06, 3.11...</msg>
<status status="PASS" starttime="20201029 09:34:01.609" endtime="20201029 09:34:01.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.618" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:01.617" endtime="20201029 09:34:01.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.621" level="INFO">VALUE: [3.389000000186826e-06, 3.194000000039665e-06, 3.167000000026121e-06, 2.6110000002077527e-06, 4.137999999986874e-06, 3.943999999922454e-06, 2.638999999859948e-06, 3.4719999999488493e-06, 3.1109999998335525e-06, 3.3329999999942572e-06, 3.3329999999942572e-06, 3.055000000085073e-06, 2.9999999999752447e-06, 5.419999999922709e-07, 2.847000000194555e-06, 3.7079999999356517e-06, 3.4300000000264674e-06, 3.2499999997881446e-06, 3.7220000002058384e-06, 3.3469999998203548e-06, 2.6529999996860454e-06, 3.778000000398407e-06, 2.693999999969776e-06, 3.6530000002699126e-06, 2.8059999999108243e-06, 2.8609999995765634e-06, 2.9299999999565784e-06, 3.3610000000905416e-06, 3.416999999839021e-06, 3.0269999999887887e-06, 2.9029999999430345e-06, 3.0419999998976266e-06, 3.972000000018738e-06, 3.0269999999887887e-06, 3.208999999948503e-06, 3.374999999916639e-06, 3.0689999999111706e-06, 3.7640000001282203e-06, 0.38160511099999983, 3.3340000000769976e-06, 3.2220000001359494e-06, 2.8329999999243682e-06, 3.0830000001813573e-06, 3.6250000001736282e-06, 3.278000000328518e-06, 2.6530000001301346e-06, 3.3609999996464524e-06, 2.6949999996084273e-06, 3.4719999999488493e-06, 3.1110000002776417e-06, 2.805000000272173e-06, 2.931000000039319e-06, 3.5140000003153204e-06, 2.9999999999752447e-06, 3.000000000419334e-06, 2.9719999998789604e-06, 3.6799999998393673e-06, 3.0689999999111706e-06, 3.3480000003471844e-06, 3.4719999999488493e-06, 2.8750000002908394e-06, 2.6529999996860454e-06, 3.5139999998712312e-06, 3.2220000001359494e-06]</msg>
<status status="PASS" starttime="20201029 09:34:01.620" endtime="20201029 09:34:01.622"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.615" endtime="20201029 09:34:01.622"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.238" endtime="20201029 09:34:01.623"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.238" endtime="20201029 09:34:01.623"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.631" endtime="20201029 09:34:01.641"></status>
</kw>
<msg timestamp="20201029 09:34:01.641" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:01.629" endtime="20201029 09:34:01.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.644" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:01.642" endtime="20201029 09:34:01.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.645" endtime="20201029 09:34:01.647"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.626" endtime="20201029 09:34:01.647"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.625" endtime="20201029 09:34:01.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.655" endtime="20201029 09:34:01.969"></status>
</kw>
<msg timestamp="20201029 09:34:01.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.500597583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.500601389, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:01.654" endtime="20201029 09:34:01.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.500597583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.500601389, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:01.975" endtime="20201029 09:34:01.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.987" endtime="20201029 09:34:01.990"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.650" endtime="20201029 09:34:01.990"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.648" endtime="20201029 09:34:01.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:01.996" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.9299999999565784e-06}, {'diff': 3.3610000000905416e-06}, {'diff': 3.416999999839021e-06}, {'diff': 3.0269999999887887e-06}, {'diff': 2.9029999999430345e-06}, {'diff': 3.041999...</msg>
<status status="PASS" starttime="20201029 09:34:01.992" endtime="20201029 09:34:01.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:02.002" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.9299999999565784e-06, 3.3610000000905416e-06, 3.416999999839021e-06, 3.0269999999887887e-06, 2.9029999999430345e-06, 3.0419999998976266e-06, 3.972000000018738e-06, 3.0269999999887887e-0...</msg>
<status status="PASS" starttime="20201029 09:34:01.998" endtime="20201029 09:34:02.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.007" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:02.006" endtime="20201029 09:34:02.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.010" level="INFO">VALUE: [0, 2.9299999999565784e-06, 3.3610000000905416e-06, 3.416999999839021e-06, 3.0269999999887887e-06, 2.9029999999430345e-06, 3.0419999998976266e-06, 3.972000000018738e-06, 3.0269999999887887e-06, 3.208999999948503e-06, 3.374999999916639e-06, 3.0689999999111706e-06, 3.7640000001282203e-06, 0.38160511099999983, 3.3340000000769976e-06, 3.2220000001359494e-06, 2.8329999999243682e-06, 3.0830000001813573e-06, 3.6250000001736282e-06, 3.278000000328518e-06, 2.6530000001301346e-06, 3.3609999996464524e-06, 2.6949999996084273e-06, 3.4719999999488493e-06, 3.1110000002776417e-06, 2.805000000272173e-06, 2.931000000039319e-06, 3.5140000003153204e-06, 2.9999999999752447e-06, 3.000000000419334e-06, 2.9719999998789604e-06, 3.6799999998393673e-06, 3.0689999999111706e-06, 3.3480000003471844e-06, 3.4719999999488493e-06, 2.8750000002908394e-06, 2.6529999996860454e-06, 3.5139999998712312e-06, 3.2220000001359494e-06, 5.419999999922709e-07, 3.736000000031936e-06, 3.0839999998200085e-06, 2.985999999705058e-06, 3.028000000071529e-06, 4.139000000069615e-06, 3.181000000296308e-06, 3.7500000003021228e-06, 3.2640000000583314e-06, 2.750000000162345e-06, 3.5000000000451337e-06, 2.889000000116937e-06, 3.5560000002377024e-06, 3.723000000288579e-06, 3.4449999999353054e-06, 2.569999999924022e-06, 3.4580000001227518e-06, 2.7639999999884424e-06, 3.2500000002322338e-06, 3.235999999962047e-06, 3.208999999948503e-06, 3.0269999999887887e-06, 2.9719999998789604e-06, 3.2770000002457778e-06, 3.138999999929837e-06]</msg>
<status status="PASS" starttime="20201029 09:34:02.008" endtime="20201029 09:34:02.011"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.003" endtime="20201029 09:34:02.011"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.624" endtime="20201029 09:34:02.012"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.623" endtime="20201029 09:34:02.012"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.020" endtime="20201029 09:34:02.029"></status>
</kw>
<msg timestamp="20201029 09:34:02.030" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:02.018" endtime="20201029 09:34:02.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.032" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:02.031" endtime="20201029 09:34:02.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.033" endtime="20201029 09:34:02.035"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.015" endtime="20201029 09:34:02.036"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.014" endtime="20201029 09:34:02.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.042" endtime="20201029 09:34:02.354"></status>
</kw>
<msg timestamp="20201029 09:34:02.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.882363569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.8823665, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:02.041" endtime="20201029 09:34:02.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.882363569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.8823665, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:02.359" endtime="20201029 09:34:02.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.369" endtime="20201029 09:34:02.371"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.038" endtime="20201029 09:34:02.371"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.037" endtime="20201029 09:34:02.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:02.377" level="INFO">${RESULT} = [{'diff': 2.931000000039319e-06}, {'diff': 3.5140000003153204e-06}, {'diff': 2.9999999999752447e-06}, {'diff': 3.000000000419334e-06}, {'diff': 2.9719999998789604e-06}, {'diff': 3.6799999998393673e-06...</msg>
<status status="PASS" starttime="20201029 09:34:02.373" endtime="20201029 09:34:02.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:02.382" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.931000000039319e-06, 3.5140000003153204e-06, 2.9999999999752447e-06, 3.000000000419334e-06, 2.9719999998789604e-06, 3.6799999998393673e-06, 3.0689999999111706e-06, 3.3480000003471844e-06, ...</msg>
<status status="PASS" starttime="20201029 09:34:02.378" endtime="20201029 09:34:02.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.386" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:02.385" endtime="20201029 09:34:02.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.389" level="INFO">VALUE: [2.931000000039319e-06, 3.5140000003153204e-06, 2.9999999999752447e-06, 3.000000000419334e-06, 2.9719999998789604e-06, 3.6799999998393673e-06, 3.0689999999111706e-06, 3.3480000003471844e-06, 3.4719999999488493e-06, 2.8750000002908394e-06, 2.6529999996860454e-06, 3.5139999998712312e-06, 3.2220000001359494e-06, 5.419999999922709e-07, 3.736000000031936e-06, 3.0839999998200085e-06, 2.985999999705058e-06, 3.028000000071529e-06, 4.139000000069615e-06, 3.181000000296308e-06, 3.7500000003021228e-06, 3.2640000000583314e-06, 2.750000000162345e-06, 3.5000000000451337e-06, 2.889000000116937e-06, 3.5560000002377024e-06, 3.723000000288579e-06, 3.4449999999353054e-06, 2.569999999924022e-06, 3.4580000001227518e-06, 2.7639999999884424e-06, 3.2500000002322338e-06, 3.235999999962047e-06, 3.208999999948503e-06, 3.0269999999887887e-06, 2.9719999998789604e-06, 3.2770000002457778e-06, 3.138999999929837e-06, 0.37871893099999987, 2.2630000002799022e-06, 2.901999999860294e-06, 3.763999999684131e-06, 2.8889999996728477e-06, 3.055000000085073e-06, 3.3190000001681597e-06, 3.277999999884429e-06, 3.6250000001736282e-06, 3.139000000373926e-06, 3.3469999998203548e-06, 3.9729999996573895e-06, 3.804999999967862e-06, 3.2499999997881446e-06, 3.055000000085073e-06, 3.0560000001678134e-06, 3.319999999806811e-06, 3.5560000002377024e-06, 3.2500000002322338e-06, 3.401999999930183e-06, 2.77799999981454e-06, 2.9719999998789604e-06, 3.3469999998203548e-06, 3.0839999998200085e-06, 3.3059999999807133e-06, 3.055999999723724e-06]</msg>
<status status="PASS" starttime="20201029 09:34:02.387" endtime="20201029 09:34:02.389"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.383" endtime="20201029 09:34:02.390"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.012" endtime="20201029 09:34:02.390"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.012" endtime="20201029 09:34:02.390"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.398" endtime="20201029 09:34:02.408"></status>
</kw>
<msg timestamp="20201029 09:34:02.408" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:02.396" endtime="20201029 09:34:02.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.411" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:02.410" endtime="20201029 09:34:02.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.412" endtime="20201029 09:34:02.414"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.394" endtime="20201029 09:34:02.414"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.392" endtime="20201029 09:34:02.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.421" endtime="20201029 09:34:02.747"></status>
</kw>
<msg timestamp="20201029 09:34:02.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.257753778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.257757333, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:02.419" endtime="20201029 09:34:02.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.257753778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.257757333, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:02.752" endtime="20201029 09:34:02.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.762" endtime="20201029 09:34:02.764"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.417" endtime="20201029 09:34:02.764"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.415" endtime="20201029 09:34:02.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:02.770" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.723000000288579e-06}, {'diff': 3.4449999999353054e-06}, {'diff': 2.569999999924022e-06}, {'diff': 3.4580000001227518e-06}, {'diff': 2.7639999999884424e-06}, {'diff': 3.2500000...</msg>
<status status="PASS" starttime="20201029 09:34:02.766" endtime="20201029 09:34:02.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:02.774" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.723000000288579e-06, 3.4449999999353054e-06, 2.569999999924022e-06, 3.4580000001227518e-06, 2.7639999999884424e-06, 3.2500000002322338e-06, 3.235999999962047e-06, 3.208999999948503e-06,...</msg>
<status status="PASS" starttime="20201029 09:34:02.771" endtime="20201029 09:34:02.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.778" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:02.777" endtime="20201029 09:34:02.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.781" level="INFO">VALUE: [0, 3.723000000288579e-06, 3.4449999999353054e-06, 2.569999999924022e-06, 3.4580000001227518e-06, 2.7639999999884424e-06, 3.2500000002322338e-06, 3.235999999962047e-06, 3.208999999948503e-06, 3.0269999999887887e-06, 2.9719999998789604e-06, 3.2770000002457778e-06, 3.138999999929837e-06, 0.37871893099999987, 2.2630000002799022e-06, 2.901999999860294e-06, 3.763999999684131e-06, 2.8889999996728477e-06, 3.055000000085073e-06, 3.3190000001681597e-06, 3.277999999884429e-06, 3.6250000001736282e-06, 3.139000000373926e-06, 3.3469999998203548e-06, 3.9729999996573895e-06, 3.804999999967862e-06, 3.2499999997881446e-06, 3.055000000085073e-06, 3.0560000001678134e-06, 3.319999999806811e-06, 3.5560000002377024e-06, 3.2500000002322338e-06, 3.401999999930183e-06, 2.77799999981454e-06, 2.9719999998789604e-06, 3.3469999998203548e-06, 3.0839999998200085e-06, 3.3059999999807133e-06, 3.055999999723724e-06, 5.419999995481817e-07, 2.8329999999243682e-06, 3.8049999995237727e-06, 2.847000000194555e-06, 3.2640000000583314e-06, 2.7780000007027184e-06, 3.278000000328518e-06, 3.1529999997559344e-06, 3.4589999993173137e-06, 3.000000000419334e-06, 3.6250000006177174e-06, 3.5140000003153204e-06, 3.290999999627786e-06, 2.416999999255154e-06, 3.0689999999111706e-06, 3.7910000001417643e-06, 3.3059999999807133e-06, 3.4159999993121914e-06, 3.805999999606513e-06, 3.304999999897973e-06, 2.931000000039319e-06, 3.527000000502767e-06, 3.2499999997881446e-06, 3.6670000005400993e-06, 3.2079999998657627e-06]</msg>
<status status="PASS" starttime="20201029 09:34:02.779" endtime="20201029 09:34:02.781"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.775" endtime="20201029 09:34:02.782"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.391" endtime="20201029 09:34:02.782"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.391" endtime="20201029 09:34:02.782"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.791" endtime="20201029 09:34:02.801"></status>
</kw>
<msg timestamp="20201029 09:34:02.801" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:02.789" endtime="20201029 09:34:02.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.803" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:02.802" endtime="20201029 09:34:02.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.805" endtime="20201029 09:34:02.806"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.786" endtime="20201029 09:34:02.807"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.784" endtime="20201029 09:34:02.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.813" endtime="20201029 09:34:03.127"></status>
</kw>
<msg timestamp="20201029 09:34:03.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.636631625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.636634875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:02.812" endtime="20201029 09:34:03.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.636631625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.636634875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:03.132" endtime="20201029 09:34:03.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.141" endtime="20201029 09:34:03.143"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.809" endtime="20201029 09:34:03.144"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.808" endtime="20201029 09:34:03.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:03.149" level="INFO">${RESULT} = [{'diff': 3.2499999997881446e-06}, {'diff': 3.055000000085073e-06}, {'diff': 3.0560000001678134e-06}, {'diff': 3.319999999806811e-06}, {'diff': 3.5560000002377024e-06}, {'diff': 3.2500000002322338e-06...</msg>
<status status="PASS" starttime="20201029 09:34:03.145" endtime="20201029 09:34:03.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:03.154" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.2499999997881446e-06, 3.055000000085073e-06, 3.0560000001678134e-06, 3.319999999806811e-06, 3.5560000002377024e-06, 3.2500000002322338e-06, 3.401999999930183e-06, 2.77799999981454e-06, 2.9...</msg>
<status status="PASS" starttime="20201029 09:34:03.150" endtime="20201029 09:34:03.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.158" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:03.157" endtime="20201029 09:34:03.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.161" level="INFO">VALUE: [3.2499999997881446e-06, 3.055000000085073e-06, 3.0560000001678134e-06, 3.319999999806811e-06, 3.5560000002377024e-06, 3.2500000002322338e-06, 3.401999999930183e-06, 2.77799999981454e-06, 2.9719999998789604e-06, 3.3469999998203548e-06, 3.0839999998200085e-06, 3.3059999999807133e-06, 3.055999999723724e-06, 5.419999995481817e-07, 2.8329999999243682e-06, 3.8049999995237727e-06, 2.847000000194555e-06, 3.2640000000583314e-06, 2.7780000007027184e-06, 3.278000000328518e-06, 3.1529999997559344e-06, 3.4589999993173137e-06, 3.000000000419334e-06, 3.6250000006177174e-06, 3.5140000003153204e-06, 3.290999999627786e-06, 2.416999999255154e-06, 3.0689999999111706e-06, 3.7910000001417643e-06, 3.3059999999807133e-06, 3.4159999993121914e-06, 3.805999999606513e-06, 3.304999999897973e-06, 2.931000000039319e-06, 3.527000000502767e-06, 3.2499999997881446e-06, 3.6670000005400993e-06, 3.2079999998657627e-06, 0.3818139719999998, 3.2079999998657627e-06, 3.5000000000451337e-06, 3.7090000004624812e-06, 2.9719999998789604e-06, 2.9579999996087736e-06, 3.4030000000129235e-06, 3.624999999729539e-06, 3.736000000031936e-06, 3.8189999997939594e-06, 3.1949999996783163e-06, 2.7920000000847267e-06, 3.2220000001359494e-06, 2.9029999994989453e-06, 3.0139999998013423e-06, 3.7500000003021228e-06, 3.777999999954318e-06, 2.87499999984675e-06, 4.070000000133689e-06, 3.4580000001227518e-06, 3.1940000004837543e-06, 3.7090000004624812e-06, 3.1809999994081295e-06, 3.597000000077344e-06, 2.916999999769132e-06, 2.87499999984675e-06]</msg>
<status status="PASS" starttime="20201029 09:34:03.159" endtime="20201029 09:34:03.161"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.155" endtime="20201029 09:34:03.162"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.783" endtime="20201029 09:34:03.162"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.783" endtime="20201029 09:34:03.162"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.170" endtime="20201029 09:34:03.179"></status>
</kw>
<msg timestamp="20201029 09:34:03.180" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.168" endtime="20201029 09:34:03.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.182" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.181" endtime="20201029 09:34:03.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.183" endtime="20201029 09:34:03.185"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.166" endtime="20201029 09:34:03.185"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.164" endtime="20201029 09:34:03.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.192" endtime="20201029 09:34:03.507"></status>
</kw>
<msg timestamp="20201029 09:34:03.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.004235819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.004239014, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:03.191" endtime="20201029 09:34:03.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.004235819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.004239014, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:03.512" endtime="20201029 09:34:03.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.522" endtime="20201029 09:34:03.524"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.188" endtime="20201029 09:34:03.524"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.186" endtime="20201029 09:34:03.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:03.529" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.416999999255154e-06}, {'diff': 3.0689999999111706e-06}, {'diff': 3.7910000001417643e-06}, {'diff': 3.3059999999807133e-06}, {'diff': 3.4159999993121914e-06}, {'diff': 3.805999...</msg>
<status status="PASS" starttime="20201029 09:34:03.526" endtime="20201029 09:34:03.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:03.535" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.416999999255154e-06, 3.0689999999111706e-06, 3.7910000001417643e-06, 3.3059999999807133e-06, 3.4159999993121914e-06, 3.805999999606513e-06, 3.304999999897973e-06, 2.931000000039319e-06,...</msg>
<status status="PASS" starttime="20201029 09:34:03.530" endtime="20201029 09:34:03.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.539" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:03.538" endtime="20201029 09:34:03.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.541" level="INFO">VALUE: [0, 2.416999999255154e-06, 3.0689999999111706e-06, 3.7910000001417643e-06, 3.3059999999807133e-06, 3.4159999993121914e-06, 3.805999999606513e-06, 3.304999999897973e-06, 2.931000000039319e-06, 3.527000000502767e-06, 3.2499999997881446e-06, 3.6670000005400993e-06, 3.2079999998657627e-06, 0.3818139719999998, 3.2079999998657627e-06, 3.5000000000451337e-06, 3.7090000004624812e-06, 2.9719999998789604e-06, 2.9579999996087736e-06, 3.4030000000129235e-06, 3.624999999729539e-06, 3.736000000031936e-06, 3.8189999997939594e-06, 3.1949999996783163e-06, 2.7920000000847267e-06, 3.2220000001359494e-06, 2.9029999994989453e-06, 3.0139999998013423e-06, 3.7500000003021228e-06, 3.777999999954318e-06, 2.87499999984675e-06, 4.070000000133689e-06, 3.4580000001227518e-06, 3.1940000004837543e-06, 3.7090000004624812e-06, 3.1809999994081295e-06, 3.597000000077344e-06, 2.916999999769132e-06, 2.87499999984675e-06, 5.409999994654413e-07, 3.0139999998013423e-06, 2.666999999512143e-06, 3.3889999997427367e-06, 3.513999999427142e-06, 2.555000000015184e-06, 3.431000000553297e-06, 3.834000000146887e-06, 3.6659999995691805e-06, 3.2220000001359494e-06, 3.666999999651921e-06, 2.7640000004325316e-06, 3.235999999517958e-06, 2.9299999999565784e-06, 3.3750000003607283e-06, 2.77799999981454e-06, 3.139000000373926e-06, 3.3190000001681597e-06, 3.3750000003607283e-06, 3.347999999903095e-06, 3.666999999651921e-06, 3.652000000187172e-06, 3.362000000173282e-06, 3.485999999774947e-06, 3.7229999998444896e-06]</msg>
<status status="PASS" starttime="20201029 09:34:03.540" endtime="20201029 09:34:03.542"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.536" endtime="20201029 09:34:03.542"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.163" endtime="20201029 09:34:03.543"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.162" endtime="20201029 09:34:03.543"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.551" endtime="20201029 09:34:03.560"></status>
</kw>
<msg timestamp="20201029 09:34:03.561" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.549" endtime="20201029 09:34:03.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.563" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.562" endtime="20201029 09:34:03.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.564" endtime="20201029 09:34:03.566"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.546" endtime="20201029 09:34:03.566"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.545" endtime="20201029 09:34:03.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.573" endtime="20201029 09:34:03.890"></status>
</kw>
<msg timestamp="20201029 09:34:03.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.386209847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.386213264, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:03.571" endtime="20201029 09:34:03.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.386209847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.386213264, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:03.895" endtime="20201029 09:34:03.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.905" endtime="20201029 09:34:03.907"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.569" endtime="20201029 09:34:03.908"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.567" endtime="20201029 09:34:03.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:03.912" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.9029999994989453e-06}, {'diff': 3.0139999998013423e-06}, {'diff': 3.7500000003021228e-06}, {'diff': 3.777999999954318e-06}, {'diff': 2.87499999984675e-06}, {'diff': 4.07000000...</msg>
<status status="PASS" starttime="20201029 09:34:03.909" endtime="20201029 09:34:03.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:03.917" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.9029999994989453e-06, 3.0139999998013423e-06, 3.7500000003021228e-06, 3.777999999954318e-06, 2.87499999984675e-06, 4.070000000133689e-06, 3.4580000001227518e-06, 3.1940000004837543e-06,...</msg>
<status status="PASS" starttime="20201029 09:34:03.913" endtime="20201029 09:34:03.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.921" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:03.920" endtime="20201029 09:34:03.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.924" level="INFO">VALUE: [0, 2.9029999994989453e-06, 3.0139999998013423e-06, 3.7500000003021228e-06, 3.777999999954318e-06, 2.87499999984675e-06, 4.070000000133689e-06, 3.4580000001227518e-06, 3.1940000004837543e-06, 3.7090000004624812e-06, 3.1809999994081295e-06, 3.597000000077344e-06, 2.916999999769132e-06, 2.87499999984675e-06, 5.409999994654413e-07, 3.0139999998013423e-06, 2.666999999512143e-06, 3.3889999997427367e-06, 3.513999999427142e-06, 2.555000000015184e-06, 3.431000000553297e-06, 3.834000000146887e-06, 3.6659999995691805e-06, 3.2220000001359494e-06, 3.666999999651921e-06, 2.7640000004325316e-06, 3.235999999517958e-06, 2.9299999999565784e-06, 3.3750000003607283e-06, 2.77799999981454e-06, 3.139000000373926e-06, 3.3190000001681597e-06, 3.3750000003607283e-06, 3.347999999903095e-06, 3.666999999651921e-06, 3.652000000187172e-06, 3.362000000173282e-06, 3.485999999774947e-06, 3.7229999998444896e-06, 0.36943398599999977, 3.0139999998013423e-06, 3.2779999994403397e-06, 2.9999999995311555e-06, 3.443999999852565e-06, 3.5830000006953355e-06, 3.167000000026121e-06, 2.889000000116937e-06, 3.5690000004251488e-06, 3.8889999993685365e-06, 3.2640000000583314e-06, 3.443999999852565e-06, 3.4030000000129235e-06, 3.028000000071529e-06, 3.8199999998767e-06, 3.666999999651921e-06, 3.763999999684131e-06, 2.750000000162345e-06, 2.805999999466735e-06, 2.8610000004647418e-06, 3.624999999729539e-06, 3.666000000457359e-06, 2.916999999769132e-06, 3.5560000002377024e-06, 3.0139999998013423e-06]</msg>
<status status="PASS" starttime="20201029 09:34:03.922" endtime="20201029 09:34:03.924"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.918" endtime="20201029 09:34:03.925"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.544" endtime="20201029 09:34:03.925"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.543" endtime="20201029 09:34:03.925"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.934" endtime="20201029 09:34:03.944"></status>
</kw>
<msg timestamp="20201029 09:34:03.944" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.932" endtime="20201029 09:34:03.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.946" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.945" endtime="20201029 09:34:03.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.947" endtime="20201029 09:34:03.949"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.929" endtime="20201029 09:34:03.950"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.927" endtime="20201029 09:34:03.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.956" endtime="20201029 09:34:04.274"></status>
</kw>
<msg timestamp="20201029 09:34:04.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.756136028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.756139264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:03.955" endtime="20201029 09:34:04.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.756136028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.756139264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:04.279" endtime="20201029 09:34:04.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.289" endtime="20201029 09:34:04.291"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.952" endtime="20201029 09:34:04.291"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.951" endtime="20201029 09:34:04.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:04.296" level="INFO">${RESULT} = [{'diff': 3.235999999517958e-06}, {'diff': 2.9299999999565784e-06}, {'diff': 3.3750000003607283e-06}, {'diff': 2.77799999981454e-06}, {'diff': 3.139000000373926e-06}, {'diff': 3.3190000001681597e-06},...</msg>
<status status="PASS" starttime="20201029 09:34:04.292" endtime="20201029 09:34:04.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:04.301" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.235999999517958e-06, 2.9299999999565784e-06, 3.3750000003607283e-06, 2.77799999981454e-06, 3.139000000373926e-06, 3.3190000001681597e-06, 3.3750000003607283e-06, 3.347999999903095e-06, 3.6...</msg>
<status status="PASS" starttime="20201029 09:34:04.297" endtime="20201029 09:34:04.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.305" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:04.304" endtime="20201029 09:34:04.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.308" level="INFO">VALUE: [3.235999999517958e-06, 2.9299999999565784e-06, 3.3750000003607283e-06, 2.77799999981454e-06, 3.139000000373926e-06, 3.3190000001681597e-06, 3.3750000003607283e-06, 3.347999999903095e-06, 3.666999999651921e-06, 3.652000000187172e-06, 3.362000000173282e-06, 3.485999999774947e-06, 3.7229999998444896e-06, 0.36943398599999977, 3.0139999998013423e-06, 3.2779999994403397e-06, 2.9999999995311555e-06, 3.443999999852565e-06, 3.5830000006953355e-06, 3.167000000026121e-06, 2.889000000116937e-06, 3.5690000004251488e-06, 3.8889999993685365e-06, 3.2640000000583314e-06, 3.443999999852565e-06, 3.4030000000129235e-06, 3.028000000071529e-06, 3.8199999998767e-06, 3.666999999651921e-06, 3.763999999684131e-06, 2.750000000162345e-06, 2.805999999466735e-06, 2.8610000004647418e-06, 3.624999999729539e-06, 3.666000000457359e-06, 2.916999999769132e-06, 3.5560000002377024e-06, 3.0139999998013423e-06, 0.37194507000000065, 3.167000000026121e-06, 2.87499999984675e-06, 3.2079999998657627e-06, 3.6530000002699126e-06, 2.8610000004647418e-06, 3.9579999997485515e-06, 2.9450000003095056e-06, 3.7640000005723095e-06, 3.235999999517958e-06, 3.1109999998335525e-06, 2.5410000006331757e-06, 3.4030000000129235e-06, 3.902000000444161e-06, 3.4449999999353054e-06, 3.4589999993173137e-06, 3.235999999517958e-06, 3.2919999997105265e-06, 3.555000000154962e-06, 3.235999999517958e-06, 2.9719999998789604e-06, 3.5980000001600843e-06, 4.1109999999733304e-06, 2.6530000001301346e-06, 3.0560000006119026e-06, 3.652999999381734e-06]</msg>
<status status="PASS" starttime="20201029 09:34:04.306" endtime="20201029 09:34:04.308"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.302" endtime="20201029 09:34:04.309"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.926" endtime="20201029 09:34:04.309"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.925" endtime="20201029 09:34:04.309"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.317" endtime="20201029 09:34:04.327"></status>
</kw>
<msg timestamp="20201029 09:34:04.327" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:04.315" endtime="20201029 09:34:04.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.329" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:04.328" endtime="20201029 09:34:04.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.330" endtime="20201029 09:34:04.332"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.313" endtime="20201029 09:34:04.333"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.311" endtime="20201029 09:34:04.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.339" endtime="20201029 09:34:04.650"></status>
</kw>
<msg timestamp="20201029 09:34:04.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.125734181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.125737514, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:04.338" endtime="20201029 09:34:04.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.125734181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.125737514, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:04.655" endtime="20201029 09:34:04.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.665" endtime="20201029 09:34:04.667"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.335" endtime="20201029 09:34:04.668"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.334" endtime="20201029 09:34:04.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:04.672" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.028000000071529e-06}, {'diff': 3.8199999998767e-06}, {'diff': 3.666999999651921e-06}, {'diff': 3.763999999684131e-06}, {'diff': 2.750000000162345e-06}, {'diff': 2.805999999466...</msg>
<status status="PASS" starttime="20201029 09:34:04.669" endtime="20201029 09:34:04.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:04.678" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.028000000071529e-06, 3.8199999998767e-06, 3.666999999651921e-06, 3.763999999684131e-06, 2.750000000162345e-06, 2.805999999466735e-06, 2.8610000004647418e-06, 3.624999999729539e-06, 3.66...</msg>
<status status="PASS" starttime="20201029 09:34:04.673" endtime="20201029 09:34:04.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.682" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:04.681" endtime="20201029 09:34:04.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.685" level="INFO">VALUE: [0, 3.028000000071529e-06, 3.8199999998767e-06, 3.666999999651921e-06, 3.763999999684131e-06, 2.750000000162345e-06, 2.805999999466735e-06, 2.8610000004647418e-06, 3.624999999729539e-06, 3.666000000457359e-06, 2.916999999769132e-06, 3.5560000002377024e-06, 3.0139999998013423e-06, 0.37194507000000065, 3.167000000026121e-06, 2.87499999984675e-06, 3.2079999998657627e-06, 3.6530000002699126e-06, 2.8610000004647418e-06, 3.9579999997485515e-06, 2.9450000003095056e-06, 3.7640000005723095e-06, 3.235999999517958e-06, 3.1109999998335525e-06, 2.5410000006331757e-06, 3.4030000000129235e-06, 3.902000000444161e-06, 3.4449999999353054e-06, 3.4589999993173137e-06, 3.235999999517958e-06, 3.2919999997105265e-06, 3.555000000154962e-06, 3.235999999517958e-06, 2.9719999998789604e-06, 3.5980000001600843e-06, 4.1109999999733304e-06, 2.6530000001301346e-06, 3.0560000006119026e-06, 3.652999999381734e-06, 5.419999995481817e-07, 2.9450000003095056e-06, 3.6799999998393673e-06, 3.736000000031936e-06, 2.9719999998789604e-06, 3.000000000419334e-06, 3.652000000187172e-06, 3.485999999774947e-06, 3.22300000021869e-06, 3.4860000006631253e-06, 3.5000000000451337e-06, 2.9719999998789604e-06, 3.3059999999807133e-06, 2.6110000002077527e-06, 3.2220000001359494e-06, 2.6809999997823297e-06, 3.1250000001037392e-06, 3.0139999998013423e-06, 3.278000000328518e-06, 3.1389999994857476e-06, 3.833000000064146e-06, 3.3330000004383464e-06, 3.3190000001681597e-06, 2.9159999996863917e-06, 3.0139999998013423e-06]</msg>
<status status="PASS" starttime="20201029 09:34:04.683" endtime="20201029 09:34:04.685"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.679" endtime="20201029 09:34:04.686"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.310" endtime="20201029 09:34:04.686"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.310" endtime="20201029 09:34:04.686"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.694" endtime="20201029 09:34:04.703"></status>
</kw>
<msg timestamp="20201029 09:34:04.704" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:04.692" endtime="20201029 09:34:04.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.706" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:04.705" endtime="20201029 09:34:04.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.707" endtime="20201029 09:34:04.709"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.690" endtime="20201029 09:34:04.709"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.688" endtime="20201029 09:34:04.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.717" endtime="20201029 09:34:05.029"></status>
</kw>
<msg timestamp="20201029 09:34:05.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.497839556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.497843458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:04.715" endtime="20201029 09:34:05.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.497839556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.497843458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:05.033" endtime="20201029 09:34:05.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.044" endtime="20201029 09:34:05.045"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.712" endtime="20201029 09:34:05.046"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.710" endtime="20201029 09:34:05.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:05.050" level="INFO">${RESULT} = [{'diff': 3.902000000444161e-06}, {'diff': 3.4449999999353054e-06}, {'diff': 3.4589999993173137e-06}, {'diff': 3.235999999517958e-06}, {'diff': 3.2919999997105265e-06}, {'diff': 3.555000000154962e-06}...</msg>
<status status="PASS" starttime="20201029 09:34:05.047" endtime="20201029 09:34:05.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:05.055" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.902000000444161e-06, 3.4449999999353054e-06, 3.4589999993173137e-06, 3.235999999517958e-06, 3.2919999997105265e-06, 3.555000000154962e-06, 3.235999999517958e-06, 2.9719999998789604e-06, 3....</msg>
<status status="PASS" starttime="20201029 09:34:05.051" endtime="20201029 09:34:05.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.059" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:05.058" endtime="20201029 09:34:05.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.062" level="INFO">VALUE: [3.902000000444161e-06, 3.4449999999353054e-06, 3.4589999993173137e-06, 3.235999999517958e-06, 3.2919999997105265e-06, 3.555000000154962e-06, 3.235999999517958e-06, 2.9719999998789604e-06, 3.5980000001600843e-06, 4.1109999999733304e-06, 2.6530000001301346e-06, 3.0560000006119026e-06, 3.652999999381734e-06, 5.419999995481817e-07, 2.9450000003095056e-06, 3.6799999998393673e-06, 3.736000000031936e-06, 2.9719999998789604e-06, 3.000000000419334e-06, 3.652000000187172e-06, 3.485999999774947e-06, 3.22300000021869e-06, 3.4860000006631253e-06, 3.5000000000451337e-06, 2.9719999998789604e-06, 3.3059999999807133e-06, 2.6110000002077527e-06, 3.2220000001359494e-06, 2.6809999997823297e-06, 3.1250000001037392e-06, 3.0139999998013423e-06, 3.278000000328518e-06, 3.1389999994857476e-06, 3.833000000064146e-06, 3.3330000004383464e-06, 3.3190000001681597e-06, 2.9159999996863917e-06, 3.0139999998013423e-06, 0.36453123600000037, 2.9719999998789604e-06, 3.278000000328518e-06, 3.736000000031936e-06, 3.763999999684131e-06, 2.8329999999243682e-06, 3.332999999550168e-06, 3.86100000060452e-06, 2.9170000006573105e-06, 3.167000000026121e-06, 3.2079999998657627e-06, 3.0980000005342845e-06, 2.555999999209746e-06, 3.111999999916293e-06, 2.485999999635169e-06, 3.582999999807157e-06, 3.2360000004061362e-06, 3.3059999999807133e-06, 3.362000000173282e-06, 3.5830000006953355e-06, 3.86100000060452e-06, 3.0410000002589754e-06, 3.0139999998013423e-06, 3.028000000071529e-06, 2.958999999691514e-06, 2.9450000003095056e-06]</msg>
<status status="PASS" starttime="20201029 09:34:05.060" endtime="20201029 09:34:05.063"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.056" endtime="20201029 09:34:05.063"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.687" endtime="20201029 09:34:05.064"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.686" endtime="20201029 09:34:05.064"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.072" endtime="20201029 09:34:05.082"></status>
</kw>
<msg timestamp="20201029 09:34:05.082" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:05.070" endtime="20201029 09:34:05.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.085" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:05.083" endtime="20201029 09:34:05.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.086" endtime="20201029 09:34:05.087"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.068" endtime="20201029 09:34:05.088"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.066" endtime="20201029 09:34:05.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.094" endtime="20201029 09:34:05.410"></status>
</kw>
<msg timestamp="20201029 09:34:05.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.870565514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.870569583, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:05.093" endtime="20201029 09:34:05.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.870565514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.870569583, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:05.415" endtime="20201029 09:34:05.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.425" endtime="20201029 09:34:05.427"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.090" endtime="20201029 09:34:05.427"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.089" endtime="20201029 09:34:05.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:05.432" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.6110000002077527e-06}, {'diff': 3.2220000001359494e-06}, {'diff': 2.6809999997823297e-06}, {'diff': 3.1250000001037392e-06}, {'diff': 3.0139999998013423e-06}, {'diff': 3.27800...</msg>
<status status="PASS" starttime="20201029 09:34:05.428" endtime="20201029 09:34:05.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:05.437" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.6110000002077527e-06, 3.2220000001359494e-06, 2.6809999997823297e-06, 3.1250000001037392e-06, 3.0139999998013423e-06, 3.278000000328518e-06, 3.1389999994857476e-06, 3.833000000064146e-0...</msg>
<status status="PASS" starttime="20201029 09:34:05.433" endtime="20201029 09:34:05.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.441" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:05.440" endtime="20201029 09:34:05.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.444" level="INFO">VALUE: [0, 2.6110000002077527e-06, 3.2220000001359494e-06, 2.6809999997823297e-06, 3.1250000001037392e-06, 3.0139999998013423e-06, 3.278000000328518e-06, 3.1389999994857476e-06, 3.833000000064146e-06, 3.3330000004383464e-06, 3.3190000001681597e-06, 2.9159999996863917e-06, 3.0139999998013423e-06, 0.36453123600000037, 2.9719999998789604e-06, 3.278000000328518e-06, 3.736000000031936e-06, 3.763999999684131e-06, 2.8329999999243682e-06, 3.332999999550168e-06, 3.86100000060452e-06, 2.9170000006573105e-06, 3.167000000026121e-06, 3.2079999998657627e-06, 3.0980000005342845e-06, 2.555999999209746e-06, 3.111999999916293e-06, 2.485999999635169e-06, 3.582999999807157e-06, 3.2360000004061362e-06, 3.3059999999807133e-06, 3.362000000173282e-06, 3.5830000006953355e-06, 3.86100000060452e-06, 3.0410000002589754e-06, 3.0139999998013423e-06, 3.028000000071529e-06, 2.958999999691514e-06, 2.9450000003095056e-06, 5.419999995481817e-07, 3.151999999673194e-06, 3.2640000000583314e-06, 3.3889999997427367e-06, 3.431000000553297e-06, 3.221999999247771e-06, 3.4449999999353054e-06, 3.0140000006895207e-06, 3.3889999997427367e-06, 3.262999999975591e-06, 3.6389999999997258e-06, 3.1109999998335525e-06, 3.1949999996783163e-06, 3.278000000328518e-06, 3.7640000005723095e-06, 3.4300000004705566e-06, 3.2919999997105265e-06, 3.973000000101479e-06, 2.735999999892158e-06, 3.570000000507889e-06, 3.235999999517958e-06, 3.2919999997105265e-06, 3.5000000000451337e-06, 3.151999999673194e-06, 2.916999999769132e-06]</msg>
<status status="PASS" starttime="20201029 09:34:05.442" endtime="20201029 09:34:05.444"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.438" endtime="20201029 09:34:05.445"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.065" endtime="20201029 09:34:05.445"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.064" endtime="20201029 09:34:05.445"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.453" endtime="20201029 09:34:05.463"></status>
</kw>
<msg timestamp="20201029 09:34:05.463" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:05.451" endtime="20201029 09:34:05.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.465" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:05.464" endtime="20201029 09:34:05.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.466" endtime="20201029 09:34:05.468"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.449" endtime="20201029 09:34:05.469"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.447" endtime="20201029 09:34:05.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.475" endtime="20201029 09:34:05.792"></status>
</kw>
<msg timestamp="20201029 09:34:05.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.235258319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.235261431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:05.474" endtime="20201029 09:34:05.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.235258319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.235261431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:05.798" endtime="20201029 09:34:05.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.808" endtime="20201029 09:34:05.809"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.471" endtime="20201029 09:34:05.810"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.470" endtime="20201029 09:34:05.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:05.814" level="INFO">${RESULT} = [{'diff': 3.111999999916293e-06}, {'diff': 2.485999999635169e-06}, {'diff': 3.582999999807157e-06}, {'diff': 3.2360000004061362e-06}, {'diff': 3.3059999999807133e-06}, {'diff': 3.362000000173282e-06},...</msg>
<status status="PASS" starttime="20201029 09:34:05.811" endtime="20201029 09:34:05.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:05.819" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.111999999916293e-06, 2.485999999635169e-06, 3.582999999807157e-06, 3.2360000004061362e-06, 3.3059999999807133e-06, 3.362000000173282e-06, 3.5830000006953355e-06, 3.86100000060452e-06, 3.04...</msg>
<status status="PASS" starttime="20201029 09:34:05.815" endtime="20201029 09:34:05.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.823" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:05.822" endtime="20201029 09:34:05.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.826" level="INFO">VALUE: [3.111999999916293e-06, 2.485999999635169e-06, 3.582999999807157e-06, 3.2360000004061362e-06, 3.3059999999807133e-06, 3.362000000173282e-06, 3.5830000006953355e-06, 3.86100000060452e-06, 3.0410000002589754e-06, 3.0139999998013423e-06, 3.028000000071529e-06, 2.958999999691514e-06, 2.9450000003095056e-06, 5.419999995481817e-07, 3.151999999673194e-06, 3.2640000000583314e-06, 3.3889999997427367e-06, 3.431000000553297e-06, 3.221999999247771e-06, 3.4449999999353054e-06, 3.0140000006895207e-06, 3.3889999997427367e-06, 3.262999999975591e-06, 3.6389999999997258e-06, 3.1109999998335525e-06, 3.1949999996783163e-06, 3.278000000328518e-06, 3.7640000005723095e-06, 3.4300000004705566e-06, 3.2919999997105265e-06, 3.973000000101479e-06, 2.735999999892158e-06, 3.570000000507889e-06, 3.235999999517958e-06, 3.2919999997105265e-06, 3.5000000000451337e-06, 3.151999999673194e-06, 2.916999999769132e-06, 0.3709704999999994, 2.612000000290493e-06, 3.6109999994593522e-06, 2.916999999769132e-06, 3.167000000026121e-06, 3.3610000000905416e-06, 3.0969999995633657e-06, 3.861999999799082e-06, 3.736000000031936e-06, 2.6950000000525165e-06, 2.9719999998789604e-06, 3.7219999997617492e-06, 3.847000000334333e-06, 2.847000000194555e-06, 3.278000000328518e-06, 2.6670000004003214e-06, 3.3339999996329084e-06, 3.4030000000129235e-06, 3.181000000296308e-06, 3.2499999997881446e-06, 3.7499999994139444e-06, 3.0410000002589754e-06, 3.860999999716341e-06, 3.151999999673194e-06, 3.91699999990891e-06, 3.124999999215561e-06]</msg>
<status status="PASS" starttime="20201029 09:34:05.824" endtime="20201029 09:34:05.826"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.820" endtime="20201029 09:34:05.827"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.446" endtime="20201029 09:34:05.827"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.446" endtime="20201029 09:34:05.827"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.337" endtime="20201029 09:34:05.828"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:58.267" endtime="20201029 09:34:05.828" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:05.835" endtime="20201029 09:34:05.854"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.833" endtime="20201029 09:34:05.854"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.868" endtime="20201029 09:34:05.882"></status>
</kw>
<msg timestamp="20201029 09:34:05.882" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:05.867" endtime="20201029 09:34:05.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.885" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:05.883" endtime="20201029 09:34:05.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.888" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:05.886" endtime="20201029 09:34:05.889"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:05.864" endtime="20201029 09:34:05.889"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:05.862" endtime="20201029 09:34:05.890"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.861" endtime="20201029 09:34:05.890"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:05.894" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:05.893" endtime="20201029 09:34:05.894"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.891" endtime="20201029 09:34:05.894"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.860" endtime="20201029 09:34:05.895"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.859" endtime="20201029 09:34:05.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.895" endtime="20201029 09:34:05.897"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.857" endtime="20201029 09:34:05.897"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.855" endtime="20201029 09:34:05.898"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.832" endtime="20201029 09:34:05.898"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.906" endtime="20201029 09:34:05.918"></status>
</kw>
<msg timestamp="20201029 09:34:05.918" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:05.905" endtime="20201029 09:34:05.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.921" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:05.920" endtime="20201029 09:34:05.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.922" endtime="20201029 09:34:05.924"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.902" endtime="20201029 09:34:05.925"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.901" endtime="20201029 09:34:05.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.933" endtime="20201029 09:34:06.217"></status>
</kw>
<msg timestamp="20201029 09:34:06.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062729542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062730611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:05.930" endtime="20201029 09:34:06.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062729542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062730611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:06.221" endtime="20201029 09:34:06.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.229" endtime="20201029 09:34:06.231"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.928" endtime="20201029 09:34:06.231"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.926" endtime="20201029 09:34:06.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:06.236" level="INFO">${RESULT} = [{'diff': 1.069000000006315e-06}, {'diff': 7.220000000085491e-07}, {'diff': 7.6400000000032e-07}, {'diff': 7.220000000085491e-07}, {'diff': 7.50000000007689e-07}, {'diff': 7.080000000020403e-07}, {'di...</msg>
<status status="PASS" starttime="20201029 09:34:06.233" endtime="20201029 09:34:06.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:06.240" level="INFO">${OVERHEAD} = {'diff': [1.069000000006315e-06, 7.220000000085491e-07, 7.6400000000032e-07, 7.220000000085491e-07, 7.50000000007689e-07, 7.080000000020403e-07, 6.95000000008883e-07, 7.360000000011802e-07, 7.21999999...</msg>
<status status="PASS" starttime="20201029 09:34:06.237" endtime="20201029 09:34:06.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.244" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:06.243" endtime="20201029 09:34:06.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.247" level="INFO">VALUE: [1.069000000006315e-06, 7.220000000085491e-07, 7.6400000000032e-07, 7.220000000085491e-07, 7.50000000007689e-07, 7.080000000020403e-07, 6.95000000008883e-07, 7.360000000011802e-07, 7.219999999946713e-07, 7.230000000080228e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.359999999873024e-07, 7.219999999946713e-07, 7.09000000001514e-07, 7.220000000085491e-07, 7.219999999946713e-07, 7.220000000085491e-07, 7.499999999938112e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.50000000007689e-07, 7.220000000085491e-07, 7.079999999881625e-07, 7.219999999946713e-07, 7.360000000011802e-07, 7.080000000020403e-07, 7.22999999994145e-07, 7.09000000001514e-07, 7.360000000011802e-07, 7.219999999946713e-07, 7.780000000068288e-07, 7.219999999946713e-07, 7.230000000080228e-07, 7.360000000011802e-07, 7.080000000020403e-07, 7.22999999994145e-07, 7.360000000011802e-07, 7.499999999938112e-07, 7.219999999946713e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.220000000085491e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.22999999994145e-07, 7.360000000011802e-07, 7.219999999946713e-07, 7.080000000020403e-07]</msg>
<status status="PASS" starttime="20201029 09:34:06.245" endtime="20201029 09:34:06.247"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.241" endtime="20201029 09:34:06.248"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.899" endtime="20201029 09:34:06.248"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.899" endtime="20201029 09:34:06.248"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.257" endtime="20201029 09:34:06.267"></status>
</kw>
<msg timestamp="20201029 09:34:06.268" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.254" endtime="20201029 09:34:06.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.270" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.269" endtime="20201029 09:34:06.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.271" endtime="20201029 09:34:06.273"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.252" endtime="20201029 09:34:06.273"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.250" endtime="20201029 09:34:06.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.280" endtime="20201029 09:34:06.574"></status>
</kw>
<msg timestamp="20201029 09:34:06.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062814028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062814736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:06.279" endtime="20201029 09:34:06.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062814028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062814736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:06.579" endtime="20201029 09:34:06.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.589" endtime="20201029 09:34:06.591"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.276" endtime="20201029 09:34:06.591"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.274" endtime="20201029 09:34:06.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:06.596" level="INFO">${RESULT} = [{'diff': 7.080000000020403e-07}, {'diff': 7.22999999994145e-07}, {'diff': 7.360000000011802e-07}, {'diff': 7.499999999938112e-07}, {'diff': 7.219999999946713e-07}, {'diff': 7.360000000011802e-07}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:06.592" endtime="20201029 09:34:06.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:06.601" level="INFO">${OVERHEAD} = {'diff': [7.080000000020403e-07, 7.22999999994145e-07, 7.360000000011802e-07, 7.499999999938112e-07, 7.219999999946713e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.220000000085491e-07, 7.36000...</msg>
<status status="PASS" starttime="20201029 09:34:06.597" endtime="20201029 09:34:06.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.613" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:06.612" endtime="20201029 09:34:06.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.615" level="INFO">VALUE: [7.080000000020403e-07, 7.22999999994145e-07, 7.360000000011802e-07, 7.499999999938112e-07, 7.219999999946713e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.220000000085491e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.22999999994145e-07, 7.360000000011802e-07, 7.219999999946713e-07, 7.080000000020403e-07, 1.0550000000275617e-06, 8.190000000407593e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.229999999802672e-07, 7.360000000011802e-07, 7.220000000085491e-07, 7.499999999938112e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.07999999960407e-07, 6.390000000244811e-07, 7.499999999938112e-07, 6.670000000097431e-07, 7.220000000085491e-07, 7.360000000011802e-07, 7.369999999728982e-07, 7.220000000085491e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.499999999938112e-07, 7.360000000011802e-07, 7.21999999953038e-07, 7.360000000011802e-07, 7.220000000085491e-07, 7.499999999938112e-07, 7.220000000085491e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.21999999953038e-07, 7.779999999790732e-07, 7.07999999960407e-07, 7.220000000085491e-07, 7.360000000011802e-07, 7.080000000159181e-07, 7.779999999790732e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.220000000085491e-07, 7.360000000011802e-07, 7.090000000431473e-07, 7.360000000011802e-07, 7.220000000085491e-07, 7.360000000011802e-07, 7.220000000085491e-07]</msg>
<status status="PASS" starttime="20201029 09:34:06.614" endtime="20201029 09:34:06.616"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.609" endtime="20201029 09:34:06.616"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.249" endtime="20201029 09:34:06.617"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.249" endtime="20201029 09:34:06.617"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.625" endtime="20201029 09:34:06.636"></status>
</kw>
<msg timestamp="20201029 09:34:06.636" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.623" endtime="20201029 09:34:06.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.639" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.637" endtime="20201029 09:34:06.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.640" endtime="20201029 09:34:06.641"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.621" endtime="20201029 09:34:06.642"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.619" endtime="20201029 09:34:06.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.648" endtime="20201029 09:34:06.944"></status>
</kw>
<msg timestamp="20201029 09:34:06.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.403326611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.403327319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:06.647" endtime="20201029 09:34:06.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.403326611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.403327319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:06.950" endtime="20201029 09:34:06.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.960" endtime="20201029 09:34:06.961"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.644" endtime="20201029 09:34:06.962"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.643" endtime="20201029 09:34:06.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:06.966" level="INFO">${RESULT} = [{'diff': 7.080000000159181e-07}, {'diff': 7.779999999790732e-07}, {'diff': 7.360000000011802e-07}, {'diff': 7.360000000011802e-07}, {'diff': 7.360000000011802e-07}, {'diff': 7.360000000011802e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:34:06.963" endtime="20201029 09:34:06.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:06.974" level="INFO">${OVERHEAD} = {'diff': [7.080000000159181e-07, 7.779999999790732e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.220000000085491e-07, 7.3600...</msg>
<status status="PASS" starttime="20201029 09:34:06.967" endtime="20201029 09:34:06.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.978" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:06.977" endtime="20201029 09:34:06.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.981" level="INFO">VALUE: [7.080000000159181e-07, 7.779999999790732e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.220000000085491e-07, 7.360000000011802e-07, 7.090000000431473e-07, 7.360000000011802e-07, 7.220000000085491e-07, 7.360000000011802e-07, 7.220000000085491e-07, 1.0559999999992797e-06, 7.360000000566913e-07, 7.08999999932125e-07, 7.220000000085491e-07, 7.35999999945669e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.35999999945669e-07, 6.949999999950052e-07, 7.35999999945669e-07, 7.35999999945669e-07, 7.360000000566913e-07, 7.080000000714293e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.090000000431473e-07, 7.35999999945669e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.920000000272154e-07, 7.360000000566913e-07, 6.940000000232871e-07, 7.229999999802672e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.07999999960407e-07, 7.220000000085491e-07, 7.229999999802672e-07, 7.35999999945669e-07, 7.220000000085491e-07, 7.35999999945669e-07, 7.07999999960407e-07, 7.499999999938112e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.35999999945669e-07, 7.35999999945669e-07, 7.35999999945669e-07, 6.519999999898829e-07, 7.220000000085491e-07, 7.370000000284094e-07, 7.35999999945669e-07, 7.220000000085491e-07, 7.230000000912895e-07, 7.220000000085491e-07, 7.35999999945669e-07, 7.220000000085491e-07, 7.220000000085491e-07]</msg>
<status status="PASS" starttime="20201029 09:34:06.980" endtime="20201029 09:34:06.981"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.975" endtime="20201029 09:34:06.982"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.618" endtime="20201029 09:34:06.982"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.617" endtime="20201029 09:34:06.982"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.990" endtime="20201029 09:34:07.002"></status>
</kw>
<msg timestamp="20201029 09:34:07.002" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.989" endtime="20201029 09:34:07.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.005" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:07.003" endtime="20201029 09:34:07.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.006" endtime="20201029 09:34:07.007"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.986" endtime="20201029 09:34:07.008"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.984" endtime="20201029 09:34:07.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.015" endtime="20201029 09:34:07.325"></status>
</kw>
<msg timestamp="20201029 09:34:07.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.762111847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.762112569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:07.013" endtime="20201029 09:34:07.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.762111847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.762112569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:07.330" endtime="20201029 09:34:07.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.340" endtime="20201029 09:34:07.342"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.011" endtime="20201029 09:34:07.342"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.009" endtime="20201029 09:34:07.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:07.347" level="INFO">${RESULT} = [{'diff': 7.220000000085491e-07}, {'diff': 7.35999999945669e-07}, {'diff': 7.35999999945669e-07}, {'diff': 7.35999999945669e-07}, {'diff': 6.519999999898829e-07}, {'diff': 7.220000000085491e-07}, {'di...</msg>
<status status="PASS" starttime="20201029 09:34:07.344" endtime="20201029 09:34:07.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:07.352" level="INFO">${OVERHEAD} = {'diff': [7.220000000085491e-07, 7.35999999945669e-07, 7.35999999945669e-07, 7.35999999945669e-07, 6.519999999898829e-07, 7.220000000085491e-07, 7.370000000284094e-07, 7.35999999945669e-07, 7.22000000...</msg>
<status status="PASS" starttime="20201029 09:34:07.348" endtime="20201029 09:34:07.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.357" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:07.356" endtime="20201029 09:34:07.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.359" level="INFO">VALUE: [7.220000000085491e-07, 7.35999999945669e-07, 7.35999999945669e-07, 7.35999999945669e-07, 6.519999999898829e-07, 7.220000000085491e-07, 7.370000000284094e-07, 7.35999999945669e-07, 7.220000000085491e-07, 7.230000000912895e-07, 7.220000000085491e-07, 7.35999999945669e-07, 7.220000000085491e-07, 7.220000000085491e-07, 1.0969999999499436e-06, 7.500000001048335e-07, 7.089999998211027e-07, 7.359999998346467e-07, 7.359999998346467e-07, 7.229999998692449e-07, 6.519999999898829e-07, 7.63999999930931e-07, 7.920000000272154e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.229999998692449e-07, 7.360000000566913e-07, 7.359999998346467e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.499999998827889e-07, 7.359999998346467e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.500000001048335e-07, 7.230000000912895e-07, 7.220000000085491e-07, 7.369999999173871e-07, 7.369999999173871e-07, 7.220000000085491e-07, 7.920000000272154e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.359999998346467e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.359999998346467e-07, 7.360000000566913e-07, 6.939999999122648e-07, 7.230000000912895e-07, 7.359999998346467e-07, 7.499999998827889e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.360000000566913e-07]</msg>
<status status="PASS" starttime="20201029 09:34:07.358" endtime="20201029 09:34:07.360"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.353" endtime="20201029 09:34:07.360"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.983" endtime="20201029 09:34:07.361"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.983" endtime="20201029 09:34:07.361"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.370" endtime="20201029 09:34:07.381"></status>
</kw>
<msg timestamp="20201029 09:34:07.382" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:07.368" endtime="20201029 09:34:07.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.384" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:07.383" endtime="20201029 09:34:07.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.386" endtime="20201029 09:34:07.387"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.365" endtime="20201029 09:34:07.388"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.363" endtime="20201029 09:34:07.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.395" endtime="20201029 09:34:07.720"></status>
</kw>
<msg timestamp="20201029 09:34:07.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.118418986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.118419722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:07.393" endtime="20201029 09:34:07.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.118418986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.118419722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:07.725" endtime="20201029 09:34:07.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.735" endtime="20201029 09:34:07.737"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.391" endtime="20201029 09:34:07.738"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.389" endtime="20201029 09:34:07.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:07.742" level="INFO">${RESULT} = [{'diff': 7.360000000566913e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.359999998346467e-07}, {'diff': 7.360000000566913e-07}, {'diff': 6.939999999122648e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:34:07.739" endtime="20201029 09:34:07.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:07.748" level="INFO">${OVERHEAD} = {'diff': [7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.359999998346467e-07, 7.360000000566913e-07, 6.939999999122648e-07, 7.230000000912895e-07, 7.359999998346467e-07, 7.4999...</msg>
<status status="PASS" starttime="20201029 09:34:07.743" endtime="20201029 09:34:07.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.752" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:07.751" endtime="20201029 09:34:07.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.755" level="INFO">VALUE: [7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.359999998346467e-07, 7.360000000566913e-07, 6.939999999122648e-07, 7.230000000912895e-07, 7.359999998346467e-07, 7.499999998827889e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.360000000566913e-07, 1.0969999999499436e-06, 7.370000001394317e-07, 7.229999998692449e-07, 7.090000000431473e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.07999999960407e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.779999999790732e-07, 7.07999999960407e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.090000000431473e-07, 7.220000000085491e-07, 7.370000001394317e-07, 7.359999998346467e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.359999998346467e-07, 7.360000000566913e-07, 7.359999998346467e-07, 7.369999999173871e-07, 7.360000000566913e-07, 7.359999998346467e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.359999998346467e-07, 7.370000001394317e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.359999998346467e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.230000000912895e-07, 7.219999997865045e-07, 6.949999999950052e-07, 7.090000000431473e-07, 7.220000000085491e-07, 6.80999999946863e-07, 6.940000001343094e-07]</msg>
<status status="PASS" starttime="20201029 09:34:07.753" endtime="20201029 09:34:07.755"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.749" endtime="20201029 09:34:07.755"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.362" endtime="20201029 09:34:07.756"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.361" endtime="20201029 09:34:07.756"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.764" endtime="20201029 09:34:07.775"></status>
</kw>
<msg timestamp="20201029 09:34:07.775" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:07.762" endtime="20201029 09:34:07.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.778" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:07.776" endtime="20201029 09:34:07.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.779" endtime="20201029 09:34:07.780"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.760" endtime="20201029 09:34:07.781"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.758" endtime="20201029 09:34:07.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.788" endtime="20201029 09:34:08.080"></status>
</kw>
<msg timestamp="20201029 09:34:08.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.488182042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.488182764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:07.786" endtime="20201029 09:34:08.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.488182042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.488182764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:08.085" endtime="20201029 09:34:08.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.095" endtime="20201029 09:34:08.097"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.784" endtime="20201029 09:34:08.098"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.782" endtime="20201029 09:34:08.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:08.102" level="INFO">${RESULT} = [{'diff': 7.220000000085491e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.220000000085491e-07}, {'diff': 7.359999998346467e-07}, {'diff': 7.220000000085491e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:34:08.099" endtime="20201029 09:34:08.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:08.108" level="INFO">${OVERHEAD} = {'diff': [7.220000000085491e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.359999998346467e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.230000000912895e-07, 7.2199...</msg>
<status status="PASS" starttime="20201029 09:34:08.103" endtime="20201029 09:34:08.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.112" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:08.111" endtime="20201029 09:34:08.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.115" level="INFO">VALUE: [7.220000000085491e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.359999998346467e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.230000000912895e-07, 7.219999997865045e-07, 6.949999999950052e-07, 7.090000000431473e-07, 7.220000000085491e-07, 6.80999999946863e-07, 6.940000001343094e-07, 1.1109999999980857e-06, 7.360000000566913e-07, 7.07999999960407e-07, 7.359999998346467e-07, 7.360000000566913e-07, 7.359999998346467e-07, 7.219999997865045e-07, 7.220000000085491e-07, 7.230000000912895e-07, 7.220000000085491e-07, 6.530000000726233e-07, 7.360000000566913e-07, 7.230000000912895e-07, 7.07999999960407e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.230000000912895e-07, 7.229999998692449e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.230000000912895e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.359999998346467e-07, 7.359999998346467e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.359999998346467e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000000085491e-07, 6.949999999950052e-07, 7.360000000566913e-07, 7.360000000566913e-07, 6.939999999122648e-07, 7.07999999960407e-07, 7.220000000085491e-07, 7.499999998827889e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.499999998827889e-07, 7.230000000912895e-07, 7.359999998346467e-07, 7.360000000566913e-07]</msg>
<status status="PASS" starttime="20201029 09:34:08.113" endtime="20201029 09:34:08.115"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.109" endtime="20201029 09:34:08.116"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.757" endtime="20201029 09:34:08.116"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.756" endtime="20201029 09:34:08.116"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.124" endtime="20201029 09:34:08.135"></status>
</kw>
<msg timestamp="20201029 09:34:08.135" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.122" endtime="20201029 09:34:08.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.138" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.136" endtime="20201029 09:34:08.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.139" endtime="20201029 09:34:08.140"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.120" endtime="20201029 09:34:08.141"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.118" endtime="20201029 09:34:08.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.148" endtime="20201029 09:34:08.456"></status>
</kw>
<msg timestamp="20201029 09:34:08.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.8710305, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.871031222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:08.146" endtime="20201029 09:34:08.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.8710305, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.871031222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:08.461" endtime="20201029 09:34:08.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.471" endtime="20201029 09:34:08.473"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.144" endtime="20201029 09:34:08.473"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.142" endtime="20201029 09:34:08.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:08.478" level="INFO">${RESULT} = [{'diff': 7.220000000085491e-07}, {'diff': 6.949999999950052e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.360000000566913e-07}, {'diff': 6.939999999122648e-07}, {'diff': 7.07999999960407e-07}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:08.474" endtime="20201029 09:34:08.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:08.483" level="INFO">${OVERHEAD} = {'diff': [7.220000000085491e-07, 6.949999999950052e-07, 7.360000000566913e-07, 7.360000000566913e-07, 6.939999999122648e-07, 7.07999999960407e-07, 7.220000000085491e-07, 7.499999998827889e-07, 7.22000...</msg>
<status status="PASS" starttime="20201029 09:34:08.479" endtime="20201029 09:34:08.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.487" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:08.486" endtime="20201029 09:34:08.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.490" level="INFO">VALUE: [7.220000000085491e-07, 6.949999999950052e-07, 7.360000000566913e-07, 7.360000000566913e-07, 6.939999999122648e-07, 7.07999999960407e-07, 7.220000000085491e-07, 7.499999998827889e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.499999998827889e-07, 7.230000000912895e-07, 7.359999998346467e-07, 7.360000000566913e-07, 1.0690000000757038e-06, 7.229999998692449e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.229999998692449e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.359999996126021e-07, 7.07999999960407e-07, 7.219999997865045e-07, 7.219999997865045e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.499999998827889e-07, 7.500000003268781e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.220000002305937e-07, 6.520000002119275e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.359999996126021e-07, 7.229999998692449e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.779999999790732e-07, 7.779999999790732e-07, 7.07999999960407e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.229999998692449e-07, 7.230000003133341e-07, 7.220000002305937e-07, 7.229999998692449e-07, 7.500000003268781e-07, 7.360000000566913e-07, 7.229999998692449e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.359999996126021e-07]</msg>
<status status="PASS" starttime="20201029 09:34:08.488" endtime="20201029 09:34:08.490"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.484" endtime="20201029 09:34:08.491"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.117" endtime="20201029 09:34:08.491"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.117" endtime="20201029 09:34:08.491"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.500" endtime="20201029 09:34:08.511"></status>
</kw>
<msg timestamp="20201029 09:34:08.511" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.498" endtime="20201029 09:34:08.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.514" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.512" endtime="20201029 09:34:08.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.515" endtime="20201029 09:34:08.516"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.496" endtime="20201029 09:34:08.517"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.493" endtime="20201029 09:34:08.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.524" endtime="20201029 09:34:08.835"></status>
</kw>
<msg timestamp="20201029 09:34:08.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.222323708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.222324444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:08.522" endtime="20201029 09:34:08.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.222323708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.222324444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:08.840" endtime="20201029 09:34:08.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.850" endtime="20201029 09:34:08.852"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.520" endtime="20201029 09:34:08.852"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.518" endtime="20201029 09:34:08.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:08.857" level="INFO">${RESULT} = [{'diff': 7.360000000566913e-07}, {'diff': 7.219999997865045e-07}, {'diff': 7.219999997865045e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.229999998692449e-07}, {'diff': 7.230000003133341e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:34:08.853" endtime="20201029 09:34:08.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:08.863" level="INFO">${OVERHEAD} = {'diff': [7.360000000566913e-07, 7.219999997865045e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.229999998692449e-07, 7.230000003133341e-07, 7.220000002305937e-07, 7.229999998692449e-07, 7.5000...</msg>
<status status="PASS" starttime="20201029 09:34:08.858" endtime="20201029 09:34:08.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.867" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:08.866" endtime="20201029 09:34:08.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.869" level="INFO">VALUE: [7.360000000566913e-07, 7.219999997865045e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.229999998692449e-07, 7.230000003133341e-07, 7.220000002305937e-07, 7.229999998692449e-07, 7.500000003268781e-07, 7.360000000566913e-07, 7.229999998692449e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.359999996126021e-07, 1.096999999727899e-06, 7.360000000566913e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.499999998827889e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.07999999960407e-07, 8.19000000262804e-07, 7.07999999960407e-07, 7.360000000566913e-07, 6.810000003909522e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.090000000431473e-07, 7.219999997865045e-07, 7.219999997865045e-07, 6.940000001343094e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.360000000566913e-07, 6.949999997729606e-07, 7.220000002305937e-07, 7.219999997865045e-07, 7.219999997865045e-07, 7.370000001394317e-07, 7.219999997865045e-07, 7.080000004044962e-07, 7.090000000431473e-07, 7.07999999960407e-07, 7.359999996126021e-07, 7.229999998692449e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.220000002305937e-07, 7.089999995990581e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.07999999960407e-07, 7.499999998827889e-07, 7.360000000566913e-07, 7.220000002305937e-07]</msg>
<status status="PASS" starttime="20201029 09:34:08.868" endtime="20201029 09:34:08.870"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.863" endtime="20201029 09:34:08.870"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.492" endtime="20201029 09:34:08.871"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.492" endtime="20201029 09:34:08.871"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.878" endtime="20201029 09:34:08.890"></status>
</kw>
<msg timestamp="20201029 09:34:08.890" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.877" endtime="20201029 09:34:08.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.893" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.891" endtime="20201029 09:34:08.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.894" endtime="20201029 09:34:08.895"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.874" endtime="20201029 09:34:08.896"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.873" endtime="20201029 09:34:08.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.902" endtime="20201029 09:34:09.226"></status>
</kw>
<msg timestamp="20201029 09:34:09.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.588211333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.588212042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:08.901" endtime="20201029 09:34:09.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.588211333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.588212042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:09.231" endtime="20201029 09:34:09.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.241" endtime="20201029 09:34:09.243"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.898" endtime="20201029 09:34:09.243"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.897" endtime="20201029 09:34:09.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:09.249" level="INFO">${RESULT} = [{'diff': 7.090000000431473e-07}, {'diff': 7.07999999960407e-07}, {'diff': 7.359999996126021e-07}, {'diff': 7.229999998692449e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.07999999960407e-07}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:09.245" endtime="20201029 09:34:09.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:09.254" level="INFO">${OVERHEAD} = {'diff': [7.090000000431473e-07, 7.07999999960407e-07, 7.359999996126021e-07, 7.229999998692449e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.220000002305937e-07, 7.089999995990581e-07, 7.220000...</msg>
<status status="PASS" starttime="20201029 09:34:09.251" endtime="20201029 09:34:09.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.259" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:09.258" endtime="20201029 09:34:09.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.261" level="INFO">VALUE: [7.090000000431473e-07, 7.07999999960407e-07, 7.359999996126021e-07, 7.229999998692449e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.220000002305937e-07, 7.089999995990581e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.07999999960407e-07, 7.499999998827889e-07, 7.360000000566913e-07, 7.220000002305937e-07, 1.0140000004099647e-06, 7.219999997865045e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.640000001529756e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.090000000431473e-07, 7.219999997865045e-07, 7.090000000431473e-07, 7.360000000566913e-07, 7.370000001394317e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.500000003268781e-07, 7.07999999960407e-07, 7.359999996126021e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.229999998692449e-07, 7.499999998827889e-07, 7.360000000566913e-07, 7.499999998827889e-07, 7.499999998827889e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.07999999960407e-07, 7.360000000566913e-07, 7.370000001394317e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.089999995990581e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.499999998827889e-07, 7.219999997865045e-07, 7.220000002305937e-07, 7.499999998827889e-07, 7.07999999960407e-07, 7.499999998827889e-07, 7.360000000566913e-07, 7.359999996126021e-07]</msg>
<status status="PASS" starttime="20201029 09:34:09.260" endtime="20201029 09:34:09.262"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.255" endtime="20201029 09:34:09.262"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.871" endtime="20201029 09:34:09.263"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.871" endtime="20201029 09:34:09.263"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.271" endtime="20201029 09:34:09.282"></status>
</kw>
<msg timestamp="20201029 09:34:09.283" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:09.269" endtime="20201029 09:34:09.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.285" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:09.284" endtime="20201029 09:34:09.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.286" endtime="20201029 09:34:09.288"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.267" endtime="20201029 09:34:09.288"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.265" endtime="20201029 09:34:09.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.297" endtime="20201029 09:34:09.606"></status>
</kw>
<msg timestamp="20201029 09:34:09.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.957758278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.957759, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:34:09.295" endtime="20201029 09:34:09.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.957758278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.957759, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:34:09.611" endtime="20201029 09:34:09.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.621" endtime="20201029 09:34:09.623"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.291" endtime="20201029 09:34:09.623"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.289" endtime="20201029 09:34:09.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:09.629" level="INFO">${RESULT} = [{'diff': 7.219999997865045e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.07999999960407e-07}, {'diff': 7.089999995990581e-07}, {'diff': 7.219999997865045e-07}, {'diff': 7.360000000566913e-07}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:09.625" endtime="20201029 09:34:09.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:09.636" level="INFO">${OVERHEAD} = {'diff': [7.219999997865045e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.089999995990581e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.499999998827889e-07, 7.219999997865045e-07, 7.22000...</msg>
<status status="PASS" starttime="20201029 09:34:09.630" endtime="20201029 09:34:09.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.642" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:09.639" endtime="20201029 09:34:09.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.647" level="INFO">VALUE: [7.219999997865045e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.089999995990581e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.499999998827889e-07, 7.219999997865045e-07, 7.220000002305937e-07, 7.499999998827889e-07, 7.07999999960407e-07, 7.499999998827889e-07, 7.360000000566913e-07, 7.359999996126021e-07, 1.0559999998882574e-06, 7.360000000566913e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.500000003268781e-07, 7.359999996126021e-07, 7.090000000431473e-07, 7.07999999960407e-07, 6.950000002170498e-07, 7.499999998827889e-07, 7.219999997865045e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.359999996126021e-07, 7.360000000566913e-07, 7.369999996953425e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.499999998827889e-07, 6.80999999946863e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.360000000566913e-07, 6.949999997729606e-07, 7.769999998963328e-07, 7.499999998827889e-07, 7.229999998692449e-07, 7.370000001394317e-07, 7.9200000024926e-07, 7.499999998827889e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.219999997865045e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.230000003133341e-07, 7.220000002305937e-07, 7.370000001394317e-07, 7.360000000566913e-07, 7.499999998827889e-07, 6.80999999946863e-07]</msg>
<status status="PASS" starttime="20201029 09:34:09.645" endtime="20201029 09:34:09.647"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.637" endtime="20201029 09:34:09.648"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.264" endtime="20201029 09:34:09.648"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.263" endtime="20201029 09:34:09.649"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.662" endtime="20201029 09:34:09.673"></status>
</kw>
<msg timestamp="20201029 09:34:09.674" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:09.658" endtime="20201029 09:34:09.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.676" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:09.675" endtime="20201029 09:34:09.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.677" endtime="20201029 09:34:09.679"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.655" endtime="20201029 09:34:09.679"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.653" endtime="20201029 09:34:09.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.686" endtime="20201029 09:34:10.014"></status>
</kw>
<msg timestamp="20201029 09:34:10.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.341431722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.341432514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:09.684" endtime="20201029 09:34:10.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.341431722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.341432514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:10.018" endtime="20201029 09:34:10.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.029" endtime="20201029 09:34:10.030"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.682" endtime="20201029 09:34:10.031"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.680" endtime="20201029 09:34:10.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:10.035" level="INFO">${RESULT} = [{'diff': 7.9200000024926e-07}, {'diff': 7.499999998827889e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.219999997865045e-07}, {'diff': 7.219999997865045e-07}, {'diff': 7.219999997865045e-07}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:10.032" endtime="20201029 09:34:10.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:10.041" level="INFO">${OVERHEAD} = {'diff': [7.9200000024926e-07, 7.499999998827889e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.219999997865045e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.230000...</msg>
<status status="PASS" starttime="20201029 09:34:10.036" endtime="20201029 09:34:10.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.045" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:10.044" endtime="20201029 09:34:10.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.048" level="INFO">VALUE: [7.9200000024926e-07, 7.499999998827889e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.219999997865045e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.230000003133341e-07, 7.220000002305937e-07, 7.370000001394317e-07, 7.360000000566913e-07, 7.499999998827889e-07, 6.80999999946863e-07, 1.1389999996502809e-06, 7.639999997088864e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.499999998827889e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.229999998692449e-07, 7.359999996126021e-07, 7.360000000566913e-07, 7.779999999790732e-07, 7.220000002305937e-07, 7.369999996953425e-07, 7.219999997865045e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.779999999790732e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.499999998827889e-07, 7.220000002305937e-07, 7.359999996126021e-07, 6.950000002170498e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.500000003268781e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07, 6.949999997729606e-07, 7.07999999960407e-07, 7.360000000566913e-07, 7.370000001394317e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.229999998692449e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.360000000566913e-07]</msg>
<status status="PASS" starttime="20201029 09:34:10.046" endtime="20201029 09:34:10.048"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.042" endtime="20201029 09:34:10.049"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.651" endtime="20201029 09:34:10.049"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.649" endtime="20201029 09:34:10.049"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.057" endtime="20201029 09:34:10.068"></status>
</kw>
<msg timestamp="20201029 09:34:10.068" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.055" endtime="20201029 09:34:10.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.071" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.069" endtime="20201029 09:34:10.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.072" endtime="20201029 09:34:10.073"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.053" endtime="20201029 09:34:10.074"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.051" endtime="20201029 09:34:10.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.081" endtime="20201029 09:34:10.398"></status>
</kw>
<msg timestamp="20201029 09:34:10.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.720876111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.720876833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:10.079" endtime="20201029 09:34:10.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.720876111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.720876833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:10.403" endtime="20201029 09:34:10.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.416" endtime="20201029 09:34:10.417"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.076" endtime="20201029 09:34:10.418"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.075" endtime="20201029 09:34:10.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:10.422" level="INFO">${RESULT} = [{'diff': 7.220000002305937e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.07999999960407e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.360000000566913e-07}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:10.419" endtime="20201029 09:34:10.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:10.428" level="INFO">${OVERHEAD} = {'diff': [7.220000002305937e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.21999...</msg>
<status status="PASS" starttime="20201029 09:34:10.423" endtime="20201029 09:34:10.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.434" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:10.432" endtime="20201029 09:34:10.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.438" level="INFO">VALUE: [7.220000002305937e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.229999998692449e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.360000000566913e-07, 1.069999999714355e-06, 8.19000000262804e-07, 7.499999998827889e-07, 7.360000005007805e-07, 7.090000000431473e-07, 6.95000000661139e-07, 7.219999993424153e-07, 7.359999996126021e-07, 7.219999993424153e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.780000004231624e-07, 7.220000002305937e-07, 7.090000000431473e-07, 6.810000003909522e-07, 7.229999994251557e-07, 7.359999996126021e-07, 7.090000000431473e-07, 7.07999999960407e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.07999999960407e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.369999996953425e-07, 7.77999999534984e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.359999996126021e-07, 6.940000005783986e-07, 7.229999994251557e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.499999998827889e-07, 7.360000005007805e-07, 7.229999994251557e-07, 7.220000002305937e-07, 7.229999994251557e-07, 7.369999996953425e-07, 7.230000003133341e-07, 7.359999996126021e-07, 7.220000002305937e-07]</msg>
<status status="PASS" starttime="20201029 09:34:10.435" endtime="20201029 09:34:10.439"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.430" endtime="20201029 09:34:10.440"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.050" endtime="20201029 09:34:10.441"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.049" endtime="20201029 09:34:10.441"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.450" endtime="20201029 09:34:10.463"></status>
</kw>
<msg timestamp="20201029 09:34:10.463" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.448" endtime="20201029 09:34:10.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.466" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.464" endtime="20201029 09:34:10.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.467" endtime="20201029 09:34:10.468"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.445" endtime="20201029 09:34:10.469"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.443" endtime="20201029 09:34:10.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.476" endtime="20201029 09:34:10.787"></status>
</kw>
<msg timestamp="20201029 09:34:10.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.105131306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.105132, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:34:10.474" endtime="20201029 09:34:10.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.105131306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.105132, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:34:10.792" endtime="20201029 09:34:10.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.802" endtime="20201029 09:34:10.804"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.472" endtime="20201029 09:34:10.805"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.470" endtime="20201029 09:34:10.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:10.809" level="INFO">${RESULT} = [{'diff': 6.940000005783986e-07}, {'diff': 7.229999994251557e-07}, {'diff': 7.220000002305937e-07}, {'diff': 7.359999996126021e-07}, {'diff': 7.359999996126021e-07}, {'diff': 7.499999998827889e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:34:10.806" endtime="20201029 09:34:10.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:10.815" level="INFO">${OVERHEAD} = {'diff': [6.940000005783986e-07, 7.229999994251557e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.499999998827889e-07, 7.360000005007805e-07, 7.229999994251557e-07, 7.2200...</msg>
<status status="PASS" starttime="20201029 09:34:10.810" endtime="20201029 09:34:10.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.819" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:10.818" endtime="20201029 09:34:10.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.822" level="INFO">VALUE: [6.940000005783986e-07, 7.229999994251557e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.499999998827889e-07, 7.360000005007805e-07, 7.229999994251557e-07, 7.220000002305937e-07, 7.229999994251557e-07, 7.369999996953425e-07, 7.230000003133341e-07, 7.359999996126021e-07, 7.220000002305937e-07, 1.0829999999018014e-06, 7.07999999960407e-07, 6.939999996902202e-07, 7.07999999960407e-07, 6.810000003909522e-07, 7.359999996126021e-07, 7.080000008485854e-07, 7.359999996126021e-07, 7.359999996126021e-07, 6.800000003082118e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.499999998827889e-07, 7.359999996126021e-07, 7.369999996953425e-07, 7.090000000431473e-07, 7.230000003133341e-07, 7.07999999960407e-07, 7.500000007709673e-07, 7.07999999960407e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.219999993424153e-07, 7.230000003133341e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.77999999534984e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.369999996953425e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.07999999960407e-07, 7.499999998827889e-07, 7.219999993424153e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.230000003133341e-07, 7.359999996126021e-07, 7.229999994251557e-07, 7.359999996126021e-07, 7.230000003133341e-07, 7.360000005007805e-07]</msg>
<status status="PASS" starttime="20201029 09:34:10.820" endtime="20201029 09:34:10.822"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.816" endtime="20201029 09:34:10.823"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.442" endtime="20201029 09:34:10.823"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.442" endtime="20201029 09:34:10.823"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.831" endtime="20201029 09:34:10.842"></status>
</kw>
<msg timestamp="20201029 09:34:10.843" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.829" endtime="20201029 09:34:10.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.845" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.844" endtime="20201029 09:34:10.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.846" endtime="20201029 09:34:10.848"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.827" endtime="20201029 09:34:10.848"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.825" endtime="20201029 09:34:10.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.855" endtime="20201029 09:34:11.173"></status>
</kw>
<msg timestamp="20201029 09:34:11.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.488861625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.488862347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:10.854" endtime="20201029 09:34:11.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.488861625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.488862347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:11.178" endtime="20201029 09:34:11.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.188" endtime="20201029 09:34:11.190"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.851" endtime="20201029 09:34:11.190"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.849" endtime="20201029 09:34:11.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:11.195" level="INFO">${RESULT} = [{'diff': 7.220000002305937e-07}, {'diff': 7.360000005007805e-07}, {'diff': 7.359999996126021e-07}, {'diff': 7.07999999960407e-07}, {'diff': 7.499999998827889e-07}, {'diff': 7.219999993424153e-07}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:11.192" endtime="20201029 09:34:11.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:11.202" level="INFO">${OVERHEAD} = {'diff': [7.220000002305937e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.07999999960407e-07, 7.499999998827889e-07, 7.219999993424153e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.23000...</msg>
<status status="PASS" starttime="20201029 09:34:11.196" endtime="20201029 09:34:11.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.206" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:11.205" endtime="20201029 09:34:11.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.209" level="INFO">VALUE: [7.220000002305937e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.07999999960407e-07, 7.499999998827889e-07, 7.219999993424153e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.230000003133341e-07, 7.359999996126021e-07, 7.229999994251557e-07, 7.359999996126021e-07, 7.230000003133341e-07, 7.360000005007805e-07, 1.0559999994441682e-06, 7.359999996126021e-07, 7.360000005007805e-07, 7.219999993424153e-07, 7.370000005835209e-07, 7.359999996126021e-07, 7.219999993424153e-07, 7.219999993424153e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.219999993424153e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.07999999960407e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.369999996953425e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.219999993424153e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.220000002305937e-07, 6.809999995027738e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.369999996953425e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.230000003133341e-07, 7.369999996953425e-07, 7.220000002305937e-07, 7.230000003133341e-07, 7.220000002305937e-07, 7.219999993424153e-07, 7.220000002305937e-07, 7.369999996953425e-07, 7.370000005835209e-07, 7.499999998827889e-07, 7.360000005007805e-07]</msg>
<status status="PASS" starttime="20201029 09:34:11.207" endtime="20201029 09:34:11.209"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.203" endtime="20201029 09:34:11.210"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.824" endtime="20201029 09:34:11.210"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.823" endtime="20201029 09:34:11.210"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.218" endtime="20201029 09:34:11.229"></status>
</kw>
<msg timestamp="20201029 09:34:11.230" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.217" endtime="20201029 09:34:11.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.232" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.231" endtime="20201029 09:34:11.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.233" endtime="20201029 09:34:11.235"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.214" endtime="20201029 09:34:11.235"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.212" endtime="20201029 09:34:11.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.242" endtime="20201029 09:34:11.559"></status>
</kw>
<msg timestamp="20201029 09:34:11.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.859156333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.859157069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:11.241" endtime="20201029 09:34:11.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.859156333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.859157069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:11.564" endtime="20201029 09:34:11.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.574" endtime="20201029 09:34:11.576"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.238" endtime="20201029 09:34:11.576"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.236" endtime="20201029 09:34:11.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:11.581" level="INFO">${RESULT} = [{'diff': 7.360000005007805e-07}, {'diff': 7.220000002305937e-07}, {'diff': 7.220000002305937e-07}, {'diff': 7.230000003133341e-07}, {'diff': 7.369999996953425e-07}, {'diff': 7.220000002305937e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:34:11.577" endtime="20201029 09:34:11.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:11.585" level="INFO">${OVERHEAD} = {'diff': [7.360000005007805e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.230000003133341e-07, 7.369999996953425e-07, 7.220000002305937e-07, 7.230000003133341e-07, 7.220000002305937e-07, 7.2199...</msg>
<status status="PASS" starttime="20201029 09:34:11.582" endtime="20201029 09:34:11.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.590" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:11.588" endtime="20201029 09:34:11.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.592" level="INFO">VALUE: [7.360000005007805e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.230000003133341e-07, 7.369999996953425e-07, 7.220000002305937e-07, 7.230000003133341e-07, 7.220000002305937e-07, 7.219999993424153e-07, 7.220000002305937e-07, 7.369999996953425e-07, 7.370000005835209e-07, 7.499999998827889e-07, 7.360000005007805e-07, 1.0829999999018014e-06, 7.640000001529756e-07, 7.07999999960407e-07, 7.230000003133341e-07, 6.810000003909522e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.089999991549689e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.219999993424153e-07, 7.369999996953425e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.369999996953425e-07, 7.359999996126021e-07, 7.499999998827889e-07, 7.220000002305937e-07, 7.500000007709673e-07, 7.220000002305937e-07, 6.939999996902202e-07, 7.220000002305937e-07, 7.500000007709673e-07, 7.499999998827889e-07, 7.219999993424153e-07, 8.200000003455443e-07, 7.07999999960407e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.369999996953425e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.230000003133341e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.500000007709673e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.219999993424153e-07]</msg>
<status status="PASS" starttime="20201029 09:34:11.591" endtime="20201029 09:34:11.592"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.586" endtime="20201029 09:34:11.593"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.211" endtime="20201029 09:34:11.593"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.211" endtime="20201029 09:34:11.593"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.602" endtime="20201029 09:34:11.613"></status>
</kw>
<msg timestamp="20201029 09:34:11.614" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.601" endtime="20201029 09:34:11.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.616" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.615" endtime="20201029 09:34:11.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.617" endtime="20201029 09:34:11.619"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.597" endtime="20201029 09:34:11.619"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.595" endtime="20201029 09:34:11.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.626" endtime="20201029 09:34:11.938"></status>
</kw>
<msg timestamp="20201029 09:34:11.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.234974681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.234975417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:11.625" endtime="20201029 09:34:11.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.234974681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.234975417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:11.948" endtime="20201029 09:34:11.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.958" endtime="20201029 09:34:11.959"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.622" endtime="20201029 09:34:11.960"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.620" endtime="20201029 09:34:11.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:11.964" level="INFO">${RESULT} = [{'diff': 7.360000005007805e-07}, {'diff': 7.369999996953425e-07}, {'diff': 7.360000005007805e-07}, {'diff': 7.359999996126021e-07}, {'diff': 7.360000005007805e-07}, {'diff': 7.220000002305937e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:34:11.961" endtime="20201029 09:34:11.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:11.970" level="INFO">${OVERHEAD} = {'diff': [7.360000005007805e-07, 7.369999996953425e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.230000003133341e-07, 7.3600...</msg>
<status status="PASS" starttime="20201029 09:34:11.965" endtime="20201029 09:34:11.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.974" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:11.973" endtime="20201029 09:34:11.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.976" level="INFO">VALUE: [7.360000005007805e-07, 7.369999996953425e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.230000003133341e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.500000007709673e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.219999993424153e-07, 1.0830000007899798e-06, 7.219999993424153e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.219999993424153e-07, 7.220000002305937e-07, 7.639999992647972e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.369999996953425e-07, 7.089999991549689e-07, 7.07999999960407e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.229999994251557e-07, 7.220000002305937e-07, 6.949999997729606e-07, 7.230000003133341e-07, 7.07999999960407e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.219999993424153e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.369999996953425e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.090000000431473e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.369999996953425e-07, 7.230000003133341e-07, 7.370000005835209e-07, 7.219999993424153e-07, 7.07999999960407e-07, 7.219999993424153e-07, 7.07999999960407e-07, 7.369999996953425e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.359999996126021e-07]</msg>
<status status="PASS" starttime="20201029 09:34:11.975" endtime="20201029 09:34:11.977"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.971" endtime="20201029 09:34:11.977"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.594" endtime="20201029 09:34:11.978"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.594" endtime="20201029 09:34:11.978"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.986" endtime="20201029 09:34:11.997"></status>
</kw>
<msg timestamp="20201029 09:34:11.997" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.984" endtime="20201029 09:34:11.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.000" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.998" endtime="20201029 09:34:12.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.001" endtime="20201029 09:34:12.002"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.982" endtime="20201029 09:34:12.003"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.980" endtime="20201029 09:34:12.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.010" endtime="20201029 09:34:12.322"></status>
</kw>
<msg timestamp="20201029 09:34:12.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.608613889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.608614611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:12.008" endtime="20201029 09:34:12.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.608613889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.608614611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:12.327" endtime="20201029 09:34:12.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.337" endtime="20201029 09:34:12.339"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.006" endtime="20201029 09:34:12.340"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.004" endtime="20201029 09:34:12.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:12.344" level="INFO">${RESULT} = [{'diff': 7.220000002305937e-07}, {'diff': 7.369999996953425e-07}, {'diff': 7.230000003133341e-07}, {'diff': 7.370000005835209e-07}, {'diff': 7.219999993424153e-07}, {'diff': 7.07999999960407e-07}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:12.341" endtime="20201029 09:34:12.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:12.350" level="INFO">${OVERHEAD} = {'diff': [7.220000002305937e-07, 7.369999996953425e-07, 7.230000003133341e-07, 7.370000005835209e-07, 7.219999993424153e-07, 7.07999999960407e-07, 7.219999993424153e-07, 7.07999999960407e-07, 7.369999...</msg>
<status status="PASS" starttime="20201029 09:34:12.345" endtime="20201029 09:34:12.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.354" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:12.353" endtime="20201029 09:34:12.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.357" level="INFO">VALUE: [7.220000002305937e-07, 7.369999996953425e-07, 7.230000003133341e-07, 7.370000005835209e-07, 7.219999993424153e-07, 7.07999999960407e-07, 7.219999993424153e-07, 7.07999999960407e-07, 7.369999996953425e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.359999996126021e-07, 1.0970000001719882e-06, 7.219999993424153e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.639999992647972e-07, 7.499999998827889e-07, 7.360000005007805e-07, 7.229999994251557e-07, 7.220000002305937e-07, 6.940000005783986e-07, 7.07999999960407e-07, 7.230000003133341e-07, 7.360000005007805e-07, 7.919999998051708e-07, 7.920000006933492e-07, 7.229999994251557e-07, 7.230000003133341e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.07999999960407e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.230000003133341e-07, 7.219999993424153e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.370000005835209e-07, 7.07999999960407e-07, 7.230000003133341e-07, 7.499999998827889e-07, 7.219999993424153e-07, 6.660000000380251e-07, 6.529999998505787e-07, 7.220000002305937e-07, 7.499999998827889e-07, 7.359999996126021e-07, 7.360000005007805e-07, 6.810000003909522e-07, 7.07999999960407e-07, 7.220000002305937e-07, 7.090000000431473e-07]</msg>
<status status="PASS" starttime="20201029 09:34:12.355" endtime="20201029 09:34:12.357"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.351" endtime="20201029 09:34:12.358"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.979" endtime="20201029 09:34:12.358"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.978" endtime="20201029 09:34:12.358"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.366" endtime="20201029 09:34:12.376"></status>
</kw>
<msg timestamp="20201029 09:34:12.377" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:12.364" endtime="20201029 09:34:12.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.379" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:12.378" endtime="20201029 09:34:12.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.380" endtime="20201029 09:34:12.382"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.362" endtime="20201029 09:34:12.382"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.360" endtime="20201029 09:34:12.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.391" endtime="20201029 09:34:12.695"></status>
</kw>
<msg timestamp="20201029 09:34:12.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.982252903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.982253611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:12.389" endtime="20201029 09:34:12.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.982252903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.982253611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:12.701" endtime="20201029 09:34:12.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.712" endtime="20201029 09:34:12.713"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.385" endtime="20201029 09:34:12.714"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.383" endtime="20201029 09:34:12.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:12.720" level="INFO">${RESULT} = [{'diff': 7.07999999960407e-07}, {'diff': 7.230000003133341e-07}, {'diff': 7.499999998827889e-07}, {'diff': 7.219999993424153e-07}, {'diff': 6.660000000380251e-07}, {'diff': 6.529999998505787e-07}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:12.716" endtime="20201029 09:34:12.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:12.725" level="INFO">${OVERHEAD} = {'diff': [7.07999999960407e-07, 7.230000003133341e-07, 7.499999998827889e-07, 7.219999993424153e-07, 6.660000000380251e-07, 6.529999998505787e-07, 7.220000002305937e-07, 7.499999998827889e-07, 7.35999...</msg>
<status status="PASS" starttime="20201029 09:34:12.721" endtime="20201029 09:34:12.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.730" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:12.729" endtime="20201029 09:34:12.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.734" level="INFO">VALUE: [7.07999999960407e-07, 7.230000003133341e-07, 7.499999998827889e-07, 7.219999993424153e-07, 6.660000000380251e-07, 6.529999998505787e-07, 7.220000002305937e-07, 7.499999998827889e-07, 7.359999996126021e-07, 7.360000005007805e-07, 6.810000003909522e-07, 7.07999999960407e-07, 7.220000002305937e-07, 7.090000000431473e-07, 1.0969999992838098e-06, 7.220000002305937e-07, 7.359999996126021e-07, 7.07999999960407e-07, 6.939999996902202e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.230000003133341e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.230000003133341e-07, 7.219999993424153e-07, 7.219999993424153e-07, 7.219999993424153e-07, 7.230000003133341e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.230000003133341e-07, 7.220000002305937e-07, 7.370000005835209e-07, 7.220000002305937e-07, 7.219999993424153e-07, 7.360000005007805e-07, 7.359999996126021e-07, 6.939999996902202e-07, 7.230000003133341e-07, 7.220000002305937e-07, 7.910000006106088e-07, 7.219999993424153e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.910000006106088e-07, 7.499999998827889e-07, 7.220000002305937e-07, 7.369999996953425e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.090000000431473e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.090000000431473e-07, 7.090000000431473e-07, 7.220000002305937e-07]</msg>
<status status="PASS" starttime="20201029 09:34:12.731" endtime="20201029 09:34:12.734"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.726" endtime="20201029 09:34:12.735"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.359" endtime="20201029 09:34:12.735"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.358" endtime="20201029 09:34:12.735"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.743" endtime="20201029 09:34:12.755"></status>
</kw>
<msg timestamp="20201029 09:34:12.755" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:12.742" endtime="20201029 09:34:12.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.758" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:12.756" endtime="20201029 09:34:12.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.759" endtime="20201029 09:34:12.760"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.739" endtime="20201029 09:34:12.761"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.738" endtime="20201029 09:34:12.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.768" endtime="20201029 09:34:13.087"></status>
</kw>
<msg timestamp="20201029 09:34:13.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.352515431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.352516153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:12.766" endtime="20201029 09:34:13.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.352515431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.352516153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:13.092" endtime="20201029 09:34:13.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.102" endtime="20201029 09:34:13.103"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.763" endtime="20201029 09:34:13.104"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.762" endtime="20201029 09:34:13.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:13.109" level="INFO">${RESULT} = [{'diff': 7.220000002305937e-07}, {'diff': 7.910000006106088e-07}, {'diff': 7.499999998827889e-07}, {'diff': 7.220000002305937e-07}, {'diff': 7.369999996953425e-07}, {'diff': 7.359999996126021e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:34:13.105" endtime="20201029 09:34:13.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:13.114" level="INFO">${OVERHEAD} = {'diff': [7.220000002305937e-07, 7.910000006106088e-07, 7.499999998827889e-07, 7.220000002305937e-07, 7.369999996953425e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.0900...</msg>
<status status="PASS" starttime="20201029 09:34:13.110" endtime="20201029 09:34:13.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.118" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:13.117" endtime="20201029 09:34:13.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.121" level="INFO">VALUE: [7.220000002305937e-07, 7.910000006106088e-07, 7.499999998827889e-07, 7.220000002305937e-07, 7.369999996953425e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.090000000431473e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.090000000431473e-07, 7.090000000431473e-07, 7.220000002305937e-07, 1.069000000519793e-06, 7.229999994251557e-07, 7.499999998827889e-07, 7.229999994251557e-07, 7.220000002305937e-07, 7.640000001529756e-07, 7.220000002305937e-07, 6.949999997729606e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.219999993424153e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.499999998827889e-07, 6.799999994200334e-07, 7.359999996126021e-07, 7.07999999960407e-07, 7.219999993424153e-07, 7.07999999960407e-07, 6.519999997678383e-07, 7.220000002305937e-07, 7.07999999960407e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.359999996126021e-07, 6.799999994200334e-07, 7.499999998827889e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.230000003133341e-07, 7.359999996126021e-07, 7.77000000340422e-07, 7.359999996126021e-07, 7.230000003133341e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.77999999534984e-07, 7.359999996126021e-07, 6.799999994200334e-07, 7.359999996126021e-07, 7.780000004231624e-07, 7.230000003133341e-07]</msg>
<status status="PASS" starttime="20201029 09:34:13.119" endtime="20201029 09:34:13.121"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.115" endtime="20201029 09:34:13.122"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.736" endtime="20201029 09:34:13.122"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.736" endtime="20201029 09:34:13.122"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.130" endtime="20201029 09:34:13.141"></status>
</kw>
<msg timestamp="20201029 09:34:13.141" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:13.128" endtime="20201029 09:34:13.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.144" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:13.142" endtime="20201029 09:34:13.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.145" endtime="20201029 09:34:13.146"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.126" endtime="20201029 09:34:13.147"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.124" endtime="20201029 09:34:13.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.154" endtime="20201029 09:34:13.478"></status>
</kw>
<msg timestamp="20201029 09:34:13.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.719894792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.719895514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:13.153" endtime="20201029 09:34:13.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.719894792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.719895514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:13.483" endtime="20201029 09:34:13.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.493" endtime="20201029 09:34:13.495"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.150" endtime="20201029 09:34:13.496"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.148" endtime="20201029 09:34:13.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:13.500" level="INFO">${RESULT} = [{'diff': 7.220000002305937e-07}, {'diff': 7.230000003133341e-07}, {'diff': 7.359999996126021e-07}, {'diff': 7.77000000340422e-07}, {'diff': 7.359999996126021e-07}, {'diff': 7.230000003133341e-07}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:13.497" endtime="20201029 09:34:13.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:13.505" level="INFO">${OVERHEAD} = {'diff': [7.220000002305937e-07, 7.230000003133341e-07, 7.359999996126021e-07, 7.77000000340422e-07, 7.359999996126021e-07, 7.230000003133341e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.77999...</msg>
<status status="PASS" starttime="20201029 09:34:13.501" endtime="20201029 09:34:13.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.509" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:13.508" endtime="20201029 09:34:13.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.512" level="INFO">VALUE: [7.220000002305937e-07, 7.230000003133341e-07, 7.359999996126021e-07, 7.77000000340422e-07, 7.359999996126021e-07, 7.230000003133341e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.77999999534984e-07, 7.359999996126021e-07, 6.799999994200334e-07, 7.359999996126021e-07, 7.780000004231624e-07, 7.230000003133341e-07, 1.0549999993614279e-06, 7.359999996126021e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.370000005835209e-07, 7.229999994251557e-07, 7.220000002305937e-07, 7.219999993424153e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.230000003133341e-07, 7.500000007709673e-07, 7.77999999534984e-07, 7.369999996953425e-07, 7.219999993424153e-07, 8.060000000753575e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.090000000431473e-07, 7.220000002305937e-07, 7.090000000431473e-07, 7.220000002305937e-07, 7.640000001529756e-07, 7.220000002305937e-07, 7.230000003133341e-07, 7.360000005007805e-07, 7.369999996953425e-07, 7.360000005007805e-07, 7.090000000431473e-07, 6.799999994200334e-07, 7.220000002305937e-07, 7.499999998827889e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.499999998827889e-07, 7.360000005007805e-07, 7.219999993424153e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.359999996126021e-07]</msg>
<status status="PASS" starttime="20201029 09:34:13.510" endtime="20201029 09:34:13.512"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.506" endtime="20201029 09:34:13.512"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.123" endtime="20201029 09:34:13.513"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.122" endtime="20201029 09:34:13.513"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.898" endtime="20201029 09:34:13.513"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:05.830" endtime="20201029 09:34:13.514" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:13.520" endtime="20201029 09:34:13.540"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.519" endtime="20201029 09:34:13.540"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.556" endtime="20201029 09:34:13.570"></status>
</kw>
<msg timestamp="20201029 09:34:13.571" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:13.554" endtime="20201029 09:34:13.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.573" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:13.572" endtime="20201029 09:34:13.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.576" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:13.574" endtime="20201029 09:34:13.576"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:13.552" endtime="20201029 09:34:13.577"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:13.550" endtime="20201029 09:34:13.577"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.548" endtime="20201029 09:34:13.578"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:13.581" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:13.581" endtime="20201029 09:34:13.582"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.579" endtime="20201029 09:34:13.582"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.547" endtime="20201029 09:34:13.582"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.547" endtime="20201029 09:34:13.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.583" endtime="20201029 09:34:13.585"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.543" endtime="20201029 09:34:13.585"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.541" endtime="20201029 09:34:13.585"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.518" endtime="20201029 09:34:13.586"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.594" endtime="20201029 09:34:13.612"></status>
</kw>
<msg timestamp="20201029 09:34:13.613" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:13.592" endtime="20201029 09:34:13.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.615" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:13.614" endtime="20201029 09:34:13.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.616" endtime="20201029 09:34:13.618"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.590" endtime="20201029 09:34:13.619"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.588" endtime="20201029 09:34:13.619"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.621" endtime="20201029 09:34:13.623"></status>
</kw>
<msg timestamp="20201029 09:34:13.623" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:13.620" endtime="20201029 09:34:13.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.627" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:13.626" endtime="20201029 09:34:13.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.630" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:13.628" endtime="20201029 09:34:13.631"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.624" endtime="20201029 09:34:13.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.635" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:13.634" endtime="20201029 09:34:13.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.637" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:13.636" endtime="20201029 09:34:13.637"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.632" endtime="20201029 09:34:13.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.645" endtime="20201029 09:34:13.931"></status>
</kw>
<msg timestamp="20201029 09:34:13.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065791056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065795458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:13.643" endtime="20201029 09:34:13.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065791056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065795458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:13.935" endtime="20201029 09:34:13.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.944" endtime="20201029 09:34:13.945"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.641" endtime="20201029 09:34:13.946"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.639" endtime="20201029 09:34:13.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:13.950" level="INFO">${RESULT} = [{'diff': 4.402000000000572e-06}, {'diff': 3.7640000000033202e-06}, {'diff': 3.3200000000011e-06}, {'diff': 2.9719999999899827e-06}, {'diff': 3.2910000000024864e-06}, {'diff': 2.9859999999964915e-06},...</msg>
<status status="PASS" starttime="20201029 09:34:13.947" endtime="20201029 09:34:13.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:13.955" level="INFO">${OVERHEAD} = {'diff': [4.402000000000572e-06, 3.7640000000033202e-06, 3.3200000000011e-06, 2.9719999999899827e-06, 3.2910000000024864e-06, 2.9859999999964915e-06, 3.306000000008469e-06, 3.0000000000030003e-06, 3.3...</msg>
<status status="PASS" starttime="20201029 09:34:13.951" endtime="20201029 09:34:13.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.960" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 09:34:13.959" endtime="20201029 09:34:13.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.962" level="INFO">VALUE: [4.402000000000572e-06, 3.7640000000033202e-06, 3.3200000000011e-06, 2.9719999999899827e-06, 3.2910000000024864e-06, 2.9859999999964915e-06, 3.306000000008469e-06, 3.0000000000030003e-06, 3.319000000001626e-06, 2.9859999999964915e-06, 3.2779999999954512e-06, 2.9999999999891225e-06, 3.306000000008469e-06, 2.9859999999964915e-06, 3.3200000000011e-06, 3.0139999999956313e-06, 3.305999999994591e-06, 2.9720000000038604e-06, 3.3200000000011e-06, 2.9720000000038604e-06, 3.305999999994591e-06, 2.9859999999964915e-06, 3.3049999999951174e-06, 2.9859999999964915e-06, 3.319000000001626e-06, 2.9860000000103692e-06, 3.306000000008469e-06, 2.9859999999964915e-06, 3.3049999999951174e-06, 3.0129999999961576e-06, 3.333999999993731e-06, 3.02800000000214e-06, 3.3049999999951174e-06, 2.9720000000038604e-06, 3.3200000000011e-06, 2.9859999999964915e-06, 3.3329999999942572e-06, 2.9719999999899827e-06, 3.319000000001626e-06, 2.9859999999964915e-06, 3.319000000001626e-06, 2.9859999999964915e-06, 3.306000000008469e-06, 2.9860000000103692e-06, 3.305999999994591e-06, 2.9859999999964915e-06, 3.2910000000024864e-06, 2.9859999999964915e-06, 3.319000000001626e-06, 2.9720000000038604e-06]</msg>
<status status="PASS" starttime="20201029 09:34:13.961" endtime="20201029 09:34:13.963"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.955" endtime="20201029 09:34:13.963"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.586" endtime="20201029 09:34:13.964"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:13.515" endtime="20201029 09:34:13.964" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:13.971" endtime="20201029 09:34:13.990"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.970" endtime="20201029 09:34:13.991"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.004" endtime="20201029 09:34:14.017"></status>
</kw>
<msg timestamp="20201029 09:34:14.018" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.002" endtime="20201029 09:34:14.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.020" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.019" endtime="20201029 09:34:14.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.023" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:14.021" endtime="20201029 09:34:14.024"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:13.999" endtime="20201029 09:34:14.024"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:13.997" endtime="20201029 09:34:14.025"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.996" endtime="20201029 09:34:14.025"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:14.029" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:14.028" endtime="20201029 09:34:14.029"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.026" endtime="20201029 09:34:14.029"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.995" endtime="20201029 09:34:14.030"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.994" endtime="20201029 09:34:14.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.030" endtime="20201029 09:34:14.032"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.993" endtime="20201029 09:34:14.032"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.992" endtime="20201029 09:34:14.033"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.968" endtime="20201029 09:34:14.033"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.043" endtime="20201029 09:34:14.069"></status>
</kw>
<msg timestamp="20201029 09:34:14.069" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.040" endtime="20201029 09:34:14.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.072" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.070" endtime="20201029 09:34:14.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.073" endtime="20201029 09:34:14.075"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.037" endtime="20201029 09:34:14.075"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.035" endtime="20201029 09:34:14.076"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.079" endtime="20201029 09:34:14.082"></status>
</kw>
<msg timestamp="20201029 09:34:14.082" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:14.077" endtime="20201029 09:34:14.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.086" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:14.085" endtime="20201029 09:34:14.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.089" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:14.088" endtime="20201029 09:34:14.089"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.083" endtime="20201029 09:34:14.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.093" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:14.092" endtime="20201029 09:34:14.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.095" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:14.094" endtime="20201029 09:34:14.096"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.090" endtime="20201029 09:34:14.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.103" endtime="20201029 09:34:14.389"></status>
</kw>
<msg timestamp="20201029 09:34:14.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064749972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064753056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:14.102" endtime="20201029 09:34:14.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064749972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064753056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:14.393" endtime="20201029 09:34:14.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.401" endtime="20201029 09:34:14.404"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.099" endtime="20201029 09:34:14.404"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.097" endtime="20201029 09:34:14.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:14.410" level="INFO">${RESULT} = [{'diff': 3.0840000000004197e-06}, {'diff': 4.444999999991817e-06}, {'diff': 4.445000000005694e-06}, {'diff': 4.361000000008275e-06}, {'diff': 4.375000000000906e-06}, {'diff': 4.3200000000021e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:14.406" endtime="20201029 09:34:14.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:14.417" level="INFO">${OVERHEAD} = {'diff': [3.0840000000004197e-06, 4.444999999991817e-06, 4.445000000005694e-06, 4.361000000008275e-06, 4.375000000000906e-06, 4.3200000000021e-06, 4.34800000000124e-06, 4.3200000000021e-06, 4.36200000...</msg>
<status status="PASS" starttime="20201029 09:34:14.412" endtime="20201029 09:34:14.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.423" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 09:34:14.422" endtime="20201029 09:34:14.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.427" level="INFO">VALUE: [3.0840000000004197e-06, 4.444999999991817e-06, 4.445000000005694e-06, 4.361000000008275e-06, 4.375000000000906e-06, 4.3200000000021e-06, 4.34800000000124e-06, 4.3200000000021e-06, 4.3620000000077486e-06, 4.319000000002626e-06, 4.34800000000124e-06, 4.333000000009135e-06, 4.361999999993871e-06, 4.290999999989609e-06, 4.360999999994397e-06, 4.333999999994731e-06, 4.291999999989082e-06, 4.347000000001766e-06, 4.360999999994397e-06, 4.3620000000077486e-06, 4.375000000000906e-06, 4.332999999995257e-06, 4.375000000000906e-06, 4.3200000000021e-06, 4.375000000000906e-06, 4.34800000000124e-06, 4.361000000008275e-06, 4.347000000001766e-06, 4.347000000001766e-06, 4.360999999994397e-06, 4.361999999993871e-06, 4.26400000000382e-06, 4.319000000002626e-06, 4.333999999994731e-06, 4.375000000000906e-06, 4.319000000002626e-06, 4.34800000000124e-06, 4.347000000001766e-06, 4.403000000000046e-06, 4.347000000001766e-06, 4.360999999994397e-06, 4.347000000001766e-06, 4.360999999994397e-06, 4.290999999989609e-06, 4.360999999994397e-06, 4.332999999995257e-06, 4.347000000001766e-06, 4.347000000001766e-06, 4.347000000001766e-06, 4.34800000000124e-06]</msg>
<status status="PASS" starttime="20201029 09:34:14.425" endtime="20201029 09:34:14.427"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.418" endtime="20201029 09:34:14.428"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.034" endtime="20201029 09:34:14.429"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:13.966" endtime="20201029 09:34:14.429" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:14.437" endtime="20201029 09:34:14.457"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.436" endtime="20201029 09:34:14.457"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.470" endtime="20201029 09:34:14.484"></status>
</kw>
<msg timestamp="20201029 09:34:14.484" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.469" endtime="20201029 09:34:14.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.487" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.486" endtime="20201029 09:34:14.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.490" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:14.488" endtime="20201029 09:34:14.491"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:14.466" endtime="20201029 09:34:14.491"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:14.464" endtime="20201029 09:34:14.492"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.462" endtime="20201029 09:34:14.492"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:14.496" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:14.495" endtime="20201029 09:34:14.497"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.493" endtime="20201029 09:34:14.497"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.462" endtime="20201029 09:34:14.498"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.461" endtime="20201029 09:34:14.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.499" endtime="20201029 09:34:14.500"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.460" endtime="20201029 09:34:14.501"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.458" endtime="20201029 09:34:14.501"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.434" endtime="20201029 09:34:14.501"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.510" endtime="20201029 09:34:14.546"></status>
</kw>
<msg timestamp="20201029 09:34:14.547" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.508" endtime="20201029 09:34:14.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.549" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.548" endtime="20201029 09:34:14.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.551" endtime="20201029 09:34:14.552"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.505" endtime="20201029 09:34:14.553"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.503" endtime="20201029 09:34:14.553"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.555" endtime="20201029 09:34:14.557"></status>
</kw>
<msg timestamp="20201029 09:34:14.557" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:14.554" endtime="20201029 09:34:14.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.561" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:14.560" endtime="20201029 09:34:14.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.563" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:14.562" endtime="20201029 09:34:14.563"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.558" endtime="20201029 09:34:14.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.568" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:14.567" endtime="20201029 09:34:14.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.570" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:14.569" endtime="20201029 09:34:14.570"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.565" endtime="20201029 09:34:14.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.578" endtime="20201029 09:34:14.864"></status>
</kw>
<msg timestamp="20201029 09:34:14.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064051292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064055736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:14.576" endtime="20201029 09:34:14.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064051292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064055736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:14.868" endtime="20201029 09:34:14.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.876" endtime="20201029 09:34:14.878"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.573" endtime="20201029 09:34:14.878"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.571" endtime="20201029 09:34:14.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:14.884" level="INFO">${RESULT} = [{'diff': 4.444000000006221e-06}, {'diff': 6.499999999992623e-06}, {'diff': 6.568999999997938e-06}, {'diff': 6.472000000007361e-06}, {'diff': 6.459000000000326e-06}, {'diff': 6.430000000001712e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:14.880" endtime="20201029 09:34:14.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:14.888" level="INFO">${OVERHEAD} = {'diff': [4.444000000006221e-06, 6.499999999992623e-06, 6.568999999997938e-06, 6.472000000007361e-06, 6.459000000000326e-06, 6.430000000001712e-06, 6.527999999991763e-06, 6.472000000007361e-06, 6.4449...</msg>
<status status="PASS" starttime="20201029 09:34:14.885" endtime="20201029 09:34:14.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.892" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 09:34:14.891" endtime="20201029 09:34:14.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.895" level="INFO">VALUE: [4.444000000006221e-06, 6.499999999992623e-06, 6.568999999997938e-06, 6.472000000007361e-06, 6.459000000000326e-06, 6.430000000001712e-06, 6.527999999991763e-06, 6.472000000007361e-06, 6.444999999993817e-06, 6.443999999994343e-06, 6.444999999993817e-06, 6.430000000001712e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.4450000000076946e-06, 6.416999999994677e-06, 6.347000000003766e-06, 6.347000000003766e-06, 6.500000000006501e-06, 6.458000000000852e-06, 6.431000000001186e-06, 6.29200000000496e-06, 6.499999999992623e-06, 6.416000000009081e-06, 6.430000000001712e-06, 6.375000000002906e-06, 6.459000000000326e-06, 6.431000000001186e-06, 6.485999999999992e-06, 6.3329999999972575e-06, 6.444000000008221e-06, 6.472000000007361e-06, 6.416000000009081e-06, 6.3329999999972575e-06, 6.430999999987308e-06, 6.430000000001712e-06, 6.430000000001712e-06, 6.34800000000324e-06, 6.458000000000852e-06, 6.416000000009081e-06, 6.402999999988168e-06, 6.34800000000324e-06, 6.458000000000852e-06, 6.431000000001186e-06, 6.431000000001186e-06, 6.347000000003766e-06, 6.4450000000076946e-06, 6.4450000000076946e-06, 6.375000000002906e-06, 6.263999999991943e-06]</msg>
<status status="PASS" starttime="20201029 09:34:14.894" endtime="20201029 09:34:14.895"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.889" endtime="20201029 09:34:14.896"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.502" endtime="20201029 09:34:14.896"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:14.431" endtime="20201029 09:34:14.897" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:14.904" endtime="20201029 09:34:14.923"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.902" endtime="20201029 09:34:14.924"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.938" endtime="20201029 09:34:14.951"></status>
</kw>
<msg timestamp="20201029 09:34:14.952" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.936" endtime="20201029 09:34:14.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.954" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.953" endtime="20201029 09:34:14.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.958" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:14.956" endtime="20201029 09:34:14.958"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:14.933" endtime="20201029 09:34:14.958"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:14.930" endtime="20201029 09:34:14.959"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.929" endtime="20201029 09:34:14.959"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:14.963" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:14.962" endtime="20201029 09:34:14.963"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.960" endtime="20201029 09:34:14.964"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.928" endtime="20201029 09:34:14.964"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.928" endtime="20201029 09:34:14.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.965" endtime="20201029 09:34:14.966"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.926" endtime="20201029 09:34:14.967"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.924" endtime="20201029 09:34:14.967"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.901" endtime="20201029 09:34:14.967"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.976" endtime="20201029 09:34:14.994"></status>
</kw>
<msg timestamp="20201029 09:34:14.995" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.974" endtime="20201029 09:34:14.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.997" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.996" endtime="20201029 09:34:14.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.998" endtime="20201029 09:34:15.000"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.972" endtime="20201029 09:34:15.001"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.970" endtime="20201029 09:34:15.001"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.003" endtime="20201029 09:34:15.005"></status>
</kw>
<msg timestamp="20201029 09:34:15.005" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:15.002" endtime="20201029 09:34:15.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.009" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:15.008" endtime="20201029 09:34:15.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.011" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:15.010" endtime="20201029 09:34:15.012"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.006" endtime="20201029 09:34:15.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.016" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:15.015" endtime="20201029 09:34:15.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.018" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:15.017" endtime="20201029 09:34:15.018"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.013" endtime="20201029 09:34:15.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.027" endtime="20201029 09:34:15.317"></status>
</kw>
<msg timestamp="20201029 09:34:15.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064284347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064287889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:15.025" endtime="20201029 09:34:15.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064284347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064287889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:15.322" endtime="20201029 09:34:15.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.332" endtime="20201029 09:34:15.335"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.021" endtime="20201029 09:34:15.335"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.019" endtime="20201029 09:34:15.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:15.343" level="INFO">${RESULT} = [{'diff': 3.541999999995271e-06}, {'diff': 3.05600000000128e-06}, {'diff': 3.0689999999944373e-06}, {'diff': 3.014000000009509e-06}, {'diff': 3.05600000000128e-06}, {'diff': 3.05600000000128e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:15.338" endtime="20201029 09:34:15.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:15.350" level="INFO">${OVERHEAD} = {'diff': [3.541999999995271e-06, 3.05600000000128e-06, 3.0689999999944373e-06, 3.014000000009509e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.05600000...</msg>
<status status="PASS" starttime="20201029 09:34:15.345" endtime="20201029 09:34:15.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.358" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 09:34:15.356" endtime="20201029 09:34:15.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.361" level="INFO">VALUE: [3.541999999995271e-06, 3.05600000000128e-06, 3.0689999999944373e-06, 3.014000000009509e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.0139999999956313e-06, 3.0409999999952975e-06, 3.041999999994771e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.0139999999956313e-06, 3.0550000000018063e-06, 3.0550000000018063e-06, 3.097000000007455e-06, 3.05600000000128e-06, 3.0410000000091753e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.041999999994771e-06, 3.041999999994771e-06, 3.083000000000946e-06, 3.014000000009509e-06, 3.0550000000018063e-06, 3.041999999994771e-06, 3.055999999987402e-06, 3.0700000000077887e-06, 3.042000000008649e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.0279999999882623e-06, 3.05600000000128e-06, 3.0410000000091753e-06, 3.05600000000128e-06, 3.069999999993911e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.0549999999879285e-06, 3.0840000000004197e-06, 3.0549999999879285e-06, 3.069000000008315e-06, 3.0550000000018063e-06]</msg>
<status status="PASS" starttime="20201029 09:34:15.359" endtime="20201029 09:34:15.361"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.351" endtime="20201029 09:34:15.362"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.968" endtime="20201029 09:34:15.362"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:14.899" endtime="20201029 09:34:15.363" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:15.370" endtime="20201029 09:34:15.389"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.368" endtime="20201029 09:34:15.390"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.404" endtime="20201029 09:34:15.418"></status>
</kw>
<msg timestamp="20201029 09:34:15.418" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.402" endtime="20201029 09:34:15.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.421" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.419" endtime="20201029 09:34:15.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.424" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:15.422" endtime="20201029 09:34:15.425"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:15.400" endtime="20201029 09:34:15.425"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:15.397" endtime="20201029 09:34:15.426"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.396" endtime="20201029 09:34:15.426"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:15.430" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:15.429" endtime="20201029 09:34:15.430"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.427" endtime="20201029 09:34:15.430"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.395" endtime="20201029 09:34:15.431"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.394" endtime="20201029 09:34:15.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.431" endtime="20201029 09:34:15.433"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.393" endtime="20201029 09:34:15.433"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.390" endtime="20201029 09:34:15.434"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.367" endtime="20201029 09:34:15.434"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.443" endtime="20201029 09:34:15.469"></status>
</kw>
<msg timestamp="20201029 09:34:15.469" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.441" endtime="20201029 09:34:15.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.472" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.470" endtime="20201029 09:34:15.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.473" endtime="20201029 09:34:15.474"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.438" endtime="20201029 09:34:15.475"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.436" endtime="20201029 09:34:15.475"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.477" endtime="20201029 09:34:15.480"></status>
</kw>
<msg timestamp="20201029 09:34:15.480" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:15.476" endtime="20201029 09:34:15.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.485" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:15.484" endtime="20201029 09:34:15.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.487" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:15.486" endtime="20201029 09:34:15.487"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.481" endtime="20201029 09:34:15.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.491" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:15.490" endtime="20201029 09:34:15.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.493" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:15.492" endtime="20201029 09:34:15.494"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.488" endtime="20201029 09:34:15.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.501" endtime="20201029 09:34:15.787"></status>
</kw>
<msg timestamp="20201029 09:34:15.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065761153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065765792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:15.499" endtime="20201029 09:34:15.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065761153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065765792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:15.792" endtime="20201029 09:34:15.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.800" endtime="20201029 09:34:15.801"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.497" endtime="20201029 09:34:15.802"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.495" endtime="20201029 09:34:15.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:15.806" level="INFO">${RESULT} = [{'diff': 4.639000000000726e-06}, {'diff': 4.4170000000065546e-06}, {'diff': 4.346999999987888e-06}, {'diff': 4.29200000000296e-06}, {'diff': 4.332999999995257e-06}, {'diff': 4.332999999995257e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:15.803" endtime="20201029 09:34:15.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:15.811" level="INFO">${OVERHEAD} = {'diff': [4.639000000000726e-06, 4.4170000000065546e-06, 4.346999999987888e-06, 4.29200000000296e-06, 4.332999999995257e-06, 4.332999999995257e-06, 4.306000000009469e-06, 4.332999999995257e-06, 4.3340...</msg>
<status status="PASS" starttime="20201029 09:34:15.807" endtime="20201029 09:34:15.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.816" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 09:34:15.815" endtime="20201029 09:34:15.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.818" level="INFO">VALUE: [4.639000000000726e-06, 4.4170000000065546e-06, 4.346999999987888e-06, 4.29200000000296e-06, 4.332999999995257e-06, 4.332999999995257e-06, 4.306000000009469e-06, 4.332999999995257e-06, 4.334000000008609e-06, 4.332999999995257e-06, 4.416999999992677e-06, 4.361000000008275e-06, 4.375000000000906e-06, 4.332999999995257e-06, 4.347000000001766e-06, 4.26400000000382e-06, 4.3200000000021e-06, 4.333999999994731e-06, 4.389000000007415e-06, 4.403000000000046e-06, 4.333000000009135e-06, 4.3200000000021e-06, 4.333000000009135e-06, 4.3049999999961175e-06, 4.333999999994731e-06, 4.277999999996451e-06, 4.277999999996451e-06, 4.332999999995257e-06, 4.333000000009135e-06, 4.319000000002626e-06, 4.347000000001766e-06, 4.332999999995257e-06, 4.3200000000021e-06, 4.346999999987888e-06, 4.29200000000296e-06, 4.361000000008275e-06, 4.333000000009135e-06, 4.332999999995257e-06, 4.3200000000021e-06, 4.332999999995257e-06, 4.332999999995257e-06, 4.360999999994397e-06, 4.333000000009135e-06, 4.347000000001766e-06, 4.34800000000124e-06, 4.332999999995257e-06, 4.333000000009135e-06, 4.319000000002626e-06, 4.333000000009135e-06, 4.332999999995257e-06]</msg>
<status status="PASS" starttime="20201029 09:34:15.817" endtime="20201029 09:34:15.819"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.812" endtime="20201029 09:34:15.819"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.435" endtime="20201029 09:34:15.820"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:15.364" endtime="20201029 09:34:15.820" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:15.827" endtime="20201029 09:34:15.846"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.825" endtime="20201029 09:34:15.847"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.860" endtime="20201029 09:34:15.874"></status>
</kw>
<msg timestamp="20201029 09:34:15.874" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.858" endtime="20201029 09:34:15.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.877" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.875" endtime="20201029 09:34:15.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.880" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:15.878" endtime="20201029 09:34:15.881"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:15.856" endtime="20201029 09:34:15.881"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:15.853" endtime="20201029 09:34:15.882"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.852" endtime="20201029 09:34:15.882"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:15.886" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:15.885" endtime="20201029 09:34:15.886"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.883" endtime="20201029 09:34:15.886"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.851" endtime="20201029 09:34:15.887"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.851" endtime="20201029 09:34:15.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.888" endtime="20201029 09:34:15.889"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.849" endtime="20201029 09:34:15.890"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.848" endtime="20201029 09:34:15.890"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.824" endtime="20201029 09:34:15.890"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.902" endtime="20201029 09:34:15.941"></status>
</kw>
<msg timestamp="20201029 09:34:15.941" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.901" endtime="20201029 09:34:15.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.944" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.942" endtime="20201029 09:34:15.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.945" endtime="20201029 09:34:15.946"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.898" endtime="20201029 09:34:15.947"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.892" endtime="20201029 09:34:15.947"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.951" endtime="20201029 09:34:15.953"></status>
</kw>
<msg timestamp="20201029 09:34:15.954" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:15.948" endtime="20201029 09:34:15.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.961" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:15.959" endtime="20201029 09:34:15.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.964" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:15.963" endtime="20201029 09:34:15.965"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.955" endtime="20201029 09:34:15.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.973" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:15.971" endtime="20201029 09:34:15.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.978" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:15.975" endtime="20201029 09:34:15.978"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.968" endtime="20201029 09:34:15.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.987" endtime="20201029 09:34:16.275"></status>
</kw>
<msg timestamp="20201029 09:34:16.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067791833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067797167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:15.986" endtime="20201029 09:34:16.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067791833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067797167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:16.280" endtime="20201029 09:34:16.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.288" endtime="20201029 09:34:16.290"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.983" endtime="20201029 09:34:16.290"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.981" endtime="20201029 09:34:16.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:16.295" level="INFO">${RESULT} = [{'diff': 5.334000000009609e-06}, {'diff': 5.111000000002086e-06}, {'diff': 5.0550000000038064e-06}, {'diff': 5.040999999997298e-06}, {'diff': 5.012999999998158e-06}, {'diff': 4.986999999997965e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:34:16.292" endtime="20201029 09:34:16.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:16.300" level="INFO">${OVERHEAD} = {'diff': [5.334000000009609e-06, 5.111000000002086e-06, 5.0550000000038064e-06, 5.040999999997298e-06, 5.012999999998158e-06, 4.986999999997965e-06, 4.985999999998492e-06, 5.05600000000328e-06, 5.0279...</msg>
<status status="PASS" starttime="20201029 09:34:16.296" endtime="20201029 09:34:16.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.305" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 09:34:16.304" endtime="20201029 09:34:16.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.307" level="INFO">VALUE: [5.334000000009609e-06, 5.111000000002086e-06, 5.0550000000038064e-06, 5.040999999997298e-06, 5.012999999998158e-06, 4.986999999997965e-06, 4.985999999998492e-06, 5.05600000000328e-06, 5.0279999999902625e-06, 5.02800000000414e-06, 5.041999999996771e-06, 5.02800000000414e-06, 5.042000000010649e-06, 5.041999999996771e-06, 5.02800000000414e-06, 5.05600000000328e-06, 5.0139999999976315e-06, 5.027000000004667e-06, 5.0279999999902625e-06, 5.055999999989402e-06, 5.02800000000414e-06, 5.042000000010649e-06, 5.041999999996771e-06, 5.040999999997298e-06, 5.02800000000414e-06, 5.05600000000328e-06, 5.0550000000038064e-06, 5.0550000000038064e-06, 5.069999999995911e-06, 5.027000000004667e-06, 5.041999999996771e-06, 5.0410000000111754e-06, 5.02800000000414e-06, 5.040999999997298e-06, 5.042000000010649e-06, 5.054999999989929e-06, 5.098000000008929e-06, 5.027000000004667e-06, 4.972000000005861e-06, 5.124999999994717e-06, 4.985999999998492e-06, 5.0279999999902625e-06, 5.041999999996771e-06, 5.041999999996771e-06, 5.0279999999902625e-06, 5.041999999996771e-06, 5.0139999999976315e-06, 5.02800000000414e-06, 5.026999999990789e-06, 5.0550000000038064e-06]</msg>
<status status="PASS" starttime="20201029 09:34:16.306" endtime="20201029 09:34:16.308"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.301" endtime="20201029 09:34:16.308"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.891" endtime="20201029 09:34:16.309"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:15.822" endtime="20201029 09:34:16.309" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:16.316" endtime="20201029 09:34:16.335"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.314" endtime="20201029 09:34:16.335"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.349" endtime="20201029 09:34:16.362"></status>
</kw>
<msg timestamp="20201029 09:34:16.362" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:16.347" endtime="20201029 09:34:16.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.365" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:16.363" endtime="20201029 09:34:16.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.369" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:16.366" endtime="20201029 09:34:16.369"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:16.344" endtime="20201029 09:34:16.370"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:16.342" endtime="20201029 09:34:16.371"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.341" endtime="20201029 09:34:16.371"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:16.375" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:16.374" endtime="20201029 09:34:16.375"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.372" endtime="20201029 09:34:16.375"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.340" endtime="20201029 09:34:16.375"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.339" endtime="20201029 09:34:16.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.376" endtime="20201029 09:34:16.378"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.338" endtime="20201029 09:34:16.378"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.336" endtime="20201029 09:34:16.379"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.313" endtime="20201029 09:34:16.379"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.382" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:34:16.391" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:34:17.671" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:34:16.381" endtime="20201029 09:34:17.673"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.678" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:34:17.675" endtime="20201029 09:34:17.679"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.380" endtime="20201029 09:34:17.680"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:17.687" endtime="20201029 09:34:17.709"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.684" endtime="20201029 09:34:17.710"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.728" endtime="20201029 09:34:17.739"></status>
</kw>
<msg timestamp="20201029 09:34:17.740" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.725" endtime="20201029 09:34:17.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.745" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.742" endtime="20201029 09:34:17.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.748" endtime="20201029 09:34:17.751"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.719" endtime="20201029 09:34:17.752"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.715" endtime="20201029 09:34:17.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.767" endtime="20201029 09:34:18.057"></status>
</kw>
<msg timestamp="20201029 09:34:18.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031547972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031552667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:17.764" endtime="20201029 09:34:18.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031547972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031552667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:18.061" endtime="20201029 09:34:18.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.069" endtime="20201029 09:34:18.071"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.758" endtime="20201029 09:34:18.071"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.755" endtime="20201029 09:34:18.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:18.076" level="INFO">${PHILIP_RES} = [{'diff': 4.6949999999990055e-06}, {'diff': 3.610999999993647e-06}, {'diff': 3.611000000000586e-06}, {'diff': 3.625000000000156e-06}, {'diff': 3.611000000000586e-06}, {'diff': 3.583000000001446e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:34:18.073" endtime="20201029 09:34:18.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:18.082" level="INFO">${RESULT} = {'diff': [4.6949999999990055e-06, 3.610999999993647e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.583000000001446e-06, 3.555999999994841e-06, 3.611000000000586e-06, 3.625...</msg>
<status status="PASS" starttime="20201029 09:34:18.077" endtime="20201029 09:34:18.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.086" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:18.085" endtime="20201029 09:34:18.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.089" level="INFO">VALUE: [4.6949999999990055e-06, 3.610999999993647e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.583000000001446e-06, 3.555999999994841e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.610999999993647e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.6810000000053744e-06, 3.597000000001016e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.624999999993217e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.597999999993551e-06, 3.6120000000000596e-06, 3.625000000000156e-06, 3.5980000000004897e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.5840000000009198e-06, 3.596999999994077e-06, 3.625000000000156e-06, 3.651999999999822e-06, 3.57000000000135e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.596999999994077e-06, 3.625000000000156e-06, 3.610999999993647e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.610999999993647e-06, 3.625000000000156e-06, 3.611000000000586e-06]</msg>
<status status="PASS" starttime="20201029 09:34:18.087" endtime="20201029 09:34:18.089"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.083" endtime="20201029 09:34:18.089"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.711" endtime="20201029 09:34:18.090"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.682" endtime="20201029 09:34:18.090"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:18.092" endtime="20201029 09:34:18.112"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.091" endtime="20201029 09:34:18.113"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.125" endtime="20201029 09:34:18.135"></status>
</kw>
<msg timestamp="20201029 09:34:18.136" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:18.123" endtime="20201029 09:34:18.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.141" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:18.138" endtime="20201029 09:34:18.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.142" endtime="20201029 09:34:18.144"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.118" endtime="20201029 09:34:18.144"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.116" endtime="20201029 09:34:18.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.151" endtime="20201029 09:34:18.437"></status>
</kw>
<msg timestamp="20201029 09:34:18.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023539875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023546847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:18.150" endtime="20201029 09:34:18.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023539875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023546847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:18.441" endtime="20201029 09:34:18.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.449" endtime="20201029 09:34:18.451"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.147" endtime="20201029 09:34:18.452"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.145" endtime="20201029 09:34:18.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:18.456" level="INFO">${PHILIP_RES} = [{'diff': 6.972000000000922e-06}, {'diff': 6.458000000000852e-06}, {'diff': 6.458000000000852e-06}, {'diff': 6.459000000000326e-06}, {'diff': 6.458999999996856e-06}, {'diff': 6.4729999999998955e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:34:18.453" endtime="20201029 09:34:18.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:18.461" level="INFO">${RESULT} = {'diff': [6.972000000000922e-06, 6.458000000000852e-06, 6.458000000000852e-06, 6.459000000000326e-06, 6.458999999996856e-06, 6.4729999999998955e-06, 6.459000000000326e-06, 6.458000000000852e-06, 6.443...</msg>
<status status="PASS" starttime="20201029 09:34:18.457" endtime="20201029 09:34:18.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.465" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:18.464" endtime="20201029 09:34:18.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.467" level="INFO">VALUE: [6.972000000000922e-06, 6.458000000000852e-06, 6.458000000000852e-06, 6.459000000000326e-06, 6.458999999996856e-06, 6.4729999999998955e-06, 6.459000000000326e-06, 6.458000000000852e-06, 6.443999999997813e-06, 6.472000000000422e-06, 6.513999999999132e-06, 6.458000000000852e-06, 6.512999999999658e-06, 6.472000000000422e-06, 6.458000000000852e-06, 6.514000000002601e-06, 6.459000000000326e-06, 6.459000000000326e-06, 6.514000000002601e-06, 6.458000000000852e-06, 6.471999999996952e-06, 6.513999999999132e-06, 6.458000000000852e-06, 6.4579999999973825e-06, 6.458000000000852e-06, 6.458000000000852e-06, 6.472000000000422e-06, 6.444999999997286e-06, 6.4729999999998955e-06, 6.459000000000326e-06, 6.459000000000326e-06, 6.4579999999973825e-06, 6.472000000000422e-06, 6.458000000000852e-06, 6.458000000000852e-06, 6.431000000001186e-06, 6.458000000000852e-06, 6.458000000000852e-06, 6.513000000003127e-06, 6.459000000000326e-06, 6.445000000000756e-06, 6.459000000000326e-06, 6.459000000000326e-06, 6.444999999997286e-06, 6.458000000000852e-06, 6.444000000001282e-06, 6.443999999997813e-06, 6.472000000000422e-06, 6.458000000000852e-06, 6.444000000001282e-06]</msg>
<status status="PASS" starttime="20201029 09:34:18.466" endtime="20201029 09:34:18.468"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.461" endtime="20201029 09:34:18.468"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.114" endtime="20201029 09:34:18.469"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.090" endtime="20201029 09:34:18.469"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:18.471" endtime="20201029 09:34:18.490"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.470" endtime="20201029 09:34:18.491"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.500" endtime="20201029 09:34:18.509"></status>
</kw>
<msg timestamp="20201029 09:34:18.509" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:18.498" endtime="20201029 09:34:18.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.511" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:18.510" endtime="20201029 09:34:18.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.512" endtime="20201029 09:34:18.514"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.495" endtime="20201029 09:34:18.515"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.493" endtime="20201029 09:34:18.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.522" endtime="20201029 09:34:18.808"></status>
</kw>
<msg timestamp="20201029 09:34:18.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018594181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018602542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:18.520" endtime="20201029 09:34:18.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018594181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018602542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:18.812" endtime="20201029 09:34:18.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.820" endtime="20201029 09:34:18.822"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.517" endtime="20201029 09:34:18.823"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.516" endtime="20201029 09:34:18.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:18.827" level="INFO">${PHILIP_RES} = [{'diff': 8.360999999998397e-06}, {'diff': 7.943999999999313e-06}, {'diff': 7.929999999999743e-06}, {'diff': 7.916999999999647e-06}, {'diff': 7.943999999999313e-06}, {'diff': 7.944999999998786e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:18.824" endtime="20201029 09:34:18.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:18.832" level="INFO">${RESULT} = {'diff': [8.360999999998397e-06, 7.943999999999313e-06, 7.929999999999743e-06, 7.916999999999647e-06, 7.943999999999313e-06, 7.944999999998786e-06, 7.971999999998453e-06, 7.916000000000173e-06, 7.9169...</msg>
<status status="PASS" starttime="20201029 09:34:18.828" endtime="20201029 09:34:18.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.836" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:18.835" endtime="20201029 09:34:18.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.839" level="INFO">VALUE: [8.360999999998397e-06, 7.943999999999313e-06, 7.929999999999743e-06, 7.916999999999647e-06, 7.943999999999313e-06, 7.944999999998786e-06, 7.971999999998453e-06, 7.916000000000173e-06, 7.916999999999647e-06, 7.916000000000173e-06, 7.944999999998786e-06, 7.944999999998786e-06, 7.916000000000173e-06, 7.916999999999647e-06, 7.916999999999647e-06, 7.915999999996703e-06, 8.014000000000632e-06, 7.916000000000173e-06, 7.930999999999216e-06, 7.930999999999216e-06, 7.916000000000173e-06, 7.944999999998786e-06, 7.916999999999647e-06, 7.944999999998786e-06, 7.916999999999647e-06, 7.929999999999743e-06, 7.916999999999647e-06, 7.930999999999216e-06, 7.889000000000507e-06, 7.916999999999647e-06, 7.929999999999743e-06, 7.916999999999647e-06, 7.930999999999216e-06, 7.916000000000173e-06, 7.903000000000077e-06, 7.931000000002686e-06, 7.916000000000173e-06, 7.930999999999216e-06, 7.833000000002227e-06, 7.930999999999216e-06, 7.916999999999647e-06, 7.889000000000507e-06, 7.916999999999647e-06, 7.916999999999647e-06, 7.929999999999743e-06, 7.944000000002782e-06, 7.916000000000173e-06, 7.903000000000077e-06, 7.903000000000077e-06, 7.916000000000173e-06]</msg>
<status status="PASS" starttime="20201029 09:34:18.838" endtime="20201029 09:34:18.840"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.832" endtime="20201029 09:34:18.840"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.492" endtime="20201029 09:34:18.841"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.469" endtime="20201029 09:34:18.841"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:18.843" endtime="20201029 09:34:18.862"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.842" endtime="20201029 09:34:18.863"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.871" endtime="20201029 09:34:18.880"></status>
</kw>
<msg timestamp="20201029 09:34:18.880" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:18.870" endtime="20201029 09:34:18.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.883" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:18.881" endtime="20201029 09:34:18.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.884" endtime="20201029 09:34:18.885"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.867" endtime="20201029 09:34:18.886"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.865" endtime="20201029 09:34:18.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.893" endtime="20201029 09:34:19.177"></status>
</kw>
<msg timestamp="20201029 09:34:19.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017546319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017556181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:18.891" endtime="20201029 09:34:19.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017546319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017556181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:19.182" endtime="20201029 09:34:19.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.190" endtime="20201029 09:34:19.192"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.889" endtime="20201029 09:34:19.193"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.887" endtime="20201029 09:34:19.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:19.197" level="INFO">${PHILIP_RES} = [{'diff': 9.861999999999371e-06}, {'diff': 9.402999999998107e-06}, {'diff': 9.388999999998537e-06}, {'diff': 9.445000000000286e-06}, {'diff': 9.417000000001147e-06}, {'diff': 9.388999999998537e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:19.194" endtime="20201029 09:34:19.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:19.202" level="INFO">${RESULT} = {'diff': [9.861999999999371e-06, 9.402999999998107e-06, 9.388999999998537e-06, 9.445000000000286e-06, 9.417000000001147e-06, 9.388999999998537e-06, 9.388999999998537e-06, 9.417000000001147e-06, 9.3609...</msg>
<status status="PASS" starttime="20201029 09:34:19.198" endtime="20201029 09:34:19.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.207" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:19.206" endtime="20201029 09:34:19.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.209" level="INFO">VALUE: [9.861999999999371e-06, 9.402999999998107e-06, 9.388999999998537e-06, 9.445000000000286e-06, 9.417000000001147e-06, 9.388999999998537e-06, 9.388999999998537e-06, 9.417000000001147e-06, 9.360999999999398e-06, 9.389000000002007e-06, 9.374999999998967e-06, 9.402999999998107e-06, 9.416999999997677e-06, 9.403000000001577e-06, 9.389000000002007e-06, 9.415999999998204e-06, 9.360999999999398e-06, 9.402999999998107e-06, 9.402000000002103e-06, 9.402000000002103e-06, 9.416000000001673e-06, 9.415999999998204e-06, 9.415999999998204e-06, 9.387999999999064e-06, 9.402000000002103e-06, 9.416000000001673e-06, 9.415999999998204e-06, 9.374999999998967e-06, 9.388999999998537e-06, 9.430000000001243e-06, 9.416000000001673e-06, 9.417000000001147e-06, 9.403000000001577e-06, 9.402999999998107e-06, 9.431000000000717e-06, 9.403000000001577e-06, 9.417000000001147e-06, 9.417000000001147e-06, 9.402999999998107e-06, 9.417000000001147e-06, 9.417000000001147e-06, 9.417000000001147e-06, 9.417000000001147e-06, 9.417000000001147e-06, 9.402999999998107e-06, 9.403000000001577e-06, 9.375000000002437e-06, 9.417000000001147e-06, 9.416999999997677e-06, 9.416999999997677e-06]</msg>
<status status="PASS" starttime="20201029 09:34:19.208" endtime="20201029 09:34:19.210"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.203" endtime="20201029 09:34:19.210"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.864" endtime="20201029 09:34:19.210"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.841" endtime="20201029 09:34:19.211"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:19.213" endtime="20201029 09:34:19.232"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.212" endtime="20201029 09:34:19.233"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.241" endtime="20201029 09:34:19.250"></status>
</kw>
<msg timestamp="20201029 09:34:19.251" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:19.239" endtime="20201029 09:34:19.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.253" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:19.252" endtime="20201029 09:34:19.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.254" endtime="20201029 09:34:19.256"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.237" endtime="20201029 09:34:19.256"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.235" endtime="20201029 09:34:19.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.263" endtime="20201029 09:34:19.549"></status>
</kw>
<msg timestamp="20201029 09:34:19.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017569694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017581097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:19.262" endtime="20201029 09:34:19.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017569694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017581097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:19.554" endtime="20201029 09:34:19.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.562" endtime="20201029 09:34:19.565"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.259" endtime="20201029 09:34:19.565"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.257" endtime="20201029 09:34:19.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:19.570" level="INFO">${PHILIP_RES} = [{'diff': 1.1403000000000107e-05}, {'diff': 1.0931000000002217e-05}, {'diff': 1.0943999999998844e-05}, {'diff': 1.0943999999998844e-05}, {'diff': 1.0944999999998317e-05}, {'diff': 1.0930999999998747e-...</msg>
<status status="PASS" starttime="20201029 09:34:19.567" endtime="20201029 09:34:19.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:19.574" level="INFO">${RESULT} = {'diff': [1.1403000000000107e-05, 1.0931000000002217e-05, 1.0943999999998844e-05, 1.0943999999998844e-05, 1.0944999999998317e-05, 1.0930999999998747e-05, 1.0944000000002313e-05, 1.0944999999998317e-05...</msg>
<status status="PASS" starttime="20201029 09:34:19.571" endtime="20201029 09:34:19.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.578" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:19.577" endtime="20201029 09:34:19.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.581" level="INFO">VALUE: [1.1403000000000107e-05, 1.0931000000002217e-05, 1.0943999999998844e-05, 1.0943999999998844e-05, 1.0944999999998317e-05, 1.0930999999998747e-05, 1.0944000000002313e-05, 1.0944999999998317e-05, 1.0945000000001787e-05, 1.0944000000002313e-05, 1.0902000000000134e-05, 1.0945000000001787e-05, 1.0930999999998747e-05, 1.0943999999998844e-05, 1.0931000000002217e-05, 1.0930999999998747e-05, 1.0931000000002217e-05, 1.0958000000001883e-05, 1.0944999999998317e-05, 1.0931000000002217e-05, 1.0943999999998844e-05, 1.0915999999999704e-05, 1.0945000000001787e-05, 1.0930999999998747e-05, 1.0943999999998844e-05, 1.0945000000001787e-05, 1.0973000000000926e-05, 1.0916000000003173e-05, 1.0957999999998413e-05, 1.0916999999999177e-05, 1.1014000000000163e-05, 1.0943999999998844e-05, 1.0875000000000468e-05, 1.0916999999999177e-05, 1.0957999999998413e-05, 1.0944000000002313e-05, 1.0985999999997553e-05, 1.0945000000001787e-05, 1.0915999999999704e-05, 1.0944999999998317e-05, 1.0916999999999177e-05, 1.0943999999998844e-05, 1.0929999999999274e-05, 1.0917000000002647e-05, 1.0930999999998747e-05, 1.0944000000002313e-05, 1.0931000000002217e-05, 1.0944999999998317e-05, 1.0930000000002743e-05, 1.0943999999998844e-05]</msg>
<status status="PASS" starttime="20201029 09:34:19.580" endtime="20201029 09:34:19.581"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.575" endtime="20201029 09:34:19.582"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.233" endtime="20201029 09:34:19.582"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.211" endtime="20201029 09:34:19.582"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:19.585" endtime="20201029 09:34:19.604"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.583" endtime="20201029 09:34:19.605"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.613" endtime="20201029 09:34:19.622"></status>
</kw>
<msg timestamp="20201029 09:34:19.622" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:19.611" endtime="20201029 09:34:19.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.625" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:19.624" endtime="20201029 09:34:19.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.626" endtime="20201029 09:34:19.628"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.609" endtime="20201029 09:34:19.629"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.607" endtime="20201029 09:34:19.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.636" endtime="20201029 09:34:19.923"></status>
</kw>
<msg timestamp="20201029 09:34:19.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017610972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017623903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:19.634" endtime="20201029 09:34:19.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017610972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017623903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:19.927" endtime="20201029 09:34:19.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.936" endtime="20201029 09:34:19.937"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.632" endtime="20201029 09:34:19.938"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.630" endtime="20201029 09:34:19.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:19.942" level="INFO">${PHILIP_RES} = [{'diff': 1.2931000000000747e-05}, {'diff': 1.2500000000002093e-05}, {'diff': 1.2486999999998527e-05}, {'diff': 1.2499999999998623e-05}, {'diff': 1.2471999999999483e-05}, {'diff': 1.2500000000002093e-...</msg>
<status status="PASS" starttime="20201029 09:34:19.939" endtime="20201029 09:34:19.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:19.946" level="INFO">${RESULT} = {'diff': [1.2931000000000747e-05, 1.2500000000002093e-05, 1.2486999999998527e-05, 1.2499999999998623e-05, 1.2471999999999483e-05, 1.2500000000002093e-05, 1.2485999999999053e-05, 1.2499999999998623e-05...</msg>
<status status="PASS" starttime="20201029 09:34:19.943" endtime="20201029 09:34:19.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.951" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:19.950" endtime="20201029 09:34:19.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.953" level="INFO">VALUE: [1.2931000000000747e-05, 1.2500000000002093e-05, 1.2486999999998527e-05, 1.2499999999998623e-05, 1.2471999999999483e-05, 1.2500000000002093e-05, 1.2485999999999053e-05, 1.2499999999998623e-05, 1.2485999999999053e-05, 1.2486000000002523e-05, 1.2500000000002093e-05, 1.2485999999999053e-05, 1.2528000000001233e-05, 1.2499999999998623e-05, 1.2487000000001997e-05, 1.2472999999998957e-05, 1.2485999999999053e-05, 1.2499999999998623e-05, 1.2514000000001663e-05, 1.2499999999998623e-05, 1.2485999999999053e-05, 1.2485999999999053e-05, 1.2485999999999053e-05, 1.2485999999999053e-05, 1.2485999999999053e-05, 1.2485999999999053e-05, 1.2471999999999483e-05, 1.2487000000001997e-05, 1.2457999999999914e-05, 1.2485999999999053e-05, 1.2499999999998623e-05, 1.2486000000002523e-05, 1.2499999999998623e-05, 1.2499999999998623e-05, 1.2485999999999053e-05, 1.2472999999998957e-05, 1.2485999999999053e-05, 1.2485999999999053e-05, 1.2485999999999053e-05, 1.2486999999998527e-05, 1.2500000000002093e-05, 1.2471999999999483e-05, 1.2485999999999053e-05, 1.2486999999998527e-05, 1.2472000000002953e-05, 1.2500000000002093e-05, 1.2471999999999483e-05, 1.2486999999998527e-05, 1.2485999999999053e-05, 1.2472000000002953e-05]</msg>
<status status="PASS" starttime="20201029 09:34:19.952" endtime="20201029 09:34:19.954"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.947" endtime="20201029 09:34:19.955"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.605" endtime="20201029 09:34:19.955"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.583" endtime="20201029 09:34:19.956"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:19.958" endtime="20201029 09:34:19.977"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.956" endtime="20201029 09:34:19.978"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.986" endtime="20201029 09:34:19.995"></status>
</kw>
<msg timestamp="20201029 09:34:19.996" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:19.984" endtime="20201029 09:34:19.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.998" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:19.997" endtime="20201029 09:34:19.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.999" endtime="20201029 09:34:20.001"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.982" endtime="20201029 09:34:20.002"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.980" endtime="20201029 09:34:20.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.008" endtime="20201029 09:34:20.296"></status>
</kw>
<msg timestamp="20201029 09:34:20.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017504875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017519403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:20.007" endtime="20201029 09:34:20.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017504875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017519403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:20.301" endtime="20201029 09:34:20.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.309" endtime="20201029 09:34:20.311"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.004" endtime="20201029 09:34:20.311"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.003" endtime="20201029 09:34:20.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:20.316" level="INFO">${PHILIP_RES} = [{'diff': 1.4527999999999763e-05}, {'diff': 1.4083000000001539e-05}, {'diff': 1.40689999999985e-05}, {'diff': 1.40689999999985e-05}, {'diff': 1.4083000000001539e-05}, {'diff': 1.4055000000002399e-05},...</msg>
<status status="PASS" starttime="20201029 09:34:20.312" endtime="20201029 09:34:20.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:20.321" level="INFO">${RESULT} = {'diff': [1.4527999999999763e-05, 1.4083000000001539e-05, 1.40689999999985e-05, 1.40689999999985e-05, 1.4083000000001539e-05, 1.4055000000002399e-05, 1.4083000000001539e-05, 1.40689999999985e-05, 1.40...</msg>
<status status="PASS" starttime="20201029 09:34:20.317" endtime="20201029 09:34:20.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.325" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:20.324" endtime="20201029 09:34:20.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.328" level="INFO">VALUE: [1.4527999999999763e-05, 1.4083000000001539e-05, 1.40689999999985e-05, 1.40689999999985e-05, 1.4083000000001539e-05, 1.4055000000002399e-05, 1.4083000000001539e-05, 1.40689999999985e-05, 1.40689999999985e-05, 1.4042000000002303e-05, 1.40689999999985e-05, 1.4055999999998403e-05, 1.4027999999999263e-05, 1.4098000000000582e-05, 1.4070000000001442e-05, 1.4070000000001442e-05, 1.4083999999997543e-05, 1.4055999999998403e-05, 1.4069000000001969e-05, 1.4083000000001539e-05, 1.408299999999807e-05, 1.4000000000000123e-05, 1.4069000000001969e-05, 1.404099999999936e-05, 1.4069000000001969e-05, 1.408299999999807e-05, 1.405499999999893e-05, 1.4070000000001442e-05, 1.4083000000001539e-05, 1.4013999999999693e-05, 1.4152999999999388e-05, 1.4084000000001012e-05, 1.4084000000001012e-05, 1.4084000000001012e-05, 1.4125000000000248e-05, 1.40689999999985e-05, 1.4083000000001539e-05, 1.4069000000001969e-05, 1.409699999999764e-05, 1.405499999999893e-05, 1.4083000000001539e-05, 1.4069000000001969e-05, 1.405499999999893e-05, 1.408299999999807e-05, 1.40689999999985e-05, 1.4070000000001442e-05, 1.408299999999807e-05, 1.4070000000001442e-05, 1.4083999999997543e-05, 1.4070000000001442e-05]</msg>
<status status="PASS" starttime="20201029 09:34:20.326" endtime="20201029 09:34:20.328"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.322" endtime="20201029 09:34:20.328"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.978" endtime="20201029 09:34:20.329"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.956" endtime="20201029 09:34:20.329"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:20.331" endtime="20201029 09:34:20.351"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.330" endtime="20201029 09:34:20.351"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.359" endtime="20201029 09:34:20.369"></status>
</kw>
<msg timestamp="20201029 09:34:20.369" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.358" endtime="20201029 09:34:20.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.372" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.370" endtime="20201029 09:34:20.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.373" endtime="20201029 09:34:20.375"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.355" endtime="20201029 09:34:20.375"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.353" endtime="20201029 09:34:20.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.382" endtime="20201029 09:34:20.672"></status>
</kw>
<msg timestamp="20201029 09:34:20.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01770975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017725903, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:20.380" endtime="20201029 09:34:20.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01770975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017725903, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:20.677" endtime="20201029 09:34:20.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.685" endtime="20201029 09:34:20.687"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.378" endtime="20201029 09:34:20.687"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.376" endtime="20201029 09:34:20.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:20.692" level="INFO">${PHILIP_RES} = [{'diff': 1.615300000000139e-05}, {'diff': 1.563900000000132e-05}, {'diff': 1.5680000000000555e-05}, {'diff': 1.565300000000089e-05}, {'diff': 1.5680000000000555e-05}, {'diff': 1.566699999999699e-05},...</msg>
<status status="PASS" starttime="20201029 09:34:20.688" endtime="20201029 09:34:20.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:20.696" level="INFO">${RESULT} = {'diff': [1.615300000000139e-05, 1.563900000000132e-05, 1.5680000000000555e-05, 1.565300000000089e-05, 1.5680000000000555e-05, 1.566699999999699e-05, 1.565300000000089e-05, 1.5665999999997515e-05, 1.5...</msg>
<status status="PASS" starttime="20201029 09:34:20.693" endtime="20201029 09:34:20.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.700" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:20.699" endtime="20201029 09:34:20.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.703" level="INFO">VALUE: [1.615300000000139e-05, 1.563900000000132e-05, 1.5680000000000555e-05, 1.565300000000089e-05, 1.5680000000000555e-05, 1.566699999999699e-05, 1.565300000000089e-05, 1.5665999999997515e-05, 1.5681000000000028e-05, 1.5680000000000555e-05, 1.566700000000046e-05, 1.5665999999997515e-05, 1.565300000000089e-05, 1.5707999999999694e-05, 1.565300000000089e-05, 1.5681000000000028e-05, 1.5652000000001415e-05, 1.566700000000046e-05, 1.5707999999999694e-05, 1.5694999999999598e-05, 1.565300000000089e-05, 1.5665999999997515e-05, 1.5597999999998613e-05, 1.5680000000000555e-05, 1.566700000000046e-05, 1.5694000000000125e-05, 1.5681000000000028e-05, 1.566700000000046e-05, 1.5666000000000985e-05, 1.5681000000000028e-05, 1.5666000000000985e-05, 1.5681000000000028e-05, 1.5666000000000985e-05, 1.566699999999699e-05, 1.5707999999999694e-05, 1.563900000000132e-05, 1.566700000000046e-05, 1.5665999999997515e-05, 1.563900000000132e-05, 1.5665999999997515e-05, 1.5694999999999598e-05, 1.5681000000000028e-05, 1.5681000000000028e-05, 1.568099999999656e-05, 1.5666000000000985e-05, 1.566699999999699e-05, 1.5666000000000985e-05, 1.5681000000000028e-05, 1.5681000000000028e-05, 1.5679999999997085e-05]</msg>
<status status="PASS" starttime="20201029 09:34:20.701" endtime="20201029 09:34:20.703"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.697" endtime="20201029 09:34:20.704"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.352" endtime="20201029 09:34:20.704"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.329" endtime="20201029 09:34:20.704"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:20.706" endtime="20201029 09:34:20.726"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.705" endtime="20201029 09:34:20.726"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.734" endtime="20201029 09:34:20.744"></status>
</kw>
<msg timestamp="20201029 09:34:20.745" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.733" endtime="20201029 09:34:20.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.747" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.746" endtime="20201029 09:34:20.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.748" endtime="20201029 09:34:20.751"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.730" endtime="20201029 09:34:20.751"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.728" endtime="20201029 09:34:20.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.759" endtime="20201029 09:34:21.044"></status>
</kw>
<msg timestamp="20201029 09:34:21.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017401931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017419681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:20.757" endtime="20201029 09:34:21.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017401931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017419681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.049" endtime="20201029 09:34:21.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.059" endtime="20201029 09:34:21.061"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.754" endtime="20201029 09:34:21.062"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.752" endtime="20201029 09:34:21.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:21.066" level="INFO">${PHILIP_RES} = [{'diff': 1.7750000000000404e-05}, {'diff': 1.7306000000001653e-05}, {'diff': 1.7292000000002083e-05}, {'diff': 1.7291999999998614e-05}, {'diff': 1.7319999999997754e-05}, {'diff': 1.7305999999998184e-...</msg>
<status status="PASS" starttime="20201029 09:34:21.063" endtime="20201029 09:34:21.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:21.070" level="INFO">${RESULT} = {'diff': [1.7750000000000404e-05, 1.7306000000001653e-05, 1.7292000000002083e-05, 1.7291999999998614e-05, 1.7319999999997754e-05, 1.7305999999998184e-05, 1.730499999999871e-05, 1.7249999999999904e-05,...</msg>
<status status="PASS" starttime="20201029 09:34:21.067" endtime="20201029 09:34:21.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.074" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:21.073" endtime="20201029 09:34:21.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.077" level="INFO">VALUE: [1.7750000000000404e-05, 1.7306000000001653e-05, 1.7292000000002083e-05, 1.7291999999998614e-05, 1.7319999999997754e-05, 1.7305999999998184e-05, 1.730499999999871e-05, 1.7249999999999904e-05, 1.730499999999871e-05, 1.731900000000175e-05, 1.729099999999914e-05, 1.731900000000175e-05, 1.730500000000218e-05, 1.733300000000132e-05, 1.7264000000002944e-05, 1.7305999999998184e-05, 1.737500000000003e-05, 1.7305999999998184e-05, 1.7305999999998184e-05, 1.7305999999998184e-05, 1.737500000000003e-05, 1.7236999999999808e-05, 1.7249999999999904e-05, 1.7263e-05, 1.730500000000218e-05, 1.731900000000175e-05, 1.730499999999871e-05, 1.730499999999871e-05, 1.7291999999998614e-05, 1.731899999999828e-05, 1.7319999999997754e-05, 1.7277999999999044e-05, 1.7306000000001653e-05, 1.7305999999998184e-05, 1.7292000000002083e-05, 1.7292000000002083e-05, 1.7306000000001653e-05, 1.7292000000002083e-05, 1.733300000000132e-05, 1.73889999999996e-05, 1.731899999999828e-05, 1.731899999999828e-05, 1.730499999999871e-05, 1.731899999999828e-05, 1.731899999999828e-05, 1.737500000000003e-05, 1.7306000000001653e-05, 1.7348000000000363e-05, 1.7306000000001653e-05, 1.736100000000046e-05]</msg>
<status status="PASS" starttime="20201029 09:34:21.075" endtime="20201029 09:34:21.078"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.071" endtime="20201029 09:34:21.079"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.727" endtime="20201029 09:34:21.079"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.704" endtime="20201029 09:34:21.079"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:21.082" endtime="20201029 09:34:21.101"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.080" endtime="20201029 09:34:21.102"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.110" endtime="20201029 09:34:21.120"></status>
</kw>
<msg timestamp="20201029 09:34:21.120" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.108" endtime="20201029 09:34:21.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.123" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.121" endtime="20201029 09:34:21.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.124" endtime="20201029 09:34:21.126"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.105" endtime="20201029 09:34:21.126"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.104" endtime="20201029 09:34:21.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.133" endtime="20201029 09:34:21.420"></status>
</kw>
<msg timestamp="20201029 09:34:21.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017832028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017851458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.132" endtime="20201029 09:34:21.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017832028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017851458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.424" endtime="20201029 09:34:21.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.432" endtime="20201029 09:34:21.434"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.129" endtime="20201029 09:34:21.435"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.127" endtime="20201029 09:34:21.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:21.439" level="INFO">${PHILIP_RES} = [{'diff': 1.9430000000000835e-05}, {'diff': 1.8999999999998185e-05}, {'diff': 1.891700000000024e-05}, {'diff': 1.8971999999999045e-05}, {'diff': 1.895899999999895e-05}, {'diff': 1.8957999999999475e-05...</msg>
<status status="PASS" starttime="20201029 09:34:21.436" endtime="20201029 09:34:21.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:21.444" level="INFO">${RESULT} = {'diff': [1.9430000000000835e-05, 1.8999999999998185e-05, 1.891700000000024e-05, 1.8971999999999045e-05, 1.895899999999895e-05, 1.8957999999999475e-05, 1.8957999999999475e-05, 1.8972000000002515e-05, ...</msg>
<status status="PASS" starttime="20201029 09:34:21.440" endtime="20201029 09:34:21.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.448" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:21.447" endtime="20201029 09:34:21.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.451" level="INFO">VALUE: [1.9430000000000835e-05, 1.8999999999998185e-05, 1.891700000000024e-05, 1.8971999999999045e-05, 1.895899999999895e-05, 1.8957999999999475e-05, 1.8957999999999475e-05, 1.8972000000002515e-05, 1.894499999999938e-05, 1.891700000000024e-05, 1.8971999999999045e-05, 1.893099999999981e-05, 1.8985999999998615e-05, 1.8986000000002085e-05, 1.8999999999998185e-05, 1.8972000000002515e-05, 1.8957999999999475e-05, 1.893099999999981e-05, 1.893099999999981e-05, 1.8985999999998615e-05, 1.8986000000002085e-05, 1.9000000000001654e-05, 1.8971999999999045e-05, 1.8943999999999905e-05, 1.8971999999999045e-05, 1.9027999999997325e-05, 1.8972000000002515e-05, 1.8957999999999475e-05, 1.8958000000002945e-05, 1.8943999999999905e-05, 1.8971999999999045e-05, 1.8944000000003375e-05, 1.8999999999998185e-05, 1.8985999999998615e-05, 1.8929999999996866e-05, 1.8985999999998615e-05, 1.8971999999999045e-05, 1.9014000000001224e-05, 1.8943999999999905e-05, 1.8957999999999475e-05, 1.887499999999806e-05, 1.890300000000067e-05, 1.8971999999999045e-05, 1.8971999999999045e-05, 1.9014000000001224e-05, 1.8957999999999475e-05, 1.8971999999999045e-05, 1.8971999999999045e-05, 1.8957999999999475e-05, 1.8971999999999045e-05]</msg>
<status status="PASS" starttime="20201029 09:34:21.449" endtime="20201029 09:34:21.451"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.445" endtime="20201029 09:34:21.452"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.102" endtime="20201029 09:34:21.452"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.080" endtime="20201029 09:34:21.452"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:21.455" endtime="20201029 09:34:21.474"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.453" endtime="20201029 09:34:21.475"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.483" endtime="20201029 09:34:21.493"></status>
</kw>
<msg timestamp="20201029 09:34:21.494" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.481" endtime="20201029 09:34:21.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.496" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.495" endtime="20201029 09:34:21.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.497" endtime="20201029 09:34:21.499"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.479" endtime="20201029 09:34:21.499"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.477" endtime="20201029 09:34:21.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.507" endtime="20201029 09:34:21.793"></status>
</kw>
<msg timestamp="20201029 09:34:21.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017848208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017869278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.505" endtime="20201029 09:34:21.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017848208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017869278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.797" endtime="20201029 09:34:21.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.805" endtime="20201029 09:34:21.808"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.503" endtime="20201029 09:34:21.809"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.501" endtime="20201029 09:34:21.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:21.813" level="INFO">${PHILIP_RES} = [{'diff': 2.1069999999998035e-05}, {'diff': 2.065299999999895e-05}, {'diff': 2.066700000000199e-05}, {'diff': 2.065299999999895e-05}, {'diff': 2.066700000000199e-05}, {'diff': 2.066699999999852e-05}, ...</msg>
<status status="PASS" starttime="20201029 09:34:21.810" endtime="20201029 09:34:21.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:21.817" level="INFO">${RESULT} = {'diff': [2.1069999999998035e-05, 2.065299999999895e-05, 2.066700000000199e-05, 2.065299999999895e-05, 2.066700000000199e-05, 2.066699999999852e-05, 2.066700000000199e-05, 2.0611999999999714e-05, 2.06...</msg>
<status status="PASS" starttime="20201029 09:34:21.814" endtime="20201029 09:34:21.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.821" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:21.820" endtime="20201029 09:34:21.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.824" level="INFO">VALUE: [2.1069999999998035e-05, 2.065299999999895e-05, 2.066700000000199e-05, 2.065299999999895e-05, 2.066700000000199e-05, 2.066699999999852e-05, 2.066700000000199e-05, 2.0611999999999714e-05, 2.0666000000002516e-05, 2.0679999999998616e-05, 2.0708000000001225e-05, 2.0665999999999046e-05, 2.069500000000113e-05, 2.065299999999895e-05, 2.066699999999852e-05, 2.066699999999852e-05, 2.063899999999938e-05, 2.068100000000156e-05, 2.069500000000113e-05, 2.068100000000156e-05, 2.066699999999852e-05, 2.068100000000156e-05, 2.066699999999852e-05, 2.065300000000242e-05, 2.0651999999999476e-05, 2.0652000000002946e-05, 2.0708000000001225e-05, 2.065300000000242e-05, 2.065299999999895e-05, 2.066700000000199e-05, 2.066699999999852e-05, 2.066699999999852e-05, 2.068099999999809e-05, 2.062499999999981e-05, 2.066700000000199e-05, 2.066699999999852e-05, 2.068100000000156e-05, 2.0679999999998616e-05, 2.0694000000001656e-05, 2.0665999999999046e-05, 2.0666000000002516e-05, 2.0736000000000365e-05, 2.0666000000002516e-05, 2.065299999999895e-05, 2.065300000000242e-05, 2.066699999999852e-05, 2.068100000000156e-05, 2.066699999999852e-05, 2.065300000000242e-05, 2.066699999999852e-05]</msg>
<status status="PASS" starttime="20201029 09:34:21.823" endtime="20201029 09:34:21.824"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.818" endtime="20201029 09:34:21.825"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.475" endtime="20201029 09:34:21.825"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.453" endtime="20201029 09:34:21.825"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:21.828" endtime="20201029 09:34:21.847"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.826" endtime="20201029 09:34:21.848"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.856" endtime="20201029 09:34:21.866"></status>
</kw>
<msg timestamp="20201029 09:34:21.866" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.854" endtime="20201029 09:34:21.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.869" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.867" endtime="20201029 09:34:21.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.870" endtime="20201029 09:34:21.873"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.852" endtime="20201029 09:34:21.873"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.850" endtime="20201029 09:34:21.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.880" endtime="20201029 09:34:22.166"></status>
</kw>
<msg timestamp="20201029 09:34:22.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017543875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017566694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.879" endtime="20201029 09:34:22.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017543875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017566694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:22.171" endtime="20201029 09:34:22.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.179" endtime="20201029 09:34:22.181"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.876" endtime="20201029 09:34:22.182"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.874" endtime="20201029 09:34:22.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:22.186" level="INFO">${PHILIP_RES} = [{'diff': 2.281900000000031e-05}, {'diff': 2.238900000000113e-05}, {'diff': 2.238900000000113e-05}, {'diff': 2.237499999999809e-05}, {'diff': 2.237500000000156e-05}, {'diff': 2.237500000000156e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:34:22.183" endtime="20201029 09:34:22.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:22.191" level="INFO">${RESULT} = {'diff': [2.281900000000031e-05, 2.238900000000113e-05, 2.238900000000113e-05, 2.237499999999809e-05, 2.237500000000156e-05, 2.237500000000156e-05, 2.237499999999809e-05, 2.237500000000156e-05, 2.2374...</msg>
<status status="PASS" starttime="20201029 09:34:22.187" endtime="20201029 09:34:22.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.195" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:22.194" endtime="20201029 09:34:22.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.198" level="INFO">VALUE: [2.281900000000031e-05, 2.238900000000113e-05, 2.238900000000113e-05, 2.237499999999809e-05, 2.237500000000156e-05, 2.237500000000156e-05, 2.237499999999809e-05, 2.237500000000156e-05, 2.237499999999809e-05, 2.238900000000113e-05, 2.234699999999895e-05, 2.236099999999852e-05, 2.237500000000156e-05, 2.237499999999809e-05, 2.2443999999999936e-05, 2.236099999999852e-05, 2.238899999999766e-05, 2.238900000000113e-05, 2.237499999999809e-05, 2.237500000000156e-05, 2.237500000000156e-05, 2.238899999999766e-05, 2.238900000000113e-05, 2.2387999999998187e-05, 2.237500000000156e-05, 2.237500000000156e-05, 2.238899999999766e-05, 2.238900000000113e-05, 2.238900000000113e-05, 2.238899999999766e-05, 2.231899999999981e-05, 2.238899999999766e-05, 2.237500000000156e-05, 2.237499999999809e-05, 2.236099999999852e-05, 2.236100000000199e-05, 2.237499999999809e-05, 2.236100000000199e-05, 2.234700000000242e-05, 2.2401999999997757e-05, 2.237500000000156e-05, 2.238899999999766e-05, 2.237500000000156e-05, 2.236100000000199e-05, 2.237499999999809e-05, 2.237500000000156e-05, 2.243099999999984e-05, 2.238900000000113e-05, 2.238900000000113e-05, 2.236099999999852e-05]</msg>
<status status="PASS" starttime="20201029 09:34:22.196" endtime="20201029 09:34:22.199"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.191" endtime="20201029 09:34:22.199"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.848" endtime="20201029 09:34:22.200"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.826" endtime="20201029 09:34:22.200"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:22.202" endtime="20201029 09:34:22.222"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.201" endtime="20201029 09:34:22.222"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.230" endtime="20201029 09:34:22.241"></status>
</kw>
<msg timestamp="20201029 09:34:22.241" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.229" endtime="20201029 09:34:22.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.244" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.242" endtime="20201029 09:34:22.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.245" endtime="20201029 09:34:22.247"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.226" endtime="20201029 09:34:22.247"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.224" endtime="20201029 09:34:22.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.256" endtime="20201029 09:34:22.542"></status>
</kw>
<msg timestamp="20201029 09:34:22.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017776792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017801333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:22.254" endtime="20201029 09:34:22.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017776792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017801333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:22.546" endtime="20201029 09:34:22.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.554" endtime="20201029 09:34:22.556"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.250" endtime="20201029 09:34:22.557"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.248" endtime="20201029 09:34:22.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:22.561" level="INFO">${PHILIP_RES} = [{'diff': 2.4540999999999452e-05}, {'diff': 2.412499999999984e-05}, {'diff': 2.4137999999999937e-05}, {'diff': 2.4151999999999507e-05}, {'diff': 2.4166000000002547e-05}, {'diff': 2.412499999999984e-05...</msg>
<status status="PASS" starttime="20201029 09:34:22.558" endtime="20201029 09:34:22.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:22.566" level="INFO">${RESULT} = {'diff': [2.4540999999999452e-05, 2.412499999999984e-05, 2.4137999999999937e-05, 2.4151999999999507e-05, 2.4166000000002547e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.411100000000027e-05, 2....</msg>
<status status="PASS" starttime="20201029 09:34:22.562" endtime="20201029 09:34:22.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.571" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:22.570" endtime="20201029 09:34:22.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.573" level="INFO">VALUE: [2.4540999999999452e-05, 2.412499999999984e-05, 2.4137999999999937e-05, 2.4151999999999507e-05, 2.4166000000002547e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.411100000000027e-05, 2.412499999999984e-05, 2.4070000000001035e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.415299999999898e-05, 2.412499999999984e-05, 2.415300000000245e-05, 2.4096999999997232e-05, 2.413899999999941e-05, 2.413899999999941e-05, 2.42230000000003e-05, 2.411100000000027e-05, 2.413899999999941e-05, 2.411100000000027e-05, 2.411100000000027e-05, 2.412499999999984e-05, 2.4084000000000605e-05, 2.411100000000027e-05, 2.4111999999999745e-05, 2.413899999999941e-05, 2.413899999999941e-05, 2.4098000000000175e-05, 2.411100000000027e-05, 2.411100000000027e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.411100000000027e-05, 2.411100000000027e-05, 2.418099999999812e-05, 2.413899999999941e-05, 2.412499999999984e-05, 2.416700000000202e-05, 2.411100000000027e-05, 2.412499999999984e-05, 2.411100000000027e-05, 2.415299999999898e-05, 2.413899999999941e-05, 2.412499999999984e-05, 2.411100000000027e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.4098000000000175e-05]</msg>
<status status="PASS" starttime="20201029 09:34:22.572" endtime="20201029 09:34:22.573"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.567" endtime="20201029 09:34:22.574"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.223" endtime="20201029 09:34:22.574"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.200" endtime="20201029 09:34:22.575"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:22.577" endtime="20201029 09:34:22.596"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.575" endtime="20201029 09:34:22.597"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.605" endtime="20201029 09:34:22.616"></status>
</kw>
<msg timestamp="20201029 09:34:22.616" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.603" endtime="20201029 09:34:22.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.619" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.617" endtime="20201029 09:34:22.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.620" endtime="20201029 09:34:22.622"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.601" endtime="20201029 09:34:22.622"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.599" endtime="20201029 09:34:22.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.629" endtime="20201029 09:34:22.915"></status>
</kw>
<msg timestamp="20201029 09:34:22.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017514931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017541278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:22.628" endtime="20201029 09:34:22.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017514931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017541278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:22.919" endtime="20201029 09:34:22.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.927" endtime="20201029 09:34:22.930"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.625" endtime="20201029 09:34:22.931"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.624" endtime="20201029 09:34:22.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:22.935" level="INFO">${PHILIP_RES} = [{'diff': 2.6346999999999482e-05}, {'diff': 2.590300000000073e-05}, {'diff': 2.5887999999998218e-05}, {'diff': 2.590300000000073e-05}, {'diff': 2.590299999999726e-05}, {'diff': 2.588900000000116e-05},...</msg>
<status status="PASS" starttime="20201029 09:34:22.932" endtime="20201029 09:34:22.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:22.939" level="INFO">${RESULT} = {'diff': [2.6346999999999482e-05, 2.590300000000073e-05, 2.5887999999998218e-05, 2.590300000000073e-05, 2.590299999999726e-05, 2.588900000000116e-05, 2.5916000000000827e-05, 2.590300000000073e-05, 2.5...</msg>
<status status="PASS" starttime="20201029 09:34:22.936" endtime="20201029 09:34:22.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.944" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:22.943" endtime="20201029 09:34:22.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.946" level="INFO">VALUE: [2.6346999999999482e-05, 2.590300000000073e-05, 2.5887999999998218e-05, 2.590300000000073e-05, 2.590299999999726e-05, 2.588900000000116e-05, 2.5916000000000827e-05, 2.590300000000073e-05, 2.590300000000073e-05, 2.588899999999769e-05, 2.593099999999987e-05, 2.5901999999997788e-05, 2.588900000000116e-05, 2.590300000000073e-05, 2.593099999999987e-05, 2.5874999999998122e-05, 2.5888000000001687e-05, 2.59170000000003e-05, 2.5846999999998982e-05, 2.587500000000159e-05, 2.5846999999998982e-05, 2.588900000000116e-05, 2.5874999999998122e-05, 2.588900000000116e-05, 2.590300000000073e-05, 2.588900000000116e-05, 2.588900000000116e-05, 2.590300000000073e-05, 2.588900000000116e-05, 2.5874999999998122e-05, 2.588900000000116e-05, 2.588899999999769e-05, 2.590300000000073e-05, 2.588900000000116e-05, 2.5902000000001257e-05, 2.590300000000073e-05, 2.588899999999769e-05, 2.593099999999987e-05, 2.5901999999997788e-05, 2.588900000000116e-05, 2.5874999999998122e-05, 2.588900000000116e-05, 2.588900000000116e-05, 2.588900000000116e-05, 2.588899999999769e-05, 2.5818999999999842e-05, 2.588900000000116e-05, 2.588899999999769e-05, 2.590300000000073e-05, 2.590299999999726e-05]</msg>
<status status="PASS" starttime="20201029 09:34:22.945" endtime="20201029 09:34:22.947"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.940" endtime="20201029 09:34:22.947"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.597" endtime="20201029 09:34:22.948"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.575" endtime="20201029 09:34:22.948"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:22.950" endtime="20201029 09:34:22.969"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.949" endtime="20201029 09:34:22.970"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.978" endtime="20201029 09:34:22.989"></status>
</kw>
<msg timestamp="20201029 09:34:22.989" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.976" endtime="20201029 09:34:22.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.992" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.991" endtime="20201029 09:34:22.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.993" endtime="20201029 09:34:22.996"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.974" endtime="20201029 09:34:22.996"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.972" endtime="20201029 09:34:22.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.003" endtime="20201029 09:34:23.290"></status>
</kw>
<msg timestamp="20201029 09:34:23.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01771325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017741403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:23.002" endtime="20201029 09:34:23.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01771325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017741403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:23.294" endtime="20201029 09:34:23.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.303" endtime="20201029 09:34:23.304"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.999" endtime="20201029 09:34:23.305"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.997" endtime="20201029 09:34:23.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:23.309" level="INFO">${PHILIP_RES} = [{'diff': 2.8152999999999512e-05}, {'diff': 2.7736000000000427e-05}, {'diff': 2.769500000000119e-05}, {'diff': 2.769499999999772e-05}, {'diff': 2.7722000000000857e-05}, {'diff': 2.7679999999998678e-05...</msg>
<status status="PASS" starttime="20201029 09:34:23.306" endtime="20201029 09:34:23.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:23.313" level="INFO">${RESULT} = {'diff': [2.8152999999999512e-05, 2.7736000000000427e-05, 2.769500000000119e-05, 2.769499999999772e-05, 2.7722000000000857e-05, 2.7679999999998678e-05, 2.769500000000119e-05, 2.770900000000076e-05, 2....</msg>
<status status="PASS" starttime="20201029 09:34:23.310" endtime="20201029 09:34:23.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.318" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:23.317" endtime="20201029 09:34:23.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.320" level="INFO">VALUE: [2.8152999999999512e-05, 2.7736000000000427e-05, 2.769500000000119e-05, 2.769499999999772e-05, 2.7722000000000857e-05, 2.7679999999998678e-05, 2.769500000000119e-05, 2.770900000000076e-05, 2.7679999999998678e-05, 2.7652999999999012e-05, 2.7721999999997388e-05, 2.772300000000033e-05, 2.7708000000001287e-05, 2.7708000000001287e-05, 2.770900000000076e-05, 2.769500000000119e-05, 2.7707999999997818e-05, 2.7791999999998707e-05, 2.768099999999815e-05, 2.766700000000205e-05, 2.7722000000000857e-05, 2.7722000000000857e-05, 2.769500000000119e-05, 2.7749999999999997e-05, 2.7693999999998248e-05, 2.7665999999999108e-05, 2.765300000000248e-05, 2.7708000000001287e-05, 2.7694000000001717e-05, 2.7679999999998678e-05, 2.770899999999729e-05, 2.768099999999815e-05, 2.7722000000000857e-05, 2.7708000000001287e-05, 2.769500000000119e-05, 2.770899999999729e-05, 2.7707999999997818e-05, 2.768099999999815e-05, 2.769500000000119e-05, 2.7722000000000857e-05, 2.7694000000001717e-05, 2.769500000000119e-05, 2.769500000000119e-05, 2.7707999999997818e-05, 2.7707999999997818e-05, 2.7708000000001287e-05, 2.770900000000076e-05, 2.766700000000205e-05, 2.7693999999998248e-05, 2.769499999999772e-05]</msg>
<status status="PASS" starttime="20201029 09:34:23.319" endtime="20201029 09:34:23.321"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.314" endtime="20201029 09:34:23.322"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.970" endtime="20201029 09:34:23.322"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.948" endtime="20201029 09:34:23.322"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:23.325" endtime="20201029 09:34:23.344"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.323" endtime="20201029 09:34:23.345"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.353" endtime="20201029 09:34:23.364"></status>
</kw>
<msg timestamp="20201029 09:34:23.365" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.351" endtime="20201029 09:34:23.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.367" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.366" endtime="20201029 09:34:23.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.369" endtime="20201029 09:34:23.370"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.349" endtime="20201029 09:34:23.371"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.347" endtime="20201029 09:34:23.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.378" endtime="20201029 09:34:23.664"></status>
</kw>
<msg timestamp="20201029 09:34:23.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018104514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0181345, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:23.376" endtime="20201029 09:34:23.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018104514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0181345, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:23.668" endtime="20201029 09:34:23.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.677" endtime="20201029 09:34:23.678"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.373" endtime="20201029 09:34:23.679"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.372" endtime="20201029 09:34:23.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:23.683" level="INFO">${PHILIP_RES} = [{'diff': 2.9986000000002677e-05}, {'diff': 2.9526999999997944e-05}, {'diff': 2.9526999999997944e-05}, {'diff': 2.9528000000000887e-05}, {'diff': 2.9582999999999693e-05}, {'diff': 2.9527000000001413e-...</msg>
<status status="PASS" starttime="20201029 09:34:23.680" endtime="20201029 09:34:23.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:23.688" level="INFO">${RESULT} = {'diff': [2.9986000000002677e-05, 2.9526999999997944e-05, 2.9526999999997944e-05, 2.9528000000000887e-05, 2.9582999999999693e-05, 2.9527000000001413e-05, 2.9582999999999693e-05, 2.9528000000000887e-05...</msg>
<status status="PASS" starttime="20201029 09:34:23.684" endtime="20201029 09:34:23.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.693" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:23.692" endtime="20201029 09:34:23.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.695" level="INFO">VALUE: [2.9986000000002677e-05, 2.9526999999997944e-05, 2.9526999999997944e-05, 2.9528000000000887e-05, 2.9582999999999693e-05, 2.9527000000001413e-05, 2.9582999999999693e-05, 2.9528000000000887e-05, 2.9540999999997514e-05, 2.9513999999997848e-05, 2.9541000000000983e-05, 2.9514000000001317e-05, 2.9514000000001317e-05, 2.9514000000001317e-05, 2.9514000000001317e-05, 2.9513999999997848e-05, 2.9513999999997848e-05, 2.9499999999998278e-05, 2.9514000000001317e-05, 2.9542000000000457e-05, 2.9598000000002206e-05, 2.9514000000001317e-05, 2.9514000000001317e-05, 2.9541999999996987e-05, 2.9527999999997417e-05, 2.9500000000001747e-05, 2.9528000000000887e-05, 2.9514000000001317e-05, 2.9542000000000457e-05, 2.9542000000000457e-05, 2.9527999999997417e-05, 2.9542000000000457e-05, 2.9542000000000457e-05, 2.9528000000000887e-05, 2.9486000000002177e-05, 2.9514000000001317e-05, 2.9499999999998278e-05, 2.9527999999997417e-05, 2.9472000000002607e-05, 2.9528000000000887e-05, 2.9528000000000887e-05, 2.9528000000000887e-05, 2.9528000000000887e-05, 2.9528000000000887e-05, 2.9514000000001317e-05, 2.9528000000000887e-05, 2.9528000000000887e-05, 2.9528000000000887e-05, 2.9485999999998708e-05, 2.9528000000000887e-05]</msg>
<status status="PASS" starttime="20201029 09:34:23.694" endtime="20201029 09:34:23.696"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.689" endtime="20201029 09:34:23.696"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.345" endtime="20201029 09:34:23.696"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.323" endtime="20201029 09:34:23.697"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:23.699" endtime="20201029 09:34:23.719"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.698" endtime="20201029 09:34:23.719"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.728" endtime="20201029 09:34:23.739"></status>
</kw>
<msg timestamp="20201029 09:34:23.739" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.726" endtime="20201029 09:34:23.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.742" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.740" endtime="20201029 09:34:23.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.743" endtime="20201029 09:34:23.744"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.723" endtime="20201029 09:34:23.745"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.721" endtime="20201029 09:34:23.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.752" endtime="20201029 09:34:24.037"></status>
</kw>
<msg timestamp="20201029 09:34:24.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018208222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018240069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:23.750" endtime="20201029 09:34:24.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018208222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018240069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.041" endtime="20201029 09:34:24.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.050" endtime="20201029 09:34:24.051"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.748" endtime="20201029 09:34:24.052"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.746" endtime="20201029 09:34:24.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:24.056" level="INFO">${PHILIP_RES} = [{'diff': 3.184700000000151e-05}, {'diff': 3.1444000000002e-05}, {'diff': 3.138899999999972e-05}, {'diff': 3.138899999999972e-05}, {'diff': 3.137500000000015e-05}, {'diff': 3.138899999999972e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:24.053" endtime="20201029 09:34:24.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:24.061" level="INFO">${RESULT} = {'diff': [3.184700000000151e-05, 3.1444000000002e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.137500000000015e-05, 3.138899999999972e-05, 3.136100000000058e-05, 3.138899999999972e-05, 3.137500...</msg>
<status status="PASS" starttime="20201029 09:34:24.057" endtime="20201029 09:34:24.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.065" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:24.064" endtime="20201029 09:34:24.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.067" level="INFO">VALUE: [3.184700000000151e-05, 3.1444000000002e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.137500000000015e-05, 3.138899999999972e-05, 3.136100000000058e-05, 3.138899999999972e-05, 3.137500000000015e-05, 3.136100000000058e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.138800000000025e-05, 3.14310000000019e-05, 3.138899999999972e-05, 3.138900000000319e-05, 3.137500000000015e-05, 3.140299999999929e-05, 3.138900000000319e-05, 3.138899999999972e-05, 3.137500000000015e-05, 3.138899999999972e-05, 3.141700000000233e-05, 3.144399999999853e-05, 3.138800000000025e-05, 3.137500000000015e-05, 3.137500000000015e-05, 3.138899999999972e-05, 3.140299999999929e-05, 3.137500000000015e-05, 3.144399999999853e-05, 3.138800000000025e-05, 3.140299999999929e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.138800000000025e-05, 3.137500000000015e-05, 3.1348000000000487e-05, 3.140299999999929e-05, 3.138899999999972e-05, 3.136100000000058e-05, 3.1318999999998404e-05, 3.138899999999972e-05, 3.140299999999929e-05, 3.137500000000015e-05, 3.137500000000015e-05, 3.141700000000233e-05, 3.138800000000025e-05]</msg>
<status status="PASS" starttime="20201029 09:34:24.066" endtime="20201029 09:34:24.068"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.061" endtime="20201029 09:34:24.068"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.720" endtime="20201029 09:34:24.069"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.697" endtime="20201029 09:34:24.069"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:24.071" endtime="20201029 09:34:24.090"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.070" endtime="20201029 09:34:24.091"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.099" endtime="20201029 09:34:24.110"></status>
</kw>
<msg timestamp="20201029 09:34:24.111" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.098" endtime="20201029 09:34:24.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.113" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.112" endtime="20201029 09:34:24.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.114" endtime="20201029 09:34:24.117"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.095" endtime="20201029 09:34:24.117"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.093" endtime="20201029 09:34:24.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.124" endtime="20201029 09:34:24.410"></status>
</kw>
<msg timestamp="20201029 09:34:24.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018127875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018161583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.123" endtime="20201029 09:34:24.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018127875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018161583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.414" endtime="20201029 09:34:24.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.422" endtime="20201029 09:34:24.424"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.120" endtime="20201029 09:34:24.425"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.118" endtime="20201029 09:34:24.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:24.429" level="INFO">${PHILIP_RES} = [{'diff': 3.370799999999688e-05}, {'diff': 3.330600000000031e-05}, {'diff': 3.320799999999985e-05}, {'diff': 3.32779999999977e-05}, {'diff': 3.331999999999988e-05}, {'diff': 3.325000000000203e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:24.426" endtime="20201029 09:34:24.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:24.433" level="INFO">${RESULT} = {'diff': [3.370799999999688e-05, 3.330600000000031e-05, 3.320799999999985e-05, 3.32779999999977e-05, 3.331999999999988e-05, 3.325000000000203e-05, 3.326399999999813e-05, 3.324999999999856e-05, 3.32630...</msg>
<status status="PASS" starttime="20201029 09:34:24.430" endtime="20201029 09:34:24.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.437" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:24.436" endtime="20201029 09:34:24.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.440" level="INFO">VALUE: [3.370799999999688e-05, 3.330600000000031e-05, 3.320799999999985e-05, 3.32779999999977e-05, 3.331999999999988e-05, 3.325000000000203e-05, 3.326399999999813e-05, 3.324999999999856e-05, 3.3263000000002124e-05, 3.324999999999856e-05, 3.32640000000016e-05, 3.32640000000016e-05, 3.320799999999985e-05, 3.326399999999813e-05, 3.32640000000016e-05, 3.327800000000117e-05, 3.320899999999932e-05, 3.325000000000203e-05, 3.32640000000016e-05, 3.326399999999813e-05, 3.327800000000117e-05, 3.329200000000074e-05, 3.327800000000117e-05, 3.3304999999997364e-05, 3.32640000000016e-05, 3.3262999999998655e-05, 3.324999999999856e-05, 3.32640000000016e-05, 3.32640000000016e-05, 3.324999999999856e-05, 3.32640000000016e-05, 3.329200000000074e-05, 3.327800000000117e-05, 3.326399999999813e-05, 3.3277000000001694e-05, 3.32640000000016e-05, 3.32779999999977e-05, 3.32640000000016e-05, 3.32640000000016e-05, 3.324999999999856e-05, 3.324999999999856e-05, 3.32640000000016e-05, 3.3262999999998655e-05, 3.329200000000074e-05, 3.32640000000016e-05, 3.32640000000016e-05, 3.324999999999856e-05, 3.3305000000000834e-05, 3.32640000000016e-05, 3.326399999999813e-05]</msg>
<status status="PASS" starttime="20201029 09:34:24.438" endtime="20201029 09:34:24.441"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.434" endtime="20201029 09:34:24.441"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.091" endtime="20201029 09:34:24.442"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.069" endtime="20201029 09:34:24.442"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:24.444" endtime="20201029 09:34:24.464"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.443" endtime="20201029 09:34:24.464"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.473" endtime="20201029 09:34:24.485"></status>
</kw>
<msg timestamp="20201029 09:34:24.485" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.471" endtime="20201029 09:34:24.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.488" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.486" endtime="20201029 09:34:24.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.489" endtime="20201029 09:34:24.490"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.469" endtime="20201029 09:34:24.491"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.467" endtime="20201029 09:34:24.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.498" endtime="20201029 09:34:24.782"></status>
</kw>
<msg timestamp="20201029 09:34:24.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018051667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018087292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.496" endtime="20201029 09:34:24.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018051667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018087292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.786" endtime="20201029 09:34:24.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.795" endtime="20201029 09:34:24.796"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.493" endtime="20201029 09:34:24.797"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.492" endtime="20201029 09:34:24.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:24.801" level="INFO">${PHILIP_RES} = [{'diff': 3.5625000000000934e-05}, {'diff': 3.519499999999828e-05}, {'diff': 3.522199999999795e-05}, {'diff': 3.5166999999999143e-05}, {'diff': 3.518099999999871e-05}, {'diff': 3.523700000000046e-05},...</msg>
<status status="PASS" starttime="20201029 09:34:24.798" endtime="20201029 09:34:24.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:24.806" level="INFO">${RESULT} = {'diff': [3.5625000000000934e-05, 3.519499999999828e-05, 3.522199999999795e-05, 3.5166999999999143e-05, 3.518099999999871e-05, 3.523700000000046e-05, 3.518100000000218e-05, 3.518099999999871e-05, 3.51...</msg>
<status status="PASS" starttime="20201029 09:34:24.802" endtime="20201029 09:34:24.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.811" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:24.810" endtime="20201029 09:34:24.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.813" level="INFO">VALUE: [3.5625000000000934e-05, 3.519499999999828e-05, 3.522199999999795e-05, 3.5166999999999143e-05, 3.518099999999871e-05, 3.523700000000046e-05, 3.518100000000218e-05, 3.518099999999871e-05, 3.517999999999924e-05, 3.5152999999999573e-05, 3.519399999999881e-05, 3.519399999999881e-05, 3.522200000000142e-05, 3.517999999999924e-05, 3.516599999999967e-05, 3.5166999999999143e-05, 3.517999999999924e-05, 3.515199999999663e-05, 3.517999999999924e-05, 3.522200000000142e-05, 3.519399999999881e-05, 3.518000000000271e-05, 3.516599999999967e-05, 3.516599999999967e-05, 3.519400000000228e-05, 3.519400000000228e-05, 3.522199999999795e-05, 3.5166999999999143e-05, 3.518099999999871e-05, 3.520800000000185e-05, 3.520799999999838e-05, 3.5166999999999143e-05, 3.518100000000218e-05, 3.5152999999999573e-05, 3.5166999999999143e-05, 3.525000000000056e-05, 3.5152999999999573e-05, 3.518100000000218e-05, 3.5152999999999573e-05, 3.519499999999828e-05, 3.519500000000175e-05, 3.523600000000099e-05, 3.5166999999999143e-05, 3.519499999999828e-05, 3.5139000000000004e-05, 3.518100000000218e-05, 3.518099999999871e-05, 3.518099999999871e-05, 3.518100000000218e-05, 3.5139000000000004e-05]</msg>
<status status="PASS" starttime="20201029 09:34:24.812" endtime="20201029 09:34:24.814"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.807" endtime="20201029 09:34:24.814"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.465" endtime="20201029 09:34:24.814"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.442" endtime="20201029 09:34:24.815"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:24.817" endtime="20201029 09:34:24.837"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.816" endtime="20201029 09:34:24.837"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.845" endtime="20201029 09:34:24.858"></status>
</kw>
<msg timestamp="20201029 09:34:24.858" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.844" endtime="20201029 09:34:24.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.861" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.859" endtime="20201029 09:34:24.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.862" endtime="20201029 09:34:24.863"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.841" endtime="20201029 09:34:24.864"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.839" endtime="20201029 09:34:24.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.871" endtime="20201029 09:34:25.157"></status>
</kw>
<msg timestamp="20201029 09:34:25.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017504097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017541694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.869" endtime="20201029 09:34:25.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017504097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017541694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:25.162" endtime="20201029 09:34:25.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.173" endtime="20201029 09:34:25.177"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.866" endtime="20201029 09:34:25.178"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.865" endtime="20201029 09:34:25.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:25.184" level="INFO">${PHILIP_RES} = [{'diff': 3.7597000000000325e-05}, {'diff': 3.7111000000002864e-05}, {'diff': 3.705600000000059e-05}, {'diff': 3.7167000000001144e-05}, {'diff': 3.7110999999999394e-05}, {'diff': 3.7110999999999394e-0...</msg>
<status status="PASS" starttime="20201029 09:34:25.180" endtime="20201029 09:34:25.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:25.188" level="INFO">${RESULT} = {'diff': [3.7597000000000325e-05, 3.7111000000002864e-05, 3.705600000000059e-05, 3.7167000000001144e-05, 3.7110999999999394e-05, 3.7110999999999394e-05, 3.7124999999998964e-05, 3.7124999999998964e-05,...</msg>
<status status="PASS" starttime="20201029 09:34:25.185" endtime="20201029 09:34:25.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.192" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:25.191" endtime="20201029 09:34:25.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.195" level="INFO">VALUE: [3.7597000000000325e-05, 3.7111000000002864e-05, 3.705600000000059e-05, 3.7167000000001144e-05, 3.7110999999999394e-05, 3.7110999999999394e-05, 3.7124999999998964e-05, 3.7124999999998964e-05, 3.7124999999998964e-05, 3.7096999999999825e-05, 3.71520000000021e-05, 3.709800000000277e-05, 3.7110999999999394e-05, 3.7083000000000255e-05, 3.7180999999997244e-05, 3.7138999999998534e-05, 3.7124999999998964e-05, 3.7110999999999394e-05, 3.704199999999755e-05, 3.7124999999998964e-05, 3.7111000000002864e-05, 3.7125000000002434e-05, 3.7110999999999394e-05, 3.7110999999999394e-05, 3.7152999999998104e-05, 3.7110999999999394e-05, 3.7124999999998964e-05, 3.7124999999998964e-05, 3.7097000000003294e-05, 3.7125000000002434e-05, 3.7110999999999394e-05, 3.7166999999997674e-05, 3.7124999999998964e-05, 3.7138999999998534e-05, 3.7124999999998964e-05, 3.7110999999999394e-05, 3.7124999999998964e-05, 3.7096999999999825e-05, 3.7111000000002864e-05, 3.718000000000124e-05, 3.7124999999998964e-05, 3.708399999999973e-05, 3.713799999999906e-05, 3.7096999999999825e-05, 3.7083000000000255e-05, 3.7096999999999825e-05, 3.7096999999999825e-05, 3.7125000000002434e-05, 3.7096999999999825e-05, 3.71659999999982e-05]</msg>
<status status="PASS" starttime="20201029 09:34:25.193" endtime="20201029 09:34:25.195"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.189" endtime="20201029 09:34:25.196"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.838" endtime="20201029 09:34:25.196"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.815" endtime="20201029 09:34:25.197"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:25.199" endtime="20201029 09:34:25.219"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.198" endtime="20201029 09:34:25.219"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.228" endtime="20201029 09:34:25.241"></status>
</kw>
<msg timestamp="20201029 09:34:25.241" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.227" endtime="20201029 09:34:25.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.244" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.242" endtime="20201029 09:34:25.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.245" endtime="20201029 09:34:25.247"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.224" endtime="20201029 09:34:25.248"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.222" endtime="20201029 09:34:25.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.255" endtime="20201029 09:34:25.541"></status>
</kw>
<msg timestamp="20201029 09:34:25.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018816028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018855556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:25.253" endtime="20201029 09:34:25.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018816028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018855556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:25.545" endtime="20201029 09:34:25.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.554" endtime="20201029 09:34:25.555"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.251" endtime="20201029 09:34:25.556"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.249" endtime="20201029 09:34:25.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:25.560" level="INFO">${PHILIP_RES} = [{'diff': 3.952800000000048e-05}, {'diff': 3.9111000000001395e-05}, {'diff': 3.9082999999998785e-05}, {'diff': 3.9096999999998355e-05}, {'diff': 3.9082999999998785e-05}, {'diff': 3.9166999999999674e-0...</msg>
<status status="PASS" starttime="20201029 09:34:25.557" endtime="20201029 09:34:25.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:25.564" level="INFO">${RESULT} = {'diff': [3.952800000000048e-05, 3.9111000000001395e-05, 3.9082999999998785e-05, 3.9096999999998355e-05, 3.9082999999998785e-05, 3.9166999999999674e-05, 3.9125000000000965e-05, 3.9111000000001395e-05,...</msg>
<status status="PASS" starttime="20201029 09:34:25.561" endtime="20201029 09:34:25.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.569" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:25.568" endtime="20201029 09:34:25.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.571" level="INFO">VALUE: [3.952800000000048e-05, 3.9111000000001395e-05, 3.9082999999998785e-05, 3.9096999999998355e-05, 3.9082999999998785e-05, 3.9166999999999674e-05, 3.9125000000000965e-05, 3.9111000000001395e-05, 3.9097000000001825e-05, 3.9083000000002255e-05, 3.907000000000216e-05, 3.9096999999998355e-05, 3.908399999999826e-05, 3.9082999999998785e-05, 3.9096999999998355e-05, 3.9110999999997925e-05, 3.9082999999998785e-05, 3.907000000000216e-05, 3.9097000000001825e-05, 3.90980000000013e-05, 3.9097000000001825e-05, 3.9082999999998785e-05, 3.9068999999999215e-05, 3.9068999999999215e-05, 3.909799999999783e-05, 3.9082999999998785e-05, 3.90980000000013e-05, 3.9068999999999215e-05, 3.9083000000002255e-05, 3.9083000000002255e-05, 3.9097000000001825e-05, 3.9097000000001825e-05, 3.9082999999998785e-05, 3.906999999999869e-05, 3.9082999999998785e-05, 3.9111000000001395e-05, 3.9110999999997925e-05, 3.9096999999998355e-05, 3.908400000000173e-05, 3.9069000000002685e-05, 3.904199999999955e-05, 3.9111000000001395e-05, 3.906999999999869e-05, 3.9096999999998355e-05, 3.9096999999998355e-05, 3.9124999999997495e-05, 3.9068999999999215e-05, 3.9111000000001395e-05, 3.9082999999998785e-05, 3.9097000000001825e-05]</msg>
<status status="PASS" starttime="20201029 09:34:25.570" endtime="20201029 09:34:25.573"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.565" endtime="20201029 09:34:25.573"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.220" endtime="20201029 09:34:25.574"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.197" endtime="20201029 09:34:25.574"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:25.576" endtime="20201029 09:34:25.595"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.575" endtime="20201029 09:34:25.596"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.604" endtime="20201029 09:34:25.617"></status>
</kw>
<msg timestamp="20201029 09:34:25.617" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.603" endtime="20201029 09:34:25.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.620" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.618" endtime="20201029 09:34:25.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.621" endtime="20201029 09:34:25.622"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.600" endtime="20201029 09:34:25.623"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.598" endtime="20201029 09:34:25.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.630" endtime="20201029 09:34:25.916"></status>
</kw>
<msg timestamp="20201029 09:34:25.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017764667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017806194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:25.628" endtime="20201029 09:34:25.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017764667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017806194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:25.920" endtime="20201029 09:34:25.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.928" endtime="20201029 09:34:25.930"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.626" endtime="20201029 09:34:25.930"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.624" endtime="20201029 09:34:25.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:25.935" level="INFO">${PHILIP_RES} = [{'diff': 4.1526999999999537e-05}, {'diff': 4.108400000000026e-05}, {'diff': 4.109799999999983e-05}, {'diff': 4.108400000000026e-05}, {'diff': 4.107000000000069e-05}, {'diff': 4.109799999999983e-05}, ...</msg>
<status status="PASS" starttime="20201029 09:34:25.932" endtime="20201029 09:34:25.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:25.940" level="INFO">${RESULT} = {'diff': [4.1526999999999537e-05, 4.108400000000026e-05, 4.109799999999983e-05, 4.108400000000026e-05, 4.107000000000069e-05, 4.109799999999983e-05, 4.1138999999999065e-05, 4.108400000000026e-05, 4.10...</msg>
<status status="PASS" starttime="20201029 09:34:25.936" endtime="20201029 09:34:25.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.944" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:25.943" endtime="20201029 09:34:25.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.947" level="INFO">VALUE: [4.1526999999999537e-05, 4.108400000000026e-05, 4.109799999999983e-05, 4.108400000000026e-05, 4.107000000000069e-05, 4.109799999999983e-05, 4.1138999999999065e-05, 4.108400000000026e-05, 4.1096999999996886e-05, 4.108400000000026e-05, 4.107000000000069e-05, 4.1096999999996886e-05, 4.1138999999999065e-05, 4.1083000000000786e-05, 4.1083000000000786e-05, 4.1083000000000786e-05, 4.1026999999999036e-05, 4.1097000000000355e-05, 4.1083000000000786e-05, 4.1082999999997316e-05, 4.1083000000000786e-05, 4.1083000000000786e-05, 4.1054999999998176e-05, 4.1069000000001216e-05, 4.1152999999998635e-05, 4.1138999999999065e-05, 4.1083000000000786e-05, 4.1068999999997746e-05, 4.1138999999999065e-05, 4.1083000000000786e-05, 4.1069000000001216e-05, 4.1069000000001216e-05, 4.1068999999997746e-05, 4.1083000000000786e-05, 4.1069000000001216e-05, 4.1082999999997316e-05, 4.1083000000000786e-05, 4.106999999999722e-05, 4.1097000000000355e-05, 4.1083000000000786e-05, 4.1096999999996886e-05, 4.1083000000000786e-05, 4.1110999999999925e-05, 4.104199999999808e-05, 4.108400000000026e-05, 4.109799999999983e-05, 4.107000000000069e-05, 4.107000000000069e-05, 4.108399999999679e-05, 4.107000000000069e-05]</msg>
<status status="PASS" starttime="20201029 09:34:25.945" endtime="20201029 09:34:25.947"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.941" endtime="20201029 09:34:25.948"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.597" endtime="20201029 09:34:25.948"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.574" endtime="20201029 09:34:25.949"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:25.951" endtime="20201029 09:34:25.970"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.950" endtime="20201029 09:34:25.971"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.979" endtime="20201029 09:34:25.992"></status>
</kw>
<msg timestamp="20201029 09:34:25.992" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.977" endtime="20201029 09:34:25.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.995" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.993" endtime="20201029 09:34:25.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.996" endtime="20201029 09:34:25.997"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.975" endtime="20201029 09:34:25.998"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.973" endtime="20201029 09:34:25.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.005" endtime="20201029 09:34:26.293"></status>
</kw>
<msg timestamp="20201029 09:34:26.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017593, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017636542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:34:26.003" endtime="20201029 09:34:26.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017593, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017636542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:34:26.297" endtime="20201029 09:34:26.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.306" endtime="20201029 09:34:26.307"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.001" endtime="20201029 09:34:26.308"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.999" endtime="20201029 09:34:26.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:26.312" level="INFO">${PHILIP_RES} = [{'diff': 4.354200000000058e-05}, {'diff': 4.3125000000001495e-05}, {'diff': 4.3097000000002356e-05}, {'diff': 4.3125000000001495e-05}, {'diff': 4.3096999999998886e-05}, {'diff': 4.3110999999998456e-0...</msg>
<status status="PASS" starttime="20201029 09:34:26.309" endtime="20201029 09:34:26.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:26.316" level="INFO">${RESULT} = {'diff': [4.354200000000058e-05, 4.3125000000001495e-05, 4.3097000000002356e-05, 4.3125000000001495e-05, 4.3096999999998886e-05, 4.3110999999998456e-05, 4.3111000000001926e-05, 4.3068999999999746e-05,...</msg>
<status status="PASS" starttime="20201029 09:34:26.313" endtime="20201029 09:34:26.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.321" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:26.320" endtime="20201029 09:34:26.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.323" level="INFO">VALUE: [4.354200000000058e-05, 4.3125000000001495e-05, 4.3097000000002356e-05, 4.3125000000001495e-05, 4.3096999999998886e-05, 4.3110999999998456e-05, 4.3111000000001926e-05, 4.3068999999999746e-05, 4.3110999999998456e-05, 4.3082999999999316e-05, 4.3096999999998886e-05, 4.3125000000001495e-05, 4.309800000000183e-05, 4.3096999999998886e-05, 4.3110999999998456e-05, 4.3096999999998886e-05, 4.3111000000001926e-05, 4.3097000000002356e-05, 4.3125000000001495e-05, 4.3110999999998456e-05, 4.306999999999922e-05, 4.3096999999998886e-05, 4.3125000000001495e-05, 4.3110999999998456e-05, 4.311199999999793e-05, 4.3138999999997596e-05, 4.3125000000001495e-05, 4.3111000000001926e-05, 4.3194999999999345e-05, 4.3110999999998456e-05, 4.3082999999999316e-05, 4.3096999999998886e-05, 4.3096999999998886e-05, 4.3124999999998026e-05, 4.3124999999998026e-05, 4.3125000000001495e-05, 4.3097000000002356e-05, 4.31120000000014e-05, 4.3096999999998886e-05, 4.306999999999922e-05, 4.3111000000001926e-05, 4.31120000000014e-05, 4.3110999999998456e-05, 4.3110999999998456e-05, 4.3110999999998456e-05, 4.3082999999999316e-05, 4.31120000000014e-05, 4.3082999999999316e-05, 4.3096999999998886e-05, 4.3125000000001495e-05]</msg>
<status status="PASS" starttime="20201029 09:34:26.322" endtime="20201029 09:34:26.324"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.317" endtime="20201029 09:34:26.325"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.971" endtime="20201029 09:34:26.325"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.949" endtime="20201029 09:34:26.325"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:26.328" endtime="20201029 09:34:26.347"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.326" endtime="20201029 09:34:26.347"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.355" endtime="20201029 09:34:26.369"></status>
</kw>
<msg timestamp="20201029 09:34:26.369" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.354" endtime="20201029 09:34:26.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.372" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.370" endtime="20201029 09:34:26.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.373" endtime="20201029 09:34:26.375"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.351" endtime="20201029 09:34:26.376"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.350" endtime="20201029 09:34:26.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.383" endtime="20201029 09:34:26.668"></status>
</kw>
<msg timestamp="20201029 09:34:26.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017722194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017767819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:26.381" endtime="20201029 09:34:26.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017722194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017767819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:26.672" endtime="20201029 09:34:26.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.681" endtime="20201029 09:34:26.682"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.379" endtime="20201029 09:34:26.683"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.377" endtime="20201029 09:34:26.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:26.687" level="INFO">${PHILIP_RES} = [{'diff': 4.5625000000000526e-05}, {'diff': 4.5166999999998736e-05}, {'diff': 4.5138999999999596e-05}, {'diff': 4.516599999999926e-05}, {'diff': 4.5152999999999166e-05}, {'diff': 4.5152999999999166e-0...</msg>
<status status="PASS" starttime="20201029 09:34:26.684" endtime="20201029 09:34:26.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:26.691" level="INFO">${RESULT} = {'diff': [4.5625000000000526e-05, 4.5166999999998736e-05, 4.5138999999999596e-05, 4.516599999999926e-05, 4.5152999999999166e-05, 4.5152999999999166e-05, 4.5181000000001775e-05, 4.5180999999998306e-05,...</msg>
<status status="PASS" starttime="20201029 09:34:26.688" endtime="20201029 09:34:26.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.696" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:26.695" endtime="20201029 09:34:26.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.698" level="INFO">VALUE: [4.5625000000000526e-05, 4.5166999999998736e-05, 4.5138999999999596e-05, 4.516599999999926e-05, 4.5152999999999166e-05, 4.5152999999999166e-05, 4.5181000000001775e-05, 4.5180999999998306e-05, 4.509699999999742e-05, 4.5152999999999166e-05, 4.5152999999999166e-05, 4.5166999999998736e-05, 4.5166999999998736e-05, 4.5125000000000026e-05, 4.516599999999926e-05, 4.5111000000000456e-05, 4.5181000000001775e-05, 4.5152999999999166e-05, 4.516599999999926e-05, 4.516599999999926e-05, 4.5125000000000026e-05, 4.5152999999999166e-05, 4.5152999999999166e-05, 4.5125000000000026e-05, 4.513800000000012e-05, 4.5152999999999166e-05, 4.5166999999998736e-05, 4.5152999999999166e-05, 4.5138999999999596e-05, 4.517999999999883e-05, 4.5138999999999596e-05, 4.5152999999999166e-05, 4.509699999999742e-05, 4.5152999999999166e-05, 4.516599999999926e-05, 4.517999999999883e-05, 4.5166999999998736e-05, 4.5152999999999166e-05, 4.5138999999999596e-05, 4.515199999999969e-05, 4.516599999999926e-05, 4.5138999999999596e-05, 4.5152999999999166e-05, 4.5138999999999596e-05, 4.517999999999883e-05, 4.5152999999999166e-05, 4.5152999999999166e-05, 4.5138999999999596e-05, 4.5152999999999166e-05, 4.515199999999969e-05]</msg>
<status status="PASS" starttime="20201029 09:34:26.697" endtime="20201029 09:34:26.700"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.692" endtime="20201029 09:34:26.700"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.348" endtime="20201029 09:34:26.701"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.325" endtime="20201029 09:34:26.701"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:26.703" endtime="20201029 09:34:26.723"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.702" endtime="20201029 09:34:26.723"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.731" endtime="20201029 09:34:26.744"></status>
</kw>
<msg timestamp="20201029 09:34:26.744" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.730" endtime="20201029 09:34:26.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.747" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.745" endtime="20201029 09:34:26.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.748" endtime="20201029 09:34:26.750"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.727" endtime="20201029 09:34:26.750"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.725" endtime="20201029 09:34:26.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.757" endtime="20201029 09:34:27.043"></status>
</kw>
<msg timestamp="20201029 09:34:27.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017792139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017839889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:26.755" endtime="20201029 09:34:27.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017792139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017839889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.049" endtime="20201029 09:34:27.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.059" endtime="20201029 09:34:27.061"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.753" endtime="20201029 09:34:27.062"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.751" endtime="20201029 09:34:27.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:27.069" level="INFO">${PHILIP_RES} = [{'diff': 4.775000000000265e-05}, {'diff': 4.724999999999868e-05}, {'diff': 4.723599999999911e-05}, {'diff': 4.7208999999999446e-05}, {'diff': 4.723599999999911e-05}, {'diff': 4.7208999999999446e-05},...</msg>
<status status="PASS" starttime="20201029 09:34:27.064" endtime="20201029 09:34:27.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:27.075" level="INFO">${RESULT} = {'diff': [4.775000000000265e-05, 4.724999999999868e-05, 4.723599999999911e-05, 4.7208999999999446e-05, 4.723599999999911e-05, 4.7208999999999446e-05, 4.723599999999911e-05, 4.7208999999999446e-05, 4.7...</msg>
<status status="PASS" starttime="20201029 09:34:27.070" endtime="20201029 09:34:27.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.080" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:27.079" endtime="20201029 09:34:27.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.082" level="INFO">VALUE: [4.775000000000265e-05, 4.724999999999868e-05, 4.723599999999911e-05, 4.7208999999999446e-05, 4.723599999999911e-05, 4.7208999999999446e-05, 4.723599999999911e-05, 4.7208999999999446e-05, 4.725000000000215e-05, 4.7194999999999876e-05, 4.723599999999911e-05, 4.725000000000215e-05, 4.724999999999868e-05, 4.724999999999868e-05, 4.723599999999911e-05, 4.723599999999911e-05, 4.722199999999954e-05, 4.725000000000215e-05, 4.723599999999911e-05, 4.725000000000215e-05, 4.726400000000172e-05, 4.724999999999868e-05, 4.722199999999954e-05, 4.725000000000215e-05, 4.723599999999911e-05, 4.723599999999911e-05, 4.723600000000258e-05, 4.724999999999868e-05, 4.724999999999868e-05, 4.725000000000215e-05, 4.723599999999911e-05, 4.723599999999911e-05, 4.722199999999954e-05, 4.722199999999954e-05, 4.723599999999911e-05, 4.71940000000004e-05, 4.724999999999868e-05, 4.723600000000258e-05, 4.726399999999825e-05, 4.723599999999911e-05, 4.723599999999911e-05, 4.723599999999911e-05, 4.729200000000086e-05, 4.722200000000301e-05, 4.729099999999792e-05, 4.723599999999911e-05, 4.723600000000258e-05, 4.727799999999782e-05, 4.722199999999954e-05, 4.723600000000258e-05]</msg>
<status status="PASS" starttime="20201029 09:34:27.081" endtime="20201029 09:34:27.083"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.076" endtime="20201029 09:34:27.084"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.724" endtime="20201029 09:34:27.084"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.701" endtime="20201029 09:34:27.084"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:27.087" endtime="20201029 09:34:27.106"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.085" endtime="20201029 09:34:27.107"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.115" endtime="20201029 09:34:27.128"></status>
</kw>
<msg timestamp="20201029 09:34:27.129" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.113" endtime="20201029 09:34:27.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.131" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.130" endtime="20201029 09:34:27.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.132" endtime="20201029 09:34:27.134"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.111" endtime="20201029 09:34:27.134"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.109" endtime="20201029 09:34:27.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.141" endtime="20201029 09:34:27.430"></status>
</kw>
<msg timestamp="20201029 09:34:27.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018118625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018168403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.140" endtime="20201029 09:34:27.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018118625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018168403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.434" endtime="20201029 09:34:27.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.443" endtime="20201029 09:34:27.444"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.137" endtime="20201029 09:34:27.445"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.135" endtime="20201029 09:34:27.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:27.449" level="INFO">${PHILIP_RES} = [{'diff': 4.977800000000032e-05}, {'diff': 4.936099999999777e-05}, {'diff': 4.936100000000124e-05}, {'diff': 4.934799999999767e-05}, {'diff': 4.93330000000021e-05}, {'diff': 4.934799999999767e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:27.446" endtime="20201029 09:34:27.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:27.453" level="INFO">${RESULT} = {'diff': [4.977800000000032e-05, 4.936099999999777e-05, 4.936100000000124e-05, 4.934799999999767e-05, 4.93330000000021e-05, 4.934799999999767e-05, 4.93330000000021e-05, 4.934800000000114e-05, 4.934700...</msg>
<status status="PASS" starttime="20201029 09:34:27.450" endtime="20201029 09:34:27.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.458" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:27.456" endtime="20201029 09:34:27.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.460" level="INFO">VALUE: [4.977800000000032e-05, 4.936099999999777e-05, 4.936100000000124e-05, 4.934799999999767e-05, 4.93330000000021e-05, 4.934799999999767e-05, 4.93330000000021e-05, 4.934800000000114e-05, 4.934700000000167e-05, 4.934800000000114e-05, 4.937500000000081e-05, 4.93339999999981e-05, 4.933299999999863e-05, 4.934700000000167e-05, 4.933299999999863e-05, 4.9320000000002e-05, 4.93469999999982e-05, 4.934700000000167e-05, 4.933299999999863e-05, 4.93330000000021e-05, 4.936099999999777e-05, 4.93330000000021e-05, 4.93339999999981e-05, 4.934700000000167e-05, 4.93339999999981e-05, 4.934700000000167e-05, 4.934799999999767e-05, 4.934700000000167e-05, 4.936199999999724e-05, 4.937500000000081e-05, 4.93339999999981e-05, 4.93330000000021e-05, 4.929199999999939e-05, 4.931899999999906e-05, 4.936099999999777e-05, 4.93469999999982e-05, 4.937499999999734e-05, 4.936100000000124e-05, 4.934700000000167e-05, 4.924999999999721e-05, 4.925000000000068e-05, 4.93469999999982e-05, 4.934700000000167e-05, 4.93339999999981e-05, 4.936100000000124e-05, 4.934799999999767e-05, 4.934700000000167e-05, 4.934799999999767e-05, 4.940299999999995e-05, 4.927799999999982e-05]</msg>
<status status="PASS" starttime="20201029 09:34:27.459" endtime="20201029 09:34:27.461"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.454" endtime="20201029 09:34:27.461"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.107" endtime="20201029 09:34:27.462"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.085" endtime="20201029 09:34:27.462"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:27.464" endtime="20201029 09:34:27.484"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.463" endtime="20201029 09:34:27.484"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.492" endtime="20201029 09:34:27.506"></status>
</kw>
<msg timestamp="20201029 09:34:27.506" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.491" endtime="20201029 09:34:27.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.508" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.507" endtime="20201029 09:34:27.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.510" endtime="20201029 09:34:27.512"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.488" endtime="20201029 09:34:27.513"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.486" endtime="20201029 09:34:27.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.520" endtime="20201029 09:34:27.806"></status>
</kw>
<msg timestamp="20201029 09:34:27.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017513903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017565847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.518" endtime="20201029 09:34:27.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017513903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017565847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.810" endtime="20201029 09:34:27.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.818" endtime="20201029 09:34:27.820"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.515" endtime="20201029 09:34:27.820"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.514" endtime="20201029 09:34:27.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:27.825" level="INFO">${PHILIP_RES} = [{'diff': 5.1943999999998214e-05}, {'diff': 5.150000000000293e-05}, {'diff': 5.149999999999946e-05}, {'diff': 5.148599999999989e-05}, {'diff': 5.148599999999989e-05}, {'diff': 5.150000000000293e-05}, ...</msg>
<status status="PASS" starttime="20201029 09:34:27.821" endtime="20201029 09:34:27.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:27.829" level="INFO">${RESULT} = {'diff': [5.1943999999998214e-05, 5.150000000000293e-05, 5.149999999999946e-05, 5.148599999999989e-05, 5.148599999999989e-05, 5.150000000000293e-05, 5.152800000000207e-05, 5.148599999999989e-05, 5.148...</msg>
<status status="PASS" starttime="20201029 09:34:27.826" endtime="20201029 09:34:27.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.833" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:27.832" endtime="20201029 09:34:27.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.835" level="INFO">VALUE: [5.1943999999998214e-05, 5.150000000000293e-05, 5.149999999999946e-05, 5.148599999999989e-05, 5.148599999999989e-05, 5.150000000000293e-05, 5.152800000000207e-05, 5.148599999999989e-05, 5.148599999999989e-05, 5.151299999999956e-05, 5.1486999999999367e-05, 5.155600000000121e-05, 5.144400000000118e-05, 5.147200000000032e-05, 5.147200000000032e-05, 5.147200000000032e-05, 5.143100000000109e-05, 5.148599999999989e-05, 5.155500000000174e-05, 5.144500000000066e-05, 5.145900000000023e-05, 5.148599999999989e-05, 5.147200000000032e-05, 5.148599999999989e-05, 5.147200000000032e-05, 5.147200000000032e-05, 5.147200000000032e-05, 5.144500000000066e-05, 5.14729999999998e-05, 5.14729999999998e-05, 5.1443999999997714e-05, 5.148599999999989e-05, 5.148599999999989e-05, 5.148599999999989e-05, 5.148599999999989e-05, 5.148599999999989e-05, 5.148599999999989e-05, 5.149999999999946e-05, 5.150000000000293e-05, 5.147200000000032e-05, 5.151399999999903e-05, 5.148599999999989e-05, 5.1471999999996854e-05, 5.148599999999989e-05, 5.148599999999989e-05, 5.148599999999989e-05, 5.145900000000023e-05, 5.149999999999946e-05, 5.147200000000032e-05, 5.148599999999989e-05]</msg>
<status status="PASS" starttime="20201029 09:34:27.834" endtime="20201029 09:34:27.837"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.830" endtime="20201029 09:34:27.838"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.485" endtime="20201029 09:34:27.838"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.462" endtime="20201029 09:34:27.838"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:27.841" endtime="20201029 09:34:27.860"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.839" endtime="20201029 09:34:27.861"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.869" endtime="20201029 09:34:27.882"></status>
</kw>
<msg timestamp="20201029 09:34:27.883" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.867" endtime="20201029 09:34:27.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.885" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.884" endtime="20201029 09:34:27.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.886" endtime="20201029 09:34:27.888"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.864" endtime="20201029 09:34:27.889"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.863" endtime="20201029 09:34:27.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.895" endtime="20201029 09:34:28.181"></status>
</kw>
<msg timestamp="20201029 09:34:28.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017826944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017881069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.894" endtime="20201029 09:34:28.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017826944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017881069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:28.185" endtime="20201029 09:34:28.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.193" endtime="20201029 09:34:28.195"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.891" endtime="20201029 09:34:28.195"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.890" endtime="20201029 09:34:28.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:28.200" level="INFO">${PHILIP_RES} = [{'diff': 5.412499999999862e-05}, {'diff': 5.36670000000003e-05}, {'diff': 5.363899999999769e-05}, {'diff': 5.365300000000073e-05}, {'diff': 5.363900000000116e-05}, {'diff': 5.363899999999769e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:28.197" endtime="20201029 09:34:28.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:28.205" level="INFO">${RESULT} = {'diff': [5.412499999999862e-05, 5.36670000000003e-05, 5.363899999999769e-05, 5.365300000000073e-05, 5.363900000000116e-05, 5.363899999999769e-05, 5.3666000000000824e-05, 5.363900000000116e-05, 5.3651...</msg>
<status status="PASS" starttime="20201029 09:34:28.201" endtime="20201029 09:34:28.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.209" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:28.208" endtime="20201029 09:34:28.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.212" level="INFO">VALUE: [5.412499999999862e-05, 5.36670000000003e-05, 5.363899999999769e-05, 5.365300000000073e-05, 5.363900000000116e-05, 5.363899999999769e-05, 5.3666000000000824e-05, 5.363900000000116e-05, 5.3651999999997785e-05, 5.363900000000116e-05, 5.363900000000116e-05, 5.362499999999812e-05, 5.362499999999812e-05, 5.362500000000159e-05, 5.363900000000116e-05, 5.365299999999726e-05, 5.362500000000159e-05, 5.363900000000116e-05, 5.365299999999726e-05, 5.363900000000116e-05, 5.365300000000073e-05, 5.363899999999769e-05, 5.362500000000159e-05, 5.368099999999987e-05, 5.363899999999769e-05, 5.362500000000159e-05, 5.363900000000116e-05, 5.365299999999726e-05, 5.363900000000116e-05, 5.365300000000073e-05, 5.363899999999769e-05, 5.362500000000159e-05, 5.363900000000116e-05, 5.361199999999802e-05, 5.361099999999855e-05, 5.3652000000001254e-05, 5.3651999999997785e-05, 5.3637999999998215e-05, 5.3638000000001684e-05, 5.3638000000001684e-05, 5.365300000000073e-05, 5.362500000000159e-05, 5.363900000000116e-05, 5.365300000000073e-05, 5.362500000000159e-05, 5.365300000000073e-05, 5.362499999999812e-05, 5.365300000000073e-05, 5.362500000000159e-05, 5.361099999999855e-05]</msg>
<status status="PASS" starttime="20201029 09:34:28.210" endtime="20201029 09:34:28.212"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.206" endtime="20201029 09:34:28.213"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.861" endtime="20201029 09:34:28.213"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.839" endtime="20201029 09:34:28.213"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:28.216" endtime="20201029 09:34:28.235"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.214" endtime="20201029 09:34:28.236"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.244" endtime="20201029 09:34:28.258"></status>
</kw>
<msg timestamp="20201029 09:34:28.259" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.242" endtime="20201029 09:34:28.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.261" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.260" endtime="20201029 09:34:28.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.263" endtime="20201029 09:34:28.264"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.240" endtime="20201029 09:34:28.265"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.238" endtime="20201029 09:34:28.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.273" endtime="20201029 09:34:28.559"></status>
</kw>
<msg timestamp="20201029 09:34:28.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017661597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017717861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:28.271" endtime="20201029 09:34:28.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017661597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017717861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:28.563" endtime="20201029 09:34:28.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.572" endtime="20201029 09:34:28.573"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.268" endtime="20201029 09:34:28.574"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.266" endtime="20201029 09:34:28.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:28.578" level="INFO">${PHILIP_RES} = [{'diff': 5.6264000000000314e-05}, {'diff': 5.584699999999776e-05}, {'diff': 5.583299999999819e-05}, {'diff': 5.581899999999862e-05}, {'diff': 5.581999999999809e-05}, {'diff': 5.583399999999766e-05}, ...</msg>
<status status="PASS" starttime="20201029 09:34:28.575" endtime="20201029 09:34:28.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:28.582" level="INFO">${RESULT} = {'diff': [5.6264000000000314e-05, 5.584699999999776e-05, 5.583299999999819e-05, 5.581899999999862e-05, 5.581999999999809e-05, 5.583399999999766e-05, 5.581999999999809e-05, 5.583299999999819e-05, 5.584...</msg>
<status status="PASS" starttime="20201029 09:34:28.579" endtime="20201029 09:34:28.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.587" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:28.586" endtime="20201029 09:34:28.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.589" level="INFO">VALUE: [5.6264000000000314e-05, 5.584699999999776e-05, 5.583299999999819e-05, 5.581899999999862e-05, 5.581999999999809e-05, 5.583399999999766e-05, 5.581999999999809e-05, 5.583299999999819e-05, 5.584699999999776e-05, 5.587500000000037e-05, 5.583300000000166e-05, 5.581899999999862e-05, 5.5805999999998523e-05, 5.58610000000008e-05, 5.583400000000113e-05, 5.583400000000113e-05, 5.58610000000008e-05, 5.584700000000123e-05, 5.583299999999819e-05, 5.588899999999994e-05, 5.583300000000166e-05, 5.584700000000123e-05, 5.583300000000166e-05, 5.58480000000007e-05, 5.58480000000007e-05, 5.583400000000113e-05, 5.580500000000252e-05, 5.581900000000209e-05, 5.583300000000166e-05, 5.581900000000209e-05, 5.582000000000156e-05, 5.58480000000007e-05, 5.58480000000007e-05, 5.583400000000113e-05, 5.581899999999862e-05, 5.583299999999819e-05, 5.581899999999862e-05, 5.584699999999776e-05, 5.583299999999819e-05, 5.583399999999766e-05, 5.583399999999766e-05, 5.583399999999766e-05, 5.583299999999819e-05, 5.583299999999819e-05, 5.583299999999819e-05, 5.583299999999819e-05, 5.583299999999819e-05, 5.583299999999819e-05, 5.584699999999776e-05, 5.583400000000113e-05]</msg>
<status status="PASS" starttime="20201029 09:34:28.588" endtime="20201029 09:34:28.595"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.583" endtime="20201029 09:34:28.595"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.236" endtime="20201029 09:34:28.596"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.214" endtime="20201029 09:34:28.596"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:28.598" endtime="20201029 09:34:28.618"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.597" endtime="20201029 09:34:28.618"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.626" endtime="20201029 09:34:28.641"></status>
</kw>
<msg timestamp="20201029 09:34:28.641" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.625" endtime="20201029 09:34:28.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.644" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.642" endtime="20201029 09:34:28.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.645" endtime="20201029 09:34:28.647"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.622" endtime="20201029 09:34:28.648"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.620" endtime="20201029 09:34:28.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.655" endtime="20201029 09:34:28.940"></status>
</kw>
<msg timestamp="20201029 09:34:28.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017693986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017752472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:28.653" endtime="20201029 09:34:28.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017693986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017752472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:28.945" endtime="20201029 09:34:28.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.953" endtime="20201029 09:34:28.955"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.651" endtime="20201029 09:34:28.955"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.649" endtime="20201029 09:34:28.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:28.960" level="INFO">${PHILIP_RES} = [{'diff': 5.8485999999999955e-05}, {'diff': 5.8070000000000344e-05}, {'diff': 5.804099999999826e-05}, {'diff': 5.7999999999999025e-05}, {'diff': 5.804099999999826e-05}, {'diff': 5.809700000000001e-05}...</msg>
<status status="PASS" starttime="20201029 09:34:28.956" endtime="20201029 09:34:28.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:28.964" level="INFO">${RESULT} = {'diff': [5.8485999999999955e-05, 5.8070000000000344e-05, 5.804099999999826e-05, 5.7999999999999025e-05, 5.804099999999826e-05, 5.809700000000001e-05, 5.8041999999997734e-05, 5.8027999999998164e-05, 5...</msg>
<status status="PASS" starttime="20201029 09:34:28.961" endtime="20201029 09:34:28.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.968" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:28.967" endtime="20201029 09:34:28.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.971" level="INFO">VALUE: [5.8485999999999955e-05, 5.8070000000000344e-05, 5.804099999999826e-05, 5.7999999999999025e-05, 5.804099999999826e-05, 5.809700000000001e-05, 5.8041999999997734e-05, 5.8027999999998164e-05, 5.7999999999999025e-05, 5.8083999999999913e-05, 5.802699999999869e-05, 5.8083999999999913e-05, 5.8041999999997734e-05, 5.8055999999997304e-05, 5.8041999999997734e-05, 5.8041999999997734e-05, 5.8027999999998164e-05, 5.8027999999998164e-05, 5.8041999999997734e-05, 5.805499999999783e-05, 5.8000000000002494e-05, 5.8027999999998164e-05, 5.809700000000001e-05, 5.808300000000044e-05, 5.8056000000000774e-05, 5.804099999999826e-05, 5.8056000000000774e-05, 5.80550000000013e-05, 5.8028000000001634e-05, 5.80550000000013e-05, 5.8056000000000774e-05, 5.804100000000173e-05, 5.8042000000001204e-05, 5.804100000000173e-05, 5.8042000000001204e-05, 5.808300000000044e-05, 5.8056000000000774e-05, 5.802700000000216e-05, 5.8028000000001634e-05, 5.804100000000173e-05, 5.8028000000001634e-05, 5.804100000000173e-05, 5.8070000000000344e-05, 5.804100000000173e-05, 5.8014000000002064e-05, 5.80550000000013e-05, 5.8056000000000774e-05, 5.8042000000001204e-05, 5.8028000000001634e-05, 5.804100000000173e-05]</msg>
<status status="PASS" starttime="20201029 09:34:28.969" endtime="20201029 09:34:28.972"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.965" endtime="20201029 09:34:28.973"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.619" endtime="20201029 09:34:28.973"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.596" endtime="20201029 09:34:28.973"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:28.976" endtime="20201029 09:34:28.995"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.974" endtime="20201029 09:34:28.995"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.004" endtime="20201029 09:34:29.018"></status>
</kw>
<msg timestamp="20201029 09:34:29.019" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:29.002" endtime="20201029 09:34:29.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.021" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:29.020" endtime="20201029 09:34:29.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.022" endtime="20201029 09:34:29.024"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.000" endtime="20201029 09:34:29.025"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.998" endtime="20201029 09:34:29.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.031" endtime="20201029 09:34:29.318"></status>
</kw>
<msg timestamp="20201029 09:34:29.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017706958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017767722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:29.030" endtime="20201029 09:34:29.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017706958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017767722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:29.322" endtime="20201029 09:34:29.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.330" endtime="20201029 09:34:29.332"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.027" endtime="20201029 09:34:29.332"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.026" endtime="20201029 09:34:29.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:29.339" level="INFO">${PHILIP_RES} = [{'diff': 6.0764000000001345e-05}, {'diff': 6.0291999999999984e-05}, {'diff': 6.030500000000008e-05}, {'diff': 6.0291999999999984e-05}, {'diff': 6.027700000000094e-05}, {'diff': 6.029099999999704e-05}...</msg>
<status status="PASS" starttime="20201029 09:34:29.335" endtime="20201029 09:34:29.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:29.346" level="INFO">${RESULT} = {'diff': [6.0764000000001345e-05, 6.0291999999999984e-05, 6.030500000000008e-05, 6.0291999999999984e-05, 6.027700000000094e-05, 6.029099999999704e-05, 6.029100000000051e-05, 6.030500000000008e-05, 6.0...</msg>
<status status="PASS" starttime="20201029 09:34:29.340" endtime="20201029 09:34:29.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.351" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:29.350" endtime="20201029 09:34:29.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.355" level="INFO">VALUE: [6.0764000000001345e-05, 6.0291999999999984e-05, 6.030500000000008e-05, 6.0291999999999984e-05, 6.027700000000094e-05, 6.029099999999704e-05, 6.029100000000051e-05, 6.030500000000008e-05, 6.029100000000051e-05, 6.029100000000051e-05, 6.033300000000269e-05, 6.029100000000051e-05, 6.029100000000051e-05, 6.031899999999965e-05, 6.030500000000008e-05, 6.034699999999879e-05, 6.034699999999879e-05, 6.030500000000008e-05, 6.030500000000008e-05, 6.030500000000008e-05, 6.027700000000094e-05, 6.030500000000008e-05, 6.027700000000094e-05, 6.0264000000000845e-05, 6.029100000000051e-05, 6.029100000000051e-05, 6.030500000000008e-05, 6.029100000000051e-05, 6.029100000000051e-05, 6.027700000000094e-05, 6.029100000000051e-05, 6.029100000000051e-05, 6.031900000000312e-05, 6.0278000000000415e-05, 6.0278000000000415e-05, 6.033299999999922e-05, 6.029100000000051e-05, 6.031899999999965e-05, 6.0291999999999984e-05, 6.0334000000002164e-05, 6.030500000000008e-05, 6.029100000000051e-05, 6.029100000000051e-05, 6.030500000000008e-05, 6.0305999999999554e-05, 6.0305999999999554e-05, 6.030500000000008e-05, 6.0347999999998264e-05, 6.0347999999998264e-05, 6.0291999999999984e-05]</msg>
<status status="PASS" starttime="20201029 09:34:29.353" endtime="20201029 09:34:29.356"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.346" endtime="20201029 09:34:29.357"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.996" endtime="20201029 09:34:29.357"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.974" endtime="20201029 09:34:29.358"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:29.362" endtime="20201029 09:34:29.381"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.359" endtime="20201029 09:34:29.382"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.390" endtime="20201029 09:34:29.404"></status>
</kw>
<msg timestamp="20201029 09:34:29.404" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:29.388" endtime="20201029 09:34:29.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.407" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:29.405" endtime="20201029 09:34:29.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.408" endtime="20201029 09:34:29.410"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.386" endtime="20201029 09:34:29.410"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.384" endtime="20201029 09:34:29.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.417" endtime="20201029 09:34:29.704"></status>
</kw>
<msg timestamp="20201029 09:34:29.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017660653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017723667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:29.415" endtime="20201029 09:34:29.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017660653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017723667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:29.708" endtime="20201029 09:34:29.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.717" endtime="20201029 09:34:29.718"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.413" endtime="20201029 09:34:29.719"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.411" endtime="20201029 09:34:29.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:29.723" level="INFO">${PHILIP_RES} = [{'diff': 6.301400000000013e-05}, {'diff': 6.256899999999843e-05}, {'diff': 6.255499999999886e-05}, {'diff': 6.258300000000147e-05}, {'diff': 6.250000000000006e-05}, {'diff': 6.257000000000137e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:34:29.720" endtime="20201029 09:34:29.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:29.727" level="INFO">${RESULT} = {'diff': [6.301400000000013e-05, 6.256899999999843e-05, 6.255499999999886e-05, 6.258300000000147e-05, 6.250000000000006e-05, 6.257000000000137e-05, 6.255599999999834e-05, 6.258300000000147e-05, 6.2485...</msg>
<status status="PASS" starttime="20201029 09:34:29.724" endtime="20201029 09:34:29.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.732" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:29.731" endtime="20201029 09:34:29.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.734" level="INFO">VALUE: [6.301400000000013e-05, 6.256899999999843e-05, 6.255499999999886e-05, 6.258300000000147e-05, 6.250000000000006e-05, 6.257000000000137e-05, 6.255599999999834e-05, 6.258300000000147e-05, 6.248599999999702e-05, 6.255499999999886e-05, 6.257000000000137e-05, 6.255599999999834e-05, 6.25560000000018e-05, 6.255499999999886e-05, 6.258300000000147e-05, 6.255599999999834e-05, 6.25699999999979e-05, 6.257000000000137e-05, 6.256899999999843e-05, 6.262500000000018e-05, 6.255499999999886e-05, 6.257000000000137e-05, 6.261100000000061e-05, 6.257000000000137e-05, 6.255500000000233e-05, 6.2582999999998e-05, 6.258300000000147e-05, 6.25699999999979e-05, 6.257000000000137e-05, 6.255599999999834e-05, 6.256899999999843e-05, 6.254100000000276e-05, 6.2582999999998e-05, 6.257000000000137e-05, 6.252800000000266e-05, 6.25560000000018e-05, 6.256899999999843e-05, 6.258300000000147e-05, 6.25690000000019e-05, 6.2582999999998e-05, 6.25560000000018e-05, 6.255599999999834e-05, 6.254099999999929e-05, 6.2582999999998e-05, 6.257000000000137e-05, 6.255599999999834e-05, 6.255599999999834e-05, 6.255500000000233e-05, 6.2582999999998e-05, 6.255500000000233e-05]</msg>
<status status="PASS" starttime="20201029 09:34:29.733" endtime="20201029 09:34:29.735"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.728" endtime="20201029 09:34:29.735"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.382" endtime="20201029 09:34:29.736"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.358" endtime="20201029 09:34:29.736"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:29.738" endtime="20201029 09:34:29.758"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.737" endtime="20201029 09:34:29.758"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.766" endtime="20201029 09:34:29.783"></status>
</kw>
<msg timestamp="20201029 09:34:29.784" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:29.765" endtime="20201029 09:34:29.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.789" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:29.786" endtime="20201029 09:34:29.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.791" endtime="20201029 09:34:29.796"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.762" endtime="20201029 09:34:29.797"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.760" endtime="20201029 09:34:29.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.812" endtime="20201029 09:34:30.106"></status>
</kw>
<msg timestamp="20201029 09:34:30.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017751347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017816681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:29.809" endtime="20201029 09:34:30.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017751347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017816681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:30.111" endtime="20201029 09:34:30.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.119" endtime="20201029 09:34:30.121"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.803" endtime="20201029 09:34:30.121"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.799" endtime="20201029 09:34:30.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:30.125" level="INFO">${PHILIP_RES} = [{'diff': 6.533400000000023e-05}, {'diff': 6.486099999999939e-05}, {'diff': 6.487499999999896e-05}, {'diff': 6.4889000000002e-05}, {'diff': 6.487500000000243e-05}, {'diff': 6.484699999999982e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:30.122" endtime="20201029 09:34:30.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:30.130" level="INFO">${RESULT} = {'diff': [6.533400000000023e-05, 6.486099999999939e-05, 6.487499999999896e-05, 6.4889000000002e-05, 6.487500000000243e-05, 6.484699999999982e-05, 6.486099999999939e-05, 6.49029999999981e-05, 6.4860999...</msg>
<status status="PASS" starttime="20201029 09:34:30.126" endtime="20201029 09:34:30.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.134" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:30.133" endtime="20201029 09:34:30.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.136" level="INFO">VALUE: [6.533400000000023e-05, 6.486099999999939e-05, 6.487499999999896e-05, 6.4889000000002e-05, 6.487500000000243e-05, 6.484699999999982e-05, 6.486099999999939e-05, 6.49029999999981e-05, 6.486099999999939e-05, 6.486099999999939e-05, 6.486099999999939e-05, 6.483300000000025e-05, 6.487500000000243e-05, 6.487499999999896e-05, 6.486099999999939e-05, 6.486099999999939e-05, 6.486099999999939e-05, 6.48479999999993e-05, 6.487500000000243e-05, 6.4889000000002e-05, 6.484699999999982e-05, 6.486099999999939e-05, 6.487499999999896e-05, 6.484699999999982e-05, 6.484699999999982e-05, 6.486099999999939e-05, 6.483300000000025e-05, 6.487500000000243e-05, 6.487500000000243e-05, 6.487499999999896e-05, 6.486099999999939e-05, 6.487499999999896e-05, 6.487499999999896e-05, 6.4889000000002e-05, 6.484700000000329e-05, 6.487500000000243e-05, 6.487500000000243e-05, 6.48479999999993e-05, 6.488899999999853e-05, 6.483300000000025e-05, 6.486099999999939e-05, 6.488899999999853e-05, 6.486100000000286e-05, 6.4889000000002e-05, 6.486099999999939e-05, 6.483300000000025e-05, 6.487499999999896e-05, 6.487499999999896e-05, 6.480599999999712e-05, 6.486099999999939e-05]</msg>
<status status="PASS" starttime="20201029 09:34:30.135" endtime="20201029 09:34:30.138"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.131" endtime="20201029 09:34:30.139"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.759" endtime="20201029 09:34:30.139"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.736" endtime="20201029 09:34:30.139"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:30.142" endtime="20201029 09:34:30.161"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.140" endtime="20201029 09:34:30.161"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.170" endtime="20201029 09:34:30.184"></status>
</kw>
<msg timestamp="20201029 09:34:30.185" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:30.168" endtime="20201029 09:34:30.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.187" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:30.186" endtime="20201029 09:34:30.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.188" endtime="20201029 09:34:30.190"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.165" endtime="20201029 09:34:30.190"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.163" endtime="20201029 09:34:30.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.197" endtime="20201029 09:34:30.484"></status>
</kw>
<msg timestamp="20201029 09:34:30.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017603264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017670917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:30.196" endtime="20201029 09:34:30.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017603264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017670917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:30.488" endtime="20201029 09:34:30.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.496" endtime="20201029 09:34:30.498"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.193" endtime="20201029 09:34:30.498"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.191" endtime="20201029 09:34:30.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:30.503" level="INFO">${PHILIP_RES} = [{'diff': 6.765300000000085e-05}, {'diff': 6.719499999999906e-05}, {'diff': 6.720899999999863e-05}, {'diff': 6.719499999999906e-05}, {'diff': 6.724999999999787e-05}, {'diff': 6.716600000000045e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:34:30.500" endtime="20201029 09:34:30.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:30.508" level="INFO">${RESULT} = {'diff': [6.765300000000085e-05, 6.719499999999906e-05, 6.720899999999863e-05, 6.719499999999906e-05, 6.724999999999787e-05, 6.716600000000045e-05, 6.720899999999863e-05, 6.72359999999983e-05, 6.72359...</msg>
<status status="PASS" starttime="20201029 09:34:30.504" endtime="20201029 09:34:30.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.512" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:30.511" endtime="20201029 09:34:30.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.515" level="INFO">VALUE: [6.765300000000085e-05, 6.719499999999906e-05, 6.720899999999863e-05, 6.719499999999906e-05, 6.724999999999787e-05, 6.716600000000045e-05, 6.720899999999863e-05, 6.72359999999983e-05, 6.72359999999983e-05, 6.720799999999916e-05, 6.719399999999959e-05, 6.719399999999959e-05, 6.718000000000002e-05, 6.719399999999959e-05, 6.719399999999959e-05, 6.726299999999796e-05, 6.718000000000002e-05, 6.722199999999873e-05, 6.719399999999959e-05, 6.716699999999992e-05, 6.72090000000021e-05, 6.718099999999949e-05, 6.72090000000021e-05, 6.718099999999949e-05, 6.716699999999992e-05, 6.719500000000253e-05, 6.725000000000134e-05, 6.720799999999916e-05, 6.719399999999959e-05, 6.718000000000002e-05, 6.720799999999916e-05, 6.719399999999959e-05, 6.720799999999916e-05, 6.718000000000002e-05, 6.720799999999916e-05, 6.720799999999916e-05, 6.716699999999992e-05, 6.719399999999959e-05, 6.719499999999906e-05, 6.720899999999863e-05, 6.72229999999982e-05, 6.716699999999992e-05, 6.719499999999906e-05, 6.718099999999949e-05, 6.720799999999916e-05, 6.718099999999949e-05, 6.719399999999959e-05, 6.718000000000002e-05, 6.719399999999959e-05, 6.720799999999916e-05]</msg>
<status status="PASS" starttime="20201029 09:34:30.513" endtime="20201029 09:34:30.515"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.509" endtime="20201029 09:34:30.516"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.162" endtime="20201029 09:34:30.516"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.139" endtime="20201029 09:34:30.516"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:30.519" endtime="20201029 09:34:30.538"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.517" endtime="20201029 09:34:30.539"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.547" endtime="20201029 09:34:30.563"></status>
</kw>
<msg timestamp="20201029 09:34:30.563" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:30.545" endtime="20201029 09:34:30.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.566" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:30.564" endtime="20201029 09:34:30.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.567" endtime="20201029 09:34:30.568"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.543" endtime="20201029 09:34:30.569"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.541" endtime="20201029 09:34:30.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.576" endtime="20201029 09:34:30.865"></status>
</kw>
<msg timestamp="20201029 09:34:30.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017654694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017724694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:30.574" endtime="20201029 09:34:30.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017654694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017724694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:30.869" endtime="20201029 09:34:30.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.877" endtime="20201029 09:34:30.879"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.572" endtime="20201029 09:34:30.880"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.570" endtime="20201029 09:34:30.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:30.884" level="INFO">${PHILIP_RES} = [{'diff': 7.000000000000062e-05}, {'diff': 6.955499999999892e-05}, {'diff': 6.955600000000187e-05}, {'diff': 6.955500000000239e-05}, {'diff': 6.95420000000023e-05}, {'diff': 6.955500000000239e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:30.881" endtime="20201029 09:34:30.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:30.888" level="INFO">${RESULT} = {'diff': [7.000000000000062e-05, 6.955499999999892e-05, 6.955600000000187e-05, 6.955500000000239e-05, 6.95420000000023e-05, 6.955500000000239e-05, 6.955600000000187e-05, 6.955600000000187e-05, 6.95560...</msg>
<status status="PASS" starttime="20201029 09:34:30.885" endtime="20201029 09:34:30.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.892" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:30.891" endtime="20201029 09:34:30.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.895" level="INFO">VALUE: [7.000000000000062e-05, 6.955499999999892e-05, 6.955600000000187e-05, 6.955500000000239e-05, 6.95420000000023e-05, 6.955500000000239e-05, 6.955600000000187e-05, 6.955600000000187e-05, 6.955600000000187e-05, 6.955600000000187e-05, 6.95970000000011e-05, 6.95559999999984e-05, 6.958300000000153e-05, 6.957000000000144e-05, 6.956899999999849e-05, 6.95559999999984e-05, 6.954099999999935e-05, 6.956999999999797e-05, 6.954099999999935e-05, 6.950000000000012e-05, 6.955499999999892e-05, 6.948600000000055e-05, 6.947300000000045e-05, 6.955499999999892e-05, 6.95559999999984e-05, 6.956899999999849e-05, 6.95559999999984e-05, 6.954099999999935e-05, 6.961100000000067e-05, 6.956900000000196e-05, 6.950000000000012e-05, 6.956900000000196e-05, 6.95420000000023e-05, 6.955500000000239e-05, 6.957000000000144e-05, 6.955500000000239e-05, 6.950000000000012e-05, 6.95420000000023e-05, 6.955600000000187e-05, 6.958300000000153e-05, 6.955500000000239e-05, 6.955600000000187e-05, 6.955499999999892e-05, 6.951399999999969e-05, 6.954099999999935e-05, 6.954199999999883e-05, 6.950000000000012e-05, 6.954199999999883e-05, 6.956899999999849e-05, 6.956999999999797e-05]</msg>
<status status="PASS" starttime="20201029 09:34:30.893" endtime="20201029 09:34:30.895"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.889" endtime="20201029 09:34:30.896"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.539" endtime="20201029 09:34:30.896"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.517" endtime="20201029 09:34:30.897"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:30.899" endtime="20201029 09:34:30.918"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.898" endtime="20201029 09:34:30.919"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.927" endtime="20201029 09:34:30.943"></status>
</kw>
<msg timestamp="20201029 09:34:30.943" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:30.926" endtime="20201029 09:34:30.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.946" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:30.945" endtime="20201029 09:34:30.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.947" endtime="20201029 09:34:30.950"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.923" endtime="20201029 09:34:30.950"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.921" endtime="20201029 09:34:30.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.957" endtime="20201029 09:34:31.243"></status>
</kw>
<msg timestamp="20201029 09:34:31.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018026875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018099306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:30.955" endtime="20201029 09:34:31.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018026875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018099306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:31.247" endtime="20201029 09:34:31.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.255" endtime="20201029 09:34:31.257"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.953" endtime="20201029 09:34:31.258"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.951" endtime="20201029 09:34:31.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:31.262" level="INFO">${PHILIP_RES} = [{'diff': 7.24309999999978e-05}, {'diff': 7.195800000000044e-05}, {'diff': 7.194500000000034e-05}, {'diff': 7.188899999999859e-05}, {'diff': 7.195799999999697e-05}, {'diff': 7.192999999999783e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:31.259" endtime="20201029 09:34:31.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:31.266" level="INFO">${RESULT} = {'diff': [7.24309999999978e-05, 7.195800000000044e-05, 7.194500000000034e-05, 7.188899999999859e-05, 7.195799999999697e-05, 7.192999999999783e-05, 7.194400000000087e-05, 7.193100000000077e-05, 7.19169...</msg>
<status status="PASS" starttime="20201029 09:34:31.263" endtime="20201029 09:34:31.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.270" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:31.269" endtime="20201029 09:34:31.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.273" level="INFO">VALUE: [7.24309999999978e-05, 7.195800000000044e-05, 7.194500000000034e-05, 7.188899999999859e-05, 7.195799999999697e-05, 7.192999999999783e-05, 7.194400000000087e-05, 7.193100000000077e-05, 7.191699999999773e-05, 7.193100000000077e-05, 7.193100000000077e-05, 7.195800000000044e-05, 7.187499999999902e-05, 7.201399999999872e-05, 7.193100000000077e-05, 7.193100000000077e-05, 7.19439999999974e-05, 7.192999999999783e-05, 7.195800000000044e-05, 7.194500000000034e-05, 7.194500000000034e-05, 7.195800000000044e-05, 7.194400000000087e-05, 7.19300000000013e-05, 7.192999999999783e-05, 7.19309999999973e-05, 7.195899999999991e-05, 7.19170000000012e-05, 7.19300000000013e-05, 7.191599999999826e-05, 7.19170000000012e-05, 7.193100000000077e-05, 7.19170000000012e-05, 7.19309999999973e-05, 7.19300000000013e-05, 7.19300000000013e-05, 7.19170000000012e-05, 7.198700000000252e-05, 7.187500000000249e-05, 7.193100000000077e-05, 7.197200000000001e-05, 7.192999999999783e-05, 7.194400000000087e-05, 7.193100000000077e-05, 7.188899999999859e-05, 7.198599999999958e-05, 7.19300000000013e-05, 7.19300000000013e-05, 7.194400000000087e-05, 7.200000000000262e-05]</msg>
<status status="PASS" starttime="20201029 09:34:31.271" endtime="20201029 09:34:31.274"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.267" endtime="20201029 09:34:31.275"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.919" endtime="20201029 09:34:31.275"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.897" endtime="20201029 09:34:31.275"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:31.278" endtime="20201029 09:34:31.297"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.276" endtime="20201029 09:34:31.298"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.306" endtime="20201029 09:34:31.323"></status>
</kw>
<msg timestamp="20201029 09:34:31.323" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.305" endtime="20201029 09:34:31.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.326" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.325" endtime="20201029 09:34:31.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.327" endtime="20201029 09:34:31.329"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.302" endtime="20201029 09:34:31.329"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.300" endtime="20201029 09:34:31.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.336" endtime="20201029 09:34:31.622"></status>
</kw>
<msg timestamp="20201029 09:34:31.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018423542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018498347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:31.335" endtime="20201029 09:34:31.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018423542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018498347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:31.626" endtime="20201029 09:34:31.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.635" endtime="20201029 09:34:31.636"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.332" endtime="20201029 09:34:31.637"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.330" endtime="20201029 09:34:31.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:31.641" level="INFO">${PHILIP_RES} = [{'diff': 7.480499999999723e-05}, {'diff': 7.434700000000238e-05}, {'diff': 7.44309999999998e-05}, {'diff': 7.433299999999934e-05}, {'diff': 7.434700000000238e-05}, {'diff': 7.436099999999848e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:31.638" endtime="20201029 09:34:31.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:31.646" level="INFO">${RESULT} = {'diff': [7.480499999999723e-05, 7.434700000000238e-05, 7.44309999999998e-05, 7.433299999999934e-05, 7.434700000000238e-05, 7.436099999999848e-05, 7.434699999999891e-05, 7.436100000000195e-05, 7.43469...</msg>
<status status="PASS" starttime="20201029 09:34:31.642" endtime="20201029 09:34:31.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.650" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:31.649" endtime="20201029 09:34:31.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.653" level="INFO">VALUE: [7.480499999999723e-05, 7.434700000000238e-05, 7.44309999999998e-05, 7.433299999999934e-05, 7.434700000000238e-05, 7.436099999999848e-05, 7.434699999999891e-05, 7.436100000000195e-05, 7.434699999999891e-05, 7.434699999999891e-05, 7.437500000000152e-05, 7.434699999999891e-05, 7.437499999999805e-05, 7.433299999999934e-05, 7.429200000000011e-05, 7.436099999999848e-05, 7.434700000000238e-05, 7.434699999999891e-05, 7.431899999999977e-05, 7.437500000000152e-05, 7.436099999999848e-05, 7.436099999999848e-05, 7.436100000000195e-05, 7.438900000000109e-05, 7.434699999999891e-05, 7.434700000000238e-05, 7.434699999999891e-05, 7.437499999999805e-05, 7.434700000000238e-05, 7.434699999999891e-05, 7.431999999999925e-05, 7.436100000000195e-05, 7.437499999999805e-05, 7.431999999999925e-05, 7.427800000000054e-05, 7.437499999999805e-05, 7.431999999999925e-05, 7.434800000000186e-05, 7.434799999999839e-05, 7.437500000000152e-05, 7.431899999999977e-05, 7.434699999999891e-05, 7.437500000000152e-05, 7.436099999999848e-05, 7.436099999999848e-05, 7.433299999999934e-05, 7.436100000000195e-05, 7.431899999999977e-05, 7.436100000000195e-05, 7.431900000000324e-05]</msg>
<status status="PASS" starttime="20201029 09:34:31.652" endtime="20201029 09:34:31.654"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.647" endtime="20201029 09:34:31.654"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.298" endtime="20201029 09:34:31.655"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.276" endtime="20201029 09:34:31.655"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:31.657" endtime="20201029 09:34:31.676"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.656" endtime="20201029 09:34:31.677"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.685" endtime="20201029 09:34:31.702"></status>
</kw>
<msg timestamp="20201029 09:34:31.702" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.684" endtime="20201029 09:34:31.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.704" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.703" endtime="20201029 09:34:31.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.705" endtime="20201029 09:34:31.707"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.681" endtime="20201029 09:34:31.708"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.679" endtime="20201029 09:34:31.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.715" endtime="20201029 09:34:32.001"></status>
</kw>
<msg timestamp="20201029 09:34:32.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017557472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017634694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:31.713" endtime="20201029 09:34:32.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017557472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017634694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.005" endtime="20201029 09:34:32.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.014" endtime="20201029 09:34:32.015"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.710" endtime="20201029 09:34:32.016"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.709" endtime="20201029 09:34:32.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:32.020" level="INFO">${PHILIP_RES} = [{'diff': 7.722199999999832e-05}, {'diff': 7.677799999999957e-05}, {'diff': 7.683300000000184e-05}, {'diff': 7.679199999999914e-05}, {'diff': 7.677799999999957e-05}, {'diff': 7.679199999999914e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:34:32.017" endtime="20201029 09:34:32.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:32.024" level="INFO">${RESULT} = {'diff': [7.722199999999832e-05, 7.677799999999957e-05, 7.683300000000184e-05, 7.679199999999914e-05, 7.677799999999957e-05, 7.679199999999914e-05, 7.679199999999914e-05, 7.675000000000043e-05, 7.6777...</msg>
<status status="PASS" starttime="20201029 09:34:32.021" endtime="20201029 09:34:32.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.029" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:32.028" endtime="20201029 09:34:32.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.031" level="INFO">VALUE: [7.722199999999832e-05, 7.677799999999957e-05, 7.683300000000184e-05, 7.679199999999914e-05, 7.677799999999957e-05, 7.679199999999914e-05, 7.679199999999914e-05, 7.675000000000043e-05, 7.677799999999957e-05, 7.6764e-05, 7.679200000000261e-05, 7.6764e-05, 7.679199999999914e-05, 7.67770000000001e-05, 7.679199999999914e-05, 7.677799999999957e-05, 7.677799999999957e-05, 7.680599999999871e-05, 7.681900000000227e-05, 7.684799999999742e-05, 7.679199999999914e-05, 7.679200000000261e-05, 7.679199999999914e-05, 7.679199999999914e-05, 7.67770000000001e-05, 7.679199999999914e-05, 7.677799999999957e-05, 7.679200000000261e-05, 7.683299999999837e-05, 7.674999999999696e-05, 7.680499999999923e-05, 7.677799999999957e-05, 7.680600000000218e-05, 7.681999999999828e-05, 7.6764e-05, 7.679099999999967e-05, 7.677799999999957e-05, 7.680599999999871e-05, 7.679199999999914e-05, 7.679199999999914e-05, 7.68050000000027e-05, 7.67770000000001e-05, 7.680499999999923e-05, 7.679200000000261e-05, 7.677799999999957e-05, 7.679200000000261e-05, 7.675000000000043e-05, 7.68189999999988e-05, 7.677799999999957e-05, 7.680599999999871e-05]</msg>
<status status="PASS" starttime="20201029 09:34:32.030" endtime="20201029 09:34:32.032"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.025" endtime="20201029 09:34:32.033"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.678" endtime="20201029 09:34:32.033"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.655" endtime="20201029 09:34:32.033"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:32.035" endtime="20201029 09:34:32.055"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.034" endtime="20201029 09:34:32.055"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.063" endtime="20201029 09:34:32.079"></status>
</kw>
<msg timestamp="20201029 09:34:32.080" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.062" endtime="20201029 09:34:32.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.082" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.081" endtime="20201029 09:34:32.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.083" endtime="20201029 09:34:32.086"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.059" endtime="20201029 09:34:32.086"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.057" endtime="20201029 09:34:32.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.093" endtime="20201029 09:34:32.380"></status>
</kw>
<msg timestamp="20201029 09:34:32.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017529472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017609181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.092" endtime="20201029 09:34:32.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017529472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017609181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.385" endtime="20201029 09:34:32.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.393" endtime="20201029 09:34:32.395"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.089" endtime="20201029 09:34:32.395"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.087" endtime="20201029 09:34:32.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:32.411" level="INFO">${PHILIP_RES} = [{'diff': 7.970900000000072e-05}, {'diff': 7.924999999999946e-05}, {'diff': 7.926399999999903e-05}, {'diff': 7.925000000000293e-05}, {'diff': 7.922200000000032e-05}, {'diff': 7.92229999999998e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:32.402" endtime="20201029 09:34:32.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:32.424" level="INFO">${RESULT} = {'diff': [7.970900000000072e-05, 7.924999999999946e-05, 7.926399999999903e-05, 7.925000000000293e-05, 7.922200000000032e-05, 7.92229999999998e-05, 7.929200000000164e-05, 7.92640000000025e-05, 7.925000...</msg>
<status status="PASS" starttime="20201029 09:34:32.414" endtime="20201029 09:34:32.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.438" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:32.435" endtime="20201029 09:34:32.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.447" level="INFO">VALUE: [7.970900000000072e-05, 7.924999999999946e-05, 7.926399999999903e-05, 7.925000000000293e-05, 7.922200000000032e-05, 7.92229999999998e-05, 7.929200000000164e-05, 7.92640000000025e-05, 7.925000000000293e-05, 7.924999999999946e-05, 7.926399999999903e-05, 7.92779999999986e-05, 7.92640000000025e-05, 7.92779999999986e-05, 7.926399999999903e-05, 7.923599999999989e-05, 7.924999999999946e-05, 7.927800000000207e-05, 7.926399999999903e-05, 7.922200000000032e-05, 7.92779999999986e-05, 7.927800000000207e-05, 7.920800000000075e-05, 7.926399999999903e-05, 7.927699999999913e-05, 7.924999999999946e-05, 7.923700000000283e-05, 7.92779999999986e-05, 7.927699999999913e-05, 7.924999999999946e-05, 7.930500000000174e-05, 7.930600000000121e-05, 7.926399999999903e-05, 7.922200000000032e-05, 7.93190000000013e-05, 7.933400000000035e-05, 7.929100000000217e-05, 7.926399999999903e-05, 7.924999999999946e-05, 7.926399999999903e-05, 7.92640000000025e-05, 7.927800000000207e-05, 7.926399999999903e-05, 7.92779999999986e-05, 7.922199999999685e-05, 7.926300000000303e-05, 7.92779999999986e-05, 7.924999999999946e-05, 7.926399999999903e-05, 7.926399999999903e-05]</msg>
<status status="PASS" starttime="20201029 09:34:32.443" endtime="20201029 09:34:32.452"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.427" endtime="20201029 09:34:32.454"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.056" endtime="20201029 09:34:32.456"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.033" endtime="20201029 09:34:32.457"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:32.464" endtime="20201029 09:34:32.483"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.460" endtime="20201029 09:34:32.484"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.494" endtime="20201029 09:34:32.511"></status>
</kw>
<msg timestamp="20201029 09:34:32.511" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.492" endtime="20201029 09:34:32.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.514" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.512" endtime="20201029 09:34:32.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.515" endtime="20201029 09:34:32.517"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.489" endtime="20201029 09:34:32.518"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.486" endtime="20201029 09:34:32.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.526" endtime="20201029 09:34:32.831"></status>
</kw>
<msg timestamp="20201029 09:34:32.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0196215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019703708, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:32.524" endtime="20201029 09:34:32.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0196215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019703708, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:32.835" endtime="20201029 09:34:32.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.844" endtime="20201029 09:34:32.846"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.521" endtime="20201029 09:34:32.846"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.519" endtime="20201029 09:34:32.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:32.851" level="INFO">${PHILIP_RES} = [{'diff': 8.220800000000028e-05}, {'diff': 8.173599999999892e-05}, {'diff': 8.172199999999935e-05}, {'diff': 8.175000000000196e-05}, {'diff': 8.174999999999849e-05}, {'diff': 8.174999999999849e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:34:32.847" endtime="20201029 09:34:32.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:32.856" level="INFO">${RESULT} = {'diff': [8.220800000000028e-05, 8.173599999999892e-05, 8.172199999999935e-05, 8.175000000000196e-05, 8.174999999999849e-05, 8.174999999999849e-05, 8.173600000000239e-05, 8.176400000000153e-05, 8.1749...</msg>
<status status="PASS" starttime="20201029 09:34:32.852" endtime="20201029 09:34:32.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.860" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:32.859" endtime="20201029 09:34:32.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.863" level="INFO">VALUE: [8.220800000000028e-05, 8.173599999999892e-05, 8.172199999999935e-05, 8.175000000000196e-05, 8.174999999999849e-05, 8.174999999999849e-05, 8.173600000000239e-05, 8.176400000000153e-05, 8.174999999999849e-05, 8.173599999999892e-05, 8.173599999999892e-05, 8.174999999999849e-05, 8.175000000000196e-05, 8.174999999999849e-05, 8.176299999999859e-05, 8.175000000000196e-05, 8.174999999999849e-05, 8.17780000000011e-05, 8.175000000000196e-05, 8.176399999999806e-05, 8.175000000000196e-05, 8.174999999999849e-05, 8.174999999999849e-05, 8.176400000000153e-05, 8.174999999999849e-05, 8.173599999999892e-05, 8.175000000000196e-05, 8.175000000000196e-05, 8.174999999999849e-05, 8.175000000000196e-05, 8.174999999999849e-05, 8.176399999999806e-05, 8.175000000000196e-05, 8.175000000000196e-05, 8.174999999999849e-05, 8.173600000000239e-05, 8.177799999999763e-05, 8.174999999999849e-05, 8.175000000000196e-05, 8.173599999999892e-05, 8.176400000000153e-05, 8.176300000000206e-05, 8.174999999999849e-05, 8.174999999999849e-05, 8.180600000000024e-05, 8.173599999999892e-05, 8.173599999999892e-05, 8.17780000000011e-05, 8.174999999999849e-05, 8.175000000000196e-05]</msg>
<status status="PASS" starttime="20201029 09:34:32.862" endtime="20201029 09:34:32.864"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.857" endtime="20201029 09:34:32.864"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.484" endtime="20201029 09:34:32.865"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.459" endtime="20201029 09:34:32.865"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:32.868" endtime="20201029 09:34:32.887"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.866" endtime="20201029 09:34:32.888"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.896" endtime="20201029 09:34:32.913"></status>
</kw>
<msg timestamp="20201029 09:34:32.913" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.894" endtime="20201029 09:34:32.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.916" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.914" endtime="20201029 09:34:32.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.917" endtime="20201029 09:34:32.919"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.892" endtime="20201029 09:34:32.919"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.890" endtime="20201029 09:34:32.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.926" endtime="20201029 09:34:33.214"></status>
</kw>
<msg timestamp="20201029 09:34:33.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018026069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018110792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.925" endtime="20201029 09:34:33.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018026069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018110792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.218" endtime="20201029 09:34:33.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.226" endtime="20201029 09:34:33.228"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.922" endtime="20201029 09:34:33.229"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.920" endtime="20201029 09:34:33.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:33.233" level="INFO">${PHILIP_RES} = [{'diff': 8.472300000000182e-05}, {'diff': 8.427800000000013e-05}, {'diff': 8.425000000000099e-05}, {'diff': 8.423599999999795e-05}, {'diff': 8.426400000000056e-05}, {'diff': 8.427800000000013e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:34:33.230" endtime="20201029 09:34:33.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:33.238" level="INFO">${RESULT} = {'diff': [8.472300000000182e-05, 8.427800000000013e-05, 8.425000000000099e-05, 8.423599999999795e-05, 8.426400000000056e-05, 8.427800000000013e-05, 8.430599999999927e-05, 8.431999999999884e-05, 8.4333...</msg>
<status status="PASS" starttime="20201029 09:34:33.234" endtime="20201029 09:34:33.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.242" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:33.241" endtime="20201029 09:34:33.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.245" level="INFO">VALUE: [8.472300000000182e-05, 8.427800000000013e-05, 8.425000000000099e-05, 8.423599999999795e-05, 8.426400000000056e-05, 8.427800000000013e-05, 8.430599999999927e-05, 8.431999999999884e-05, 8.433399999999841e-05, 8.431899999999937e-05, 8.426400000000056e-05, 8.42919999999997e-05, 8.433399999999841e-05, 8.42919999999997e-05, 8.42919999999997e-05, 8.43049999999998e-05, 8.430600000000274e-05, 8.42919999999997e-05, 8.427800000000013e-05, 8.43049999999998e-05, 8.429100000000023e-05, 8.427800000000013e-05, 8.427800000000013e-05, 8.427800000000013e-05, 8.427700000000066e-05, 8.427700000000066e-05, 8.427800000000013e-05, 8.427800000000013e-05, 8.42919999999997e-05, 8.427800000000013e-05, 8.426300000000109e-05, 8.427800000000013e-05, 8.42919999999997e-05, 8.42919999999997e-05, 8.42919999999997e-05, 8.427800000000013e-05, 8.429100000000023e-05, 8.42919999999997e-05, 8.427800000000013e-05, 8.430599999999927e-05, 8.42919999999997e-05, 8.427700000000066e-05, 8.42919999999997e-05, 8.426400000000056e-05, 8.42919999999997e-05, 8.427800000000013e-05, 8.427700000000066e-05, 8.426400000000056e-05, 8.42919999999997e-05, 8.426400000000056e-05]</msg>
<status status="PASS" starttime="20201029 09:34:33.243" endtime="20201029 09:34:33.245"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.238" endtime="20201029 09:34:33.246"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.888" endtime="20201029 09:34:33.246"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.865" endtime="20201029 09:34:33.247"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:33.249" endtime="20201029 09:34:33.268"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.248" endtime="20201029 09:34:33.269"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.278" endtime="20201029 09:34:33.295"></status>
</kw>
<msg timestamp="20201029 09:34:33.296" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.276" endtime="20201029 09:34:33.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.298" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.297" endtime="20201029 09:34:33.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.299" endtime="20201029 09:34:33.302"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.273" endtime="20201029 09:34:33.302"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.271" endtime="20201029 09:34:33.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.310" endtime="20201029 09:34:33.596"></status>
</kw>
<msg timestamp="20201029 09:34:33.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018143083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018230361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.308" endtime="20201029 09:34:33.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018143083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018230361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.600" endtime="20201029 09:34:33.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.608" endtime="20201029 09:34:33.610"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.305" endtime="20201029 09:34:33.611"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.303" endtime="20201029 09:34:33.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:33.615" level="INFO">${PHILIP_RES} = [{'diff': 8.727799999999966e-05}, {'diff': 8.687500000000015e-05}, {'diff': 8.682000000000134e-05}, {'diff': 8.680600000000177e-05}, {'diff': 8.68189999999984e-05}, {'diff': 8.683299999999797e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:33.612" endtime="20201029 09:34:33.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:33.620" level="INFO">${RESULT} = {'diff': [8.727799999999966e-05, 8.687500000000015e-05, 8.682000000000134e-05, 8.680600000000177e-05, 8.68189999999984e-05, 8.683299999999797e-05, 8.677800000000263e-05, 8.681900000000187e-05, 8.68200...</msg>
<status status="PASS" starttime="20201029 09:34:33.616" endtime="20201029 09:34:33.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.624" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:33.623" endtime="20201029 09:34:33.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.626" level="INFO">VALUE: [8.727799999999966e-05, 8.687500000000015e-05, 8.682000000000134e-05, 8.680600000000177e-05, 8.68189999999984e-05, 8.683299999999797e-05, 8.677800000000263e-05, 8.681900000000187e-05, 8.682000000000134e-05, 8.683400000000091e-05, 8.683399999999744e-05, 8.682000000000134e-05, 8.683300000000144e-05, 8.681900000000187e-05, 8.686099999999711e-05, 8.683400000000091e-05, 8.683399999999744e-05, 8.683400000000091e-05, 8.683300000000144e-05, 8.6847000000001e-05, 8.679099999999926e-05, 8.680499999999883e-05, 8.691699999999886e-05, 8.682000000000134e-05, 8.686200000000005e-05, 8.677799999999916e-05, 8.683299999999797e-05, 8.680499999999883e-05, 8.68189999999984e-05, 8.686100000000058e-05, 8.682000000000134e-05, 8.68059999999983e-05, 8.684699999999754e-05, 8.683299999999797e-05, 8.687500000000015e-05, 8.6847000000001e-05, 8.683400000000091e-05, 8.68059999999983e-05, 8.681999999999787e-05, 8.677800000000263e-05, 8.681900000000187e-05, 8.683300000000144e-05, 8.683300000000144e-05, 8.681999999999787e-05, 8.68059999999983e-05, 8.67920000000022e-05, 8.686100000000058e-05, 8.676399999999959e-05, 8.687500000000015e-05, 8.683299999999797e-05]</msg>
<status status="PASS" starttime="20201029 09:34:33.625" endtime="20201029 09:34:33.633"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.620" endtime="20201029 09:34:33.634"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.270" endtime="20201029 09:34:33.634"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.247" endtime="20201029 09:34:33.634"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:33.637" endtime="20201029 09:34:33.656"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.635" endtime="20201029 09:34:33.657"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.665" endtime="20201029 09:34:33.683"></status>
</kw>
<msg timestamp="20201029 09:34:33.683" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.664" endtime="20201029 09:34:33.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.686" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.684" endtime="20201029 09:34:33.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.687" endtime="20201029 09:34:33.688"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.661" endtime="20201029 09:34:33.689"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.659" endtime="20201029 09:34:33.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.696" endtime="20201029 09:34:33.982"></status>
</kw>
<msg timestamp="20201029 09:34:33.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018069583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018159458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.694" endtime="20201029 09:34:33.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018069583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018159458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.986" endtime="20201029 09:34:33.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.995" endtime="20201029 09:34:33.996"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.692" endtime="20201029 09:34:33.997"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.690" endtime="20201029 09:34:33.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:34.001" level="INFO">${PHILIP_RES} = [{'diff': 8.987499999999968e-05}, {'diff': 8.941699999999789e-05}, {'diff': 8.938899999999875e-05}, {'diff': 8.944399999999755e-05}, {'diff': 8.940299999999832e-05}, {'diff': 8.941599999999841e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:34:33.998" endtime="20201029 09:34:34.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:34.007" level="INFO">${RESULT} = {'diff': [8.987499999999968e-05, 8.941699999999789e-05, 8.938899999999875e-05, 8.944399999999755e-05, 8.940299999999832e-05, 8.941599999999841e-05, 8.948599999999973e-05, 8.934799999999951e-05, 8.9415...</msg>
<status status="PASS" starttime="20201029 09:34:34.002" endtime="20201029 09:34:34.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.011" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:34.010" endtime="20201029 09:34:34.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.014" level="INFO">VALUE: [8.987499999999968e-05, 8.941699999999789e-05, 8.938899999999875e-05, 8.944399999999755e-05, 8.940299999999832e-05, 8.941599999999841e-05, 8.948599999999973e-05, 8.934799999999951e-05, 8.941599999999841e-05, 8.936099999999961e-05, 8.940300000000179e-05, 8.942999999999798e-05, 8.940199999999884e-05, 8.941599999999841e-05, 8.938900000000222e-05, 8.938900000000222e-05, 8.943100000000093e-05, 8.938900000000222e-05, 8.941699999999789e-05, 8.940299999999832e-05, 8.940299999999832e-05, 8.941700000000136e-05, 8.937499999999918e-05, 8.941700000000136e-05, 8.941700000000136e-05, 8.933399999999994e-05, 8.941700000000136e-05, 8.940299999999832e-05, 8.940299999999832e-05, 8.940199999999884e-05, 8.941599999999841e-05, 8.941600000000188e-05, 8.940200000000231e-05, 8.943000000000145e-05, 8.940300000000179e-05, 8.940300000000179e-05, 8.941599999999841e-05, 8.938899999999875e-05, 8.940299999999832e-05, 8.943099999999746e-05, 8.940300000000179e-05, 8.943100000000093e-05, 8.941700000000136e-05, 8.940300000000179e-05, 8.940300000000179e-05, 8.940299999999832e-05, 8.943099999999746e-05, 8.940299999999832e-05, 8.941700000000136e-05, 8.940300000000179e-05]</msg>
<status status="PASS" starttime="20201029 09:34:34.012" endtime="20201029 09:34:34.014"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.008" endtime="20201029 09:34:34.015"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.658" endtime="20201029 09:34:34.015"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.635" endtime="20201029 09:34:34.016"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:34.018" endtime="20201029 09:34:34.038"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.017" endtime="20201029 09:34:34.038"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.046" endtime="20201029 09:34:34.064"></status>
</kw>
<msg timestamp="20201029 09:34:34.065" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.045" endtime="20201029 09:34:34.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.068" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.066" endtime="20201029 09:34:34.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.069" endtime="20201029 09:34:34.070"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.042" endtime="20201029 09:34:34.071"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.040" endtime="20201029 09:34:34.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.078" endtime="20201029 09:34:34.368"></status>
</kw>
<msg timestamp="20201029 09:34:34.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018149597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018242069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.076" endtime="20201029 09:34:34.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018149597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018242069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.372" endtime="20201029 09:34:34.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.381" endtime="20201029 09:34:34.382"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.074" endtime="20201029 09:34:34.383"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.072" endtime="20201029 09:34:34.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:34.387" level="INFO">${PHILIP_RES} = [{'diff': 9.24719999999997e-05}, {'diff': 9.20000000000018e-05}, {'diff': 9.201400000000137e-05}, {'diff': 9.199999999999833e-05}, {'diff': 9.208299999999975e-05}, {'diff': 9.19719999999992e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 09:34:34.384" endtime="20201029 09:34:34.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:34.392" level="INFO">${RESULT} = {'diff': [9.24719999999997e-05, 9.20000000000018e-05, 9.201400000000137e-05, 9.199999999999833e-05, 9.208299999999975e-05, 9.19719999999992e-05, 9.206900000000018e-05, 9.201400000000137e-05, 9.2000000...</msg>
<status status="PASS" starttime="20201029 09:34:34.388" endtime="20201029 09:34:34.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.396" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:34.395" endtime="20201029 09:34:34.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.399" level="INFO">VALUE: [9.24719999999997e-05, 9.20000000000018e-05, 9.201400000000137e-05, 9.199999999999833e-05, 9.208299999999975e-05, 9.19719999999992e-05, 9.206900000000018e-05, 9.201400000000137e-05, 9.20000000000018e-05, 9.202800000000094e-05, 9.201299999999843e-05, 9.195799999999962e-05, 9.202799999999747e-05, 9.199999999999833e-05, 9.201400000000137e-05, 9.202800000000094e-05, 9.202800000000094e-05, 9.198600000000223e-05, 9.199999999999833e-05, 9.20139999999979e-05, 9.199999999999833e-05, 9.199999999999833e-05, 9.202799999999747e-05, 9.20130000000019e-05, 9.201400000000137e-05, 9.206900000000018e-05, 9.202800000000094e-05, 9.206900000000018e-05, 9.199999999999833e-05, 9.199999999999833e-05, 9.202800000000094e-05, 9.201400000000137e-05, 9.202800000000094e-05, 9.201400000000137e-05, 9.201400000000137e-05, 9.199999999999833e-05, 9.204100000000104e-05, 9.199999999999833e-05, 9.20139999999979e-05, 9.20000000000018e-05, 9.201400000000137e-05, 9.201400000000137e-05, 9.201400000000137e-05, 9.199999999999833e-05, 9.201299999999843e-05, 9.20139999999979e-05, 9.201400000000137e-05, 9.198599999999876e-05, 9.201400000000137e-05, 9.205500000000061e-05]</msg>
<status status="PASS" starttime="20201029 09:34:34.397" endtime="20201029 09:34:34.399"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.392" endtime="20201029 09:34:34.401"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.039" endtime="20201029 09:34:34.401"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.016" endtime="20201029 09:34:34.401"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:34.404" endtime="20201029 09:34:34.423"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.402" endtime="20201029 09:34:34.424"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.432" endtime="20201029 09:34:34.450"></status>
</kw>
<msg timestamp="20201029 09:34:34.451" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.431" endtime="20201029 09:34:34.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.453" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.452" endtime="20201029 09:34:34.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.455" endtime="20201029 09:34:34.457"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.428" endtime="20201029 09:34:34.458"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.426" endtime="20201029 09:34:34.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.465" endtime="20201029 09:34:34.751"></status>
</kw>
<msg timestamp="20201029 09:34:34.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017998917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018094014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.463" endtime="20201029 09:34:34.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017998917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018094014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.755" endtime="20201029 09:34:34.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.764" endtime="20201029 09:34:34.765"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.461" endtime="20201029 09:34:34.766"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.459" endtime="20201029 09:34:34.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:34.770" level="INFO">${PHILIP_RES} = [{'diff': 9.509699999999885e-05}, {'diff': 9.466699999999967e-05}, {'diff': 9.458299999999878e-05}, {'diff': 9.46530000000001e-05}, {'diff': 9.46530000000001e-05}, {'diff': 9.465200000000062e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:34.767" endtime="20201029 09:34:34.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:34.775" level="INFO">${RESULT} = {'diff': [9.509699999999885e-05, 9.466699999999967e-05, 9.458299999999878e-05, 9.46530000000001e-05, 9.46530000000001e-05, 9.465200000000062e-05, 9.466699999999967e-05, 9.463900000000053e-05, 9.472200...</msg>
<status status="PASS" starttime="20201029 09:34:34.771" endtime="20201029 09:34:34.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.779" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:34.778" endtime="20201029 09:34:34.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.782" level="INFO">VALUE: [9.509699999999885e-05, 9.466699999999967e-05, 9.458299999999878e-05, 9.46530000000001e-05, 9.46530000000001e-05, 9.465200000000062e-05, 9.466699999999967e-05, 9.463900000000053e-05, 9.472200000000194e-05, 9.466699999999967e-05, 9.467999999999976e-05, 9.467999999999976e-05, 9.462500000000096e-05, 9.46530000000001e-05, 9.46530000000001e-05, 9.46530000000001e-05, 9.463900000000053e-05, 9.472200000000194e-05, 9.465200000000062e-05, 9.46530000000001e-05, 9.463900000000053e-05, 9.46530000000001e-05, 9.463900000000053e-05, 9.465200000000062e-05, 9.463900000000053e-05, 9.461099999999792e-05, 9.470900000000185e-05, 9.46530000000001e-05, 9.46530000000001e-05, 9.46660000000002e-05, 9.46660000000002e-05, 9.46530000000001e-05, 9.46530000000001e-05, 9.465200000000062e-05, 9.459799999999782e-05, 9.463900000000053e-05, 9.465200000000062e-05, 9.459699999999835e-05, 9.466699999999967e-05, 9.463900000000053e-05, 9.46530000000001e-05, 9.467999999999976e-05, 9.465200000000062e-05, 9.46530000000001e-05, 9.46530000000001e-05, 9.470900000000185e-05, 9.46530000000001e-05, 9.472199999999847e-05, 9.461099999999792e-05, 9.46660000000002e-05]</msg>
<status status="PASS" starttime="20201029 09:34:34.780" endtime="20201029 09:34:34.783"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.776" endtime="20201029 09:34:34.784"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.424" endtime="20201029 09:34:34.784"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.402" endtime="20201029 09:34:34.785"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:34.787" endtime="20201029 09:34:34.806"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.785" endtime="20201029 09:34:34.807"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.815" endtime="20201029 09:34:34.834"></status>
</kw>
<msg timestamp="20201029 09:34:34.834" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.814" endtime="20201029 09:34:34.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.837" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.835" endtime="20201029 09:34:34.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.838" endtime="20201029 09:34:34.840"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.811" endtime="20201029 09:34:34.840"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.809" endtime="20201029 09:34:34.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.847" endtime="20201029 09:34:35.135"></status>
</kw>
<msg timestamp="20201029 09:34:35.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017875764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017973542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.846" endtime="20201029 09:34:35.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017875764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017973542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:35.139" endtime="20201029 09:34:35.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.147" endtime="20201029 09:34:35.148"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.843" endtime="20201029 09:34:35.149"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.841" endtime="20201029 09:34:35.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:35.153" level="INFO">${PHILIP_RES} = [{'diff': 9.777799999999975e-05}, {'diff': 9.731899999999849e-05}, {'diff': 9.732000000000143e-05}, {'diff': 9.731999999999796e-05}, {'diff': 9.73059999999984e-05}, {'diff': 9.733300000000153e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:35.150" endtime="20201029 09:34:35.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:35.158" level="INFO">${RESULT} = {'diff': [9.777799999999975e-05, 9.731899999999849e-05, 9.732000000000143e-05, 9.731999999999796e-05, 9.73059999999984e-05, 9.733300000000153e-05, 9.729199999999882e-05, 9.730500000000239e-05, 9.73049...</msg>
<status status="PASS" starttime="20201029 09:34:35.154" endtime="20201029 09:34:35.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.162" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:35.161" endtime="20201029 09:34:35.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.165" level="INFO">VALUE: [9.777799999999975e-05, 9.731899999999849e-05, 9.732000000000143e-05, 9.731999999999796e-05, 9.73059999999984e-05, 9.733300000000153e-05, 9.729199999999882e-05, 9.730500000000239e-05, 9.730499999999892e-05, 9.730500000000239e-05, 9.730499999999892e-05, 9.72920000000023e-05, 9.730600000000186e-05, 9.73059999999984e-05, 9.730600000000186e-05, 9.726399999999968e-05, 9.730600000000186e-05, 9.731999999999796e-05, 9.729199999999882e-05, 9.730500000000239e-05, 9.730499999999892e-05, 9.733300000000153e-05, 9.731899999999849e-05, 9.731900000000196e-05, 9.732000000000143e-05, 9.730600000000186e-05, 9.730600000000186e-05, 9.731999999999796e-05, 9.732000000000143e-05, 9.73059999999984e-05, 9.731900000000196e-05, 9.727699999999978e-05, 9.729099999999935e-05, 9.731900000000196e-05, 9.731999999999796e-05, 9.730600000000186e-05, 9.736100000000067e-05, 9.730600000000186e-05, 9.73059999999984e-05, 9.732000000000143e-05, 9.730600000000186e-05, 9.729099999999935e-05, 9.733300000000153e-05, 9.730499999999892e-05, 9.733300000000153e-05, 9.729199999999882e-05, 9.73059999999984e-05, 9.730600000000186e-05, 9.73059999999984e-05, 9.73470000000011e-05]</msg>
<status status="PASS" starttime="20201029 09:34:35.163" endtime="20201029 09:34:35.166"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.159" endtime="20201029 09:34:35.166"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.808" endtime="20201029 09:34:35.167"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.785" endtime="20201029 09:34:35.167"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:35.169" endtime="20201029 09:34:35.189"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.168" endtime="20201029 09:34:35.189"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.197" endtime="20201029 09:34:35.216"></status>
</kw>
<msg timestamp="20201029 09:34:35.216" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.196" endtime="20201029 09:34:35.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.219" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.217" endtime="20201029 09:34:35.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.220" endtime="20201029 09:34:35.221"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.193" endtime="20201029 09:34:35.222"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.191" endtime="20201029 09:34:35.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.229" endtime="20201029 09:34:35.518"></status>
</kw>
<msg timestamp="20201029 09:34:35.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017603194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017703653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:35.227" endtime="20201029 09:34:35.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017603194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017703653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:35.522" endtime="20201029 09:34:35.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.530" endtime="20201029 09:34:35.532"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.225" endtime="20201029 09:34:35.532"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.223" endtime="20201029 09:34:35.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:35.537" level="INFO">${PHILIP_RES} = [{'diff': 0.00010045900000000066}, {'diff': 0.00010000000000000286}, {'diff': 0.00010000000000000286}, {'diff': 9.998599999999983e-05}, {'diff': 0.00010001400000000243}, {'diff': 0.0001000000000000028...</msg>
<status status="PASS" starttime="20201029 09:34:35.533" endtime="20201029 09:34:35.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:35.541" level="INFO">${RESULT} = {'diff': [0.00010045900000000066, 0.00010000000000000286, 0.00010000000000000286, 9.998599999999983e-05, 0.00010001400000000243, 0.00010000000000000286, 9.99999999999994e-05, 0.00010001400000000243, 0...</msg>
<status status="PASS" starttime="20201029 09:34:35.538" endtime="20201029 09:34:35.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.545" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:35.544" endtime="20201029 09:34:35.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.547" level="INFO">VALUE: [0.00010045900000000066, 0.00010000000000000286, 0.00010000000000000286, 9.998599999999983e-05, 0.00010001400000000243, 0.00010000000000000286, 9.99999999999994e-05, 0.00010001400000000243, 0.00010000000000000286, 0.00010001400000000243, 9.998599999999983e-05, 0.00010000000000000286, 9.998599999999983e-05, 0.000100028000000002, 0.00010000000000000286, 0.00010001299999999949, 0.00010005600000000114, 0.00010001399999999896, 9.99999999999994e-05, 0.00010005500000000167, 9.998599999999983e-05, 0.00010001299999999949, 0.00010001399999999896, 0.00010001399999999896, 0.00010001399999999896, 0.00010000000000000286, 9.99999999999994e-05, 9.99999999999994e-05, 0.00010002799999999853, 0.00010001399999999896, 0.00010001399999999896, 9.99999999999994e-05, 0.000100028000000002, 0.00010001299999999949, 9.99999999999994e-05, 9.998599999999983e-05, 0.00010001399999999896, 0.00010001399999999896, 0.00010001299999999949, 9.99999999999994e-05, 9.99999999999994e-05, 9.99999999999994e-05, 9.99999999999994e-05, 9.99999999999994e-05, 9.998599999999983e-05, 0.00010007000000000071, 0.00010001399999999896, 0.0001000419999999981, 9.998599999999983e-05, 9.995900000000016e-05]</msg>
<status status="PASS" starttime="20201029 09:34:35.546" endtime="20201029 09:34:35.548"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.542" endtime="20201029 09:34:35.549"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.190" endtime="20201029 09:34:35.549"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.167" endtime="20201029 09:34:35.549"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:35.552" endtime="20201029 09:34:35.571"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.550" endtime="20201029 09:34:35.571"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.580" endtime="20201029 09:34:35.599"></status>
</kw>
<msg timestamp="20201029 09:34:35.599" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.578" endtime="20201029 09:34:35.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.602" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.600" endtime="20201029 09:34:35.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.603" endtime="20201029 09:34:35.605"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.575" endtime="20201029 09:34:35.606"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.573" endtime="20201029 09:34:35.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.613" endtime="20201029 09:34:35.916"></status>
</kw>
<msg timestamp="20201029 09:34:35.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017619764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017722931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:35.611" endtime="20201029 09:34:35.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017619764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017722931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:35.920" endtime="20201029 09:34:35.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.927" endtime="20201029 09:34:35.929"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.608" endtime="20201029 09:34:35.930"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.607" endtime="20201029 09:34:35.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:35.934" level="INFO">${PHILIP_RES} = [{'diff': 0.00010316700000000123}, {'diff': 0.00010270799999999997}, {'diff': 0.00010270899999999944}, {'diff': 0.00010272199999999954}, {'diff': 0.00010273700000000205}, {'diff': 0.000102721999999999...</msg>
<status status="PASS" starttime="20201029 09:34:35.931" endtime="20201029 09:34:35.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:35.938" level="INFO">${RESULT} = {'diff': [0.00010316700000000123, 0.00010270799999999997, 0.00010270899999999944, 0.00010272199999999954, 0.00010273700000000205, 0.00010272199999999954, 0.00010272299999999901, 0.00010270799999999997...</msg>
<status status="PASS" starttime="20201029 09:34:35.935" endtime="20201029 09:34:35.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.942" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:35.941" endtime="20201029 09:34:35.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.945" level="INFO">VALUE: [0.00010316700000000123, 0.00010270799999999997, 0.00010270899999999944, 0.00010272199999999954, 0.00010273700000000205, 0.00010272199999999954, 0.00010272299999999901, 0.00010270799999999997, 0.00010270899999999944, 0.00010270799999999997, 0.00010272199999999954, 0.00010276300000000224, 0.00010270799999999997, 0.00010270899999999944, 0.0001027359999999991, 0.00010263900000000159, 0.0001026940000000004, 0.00010274999999999868, 0.00010263899999999812, 0.00010272299999999901, 0.00010270799999999997, 0.00010272199999999954, 0.00010270799999999997, 0.00010270799999999997, 0.00010276300000000224, 0.00010276400000000172, 0.00010272199999999954, 0.00010265300000000116, 0.00010272299999999901, 0.00010272199999999954, 0.00010270899999999944, 0.00010270799999999997, 0.00010269499999999987, 0.0001026940000000004, 0.000102722000000003, 0.000102722000000003, 0.00010263899999999812, 0.00010272199999999954, 0.0001026940000000004, 0.00010269499999999987, 0.00010265300000000116, 0.00010270900000000291, 0.00010270799999999997, 0.00010272299999999901, 0.00010270799999999997, 0.00010269499999999987, 0.00010272199999999954, 0.00010270799999999997, 0.00010270799999999997, 0.00010270799999999997]</msg>
<status status="PASS" starttime="20201029 09:34:35.943" endtime="20201029 09:34:35.946"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.939" endtime="20201029 09:34:35.947"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.572" endtime="20201029 09:34:35.947"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.550" endtime="20201029 09:34:35.947"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:35.950" endtime="20201029 09:34:35.969"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.948" endtime="20201029 09:34:35.970"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.978" endtime="20201029 09:34:35.996"></status>
</kw>
<msg timestamp="20201029 09:34:35.997" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.976" endtime="20201029 09:34:35.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.999" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.998" endtime="20201029 09:34:36.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.001" endtime="20201029 09:34:36.002"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.973" endtime="20201029 09:34:36.003"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.972" endtime="20201029 09:34:36.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.010" endtime="20201029 09:34:36.295"></status>
</kw>
<msg timestamp="20201029 09:34:36.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017475778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017581694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.008" endtime="20201029 09:34:36.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017475778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017581694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.299" endtime="20201029 09:34:36.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.307" endtime="20201029 09:34:36.309"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.005" endtime="20201029 09:34:36.309"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.004" endtime="20201029 09:34:36.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:36.313" level="INFO">${PHILIP_RES} = [{'diff': 0.00010591599999999757}, {'diff': 0.00010545899999999872}, {'diff': 0.00010543099999999958}, {'diff': 0.00010545900000000219}, {'diff': 0.00010552800000000057}, {'diff': 0.000105499999999997...</msg>
<status status="PASS" starttime="20201029 09:34:36.310" endtime="20201029 09:34:36.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:36.318" level="INFO">${RESULT} = {'diff': [0.00010591599999999757, 0.00010545899999999872, 0.00010543099999999958, 0.00010545900000000219, 0.00010552800000000057, 0.00010549999999999796, 0.00010547199999999882, 0.00010545799999999925...</msg>
<status status="PASS" starttime="20201029 09:34:36.314" endtime="20201029 09:34:36.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.323" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:36.322" endtime="20201029 09:34:36.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.325" level="INFO">VALUE: [0.00010591599999999757, 0.00010545899999999872, 0.00010543099999999958, 0.00010545900000000219, 0.00010552800000000057, 0.00010549999999999796, 0.00010547199999999882, 0.00010545799999999925, 0.00010545799999999925, 0.00010547200000000229, 0.00010545799999999925, 0.00010548599999999839, 0.00010547199999999882, 0.00010548599999999839, 0.00010543099999999958, 0.00010547199999999882, 0.00010540299999999697, 0.00010547299999999829, 0.00010545899999999872, 0.00010545900000000219, 0.00010548600000000186, 0.00010544399999999968, 0.000105514000000001, 0.00010545799999999925, 0.00010547199999999882, 0.00010544499999999915, 0.00010545799999999925, 0.00010547199999999882, 0.00010545799999999925, 0.00010547199999999882, 0.00010545899999999872, 0.00010548600000000186, 0.00010548700000000133, 0.00010544499999999915, 0.00010548599999999839, 0.00010545899999999872, 0.00010548600000000186, 0.00010550000000000143, 0.00010545799999999925, 0.00010547199999999882, 0.00010547199999999882, 0.00010547199999999882, 0.00010545800000000272, 0.00010545800000000272, 0.00010547199999999882, 0.00010544499999999915, 0.00010547199999999882, 0.00010549999999999796, 0.00010547300000000176, 0.00010547300000000176]</msg>
<status status="PASS" starttime="20201029 09:34:36.324" endtime="20201029 09:34:36.326"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.319" endtime="20201029 09:34:36.327"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.970" endtime="20201029 09:34:36.327"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.948" endtime="20201029 09:34:36.327"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:36.329" endtime="20201029 09:34:36.349"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.328" endtime="20201029 09:34:36.349"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.357" endtime="20201029 09:34:36.377"></status>
</kw>
<msg timestamp="20201029 09:34:36.378" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.356" endtime="20201029 09:34:36.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.380" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.379" endtime="20201029 09:34:36.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.382" endtime="20201029 09:34:36.383"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.353" endtime="20201029 09:34:36.384"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.351" endtime="20201029 09:34:36.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.391" endtime="20201029 09:34:36.678"></status>
</kw>
<msg timestamp="20201029 09:34:36.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017460292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017568972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.390" endtime="20201029 09:34:36.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017460292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017568972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.682" endtime="20201029 09:34:36.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.690" endtime="20201029 09:34:36.691"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.387" endtime="20201029 09:34:36.692"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.385" endtime="20201029 09:34:36.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:36.696" level="INFO">${PHILIP_RES} = [{'diff': 0.00010867999999999989}, {'diff': 0.00010818099999999886}, {'diff': 0.00010819499999999843}, {'diff': 0.00010822300000000104}, {'diff': 0.00010823599999999767}, {'diff': 0.000108250000000000...</msg>
<status status="PASS" starttime="20201029 09:34:36.693" endtime="20201029 09:34:36.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:36.700" level="INFO">${RESULT} = {'diff': [0.00010867999999999989, 0.00010818099999999886, 0.00010819499999999843, 0.00010822300000000104, 0.00010823599999999767, 0.0001082500000000007, 0.00010823600000000114, 0.00010822200000000157,...</msg>
<status status="PASS" starttime="20201029 09:34:36.697" endtime="20201029 09:34:36.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.704" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:36.703" endtime="20201029 09:34:36.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.707" level="INFO">VALUE: [0.00010867999999999989, 0.00010818099999999886, 0.00010819499999999843, 0.00010822300000000104, 0.00010823599999999767, 0.0001082500000000007, 0.00010823600000000114, 0.00010822200000000157, 0.00010823600000000114, 0.00010823700000000061, 0.0001082500000000007, 0.00010823600000000114, 0.00010819499999999843, 0.00010823599999999767, 0.00010823599999999767, 0.0001082219999999981, 0.00010820799999999853, 0.00010823600000000114, 0.0001082500000000007, 0.00010823600000000114, 0.00010823600000000114, 0.0001082219999999981, 0.0001082500000000007, 0.00010817999999999939, 0.00010823599999999767, 0.0001082219999999981, 0.00010823700000000061, 0.00010823600000000114, 0.00010829099999999994, 0.00010822200000000157, 0.0001082500000000007, 0.00010823600000000114, 0.00010823599999999767, 0.00010823599999999767, 0.00010822299999999757, 0.00010823600000000114, 0.00010823600000000114, 0.0001082500000000007, 0.0001082500000000007, 0.00010822200000000157, 0.00010822200000000157, 0.00010823600000000114, 0.0001082219999999981, 0.00010823699999999714, 0.00010823599999999767, 0.0001082500000000007, 0.0001082500000000007, 0.000108208000000002, 0.00010823600000000114, 0.00010822200000000157]</msg>
<status status="PASS" starttime="20201029 09:34:36.705" endtime="20201029 09:34:36.708"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.701" endtime="20201029 09:34:36.708"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.350" endtime="20201029 09:34:36.709"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.327" endtime="20201029 09:34:36.709"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.681" endtime="20201029 09:34:36.709"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:16.311" endtime="20201029 09:34:36.709" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:33:56.631" endtime="20201029 09:34:36.718"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 09:33:54.339" endtime="20201029 09:34:36.748"></status>
</suite>
<statistics>
<total>
<stat pass="10" fail="0">Critical Tests</stat>
<stat pass="10" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="10" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="10" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="10" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
