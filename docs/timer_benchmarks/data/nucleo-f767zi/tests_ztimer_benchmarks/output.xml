<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 18:30:14.676" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.269" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:30:15.278" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:30:16.520" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:30:15.268" endtime="20201030 18:30:16.521"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.523" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:30:16.522" endtime="20201030 18:30:16.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.267" endtime="20201030 18:30:16.524"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:16.526" endtime="20201030 18:30:16.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.525" endtime="20201030 18:30:16.759"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.772" endtime="20201030 18:30:16.785"></status>
</kw>
<msg timestamp="20201030 18:30:16.786" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:16.770" endtime="20201030 18:30:16.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.789" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:16.787" endtime="20201030 18:30:16.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.792" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:16.790" endtime="20201030 18:30:16.792"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:16.768" endtime="20201030 18:30:16.793"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:16.766" endtime="20201030 18:30:16.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.764" endtime="20201030 18:30:16.794"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:16.798" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:16.798" endtime="20201030 18:30:16.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.795" endtime="20201030 18:30:16.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.763" endtime="20201030 18:30:16.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.763" endtime="20201030 18:30:16.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.800" endtime="20201030 18:30:16.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.761" endtime="20201030 18:30:16.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.803" endtime="20201030 18:30:16.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.760" endtime="20201030 18:30:16.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.265" endtime="20201030 18:30:16.805"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:16.811" endtime="20201030 18:30:16.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.810" endtime="20201030 18:30:16.831"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.848" endtime="20201030 18:30:16.865"></status>
</kw>
<msg timestamp="20201030 18:30:16.866" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:16.846" endtime="20201030 18:30:16.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.870" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:16.867" endtime="20201030 18:30:16.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.875" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:16.872" endtime="20201030 18:30:16.876"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:16.843" endtime="20201030 18:30:16.877"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:16.840" endtime="20201030 18:30:16.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.837" endtime="20201030 18:30:16.879"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:16.883" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:16.882" endtime="20201030 18:30:16.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.880" endtime="20201030 18:30:16.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.836" endtime="20201030 18:30:16.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.835" endtime="20201030 18:30:16.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.884" endtime="20201030 18:30:16.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.834" endtime="20201030 18:30:16.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.832" endtime="20201030 18:30:16.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.809" endtime="20201030 18:30:16.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.895" endtime="20201030 18:30:16.906"></status>
</kw>
<msg timestamp="20201030 18:30:16.906" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:16.892" endtime="20201030 18:30:16.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.908" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:16.907" endtime="20201030 18:30:16.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.909" endtime="20201030 18:30:16.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.890" endtime="20201030 18:30:16.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.888" endtime="20201030 18:30:16.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.916" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 18:30:16.915" endtime="20201030 18:30:16.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.918" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201030 18:30:16.917" endtime="20201030 18:30:16.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.913" endtime="20201030 18:30:16.919"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:16.806" endtime="20201030 18:30:16.919" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:30:14.796" endtime="20201030 18:30:16.922"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.973" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:30:16.982" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:30:18.275" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:30:16.971" endtime="20201030 18:30:18.277"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.282" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:30:18.279" endtime="20201030 18:30:18.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.970" endtime="20201030 18:30:18.284"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:18.287" endtime="20201030 18:30:18.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.285" endtime="20201030 18:30:18.509"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.521" endtime="20201030 18:30:18.535"></status>
</kw>
<msg timestamp="20201030 18:30:18.536" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:18.520" endtime="20201030 18:30:18.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.538" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:18.537" endtime="20201030 18:30:18.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.541" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:18.539" endtime="20201030 18:30:18.542"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:18.518" endtime="20201030 18:30:18.542"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:18.515" endtime="20201030 18:30:18.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.514" endtime="20201030 18:30:18.543"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:18.547" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:18.546" endtime="20201030 18:30:18.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.544" endtime="20201030 18:30:18.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.513" endtime="20201030 18:30:18.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.513" endtime="20201030 18:30:18.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.549" endtime="20201030 18:30:18.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.511" endtime="20201030 18:30:18.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.551" endtime="20201030 18:30:18.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.510" endtime="20201030 18:30:18.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.969" endtime="20201030 18:30:18.554"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:18.560" endtime="20201030 18:30:18.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.558" endtime="20201030 18:30:18.580"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.593" endtime="20201030 18:30:18.606"></status>
</kw>
<msg timestamp="20201030 18:30:18.607" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:18.591" endtime="20201030 18:30:18.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.610" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:18.608" endtime="20201030 18:30:18.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.613" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:18.611" endtime="20201030 18:30:18.613"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:18.589" endtime="20201030 18:30:18.614"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:18.586" endtime="20201030 18:30:18.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.585" endtime="20201030 18:30:18.615"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:18.619" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:18.618" endtime="20201030 18:30:18.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.616" endtime="20201030 18:30:18.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.584" endtime="20201030 18:30:18.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.584" endtime="20201030 18:30:18.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.620" endtime="20201030 18:30:18.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.582" endtime="20201030 18:30:18.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.581" endtime="20201030 18:30:18.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.557" endtime="20201030 18:30:18.623"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.631" endtime="20201030 18:30:18.642"></status>
</kw>
<msg timestamp="20201030 18:30:18.643" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:18.630" endtime="20201030 18:30:18.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.645" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:18.644" endtime="20201030 18:30:18.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.647" endtime="20201030 18:30:18.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.627" endtime="20201030 18:30:18.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.626" endtime="20201030 18:30:18.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.655" endtime="20201030 18:30:18.926"></status>
</kw>
<msg timestamp="20201030 18:30:18.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062113194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062113736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:18.654" endtime="20201030 18:30:18.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062113194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062113736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:18.929" endtime="20201030 18:30:18.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.934" endtime="20201030 18:30:18.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.651" endtime="20201030 18:30:18.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.650" endtime="20201030 18:30:18.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:18.951" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:30:18.937" endtime="20201030 18:30:18.951"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.952" endtime="20201030 18:30:18.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.959" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:18.957" endtime="20201030 18:30:18.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.963" level="INFO">VALUE: {'sourcetime': [0.062113194, 0.062113736, 0.062115208, 0.062117069, 0.062118958, 0.062120778, 0.062122528, 0.062124403, 0.062126153, 0.062127819, 0.062129722, 0.062131403, 0.062133139, 0.062135014, 0.062136778, 0.062138625, 0.0621405, 0.062142333, 0.062144, 0.062145778, 0.062147653, 0.062149611, 0.062151264, 0.062152903, 0.062154653, 0.062156319, 0.062158042, 0.062159667, 0.062161569, 0.062163458, 0.062165389, 0.062167153, 0.062168861, 0.062170708, 0.062172361, 0.062174236, 0.062176014, 0.062177889, 0.062179694, 0.062181542, 0.062183278, 0.062185069, 0.062186944, 0.062188736, 0.062190444, 0.062192361, 0.062194181, 0.062195875, 0.062197722, 0.062199611, 0.062201542], 'eventsource_diff': [0, 5.420000000061487e-07, 1.4719999999954214e-06, 1.8609999999988358e-06, 1.8890000000049145e-06, 1.8199999999995997e-06, 1.7500000000017502e-06, 1.8749999999984057e-06, 1.7500000000017502e-06, 1.6659999999973918e-06, 1.9029999999975455e-06, 1.6810000000033742e-06, 1.7359999999952413e-06, 1.8750000000053446e-06, 1.7639999999943812e-06, 1.8470000000062048e-06, 1.8749999999984057e-06, 1.832999999999696e-06, 1.6669999999968654e-06, 1.77800000000089e-06, 1.8749999999984057e-06, 1.9580000000032904e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.7499999999948113e-06, 1.6660000000043307e-06, 1.722999999995145e-06, 1.6250000000050946e-06, 1.901999999998072e-06, 1.8889999999979756e-06, 1.9310000000036243e-06, 1.76400000000132e-06, 1.7079999999961015e-06, 1.846999999999266e-06, 1.6530000000042344e-06, 1.8749999999984057e-06, 1.77800000000089e-06, 1.8749999999984057e-06, 1.8050000000005562e-06, 1.8479999999987395e-06, 1.7360000000021802e-06, 1.7910000000009862e-06, 1.8749999999984057e-06, 1.7920000000004599e-06, 1.7079999999961015e-06, 1.9170000000040543e-06, 1.8199999999995997e-06, 1.6939999999965316e-06, 1.846999999999266e-06, 1.8890000000049145e-06, 1.9309999999966854e-06], 'diff': [0, 5.420000000061487e-07, 1.4719999999954214e-06, 1.8609999999988358e-06, 1.8890000000049145e-06, 1.8199999999995997e-06, 1.7500000000017502e-06, 1.8749999999984057e-06, 1.7500000000017502e-06, 1.6659999999973918e-06, 1.9029999999975455e-06, 1.6810000000033742e-06, 1.7359999999952413e-06, 1.8750000000053446e-06, 1.7639999999943812e-06, 1.8470000000062048e-06, 1.8749999999984057e-06, 1.832999999999696e-06, 1.6669999999968654e-06, 1.77800000000089e-06, 1.8749999999984057e-06, 1.9580000000032904e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.7499999999948113e-06, 1.6660000000043307e-06, 1.722999999995145e-06, 1.6250000000050946e-06, 1.901999999998072e-06, 1.8889999999979756e-06, 1.9310000000036243e-06, 1.76400000000132e-06, 1.7079999999961015e-06, 1.846999999999266e-06, 1.6530000000042344e-06, 1.8749999999984057e-06, 1.77800000000089e-06, 1.8749999999984057e-06, 1.8050000000005562e-06, 1.8479999999987395e-06, 1.7360000000021802e-06, 1.7910000000009862e-06, 1.8749999999984057e-06, 1.7920000000004599e-06, 1.7079999999961015e-06, 1.9170000000040543e-06, 1.8199999999995997e-06, 1.6939999999965316e-06, 1.846999999999266e-06, 1.8890000000049145e-06, 1.9309999999966854e-06]}</msg>
<status status="PASS" starttime="20201030 18:30:18.961" endtime="20201030 18:30:18.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.955" endtime="20201030 18:30:18.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:18.968" level="INFO">${RESULT} = [{'diff': 5.420000000061487e-07}, {'diff': 1.8609999999988358e-06}, {'diff': 1.8199999999995997e-06}, {'diff': 1.8749999999984057e-06}, {'diff': 1.6659999999973918e-06}, {'diff': 1.6810000000033742e-0...</msg>
<status status="PASS" starttime="20201030 18:30:18.965" endtime="20201030 18:30:18.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:18.972" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.420000000061487e-07, 1.8609999999988358e-06, 1.8199999999995997e-06, 1.8749999999984057e-06, 1.6659999999973918e-06, 1.6810000000033742e-06, 1.8750000000053446e-06, 1.8470000000062048e-06,...</msg>
<status status="PASS" starttime="20201030 18:30:18.970" endtime="20201030 18:30:18.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.978" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:18.977" endtime="20201030 18:30:18.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.981" level="INFO">VALUE: [5.420000000061487e-07, 1.8609999999988358e-06, 1.8199999999995997e-06, 1.8749999999984057e-06, 1.6659999999973918e-06, 1.6810000000033742e-06, 1.8750000000053446e-06, 1.8470000000062048e-06, 1.832999999999696e-06, 1.77800000000089e-06, 1.9580000000032904e-06, 1.6390000000046645e-06, 1.6660000000043307e-06, 1.6250000000050946e-06, 1.8889999999979756e-06, 1.76400000000132e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8479999999987395e-06, 1.7910000000009862e-06, 1.7920000000004599e-06, 1.9170000000040543e-06, 1.6939999999965316e-06, 1.8890000000049145e-06]</msg>
<status status="PASS" starttime="20201030 18:30:18.980" endtime="20201030 18:30:18.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.973" endtime="20201030 18:30:18.982"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:18.986" endtime="20201030 18:30:19.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.984" endtime="20201030 18:30:19.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.983" endtime="20201030 18:30:19.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.624" endtime="20201030 18:30:19.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.624" endtime="20201030 18:30:19.007"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.016" endtime="20201030 18:30:19.026"></status>
</kw>
<msg timestamp="20201030 18:30:19.027" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:19.014" endtime="20201030 18:30:19.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.029" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:19.028" endtime="20201030 18:30:19.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.030" endtime="20201030 18:30:19.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.011" endtime="20201030 18:30:19.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.010" endtime="20201030 18:30:19.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.039" endtime="20201030 18:30:19.309"></status>
</kw>
<msg timestamp="20201030 18:30:19.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019772458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019773, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:19.038" endtime="20201030 18:30:19.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019772458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019773, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:19.312" endtime="20201030 18:30:19.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.318" endtime="20201030 18:30:19.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.035" endtime="20201030 18:30:19.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.033" endtime="20201030 18:30:19.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:19.336" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:30:19.321" endtime="20201030 18:30:19.337"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.338" endtime="20201030 18:30:19.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.345" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:19.343" endtime="20201030 18:30:19.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.348" level="INFO">VALUE: {'sourcetime': [0.019772458, 0.019773, 0.019774444, 0.019776292, 0.019777944, 0.019779736, 0.0197815, 0.019783139, 0.019785042, 0.019786708, 0.019788542, 0.019790431, 0.019792194, 0.019793847, 0.019795639, 0.019797486, 0.019799278, 0.019801014, 0.019802819, 0.019804625, 0.019806389, 0.019808069, 0.019809861, 0.019811528, 0.019813375, 0.019815028, 0.019816944, 0.019818736, 0.019820375, 0.019822056, 0.019823972, 0.019825639, 0.019827458, 0.019829278, 0.019830944, 0.019832583, 0.019834375, 0.019836083, 0.019837833, 0.01983975, 0.019841625, 0.019843347, 0.019845222, 0.019846903, 0.019848625, 0.019850347, 0.019852111, 0.019853806, 0.019855694, 0.019857389, 0.019859264], 'eventsource_diff': [0, 5.419999999992098e-07, 1.443999999999751e-06, 1.848000000002209e-06, 1.6519999999978219e-06, 1.7920000000004599e-06, 1.76400000000132e-06, 1.639000000001195e-06, 1.9029999999975455e-06, 1.6660000000008612e-06, 1.8339999999991696e-06, 1.889000000001445e-06, 1.762999999998377e-06, 1.653000000000765e-06, 1.7920000000004599e-06, 1.846999999999266e-06, 1.7920000000004599e-06, 1.7359999999987108e-06, 1.8050000000005562e-06, 1.8060000000000298e-06, 1.76400000000132e-06, 1.6800000000004311e-06, 1.7920000000004599e-06, 1.6669999999968654e-06, 1.8470000000027353e-06, 1.6529999999972955e-06, 1.9160000000011113e-06, 1.7920000000004599e-06, 1.639000000001195e-06, 1.6809999999999048e-06, 1.915999999997642e-06, 1.6670000000003349e-06, 1.819000000000126e-06, 1.8199999999995997e-06, 1.6660000000008612e-06, 1.639000000001195e-06, 1.7920000000004599e-06, 1.707999999999571e-06, 1.7499999999982807e-06, 1.917000000000585e-06, 1.8750000000018752e-06, 1.7219999999991409e-06, 1.8749999999984057e-06, 1.6809999999999048e-06, 1.7220000000026103e-06, 1.7219999999991409e-06, 1.7639999999978506e-06, 1.6950000000029442e-06, 1.887999999998502e-06, 1.6949999999994747e-06, 1.8750000000018752e-06], 'diff': [0, 5.419999999992098e-07, 1.443999999999751e-06, 1.848000000002209e-06, 1.6519999999978219e-06, 1.7920000000004599e-06, 1.76400000000132e-06, 1.639000000001195e-06, 1.9029999999975455e-06, 1.6660000000008612e-06, 1.8339999999991696e-06, 1.889000000001445e-06, 1.762999999998377e-06, 1.653000000000765e-06, 1.7920000000004599e-06, 1.846999999999266e-06, 1.7920000000004599e-06, 1.7359999999987108e-06, 1.8050000000005562e-06, 1.8060000000000298e-06, 1.76400000000132e-06, 1.6800000000004311e-06, 1.7920000000004599e-06, 1.6669999999968654e-06, 1.8470000000027353e-06, 1.6529999999972955e-06, 1.9160000000011113e-06, 1.7920000000004599e-06, 1.639000000001195e-06, 1.6809999999999048e-06, 1.915999999997642e-06, 1.6670000000003349e-06, 1.819000000000126e-06, 1.8199999999995997e-06, 1.6660000000008612e-06, 1.639000000001195e-06, 1.7920000000004599e-06, 1.707999999999571e-06, 1.7499999999982807e-06, 1.917000000000585e-06, 1.8750000000018752e-06, 1.7219999999991409e-06, 1.8749999999984057e-06, 1.6809999999999048e-06, 1.7220000000026103e-06, 1.7219999999991409e-06, 1.7639999999978506e-06, 1.6950000000029442e-06, 1.887999999998502e-06, 1.6949999999994747e-06, 1.8750000000018752e-06]}</msg>
<status status="PASS" starttime="20201030 18:30:19.346" endtime="20201030 18:30:19.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.341" endtime="20201030 18:30:19.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:19.353" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 1.848000000002209e-06}, {'diff': 1.7920000000004599e-06}, {'diff': 1.639000000001195e-06}, {'diff': 1.6660000000008612e-06}, {'diff': 1.889000000001445e-06},...</msg>
<status status="PASS" starttime="20201030 18:30:19.350" endtime="20201030 18:30:19.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:19.357" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 1.848000000002209e-06, 1.7920000000004599e-06, 1.639000000001195e-06, 1.6660000000008612e-06, 1.889000000001445e-06, 1.653000000000765e-06, 1.846999999999266e-06, 1.73...</msg>
<status status="PASS" starttime="20201030 18:30:19.354" endtime="20201030 18:30:19.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.361" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:19.360" endtime="20201030 18:30:19.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.363" level="INFO">VALUE: [5.419999999992098e-07, 1.848000000002209e-06, 1.7920000000004599e-06, 1.639000000001195e-06, 1.6660000000008612e-06, 1.889000000001445e-06, 1.653000000000765e-06, 1.846999999999266e-06, 1.7359999999987108e-06, 1.8060000000000298e-06, 1.6800000000004311e-06, 1.6669999999968654e-06, 1.6529999999972955e-06, 1.7920000000004599e-06, 1.6809999999999048e-06, 1.6670000000003349e-06, 1.8199999999995997e-06, 1.639000000001195e-06, 1.707999999999571e-06, 1.917000000000585e-06, 1.7219999999991409e-06, 1.6809999999999048e-06, 1.7219999999991409e-06, 1.6950000000029442e-06, 1.6949999999994747e-06]</msg>
<status status="PASS" starttime="20201030 18:30:19.362" endtime="20201030 18:30:19.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.358" endtime="20201030 18:30:19.364"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:19.368" endtime="20201030 18:30:19.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.366" endtime="20201030 18:30:19.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.365" endtime="20201030 18:30:19.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.008" endtime="20201030 18:30:19.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.008" endtime="20201030 18:30:19.389"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.396" endtime="20201030 18:30:19.406"></status>
</kw>
<msg timestamp="20201030 18:30:19.407" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:19.395" endtime="20201030 18:30:19.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.409" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:19.408" endtime="20201030 18:30:19.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.410" endtime="20201030 18:30:19.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.392" endtime="20201030 18:30:19.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.391" endtime="20201030 18:30:19.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.419" endtime="20201030 18:30:19.684"></status>
</kw>
<msg timestamp="20201030 18:30:19.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018420375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018420917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:19.418" endtime="20201030 18:30:19.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018420375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018420917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:19.687" endtime="20201030 18:30:19.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.692" endtime="20201030 18:30:19.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.415" endtime="20201030 18:30:19.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.413" endtime="20201030 18:30:19.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:19.711" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:30:19.696" endtime="20201030 18:30:19.711"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.712" endtime="20201030 18:30:19.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.720" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:19.718" endtime="20201030 18:30:19.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.724" level="INFO">VALUE: {'sourcetime': [0.018420375, 0.018420917, 0.018422347, 0.018424236, 0.018426139, 0.018427833, 0.018429625, 0.018431431, 0.018433222, 0.018434903, 0.018436778, 0.018438528, 0.018440403, 0.018442264, 0.018444153, 0.018445917, 0.018447708, 0.018449458, 0.018451194, 0.018452889, 0.018454653, 0.018456403, 0.018458125, 0.018459764, 0.018461528, 0.018463347, 0.018465236, 0.018466889, 0.018468764, 0.018470625, 0.018472306, 0.018474139, 0.018476014, 0.018477681, 0.018479333, 0.018480986, 0.018482792, 0.018484458, 0.018486389, 0.018488153, 0.018490056, 0.018491792, 0.018493458, 0.018495333, 0.018497194, 0.018499111, 0.018500861, 0.018502667, 0.018504347, 0.01850625, 0.018508139], 'eventsource_diff': [0, 5.419999999992098e-07, 1.4300000000001811e-06, 1.889000000001445e-06, 1.903000000001015e-06, 1.694000000000001e-06, 1.7920000000004599e-06, 1.8060000000000298e-06, 1.7909999999975168e-06, 1.6809999999999048e-06, 1.8750000000018752e-06, 1.7499999999982807e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.889000000001445e-06, 1.7639999999978506e-06, 1.7910000000009862e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.6949999999994747e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7219999999991409e-06, 1.639000000001195e-06, 1.76400000000132e-06, 1.819000000000126e-06, 1.8889999999979756e-06, 1.653000000000765e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.6809999999999048e-06, 1.832999999999696e-06, 1.8749999999984057e-06, 1.6670000000003349e-06, 1.6520000000012913e-06, 1.653000000000765e-06, 1.8060000000000298e-06, 1.6659999999973918e-06, 1.931000000000155e-06, 1.76400000000132e-06, 1.903000000001015e-06, 1.7359999999987108e-06, 1.6660000000008612e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.9169999999971155e-06, 1.7500000000017502e-06, 1.8060000000000298e-06, 1.6800000000004311e-06, 1.9029999999975455e-06, 1.889000000001445e-06], 'diff': [0, 5.419999999992098e-07, 1.4300000000001811e-06, 1.889000000001445e-06, 1.903000000001015e-06, 1.694000000000001e-06, 1.7920000000004599e-06, 1.8060000000000298e-06, 1.7909999999975168e-06, 1.6809999999999048e-06, 1.8750000000018752e-06, 1.7499999999982807e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.889000000001445e-06, 1.7639999999978506e-06, 1.7910000000009862e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.6949999999994747e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7219999999991409e-06, 1.639000000001195e-06, 1.76400000000132e-06, 1.819000000000126e-06, 1.8889999999979756e-06, 1.653000000000765e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.6809999999999048e-06, 1.832999999999696e-06, 1.8749999999984057e-06, 1.6670000000003349e-06, 1.6520000000012913e-06, 1.653000000000765e-06, 1.8060000000000298e-06, 1.6659999999973918e-06, 1.931000000000155e-06, 1.76400000000132e-06, 1.903000000001015e-06, 1.7359999999987108e-06, 1.6660000000008612e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.9169999999971155e-06, 1.7500000000017502e-06, 1.8060000000000298e-06, 1.6800000000004311e-06, 1.9029999999975455e-06, 1.889000000001445e-06]}</msg>
<status status="PASS" starttime="20201030 18:30:19.721" endtime="20201030 18:30:19.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.716" endtime="20201030 18:30:19.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:19.731" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 1.889000000001445e-06}, {'diff': 1.694000000000001e-06}, {'diff': 1.8060000000000298e-06}, {'diff': 1.6809999999999048e-06}, {'diff': 1.7499999999982807e-06}...</msg>
<status status="PASS" starttime="20201030 18:30:19.727" endtime="20201030 18:30:19.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:19.735" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 1.889000000001445e-06, 1.694000000000001e-06, 1.8060000000000298e-06, 1.6809999999999048e-06, 1.7499999999982807e-06, 1.8609999999988358e-06, 1.7639999999978506e-06, 1...</msg>
<status status="PASS" starttime="20201030 18:30:19.732" endtime="20201030 18:30:19.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.741" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:19.740" endtime="20201030 18:30:19.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.745" level="INFO">VALUE: [5.419999999992098e-07, 1.889000000001445e-06, 1.694000000000001e-06, 1.8060000000000298e-06, 1.6809999999999048e-06, 1.7499999999982807e-06, 1.8609999999988358e-06, 1.7639999999978506e-06, 1.7499999999982807e-06, 1.6949999999994747e-06, 1.7499999999982807e-06, 1.639000000001195e-06, 1.819000000000126e-06, 1.653000000000765e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.6670000000003349e-06, 1.653000000000765e-06, 1.6659999999973918e-06, 1.76400000000132e-06, 1.7359999999987108e-06, 1.8749999999984057e-06, 1.9169999999971155e-06, 1.8060000000000298e-06, 1.9029999999975455e-06]</msg>
<status status="PASS" starttime="20201030 18:30:19.743" endtime="20201030 18:30:19.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.737" endtime="20201030 18:30:19.746"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:19.750" endtime="20201030 18:30:19.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.749" endtime="20201030 18:30:19.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.747" endtime="20201030 18:30:19.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.389" endtime="20201030 18:30:19.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.389" endtime="20201030 18:30:19.771"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.779" endtime="20201030 18:30:19.788"></status>
</kw>
<msg timestamp="20201030 18:30:19.789" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:19.777" endtime="20201030 18:30:19.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.791" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:19.790" endtime="20201030 18:30:19.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.792" endtime="20201030 18:30:19.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.775" endtime="20201030 18:30:19.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.773" endtime="20201030 18:30:19.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.802" endtime="20201030 18:30:20.068"></status>
</kw>
<msg timestamp="20201030 18:30:20.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018276639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018277181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:19.801" endtime="20201030 18:30:20.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018276639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018277181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:20.071" endtime="20201030 18:30:20.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.077" endtime="20201030 18:30:20.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.798" endtime="20201030 18:30:20.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.796" endtime="20201030 18:30:20.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:20.093" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:30:20.080" endtime="20201030 18:30:20.093"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.094" endtime="20201030 18:30:20.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.099" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:20.098" endtime="20201030 18:30:20.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.102" level="INFO">VALUE: {'sourcetime': [0.018276639, 0.018277181, 0.018278486, 0.01828025, 0.018282167, 0.018283958, 0.018285764, 0.018287639, 0.018289569, 0.018291472, 0.018293236, 0.018294903, 0.018296583, 0.0182985, 0.018300208, 0.018301903, 0.018303639, 0.018305361, 0.018307181, 0.018309069, 0.018310764, 0.0183125, 0.018314458, 0.018316125, 0.018317958, 0.018319764, 0.018321667, 0.018323333, 0.018324986, 0.018326861, 0.018328694, 0.0183305, 0.018332403, 0.018334125, 0.018335764, 0.0183375, 0.018339236, 0.018341069, 0.018342944, 0.018344861, 0.018346569, 0.018348333, 0.01835, 0.018351806, 0.018353542, 0.018355444, 0.018357333, 0.018358972, 0.018360764, 0.018362431, 0.018364097], 'eventsource_diff': [0, 5.419999999992098e-07, 1.3050000000000561e-06, 1.76400000000132e-06, 1.9169999999971155e-06, 1.7910000000009862e-06, 1.8060000000000298e-06, 1.8750000000018752e-06, 1.9299999999972117e-06, 1.903000000001015e-06, 1.76400000000132e-06, 1.6670000000003349e-06, 1.6800000000004311e-06, 1.9169999999971155e-06, 1.707999999999571e-06, 1.6950000000029442e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.8199999999995997e-06, 1.8880000000019714e-06, 1.6949999999994747e-06, 1.7359999999987108e-06, 1.957999999999821e-06, 1.6670000000003349e-06, 1.832999999999696e-06, 1.8060000000000298e-06, 1.903000000001015e-06, 1.6660000000008612e-06, 1.653000000000765e-06, 1.8749999999984057e-06, 1.832999999999696e-06, 1.8060000000000298e-06, 1.903000000001015e-06, 1.7219999999991409e-06, 1.639000000001195e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.8330000000031654e-06, 1.8749999999984057e-06, 1.917000000000585e-06, 1.707999999999571e-06, 1.76400000000132e-06, 1.6670000000003349e-06, 1.8059999999965604e-06, 1.7360000000021802e-06, 1.901999999998072e-06, 1.889000000001445e-06, 1.639000000001195e-06, 1.7920000000004599e-06, 1.6669999999968654e-06, 1.6660000000008612e-06], 'diff': [0, 5.419999999992098e-07, 1.3050000000000561e-06, 1.76400000000132e-06, 1.9169999999971155e-06, 1.7910000000009862e-06, 1.8060000000000298e-06, 1.8750000000018752e-06, 1.9299999999972117e-06, 1.903000000001015e-06, 1.76400000000132e-06, 1.6670000000003349e-06, 1.6800000000004311e-06, 1.9169999999971155e-06, 1.707999999999571e-06, 1.6950000000029442e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.8199999999995997e-06, 1.8880000000019714e-06, 1.6949999999994747e-06, 1.7359999999987108e-06, 1.957999999999821e-06, 1.6670000000003349e-06, 1.832999999999696e-06, 1.8060000000000298e-06, 1.903000000001015e-06, 1.6660000000008612e-06, 1.653000000000765e-06, 1.8749999999984057e-06, 1.832999999999696e-06, 1.8060000000000298e-06, 1.903000000001015e-06, 1.7219999999991409e-06, 1.639000000001195e-06, 1.7359999999987108e-06, 1.7359999999987108e-06, 1.8330000000031654e-06, 1.8749999999984057e-06, 1.917000000000585e-06, 1.707999999999571e-06, 1.76400000000132e-06, 1.6670000000003349e-06, 1.8059999999965604e-06, 1.7360000000021802e-06, 1.901999999998072e-06, 1.889000000001445e-06, 1.639000000001195e-06, 1.7920000000004599e-06, 1.6669999999968654e-06, 1.6660000000008612e-06]}</msg>
<status status="PASS" starttime="20201030 18:30:20.100" endtime="20201030 18:30:20.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.096" endtime="20201030 18:30:20.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:20.107" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 1.76400000000132e-06}, {'diff': 1.7910000000009862e-06}, {'diff': 1.8750000000018752e-06}, {'diff': 1.903000000001015e-06}, {'diff': 1.6670000000003349e-06},...</msg>
<status status="PASS" starttime="20201030 18:30:20.104" endtime="20201030 18:30:20.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:20.110" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 1.76400000000132e-06, 1.7910000000009862e-06, 1.8750000000018752e-06, 1.903000000001015e-06, 1.6670000000003349e-06, 1.9169999999971155e-06, 1.6950000000029442e-06, 1....</msg>
<status status="PASS" starttime="20201030 18:30:20.108" endtime="20201030 18:30:20.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.114" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:20.113" endtime="20201030 18:30:20.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.116" level="INFO">VALUE: [5.419999999992098e-07, 1.76400000000132e-06, 1.7910000000009862e-06, 1.8750000000018752e-06, 1.903000000001015e-06, 1.6670000000003349e-06, 1.9169999999971155e-06, 1.6950000000029442e-06, 1.7219999999991409e-06, 1.8880000000019714e-06, 1.7359999999987108e-06, 1.6670000000003349e-06, 1.8060000000000298e-06, 1.6660000000008612e-06, 1.8749999999984057e-06, 1.8060000000000298e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.8330000000031654e-06, 1.917000000000585e-06, 1.76400000000132e-06, 1.8059999999965604e-06, 1.901999999998072e-06, 1.639000000001195e-06, 1.6669999999968654e-06]</msg>
<status status="PASS" starttime="20201030 18:30:20.115" endtime="20201030 18:30:20.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.111" endtime="20201030 18:30:20.117"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:20.121" endtime="20201030 18:30:20.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.119" endtime="20201030 18:30:20.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.118" endtime="20201030 18:30:20.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.772" endtime="20201030 18:30:20.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.771" endtime="20201030 18:30:20.142"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.150" endtime="20201030 18:30:20.160"></status>
</kw>
<msg timestamp="20201030 18:30:20.160" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:20.148" endtime="20201030 18:30:20.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.163" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:20.161" endtime="20201030 18:30:20.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.164" endtime="20201030 18:30:20.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.146" endtime="20201030 18:30:20.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.144" endtime="20201030 18:30:20.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.173" endtime="20201030 18:30:20.437"></status>
</kw>
<msg timestamp="20201030 18:30:20.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018335097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018337097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:20.171" endtime="20201030 18:30:20.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018335097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018337097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:20.440" endtime="20201030 18:30:20.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.446" endtime="20201030 18:30:20.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.169" endtime="20201030 18:30:20.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.167" endtime="20201030 18:30:20.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:20.462" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:30:20.449" endtime="20201030 18:30:20.462"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.463" endtime="20201030 18:30:20.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.468" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:20.467" endtime="20201030 18:30:20.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.471" level="INFO">VALUE: {'sourcetime': [0.018335097, 0.018337097, 0.018338958, 0.018340681, 0.018342597, 0.018344472, 0.018346167, 0.018347917, 0.018349542, 0.018351347, 0.018353028, 0.018354819, 0.018356556, 0.018358347, 0.018360181, 0.018362028, 0.018363847, 0.018365528, 0.018367181, 0.018369014, 0.018370764, 0.018372486, 0.01837425, 0.018376097, 0.018377889, 0.018379569, 0.018381361, 0.018383292, 0.018385208, 0.018387014, 0.018388792, 0.018390597, 0.018392236, 0.018394014, 0.018395736, 0.018397556, 0.018399472, 0.018401278, 0.018402986, 0.018404667, 0.018406389, 0.018408167, 0.018410014, 0.018411875, 0.018413708, 0.018415528, 0.018417264, 0.018418931, 0.018420597, 0.01842225], 'eventsource_diff': [0, 1.9999999999985307e-06, 1.8609999999988358e-06, 1.723000000002084e-06, 1.915999999997642e-06, 1.8750000000018752e-06, 1.6949999999994747e-06, 1.7499999999982807e-06, 1.6250000000016251e-06, 1.8050000000005562e-06, 1.6809999999999048e-06, 1.7910000000009862e-06, 1.7369999999981844e-06, 1.7910000000009862e-06, 1.8339999999991696e-06, 1.846999999999266e-06, 1.819000000000126e-06, 1.6809999999999048e-06, 1.653000000000765e-06, 1.832999999999696e-06, 1.7500000000017502e-06, 1.7219999999991409e-06, 1.76400000000132e-06, 1.846999999999266e-06, 1.7920000000004599e-06, 1.6799999999969617e-06, 1.7920000000004599e-06, 1.931000000000155e-06, 1.9160000000011113e-06, 1.8060000000000298e-06, 1.77800000000089e-06, 1.8050000000005562e-06, 1.6389999999977256e-06, 1.77800000000089e-06, 1.7219999999991409e-06, 1.8199999999995997e-06, 1.9160000000011113e-06, 1.8060000000000298e-06, 1.707999999999571e-06, 1.6809999999999048e-06, 1.7219999999991409e-06, 1.77800000000089e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.8199999999995997e-06, 1.7359999999987108e-06, 1.6670000000003349e-06, 1.6660000000008612e-06, 1.653000000000765e-06], 'diff': [0, 1.9999999999985307e-06, 1.8609999999988358e-06, 1.723000000002084e-06, 1.915999999997642e-06, 1.8750000000018752e-06, 1.6949999999994747e-06, 1.7499999999982807e-06, 1.6250000000016251e-06, 1.8050000000005562e-06, 1.6809999999999048e-06, 1.7910000000009862e-06, 1.7369999999981844e-06, 1.7910000000009862e-06, 1.8339999999991696e-06, 1.846999999999266e-06, 1.819000000000126e-06, 1.6809999999999048e-06, 1.653000000000765e-06, 1.832999999999696e-06, 1.7500000000017502e-06, 1.7219999999991409e-06, 1.76400000000132e-06, 1.846999999999266e-06, 1.7920000000004599e-06, 1.6799999999969617e-06, 1.7920000000004599e-06, 1.931000000000155e-06, 1.9160000000011113e-06, 1.8060000000000298e-06, 1.77800000000089e-06, 1.8050000000005562e-06, 1.6389999999977256e-06, 1.77800000000089e-06, 1.7219999999991409e-06, 1.8199999999995997e-06, 1.9160000000011113e-06, 1.8060000000000298e-06, 1.707999999999571e-06, 1.6809999999999048e-06, 1.7219999999991409e-06, 1.77800000000089e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.8199999999995997e-06, 1.7359999999987108e-06, 1.6670000000003349e-06, 1.6660000000008612e-06, 1.653000000000765e-06]}</msg>
<status status="PASS" starttime="20201030 18:30:20.469" endtime="20201030 18:30:20.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.465" endtime="20201030 18:30:20.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:20.476" level="INFO">${RESULT} = [{'diff': 1.9999999999985307e-06}, {'diff': 1.723000000002084e-06}, {'diff': 1.8750000000018752e-06}, {'diff': 1.7499999999982807e-06}, {'diff': 1.8050000000005562e-06}, {'diff': 1.7910000000009862e-0...</msg>
<status status="PASS" starttime="20201030 18:30:20.473" endtime="20201030 18:30:20.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:20.479" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.9999999999985307e-06, 1.723000000002084e-06, 1.8750000000018752e-06, 1.7499999999982807e-06, 1.8050000000005562e-06, 1.7910000000009862e-06, 1.7910000000009862e-06, 1.846999999999266e-06, ...</msg>
<status status="PASS" starttime="20201030 18:30:20.477" endtime="20201030 18:30:20.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.484" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:20.483" endtime="20201030 18:30:20.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.486" level="INFO">VALUE: [1.9999999999985307e-06, 1.723000000002084e-06, 1.8750000000018752e-06, 1.7499999999982807e-06, 1.8050000000005562e-06, 1.7910000000009862e-06, 1.7910000000009862e-06, 1.846999999999266e-06, 1.6809999999999048e-06, 1.832999999999696e-06, 1.7219999999991409e-06, 1.846999999999266e-06, 1.6799999999969617e-06, 1.931000000000155e-06, 1.8060000000000298e-06, 1.8050000000005562e-06, 1.77800000000089e-06, 1.8199999999995997e-06, 1.8060000000000298e-06, 1.6809999999999048e-06, 1.77800000000089e-06, 1.8610000000023053e-06, 1.8199999999995997e-06, 1.6670000000003349e-06, 1.653000000000765e-06]</msg>
<status status="PASS" starttime="20201030 18:30:20.485" endtime="20201030 18:30:20.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.480" endtime="20201030 18:30:20.487"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:20.491" endtime="20201030 18:30:20.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.489" endtime="20201030 18:30:20.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.488" endtime="20201030 18:30:20.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.143" endtime="20201030 18:30:20.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.142" endtime="20201030 18:30:20.511"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.519" endtime="20201030 18:30:20.530"></status>
</kw>
<msg timestamp="20201030 18:30:20.530" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:20.518" endtime="20201030 18:30:20.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.533" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:20.531" endtime="20201030 18:30:20.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.534" endtime="20201030 18:30:20.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.515" endtime="20201030 18:30:20.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.513" endtime="20201030 18:30:20.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.543" endtime="20201030 18:30:20.808"></status>
</kw>
<msg timestamp="20201030 18:30:20.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018352167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018354069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:20.541" endtime="20201030 18:30:20.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018352167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018354069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:20.811" endtime="20201030 18:30:20.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.816" endtime="20201030 18:30:20.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.539" endtime="20201030 18:30:20.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.537" endtime="20201030 18:30:20.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:20.833" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:30:20.819" endtime="20201030 18:30:20.833"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.834" endtime="20201030 18:30:20.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.839" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:20.838" endtime="20201030 18:30:20.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.842" level="INFO">VALUE: {'sourcetime': [0.018352167, 0.018354069, 0.018355875, 0.018357556, 0.018359264, 0.018360986, 0.018362694, 0.018364347, 0.018366125, 0.018367986, 0.01836975, 0.018371375, 0.018373278, 0.018375014, 0.018376764, 0.018378444, 0.018380319, 0.018382125, 0.018383972, 0.018385764, 0.018387583, 0.018389403, 0.018391278, 0.018393167, 0.018395083, 0.018396958, 0.018398667, 0.018400569, 0.018402361, 0.018404014, 0.018405819, 0.018407681, 0.018409458, 0.018411361, 0.018413125, 0.018414889, 0.018416778, 0.018418653, 0.018420306, 0.018422097, 0.018423958, 0.018425611, 0.018427431, 0.018429347, 0.018431014, 0.018432708, 0.018434361, 0.018436056, 0.018437736, 0.018439514], 'eventsource_diff': [0, 1.9020000000015413e-06, 1.8060000000000298e-06, 1.6809999999999048e-06, 1.707999999999571e-06, 1.7219999999991409e-06, 1.707999999999571e-06, 1.653000000000765e-06, 1.77800000000089e-06, 1.8609999999988358e-06, 1.76400000000132e-06, 1.6249999999981557e-06, 1.903000000001015e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.6800000000004311e-06, 1.8749999999984057e-06, 1.8060000000000298e-06, 1.846999999999266e-06, 1.7920000000004599e-06, 1.819000000000126e-06, 1.8199999999995997e-06, 1.8750000000018752e-06, 1.8889999999979756e-06, 1.9160000000011113e-06, 1.8750000000018752e-06, 1.7089999999990446e-06, 1.901999999998072e-06, 1.7920000000004599e-06, 1.653000000000765e-06, 1.8050000000005562e-06, 1.8619999999983095e-06, 1.7770000000014163e-06, 1.903000000001015e-06, 1.7639999999978506e-06, 1.76400000000132e-06, 1.889000000001445e-06, 1.8749999999984057e-06, 1.653000000000765e-06, 1.7909999999975168e-06, 1.8610000000023053e-06, 1.653000000000765e-06, 1.8199999999995997e-06, 1.915999999997642e-06, 1.6670000000003349e-06, 1.694000000000001e-06, 1.653000000000765e-06, 1.6949999999994747e-06, 1.6800000000004311e-06, 1.77800000000089e-06], 'diff': [0, 1.9020000000015413e-06, 1.8060000000000298e-06, 1.6809999999999048e-06, 1.707999999999571e-06, 1.7219999999991409e-06, 1.707999999999571e-06, 1.653000000000765e-06, 1.77800000000089e-06, 1.8609999999988358e-06, 1.76400000000132e-06, 1.6249999999981557e-06, 1.903000000001015e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.6800000000004311e-06, 1.8749999999984057e-06, 1.8060000000000298e-06, 1.846999999999266e-06, 1.7920000000004599e-06, 1.819000000000126e-06, 1.8199999999995997e-06, 1.8750000000018752e-06, 1.8889999999979756e-06, 1.9160000000011113e-06, 1.8750000000018752e-06, 1.7089999999990446e-06, 1.901999999998072e-06, 1.7920000000004599e-06, 1.653000000000765e-06, 1.8050000000005562e-06, 1.8619999999983095e-06, 1.7770000000014163e-06, 1.903000000001015e-06, 1.7639999999978506e-06, 1.76400000000132e-06, 1.889000000001445e-06, 1.8749999999984057e-06, 1.653000000000765e-06, 1.7909999999975168e-06, 1.8610000000023053e-06, 1.653000000000765e-06, 1.8199999999995997e-06, 1.915999999997642e-06, 1.6670000000003349e-06, 1.694000000000001e-06, 1.653000000000765e-06, 1.6949999999994747e-06, 1.6800000000004311e-06, 1.77800000000089e-06]}</msg>
<status status="PASS" starttime="20201030 18:30:20.840" endtime="20201030 18:30:20.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.837" endtime="20201030 18:30:20.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:20.848" level="INFO">${RESULT} = [{'diff': 1.9020000000015413e-06}, {'diff': 1.6809999999999048e-06}, {'diff': 1.7219999999991409e-06}, {'diff': 1.653000000000765e-06}, {'diff': 1.8609999999988358e-06}, {'diff': 1.6249999999981557e-0...</msg>
<status status="PASS" starttime="20201030 18:30:20.845" endtime="20201030 18:30:20.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:20.851" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.9020000000015413e-06, 1.6809999999999048e-06, 1.7219999999991409e-06, 1.653000000000765e-06, 1.8609999999988358e-06, 1.6249999999981557e-06, 1.7359999999987108e-06, 1.6800000000004311e-06,...</msg>
<status status="PASS" starttime="20201030 18:30:20.849" endtime="20201030 18:30:20.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.855" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:20.854" endtime="20201030 18:30:20.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.857" level="INFO">VALUE: [1.9020000000015413e-06, 1.6809999999999048e-06, 1.7219999999991409e-06, 1.653000000000765e-06, 1.8609999999988358e-06, 1.6249999999981557e-06, 1.7359999999987108e-06, 1.6800000000004311e-06, 1.8060000000000298e-06, 1.7920000000004599e-06, 1.8199999999995997e-06, 1.8889999999979756e-06, 1.8750000000018752e-06, 1.901999999998072e-06, 1.653000000000765e-06, 1.8619999999983095e-06, 1.903000000001015e-06, 1.76400000000132e-06, 1.8749999999984057e-06, 1.7909999999975168e-06, 1.653000000000765e-06, 1.915999999997642e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.77800000000089e-06]</msg>
<status status="PASS" starttime="20201030 18:30:20.856" endtime="20201030 18:30:20.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.852" endtime="20201030 18:30:20.858"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:20.862" endtime="20201030 18:30:20.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.860" endtime="20201030 18:30:20.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.859" endtime="20201030 18:30:20.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.512" endtime="20201030 18:30:20.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.512" endtime="20201030 18:30:20.882"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.890" endtime="20201030 18:30:20.901"></status>
</kw>
<msg timestamp="20201030 18:30:20.901" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:20.889" endtime="20201030 18:30:20.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.903" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:20.902" endtime="20201030 18:30:20.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.905" endtime="20201030 18:30:20.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.886" endtime="20201030 18:30:20.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.885" endtime="20201030 18:30:20.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.915" endtime="20201030 18:30:21.180"></status>
</kw>
<msg timestamp="20201030 18:30:21.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018494875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018495417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:20.912" endtime="20201030 18:30:21.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018494875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018495417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:21.183" endtime="20201030 18:30:21.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.189" endtime="20201030 18:30:21.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.909" endtime="20201030 18:30:21.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.908" endtime="20201030 18:30:21.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:21.205" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:30:21.193" endtime="20201030 18:30:21.205"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.206" endtime="20201030 18:30:21.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.211" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:21.210" endtime="20201030 18:30:21.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.214" level="INFO">VALUE: {'sourcetime': [0.018494875, 0.018495417, 0.018497028, 0.018498917, 0.01850075, 0.018502458, 0.018504111, 0.018505903, 0.018507556, 0.018509292, 0.018510958, 0.018512764, 0.018514417, 0.018516194, 0.018518028, 0.018519944, 0.018521625, 0.018523306, 0.018525153, 0.018526861, 0.018528653, 0.018530556, 0.018532417, 0.018534111, 0.018535931, 0.018537611, 0.018539319, 0.018541194, 0.018543125, 0.018544778, 0.0185465, 0.018548417, 0.018550042, 0.018551833, 0.0185535, 0.018555111, 0.018556778, 0.018558625, 0.018560486, 0.018562361, 0.018564125, 0.018566042, 0.018567806, 0.018569722, 0.018571347, 0.018573028, 0.018574681, 0.018576319, 0.018578236, 0.018579847, 0.018581639], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING'], 'source_diff': [0, 5.419999999992098e-07, 1.6109999999985858e-06, 1.889000000001445e-06, 1.832999999999696e-06, 1.707999999999571e-06, 1.653000000000765e-06, 1.7920000000004599e-06, 1.653000000000765e-06, 1.7359999999987108e-06, 1.6660000000008612e-06, 1.8060000000000298e-06, 1.6529999999972955e-06, 1.7770000000014163e-06, 1.8339999999991696e-06, 1.9160000000011113e-06, 1.6809999999999048e-06, 1.6809999999999048e-06, 1.846999999999266e-06, 1.707999999999571e-06, 1.7920000000004599e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.694000000000001e-06, 1.8199999999995997e-06, 1.6800000000004311e-06, 1.707999999999571e-06, 1.8750000000018752e-06, 1.931000000000155e-06, 1.653000000000765e-06, 1.7219999999991409e-06, 1.917000000000585e-06, 1.6249999999981557e-06, 1.7910000000009862e-06, 1.6670000000003349e-06, 1.6109999999985858e-06, 1.6670000000003349e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.76400000000132e-06, 1.917000000000585e-06, 1.7639999999978506e-06, 1.9160000000011113e-06, 1.6249999999981557e-06, 1.6809999999999048e-06, 1.653000000000765e-06, 1.6380000000017214e-06, 1.917000000000585e-06, 1.6109999999985858e-06, 1.7920000000004599e-06], 'diff': [0, 5.419999999992098e-07, 1.6109999999985858e-06, 1.889000000001445e-06, 1.832999999999696e-06, 1.707999999999571e-06, 1.653000000000765e-06, 1.7920000000004599e-06, 1.653000000000765e-06, 1.7359999999987108e-06, 1.6660000000008612e-06, 1.8060000000000298e-06, 1.6529999999972955e-06, 1.7770000000014163e-06, 1.8339999999991696e-06, 1.9160000000011113e-06, 1.6809999999999048e-06, 1.6809999999999048e-06, 1.846999999999266e-06, 1.707999999999571e-06, 1.7920000000004599e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.694000000000001e-06, 1.8199999999995997e-06, 1.6800000000004311e-06, 1.707999999999571e-06, 1.8750000000018752e-06, 1.931000000000155e-06, 1.653000000000765e-06, 1.7219999999991409e-06, 1.917000000000585e-06, 1.6249999999981557e-06, 1.7910000000009862e-06, 1.6670000000003349e-06, 1.6109999999985858e-06, 1.6670000000003349e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.76400000000132e-06, 1.917000000000585e-06, 1.7639999999978506e-06, 1.9160000000011113e-06, 1.6249999999981557e-06, 1.6809999999999048e-06, 1.653000000000765e-06, 1.6380000000017214e-06, 1.917000000000585e-06, 1.6109999999985858e-06, 1.7920000000004599e-06]}</msg>
<status status="PASS" starttime="20201030 18:30:21.212" endtime="20201030 18:30:21.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.208" endtime="20201030 18:30:21.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:21.219" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 1.889000000001445e-06}, {'diff': 1.707999999999571e-06}, {'diff': 1.7920000000004599e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.8060000000000298e-06}...</msg>
<status status="PASS" starttime="20201030 18:30:21.216" endtime="20201030 18:30:21.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:21.222" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 1.889000000001445e-06, 1.707999999999571e-06, 1.7920000000004599e-06, 1.7359999999987108e-06, 1.8060000000000298e-06, 1.7770000000014163e-06, 1.9160000000011113e-06, 1...</msg>
<status status="PASS" starttime="20201030 18:30:21.220" endtime="20201030 18:30:21.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.226" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:21.225" endtime="20201030 18:30:21.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.228" level="INFO">VALUE: [5.419999999992098e-07, 1.889000000001445e-06, 1.707999999999571e-06, 1.7920000000004599e-06, 1.7359999999987108e-06, 1.8060000000000298e-06, 1.7770000000014163e-06, 1.9160000000011113e-06, 1.6809999999999048e-06, 1.707999999999571e-06, 1.903000000001015e-06, 1.694000000000001e-06, 1.6800000000004311e-06, 1.8750000000018752e-06, 1.653000000000765e-06, 1.917000000000585e-06, 1.7910000000009862e-06, 1.6109999999985858e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.917000000000585e-06, 1.9160000000011113e-06, 1.6809999999999048e-06, 1.6380000000017214e-06, 1.6109999999985858e-06]</msg>
<status status="PASS" starttime="20201030 18:30:21.227" endtime="20201030 18:30:21.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.223" endtime="20201030 18:30:21.229"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:21.233" endtime="20201030 18:30:21.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.232" endtime="20201030 18:30:21.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.230" endtime="20201030 18:30:21.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.883" endtime="20201030 18:30:21.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.883" endtime="20201030 18:30:21.254"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.262" endtime="20201030 18:30:21.272"></status>
</kw>
<msg timestamp="20201030 18:30:21.273" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:21.261" endtime="20201030 18:30:21.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.275" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:21.274" endtime="20201030 18:30:21.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.276" endtime="20201030 18:30:21.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.258" endtime="20201030 18:30:21.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.256" endtime="20201030 18:30:21.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.285" endtime="20201030 18:30:21.551"></status>
</kw>
<msg timestamp="20201030 18:30:21.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019192014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019194069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:21.284" endtime="20201030 18:30:21.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019192014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019194069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:21.554" endtime="20201030 18:30:21.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.559" endtime="20201030 18:30:21.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.281" endtime="20201030 18:30:21.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.279" endtime="20201030 18:30:21.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:21.575" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:30:21.563" endtime="20201030 18:30:21.576"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.576" endtime="20201030 18:30:21.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.581" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:21.580" endtime="20201030 18:30:21.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.585" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'time': [0.019192014, 0.019194069, 0.019196, 0.019197903, 0.01919975, 0.019201611, 0.019203264, 0.019204972, 0.019206875, 0.019208611, 0.019210569, 0.019212292, 0.019214111, 0.019216028, 0.019217764, 0.019219458, 0.019221167, 0.019222972, 0.019224681, 0.019226486, 0.019228375, 0.01923025, 0.019231917, 0.019233792, 0.019235639, 0.019237389, 0.019239194, 0.019240986, 0.019242653, 0.019244542, 0.019246417, 0.019248097, 0.019249889, 0.019251625, 0.019253333, 0.019255042, 0.019256958, 0.019258597, 0.019260375, 0.019262333, 0.019264069, 0.01926575, 0.0192675, 0.019269264, 0.019270903, 0.019272819, 0.019274667, 0.019276403, 0.019278056, 0.019279958], 'eventsource_diff': [0, 2.055000000000806e-06, 1.931000000000155e-06, 1.9029999999975455e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.653000000000765e-06, 1.707999999999571e-06, 1.903000000001015e-06, 1.7359999999987108e-06, 1.957999999999821e-06, 1.7229999999986145e-06, 1.819000000000126e-06, 1.917000000000585e-06, 1.7359999999987108e-06, 1.694000000000001e-06, 1.709000000002514e-06, 1.8050000000005562e-06, 1.7089999999990446e-06, 1.8050000000005562e-06, 1.8889999999979756e-06, 1.8750000000018752e-06, 1.6670000000003349e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.7500000000017502e-06, 1.8050000000005562e-06, 1.7920000000004599e-06, 1.6669999999968654e-06, 1.889000000001445e-06, 1.8749999999984057e-06, 1.6800000000004311e-06, 1.7920000000004599e-06, 1.7360000000021802e-06, 1.707999999999571e-06, 1.7089999999990446e-06, 1.9160000000011113e-06, 1.6389999999977256e-06, 1.77800000000089e-06, 1.957999999999821e-06, 1.7360000000021802e-06, 1.6809999999999048e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.6389999999977256e-06, 1.9160000000011113e-06, 1.8479999999987395e-06, 1.7360000000021802e-06, 1.6529999999972955e-06, 1.9020000000015413e-06], 'diff': [0, 2.055000000000806e-06, 1.931000000000155e-06, 1.9029999999975455e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.653000000000765e-06, 1.707999999999571e-06, 1.903000000001015e-06, 1.7359999999987108e-06, 1.957999999999821e-06, 1.7229999999986145e-06, 1.819000000000126e-06, 1.917000000000585e-06, 1.7359999999987108e-06, 1.694000000000001e-06, 1.709000000002514e-06, 1.8050000000005562e-06, 1.7089999999990446e-06, 1.8050000000005562e-06, 1.8889999999979756e-06, 1.8750000000018752e-06, 1.6670000000003349e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.7500000000017502e-06, 1.8050000000005562e-06, 1.7920000000004599e-06, 1.6669999999968654e-06, 1.889000000001445e-06, 1.8749999999984057e-06, 1.6800000000004311e-06, 1.7920000000004599e-06, 1.7360000000021802e-06, 1.707999999999571e-06, 1.7089999999990446e-06, 1.9160000000011113e-06, 1.6389999999977256e-06, 1.77800000000089e-06, 1.957999999999821e-06, 1.7360000000021802e-06, 1.6809999999999048e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.6389999999977256e-06, 1.9160000000011113e-06, 1.8479999999987395e-06, 1.7360000000021802e-06, 1.6529999999972955e-06, 1.9020000000015413e-06]}</msg>
<status status="PASS" starttime="20201030 18:30:21.582" endtime="20201030 18:30:21.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.579" endtime="20201030 18:30:21.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:21.589" level="INFO">${RESULT} = [{'diff': 2.055000000000806e-06}, {'diff': 1.9029999999975455e-06}, {'diff': 1.8609999999988358e-06}, {'diff': 1.707999999999571e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.7229999999986145e-06...</msg>
<status status="PASS" starttime="20201030 18:30:21.587" endtime="20201030 18:30:21.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:21.593" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.055000000000806e-06, 1.9029999999975455e-06, 1.8609999999988358e-06, 1.707999999999571e-06, 1.7359999999987108e-06, 1.7229999999986145e-06, 1.917000000000585e-06, 1.694000000000001e-06, 1....</msg>
<status status="PASS" starttime="20201030 18:30:21.590" endtime="20201030 18:30:21.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.597" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:21.596" endtime="20201030 18:30:21.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.600" level="INFO">VALUE: [2.055000000000806e-06, 1.9029999999975455e-06, 1.8609999999988358e-06, 1.707999999999571e-06, 1.7359999999987108e-06, 1.7229999999986145e-06, 1.917000000000585e-06, 1.694000000000001e-06, 1.8050000000005562e-06, 1.8050000000005562e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.7500000000017502e-06, 1.7920000000004599e-06, 1.889000000001445e-06, 1.6800000000004311e-06, 1.7360000000021802e-06, 1.7089999999990446e-06, 1.6389999999977256e-06, 1.957999999999821e-06, 1.6809999999999048e-06, 1.76400000000132e-06, 1.9160000000011113e-06, 1.7360000000021802e-06, 1.9020000000015413e-06]</msg>
<status status="PASS" starttime="20201030 18:30:21.598" endtime="20201030 18:30:21.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.594" endtime="20201030 18:30:21.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:21.604" endtime="20201030 18:30:21.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.603" endtime="20201030 18:30:21.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.602" endtime="20201030 18:30:21.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.255" endtime="20201030 18:30:21.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.254" endtime="20201030 18:30:21.625"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.633" endtime="20201030 18:30:21.643"></status>
</kw>
<msg timestamp="20201030 18:30:21.643" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:21.631" endtime="20201030 18:30:21.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.646" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:21.644" endtime="20201030 18:30:21.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.647" endtime="20201030 18:30:21.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.629" endtime="20201030 18:30:21.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.627" endtime="20201030 18:30:21.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.656" endtime="20201030 18:30:21.919"></status>
</kw>
<msg timestamp="20201030 18:30:21.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018222917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018223458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:21.654" endtime="20201030 18:30:21.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018222917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018223458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:21.921" endtime="20201030 18:30:21.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.927" endtime="20201030 18:30:21.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.652" endtime="20201030 18:30:21.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.650" endtime="20201030 18:30:21.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:21.944" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:30:21.931" endtime="20201030 18:30:21.944"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.945" endtime="20201030 18:30:21.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.950" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:21.949" endtime="20201030 18:30:21.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.953" level="INFO">VALUE: {'sourcetime': [0.018222917, 0.018223458, 0.018224792, 0.018226694, 0.018228486, 0.018230236, 0.018231917, 0.018233819, 0.018235639, 0.018237514, 0.018239347, 0.018241056, 0.018242861, 0.018244431, 0.018246194, 0.018247972, 0.01824975, 0.018251542, 0.018253306, 0.018254944, 0.018256667, 0.018258417, 0.018260125, 0.018261833, 0.018263556, 0.018265417, 0.018267264, 0.018269069, 0.018270694, 0.0182725, 0.018274181, 0.018276097, 0.018277875, 0.018279806, 0.018281639, 0.018283528, 0.01828525, 0.018286944, 0.018288625, 0.018290292, 0.018291986, 0.018293736, 0.018295653, 0.0182975, 0.018299361, 0.018301069, 0.018302972, 0.018304792, 0.0183065, 0.018308153, 0.018309958], 'eventsource_diff': [0, 5.409999999997361e-07, 1.3339999999986696e-06, 1.9020000000015413e-06, 1.7919999999969904e-06, 1.7500000000017502e-06, 1.6809999999999048e-06, 1.901999999998072e-06, 1.8200000000030692e-06, 1.8749999999984057e-06, 1.832999999999696e-06, 1.7089999999990446e-06, 1.8050000000005562e-06, 1.5699999999993497e-06, 1.7630000000018464e-06, 1.77800000000089e-06, 1.7779999999974205e-06, 1.7920000000004599e-06, 1.76400000000132e-06, 1.637999999998252e-06, 1.723000000002084e-06, 1.7499999999982807e-06, 1.707999999999571e-06, 1.7080000000030404e-06, 1.7229999999986145e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8050000000005562e-06, 1.6250000000016251e-06, 1.8060000000000298e-06, 1.6809999999999048e-06, 1.9160000000011113e-06, 1.7779999999974205e-06, 1.931000000000155e-06, 1.832999999999696e-06, 1.889000000001445e-06, 1.7219999999991409e-06, 1.694000000000001e-06, 1.6809999999999048e-06, 1.6670000000003349e-06, 1.694000000000001e-06, 1.7500000000017502e-06, 1.9169999999971155e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.707999999999571e-06, 1.903000000001015e-06, 1.8199999999995997e-06, 1.707999999999571e-06, 1.653000000000765e-06, 1.8050000000005562e-06], 'diff': [0, 5.409999999997361e-07, 1.3339999999986696e-06, 1.9020000000015413e-06, 1.7919999999969904e-06, 1.7500000000017502e-06, 1.6809999999999048e-06, 1.901999999998072e-06, 1.8200000000030692e-06, 1.8749999999984057e-06, 1.832999999999696e-06, 1.7089999999990446e-06, 1.8050000000005562e-06, 1.5699999999993497e-06, 1.7630000000018464e-06, 1.77800000000089e-06, 1.7779999999974205e-06, 1.7920000000004599e-06, 1.76400000000132e-06, 1.637999999998252e-06, 1.723000000002084e-06, 1.7499999999982807e-06, 1.707999999999571e-06, 1.7080000000030404e-06, 1.7229999999986145e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8050000000005562e-06, 1.6250000000016251e-06, 1.8060000000000298e-06, 1.6809999999999048e-06, 1.9160000000011113e-06, 1.7779999999974205e-06, 1.931000000000155e-06, 1.832999999999696e-06, 1.889000000001445e-06, 1.7219999999991409e-06, 1.694000000000001e-06, 1.6809999999999048e-06, 1.6670000000003349e-06, 1.694000000000001e-06, 1.7500000000017502e-06, 1.9169999999971155e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.707999999999571e-06, 1.903000000001015e-06, 1.8199999999995997e-06, 1.707999999999571e-06, 1.653000000000765e-06, 1.8050000000005562e-06]}</msg>
<status status="PASS" starttime="20201030 18:30:21.951" endtime="20201030 18:30:21.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.947" endtime="20201030 18:30:21.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:21.957" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 1.9020000000015413e-06}, {'diff': 1.7500000000017502e-06}, {'diff': 1.901999999998072e-06}, {'diff': 1.8749999999984057e-06}, {'diff': 1.7089999999990446e-06...</msg>
<status status="PASS" starttime="20201030 18:30:21.955" endtime="20201030 18:30:21.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:21.961" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 1.9020000000015413e-06, 1.7500000000017502e-06, 1.901999999998072e-06, 1.8749999999984057e-06, 1.7089999999990446e-06, 1.5699999999993497e-06, 1.77800000000089e-06, 1....</msg>
<status status="PASS" starttime="20201030 18:30:21.958" endtime="20201030 18:30:21.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.965" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:21.964" endtime="20201030 18:30:21.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.968" level="INFO">VALUE: [5.409999999997361e-07, 1.9020000000015413e-06, 1.7500000000017502e-06, 1.901999999998072e-06, 1.8749999999984057e-06, 1.7089999999990446e-06, 1.5699999999993497e-06, 1.77800000000089e-06, 1.7920000000004599e-06, 1.637999999998252e-06, 1.7499999999982807e-06, 1.7080000000030404e-06, 1.8609999999988358e-06, 1.8050000000005562e-06, 1.8060000000000298e-06, 1.9160000000011113e-06, 1.931000000000155e-06, 1.889000000001445e-06, 1.694000000000001e-06, 1.6670000000003349e-06, 1.7500000000017502e-06, 1.8470000000027353e-06, 1.707999999999571e-06, 1.8199999999995997e-06, 1.653000000000765e-06]</msg>
<status status="PASS" starttime="20201030 18:30:21.966" endtime="20201030 18:30:21.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.962" endtime="20201030 18:30:21.969"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:21.972" endtime="20201030 18:30:21.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.971" endtime="20201030 18:30:21.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.970" endtime="20201030 18:30:21.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.626" endtime="20201030 18:30:21.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.625" endtime="20201030 18:30:21.993"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.001" endtime="20201030 18:30:22.010"></status>
</kw>
<msg timestamp="20201030 18:30:22.011" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:21.999" endtime="20201030 18:30:22.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.013" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:22.012" endtime="20201030 18:30:22.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.014" endtime="20201030 18:30:22.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.997" endtime="20201030 18:30:22.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.995" endtime="20201030 18:30:22.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.023" endtime="20201030 18:30:22.289"></status>
</kw>
<msg timestamp="20201030 18:30:22.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018417806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018418347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:22.022" endtime="20201030 18:30:22.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018417806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018418347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:22.292" endtime="20201030 18:30:22.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.297" endtime="20201030 18:30:22.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.019" endtime="20201030 18:30:22.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.018" endtime="20201030 18:30:22.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:22.315" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:30:22.301" endtime="20201030 18:30:22.315"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.316" endtime="20201030 18:30:22.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.321" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:22.320" endtime="20201030 18:30:22.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.324" level="INFO">VALUE: {'sourcetime': [0.018417806, 0.018418347, 0.01841975, 0.018421625, 0.018423528, 0.018425347, 0.018427042, 0.018428806, 0.018430597, 0.01843225, 0.018433903, 0.018435833, 0.018437528, 0.018439194, 0.018440903, 0.018442542, 0.018444181, 0.018445972, 0.018447764, 0.018449611, 0.018451528, 0.018453306, 0.018455167, 0.018456833, 0.018458653, 0.018460347, 0.018462153, 0.018463875, 0.018465639, 0.018467389, 0.018469056, 0.018470972, 0.018472806, 0.018474597, 0.018476375, 0.018478097, 0.018479889, 0.018481694, 0.018483528, 0.018485347, 0.018487319, 0.018489083, 0.018490792, 0.018492444, 0.018494056, 0.018495792, 0.018497653, 0.018499472, 0.018501181, 0.018502931, 0.018504597], 'eventsource_diff': [0, 5.410000000032056e-07, 1.4029999999970455e-06, 1.8750000000018752e-06, 1.903000000001015e-06, 1.819000000000126e-06, 1.6949999999994747e-06, 1.7639999999978506e-06, 1.7910000000009862e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.9299999999972117e-06, 1.6950000000029442e-06, 1.6659999999973918e-06, 1.709000000002514e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.7910000000009862e-06, 1.7919999999969904e-06, 1.8470000000027353e-06, 1.9169999999971155e-06, 1.77800000000089e-06, 1.8610000000023053e-06, 1.6659999999973918e-06, 1.8199999999995997e-06, 1.694000000000001e-06, 1.8060000000000298e-06, 1.7220000000026103e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 1.6670000000003349e-06, 1.915999999997642e-06, 1.834000000002639e-06, 1.7909999999975168e-06, 1.77800000000089e-06, 1.7219999999991409e-06, 1.7920000000004599e-06, 1.8050000000005562e-06, 1.8339999999991696e-06, 1.819000000000126e-06, 1.971999999999391e-06, 1.76400000000132e-06, 1.7089999999990446e-06, 1.6520000000012913e-06, 1.6119999999980594e-06, 1.7360000000021802e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.7089999999990446e-06, 1.7500000000017502e-06, 1.6660000000008612e-06], 'diff': [0, 5.410000000032056e-07, 1.4029999999970455e-06, 1.8750000000018752e-06, 1.903000000001015e-06, 1.819000000000126e-06, 1.6949999999994747e-06, 1.7639999999978506e-06, 1.7910000000009862e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.9299999999972117e-06, 1.6950000000029442e-06, 1.6659999999973918e-06, 1.709000000002514e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.7910000000009862e-06, 1.7919999999969904e-06, 1.8470000000027353e-06, 1.9169999999971155e-06, 1.77800000000089e-06, 1.8610000000023053e-06, 1.6659999999973918e-06, 1.8199999999995997e-06, 1.694000000000001e-06, 1.8060000000000298e-06, 1.7220000000026103e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 1.6670000000003349e-06, 1.915999999997642e-06, 1.834000000002639e-06, 1.7909999999975168e-06, 1.77800000000089e-06, 1.7219999999991409e-06, 1.7920000000004599e-06, 1.8050000000005562e-06, 1.8339999999991696e-06, 1.819000000000126e-06, 1.971999999999391e-06, 1.76400000000132e-06, 1.7089999999990446e-06, 1.6520000000012913e-06, 1.6119999999980594e-06, 1.7360000000021802e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.7089999999990446e-06, 1.7500000000017502e-06, 1.6660000000008612e-06]}</msg>
<status status="PASS" starttime="20201030 18:30:22.322" endtime="20201030 18:30:22.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.318" endtime="20201030 18:30:22.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:22.329" level="INFO">${RESULT} = [{'diff': 5.410000000032056e-07}, {'diff': 1.8750000000018752e-06}, {'diff': 1.819000000000126e-06}, {'diff': 1.7639999999978506e-06}, {'diff': 1.653000000000765e-06}, {'diff': 1.9299999999972117e-06}...</msg>
<status status="PASS" starttime="20201030 18:30:22.326" endtime="20201030 18:30:22.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:22.332" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.410000000032056e-07, 1.8750000000018752e-06, 1.819000000000126e-06, 1.7639999999978506e-06, 1.653000000000765e-06, 1.9299999999972117e-06, 1.6659999999973918e-06, 1.6389999999977256e-06, 1...</msg>
<status status="PASS" starttime="20201030 18:30:22.330" endtime="20201030 18:30:22.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.336" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:22.335" endtime="20201030 18:30:22.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.339" level="INFO">VALUE: [5.410000000032056e-07, 1.8750000000018752e-06, 1.819000000000126e-06, 1.7639999999978506e-06, 1.653000000000765e-06, 1.9299999999972117e-06, 1.6659999999973918e-06, 1.6389999999977256e-06, 1.7910000000009862e-06, 1.8470000000027353e-06, 1.77800000000089e-06, 1.6659999999973918e-06, 1.694000000000001e-06, 1.7220000000026103e-06, 1.7500000000017502e-06, 1.915999999997642e-06, 1.7909999999975168e-06, 1.7219999999991409e-06, 1.8050000000005562e-06, 1.819000000000126e-06, 1.76400000000132e-06, 1.6520000000012913e-06, 1.7360000000021802e-06, 1.819000000000126e-06, 1.7500000000017502e-06]</msg>
<status status="PASS" starttime="20201030 18:30:22.338" endtime="20201030 18:30:22.339"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.333" endtime="20201030 18:30:22.340"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:22.343" endtime="20201030 18:30:22.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.342" endtime="20201030 18:30:22.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.340" endtime="20201030 18:30:22.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.994" endtime="20201030 18:30:22.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.993" endtime="20201030 18:30:22.364"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.372" endtime="20201030 18:30:22.382"></status>
</kw>
<msg timestamp="20201030 18:30:22.383" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:22.370" endtime="20201030 18:30:22.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.385" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:22.384" endtime="20201030 18:30:22.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.386" endtime="20201030 18:30:22.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.368" endtime="20201030 18:30:22.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.366" endtime="20201030 18:30:22.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.395" endtime="20201030 18:30:22.661"></status>
</kw>
<msg timestamp="20201030 18:30:22.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019062972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019063514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:22.394" endtime="20201030 18:30:22.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019062972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019063514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:22.664" endtime="20201030 18:30:22.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.669" endtime="20201030 18:30:22.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.391" endtime="20201030 18:30:22.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.390" endtime="20201030 18:30:22.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:22.686" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:30:22.673" endtime="20201030 18:30:22.686"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.687" endtime="20201030 18:30:22.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.692" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:22.691" endtime="20201030 18:30:22.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.695" level="INFO">VALUE: {'sourcetime': [0.019062972, 0.019063514, 0.019065028, 0.01906675, 0.019068486, 0.019070208, 0.019072083, 0.019073917, 0.01907575, 0.019077597, 0.019079306, 0.019081125, 0.019082792, 0.019084681, 0.0190865, 0.019088167, 0.019089875, 0.019091681, 0.019093444, 0.019095264, 0.019097069, 0.019098819, 0.019100639, 0.019102375, 0.019104181, 0.019105889, 0.019107736, 0.019109583, 0.019111292, 0.019113222, 0.019115056, 0.019116903, 0.019118764, 0.019120556, 0.019122208, 0.019124042, 0.019125875, 0.019127514, 0.019129319, 0.019131056, 0.019132764, 0.019134556, 0.019136375, 0.019138125, 0.019139736, 0.019141458, 0.019143181, 0.019145069, 0.019146986, 0.019148833, 0.019150736], 'eventsource_diff': [0, 5.419999999992098e-07, 1.51400000000107e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7220000000026103e-06, 1.8749999999984057e-06, 1.8339999999991696e-06, 1.832999999999696e-06, 1.8470000000027353e-06, 1.7089999999990446e-06, 1.819000000000126e-06, 1.6670000000003349e-06, 1.8889999999979756e-06, 1.819000000000126e-06, 1.6670000000003349e-06, 1.707999999999571e-06, 1.8060000000000298e-06, 1.7630000000018464e-06, 1.8199999999995997e-06, 1.8050000000005562e-06, 1.7499999999982807e-06, 1.8199999999995997e-06, 1.7360000000021802e-06, 1.8060000000000298e-06, 1.707999999999571e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.7089999999990446e-06, 1.930000000000681e-06, 1.8339999999991696e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.7920000000004599e-06, 1.6520000000012913e-06, 1.8339999999991696e-06, 1.832999999999696e-06, 1.639000000001195e-06, 1.8049999999970867e-06, 1.7370000000016539e-06, 1.707999999999571e-06, 1.7920000000004599e-06, 1.819000000000126e-06, 1.7499999999982807e-06, 1.6110000000020552e-06, 1.7219999999991409e-06, 1.7229999999986145e-06, 1.8880000000019714e-06, 1.917000000000585e-06, 1.846999999999266e-06, 1.903000000001015e-06], 'diff': [0, 5.419999999992098e-07, 1.51400000000107e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7220000000026103e-06, 1.8749999999984057e-06, 1.8339999999991696e-06, 1.832999999999696e-06, 1.8470000000027353e-06, 1.7089999999990446e-06, 1.819000000000126e-06, 1.6670000000003349e-06, 1.8889999999979756e-06, 1.819000000000126e-06, 1.6670000000003349e-06, 1.707999999999571e-06, 1.8060000000000298e-06, 1.7630000000018464e-06, 1.8199999999995997e-06, 1.8050000000005562e-06, 1.7499999999982807e-06, 1.8199999999995997e-06, 1.7360000000021802e-06, 1.8060000000000298e-06, 1.707999999999571e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.7089999999990446e-06, 1.930000000000681e-06, 1.8339999999991696e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.7920000000004599e-06, 1.6520000000012913e-06, 1.8339999999991696e-06, 1.832999999999696e-06, 1.639000000001195e-06, 1.8049999999970867e-06, 1.7370000000016539e-06, 1.707999999999571e-06, 1.7920000000004599e-06, 1.819000000000126e-06, 1.7499999999982807e-06, 1.6110000000020552e-06, 1.7219999999991409e-06, 1.7229999999986145e-06, 1.8880000000019714e-06, 1.917000000000585e-06, 1.846999999999266e-06, 1.903000000001015e-06]}</msg>
<status status="PASS" starttime="20201030 18:30:22.693" endtime="20201030 18:30:22.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.689" endtime="20201030 18:30:22.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:22.699" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 1.7219999999991409e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.8339999999991696e-06}, {'diff': 1.8470000000027353e-06}, {'diff': 1.819000000000126e-06...</msg>
<status status="PASS" starttime="20201030 18:30:22.697" endtime="20201030 18:30:22.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:22.703" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 1.7219999999991409e-06, 1.7220000000026103e-06, 1.8339999999991696e-06, 1.8470000000027353e-06, 1.819000000000126e-06, 1.8889999999979756e-06, 1.6670000000003349e-06, ...</msg>
<status status="PASS" starttime="20201030 18:30:22.700" endtime="20201030 18:30:22.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.707" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:22.706" endtime="20201030 18:30:22.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.709" level="INFO">VALUE: [5.419999999992098e-07, 1.7219999999991409e-06, 1.7220000000026103e-06, 1.8339999999991696e-06, 1.8470000000027353e-06, 1.819000000000126e-06, 1.8889999999979756e-06, 1.6670000000003349e-06, 1.8060000000000298e-06, 1.8199999999995997e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.707999999999571e-06, 1.846999999999266e-06, 1.930000000000681e-06, 1.8470000000027353e-06, 1.7920000000004599e-06, 1.8339999999991696e-06, 1.639000000001195e-06, 1.7370000000016539e-06, 1.7920000000004599e-06, 1.7499999999982807e-06, 1.7219999999991409e-06, 1.8880000000019714e-06, 1.846999999999266e-06]</msg>
<status status="PASS" starttime="20201030 18:30:22.708" endtime="20201030 18:30:22.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.703" endtime="20201030 18:30:22.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:22.715" endtime="20201030 18:30:22.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.712" endtime="20201030 18:30:22.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.711" endtime="20201030 18:30:22.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.365" endtime="20201030 18:30:22.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.364" endtime="20201030 18:30:22.735"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.743" endtime="20201030 18:30:22.753"></status>
</kw>
<msg timestamp="20201030 18:30:22.753" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:22.742" endtime="20201030 18:30:22.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.756" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:22.755" endtime="20201030 18:30:22.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.757" endtime="20201030 18:30:22.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.739" endtime="20201030 18:30:22.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.738" endtime="20201030 18:30:22.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.766" endtime="20201030 18:30:23.030"></status>
</kw>
<msg timestamp="20201030 18:30:23.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018321375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018321917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:22.764" endtime="20201030 18:30:23.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018321375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018321917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:23.033" endtime="20201030 18:30:23.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.039" endtime="20201030 18:30:23.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.762" endtime="20201030 18:30:23.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.760" endtime="20201030 18:30:23.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:23.055" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:30:23.042" endtime="20201030 18:30:23.055"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.056" endtime="20201030 18:30:23.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.061" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:23.060" endtime="20201030 18:30:23.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.064" level="INFO">VALUE: {'sourcetime': [0.018321375, 0.018321917, 0.018323347, 0.018325097, 0.018326875, 0.018328583, 0.018330431, 0.018332306, 0.018334222, 0.018336028, 0.018337861, 0.01833975, 0.018341389, 0.018343194, 0.018345097, 0.018346986, 0.018348806, 0.018350597, 0.018352486, 0.018354181, 0.018355875, 0.01835775, 0.018359667, 0.018361361, 0.018363069, 0.018364889, 0.018366681, 0.018368361, 0.018370083, 0.018371833, 0.018373736, 0.018375653, 0.018377528, 0.018379306, 0.018381014, 0.018382833, 0.018384597, 0.018386292, 0.018387958, 0.018389833, 0.018391653, 0.018393569, 0.018395417, 0.018397347, 0.018399139, 0.018401056, 0.018402944, 0.018404778, 0.018406514, 0.018408167, 0.018409875], 'eventsource_diff': [0, 5.419999999992098e-07, 1.4300000000001811e-06, 1.7499999999982807e-06, 1.77800000000089e-06, 1.707999999999571e-06, 1.848000000002209e-06, 1.8749999999984057e-06, 1.9160000000011113e-06, 1.8060000000000298e-06, 1.832999999999696e-06, 1.8889999999979756e-06, 1.639000000001195e-06, 1.8050000000005562e-06, 1.903000000001015e-06, 1.8889999999979756e-06, 1.8199999999995997e-06, 1.7910000000009862e-06, 1.889000000001445e-06, 1.6949999999994747e-06, 1.694000000000001e-06, 1.8749999999984057e-06, 1.917000000000585e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.8199999999995997e-06, 1.7920000000004599e-06, 1.6800000000004311e-06, 1.7219999999991409e-06, 1.7500000000017502e-06, 1.903000000001015e-06, 1.9169999999971155e-06, 1.8750000000018752e-06, 1.77800000000089e-06, 1.707999999999571e-06, 1.819000000000126e-06, 1.7639999999978506e-06, 1.6949999999994747e-06, 1.6660000000008612e-06, 1.8750000000018752e-06, 1.8199999999995997e-06, 1.915999999997642e-06, 1.848000000002209e-06, 1.930000000000681e-06, 1.7919999999969904e-06, 1.917000000000585e-06, 1.8880000000019714e-06, 1.8339999999991696e-06, 1.7359999999987108e-06, 1.653000000000765e-06, 1.707999999999571e-06], 'diff': [0, 5.419999999992098e-07, 1.4300000000001811e-06, 1.7499999999982807e-06, 1.77800000000089e-06, 1.707999999999571e-06, 1.848000000002209e-06, 1.8749999999984057e-06, 1.9160000000011113e-06, 1.8060000000000298e-06, 1.832999999999696e-06, 1.8889999999979756e-06, 1.639000000001195e-06, 1.8050000000005562e-06, 1.903000000001015e-06, 1.8889999999979756e-06, 1.8199999999995997e-06, 1.7910000000009862e-06, 1.889000000001445e-06, 1.6949999999994747e-06, 1.694000000000001e-06, 1.8749999999984057e-06, 1.917000000000585e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.8199999999995997e-06, 1.7920000000004599e-06, 1.6800000000004311e-06, 1.7219999999991409e-06, 1.7500000000017502e-06, 1.903000000001015e-06, 1.9169999999971155e-06, 1.8750000000018752e-06, 1.77800000000089e-06, 1.707999999999571e-06, 1.819000000000126e-06, 1.7639999999978506e-06, 1.6949999999994747e-06, 1.6660000000008612e-06, 1.8750000000018752e-06, 1.8199999999995997e-06, 1.915999999997642e-06, 1.848000000002209e-06, 1.930000000000681e-06, 1.7919999999969904e-06, 1.917000000000585e-06, 1.8880000000019714e-06, 1.8339999999991696e-06, 1.7359999999987108e-06, 1.653000000000765e-06, 1.707999999999571e-06]}</msg>
<status status="PASS" starttime="20201030 18:30:23.062" endtime="20201030 18:30:23.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.058" endtime="20201030 18:30:23.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:23.069" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 1.7499999999982807e-06}, {'diff': 1.707999999999571e-06}, {'diff': 1.8749999999984057e-06}, {'diff': 1.8060000000000298e-06}, {'diff': 1.8889999999979756e-06...</msg>
<status status="PASS" starttime="20201030 18:30:23.066" endtime="20201030 18:30:23.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:23.073" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 1.7499999999982807e-06, 1.707999999999571e-06, 1.8749999999984057e-06, 1.8060000000000298e-06, 1.8889999999979756e-06, 1.8050000000005562e-06, 1.8889999999979756e-06, ...</msg>
<status status="PASS" starttime="20201030 18:30:23.070" endtime="20201030 18:30:23.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.078" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:23.077" endtime="20201030 18:30:23.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.081" level="INFO">VALUE: [5.419999999992098e-07, 1.7499999999982807e-06, 1.707999999999571e-06, 1.8749999999984057e-06, 1.8060000000000298e-06, 1.8889999999979756e-06, 1.8050000000005562e-06, 1.8889999999979756e-06, 1.7910000000009862e-06, 1.6949999999994747e-06, 1.8749999999984057e-06, 1.694000000000001e-06, 1.8199999999995997e-06, 1.6800000000004311e-06, 1.7500000000017502e-06, 1.9169999999971155e-06, 1.77800000000089e-06, 1.819000000000126e-06, 1.6949999999994747e-06, 1.8750000000018752e-06, 1.915999999997642e-06, 1.930000000000681e-06, 1.917000000000585e-06, 1.8339999999991696e-06, 1.653000000000765e-06]</msg>
<status status="PASS" starttime="20201030 18:30:23.079" endtime="20201030 18:30:23.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.074" endtime="20201030 18:30:23.082"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:23.086" endtime="20201030 18:30:23.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.084" endtime="20201030 18:30:23.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.083" endtime="20201030 18:30:23.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.736" endtime="20201030 18:30:23.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.736" endtime="20201030 18:30:23.106"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.117" endtime="20201030 18:30:23.128"></status>
</kw>
<msg timestamp="20201030 18:30:23.128" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:23.115" endtime="20201030 18:30:23.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.131" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:23.129" endtime="20201030 18:30:23.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.133" endtime="20201030 18:30:23.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.111" endtime="20201030 18:30:23.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.108" endtime="20201030 18:30:23.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.144" endtime="20201030 18:30:23.410"></status>
</kw>
<msg timestamp="20201030 18:30:23.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021974958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219755, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:30:23.143" endtime="20201030 18:30:23.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021974958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219755, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:30:23.413" endtime="20201030 18:30:23.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.418" endtime="20201030 18:30:23.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.139" endtime="20201030 18:30:23.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.137" endtime="20201030 18:30:23.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:23.435" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:30:23.422" endtime="20201030 18:30:23.436"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.436" endtime="20201030 18:30:23.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.441" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:23.441" endtime="20201030 18:30:23.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.445" level="INFO">VALUE: {'sourcetime': [0.021974958, 0.0219755, 0.021976875, 0.021978556, 0.021980236, 0.021981875, 0.021983778, 0.021985597, 0.021987306, 0.021989028, 0.021990875, 0.021992556, 0.021994472, 0.021996111, 0.021997806, 0.021999528, 0.022001306, 0.022003222, 0.022005097, 0.022006847, 0.022008528, 0.022010333, 0.02201225, 0.022014083, 0.02201575, 0.022017653, 0.022019306, 0.022020986, 0.022022708, 0.022024486, 0.022026347, 0.022028069, 0.022029792, 0.022031681, 0.022033458, 0.022035347, 0.022037153, 0.022039056, 0.022040972, 0.022042569, 0.022044347, 0.022046222, 0.022048069, 0.022049944, 0.022051653, 0.022053403, 0.022055194, 0.022056903, 0.022058653, 0.022060528, 0.022062431], 'eventsource_diff': [0, 5.419999999992098e-07, 1.3750000000013751e-06, 1.6809999999999048e-06, 1.6800000000004311e-06, 1.639000000001195e-06, 1.9029999999975455e-06, 1.819000000000126e-06, 1.709000000002514e-06, 1.7219999999991409e-06, 1.846999999999266e-06, 1.6809999999999048e-06, 1.9160000000011113e-06, 1.6389999999977256e-06, 1.6950000000029442e-06, 1.7219999999991409e-06, 1.77800000000089e-06, 1.915999999997642e-06, 1.8750000000018752e-06, 1.7499999999982807e-06, 1.6809999999999048e-06, 1.8050000000005562e-06, 1.917000000000585e-06, 1.832999999999696e-06, 1.6670000000003349e-06, 1.903000000001015e-06, 1.6529999999972955e-06, 1.6800000000004311e-06, 1.7219999999991409e-06, 1.77800000000089e-06, 1.8610000000023053e-06, 1.7219999999991409e-06, 1.7229999999986145e-06, 1.889000000001445e-06, 1.7769999999979469e-06, 1.889000000001445e-06, 1.8060000000000298e-06, 1.903000000001015e-06, 1.915999999997642e-06, 1.5970000000024853e-06, 1.7779999999974205e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.709000000002514e-06, 1.7499999999982807e-06, 1.7910000000009862e-06, 1.7089999999990446e-06, 1.7500000000017502e-06, 1.8749999999984057e-06, 1.903000000001015e-06], 'diff': [0, 5.419999999992098e-07, 1.3750000000013751e-06, 1.6809999999999048e-06, 1.6800000000004311e-06, 1.639000000001195e-06, 1.9029999999975455e-06, 1.819000000000126e-06, 1.709000000002514e-06, 1.7219999999991409e-06, 1.846999999999266e-06, 1.6809999999999048e-06, 1.9160000000011113e-06, 1.6389999999977256e-06, 1.6950000000029442e-06, 1.7219999999991409e-06, 1.77800000000089e-06, 1.915999999997642e-06, 1.8750000000018752e-06, 1.7499999999982807e-06, 1.6809999999999048e-06, 1.8050000000005562e-06, 1.917000000000585e-06, 1.832999999999696e-06, 1.6670000000003349e-06, 1.903000000001015e-06, 1.6529999999972955e-06, 1.6800000000004311e-06, 1.7219999999991409e-06, 1.77800000000089e-06, 1.8610000000023053e-06, 1.7219999999991409e-06, 1.7229999999986145e-06, 1.889000000001445e-06, 1.7769999999979469e-06, 1.889000000001445e-06, 1.8060000000000298e-06, 1.903000000001015e-06, 1.915999999997642e-06, 1.5970000000024853e-06, 1.7779999999974205e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.709000000002514e-06, 1.7499999999982807e-06, 1.7910000000009862e-06, 1.7089999999990446e-06, 1.7500000000017502e-06, 1.8749999999984057e-06, 1.903000000001015e-06]}</msg>
<status status="PASS" starttime="20201030 18:30:23.443" endtime="20201030 18:30:23.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.439" endtime="20201030 18:30:23.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:23.449" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 1.6809999999999048e-06}, {'diff': 1.639000000001195e-06}, {'diff': 1.819000000000126e-06}, {'diff': 1.7219999999991409e-06}, {'diff': 1.6809999999999048e-06}...</msg>
<status status="PASS" starttime="20201030 18:30:23.447" endtime="20201030 18:30:23.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:23.452" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 1.6809999999999048e-06, 1.639000000001195e-06, 1.819000000000126e-06, 1.7219999999991409e-06, 1.6809999999999048e-06, 1.6389999999977256e-06, 1.7219999999991409e-06, 1...</msg>
<status status="PASS" starttime="20201030 18:30:23.450" endtime="20201030 18:30:23.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.456" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:23.455" endtime="20201030 18:30:23.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.459" level="INFO">VALUE: [5.419999999992098e-07, 1.6809999999999048e-06, 1.639000000001195e-06, 1.819000000000126e-06, 1.7219999999991409e-06, 1.6809999999999048e-06, 1.6389999999977256e-06, 1.7219999999991409e-06, 1.915999999997642e-06, 1.7499999999982807e-06, 1.8050000000005562e-06, 1.832999999999696e-06, 1.903000000001015e-06, 1.6800000000004311e-06, 1.77800000000089e-06, 1.7219999999991409e-06, 1.889000000001445e-06, 1.889000000001445e-06, 1.903000000001015e-06, 1.5970000000024853e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.7499999999982807e-06, 1.7089999999990446e-06, 1.8749999999984057e-06]</msg>
<status status="PASS" starttime="20201030 18:30:23.457" endtime="20201030 18:30:23.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.453" endtime="20201030 18:30:23.460"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:23.463" endtime="20201030 18:30:23.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.462" endtime="20201030 18:30:23.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.461" endtime="20201030 18:30:23.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.107" endtime="20201030 18:30:23.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.107" endtime="20201030 18:30:23.484"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.492" endtime="20201030 18:30:23.502"></status>
</kw>
<msg timestamp="20201030 18:30:23.503" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:23.491" endtime="20201030 18:30:23.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.505" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:23.504" endtime="20201030 18:30:23.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.506" endtime="20201030 18:30:23.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.488" endtime="20201030 18:30:23.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.486" endtime="20201030 18:30:23.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.517" endtime="20201030 18:30:23.784"></status>
</kw>
<msg timestamp="20201030 18:30:23.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018529708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01853025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:23.515" endtime="20201030 18:30:23.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018529708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01853025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:23.787" endtime="20201030 18:30:23.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.792" endtime="20201030 18:30:23.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.512" endtime="20201030 18:30:23.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.509" endtime="20201030 18:30:23.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:23.809" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:30:23.796" endtime="20201030 18:30:23.809"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.810" endtime="20201030 18:30:23.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.815" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:23.814" endtime="20201030 18:30:23.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.818" level="INFO">VALUE: {'sourcetime': [0.018529708, 0.01853025, 0.018531708, 0.018533569, 0.01853525, 0.018537028, 0.018538931, 0.018540667, 0.018542472, 0.018544153, 0.018545944, 0.018547736, 0.018549528, 0.018551181, 0.018553069, 0.018554833, 0.018556764, 0.018558681, 0.018560417, 0.018562333, 0.018564222, 0.018566069, 0.018567917, 0.018569653, 0.018571444, 0.018573083, 0.018574931, 0.018576583, 0.018578278, 0.018579958, 0.018581694, 0.018583556, 0.018585194, 0.018587, 0.018588694, 0.018590556, 0.018592389, 0.018594167, 0.018595847, 0.018597639, 0.018599514, 0.018601222, 0.018603069, 0.018604958, 0.018606819, 0.018608681, 0.018610583, 0.018612403, 0.018614181, 0.018616097, 0.018617944], 'eventsource_diff': [0, 5.420000000026792e-07, 1.457999999999321e-06, 1.8609999999988358e-06, 1.6809999999999048e-06, 1.77800000000089e-06, 1.903000000001015e-06, 1.7359999999987108e-06, 1.8050000000005562e-06, 1.6809999999999048e-06, 1.7910000000009862e-06, 1.7919999999969904e-06, 1.7920000000004599e-06, 1.653000000000765e-06, 1.887999999998502e-06, 1.76400000000132e-06, 1.931000000000155e-06, 1.917000000000585e-06, 1.7359999999987108e-06, 1.9160000000011113e-06, 1.8889999999979756e-06, 1.8470000000027353e-06, 1.8479999999987395e-06, 1.7359999999987108e-06, 1.7910000000009862e-06, 1.639000000001195e-06, 1.8479999999987395e-06, 1.6520000000012913e-06, 1.6949999999994747e-06, 1.6800000000004311e-06, 1.7359999999987108e-06, 1.862000000001779e-06, 1.637999999998252e-06, 1.8060000000000298e-06, 1.694000000000001e-06, 1.862000000001779e-06, 1.832999999999696e-06, 1.77800000000089e-06, 1.6799999999969617e-06, 1.7920000000004599e-06, 1.8750000000018752e-06, 1.707999999999571e-06, 1.846999999999266e-06, 1.889000000001445e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.9020000000015413e-06, 1.8199999999995997e-06, 1.77800000000089e-06, 1.9160000000011113e-06, 1.846999999999266e-06], 'diff': [0, 5.420000000026792e-07, 1.457999999999321e-06, 1.8609999999988358e-06, 1.6809999999999048e-06, 1.77800000000089e-06, 1.903000000001015e-06, 1.7359999999987108e-06, 1.8050000000005562e-06, 1.6809999999999048e-06, 1.7910000000009862e-06, 1.7919999999969904e-06, 1.7920000000004599e-06, 1.653000000000765e-06, 1.887999999998502e-06, 1.76400000000132e-06, 1.931000000000155e-06, 1.917000000000585e-06, 1.7359999999987108e-06, 1.9160000000011113e-06, 1.8889999999979756e-06, 1.8470000000027353e-06, 1.8479999999987395e-06, 1.7359999999987108e-06, 1.7910000000009862e-06, 1.639000000001195e-06, 1.8479999999987395e-06, 1.6520000000012913e-06, 1.6949999999994747e-06, 1.6800000000004311e-06, 1.7359999999987108e-06, 1.862000000001779e-06, 1.637999999998252e-06, 1.8060000000000298e-06, 1.694000000000001e-06, 1.862000000001779e-06, 1.832999999999696e-06, 1.77800000000089e-06, 1.6799999999969617e-06, 1.7920000000004599e-06, 1.8750000000018752e-06, 1.707999999999571e-06, 1.846999999999266e-06, 1.889000000001445e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.9020000000015413e-06, 1.8199999999995997e-06, 1.77800000000089e-06, 1.9160000000011113e-06, 1.846999999999266e-06]}</msg>
<status status="PASS" starttime="20201030 18:30:23.816" endtime="20201030 18:30:23.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.812" endtime="20201030 18:30:23.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:23.823" level="INFO">${RESULT} = [{'diff': 5.420000000026792e-07}, {'diff': 1.8609999999988358e-06}, {'diff': 1.77800000000089e-06}, {'diff': 1.7359999999987108e-06}, {'diff': 1.6809999999999048e-06}, {'diff': 1.7919999999969904e-06}...</msg>
<status status="PASS" starttime="20201030 18:30:23.820" endtime="20201030 18:30:23.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:23.826" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.420000000026792e-07, 1.8609999999988358e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.6809999999999048e-06, 1.7919999999969904e-06, 1.653000000000765e-06, 1.76400000000132e-06, 1.91...</msg>
<status status="PASS" starttime="20201030 18:30:23.824" endtime="20201030 18:30:23.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.830" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:23.829" endtime="20201030 18:30:23.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.833" level="INFO">VALUE: [5.420000000026792e-07, 1.8609999999988358e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.6809999999999048e-06, 1.7919999999969904e-06, 1.653000000000765e-06, 1.76400000000132e-06, 1.917000000000585e-06, 1.9160000000011113e-06, 1.8470000000027353e-06, 1.7359999999987108e-06, 1.639000000001195e-06, 1.6520000000012913e-06, 1.6800000000004311e-06, 1.862000000001779e-06, 1.8060000000000298e-06, 1.862000000001779e-06, 1.77800000000089e-06, 1.7920000000004599e-06, 1.707999999999571e-06, 1.889000000001445e-06, 1.8619999999983095e-06, 1.8199999999995997e-06, 1.9160000000011113e-06]</msg>
<status status="PASS" starttime="20201030 18:30:23.832" endtime="20201030 18:30:23.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.827" endtime="20201030 18:30:23.834"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:23.837" endtime="20201030 18:30:23.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.836" endtime="20201030 18:30:23.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.835" endtime="20201030 18:30:23.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.485" endtime="20201030 18:30:23.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.484" endtime="20201030 18:30:23.859"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.866" endtime="20201030 18:30:23.875"></status>
</kw>
<msg timestamp="20201030 18:30:23.876" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:23.865" endtime="20201030 18:30:23.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.878" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:23.877" endtime="20201030 18:30:23.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.879" endtime="20201030 18:30:23.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.862" endtime="20201030 18:30:23.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.861" endtime="20201030 18:30:23.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.888" endtime="20201030 18:30:24.153"></status>
</kw>
<msg timestamp="20201030 18:30:24.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018207792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018208333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:23.887" endtime="20201030 18:30:24.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018207792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018208333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:24.156" endtime="20201030 18:30:24.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.161" endtime="20201030 18:30:24.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.884" endtime="20201030 18:30:24.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.883" endtime="20201030 18:30:24.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:24.178" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:30:24.165" endtime="20201030 18:30:24.178"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.179" endtime="20201030 18:30:24.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.184" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:24.183" endtime="20201030 18:30:24.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.187" level="INFO">VALUE: {'sourcetime': [0.018207792, 0.018208333, 0.018209861, 0.0182115, 0.018213361, 0.018215083, 0.018216792, 0.018218625, 0.018220278, 0.018222181, 0.018223931, 0.018225833, 0.018227528, 0.018229208, 0.018230861, 0.018232542, 0.018234431, 0.018236097, 0.018237917, 0.018239681, 0.018241361, 0.018243236, 0.018245111, 0.018246819, 0.018248722, 0.018250417, 0.018252264, 0.018254194, 0.018255958, 0.018257569, 0.018259389, 0.018261222, 0.018262958, 0.018264819, 0.018266708, 0.018268569, 0.018270208, 0.018272042, 0.01827375, 0.018275583, 0.018277264, 0.018279069, 0.018280944, 0.018282861, 0.018284597, 0.018286361, 0.018288056, 0.018289764, 0.018291417, 0.018293069, 0.018294833], 'eventsource_diff': [0, 5.409999999997361e-07, 1.52800000000064e-06, 1.6389999999977256e-06, 1.8610000000023053e-06, 1.7219999999991409e-06, 1.7089999999990446e-06, 1.832999999999696e-06, 1.653000000000765e-06, 1.903000000001015e-06, 1.7499999999982807e-06, 1.9020000000015413e-06, 1.6949999999994747e-06, 1.6800000000004311e-06, 1.653000000000765e-06, 1.6809999999999048e-06, 1.8889999999979756e-06, 1.6660000000008612e-06, 1.8199999999995997e-06, 1.76400000000132e-06, 1.6800000000004311e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.707999999999571e-06, 1.9029999999975455e-06, 1.6950000000029442e-06, 1.846999999999266e-06, 1.930000000000681e-06, 1.7639999999978506e-06, 1.6110000000020552e-06, 1.8199999999995997e-06, 1.832999999999696e-06, 1.7359999999987108e-06, 1.8610000000023053e-06, 1.8889999999979756e-06, 1.8609999999988358e-06, 1.639000000001195e-06, 1.8339999999991696e-06, 1.707999999999571e-06, 1.8330000000031654e-06, 1.6809999999999048e-06, 1.8049999999970867e-06, 1.8750000000018752e-06, 1.917000000000585e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.653000000000765e-06, 1.6519999999978219e-06, 1.76400000000132e-06], 'diff': [0, 5.409999999997361e-07, 1.52800000000064e-06, 1.6389999999977256e-06, 1.8610000000023053e-06, 1.7219999999991409e-06, 1.7089999999990446e-06, 1.832999999999696e-06, 1.653000000000765e-06, 1.903000000001015e-06, 1.7499999999982807e-06, 1.9020000000015413e-06, 1.6949999999994747e-06, 1.6800000000004311e-06, 1.653000000000765e-06, 1.6809999999999048e-06, 1.8889999999979756e-06, 1.6660000000008612e-06, 1.8199999999995997e-06, 1.76400000000132e-06, 1.6800000000004311e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.707999999999571e-06, 1.9029999999975455e-06, 1.6950000000029442e-06, 1.846999999999266e-06, 1.930000000000681e-06, 1.7639999999978506e-06, 1.6110000000020552e-06, 1.8199999999995997e-06, 1.832999999999696e-06, 1.7359999999987108e-06, 1.8610000000023053e-06, 1.8889999999979756e-06, 1.8609999999988358e-06, 1.639000000001195e-06, 1.8339999999991696e-06, 1.707999999999571e-06, 1.8330000000031654e-06, 1.6809999999999048e-06, 1.8049999999970867e-06, 1.8750000000018752e-06, 1.917000000000585e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.653000000000765e-06, 1.6519999999978219e-06, 1.76400000000132e-06]}</msg>
<status status="PASS" starttime="20201030 18:30:24.185" endtime="20201030 18:30:24.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.181" endtime="20201030 18:30:24.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:24.191" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 1.6389999999977256e-06}, {'diff': 1.7219999999991409e-06}, {'diff': 1.832999999999696e-06}, {'diff': 1.903000000001015e-06}, {'diff': 1.9020000000015413e-06}...</msg>
<status status="PASS" starttime="20201030 18:30:24.189" endtime="20201030 18:30:24.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:24.195" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 1.6389999999977256e-06, 1.7219999999991409e-06, 1.832999999999696e-06, 1.903000000001015e-06, 1.9020000000015413e-06, 1.6800000000004311e-06, 1.6809999999999048e-06, 1...</msg>
<status status="PASS" starttime="20201030 18:30:24.192" endtime="20201030 18:30:24.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.200" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:24.199" endtime="20201030 18:30:24.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.202" level="INFO">VALUE: [5.409999999997361e-07, 1.6389999999977256e-06, 1.7219999999991409e-06, 1.832999999999696e-06, 1.903000000001015e-06, 1.9020000000015413e-06, 1.6800000000004311e-06, 1.6809999999999048e-06, 1.6660000000008612e-06, 1.76400000000132e-06, 1.8749999999984057e-06, 1.707999999999571e-06, 1.6950000000029442e-06, 1.930000000000681e-06, 1.6110000000020552e-06, 1.832999999999696e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8339999999991696e-06, 1.8330000000031654e-06, 1.8049999999970867e-06, 1.917000000000585e-06, 1.76400000000132e-06, 1.707999999999571e-06, 1.6519999999978219e-06]</msg>
<status status="PASS" starttime="20201030 18:30:24.201" endtime="20201030 18:30:24.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.196" endtime="20201030 18:30:24.203"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:24.207" endtime="20201030 18:30:24.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.205" endtime="20201030 18:30:24.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.204" endtime="20201030 18:30:24.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.859" endtime="20201030 18:30:24.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.859" endtime="20201030 18:30:24.228"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.238" endtime="20201030 18:30:24.248"></status>
</kw>
<msg timestamp="20201030 18:30:24.248" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:24.236" endtime="20201030 18:30:24.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.251" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:24.249" endtime="20201030 18:30:24.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.252" endtime="20201030 18:30:24.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.233" endtime="20201030 18:30:24.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.231" endtime="20201030 18:30:24.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.263" endtime="20201030 18:30:24.532"></status>
</kw>
<msg timestamp="20201030 18:30:24.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021514056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021514597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:24.261" endtime="20201030 18:30:24.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021514056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021514597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:24.535" endtime="20201030 18:30:24.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.540" endtime="20201030 18:30:24.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.259" endtime="20201030 18:30:24.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.257" endtime="20201030 18:30:24.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:24.557" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:30:24.544" endtime="20201030 18:30:24.557"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.558" endtime="20201030 18:30:24.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.563" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:24.562" endtime="20201030 18:30:24.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.566" level="INFO">VALUE: {'sourcetime': [0.021514056, 0.021514597, 0.021515944, 0.021517597, 0.021519458, 0.021521208, 0.021523097, 0.021524819, 0.021526444, 0.021528167, 0.021530056, 0.021531833, 0.021533486, 0.021535194, 0.021536986, 0.021538889, 0.021540611, 0.02154225, 0.021544056, 0.021545875, 0.021547694, 0.021549556, 0.021551444, 0.02155325, 0.021555153, 0.021556792, 0.021558458, 0.021560333, 0.021562028, 0.021563819, 0.021565708, 0.021567556, 0.021569208, 0.021571097, 0.021572875, 0.021574583, 0.02157625, 0.021578167, 0.021580042, 0.021581806, 0.021583542, 0.021585403, 0.021587222, 0.021589111, 0.021590847, 0.021592736, 0.021594458, 0.021596333, 0.021598181, 0.021600014, 0.021601764], 'eventsource_diff': [0, 5.409999999997361e-07, 1.3469999999987659e-06, 1.653000000000765e-06, 1.8610000000023053e-06, 1.7499999999982807e-06, 1.889000000001445e-06, 1.7219999999991409e-06, 1.6249999999981557e-06, 1.723000000002084e-06, 1.8889999999979756e-06, 1.7770000000014163e-06, 1.653000000000765e-06, 1.707999999999571e-06, 1.7920000000004599e-06, 1.9029999999975455e-06, 1.7220000000026103e-06, 1.6389999999977256e-06, 1.8060000000000298e-06, 1.819000000000126e-06, 1.819000000000126e-06, 1.862000000001779e-06, 1.887999999998502e-06, 1.8060000000000298e-06, 1.903000000001015e-06, 1.639000000001195e-06, 1.6659999999973918e-06, 1.8750000000018752e-06, 1.6949999999994747e-06, 1.7910000000009862e-06, 1.8889999999979756e-06, 1.848000000002209e-06, 1.6519999999978219e-06, 1.889000000001445e-06, 1.7779999999974205e-06, 1.7080000000030404e-06, 1.6670000000003349e-06, 1.9169999999971155e-06, 1.8750000000018752e-06, 1.7639999999978506e-06, 1.7360000000021802e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.889000000001445e-06, 1.7359999999987108e-06, 1.889000000001445e-06, 1.7219999999991409e-06, 1.8749999999984057e-06, 1.848000000002209e-06, 1.832999999999696e-06, 1.7499999999982807e-06], 'diff': [0, 5.409999999997361e-07, 1.3469999999987659e-06, 1.653000000000765e-06, 1.8610000000023053e-06, 1.7499999999982807e-06, 1.889000000001445e-06, 1.7219999999991409e-06, 1.6249999999981557e-06, 1.723000000002084e-06, 1.8889999999979756e-06, 1.7770000000014163e-06, 1.653000000000765e-06, 1.707999999999571e-06, 1.7920000000004599e-06, 1.9029999999975455e-06, 1.7220000000026103e-06, 1.6389999999977256e-06, 1.8060000000000298e-06, 1.819000000000126e-06, 1.819000000000126e-06, 1.862000000001779e-06, 1.887999999998502e-06, 1.8060000000000298e-06, 1.903000000001015e-06, 1.639000000001195e-06, 1.6659999999973918e-06, 1.8750000000018752e-06, 1.6949999999994747e-06, 1.7910000000009862e-06, 1.8889999999979756e-06, 1.848000000002209e-06, 1.6519999999978219e-06, 1.889000000001445e-06, 1.7779999999974205e-06, 1.7080000000030404e-06, 1.6670000000003349e-06, 1.9169999999971155e-06, 1.8750000000018752e-06, 1.7639999999978506e-06, 1.7360000000021802e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.889000000001445e-06, 1.7359999999987108e-06, 1.889000000001445e-06, 1.7219999999991409e-06, 1.8749999999984057e-06, 1.848000000002209e-06, 1.832999999999696e-06, 1.7499999999982807e-06]}</msg>
<status status="PASS" starttime="20201030 18:30:24.564" endtime="20201030 18:30:24.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.560" endtime="20201030 18:30:24.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:24.571" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 1.653000000000765e-06}, {'diff': 1.7499999999982807e-06}, {'diff': 1.7219999999991409e-06}, {'diff': 1.723000000002084e-06}, {'diff': 1.7770000000014163e-06}...</msg>
<status status="PASS" starttime="20201030 18:30:24.569" endtime="20201030 18:30:24.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:24.574" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 1.653000000000765e-06, 1.7499999999982807e-06, 1.7219999999991409e-06, 1.723000000002084e-06, 1.7770000000014163e-06, 1.707999999999571e-06, 1.9029999999975455e-06, 1....</msg>
<status status="PASS" starttime="20201030 18:30:24.572" endtime="20201030 18:30:24.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.578" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:24.577" endtime="20201030 18:30:24.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.581" level="INFO">VALUE: [5.409999999997361e-07, 1.653000000000765e-06, 1.7499999999982807e-06, 1.7219999999991409e-06, 1.723000000002084e-06, 1.7770000000014163e-06, 1.707999999999571e-06, 1.9029999999975455e-06, 1.6389999999977256e-06, 1.819000000000126e-06, 1.862000000001779e-06, 1.8060000000000298e-06, 1.639000000001195e-06, 1.8750000000018752e-06, 1.7910000000009862e-06, 1.848000000002209e-06, 1.889000000001445e-06, 1.7080000000030404e-06, 1.9169999999971155e-06, 1.7639999999978506e-06, 1.8609999999988358e-06, 1.889000000001445e-06, 1.889000000001445e-06, 1.8749999999984057e-06, 1.832999999999696e-06]</msg>
<status status="PASS" starttime="20201030 18:30:24.580" endtime="20201030 18:30:24.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.575" endtime="20201030 18:30:24.582"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:24.585" endtime="20201030 18:30:24.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.584" endtime="20201030 18:30:24.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.583" endtime="20201030 18:30:24.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.229" endtime="20201030 18:30:24.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.228" endtime="20201030 18:30:24.606"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.614" endtime="20201030 18:30:24.623"></status>
</kw>
<msg timestamp="20201030 18:30:24.623" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:24.612" endtime="20201030 18:30:24.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.626" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:24.624" endtime="20201030 18:30:24.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.627" endtime="20201030 18:30:24.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.610" endtime="20201030 18:30:24.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.608" endtime="20201030 18:30:24.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.637" endtime="20201030 18:30:24.901"></status>
</kw>
<msg timestamp="20201030 18:30:24.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018190597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018191139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:24.635" endtime="20201030 18:30:24.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018190597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018191139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:24.904" endtime="20201030 18:30:24.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.910" endtime="20201030 18:30:24.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.632" endtime="20201030 18:30:24.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.630" endtime="20201030 18:30:24.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:24.928" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:30:24.914" endtime="20201030 18:30:24.928"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.929" endtime="20201030 18:30:24.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.934" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:24.933" endtime="20201030 18:30:24.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.937" level="INFO">VALUE: {'sourcetime': [0.018190597, 0.018191139, 0.018192708, 0.018194597, 0.018196528, 0.018198444, 0.018200278, 0.018201944, 0.018203681, 0.018205514, 0.018207222, 0.018209097, 0.018210917, 0.018212667, 0.0182145, 0.018216347, 0.018218236, 0.018220111, 0.018221986, 0.018223903, 0.018225597, 0.018227319, 0.018229125, 0.018230847, 0.018232667, 0.018234569, 0.018236333, 0.018237986, 0.018239708, 0.018241431, 0.018243347, 0.018245028, 0.018246847, 0.018248611, 0.018250431, 0.018252083, 0.018253819, 0.018255583, 0.018257306, 0.018258972, 0.018260847, 0.018262583, 0.018264236, 0.018266042, 0.018267708, 0.0182695, 0.018271319, 0.018273028, 0.018274931, 0.018276681, 0.018278403], 'eventsource_diff': [0, 5.419999999992098e-07, 1.568999999999876e-06, 1.889000000001445e-06, 1.931000000000155e-06, 1.9160000000011113e-06, 1.8339999999991696e-06, 1.6660000000008612e-06, 1.7369999999981844e-06, 1.832999999999696e-06, 1.707999999999571e-06, 1.8750000000018752e-06, 1.8199999999995997e-06, 1.7499999999982807e-06, 1.8330000000031654e-06, 1.846999999999266e-06, 1.8889999999979756e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.917000000000585e-06, 1.694000000000001e-06, 1.7219999999991409e-06, 1.8060000000000298e-06, 1.7220000000026103e-06, 1.8199999999995997e-06, 1.901999999998072e-06, 1.76400000000132e-06, 1.653000000000765e-06, 1.7219999999991409e-06, 1.7229999999986145e-06, 1.9160000000011113e-06, 1.6809999999999048e-06, 1.819000000000126e-06, 1.76400000000132e-06, 1.8199999999995997e-06, 1.6519999999978219e-06, 1.7360000000021802e-06, 1.7639999999978506e-06, 1.723000000002084e-06, 1.6659999999973918e-06, 1.8750000000018752e-06, 1.7359999999987108e-06, 1.653000000000765e-06, 1.8060000000000298e-06, 1.6660000000008612e-06, 1.7920000000004599e-06, 1.819000000000126e-06, 1.7089999999990446e-06, 1.903000000001015e-06, 1.7499999999982807e-06, 1.7219999999991409e-06], 'diff': [0, 5.419999999992098e-07, 1.568999999999876e-06, 1.889000000001445e-06, 1.931000000000155e-06, 1.9160000000011113e-06, 1.8339999999991696e-06, 1.6660000000008612e-06, 1.7369999999981844e-06, 1.832999999999696e-06, 1.707999999999571e-06, 1.8750000000018752e-06, 1.8199999999995997e-06, 1.7499999999982807e-06, 1.8330000000031654e-06, 1.846999999999266e-06, 1.8889999999979756e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.917000000000585e-06, 1.694000000000001e-06, 1.7219999999991409e-06, 1.8060000000000298e-06, 1.7220000000026103e-06, 1.8199999999995997e-06, 1.901999999998072e-06, 1.76400000000132e-06, 1.653000000000765e-06, 1.7219999999991409e-06, 1.7229999999986145e-06, 1.9160000000011113e-06, 1.6809999999999048e-06, 1.819000000000126e-06, 1.76400000000132e-06, 1.8199999999995997e-06, 1.6519999999978219e-06, 1.7360000000021802e-06, 1.7639999999978506e-06, 1.723000000002084e-06, 1.6659999999973918e-06, 1.8750000000018752e-06, 1.7359999999987108e-06, 1.653000000000765e-06, 1.8060000000000298e-06, 1.6660000000008612e-06, 1.7920000000004599e-06, 1.819000000000126e-06, 1.7089999999990446e-06, 1.903000000001015e-06, 1.7499999999982807e-06, 1.7219999999991409e-06]}</msg>
<status status="PASS" starttime="20201030 18:30:24.935" endtime="20201030 18:30:24.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.931" endtime="20201030 18:30:24.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:24.942" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 1.889000000001445e-06}, {'diff': 1.9160000000011113e-06}, {'diff': 1.6660000000008612e-06}, {'diff': 1.832999999999696e-06}, {'diff': 1.8750000000018752e-06}...</msg>
<status status="PASS" starttime="20201030 18:30:24.939" endtime="20201030 18:30:24.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:24.946" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 1.889000000001445e-06, 1.9160000000011113e-06, 1.6660000000008612e-06, 1.832999999999696e-06, 1.8750000000018752e-06, 1.7499999999982807e-06, 1.846999999999266e-06, 1....</msg>
<status status="PASS" starttime="20201030 18:30:24.943" endtime="20201030 18:30:24.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.950" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:24.949" endtime="20201030 18:30:24.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.952" level="INFO">VALUE: [5.419999999992098e-07, 1.889000000001445e-06, 1.9160000000011113e-06, 1.6660000000008612e-06, 1.832999999999696e-06, 1.8750000000018752e-06, 1.7499999999982807e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.917000000000585e-06, 1.7219999999991409e-06, 1.7220000000026103e-06, 1.901999999998072e-06, 1.653000000000765e-06, 1.7229999999986145e-06, 1.6809999999999048e-06, 1.76400000000132e-06, 1.6519999999978219e-06, 1.7639999999978506e-06, 1.6659999999973918e-06, 1.7359999999987108e-06, 1.8060000000000298e-06, 1.7920000000004599e-06, 1.7089999999990446e-06, 1.7499999999982807e-06]</msg>
<status status="PASS" starttime="20201030 18:30:24.951" endtime="20201030 18:30:24.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.946" endtime="20201030 18:30:24.953"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:24.957" endtime="20201030 18:30:24.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.956" endtime="20201030 18:30:24.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.955" endtime="20201030 18:30:24.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.607" endtime="20201030 18:30:24.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.606" endtime="20201030 18:30:24.978"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.987" endtime="20201030 18:30:24.997"></status>
</kw>
<msg timestamp="20201030 18:30:24.998" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:24.986" endtime="20201030 18:30:24.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.000" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:24.999" endtime="20201030 18:30:25.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.002" endtime="20201030 18:30:25.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.983" endtime="20201030 18:30:25.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.980" endtime="20201030 18:30:25.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.011" endtime="20201030 18:30:25.281"></status>
</kw>
<msg timestamp="20201030 18:30:25.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019769208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01976975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:25.010" endtime="20201030 18:30:25.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019769208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01976975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:25.284" endtime="20201030 18:30:25.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.290" endtime="20201030 18:30:25.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.007" endtime="20201030 18:30:25.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.005" endtime="20201030 18:30:25.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:25.307" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:30:25.293" endtime="20201030 18:30:25.307"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.308" endtime="20201030 18:30:25.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.313" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:25.312" endtime="20201030 18:30:25.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.316" level="INFO">VALUE: {'sourcetime': [0.019769208, 0.01976975, 0.019771278, 0.019772944, 0.019774764, 0.019776653, 0.019778528, 0.019780444, 0.019782097, 0.019783819, 0.019785722, 0.019787431, 0.019789194, 0.019791111, 0.01979275, 0.019794528, 0.019796222, 0.019797889, 0.019799806, 0.019801639, 0.019803431, 0.019805153, 0.019807083, 0.019808917, 0.019810833, 0.019812611, 0.019814444, 0.019816222, 0.019817972, 0.019819819, 0.019821556, 0.019823208, 0.019825042, 0.019826597, 0.019828417, 0.019830208, 0.019832139, 0.019833764, 0.019835639, 0.019837569, 0.019839347, 0.019841028, 0.019842653, 0.019844528, 0.019846278, 0.019847944, 0.019849583, 0.01985125, 0.019853069, 0.019854778, 0.019856569], 'eventsource_diff': [0, 5.419999999992098e-07, 1.52800000000064e-06, 1.6660000000008612e-06, 1.8199999999995997e-06, 1.889000000001445e-06, 1.8749999999984057e-06, 1.9160000000011113e-06, 1.6529999999972955e-06, 1.7220000000026103e-06, 1.9029999999975455e-06, 1.709000000002514e-06, 1.762999999998377e-06, 1.917000000000585e-06, 1.639000000001195e-06, 1.7779999999974205e-06, 1.694000000000001e-06, 1.6670000000003349e-06, 1.917000000000585e-06, 1.832999999999696e-06, 1.7920000000004599e-06, 1.7219999999991409e-06, 1.930000000000681e-06, 1.8339999999991696e-06, 1.9160000000011113e-06, 1.77800000000089e-06, 1.832999999999696e-06, 1.77800000000089e-06, 1.7499999999982807e-06, 1.846999999999266e-06, 1.7370000000016539e-06, 1.6519999999978219e-06, 1.834000000002639e-06, 1.5550000000003061e-06, 1.8199999999995997e-06, 1.7909999999975168e-06, 1.931000000000155e-06, 1.6250000000016251e-06, 1.8749999999984057e-06, 1.930000000000681e-06, 1.77800000000089e-06, 1.6809999999999048e-06, 1.6249999999981557e-06, 1.8750000000018752e-06, 1.7499999999982807e-06, 1.6660000000008612e-06, 1.639000000001195e-06, 1.6670000000003349e-06, 1.819000000000126e-06, 1.7089999999990446e-06, 1.7910000000009862e-06], 'diff': [0, 5.419999999992098e-07, 1.52800000000064e-06, 1.6660000000008612e-06, 1.8199999999995997e-06, 1.889000000001445e-06, 1.8749999999984057e-06, 1.9160000000011113e-06, 1.6529999999972955e-06, 1.7220000000026103e-06, 1.9029999999975455e-06, 1.709000000002514e-06, 1.762999999998377e-06, 1.917000000000585e-06, 1.639000000001195e-06, 1.7779999999974205e-06, 1.694000000000001e-06, 1.6670000000003349e-06, 1.917000000000585e-06, 1.832999999999696e-06, 1.7920000000004599e-06, 1.7219999999991409e-06, 1.930000000000681e-06, 1.8339999999991696e-06, 1.9160000000011113e-06, 1.77800000000089e-06, 1.832999999999696e-06, 1.77800000000089e-06, 1.7499999999982807e-06, 1.846999999999266e-06, 1.7370000000016539e-06, 1.6519999999978219e-06, 1.834000000002639e-06, 1.5550000000003061e-06, 1.8199999999995997e-06, 1.7909999999975168e-06, 1.931000000000155e-06, 1.6250000000016251e-06, 1.8749999999984057e-06, 1.930000000000681e-06, 1.77800000000089e-06, 1.6809999999999048e-06, 1.6249999999981557e-06, 1.8750000000018752e-06, 1.7499999999982807e-06, 1.6660000000008612e-06, 1.639000000001195e-06, 1.6670000000003349e-06, 1.819000000000126e-06, 1.7089999999990446e-06, 1.7910000000009862e-06]}</msg>
<status status="PASS" starttime="20201030 18:30:25.314" endtime="20201030 18:30:25.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.310" endtime="20201030 18:30:25.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:25.321" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 1.6660000000008612e-06}, {'diff': 1.889000000001445e-06}, {'diff': 1.9160000000011113e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.709000000002514e-06}...</msg>
<status status="PASS" starttime="20201030 18:30:25.319" endtime="20201030 18:30:25.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:25.325" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 1.6660000000008612e-06, 1.889000000001445e-06, 1.9160000000011113e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.917000000000585e-06, 1.7779999999974205e-06, 1....</msg>
<status status="PASS" starttime="20201030 18:30:25.322" endtime="20201030 18:30:25.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.330" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:25.328" endtime="20201030 18:30:25.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.332" level="INFO">VALUE: [5.419999999992098e-07, 1.6660000000008612e-06, 1.889000000001445e-06, 1.9160000000011113e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.917000000000585e-06, 1.7779999999974205e-06, 1.6670000000003349e-06, 1.832999999999696e-06, 1.7219999999991409e-06, 1.8339999999991696e-06, 1.77800000000089e-06, 1.77800000000089e-06, 1.846999999999266e-06, 1.6519999999978219e-06, 1.5550000000003061e-06, 1.7909999999975168e-06, 1.6250000000016251e-06, 1.930000000000681e-06, 1.6809999999999048e-06, 1.8750000000018752e-06, 1.6660000000008612e-06, 1.6670000000003349e-06, 1.7089999999990446e-06]</msg>
<status status="PASS" starttime="20201030 18:30:25.331" endtime="20201030 18:30:25.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.326" endtime="20201030 18:30:25.333"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:25.337" endtime="20201030 18:30:25.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.336" endtime="20201030 18:30:25.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.334" endtime="20201030 18:30:25.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.979" endtime="20201030 18:30:25.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.978" endtime="20201030 18:30:25.358"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.366" endtime="20201030 18:30:25.377"></status>
</kw>
<msg timestamp="20201030 18:30:25.377" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:25.364" endtime="20201030 18:30:25.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.380" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:25.378" endtime="20201030 18:30:25.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.381" endtime="20201030 18:30:25.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.362" endtime="20201030 18:30:25.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.360" endtime="20201030 18:30:25.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.390" endtime="20201030 18:30:25.660"></status>
</kw>
<msg timestamp="20201030 18:30:25.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018969028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018969569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:25.389" endtime="20201030 18:30:25.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018969028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018969569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:25.663" endtime="20201030 18:30:25.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.669" endtime="20201030 18:30:25.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.386" endtime="20201030 18:30:25.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.384" endtime="20201030 18:30:25.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:25.685" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:30:25.672" endtime="20201030 18:30:25.686"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.687" endtime="20201030 18:30:25.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.691" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:25.690" endtime="20201030 18:30:25.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.695" level="INFO">VALUE: {'sourcetime': [0.018969028, 0.018969569, 0.018971139, 0.018972889, 0.018974806, 0.018976458, 0.018978375, 0.018980333, 0.018981958, 0.018983722, 0.018985403, 0.018987278, 0.018988917, 0.018990681, 0.018992389, 0.018994194, 0.018995875, 0.018997597, 0.018999458, 0.019001319, 0.019003236, 0.019005181, 0.019007083, 0.019008889, 0.019010778, 0.019012667, 0.019014528, 0.019016319, 0.019018056, 0.019019889, 0.019021569, 0.019023375, 0.019025194, 0.019026931, 0.019028833, 0.0190305, 0.019032111, 0.019033764, 0.019035444, 0.019037181, 0.019039056, 0.019040889, 0.019042528, 0.019044375, 0.019046042, 0.019047681, 0.019049319, 0.019051181, 0.019053014, 0.019054931, 0.019056792], 'eventsource_diff': [0, 5.409999999997361e-07, 1.5700000000028191e-06, 1.7499999999982807e-06, 1.917000000000585e-06, 1.6520000000012913e-06, 1.9169999999971155e-06, 1.957999999999821e-06, 1.6250000000016251e-06, 1.76400000000132e-06, 1.6809999999999048e-06, 1.8749999999984057e-06, 1.639000000001195e-06, 1.7639999999978506e-06, 1.707999999999571e-06, 1.8050000000005562e-06, 1.6809999999999048e-06, 1.7220000000026103e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.9449999999997247e-06, 1.9020000000015413e-06, 1.8060000000000298e-06, 1.8889999999979756e-06, 1.889000000001445e-06, 1.8609999999988358e-06, 1.7910000000009862e-06, 1.7369999999981844e-06, 1.8330000000031654e-06, 1.6799999999969617e-06, 1.8060000000000298e-06, 1.819000000000126e-06, 1.7370000000016539e-06, 1.901999999998072e-06, 1.6670000000003349e-06, 1.6110000000020552e-06, 1.653000000000765e-06, 1.6799999999969617e-06, 1.7370000000016539e-06, 1.8749999999984057e-06, 1.832999999999696e-06, 1.639000000001195e-06, 1.846999999999266e-06, 1.6670000000003349e-06, 1.639000000001195e-06, 1.637999999998252e-06, 1.862000000001779e-06, 1.832999999999696e-06, 1.917000000000585e-06, 1.8609999999988358e-06], 'diff': [0, 5.409999999997361e-07, 1.5700000000028191e-06, 1.7499999999982807e-06, 1.917000000000585e-06, 1.6520000000012913e-06, 1.9169999999971155e-06, 1.957999999999821e-06, 1.6250000000016251e-06, 1.76400000000132e-06, 1.6809999999999048e-06, 1.8749999999984057e-06, 1.639000000001195e-06, 1.7639999999978506e-06, 1.707999999999571e-06, 1.8050000000005562e-06, 1.6809999999999048e-06, 1.7220000000026103e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.9449999999997247e-06, 1.9020000000015413e-06, 1.8060000000000298e-06, 1.8889999999979756e-06, 1.889000000001445e-06, 1.8609999999988358e-06, 1.7910000000009862e-06, 1.7369999999981844e-06, 1.8330000000031654e-06, 1.6799999999969617e-06, 1.8060000000000298e-06, 1.819000000000126e-06, 1.7370000000016539e-06, 1.901999999998072e-06, 1.6670000000003349e-06, 1.6110000000020552e-06, 1.653000000000765e-06, 1.6799999999969617e-06, 1.7370000000016539e-06, 1.8749999999984057e-06, 1.832999999999696e-06, 1.639000000001195e-06, 1.846999999999266e-06, 1.6670000000003349e-06, 1.639000000001195e-06, 1.637999999998252e-06, 1.862000000001779e-06, 1.832999999999696e-06, 1.917000000000585e-06, 1.8609999999988358e-06]}</msg>
<status status="PASS" starttime="20201030 18:30:25.693" endtime="20201030 18:30:25.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.689" endtime="20201030 18:30:25.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:25.699" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 1.7499999999982807e-06}, {'diff': 1.6520000000012913e-06}, {'diff': 1.957999999999821e-06}, {'diff': 1.76400000000132e-06}, {'diff': 1.8749999999984057e-06},...</msg>
<status status="PASS" starttime="20201030 18:30:25.697" endtime="20201030 18:30:25.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:25.703" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 1.7499999999982807e-06, 1.6520000000012913e-06, 1.957999999999821e-06, 1.76400000000132e-06, 1.8749999999984057e-06, 1.7639999999978506e-06, 1.8050000000005562e-06, 1....</msg>
<status status="PASS" starttime="20201030 18:30:25.700" endtime="20201030 18:30:25.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.720" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:25.715" endtime="20201030 18:30:25.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.728" level="INFO">VALUE: [5.409999999997361e-07, 1.7499999999982807e-06, 1.6520000000012913e-06, 1.957999999999821e-06, 1.76400000000132e-06, 1.8749999999984057e-06, 1.7639999999978506e-06, 1.8050000000005562e-06, 1.7220000000026103e-06, 1.8609999999988358e-06, 1.9449999999997247e-06, 1.8060000000000298e-06, 1.889000000001445e-06, 1.7910000000009862e-06, 1.8330000000031654e-06, 1.8060000000000298e-06, 1.7370000000016539e-06, 1.6670000000003349e-06, 1.653000000000765e-06, 1.7370000000016539e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.639000000001195e-06, 1.862000000001779e-06, 1.917000000000585e-06]</msg>
<status status="PASS" starttime="20201030 18:30:25.724" endtime="20201030 18:30:25.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.705" endtime="20201030 18:30:25.732"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:25.745" endtime="20201030 18:30:25.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.739" endtime="20201030 18:30:25.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.735" endtime="20201030 18:30:25.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.359" endtime="20201030 18:30:25.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.358" endtime="20201030 18:30:25.776"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.786" endtime="20201030 18:30:25.796"></status>
</kw>
<msg timestamp="20201030 18:30:25.797" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:25.785" endtime="20201030 18:30:25.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.800" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:25.798" endtime="20201030 18:30:25.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.801" endtime="20201030 18:30:25.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.782" endtime="20201030 18:30:25.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.780" endtime="20201030 18:30:25.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.811" endtime="20201030 18:30:26.079"></status>
</kw>
<msg timestamp="20201030 18:30:26.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029157792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029158333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:25.809" endtime="20201030 18:30:26.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029157792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029158333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:26.086" endtime="20201030 18:30:26.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.098" endtime="20201030 18:30:26.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.806" endtime="20201030 18:30:26.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.804" endtime="20201030 18:30:26.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:26.138" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:30:26.105" endtime="20201030 18:30:26.138"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.140" endtime="20201030 18:30:26.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.151" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:26.149" endtime="20201030 18:30:26.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.158" level="INFO">VALUE: {'sourcetime': [0.029157792, 0.029158333, 0.029159722, 0.029161569, 0.029163389, 0.02916525, 0.029167028, 0.029168903, 0.029170819, 0.029172556, 0.029174208, 0.029175944, 0.029177819, 0.029179625, 0.029181458, 0.029183333, 0.029185097, 0.029186833, 0.029188472, 0.029190333, 0.02919225, 0.029194069, 0.029195972, 0.029197611, 0.029199319, 0.029200986, 0.029202819, 0.0292045, 0.029206264, 0.029208028, 0.029209694, 0.029211611, 0.02921325, 0.029215181, 0.029216875, 0.029218556, 0.029220236, 0.029222056, 0.029223764, 0.029225431, 0.029227292, 0.029229097, 0.029230736, 0.029232639, 0.029234458, 0.029236361, 0.029238208, 0.029240056, 0.029241847, 0.029243708, 0.0292455], 'eventsource_diff': [0, 5.410000000032056e-07, 1.3889999999974756e-06, 1.846999999999266e-06, 1.8200000000030692e-06, 1.8609999999988358e-06, 1.77800000000089e-06, 1.8749999999984057e-06, 1.9160000000011113e-06, 1.7369999999981844e-06, 1.6520000000012913e-06, 1.7359999999987108e-06, 1.8750000000018752e-06, 1.8060000000000298e-06, 1.832999999999696e-06, 1.8749999999984057e-06, 1.76400000000132e-06, 1.7359999999987108e-06, 1.639000000001195e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.819000000000126e-06, 1.903000000001015e-06, 1.6389999999977256e-06, 1.7080000000030404e-06, 1.6670000000003349e-06, 1.832999999999696e-06, 1.6809999999999048e-06, 1.7639999999978506e-06, 1.76400000000132e-06, 1.6660000000008612e-06, 1.9169999999971155e-06, 1.639000000001195e-06, 1.931000000000155e-06, 1.694000000000001e-06, 1.6809999999999048e-06, 1.6800000000004311e-06, 1.8199999999995997e-06, 1.707999999999571e-06, 1.6670000000003349e-06, 1.8609999999988358e-06, 1.8050000000005562e-06, 1.639000000001195e-06, 1.903000000001015e-06, 1.819000000000126e-06, 1.9029999999975455e-06, 1.8470000000027353e-06, 1.8479999999987395e-06, 1.7910000000009862e-06, 1.8609999999988358e-06, 1.7920000000004599e-06], 'diff': [0, 5.410000000032056e-07, 1.3889999999974756e-06, 1.846999999999266e-06, 1.8200000000030692e-06, 1.8609999999988358e-06, 1.77800000000089e-06, 1.8749999999984057e-06, 1.9160000000011113e-06, 1.7369999999981844e-06, 1.6520000000012913e-06, 1.7359999999987108e-06, 1.8750000000018752e-06, 1.8060000000000298e-06, 1.832999999999696e-06, 1.8749999999984057e-06, 1.76400000000132e-06, 1.7359999999987108e-06, 1.639000000001195e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.819000000000126e-06, 1.903000000001015e-06, 1.6389999999977256e-06, 1.7080000000030404e-06, 1.6670000000003349e-06, 1.832999999999696e-06, 1.6809999999999048e-06, 1.7639999999978506e-06, 1.76400000000132e-06, 1.6660000000008612e-06, 1.9169999999971155e-06, 1.639000000001195e-06, 1.931000000000155e-06, 1.694000000000001e-06, 1.6809999999999048e-06, 1.6800000000004311e-06, 1.8199999999995997e-06, 1.707999999999571e-06, 1.6670000000003349e-06, 1.8609999999988358e-06, 1.8050000000005562e-06, 1.639000000001195e-06, 1.903000000001015e-06, 1.819000000000126e-06, 1.9029999999975455e-06, 1.8470000000027353e-06, 1.8479999999987395e-06, 1.7910000000009862e-06, 1.8609999999988358e-06, 1.7920000000004599e-06]}</msg>
<status status="PASS" starttime="20201030 18:30:26.153" endtime="20201030 18:30:26.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.145" endtime="20201030 18:30:26.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:26.164" level="INFO">${RESULT} = [{'diff': 5.410000000032056e-07}, {'diff': 1.846999999999266e-06}, {'diff': 1.8609999999988358e-06}, {'diff': 1.8749999999984057e-06}, {'diff': 1.7369999999981844e-06}, {'diff': 1.7359999999987108e-06...</msg>
<status status="PASS" starttime="20201030 18:30:26.161" endtime="20201030 18:30:26.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:26.167" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.410000000032056e-07, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.7369999999981844e-06, 1.7359999999987108e-06, 1.8060000000000298e-06, 1.8749999999984057e-06, ...</msg>
<status status="PASS" starttime="20201030 18:30:26.165" endtime="20201030 18:30:26.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.171" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:26.170" endtime="20201030 18:30:26.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.173" level="INFO">VALUE: [5.410000000032056e-07, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.7369999999981844e-06, 1.7359999999987108e-06, 1.8060000000000298e-06, 1.8749999999984057e-06, 1.7359999999987108e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.6389999999977256e-06, 1.6670000000003349e-06, 1.6809999999999048e-06, 1.76400000000132e-06, 1.9169999999971155e-06, 1.931000000000155e-06, 1.6809999999999048e-06, 1.8199999999995997e-06, 1.6670000000003349e-06, 1.8050000000005562e-06, 1.903000000001015e-06, 1.9029999999975455e-06, 1.8479999999987395e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201030 18:30:26.172" endtime="20201030 18:30:26.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.168" endtime="20201030 18:30:26.174"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:26.179" endtime="20201030 18:30:26.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.176" endtime="20201030 18:30:26.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.175" endtime="20201030 18:30:26.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.778" endtime="20201030 18:30:26.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.777" endtime="20201030 18:30:26.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.623" endtime="20201030 18:30:26.200"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:26.204" endtime="20201030 18:30:26.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.202" endtime="20201030 18:30:26.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.201" endtime="20201030 18:30:26.224"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:18.554" endtime="20201030 18:30:26.224" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:26.231" endtime="20201030 18:30:26.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.229" endtime="20201030 18:30:26.251"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.264" endtime="20201030 18:30:26.278"></status>
</kw>
<msg timestamp="20201030 18:30:26.278" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:26.263" endtime="20201030 18:30:26.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.281" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:26.279" endtime="20201030 18:30:26.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.283" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:26.282" endtime="20201030 18:30:26.284"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:26.260" endtime="20201030 18:30:26.284"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:26.258" endtime="20201030 18:30:26.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.257" endtime="20201030 18:30:26.286"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:26.290" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:26.289" endtime="20201030 18:30:26.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.287" endtime="20201030 18:30:26.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.256" endtime="20201030 18:30:26.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.255" endtime="20201030 18:30:26.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.291" endtime="20201030 18:30:26.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.253" endtime="20201030 18:30:26.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.251" endtime="20201030 18:30:26.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.228" endtime="20201030 18:30:26.294"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.302" endtime="20201030 18:30:26.313"></status>
</kw>
<msg timestamp="20201030 18:30:26.313" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:26.301" endtime="20201030 18:30:26.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.316" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:26.314" endtime="20201030 18:30:26.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.317" endtime="20201030 18:30:26.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.298" endtime="20201030 18:30:26.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.297" endtime="20201030 18:30:26.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.328" endtime="20201030 18:30:26.617"></status>
</kw>
<msg timestamp="20201030 18:30:26.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0626335, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062634625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:30:26.326" endtime="20201030 18:30:26.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0626335, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062634625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:30:26.622" endtime="20201030 18:30:26.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.630" endtime="20201030 18:30:26.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.322" endtime="20201030 18:30:26.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.320" endtime="20201030 18:30:26.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:26.637" level="INFO">${RESULT} = [{'diff': 1.1250000000045945e-06}, {'diff': 6.669999999958653e-07}, {'diff': 6.520000000037607e-07}, {'diff': 6.250000000040945e-07}, {'diff': 6.949999999950052e-07}, {'diff': 6.949999999950052e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:30:26.634" endtime="20201030 18:30:26.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:26.641" level="INFO">${OVERHEAD} = {'diff': [1.1250000000045945e-06, 6.669999999958653e-07, 6.520000000037607e-07, 6.250000000040945e-07, 6.949999999950052e-07, 6.949999999950052e-07, 7.080000000020403e-07, 6.810000000023742e-07, 7.080...</msg>
<status status="PASS" starttime="20201030 18:30:26.638" endtime="20201030 18:30:26.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.646" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:26.644" endtime="20201030 18:30:26.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.648" level="INFO">VALUE: [1.1250000000045945e-06, 6.669999999958653e-07, 6.520000000037607e-07, 6.250000000040945e-07, 6.949999999950052e-07, 6.949999999950052e-07, 7.080000000020403e-07, 6.810000000023742e-07, 7.080000000020403e-07, 6.810000000023742e-07, 6.939999999955315e-07, 6.939999999955315e-07, 6.800000000029005e-07, 6.800000000029005e-07, 6.669999999958653e-07, 6.810000000023742e-07, 6.939999999955315e-07, 6.670000000097431e-07, 6.810000000023742e-07, 6.800000000029005e-07, 7.080000000020403e-07, 6.939999999955315e-07, 6.810000000023742e-07, 6.389999999967255e-07, 7.080000000020403e-07, 7.370000000006538e-07, 7.219999999946713e-07, 7.360000000011802e-07, 7.080000000020403e-07, 6.810000000023742e-07, 6.810000000023742e-07, 6.949999999950052e-07, 6.810000000023742e-07, 6.940000000094093e-07, 6.810000000023742e-07, 6.810000000023742e-07, 6.799999999890227e-07, 6.669999999958653e-07, 6.949999999950052e-07, 6.800000000029005e-07, 6.810000000023742e-07, 6.800000000029005e-07, 6.940000000094093e-07, 6.949999999950052e-07, 7.080000000020403e-07, 6.800000000029005e-07, 7.09000000001514e-07, 6.810000000023742e-07, 6.939999999955315e-07, 6.939999999955315e-07]</msg>
<status status="PASS" starttime="20201030 18:30:26.647" endtime="20201030 18:30:26.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.642" endtime="20201030 18:30:26.650"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:26.653" endtime="20201030 18:30:26.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.652" endtime="20201030 18:30:26.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.651" endtime="20201030 18:30:26.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.295" endtime="20201030 18:30:26.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.295" endtime="20201030 18:30:26.674"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.683" endtime="20201030 18:30:26.695"></status>
</kw>
<msg timestamp="20201030 18:30:26.695" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:26.682" endtime="20201030 18:30:26.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.698" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:26.697" endtime="20201030 18:30:26.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.699" endtime="20201030 18:30:26.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.679" endtime="20201030 18:30:26.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.676" endtime="20201030 18:30:26.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.709" endtime="20201030 18:30:27.013"></status>
</kw>
<msg timestamp="20201030 18:30:27.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020902014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020903153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:26.707" endtime="20201030 18:30:27.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020902014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020903153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:27.017" endtime="20201030 18:30:27.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.026" endtime="20201030 18:30:27.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.704" endtime="20201030 18:30:27.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.702" endtime="20201030 18:30:27.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:27.032" level="INFO">${RESULT} = [{'diff': 1.139000000000695e-06}, {'diff': 6.110000000010551e-07}, {'diff': 7.079999999985709e-07}, {'diff': 6.529999999997649e-07}, {'diff': 7.079999999985709e-07}, {'diff': 6.93999999999001e-07}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:27.029" endtime="20201030 18:30:27.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:27.037" level="INFO">${OVERHEAD} = {'diff': [1.139000000000695e-06, 6.110000000010551e-07, 7.079999999985709e-07, 6.529999999997649e-07, 7.079999999985709e-07, 6.93999999999001e-07, 6.950000000019441e-07, 6.93999999999001e-07, 6.949999...</msg>
<status status="PASS" starttime="20201030 18:30:27.033" endtime="20201030 18:30:27.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.042" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:27.041" endtime="20201030 18:30:27.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.045" level="INFO">VALUE: [1.139000000000695e-06, 6.110000000010551e-07, 7.079999999985709e-07, 6.529999999997649e-07, 7.079999999985709e-07, 6.93999999999001e-07, 6.950000000019441e-07, 6.93999999999001e-07, 6.949999999984746e-07, 7.079999999985709e-07, 6.949999999984746e-07, 6.949999999984746e-07, 6.93999999999001e-07, 6.380000000007213e-07, 6.93999999999001e-07, 6.93999999999001e-07, 6.940000000024704e-07, 6.39000000000195e-07, 6.93999999999001e-07, 6.529999999997649e-07, 6.799999999994311e-07, 6.93999999999001e-07, 7.080000000020403e-07, 7.079999999985709e-07, 6.950000000019441e-07, 6.669999999993348e-07, 7.089999999980445e-07, 6.799999999994311e-07, 7.220000000016102e-07, 6.949999999984746e-07, 6.810000000023742e-07, 6.940000000024704e-07, 6.799999999994311e-07, 6.93999999999001e-07, 6.93999999999001e-07, 6.949999999984746e-07, 7.079999999985709e-07, 6.940000000024704e-07, 6.949999999984746e-07, 6.949999999984746e-07, 6.799999999994311e-07, 6.800000000029005e-07, 6.93999999999001e-07, 6.949999999984746e-07, 6.669999999993348e-07, 6.950000000019441e-07, 6.950000000019441e-07, 6.940000000024704e-07, 6.799999999994311e-07, 7.079999999985709e-07]</msg>
<status status="PASS" starttime="20201030 18:30:27.043" endtime="20201030 18:30:27.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.038" endtime="20201030 18:30:27.046"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:27.050" endtime="20201030 18:30:27.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.048" endtime="20201030 18:30:27.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.047" endtime="20201030 18:30:27.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.675" endtime="20201030 18:30:27.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.675" endtime="20201030 18:30:27.070"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.079" endtime="20201030 18:30:27.091"></status>
</kw>
<msg timestamp="20201030 18:30:27.091" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:27.077" endtime="20201030 18:30:27.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.094" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:27.092" endtime="20201030 18:30:27.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.095" endtime="20201030 18:30:27.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.074" endtime="20201030 18:30:27.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.072" endtime="20201030 18:30:27.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.104" endtime="20201030 18:30:27.385"></status>
</kw>
<msg timestamp="20201030 18:30:27.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019994653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019995778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:27.103" endtime="20201030 18:30:27.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019994653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019995778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:27.389" endtime="20201030 18:30:27.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.398" endtime="20201030 18:30:27.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.100" endtime="20201030 18:30:27.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.098" endtime="20201030 18:30:27.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:27.404" level="INFO">${RESULT} = [{'diff': 1.1249999999976557e-06}, {'diff': 7.09000000001514e-07}, {'diff': 6.799999999994311e-07}, {'diff': 6.949999999984746e-07}, {'diff': 7.359999999977107e-07}, {'diff': 6.250000000006251e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:30:27.401" endtime="20201030 18:30:27.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:27.409" level="INFO">${OVERHEAD} = {'diff': [1.1249999999976557e-06, 7.09000000001514e-07, 6.799999999994311e-07, 6.949999999984746e-07, 7.359999999977107e-07, 6.250000000006251e-07, 6.940000000024704e-07, 6.39000000000195e-07, 6.80999...</msg>
<status status="PASS" starttime="20201030 18:30:27.405" endtime="20201030 18:30:27.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.414" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:27.413" endtime="20201030 18:30:27.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.416" level="INFO">VALUE: [1.1249999999976557e-06, 7.09000000001514e-07, 6.799999999994311e-07, 6.949999999984746e-07, 7.359999999977107e-07, 6.250000000006251e-07, 6.940000000024704e-07, 6.39000000000195e-07, 6.809999999989047e-07, 6.940000000024704e-07, 6.799999999994311e-07, 6.950000000019441e-07, 6.809999999989047e-07, 6.940000000024704e-07, 6.799999999994311e-07, 7.089999999980445e-07, 6.950000000019441e-07, 6.670000000028042e-07, 7.229999999976144e-07, 6.529999999997649e-07, 6.810000000023742e-07, 6.799999999994311e-07, 6.93999999999001e-07, 6.810000000023742e-07, 6.810000000023742e-07, 6.940000000024704e-07, 6.529999999997649e-07, 6.520000000002912e-07, 6.530000000032343e-07, 6.670000000028042e-07, 7.230000000010839e-07, 6.93999999999001e-07, 6.949999999984746e-07, 6.659999999998611e-07, 6.949999999984746e-07, 6.799999999994311e-07, 6.950000000019441e-07, 6.949999999984746e-07, 6.799999999994311e-07, 7.080000000020403e-07, 6.809999999989047e-07, 6.93999999999001e-07, 6.940000000024704e-07, 7.080000000020403e-07, 6.810000000023742e-07, 6.950000000019441e-07, 6.809999999989047e-07, 6.809999999989047e-07, 6.93999999999001e-07, 6.949999999984746e-07]</msg>
<status status="PASS" starttime="20201030 18:30:27.415" endtime="20201030 18:30:27.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.410" endtime="20201030 18:30:27.417"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:27.421" endtime="20201030 18:30:27.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.419" endtime="20201030 18:30:27.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.418" endtime="20201030 18:30:27.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.071" endtime="20201030 18:30:27.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.071" endtime="20201030 18:30:27.441"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.449" endtime="20201030 18:30:27.462"></status>
</kw>
<msg timestamp="20201030 18:30:27.462" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:27.448" endtime="20201030 18:30:27.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.466" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:27.463" endtime="20201030 18:30:27.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.468" endtime="20201030 18:30:27.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.445" endtime="20201030 18:30:27.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.443" endtime="20201030 18:30:27.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.480" endtime="20201030 18:30:27.794"></status>
</kw>
<msg timestamp="20201030 18:30:27.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019520444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019521556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:27.478" endtime="20201030 18:30:27.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019520444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019521556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:27.801" endtime="20201030 18:30:27.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.815" endtime="20201030 18:30:27.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.474" endtime="20201030 18:30:27.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.472" endtime="20201030 18:30:27.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:27.822" level="INFO">${RESULT} = [{'diff': 1.1119999999975594e-06}, {'diff': 6.940000000024704e-07}, {'diff': 6.39000000000195e-07}, {'diff': 7.220000000016102e-07}, {'diff': 6.529999999997649e-07}, {'diff': 6.950000000019441e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:30:27.819" endtime="20201030 18:30:27.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:27.828" level="INFO">${OVERHEAD} = {'diff': [1.1119999999975594e-06, 6.940000000024704e-07, 6.39000000000195e-07, 7.220000000016102e-07, 6.529999999997649e-07, 6.950000000019441e-07, 6.799999999994311e-07, 6.799999999994311e-07, 6.9400...</msg>
<status status="PASS" starttime="20201030 18:30:27.823" endtime="20201030 18:30:27.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.835" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:27.833" endtime="20201030 18:30:27.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.837" level="INFO">VALUE: [1.1119999999975594e-06, 6.940000000024704e-07, 6.39000000000195e-07, 7.220000000016102e-07, 6.529999999997649e-07, 6.950000000019441e-07, 6.799999999994311e-07, 6.799999999994311e-07, 6.940000000024704e-07, 6.950000000019441e-07, 6.669999999993348e-07, 6.93999999999001e-07, 6.520000000002912e-07, 6.799999999994311e-07, 6.810000000023742e-07, 7.080000000020403e-07, 6.93999999999001e-07, 6.39000000000195e-07, 6.810000000023742e-07, 7.220000000016102e-07, 6.93999999999001e-07, 6.810000000023742e-07, 6.799999999994311e-07, 6.669999999993348e-07, 6.950000000019441e-07, 6.93999999999001e-07, 6.809999999989047e-07, 6.950000000019441e-07, 7.219999999981408e-07, 6.949999999984746e-07, 6.940000000024704e-07, 6.810000000023742e-07, 6.669999999993348e-07, 6.799999999994311e-07, 6.809999999989047e-07, 6.809999999989047e-07, 6.799999999994311e-07, 6.799999999994311e-07, 6.940000000024704e-07, 6.940000000024704e-07, 6.950000000019441e-07, 6.39000000000195e-07, 6.93999999999001e-07, 6.799999999994311e-07, 6.93999999999001e-07, 6.949999999984746e-07, 6.93999999999001e-07, 6.950000000019441e-07, 6.799999999994311e-07, 6.93999999999001e-07]</msg>
<status status="PASS" starttime="20201030 18:30:27.836" endtime="20201030 18:30:27.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.828" endtime="20201030 18:30:27.838"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:27.842" endtime="20201030 18:30:27.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.840" endtime="20201030 18:30:27.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.839" endtime="20201030 18:30:27.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.442" endtime="20201030 18:30:27.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.442" endtime="20201030 18:30:27.863"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.871" endtime="20201030 18:30:27.883"></status>
</kw>
<msg timestamp="20201030 18:30:27.884" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:27.870" endtime="20201030 18:30:27.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.886" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:27.885" endtime="20201030 18:30:27.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.887" endtime="20201030 18:30:27.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.867" endtime="20201030 18:30:27.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.865" endtime="20201030 18:30:27.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.897" endtime="20201030 18:30:28.178"></status>
</kw>
<msg timestamp="20201030 18:30:28.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021138014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021139139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:27.895" endtime="20201030 18:30:28.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:28.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021138014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021139139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:28.182" endtime="20201030 18:30:28.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:28.191" endtime="20201030 18:30:28.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.893" endtime="20201030 18:30:28.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.891" endtime="20201030 18:30:28.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:28.201" level="INFO">${RESULT} = [{'diff': 1.125000000001125e-06}, {'diff': 6.39000000000195e-07}, {'diff': 7.089999999980445e-07}, {'diff': 7.359999999977107e-07}, {'diff': 6.799999999994311e-07}, {'diff': 7.089999999980445e-07}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:28.195" endtime="20201030 18:30:28.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:28.208" level="INFO">${OVERHEAD} = {'diff': [1.125000000001125e-06, 6.39000000000195e-07, 7.089999999980445e-07, 7.359999999977107e-07, 6.799999999994311e-07, 7.089999999980445e-07, 6.940000000024704e-07, 6.93999999999001e-07, 7.079999...</msg>
<status status="PASS" starttime="20201030 18:30:28.204" endtime="20201030 18:30:28.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:28.213" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:28.211" endtime="20201030 18:30:28.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:28.216" level="INFO">VALUE: [1.125000000001125e-06, 6.39000000000195e-07, 7.089999999980445e-07, 7.359999999977107e-07, 6.799999999994311e-07, 7.089999999980445e-07, 6.940000000024704e-07, 6.93999999999001e-07, 7.079999999985709e-07, 6.809999999989047e-07, 7.230000000010839e-07, 6.39000000000195e-07, 6.949999999984746e-07, 7.500000000007501e-07, 7.080000000020403e-07, 6.809999999989047e-07, 6.93999999999001e-07, 6.659999999998611e-07, 6.529999999997649e-07, 7.079999999985709e-07, 7.219999999981408e-07, 6.800000000029005e-07, 7.219999999981408e-07, 6.669999999993348e-07, 6.940000000024704e-07, 6.949999999984746e-07, 6.809999999989047e-07, 6.940000000024704e-07, 6.950000000019441e-07, 6.809999999989047e-07, 6.379999999972519e-07, 7.230000000010839e-07, 6.93999999999001e-07, 6.949999999984746e-07, 6.529999999997649e-07, 6.810000000023742e-07, 6.940000000024704e-07, 6.93999999999001e-07, 7.360000000011802e-07, 7.089999999980445e-07, 6.810000000023742e-07, 6.949999999984746e-07, 6.659999999998611e-07, 6.950000000019441e-07, 6.950000000019441e-07, 7.089999999980445e-07, 6.799999999994311e-07, 6.950000000019441e-07, 6.949999999984746e-07, 6.809999999989047e-07]</msg>
<status status="PASS" starttime="20201030 18:30:28.215" endtime="20201030 18:30:28.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.209" endtime="20201030 18:30:28.218"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:28.222" endtime="20201030 18:30:28.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.221" endtime="20201030 18:30:28.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.220" endtime="20201030 18:30:28.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.864" endtime="20201030 18:30:28.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.863" endtime="20201030 18:30:28.244"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:28.251" endtime="20201030 18:30:28.262"></status>
</kw>
<msg timestamp="20201030 18:30:28.262" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:28.250" endtime="20201030 18:30:28.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:28.265" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:28.263" endtime="20201030 18:30:28.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:28.266" endtime="20201030 18:30:28.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.247" endtime="20201030 18:30:28.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.246" endtime="20201030 18:30:28.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:28.275" endtime="20201030 18:30:28.580"></status>
</kw>
<msg timestamp="20201030 18:30:28.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019510333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019511458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:28.273" endtime="20201030 18:30:28.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:28.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019510333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019511458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:28.588" endtime="20201030 18:30:28.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:28.596" endtime="20201030 18:30:28.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.271" endtime="20201030 18:30:28.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.269" endtime="20201030 18:30:28.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:28.603" level="INFO">${RESULT} = [{'diff': 1.1249999999976557e-06}, {'diff': 6.659999999998611e-07}, {'diff': 6.950000000019441e-07}, {'diff': 6.93999999999001e-07}, {'diff': 6.529999999997649e-07}, {'diff': 6.810000000023742e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:30:28.600" endtime="20201030 18:30:28.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:28.608" level="INFO">${OVERHEAD} = {'diff': [1.1249999999976557e-06, 6.659999999998611e-07, 6.950000000019441e-07, 6.93999999999001e-07, 6.529999999997649e-07, 6.810000000023742e-07, 7.630000000008463e-07, 6.949999999984746e-07, 6.9399...</msg>
<status status="PASS" starttime="20201030 18:30:28.604" endtime="20201030 18:30:28.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:28.612" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:28.611" endtime="20201030 18:30:28.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:28.614" level="INFO">VALUE: [1.1249999999976557e-06, 6.659999999998611e-07, 6.950000000019441e-07, 6.93999999999001e-07, 6.529999999997649e-07, 6.810000000023742e-07, 7.630000000008463e-07, 6.949999999984746e-07, 6.93999999999001e-07, 7.080000000020403e-07, 6.950000000019441e-07, 6.799999999994311e-07, 6.810000000023742e-07, 6.809999999989047e-07, 7.079999999985709e-07, 6.670000000028042e-07, 7.089999999980445e-07, 7.219999999981408e-07, 7.079999999985709e-07, 6.799999999994311e-07, 6.949999999984746e-07, 6.950000000019441e-07, 6.950000000019441e-07, 6.93999999999001e-07, 6.110000000010551e-07, 6.940000000024704e-07, 6.809999999989047e-07, 6.799999999994311e-07, 7.230000000010839e-07, 6.940000000024704e-07, 6.93999999999001e-07, 6.810000000023742e-07, 6.93999999999001e-07, 6.93999999999001e-07, 6.93999999999001e-07, 6.809999999989047e-07, 7.220000000016102e-07, 6.940000000024704e-07, 6.800000000029005e-07, 6.950000000019441e-07, 6.809999999989047e-07, 7.079999999985709e-07, 6.659999999998611e-07, 6.950000000019441e-07, 6.949999999984746e-07, 6.93999999999001e-07, 7.219999999981408e-07, 6.949999999984746e-07, 6.949999999984746e-07, 6.93999999999001e-07]</msg>
<status status="PASS" starttime="20201030 18:30:28.613" endtime="20201030 18:30:28.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.609" endtime="20201030 18:30:28.615"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:28.619" endtime="20201030 18:30:28.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.617" endtime="20201030 18:30:28.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.616" endtime="20201030 18:30:28.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.244" endtime="20201030 18:30:28.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.244" endtime="20201030 18:30:28.639"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:28.647" endtime="20201030 18:30:28.658"></status>
</kw>
<msg timestamp="20201030 18:30:28.659" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:28.646" endtime="20201030 18:30:28.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:28.661" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:28.660" endtime="20201030 18:30:28.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:28.662" endtime="20201030 18:30:28.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.643" endtime="20201030 18:30:28.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.641" endtime="20201030 18:30:28.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:28.671" endtime="20201030 18:30:28.962"></status>
</kw>
<msg timestamp="20201030 18:30:28.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019601153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019602306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:28.669" endtime="20201030 18:30:28.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:28.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019601153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019602306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:28.966" endtime="20201030 18:30:28.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:28.980" endtime="20201030 18:30:28.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.667" endtime="20201030 18:30:28.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.665" endtime="20201030 18:30:28.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:28.988" level="INFO">${RESULT} = [{'diff': 1.153000000000265e-06}, {'diff': 6.809999999989047e-07}, {'diff': 6.949999999984746e-07}, {'diff': 6.39000000000195e-07}, {'diff': 6.799999999994311e-07}, {'diff': 6.250000000006251e-07}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:28.985" endtime="20201030 18:30:28.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:28.992" level="INFO">${OVERHEAD} = {'diff': [1.153000000000265e-06, 6.809999999989047e-07, 6.949999999984746e-07, 6.39000000000195e-07, 6.799999999994311e-07, 6.250000000006251e-07, 6.800000000029005e-07, 6.93999999999001e-07, 6.950000...</msg>
<status status="PASS" starttime="20201030 18:30:28.989" endtime="20201030 18:30:28.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:28.997" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:28.996" endtime="20201030 18:30:28.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:28.999" level="INFO">VALUE: [1.153000000000265e-06, 6.809999999989047e-07, 6.949999999984746e-07, 6.39000000000195e-07, 6.799999999994311e-07, 6.250000000006251e-07, 6.800000000029005e-07, 6.93999999999001e-07, 6.950000000019441e-07, 6.809999999989047e-07, 6.949999999984746e-07, 6.940000000024704e-07, 6.93999999999001e-07, 6.93999999999001e-07, 6.949999999984746e-07, 6.799999999994311e-07, 6.809999999989047e-07, 6.799999999994311e-07, 6.940000000024704e-07, 7.220000000016102e-07, 7.089999999980445e-07, 6.39000000000195e-07, 6.93999999999001e-07, 6.799999999994311e-07, 7.09000000001514e-07, 6.799999999994311e-07, 6.93999999999001e-07, 6.949999999984746e-07, 6.810000000023742e-07, 6.940000000024704e-07, 6.950000000019441e-07, 6.669999999993348e-07, 6.93999999999001e-07, 6.93999999999001e-07, 6.949999999984746e-07, 7.359999999977107e-07, 6.809999999989047e-07, 6.810000000023742e-07, 6.809999999989047e-07, 6.810000000023742e-07, 6.93999999999001e-07, 6.809999999989047e-07, 6.93999999999001e-07, 6.799999999994311e-07, 6.93999999999001e-07, 6.93999999999001e-07, 6.949999999984746e-07, 6.93999999999001e-07, 6.810000000023742e-07, 6.669999999993348e-07]</msg>
<status status="PASS" starttime="20201030 18:30:28.998" endtime="20201030 18:30:29.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.993" endtime="20201030 18:30:29.000"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:29.004" endtime="20201030 18:30:29.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.002" endtime="20201030 18:30:29.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.001" endtime="20201030 18:30:29.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.640" endtime="20201030 18:30:29.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.640" endtime="20201030 18:30:29.025"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:29.033" endtime="20201030 18:30:29.044"></status>
</kw>
<msg timestamp="20201030 18:30:29.044" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:29.031" endtime="20201030 18:30:29.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.047" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:29.046" endtime="20201030 18:30:29.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:29.048" endtime="20201030 18:30:29.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.029" endtime="20201030 18:30:29.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.027" endtime="20201030 18:30:29.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:29.059" endtime="20201030 18:30:29.361"></status>
</kw>
<msg timestamp="20201030 18:30:29.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019816097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019817278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:29.057" endtime="20201030 18:30:29.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019816097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019817278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:29.370" endtime="20201030 18:30:29.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:29.389" endtime="20201030 18:30:29.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.054" endtime="20201030 18:30:29.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.052" endtime="20201030 18:30:29.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:29.399" level="INFO">${RESULT} = [{'diff': 1.1809999999994047e-06}, {'diff': 6.950000000019441e-07}, {'diff': 7.219999999981408e-07}, {'diff': 6.810000000023742e-07}, {'diff': 6.940000000024704e-07}, {'diff': 6.940000000024704e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:30:29.396" endtime="20201030 18:30:29.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:29.404" level="INFO">${OVERHEAD} = {'diff': [1.1809999999994047e-06, 6.950000000019441e-07, 7.219999999981408e-07, 6.810000000023742e-07, 6.940000000024704e-07, 6.940000000024704e-07, 6.950000000019441e-07, 6.950000000019441e-07, 6.949...</msg>
<status status="PASS" starttime="20201030 18:30:29.401" endtime="20201030 18:30:29.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.408" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:29.407" endtime="20201030 18:30:29.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.410" level="INFO">VALUE: [1.1809999999994047e-06, 6.950000000019441e-07, 7.219999999981408e-07, 6.810000000023742e-07, 6.940000000024704e-07, 6.940000000024704e-07, 6.950000000019441e-07, 6.950000000019441e-07, 6.949999999984746e-07, 6.949999999984746e-07, 6.949999999984746e-07, 7.089999999980445e-07, 6.799999999994311e-07, 6.940000000024704e-07, 6.800000000029005e-07, 7.080000000020403e-07, 6.799999999994311e-07, 7.219999999981408e-07, 7.230000000010839e-07, 6.669999999993348e-07, 6.93999999999001e-07, 7.079999999985709e-07, 6.670000000028042e-07, 6.799999999994311e-07, 6.669999999993348e-07, 6.799999999994311e-07, 7.360000000011802e-07, 6.949999999984746e-07, 6.950000000019441e-07, 6.93999999999001e-07, 6.809999999989047e-07, 7.09000000001514e-07, 6.799999999994311e-07, 6.670000000028042e-07, 6.950000000019441e-07, 6.949999999984746e-07, 6.950000000019441e-07, 6.949999999984746e-07, 6.809999999989047e-07, 6.93999999999001e-07, 6.93999999999001e-07, 6.949999999984746e-07, 6.809999999989047e-07, 6.93999999999001e-07, 6.799999999994311e-07, 6.949999999984746e-07, 6.799999999994311e-07, 6.93999999999001e-07, 6.93999999999001e-07, 6.950000000019441e-07]</msg>
<status status="PASS" starttime="20201030 18:30:29.409" endtime="20201030 18:30:29.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.405" endtime="20201030 18:30:29.412"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:29.416" endtime="20201030 18:30:29.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.414" endtime="20201030 18:30:29.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.413" endtime="20201030 18:30:29.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.026" endtime="20201030 18:30:29.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.025" endtime="20201030 18:30:29.436"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:29.444" endtime="20201030 18:30:29.455"></status>
</kw>
<msg timestamp="20201030 18:30:29.456" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:29.443" endtime="20201030 18:30:29.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.458" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:29.457" endtime="20201030 18:30:29.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:29.459" endtime="20201030 18:30:29.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.440" endtime="20201030 18:30:29.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.438" endtime="20201030 18:30:29.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:29.469" endtime="20201030 18:30:29.758"></status>
</kw>
<msg timestamp="20201030 18:30:29.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019503694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019504833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:29.467" endtime="20201030 18:30:29.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019503694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019504833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:29.762" endtime="20201030 18:30:29.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:29.771" endtime="20201030 18:30:29.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.464" endtime="20201030 18:30:29.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.462" endtime="20201030 18:30:29.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:29.777" level="INFO">${RESULT} = [{'diff': 1.139000000000695e-06}, {'diff': 6.950000000019441e-07}, {'diff': 6.93999999999001e-07}, {'diff': 6.250000000006251e-07}, {'diff': 6.669999999993348e-07}, {'diff': 6.669999999993348e-07}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:29.774" endtime="20201030 18:30:29.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:29.782" level="INFO">${OVERHEAD} = {'diff': [1.139000000000695e-06, 6.950000000019441e-07, 6.93999999999001e-07, 6.250000000006251e-07, 6.669999999993348e-07, 6.669999999993348e-07, 6.659999999998611e-07, 6.809999999989047e-07, 6.79999...</msg>
<status status="PASS" starttime="20201030 18:30:29.778" endtime="20201030 18:30:29.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.787" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:29.786" endtime="20201030 18:30:29.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.789" level="INFO">VALUE: [1.139000000000695e-06, 6.950000000019441e-07, 6.93999999999001e-07, 6.250000000006251e-07, 6.669999999993348e-07, 6.669999999993348e-07, 6.659999999998611e-07, 6.809999999989047e-07, 6.799999999994311e-07, 6.93999999999001e-07, 6.93999999999001e-07, 6.809999999989047e-07, 6.799999999994311e-07, 7.089999999980445e-07, 6.810000000023742e-07, 6.950000000019441e-07, 6.809999999989047e-07, 7.079999999985709e-07, 6.93999999999001e-07, 6.950000000019441e-07, 6.940000000024704e-07, 6.93999999999001e-07, 7.079999999985709e-07, 6.799999999994311e-07, 6.799999999994311e-07, 6.950000000019441e-07, 6.949999999984746e-07, 6.93999999999001e-07, 6.949999999984746e-07, 7.360000000011802e-07, 7.09000000001514e-07, 6.810000000023742e-07, 7.089999999980445e-07, 6.950000000019441e-07, 6.799999999994311e-07, 6.250000000006251e-07, 6.669999999993348e-07, 7.080000000020403e-07, 6.93999999999001e-07, 6.809999999989047e-07, 6.93999999999001e-07, 7.369999999971844e-07, 6.93999999999001e-07, 6.659999999998611e-07, 6.949999999984746e-07, 6.800000000029005e-07, 6.940000000024704e-07, 6.949999999984746e-07, 6.809999999989047e-07, 7.080000000020403e-07]</msg>
<status status="PASS" starttime="20201030 18:30:29.788" endtime="20201030 18:30:29.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.783" endtime="20201030 18:30:29.790"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:29.794" endtime="20201030 18:30:29.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.792" endtime="20201030 18:30:29.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.791" endtime="20201030 18:30:29.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.437" endtime="20201030 18:30:29.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.437" endtime="20201030 18:30:29.814"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:29.822" endtime="20201030 18:30:29.834"></status>
</kw>
<msg timestamp="20201030 18:30:29.834" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:29.821" endtime="20201030 18:30:29.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.837" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:29.835" endtime="20201030 18:30:29.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:29.838" endtime="20201030 18:30:29.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.818" endtime="20201030 18:30:29.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.816" endtime="20201030 18:30:29.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:29.847" endtime="20201030 18:30:30.139"></status>
</kw>
<msg timestamp="20201030 18:30:30.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019500597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019501708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:29.846" endtime="20201030 18:30:30.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019500597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019501708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:30.144" endtime="20201030 18:30:30.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.152" endtime="20201030 18:30:30.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.843" endtime="20201030 18:30:30.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.841" endtime="20201030 18:30:30.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:30.158" level="INFO">${RESULT} = [{'diff': 1.1109999999980857e-06}, {'diff': 7.230000000010839e-07}, {'diff': 7.089999999980445e-07}, {'diff': 6.949999999984746e-07}, {'diff': 7.219999999981408e-07}, {'diff': 6.39000000000195e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:30:30.155" endtime="20201030 18:30:30.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:30.163" level="INFO">${OVERHEAD} = {'diff': [1.1109999999980857e-06, 7.230000000010839e-07, 7.089999999980445e-07, 6.949999999984746e-07, 7.219999999981408e-07, 6.39000000000195e-07, 7.219999999981408e-07, 6.93999999999001e-07, 6.81000...</msg>
<status status="PASS" starttime="20201030 18:30:30.159" endtime="20201030 18:30:30.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.167" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:30.166" endtime="20201030 18:30:30.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.169" level="INFO">VALUE: [1.1109999999980857e-06, 7.230000000010839e-07, 7.089999999980445e-07, 6.949999999984746e-07, 7.219999999981408e-07, 6.39000000000195e-07, 7.219999999981408e-07, 6.93999999999001e-07, 6.810000000023742e-07, 6.799999999994311e-07, 6.93999999999001e-07, 6.799999999994311e-07, 6.799999999994311e-07, 6.93999999999001e-07, 6.809999999989047e-07, 6.93999999999001e-07, 6.93999999999001e-07, 6.809999999989047e-07, 6.93999999999001e-07, 7.09000000001514e-07, 6.799999999994311e-07, 6.949999999984746e-07, 6.810000000023742e-07, 6.949999999984746e-07, 6.93999999999001e-07, 6.950000000019441e-07, 6.949999999984746e-07, 7.080000000020403e-07, 6.529999999997649e-07, 6.809999999989047e-07, 6.93999999999001e-07, 7.09000000001514e-07, 6.809999999989047e-07, 6.809999999989047e-07, 6.93999999999001e-07, 6.810000000023742e-07, 6.949999999984746e-07, 6.93999999999001e-07, 6.949999999984746e-07, 6.93999999999001e-07, 6.93999999999001e-07, 6.93999999999001e-07, 6.39000000000195e-07, 6.799999999994311e-07, 6.93999999999001e-07, 6.799999999994311e-07, 6.810000000023742e-07, 6.800000000029005e-07, 6.940000000024704e-07, 6.950000000019441e-07]</msg>
<status status="PASS" starttime="20201030 18:30:30.168" endtime="20201030 18:30:30.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.163" endtime="20201030 18:30:30.170"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:30.174" endtime="20201030 18:30:30.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.172" endtime="20201030 18:30:30.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.171" endtime="20201030 18:30:30.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.815" endtime="20201030 18:30:30.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.815" endtime="20201030 18:30:30.196"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.205" endtime="20201030 18:30:30.217"></status>
</kw>
<msg timestamp="20201030 18:30:30.218" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:30.203" endtime="20201030 18:30:30.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.220" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:30.219" endtime="20201030 18:30:30.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.222" endtime="20201030 18:30:30.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.200" endtime="20201030 18:30:30.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.199" endtime="20201030 18:30:30.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.232" endtime="20201030 18:30:30.513"></status>
</kw>
<msg timestamp="20201030 18:30:30.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022802278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022803403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:30.230" endtime="20201030 18:30:30.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022802278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022803403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:30.517" endtime="20201030 18:30:30.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.525" endtime="20201030 18:30:30.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.228" endtime="20201030 18:30:30.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.226" endtime="20201030 18:30:30.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:30.532" level="INFO">${RESULT} = [{'diff': 1.125000000001125e-06}, {'diff': 6.949999999984746e-07}, {'diff': 6.669999999993348e-07}, {'diff': 7.219999999981408e-07}, {'diff': 6.799999999994311e-07}, {'diff': 6.809999999989047e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:30:30.529" endtime="20201030 18:30:30.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:30.537" level="INFO">${OVERHEAD} = {'diff': [1.125000000001125e-06, 6.949999999984746e-07, 6.669999999993348e-07, 7.219999999981408e-07, 6.799999999994311e-07, 6.809999999989047e-07, 6.799999999994311e-07, 7.229999999976144e-07, 6.8099...</msg>
<status status="PASS" starttime="20201030 18:30:30.533" endtime="20201030 18:30:30.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.541" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:30.540" endtime="20201030 18:30:30.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.543" level="INFO">VALUE: [1.125000000001125e-06, 6.949999999984746e-07, 6.669999999993348e-07, 7.219999999981408e-07, 6.799999999994311e-07, 6.809999999989047e-07, 6.799999999994311e-07, 7.229999999976144e-07, 6.809999999989047e-07, 7.6400000000032e-07, 6.799999999994311e-07, 6.940000000024704e-07, 6.810000000023742e-07, 6.799999999994311e-07, 6.949999999984746e-07, 6.93999999999001e-07, 6.809999999989047e-07, 6.949999999984746e-07, 6.93999999999001e-07, 6.93999999999001e-07, 6.809999999989047e-07, 6.950000000019441e-07, 6.799999999994311e-07, 6.940000000024704e-07, 6.799999999994311e-07, 6.950000000019441e-07, 6.809999999989047e-07, 7.079999999985709e-07, 6.93999999999001e-07, 6.949999999984746e-07, 6.93999999999001e-07, 6.669999999993348e-07, 6.659999999998611e-07, 6.39000000000195e-07, 7.09000000001514e-07, 6.809999999989047e-07, 6.940000000024704e-07, 6.529999999997649e-07, 7.220000000016102e-07, 6.949999999984746e-07, 6.93999999999001e-07, 6.809999999989047e-07, 6.809999999989047e-07, 6.93999999999001e-07, 6.949999999984746e-07, 6.949999999984746e-07, 6.950000000019441e-07, 7.220000000016102e-07, 6.809999999989047e-07, 6.809999999989047e-07]</msg>
<status status="PASS" starttime="20201030 18:30:30.542" endtime="20201030 18:30:30.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.537" endtime="20201030 18:30:30.545"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:30.549" endtime="20201030 18:30:30.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.547" endtime="20201030 18:30:30.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.546" endtime="20201030 18:30:30.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.197" endtime="20201030 18:30:30.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.197" endtime="20201030 18:30:30.570"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.578" endtime="20201030 18:30:30.589"></status>
</kw>
<msg timestamp="20201030 18:30:30.590" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:30.576" endtime="20201030 18:30:30.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.593" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:30.591" endtime="20201030 18:30:30.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.594" endtime="20201030 18:30:30.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.574" endtime="20201030 18:30:30.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.572" endtime="20201030 18:30:30.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.603" endtime="20201030 18:30:30.885"></status>
</kw>
<msg timestamp="20201030 18:30:30.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020119083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020120278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:30.602" endtime="20201030 18:30:30.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020119083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020120278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:30.890" endtime="20201030 18:30:30.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.898" endtime="20201030 18:30:30.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.599" endtime="20201030 18:30:30.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.597" endtime="20201030 18:30:30.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:30.905" level="INFO">${RESULT} = [{'diff': 1.1949999999989747e-06}, {'diff': 6.93999999999001e-07}, {'diff': 6.810000000023742e-07}, {'diff': 7.079999999985709e-07}, {'diff': 6.799999999994311e-07}, {'diff': 6.799999999994311e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:30:30.902" endtime="20201030 18:30:30.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:30.910" level="INFO">${OVERHEAD} = {'diff': [1.1949999999989747e-06, 6.93999999999001e-07, 6.810000000023742e-07, 7.079999999985709e-07, 6.799999999994311e-07, 6.799999999994311e-07, 6.799999999994311e-07, 6.799999999994311e-07, 6.9500...</msg>
<status status="PASS" starttime="20201030 18:30:30.906" endtime="20201030 18:30:30.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.914" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:30.913" endtime="20201030 18:30:30.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.917" level="INFO">VALUE: [1.1949999999989747e-06, 6.93999999999001e-07, 6.810000000023742e-07, 7.079999999985709e-07, 6.799999999994311e-07, 6.799999999994311e-07, 6.799999999994311e-07, 6.799999999994311e-07, 6.950000000019441e-07, 6.810000000023742e-07, 6.950000000019441e-07, 6.93999999999001e-07, 6.810000000023742e-07, 6.940000000024704e-07, 6.799999999994311e-07, 6.940000000024704e-07, 6.949999999984746e-07, 7.220000000016102e-07, 6.809999999989047e-07, 7.079999999985709e-07, 6.93999999999001e-07, 6.39000000000195e-07, 7.079999999985709e-07, 6.93999999999001e-07, 6.949999999984746e-07, 6.940000000024704e-07, 6.810000000023742e-07, 6.949999999984746e-07, 6.940000000024704e-07, 6.950000000019441e-07, 6.810000000023742e-07, 6.949999999984746e-07, 6.799999999994311e-07, 6.800000000029005e-07, 6.669999999993348e-07, 7.360000000011802e-07, 6.949999999984746e-07, 6.949999999984746e-07, 6.659999999998611e-07, 6.940000000024704e-07, 6.809999999989047e-07, 6.950000000019441e-07, 6.950000000019441e-07, 6.809999999989047e-07, 6.799999999994311e-07, 6.940000000024704e-07, 6.93999999999001e-07, 6.810000000023742e-07, 6.799999999994311e-07, 7.229999999976144e-07]</msg>
<status status="PASS" starttime="20201030 18:30:30.915" endtime="20201030 18:30:30.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.911" endtime="20201030 18:30:30.918"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:30.922" endtime="20201030 18:30:30.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.920" endtime="20201030 18:30:30.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.919" endtime="20201030 18:30:30.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.570" endtime="20201030 18:30:30.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.570" endtime="20201030 18:30:30.942"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.951" endtime="20201030 18:30:30.962"></status>
</kw>
<msg timestamp="20201030 18:30:30.962" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:30.950" endtime="20201030 18:30:30.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.965" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:30.963" endtime="20201030 18:30:30.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.966" endtime="20201030 18:30:30.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.947" endtime="20201030 18:30:30.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.945" endtime="20201030 18:30:30.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.976" endtime="20201030 18:30:31.265"></status>
</kw>
<msg timestamp="20201030 18:30:31.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020561903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020563056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:30.974" endtime="20201030 18:30:31.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020561903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020563056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:31.269" endtime="20201030 18:30:31.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.278" endtime="20201030 18:30:31.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.971" endtime="20201030 18:30:31.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.969" endtime="20201030 18:30:31.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:31.286" level="INFO">${RESULT} = [{'diff': 1.153000000000265e-06}, {'diff': 6.950000000019441e-07}, {'diff': 6.949999999984746e-07}, {'diff': 6.93999999999001e-07}, {'diff': 7.230000000010839e-07}, {'diff': 6.949999999984746e-07}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:31.282" endtime="20201030 18:30:31.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:31.290" level="INFO">${OVERHEAD} = {'diff': [1.153000000000265e-06, 6.950000000019441e-07, 6.949999999984746e-07, 6.93999999999001e-07, 7.230000000010839e-07, 6.949999999984746e-07, 6.93999999999001e-07, 6.949999999984746e-07, 7.089999...</msg>
<status status="PASS" starttime="20201030 18:30:31.287" endtime="20201030 18:30:31.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.294" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:31.293" endtime="20201030 18:30:31.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.297" level="INFO">VALUE: [1.153000000000265e-06, 6.950000000019441e-07, 6.949999999984746e-07, 6.93999999999001e-07, 7.230000000010839e-07, 6.949999999984746e-07, 6.93999999999001e-07, 6.949999999984746e-07, 7.089999999980445e-07, 6.950000000019441e-07, 6.669999999993348e-07, 6.950000000019441e-07, 6.809999999989047e-07, 6.799999999994311e-07, 7.219999999981408e-07, 6.799999999994311e-07, 7.079999999985709e-07, 6.949999999984746e-07, 6.950000000019441e-07, 6.949999999984746e-07, 6.799999999994311e-07, 6.93999999999001e-07, 6.940000000024704e-07, 6.799999999994311e-07, 6.93999999999001e-07, 6.659999999998611e-07, 7.220000000016102e-07, 6.93999999999001e-07, 6.809999999989047e-07, 6.809999999989047e-07, 6.799999999994311e-07, 6.799999999994311e-07, 6.93999999999001e-07, 6.950000000019441e-07, 6.93999999999001e-07, 6.940000000024704e-07, 6.949999999984746e-07, 6.810000000023742e-07, 6.93999999999001e-07, 7.09000000001514e-07, 6.799999999994311e-07, 6.809999999989047e-07, 6.949999999984746e-07, 6.950000000019441e-07, 6.809999999989047e-07, 6.93999999999001e-07, 6.93999999999001e-07, 6.809999999989047e-07, 6.93999999999001e-07, 6.799999999994311e-07]</msg>
<status status="PASS" starttime="20201030 18:30:31.296" endtime="20201030 18:30:31.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.291" endtime="20201030 18:30:31.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:31.302" endtime="20201030 18:30:31.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.300" endtime="20201030 18:30:31.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.299" endtime="20201030 18:30:31.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.943" endtime="20201030 18:30:31.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.943" endtime="20201030 18:30:31.323"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.331" endtime="20201030 18:30:31.343"></status>
</kw>
<msg timestamp="20201030 18:30:31.343" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:31.330" endtime="20201030 18:30:31.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.346" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:31.344" endtime="20201030 18:30:31.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.347" endtime="20201030 18:30:31.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.327" endtime="20201030 18:30:31.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.325" endtime="20201030 18:30:31.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.357" endtime="20201030 18:30:31.647"></status>
</kw>
<msg timestamp="20201030 18:30:31.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020492681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020493819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:31.356" endtime="20201030 18:30:31.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020492681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020493819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:31.651" endtime="20201030 18:30:31.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.660" endtime="20201030 18:30:31.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.353" endtime="20201030 18:30:31.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.351" endtime="20201030 18:30:31.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:31.667" level="INFO">${RESULT} = [{'diff': 1.1380000000012214e-06}, {'diff': 6.39000000000195e-07}, {'diff': 6.809999999989047e-07}, {'diff': 7.079999999985709e-07}, {'diff': 6.799999999994311e-07}, {'diff': 6.669999999993348e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:30:31.664" endtime="20201030 18:30:31.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:31.671" level="INFO">${OVERHEAD} = {'diff': [1.1380000000012214e-06, 6.39000000000195e-07, 6.809999999989047e-07, 7.079999999985709e-07, 6.799999999994311e-07, 6.669999999993348e-07, 7.360000000011802e-07, 6.950000000019441e-07, 6.8000...</msg>
<status status="PASS" starttime="20201030 18:30:31.668" endtime="20201030 18:30:31.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.676" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:31.674" endtime="20201030 18:30:31.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.678" level="INFO">VALUE: [1.1380000000012214e-06, 6.39000000000195e-07, 6.809999999989047e-07, 7.079999999985709e-07, 6.799999999994311e-07, 6.669999999993348e-07, 7.360000000011802e-07, 6.950000000019441e-07, 6.800000000029005e-07, 6.949999999984746e-07, 6.669999999993348e-07, 6.93999999999001e-07, 6.799999999994311e-07, 6.799999999994311e-07, 6.93999999999001e-07, 6.809999999989047e-07, 6.950000000019441e-07, 6.940000000024704e-07, 6.940000000024704e-07, 6.809999999989047e-07, 6.950000000019441e-07, 6.940000000024704e-07, 6.810000000023742e-07, 6.93999999999001e-07, 6.110000000010551e-07, 6.950000000019441e-07, 6.93999999999001e-07, 6.799999999994311e-07, 7.079999999985709e-07, 7.230000000010839e-07, 6.950000000019441e-07, 6.93999999999001e-07, 6.799999999994311e-07, 6.800000000029005e-07, 6.810000000023742e-07, 6.93999999999001e-07, 6.799999999994311e-07, 6.93999999999001e-07, 6.940000000024704e-07, 6.949999999984746e-07, 6.799999999994311e-07, 6.950000000019441e-07, 6.949999999984746e-07, 6.93999999999001e-07, 6.93999999999001e-07, 6.950000000019441e-07, 6.93999999999001e-07, 6.949999999984746e-07, 6.799999999994311e-07, 7.360000000011802e-07]</msg>
<status status="PASS" starttime="20201030 18:30:31.677" endtime="20201030 18:30:31.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.672" endtime="20201030 18:30:31.680"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:31.684" endtime="20201030 18:30:31.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.682" endtime="20201030 18:30:31.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.681" endtime="20201030 18:30:31.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.324" endtime="20201030 18:30:31.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.323" endtime="20201030 18:30:31.705"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.713" endtime="20201030 18:30:31.725"></status>
</kw>
<msg timestamp="20201030 18:30:31.725" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:31.711" endtime="20201030 18:30:31.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.728" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:31.727" endtime="20201030 18:30:31.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.729" endtime="20201030 18:30:31.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.709" endtime="20201030 18:30:31.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.707" endtime="20201030 18:30:31.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.739" endtime="20201030 18:30:32.019"></status>
</kw>
<msg timestamp="20201030 18:30:32.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020128056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020129194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:31.737" endtime="20201030 18:30:32.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020128056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020129194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:32.023" endtime="20201030 18:30:32.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.032" endtime="20201030 18:30:32.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.734" endtime="20201030 18:30:32.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.732" endtime="20201030 18:30:32.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:32.039" level="INFO">${RESULT} = [{'diff': 1.1380000000012214e-06}, {'diff': 6.659999999998611e-07}, {'diff': 6.809999999989047e-07}, {'diff': 6.659999999998611e-07}, {'diff': 6.809999999989047e-07}, {'diff': 6.39000000000195e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:30:32.035" endtime="20201030 18:30:32.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:32.044" level="INFO">${OVERHEAD} = {'diff': [1.1380000000012214e-06, 6.659999999998611e-07, 6.809999999989047e-07, 6.659999999998611e-07, 6.809999999989047e-07, 6.39000000000195e-07, 6.949999999984746e-07, 6.799999999994311e-07, 6.9499...</msg>
<status status="PASS" starttime="20201030 18:30:32.040" endtime="20201030 18:30:32.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.048" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:32.047" endtime="20201030 18:30:32.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.051" level="INFO">VALUE: [1.1380000000012214e-06, 6.659999999998611e-07, 6.809999999989047e-07, 6.659999999998611e-07, 6.809999999989047e-07, 6.39000000000195e-07, 6.949999999984746e-07, 6.799999999994311e-07, 6.949999999984746e-07, 6.93999999999001e-07, 6.93999999999001e-07, 6.949999999984746e-07, 6.940000000024704e-07, 6.950000000019441e-07, 6.799999999994311e-07, 6.799999999994311e-07, 6.93999999999001e-07, 6.940000000024704e-07, 6.949999999984746e-07, 7.09000000001514e-07, 6.93999999999001e-07, 6.809999999989047e-07, 6.93999999999001e-07, 7.220000000016102e-07, 6.809999999989047e-07, 7.09000000001514e-07, 7.220000000016102e-07, 6.809999999989047e-07, 6.950000000019441e-07, 6.800000000029005e-07, 6.810000000023742e-07, 6.950000000019441e-07, 6.949999999984746e-07, 6.949999999984746e-07, 6.809999999989047e-07, 6.800000000029005e-07, 6.799999999994311e-07, 6.810000000023742e-07, 6.949999999984746e-07, 6.800000000029005e-07, 6.799999999994311e-07, 6.949999999984746e-07, 6.809999999989047e-07, 6.93999999999001e-07, 6.93999999999001e-07, 6.940000000024704e-07, 6.799999999994311e-07, 6.949999999984746e-07, 6.93999999999001e-07, 6.93999999999001e-07]</msg>
<status status="PASS" starttime="20201030 18:30:32.049" endtime="20201030 18:30:32.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.045" endtime="20201030 18:30:32.052"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:32.056" endtime="20201030 18:30:32.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.054" endtime="20201030 18:30:32.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.053" endtime="20201030 18:30:32.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.706" endtime="20201030 18:30:32.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.705" endtime="20201030 18:30:32.077"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.085" endtime="20201030 18:30:32.096"></status>
</kw>
<msg timestamp="20201030 18:30:32.097" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:32.083" endtime="20201030 18:30:32.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.099" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:32.098" endtime="20201030 18:30:32.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.100" endtime="20201030 18:30:32.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.081" endtime="20201030 18:30:32.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.079" endtime="20201030 18:30:32.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.110" endtime="20201030 18:30:32.400"></status>
</kw>
<msg timestamp="20201030 18:30:32.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019838375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019839458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:32.108" endtime="20201030 18:30:32.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019838375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019839458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:32.404" endtime="20201030 18:30:32.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.412" endtime="20201030 18:30:32.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.106" endtime="20201030 18:30:32.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.104" endtime="20201030 18:30:32.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:32.420" level="INFO">${RESULT} = [{'diff': 1.0830000000024154e-06}, {'diff': 6.529999999997649e-07}, {'diff': 6.93999999999001e-07}, {'diff': 6.940000000024704e-07}, {'diff': 7.079999999985709e-07}, {'diff': 7.09000000001514e-07}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:32.417" endtime="20201030 18:30:32.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:32.425" level="INFO">${OVERHEAD} = {'diff': [1.0830000000024154e-06, 6.529999999997649e-07, 6.93999999999001e-07, 6.940000000024704e-07, 7.079999999985709e-07, 7.09000000001514e-07, 6.800000000029005e-07, 6.529999999997649e-07, 7.09000...</msg>
<status status="PASS" starttime="20201030 18:30:32.421" endtime="20201030 18:30:32.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.429" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:32.428" endtime="20201030 18:30:32.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.431" level="INFO">VALUE: [1.0830000000024154e-06, 6.529999999997649e-07, 6.93999999999001e-07, 6.940000000024704e-07, 7.079999999985709e-07, 7.09000000001514e-07, 6.800000000029005e-07, 6.529999999997649e-07, 7.09000000001514e-07, 6.799999999994311e-07, 7.360000000011802e-07, 6.799999999994311e-07, 6.669999999993348e-07, 7.079999999985709e-07, 6.809999999989047e-07, 6.809999999989047e-07, 6.950000000019441e-07, 6.93999999999001e-07, 6.809999999989047e-07, 6.949999999984746e-07, 7.079999999985709e-07, 6.949999999984746e-07, 6.669999999993348e-07, 6.93999999999001e-07, 6.379999999972519e-07, 6.950000000019441e-07, 6.93999999999001e-07, 6.93999999999001e-07, 6.529999999997649e-07, 6.93999999999001e-07, 6.93999999999001e-07, 6.949999999984746e-07, 6.799999999994311e-07, 6.809999999989047e-07, 6.93999999999001e-07, 6.949999999984746e-07, 7.089999999980445e-07, 6.809999999989047e-07, 6.799999999994311e-07, 7.229999999976144e-07, 7.079999999985709e-07, 6.93999999999001e-07, 6.940000000024704e-07, 6.39000000000195e-07, 7.09000000001514e-07, 6.949999999984746e-07, 6.799999999994311e-07, 6.810000000023742e-07, 6.949999999984746e-07, 6.93999999999001e-07]</msg>
<status status="PASS" starttime="20201030 18:30:32.430" endtime="20201030 18:30:32.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.425" endtime="20201030 18:30:32.433"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:32.437" endtime="20201030 18:30:32.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.435" endtime="20201030 18:30:32.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.434" endtime="20201030 18:30:32.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.078" endtime="20201030 18:30:32.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.077" endtime="20201030 18:30:32.457"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.466" endtime="20201030 18:30:32.477"></status>
</kw>
<msg timestamp="20201030 18:30:32.478" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:32.464" endtime="20201030 18:30:32.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.480" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:32.479" endtime="20201030 18:30:32.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.481" endtime="20201030 18:30:32.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.461" endtime="20201030 18:30:32.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.460" endtime="20201030 18:30:32.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.492" endtime="20201030 18:30:32.774"></status>
</kw>
<msg timestamp="20201030 18:30:32.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019992569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019993722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:32.490" endtime="20201030 18:30:32.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019992569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019993722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:32.778" endtime="20201030 18:30:32.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.786" endtime="20201030 18:30:32.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.487" endtime="20201030 18:30:32.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.486" endtime="20201030 18:30:32.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:32.793" level="INFO">${RESULT} = [{'diff': 1.1529999999967955e-06}, {'diff': 6.949999999984746e-07}, {'diff': 6.940000000024704e-07}, {'diff': 7.079999999985709e-07}, {'diff': 7.360000000011802e-07}, {'diff': 6.810000000023742e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:30:32.790" endtime="20201030 18:30:32.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:32.798" level="INFO">${OVERHEAD} = {'diff': [1.1529999999967955e-06, 6.949999999984746e-07, 6.940000000024704e-07, 7.079999999985709e-07, 7.360000000011802e-07, 6.810000000023742e-07, 6.810000000023742e-07, 6.949999999984746e-07, 6.809...</msg>
<status status="PASS" starttime="20201030 18:30:32.794" endtime="20201030 18:30:32.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.802" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:32.801" endtime="20201030 18:30:32.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.805" level="INFO">VALUE: [1.1529999999967955e-06, 6.949999999984746e-07, 6.940000000024704e-07, 7.079999999985709e-07, 7.360000000011802e-07, 6.810000000023742e-07, 6.810000000023742e-07, 6.949999999984746e-07, 6.809999999989047e-07, 7.360000000011802e-07, 6.940000000024704e-07, 6.799999999994311e-07, 7.220000000016102e-07, 7.079999999985709e-07, 6.93999999999001e-07, 7.09000000001514e-07, 6.810000000023742e-07, 6.949999999984746e-07, 6.93999999999001e-07, 6.799999999994311e-07, 6.799999999994311e-07, 6.93999999999001e-07, 6.950000000019441e-07, 6.93999999999001e-07, 6.799999999994311e-07, 6.799999999994311e-07, 6.949999999984746e-07, 6.93999999999001e-07, 6.93999999999001e-07, 6.799999999994311e-07, 6.93999999999001e-07, 6.93999999999001e-07, 6.809999999989047e-07, 6.529999999997649e-07, 6.39000000000195e-07, 6.949999999984746e-07, 6.809999999989047e-07, 6.950000000019441e-07, 7.079999999985709e-07, 6.949999999984746e-07, 6.93999999999001e-07, 6.949999999984746e-07, 6.93999999999001e-07, 7.09000000001514e-07, 6.949999999984746e-07, 6.800000000029005e-07, 6.93999999999001e-07, 6.810000000023742e-07, 6.940000000024704e-07, 6.659999999998611e-07]</msg>
<status status="PASS" starttime="20201030 18:30:32.803" endtime="20201030 18:30:32.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.799" endtime="20201030 18:30:32.807"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:32.811" endtime="20201030 18:30:32.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.809" endtime="20201030 18:30:32.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.808" endtime="20201030 18:30:32.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.458" endtime="20201030 18:30:32.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.458" endtime="20201030 18:30:32.831"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.840" endtime="20201030 18:30:32.852"></status>
</kw>
<msg timestamp="20201030 18:30:32.852" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:32.838" endtime="20201030 18:30:32.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.855" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:32.853" endtime="20201030 18:30:32.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.856" endtime="20201030 18:30:32.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.835" endtime="20201030 18:30:32.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.833" endtime="20201030 18:30:32.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.865" endtime="20201030 18:30:33.147"></status>
</kw>
<msg timestamp="20201030 18:30:33.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020051611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02005275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:32.864" endtime="20201030 18:30:33.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020051611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02005275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:33.151" endtime="20201030 18:30:33.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.159" endtime="20201030 18:30:33.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.861" endtime="20201030 18:30:33.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.859" endtime="20201030 18:30:33.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:33.166" level="INFO">${RESULT} = [{'diff': 1.139000000000695e-06}, {'diff': 6.940000000024704e-07}, {'diff': 6.809999999989047e-07}, {'diff': 6.809999999989047e-07}, {'diff': 6.950000000019441e-07}, {'diff': 6.949999999984746e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:30:33.163" endtime="20201030 18:30:33.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:33.171" level="INFO">${OVERHEAD} = {'diff': [1.139000000000695e-06, 6.940000000024704e-07, 6.809999999989047e-07, 6.809999999989047e-07, 6.950000000019441e-07, 6.949999999984746e-07, 6.940000000024704e-07, 6.93999999999001e-07, 6.80999...</msg>
<status status="PASS" starttime="20201030 18:30:33.167" endtime="20201030 18:30:33.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.176" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:33.175" endtime="20201030 18:30:33.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.178" level="INFO">VALUE: [1.139000000000695e-06, 6.940000000024704e-07, 6.809999999989047e-07, 6.809999999989047e-07, 6.950000000019441e-07, 6.949999999984746e-07, 6.940000000024704e-07, 6.93999999999001e-07, 6.809999999989047e-07, 6.799999999994311e-07, 6.529999999997649e-07, 7.079999999985709e-07, 6.949999999984746e-07, 7.09000000001514e-07, 6.940000000024704e-07, 7.080000000020403e-07, 6.940000000024704e-07, 6.940000000024704e-07, 6.669999999993348e-07, 6.950000000019441e-07, 6.950000000019441e-07, 6.93999999999001e-07, 6.93999999999001e-07, 6.93999999999001e-07, 6.810000000023742e-07, 6.93999999999001e-07, 6.950000000019441e-07, 6.799999999994311e-07, 6.93999999999001e-07, 6.950000000019441e-07, 6.93999999999001e-07, 6.93999999999001e-07, 6.950000000019441e-07, 6.800000000029005e-07, 6.950000000019441e-07, 6.940000000024704e-07, 6.800000000029005e-07, 6.950000000019441e-07, 6.950000000019441e-07, 7.080000000020403e-07, 6.799999999994311e-07, 6.93999999999001e-07, 6.940000000024704e-07, 6.950000000019441e-07, 6.799999999994311e-07, 6.949999999984746e-07, 6.949999999984746e-07, 6.530000000032343e-07, 6.93999999999001e-07, 6.950000000019441e-07]</msg>
<status status="PASS" starttime="20201030 18:30:33.177" endtime="20201030 18:30:33.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.172" endtime="20201030 18:30:33.180"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:33.184" endtime="20201030 18:30:33.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.182" endtime="20201030 18:30:33.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.181" endtime="20201030 18:30:33.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.832" endtime="20201030 18:30:33.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.832" endtime="20201030 18:30:33.205"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.213" endtime="20201030 18:30:33.224"></status>
</kw>
<msg timestamp="20201030 18:30:33.224" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:33.211" endtime="20201030 18:30:33.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.227" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:33.225" endtime="20201030 18:30:33.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.228" endtime="20201030 18:30:33.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.208" endtime="20201030 18:30:33.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.207" endtime="20201030 18:30:33.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.237" endtime="20201030 18:30:33.519"></status>
</kw>
<msg timestamp="20201030 18:30:33.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02000675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020007931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:33.236" endtime="20201030 18:30:33.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02000675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020007931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:33.524" endtime="20201030 18:30:33.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.532" endtime="20201030 18:30:33.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.233" endtime="20201030 18:30:33.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.231" endtime="20201030 18:30:33.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:33.539" level="INFO">${RESULT} = [{'diff': 1.1809999999994047e-06}, {'diff': 7.220000000016102e-07}, {'diff': 7.079999999985709e-07}, {'diff': 6.940000000024704e-07}, {'diff': 6.810000000023742e-07}, {'diff': 6.809999999989047e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:30:33.536" endtime="20201030 18:30:33.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:33.543" level="INFO">${OVERHEAD} = {'diff': [1.1809999999994047e-06, 7.220000000016102e-07, 7.079999999985709e-07, 6.940000000024704e-07, 6.810000000023742e-07, 6.809999999989047e-07, 6.950000000019441e-07, 7.230000000010839e-07, 6.949...</msg>
<status status="PASS" starttime="20201030 18:30:33.540" endtime="20201030 18:30:33.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.548" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:33.547" endtime="20201030 18:30:33.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.550" level="INFO">VALUE: [1.1809999999994047e-06, 7.220000000016102e-07, 7.079999999985709e-07, 6.940000000024704e-07, 6.810000000023742e-07, 6.809999999989047e-07, 6.950000000019441e-07, 7.230000000010839e-07, 6.949999999984746e-07, 6.809999999989047e-07, 6.810000000023742e-07, 7.220000000016102e-07, 6.950000000019441e-07, 6.949999999984746e-07, 6.809999999989047e-07, 6.940000000024704e-07, 6.799999999994311e-07, 6.529999999997649e-07, 6.949999999984746e-07, 6.799999999994311e-07, 6.799999999994311e-07, 6.799999999994311e-07, 6.93999999999001e-07, 7.230000000010839e-07, 6.809999999989047e-07, 6.93999999999001e-07, 7.079999999985709e-07, 6.809999999989047e-07, 6.799999999994311e-07, 6.799999999994311e-07, 6.940000000024704e-07, 6.93999999999001e-07, 6.93999999999001e-07, 6.809999999989047e-07, 6.950000000019441e-07, 7.080000000020403e-07, 6.799999999994311e-07, 6.799999999994311e-07, 6.799999999994311e-07, 6.669999999993348e-07, 6.93999999999001e-07, 6.809999999989047e-07, 6.949999999984746e-07, 6.93999999999001e-07, 6.799999999994311e-07, 6.809999999989047e-07, 6.809999999989047e-07, 6.799999999994311e-07, 6.669999999993348e-07, 6.809999999989047e-07]</msg>
<status status="PASS" starttime="20201030 18:30:33.549" endtime="20201030 18:30:33.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.544" endtime="20201030 18:30:33.552"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:33.556" endtime="20201030 18:30:33.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.554" endtime="20201030 18:30:33.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.553" endtime="20201030 18:30:33.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.205" endtime="20201030 18:30:33.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.205" endtime="20201030 18:30:33.576"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.585" endtime="20201030 18:30:33.596"></status>
</kw>
<msg timestamp="20201030 18:30:33.597" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:33.583" endtime="20201030 18:30:33.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.599" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:33.598" endtime="20201030 18:30:33.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.600" endtime="20201030 18:30:33.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.581" endtime="20201030 18:30:33.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.579" endtime="20201030 18:30:33.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.611" endtime="20201030 18:30:33.893"></status>
</kw>
<msg timestamp="20201030 18:30:33.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020116278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020117417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:33.609" endtime="20201030 18:30:33.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020116278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020117417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:33.897" endtime="20201030 18:30:33.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.906" endtime="20201030 18:30:33.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.607" endtime="20201030 18:30:33.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.605" endtime="20201030 18:30:33.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:33.913" level="INFO">${RESULT} = [{'diff': 1.1389999999972256e-06}, {'diff': 6.800000000029005e-07}, {'diff': 6.93999999999001e-07}, {'diff': 6.39000000000195e-07}, {'diff': 6.940000000024704e-07}, {'diff': 6.669999999993348e-07}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:33.909" endtime="20201030 18:30:33.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:33.917" level="INFO">${OVERHEAD} = {'diff': [1.1389999999972256e-06, 6.800000000029005e-07, 6.93999999999001e-07, 6.39000000000195e-07, 6.940000000024704e-07, 6.669999999993348e-07, 6.950000000019441e-07, 6.93999999999001e-07, 6.799999...</msg>
<status status="PASS" starttime="20201030 18:30:33.914" endtime="20201030 18:30:33.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.921" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:33.920" endtime="20201030 18:30:33.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.924" level="INFO">VALUE: [1.1389999999972256e-06, 6.800000000029005e-07, 6.93999999999001e-07, 6.39000000000195e-07, 6.940000000024704e-07, 6.669999999993348e-07, 6.950000000019441e-07, 6.93999999999001e-07, 6.799999999994311e-07, 6.800000000029005e-07, 6.809999999989047e-07, 6.93999999999001e-07, 6.799999999994311e-07, 6.809999999989047e-07, 6.810000000023742e-07, 6.940000000024704e-07, 6.949999999984746e-07, 6.93999999999001e-07, 6.810000000023742e-07, 6.940000000024704e-07, 6.810000000023742e-07, 6.39000000000195e-07, 7.079999999985709e-07, 6.93999999999001e-07, 7.09000000001514e-07, 6.93999999999001e-07, 6.949999999984746e-07, 7.079999999985709e-07, 6.93999999999001e-07, 6.93999999999001e-07, 6.659999999998611e-07, 6.799999999994311e-07, 6.809999999989047e-07, 6.799999999994311e-07, 6.949999999984746e-07, 7.080000000020403e-07, 6.810000000023742e-07, 6.93999999999001e-07, 6.950000000019441e-07, 6.799999999994311e-07, 6.949999999984746e-07, 6.669999999993348e-07, 6.93999999999001e-07, 6.940000000024704e-07, 6.93999999999001e-07, 6.950000000019441e-07, 6.93999999999001e-07, 6.949999999984746e-07, 6.93999999999001e-07, 6.799999999994311e-07]</msg>
<status status="PASS" starttime="20201030 18:30:33.922" endtime="20201030 18:30:33.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.918" endtime="20201030 18:30:33.926"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:33.930" endtime="20201030 18:30:33.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.929" endtime="20201030 18:30:33.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.927" endtime="20201030 18:30:33.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.577" endtime="20201030 18:30:33.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.577" endtime="20201030 18:30:33.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.294" endtime="20201030 18:30:33.951"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:33.955" endtime="20201030 18:30:33.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.953" endtime="20201030 18:30:33.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.952" endtime="20201030 18:30:33.976"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:26.226" endtime="20201030 18:30:33.976" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:33.991" endtime="20201030 18:30:34.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.990" endtime="20201030 18:30:34.012"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.026" endtime="20201030 18:30:34.040"></status>
</kw>
<msg timestamp="20201030 18:30:34.041" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:34.024" endtime="20201030 18:30:34.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.044" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:34.042" endtime="20201030 18:30:34.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.047" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:34.045" endtime="20201030 18:30:34.047"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:34.021" endtime="20201030 18:30:34.048"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:34.019" endtime="20201030 18:30:34.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.017" endtime="20201030 18:30:34.049"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:34.053" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:34.052" endtime="20201030 18:30:34.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.050" endtime="20201030 18:30:34.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.017" endtime="20201030 18:30:34.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.016" endtime="20201030 18:30:34.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.055" endtime="20201030 18:30:34.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.014" endtime="20201030 18:30:34.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.013" endtime="20201030 18:30:34.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.988" endtime="20201030 18:30:34.060"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.070" endtime="20201030 18:30:34.090"></status>
</kw>
<msg timestamp="20201030 18:30:34.091" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:34.069" endtime="20201030 18:30:34.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.095" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:34.092" endtime="20201030 18:30:34.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.097" endtime="20201030 18:30:34.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.066" endtime="20201030 18:30:34.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.062" endtime="20201030 18:30:34.099"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.102" endtime="20201030 18:30:34.104"></status>
</kw>
<msg timestamp="20201030 18:30:34.105" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:30:34.100" endtime="20201030 18:30:34.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.110" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:30:34.108" endtime="20201030 18:30:34.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.113" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:30:34.112" endtime="20201030 18:30:34.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.105" endtime="20201030 18:30:34.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.118" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:30:34.117" endtime="20201030 18:30:34.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.120" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:30:34.119" endtime="20201030 18:30:34.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.114" endtime="20201030 18:30:34.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.128" endtime="20201030 18:30:34.437"></status>
</kw>
<msg timestamp="20201030 18:30:34.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070933819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070938097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:34.126" endtime="20201030 18:30:34.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070933819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070938097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:34.441" endtime="20201030 18:30:34.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.450" endtime="20201030 18:30:34.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.123" endtime="20201030 18:30:34.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.121" endtime="20201030 18:30:34.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:34.456" level="INFO">${RESULT} = [{'diff': 4.278000000010329e-06}, {'diff': 3.6389999999997258e-06}, {'diff': 3.069999999993911e-06}, {'diff': 3.0979999999930508e-06}, {'diff': 3.0689999999944373e-06}, {'diff': 3.111000000000086e-06}...</msg>
<status status="PASS" starttime="20201030 18:30:34.453" endtime="20201030 18:30:34.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:34.461" level="INFO">${OVERHEAD} = {'diff': [4.278000000010329e-06, 3.6389999999997258e-06, 3.069999999993911e-06, 3.0979999999930508e-06, 3.0689999999944373e-06, 3.111000000000086e-06, 3.069000000008315e-06, 3.111000000000086e-06, 3.0...</msg>
<status status="PASS" starttime="20201030 18:30:34.457" endtime="20201030 18:30:34.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.466" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 18:30:34.465" endtime="20201030 18:30:34.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.469" level="INFO">VALUE: [4.278000000010329e-06, 3.6389999999997258e-06, 3.069999999993911e-06, 3.0979999999930508e-06, 3.0689999999944373e-06, 3.111000000000086e-06, 3.069000000008315e-06, 3.111000000000086e-06, 3.069999999993911e-06, 3.111000000000086e-06, 3.069999999993911e-06, 3.111000000000086e-06, 3.0550000000018063e-06, 3.111000000000086e-06, 3.069999999993911e-06, 3.111000000000086e-06, 3.05600000000128e-06, 3.083000000000946e-06, 3.069000000008315e-06, 3.111000000000086e-06, 3.069999999993911e-06, 3.096999999993577e-06, 3.069000000008315e-06, 3.0550000000018063e-06, 3.055999999987402e-06, 3.1119999999995596e-06, 3.069999999993911e-06, 3.111000000000086e-06, 3.02800000000214e-06, 3.1389999999992257e-06, 3.0550000000018063e-06, 3.111000000000086e-06, 3.0840000000004197e-06, 3.111000000000086e-06, 3.069000000008315e-06, 3.096999999993577e-06, 3.083000000000946e-06, 3.111000000000086e-06, 3.069000000008315e-06, 3.1389999999992257e-06, 3.083000000000946e-06, 3.1119999999995596e-06, 3.0139999999956313e-06, 3.111000000000086e-06, 3.0550000000018063e-06, 3.111000000000086e-06, 3.0689999999944373e-06, 3.041999999994771e-06, 3.083000000000946e-06, 3.111000000000086e-06]</msg>
<status status="PASS" starttime="20201030 18:30:34.467" endtime="20201030 18:30:34.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.462" endtime="20201030 18:30:34.470"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:34.473" endtime="20201030 18:30:34.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.472" endtime="20201030 18:30:34.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.471" endtime="20201030 18:30:34.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.061" endtime="20201030 18:30:34.494"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:33.985" endtime="20201030 18:30:34.494" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:34.501" endtime="20201030 18:30:34.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.500" endtime="20201030 18:30:34.521"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.534" endtime="20201030 18:30:34.548"></status>
</kw>
<msg timestamp="20201030 18:30:34.549" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:34.532" endtime="20201030 18:30:34.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.551" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:34.550" endtime="20201030 18:30:34.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.555" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:34.553" endtime="20201030 18:30:34.555"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:34.530" endtime="20201030 18:30:34.556"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:34.528" endtime="20201030 18:30:34.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.526" endtime="20201030 18:30:34.556"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:34.560" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:34.559" endtime="20201030 18:30:34.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.557" endtime="20201030 18:30:34.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.525" endtime="20201030 18:30:34.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.525" endtime="20201030 18:30:34.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.562" endtime="20201030 18:30:34.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.523" endtime="20201030 18:30:34.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.522" endtime="20201030 18:30:34.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.498" endtime="20201030 18:30:34.565"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.573" endtime="20201030 18:30:34.598"></status>
</kw>
<msg timestamp="20201030 18:30:34.598" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:34.571" endtime="20201030 18:30:34.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.601" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:34.599" endtime="20201030 18:30:34.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.602" endtime="20201030 18:30:34.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.569" endtime="20201030 18:30:34.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.567" endtime="20201030 18:30:34.605"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.607" endtime="20201030 18:30:34.608"></status>
</kw>
<msg timestamp="20201030 18:30:34.609" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:30:34.605" endtime="20201030 18:30:34.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.613" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:30:34.612" endtime="20201030 18:30:34.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.615" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:30:34.614" endtime="20201030 18:30:34.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.610" endtime="20201030 18:30:34.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.620" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:30:34.619" endtime="20201030 18:30:34.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.622" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:30:34.621" endtime="20201030 18:30:34.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.616" endtime="20201030 18:30:34.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.629" endtime="20201030 18:30:34.918"></status>
</kw>
<msg timestamp="20201030 18:30:34.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064658792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064661667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:34.627" endtime="20201030 18:30:34.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064658792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064661667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:34.922" endtime="20201030 18:30:34.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.930" endtime="20201030 18:30:34.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.625" endtime="20201030 18:30:34.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.623" endtime="20201030 18:30:34.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:34.937" level="INFO">${RESULT} = [{'diff': 2.874999999999406e-06}, {'diff': 4.541999999996271e-06}, {'diff': 4.680000000006901e-06}, {'diff': 4.583999999988042e-06}, {'diff': 4.5000000000045e-06}, {'diff': 4.5000000000045e-06}, {'dif...</msg>
<status status="PASS" starttime="20201030 18:30:34.934" endtime="20201030 18:30:34.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:34.941" level="INFO">${OVERHEAD} = {'diff': [2.874999999999406e-06, 4.541999999996271e-06, 4.680000000006901e-06, 4.583999999988042e-06, 4.5000000000045e-06, 4.5000000000045e-06, 4.513999999997131e-06, 4.485999999997992e-06, 4.49999999...</msg>
<status status="PASS" starttime="20201030 18:30:34.938" endtime="20201030 18:30:34.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.946" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 18:30:34.945" endtime="20201030 18:30:34.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.949" level="INFO">VALUE: [2.874999999999406e-06, 4.541999999996271e-06, 4.680000000006901e-06, 4.583999999988042e-06, 4.5000000000045e-06, 4.5000000000045e-06, 4.513999999997131e-06, 4.485999999997992e-06, 4.499999999990623e-06, 4.499999999990623e-06, 4.513999999997131e-06, 4.514000000011009e-06, 4.5000000000045e-06, 4.473000000004834e-06, 4.5000000000045e-06, 4.486000000011869e-06, 4.512999999997658e-06, 4.513999999997131e-06, 4.555000000003306e-06, 4.5000000000045e-06, 4.513999999997131e-06, 4.5000000000045e-06, 4.499999999990623e-06, 4.5000000000045e-06, 4.526999999990289e-06, 4.52800000000364e-06, 4.429999999999712e-06, 4.513999999997131e-06, 4.485999999997992e-06, 4.5000000000045e-06, 4.55600000000278e-06, 4.499999999990623e-06, 4.513999999997131e-06, 4.485999999997992e-06, 4.499999999990623e-06, 4.5000000000045e-06, 4.583000000002446e-06, 4.5000000000045e-06, 4.499999999990623e-06, 4.485999999997992e-06, 4.499999999990623e-06, 4.485999999997992e-06, 4.4170000000065546e-06, 4.473000000004834e-06, 4.5000000000045e-06, 4.499999999990623e-06, 4.542000000010149e-06, 4.5000000000045e-06, 4.513999999997131e-06, 4.485999999997992e-06]</msg>
<status status="PASS" starttime="20201030 18:30:34.948" endtime="20201030 18:30:34.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.942" endtime="20201030 18:30:34.950"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:34.954" endtime="20201030 18:30:34.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.952" endtime="20201030 18:30:34.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.951" endtime="20201030 18:30:34.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.565" endtime="20201030 18:30:34.975"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:34.496" endtime="20201030 18:30:34.975" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:34.982" endtime="20201030 18:30:35.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.980" endtime="20201030 18:30:35.002"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.016" endtime="20201030 18:30:35.031"></status>
</kw>
<msg timestamp="20201030 18:30:35.031" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:35.014" endtime="20201030 18:30:35.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.035" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:35.033" endtime="20201030 18:30:35.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.039" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:35.037" endtime="20201030 18:30:35.039"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:35.012" endtime="20201030 18:30:35.040"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:35.009" endtime="20201030 18:30:35.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.008" endtime="20201030 18:30:35.041"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:35.047" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:35.046" endtime="20201030 18:30:35.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.042" endtime="20201030 18:30:35.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.007" endtime="20201030 18:30:35.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.007" endtime="20201030 18:30:35.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.049" endtime="20201030 18:30:35.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.004" endtime="20201030 18:30:35.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.003" endtime="20201030 18:30:35.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.979" endtime="20201030 18:30:35.054"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.065" endtime="20201030 18:30:35.101"></status>
</kw>
<msg timestamp="20201030 18:30:35.101" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:35.063" endtime="20201030 18:30:35.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.104" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:35.102" endtime="20201030 18:30:35.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.105" endtime="20201030 18:30:35.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.060" endtime="20201030 18:30:35.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.057" endtime="20201030 18:30:35.108"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.110" endtime="20201030 18:30:35.112"></status>
</kw>
<msg timestamp="20201030 18:30:35.112" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:30:35.109" endtime="20201030 18:30:35.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.118" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:30:35.116" endtime="20201030 18:30:35.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.120" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:30:35.119" endtime="20201030 18:30:35.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.113" endtime="20201030 18:30:35.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.125" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:30:35.124" endtime="20201030 18:30:35.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.127" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:30:35.126" endtime="20201030 18:30:35.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.122" endtime="20201030 18:30:35.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.135" endtime="20201030 18:30:35.443"></status>
</kw>
<msg timestamp="20201030 18:30:35.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075179139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075183417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:35.133" endtime="20201030 18:30:35.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075179139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075183417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:35.447" endtime="20201030 18:30:35.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.455" endtime="20201030 18:30:35.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.130" endtime="20201030 18:30:35.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.129" endtime="20201030 18:30:35.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:35.462" level="INFO">${RESULT} = [{'diff': 4.277999999996451e-06}, {'diff': 6.568999999997938e-06}, {'diff': 6.722000000000672e-06}, {'diff': 6.666000000002392e-06}, {'diff': 6.653000000009235e-06}, {'diff': 6.667000000001866e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:35.459" endtime="20201030 18:30:35.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:35.467" level="INFO">${OVERHEAD} = {'diff': [4.277999999996451e-06, 6.568999999997938e-06, 6.722000000000672e-06, 6.666000000002392e-06, 6.653000000009235e-06, 6.667000000001866e-06, 6.638999999988848e-06, 6.583000000004446e-06, 6.6390...</msg>
<status status="PASS" starttime="20201030 18:30:35.463" endtime="20201030 18:30:35.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.473" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 18:30:35.471" endtime="20201030 18:30:35.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.475" level="INFO">VALUE: [4.277999999996451e-06, 6.568999999997938e-06, 6.722000000000672e-06, 6.666000000002392e-06, 6.653000000009235e-06, 6.667000000001866e-06, 6.638999999988848e-06, 6.583000000004446e-06, 6.639000000002726e-06, 6.708999999993637e-06, 6.611000000003586e-06, 6.6519999999958834e-06, 6.611000000003586e-06, 6.625000000010095e-06, 6.624999999996217e-06, 6.666999999987988e-06, 6.652999999995357e-06, 6.681000000008375e-06, 6.653000000009235e-06, 6.5969999999970774e-06, 6.639000000002726e-06, 6.653000000009235e-06, 6.625000000010095e-06, 6.652000000009761e-06, 6.653000000009235e-06, 6.639000000002726e-06, 6.653000000009235e-06, 6.638999999988848e-06, 6.652999999995357e-06, 6.639000000002726e-06, 6.624999999996217e-06, 6.639000000002726e-06, 6.638999999988848e-06, 6.6519999999958834e-06, 6.638999999988848e-06, 6.652999999995357e-06, 6.639000000002726e-06, 6.695000000001006e-06, 6.681000000008375e-06, 6.639000000002726e-06, 6.638999999988848e-06, 6.639000000002726e-06, 6.639000000002726e-06, 6.652999999995357e-06, 6.639000000002726e-06, 6.652999999995357e-06, 6.652999999995357e-06, 6.624999999996217e-06, 6.666000000002392e-06, 6.624999999996217e-06]</msg>
<status status="PASS" starttime="20201030 18:30:35.474" endtime="20201030 18:30:35.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.468" endtime="20201030 18:30:35.476"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:35.480" endtime="20201030 18:30:35.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.478" endtime="20201030 18:30:35.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.477" endtime="20201030 18:30:35.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.055" endtime="20201030 18:30:35.500"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:34.977" endtime="20201030 18:30:35.501" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:35.508" endtime="20201030 18:30:35.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.507" endtime="20201030 18:30:35.528"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.542" endtime="20201030 18:30:35.555"></status>
</kw>
<msg timestamp="20201030 18:30:35.556" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:35.540" endtime="20201030 18:30:35.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.558" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:35.557" endtime="20201030 18:30:35.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.562" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:35.560" endtime="20201030 18:30:35.562"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:35.537" endtime="20201030 18:30:35.563"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:35.535" endtime="20201030 18:30:35.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.533" endtime="20201030 18:30:35.564"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:35.567" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:35.567" endtime="20201030 18:30:35.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.565" endtime="20201030 18:30:35.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.533" endtime="20201030 18:30:35.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.532" endtime="20201030 18:30:35.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.569" endtime="20201030 18:30:35.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.531" endtime="20201030 18:30:35.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.529" endtime="20201030 18:30:35.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.505" endtime="20201030 18:30:35.572"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.583" endtime="20201030 18:30:35.602"></status>
</kw>
<msg timestamp="20201030 18:30:35.603" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:35.581" endtime="20201030 18:30:35.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.605" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:35.604" endtime="20201030 18:30:35.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.606" endtime="20201030 18:30:35.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.577" endtime="20201030 18:30:35.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.575" endtime="20201030 18:30:35.609"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.611" endtime="20201030 18:30:35.613"></status>
</kw>
<msg timestamp="20201030 18:30:35.614" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:30:35.610" endtime="20201030 18:30:35.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.618" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:30:35.617" endtime="20201030 18:30:35.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.620" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:30:35.619" endtime="20201030 18:30:35.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.614" endtime="20201030 18:30:35.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.625" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:30:35.624" endtime="20201030 18:30:35.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.627" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:30:35.626" endtime="20201030 18:30:35.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.621" endtime="20201030 18:30:35.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.635" endtime="20201030 18:30:35.920"></status>
</kw>
<msg timestamp="20201030 18:30:35.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06745025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067453653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:35.633" endtime="20201030 18:30:35.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06745025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067453653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:35.924" endtime="20201030 18:30:35.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.932" endtime="20201030 18:30:35.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.630" endtime="20201030 18:30:35.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.629" endtime="20201030 18:30:35.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:35.939" level="INFO">${RESULT} = [{'diff': 3.4029999999990457e-06}, {'diff': 3.209000000004014e-06}, {'diff': 3.1389999999992257e-06}, {'diff': 3.2219999999971716e-06}, {'diff': 3.2220000000110494e-06}, {'diff': 3.2219999999971716e-0...</msg>
<status status="PASS" starttime="20201030 18:30:35.936" endtime="20201030 18:30:35.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:35.945" level="INFO">${OVERHEAD} = {'diff': [3.4029999999990457e-06, 3.209000000004014e-06, 3.1389999999992257e-06, 3.2219999999971716e-06, 3.2220000000110494e-06, 3.2219999999971716e-06, 3.2229999999966452e-06, 3.2080000000045406e-06,...</msg>
<status status="PASS" starttime="20201030 18:30:35.940" endtime="20201030 18:30:35.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.950" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 18:30:35.949" endtime="20201030 18:30:35.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.952" level="INFO">VALUE: [3.4029999999990457e-06, 3.209000000004014e-06, 3.1389999999992257e-06, 3.2219999999971716e-06, 3.2220000000110494e-06, 3.2219999999971716e-06, 3.2229999999966452e-06, 3.2080000000045406e-06, 3.2219999999971716e-06, 3.2219999999971716e-06, 3.2080000000045406e-06, 3.2219999999971716e-06, 3.2360000000036804e-06, 3.2079999999906628e-06, 3.2360000000036804e-06, 3.2219999999971716e-06, 3.2219999999971716e-06, 3.2219999999971716e-06, 3.2220000000110494e-06, 3.2080000000045406e-06, 3.2359999999898026e-06, 3.2219999999971716e-06, 3.2080000000045406e-06, 3.2219999999971716e-06, 3.2089999999901364e-06, 3.2360000000036804e-06, 3.223000000010523e-06, 3.2220000000110494e-06, 3.2220000000110494e-06, 3.2219999999971716e-06, 3.2080000000045406e-06, 3.1949999999975054e-06, 3.2220000000110494e-06, 3.2229999999966452e-06, 3.2229999999966452e-06, 3.2220000000110494e-06, 3.2080000000045406e-06, 3.1939999999980317e-06, 3.2360000000036804e-06, 3.2219999999971716e-06, 3.237000000003154e-06, 3.237000000003154e-06, 3.2220000000110494e-06, 3.2219999999971716e-06, 3.2080000000045406e-06, 3.223000000010523e-06, 3.2359999999898026e-06, 3.2779999999954512e-06, 3.2229999999966452e-06, 3.2219999999971716e-06]</msg>
<status status="PASS" starttime="20201030 18:30:35.951" endtime="20201030 18:30:35.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.946" endtime="20201030 18:30:35.953"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:35.957" endtime="20201030 18:30:35.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.955" endtime="20201030 18:30:35.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.954" endtime="20201030 18:30:35.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.573" endtime="20201030 18:30:35.978"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:35.503" endtime="20201030 18:30:35.979" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:35.990" endtime="20201030 18:30:36.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.987" endtime="20201030 18:30:36.010"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.024" endtime="20201030 18:30:36.041"></status>
</kw>
<msg timestamp="20201030 18:30:36.041" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:36.022" endtime="20201030 18:30:36.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.044" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:36.042" endtime="20201030 18:30:36.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.047" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:36.045" endtime="20201030 18:30:36.048"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:36.019" endtime="20201030 18:30:36.048"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:36.017" endtime="20201030 18:30:36.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.016" endtime="20201030 18:30:36.049"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:36.053" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:36.052" endtime="20201030 18:30:36.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.050" endtime="20201030 18:30:36.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.015" endtime="20201030 18:30:36.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.014" endtime="20201030 18:30:36.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.055" endtime="20201030 18:30:36.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.013" endtime="20201030 18:30:36.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.011" endtime="20201030 18:30:36.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.986" endtime="20201030 18:30:36.058"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.067" endtime="20201030 18:30:36.092"></status>
</kw>
<msg timestamp="20201030 18:30:36.093" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:36.065" endtime="20201030 18:30:36.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.096" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:36.094" endtime="20201030 18:30:36.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.097" endtime="20201030 18:30:36.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.062" endtime="20201030 18:30:36.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.060" endtime="20201030 18:30:36.100"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.102" endtime="20201030 18:30:36.103"></status>
</kw>
<msg timestamp="20201030 18:30:36.104" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:30:36.100" endtime="20201030 18:30:36.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.108" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:30:36.107" endtime="20201030 18:30:36.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.110" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:30:36.109" endtime="20201030 18:30:36.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.105" endtime="20201030 18:30:36.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.115" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:30:36.114" endtime="20201030 18:30:36.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.117" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:30:36.116" endtime="20201030 18:30:36.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.112" endtime="20201030 18:30:36.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.125" endtime="20201030 18:30:36.413"></status>
</kw>
<msg timestamp="20201030 18:30:36.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069398, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069402403, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:36.123" endtime="20201030 18:30:36.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069398, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069402403, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:36.417" endtime="20201030 18:30:36.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.425" endtime="20201030 18:30:36.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.121" endtime="20201030 18:30:36.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.119" endtime="20201030 18:30:36.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:36.432" level="INFO">${RESULT} = [{'diff': 4.403000000000046e-06}, {'diff': 4.347000000001766e-06}, {'diff': 4.3200000000021e-06}, {'diff': 4.3049999999961175e-06}, {'diff': 4.3189999999887485e-06}, {'diff': 4.305999999995591e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:36.429" endtime="20201030 18:30:36.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:36.437" level="INFO">${OVERHEAD} = {'diff': [4.403000000000046e-06, 4.347000000001766e-06, 4.3200000000021e-06, 4.3049999999961175e-06, 4.3189999999887485e-06, 4.305999999995591e-06, 4.305999999995591e-06, 4.306000000009469e-06, 4.3059...</msg>
<status status="PASS" starttime="20201030 18:30:36.433" endtime="20201030 18:30:36.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.442" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 18:30:36.440" endtime="20201030 18:30:36.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.444" level="INFO">VALUE: [4.403000000000046e-06, 4.347000000001766e-06, 4.3200000000021e-06, 4.3049999999961175e-06, 4.3189999999887485e-06, 4.305999999995591e-06, 4.305999999995591e-06, 4.306000000009469e-06, 4.305999999995591e-06, 4.319000000002626e-06, 4.29200000000296e-06, 4.2639999999899425e-06, 4.332999999995257e-06, 4.34800000000124e-06, 4.3049999999961175e-06, 4.319000000002626e-06, 4.333999999994731e-06, 4.306000000009469e-06, 4.291999999989082e-06, 4.3200000000021e-06, 4.305999999995591e-06, 4.2360000000046805e-06, 4.319000000002626e-06, 4.305999999995591e-06, 4.305000000009995e-06, 4.305999999995591e-06, 4.333000000009135e-06, 4.3049999999961175e-06, 4.3049999999961175e-06, 4.306000000009469e-06, 4.305999999995591e-06, 4.332999999995257e-06, 4.3049999999961175e-06, 4.305999999995591e-06, 4.29200000000296e-06, 4.305999999995591e-06, 4.3049999999961175e-06, 4.29200000000296e-06, 4.319000000002626e-06, 4.306000000009469e-06, 4.305999999995591e-06, 4.332999999995257e-06, 4.360999999994397e-06, 4.29200000000296e-06, 4.305999999995591e-06, 4.2910000000034865e-06, 4.319000000002626e-06, 4.29200000000296e-06, 4.34800000000124e-06, 4.3189999999887485e-06]</msg>
<status status="PASS" starttime="20201030 18:30:36.443" endtime="20201030 18:30:36.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.438" endtime="20201030 18:30:36.445"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:36.449" endtime="20201030 18:30:36.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.447" endtime="20201030 18:30:36.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.446" endtime="20201030 18:30:36.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.059" endtime="20201030 18:30:36.469"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:35.982" endtime="20201030 18:30:36.470" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:36.477" endtime="20201030 18:30:36.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.476" endtime="20201030 18:30:36.497"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.512" endtime="20201030 18:30:36.526"></status>
</kw>
<msg timestamp="20201030 18:30:36.526" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:36.510" endtime="20201030 18:30:36.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.529" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:36.527" endtime="20201030 18:30:36.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.532" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:36.530" endtime="20201030 18:30:36.532"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:36.507" endtime="20201030 18:30:36.533"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:36.505" endtime="20201030 18:30:36.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.502" endtime="20201030 18:30:36.534"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:36.538" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:36.537" endtime="20201030 18:30:36.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.535" endtime="20201030 18:30:36.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.502" endtime="20201030 18:30:36.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.501" endtime="20201030 18:30:36.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.540" endtime="20201030 18:30:36.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.500" endtime="20201030 18:30:36.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.498" endtime="20201030 18:30:36.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.474" endtime="20201030 18:30:36.543"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.555" endtime="20201030 18:30:36.593"></status>
</kw>
<msg timestamp="20201030 18:30:36.593" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:36.552" endtime="20201030 18:30:36.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.596" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:36.594" endtime="20201030 18:30:36.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.597" endtime="20201030 18:30:36.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.549" endtime="20201030 18:30:36.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.546" endtime="20201030 18:30:36.600"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.602" endtime="20201030 18:30:36.604"></status>
</kw>
<msg timestamp="20201030 18:30:36.604" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:30:36.601" endtime="20201030 18:30:36.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.609" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:30:36.608" endtime="20201030 18:30:36.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.611" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:30:36.610" endtime="20201030 18:30:36.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.605" endtime="20201030 18:30:36.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.617" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:30:36.615" endtime="20201030 18:30:36.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.619" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:30:36.618" endtime="20201030 18:30:36.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.612" endtime="20201030 18:30:36.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.627" endtime="20201030 18:30:36.914"></status>
</kw>
<msg timestamp="20201030 18:30:36.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070764181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070769306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:36.625" endtime="20201030 18:30:36.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070764181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070769306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:36.918" endtime="20201030 18:30:36.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.927" endtime="20201030 18:30:36.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.623" endtime="20201030 18:30:36.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.621" endtime="20201030 18:30:36.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:36.934" level="INFO">${RESULT} = [{'diff': 5.125000000008595e-06}, {'diff': 5.0139999999976315e-06}, {'diff': 5.0139999999976315e-06}, {'diff': 5.0279999999902625e-06}, {'diff': 4.9860000000123694e-06}, {'diff': 5.0000000000050004e-0...</msg>
<status status="PASS" starttime="20201030 18:30:36.931" endtime="20201030 18:30:36.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:36.939" level="INFO">${OVERHEAD} = {'diff': [5.125000000008595e-06, 5.0139999999976315e-06, 5.0139999999976315e-06, 5.0279999999902625e-06, 4.9860000000123694e-06, 5.0000000000050004e-06, 4.986999999997965e-06, 5.0000000000050004e-06, ...</msg>
<status status="PASS" starttime="20201030 18:30:36.935" endtime="20201030 18:30:36.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.943" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 18:30:36.942" endtime="20201030 18:30:36.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.946" level="INFO">VALUE: [5.125000000008595e-06, 5.0139999999976315e-06, 5.0139999999976315e-06, 5.0279999999902625e-06, 4.9860000000123694e-06, 5.0000000000050004e-06, 4.986999999997965e-06, 5.0000000000050004e-06, 5.0000000000050004e-06, 5.012999999998158e-06, 5.041999999996771e-06, 5.0000000000050004e-06, 5.0139999999976315e-06, 5.02800000000414e-06, 5.0139999999976315e-06, 5.0000000000050004e-06, 4.985999999998492e-06, 5.027000000004667e-06, 5.0000000000050004e-06, 5.02800000000414e-06, 5.0139999999976315e-06, 5.0000000000050004e-06, 4.999999999991123e-06, 5.0000000000050004e-06, 4.999999999991123e-06, 5.0410000000111754e-06, 4.972000000005861e-06, 4.985999999998492e-06, 5.02800000000414e-06, 5.0000000000050004e-06, 5.013000000012036e-06, 4.930999999999686e-06, 5.0139999999976315e-06, 4.985999999998492e-06, 5.0550000000038064e-06, 5.0000000000050004e-06, 5.027000000004667e-06, 5.0000000000050004e-06, 5.0000000000050004e-06, 5.0139999999976315e-06, 4.957999999999352e-06, 5.026999999990789e-06, 4.985999999998492e-06, 5.012999999998158e-06, 4.999999999991123e-06, 4.957999999999352e-06, 5.0000000000050004e-06, 5.012999999998158e-06, 5.0000000000050004e-06, 4.999999999991123e-06]</msg>
<status status="PASS" starttime="20201030 18:30:36.944" endtime="20201030 18:30:36.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.939" endtime="20201030 18:30:36.948"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:36.951" endtime="20201030 18:30:36.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.950" endtime="20201030 18:30:36.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.949" endtime="20201030 18:30:36.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.544" endtime="20201030 18:30:36.972"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:36.472" endtime="20201030 18:30:36.973" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:36.979" endtime="20201030 18:30:36.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.978" endtime="20201030 18:30:36.999"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.013" endtime="20201030 18:30:37.028"></status>
</kw>
<msg timestamp="20201030 18:30:37.028" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:37.011" endtime="20201030 18:30:37.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.031" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:37.029" endtime="20201030 18:30:37.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.034" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:37.032" endtime="20201030 18:30:37.034"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:37.009" endtime="20201030 18:30:37.035"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:37.006" endtime="20201030 18:30:37.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.005" endtime="20201030 18:30:37.036"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:37.040" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:37.039" endtime="20201030 18:30:37.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.037" endtime="20201030 18:30:37.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.004" endtime="20201030 18:30:37.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.003" endtime="20201030 18:30:37.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.042" endtime="20201030 18:30:37.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.002" endtime="20201030 18:30:37.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.000" endtime="20201030 18:30:37.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.977" endtime="20201030 18:30:37.045"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.049" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:30:37.058" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:30:38.363" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:30:37.048" endtime="20201030 18:30:38.363"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.366" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:30:38.365" endtime="20201030 18:30:38.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.046" endtime="20201030 18:30:38.367"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.379" endtime="20201030 18:30:38.386"></status>
</kw>
<msg timestamp="20201030 18:30:38.387" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:38.377" endtime="20201030 18:30:38.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.389" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:38.388" endtime="20201030 18:30:38.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.391" endtime="20201030 18:30:38.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.374" endtime="20201030 18:30:38.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.372" endtime="20201030 18:30:38.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.400" endtime="20201030 18:30:38.688"></status>
</kw>
<msg timestamp="20201030 18:30:38.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.388986514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.388990861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:38.398" endtime="20201030 18:30:38.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.388986514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.388990861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:38.693" endtime="20201030 18:30:38.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.706" endtime="20201030 18:30:38.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.396" endtime="20201030 18:30:38.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.394" endtime="20201030 18:30:38.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:38.714" level="INFO">${PHILIP_RES} = [{'diff': 4.346999999960133e-06}, {'diff': 3.2360000001840916e-06}, {'diff': 3.2220000001359494e-06}, {'diff': 3.2640000000583314e-06}, {'diff': 3.2370000000447874e-06}, {'diff': 3.235999999962047e-06...</msg>
<status status="PASS" starttime="20201030 18:30:38.710" endtime="20201030 18:30:38.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:38.723" level="INFO">${RESULT} = {'diff': [4.346999999960133e-06, 3.2360000001840916e-06, 3.2220000001359494e-06, 3.2640000000583314e-06, 3.2370000000447874e-06, 3.235999999962047e-06, 3.250000000010189e-06, 3.250000000010189e-06, 3....</msg>
<status status="PASS" starttime="20201030 18:30:38.717" endtime="20201030 18:30:38.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.731" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:38.730" endtime="20201030 18:30:38.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.734" level="INFO">VALUE: [4.346999999960133e-06, 3.2360000001840916e-06, 3.2220000001359494e-06, 3.2640000000583314e-06, 3.2370000000447874e-06, 3.235999999962047e-06, 3.250000000010189e-06, 3.250000000010189e-06, 3.250000000010189e-06, 3.262999999975591e-06, 3.235999999962047e-06, 3.250000000010189e-06, 3.2639999998362867e-06, 3.2640000000583314e-06, 3.235999999962047e-06, 3.250000000010189e-06, 3.2640000000583314e-06, 3.2640000000583314e-06, 3.250000000010189e-06, 3.2639999998362867e-06, 3.2639999998362867e-06, 3.2499999997881446e-06, 3.2640000000583314e-06, 3.1810000000742633e-06, 3.221999999913905e-06, 3.2780000001064735e-06, 3.2639999998362867e-06, 3.221999999913905e-06, 3.2360000001840916e-06, 3.2220000001359494e-06, 3.2640000000583314e-06, 3.250000000010189e-06, 3.2639999998362867e-06, 3.2640000000583314e-06, 3.235999999962047e-06, 3.2640000000583314e-06, 3.2640000000583314e-06, 3.2640000000583314e-06, 3.250000000010189e-06, 3.2639999998362867e-06, 3.2639999998362867e-06, 3.2640000000583314e-06, 3.250000000010189e-06, 3.262999999975591e-06, 3.2640000000583314e-06, 3.2640000000583314e-06, 3.2639999998362867e-06, 3.250000000010189e-06, 3.250000000010189e-06, 3.2780000001064735e-06]</msg>
<status status="PASS" starttime="20201030 18:30:38.732" endtime="20201030 18:30:38.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.726" endtime="20201030 18:30:38.735"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:38.739" endtime="20201030 18:30:38.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.737" endtime="20201030 18:30:38.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.736" endtime="20201030 18:30:38.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.369" endtime="20201030 18:30:38.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.368" endtime="20201030 18:30:38.759"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.768" endtime="20201030 18:30:38.776"></status>
</kw>
<msg timestamp="20201030 18:30:38.777" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:38.767" endtime="20201030 18:30:38.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.779" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:38.778" endtime="20201030 18:30:38.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.780" endtime="20201030 18:30:38.782"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.764" endtime="20201030 18:30:38.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.762" endtime="20201030 18:30:38.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.790" endtime="20201030 18:30:39.077"></status>
</kw>
<msg timestamp="20201030 18:30:39.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01925025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019256625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:38.788" endtime="20201030 18:30:39.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01925025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019256625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:39.081" endtime="20201030 18:30:39.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.090" endtime="20201030 18:30:39.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.786" endtime="20201030 18:30:39.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.784" endtime="20201030 18:30:39.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:39.097" level="INFO">${PHILIP_RES} = [{'diff': 6.374999999999437e-06}, {'diff': 5.666000000001392e-06}, {'diff': 5.681000000000436e-06}, {'diff': 5.708000000000102e-06}, {'diff': 5.681000000000436e-06}, {'diff': 5.708000000000102e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:39.093" endtime="20201030 18:30:39.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:39.112" level="INFO">${RESULT} = {'diff': [6.374999999999437e-06, 5.666000000001392e-06, 5.681000000000436e-06, 5.708000000000102e-06, 5.681000000000436e-06, 5.708000000000102e-06, 5.708000000000102e-06, 5.694000000000532e-06, 5.6950...</msg>
<status status="PASS" starttime="20201030 18:30:39.107" endtime="20201030 18:30:39.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.116" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:39.115" endtime="20201030 18:30:39.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.119" level="INFO">VALUE: [6.374999999999437e-06, 5.666000000001392e-06, 5.681000000000436e-06, 5.708000000000102e-06, 5.681000000000436e-06, 5.708000000000102e-06, 5.708000000000102e-06, 5.694000000000532e-06, 5.695000000000006e-06, 5.694000000000532e-06, 5.667000000000866e-06, 5.694000000000532e-06, 5.6529999999978264e-06, 5.666000000001392e-06, 5.708000000000102e-06, 5.694000000000532e-06, 5.721999999999672e-06, 5.695000000000006e-06, 5.694000000000532e-06, 5.7089999999995755e-06, 5.721999999999672e-06, 5.695000000000006e-06, 5.667000000000866e-06, 5.680999999996966e-06, 5.750000000002281e-06, 5.6389999999982565e-06, 5.708000000000102e-06, 5.695000000000006e-06, 5.681000000000436e-06, 5.6389999999982565e-06, 5.708000000000102e-06, 5.7089999999995755e-06, 5.694000000000532e-06, 5.7089999999995755e-06, 5.721999999999672e-06, 5.736000000002711e-06, 5.792000000000991e-06, 5.7089999999995755e-06, 5.694000000000532e-06, 5.695000000000006e-06, 5.708000000000102e-06, 5.695000000000006e-06, 5.694000000000532e-06, 5.7089999999995755e-06, 5.694000000000532e-06, 5.7089999999995755e-06, 5.6939999999970625e-06, 5.695000000000006e-06, 5.708000000000102e-06, 5.721999999999672e-06]</msg>
<status status="PASS" starttime="20201030 18:30:39.118" endtime="20201030 18:30:39.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.113" endtime="20201030 18:30:39.120"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:39.124" endtime="20201030 18:30:39.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.122" endtime="20201030 18:30:39.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.121" endtime="20201030 18:30:39.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.760" endtime="20201030 18:30:39.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.760" endtime="20201030 18:30:39.145"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.153" endtime="20201030 18:30:39.162"></status>
</kw>
<msg timestamp="20201030 18:30:39.162" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:39.152" endtime="20201030 18:30:39.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.165" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:39.163" endtime="20201030 18:30:39.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.166" endtime="20201030 18:30:39.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.149" endtime="20201030 18:30:39.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.147" endtime="20201030 18:30:39.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.175" endtime="20201030 18:30:39.464"></status>
</kw>
<msg timestamp="20201030 18:30:39.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019053333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019061056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:39.174" endtime="20201030 18:30:39.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019053333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019061056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:39.469" endtime="20201030 18:30:39.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.477" endtime="20201030 18:30:39.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.171" endtime="20201030 18:30:39.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.169" endtime="20201030 18:30:39.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:39.484" level="INFO">${PHILIP_RES} = [{'diff': 7.723000000001146e-06}, {'diff': 6.958000000001352e-06}, {'diff': 6.958000000001352e-06}, {'diff': 6.959000000000826e-06}, {'diff': 6.972000000000922e-06}, {'diff': 6.972000000000922e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:39.481" endtime="20201030 18:30:39.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:39.489" level="INFO">${RESULT} = {'diff': [7.723000000001146e-06, 6.958000000001352e-06, 6.958000000001352e-06, 6.959000000000826e-06, 6.972000000000922e-06, 6.972000000000922e-06, 6.959000000000826e-06, 6.945000000001256e-06, 6.9439...</msg>
<status status="PASS" starttime="20201030 18:30:39.485" endtime="20201030 18:30:39.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.493" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:39.492" endtime="20201030 18:30:39.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.496" level="INFO">VALUE: [7.723000000001146e-06, 6.958000000001352e-06, 6.958000000001352e-06, 6.959000000000826e-06, 6.972000000000922e-06, 6.972000000000922e-06, 6.959000000000826e-06, 6.945000000001256e-06, 6.943999999998313e-06, 6.944999999997786e-06, 6.9579999999978825e-06, 6.929999999998743e-06, 6.944999999997786e-06, 6.9869999999999655e-06, 6.888999999999507e-06, 6.944999999997786e-06, 6.944999999997786e-06, 6.943999999998313e-06, 6.959000000000826e-06, 6.945000000001256e-06, 6.943999999998313e-06, 6.958000000001352e-06, 6.888999999999507e-06, 6.944000000001782e-06, 6.945000000001256e-06, 6.931000000001686e-06, 6.930000000002212e-06, 6.915999999999173e-06, 6.959000000000826e-06, 6.930000000002212e-06, 6.944000000001782e-06, 7.000000000000062e-06, 6.930000000002212e-06, 6.944000000001782e-06, 6.945000000001256e-06, 6.944000000001782e-06, 6.943999999998313e-06, 6.944999999997786e-06, 6.944000000001782e-06, 6.9579999999978825e-06, 6.958999999997356e-06, 6.943999999998313e-06, 6.943999999998313e-06, 6.930000000002212e-06, 6.9579999999978825e-06, 6.943999999998313e-06, 6.944999999997786e-06, 6.943999999998313e-06, 6.9579999999978825e-06, 6.944999999997786e-06]</msg>
<status status="PASS" starttime="20201030 18:30:39.495" endtime="20201030 18:30:39.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.490" endtime="20201030 18:30:39.497"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:39.501" endtime="20201030 18:30:39.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.499" endtime="20201030 18:30:39.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.498" endtime="20201030 18:30:39.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.146" endtime="20201030 18:30:39.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.145" endtime="20201030 18:30:39.521"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.531" endtime="20201030 18:30:39.539"></status>
</kw>
<msg timestamp="20201030 18:30:39.540" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:39.529" endtime="20201030 18:30:39.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.542" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:39.541" endtime="20201030 18:30:39.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.544" endtime="20201030 18:30:39.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.526" endtime="20201030 18:30:39.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.524" endtime="20201030 18:30:39.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.553" endtime="20201030 18:30:39.839"></status>
</kw>
<msg timestamp="20201030 18:30:39.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020156944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020166042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:39.551" endtime="20201030 18:30:39.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020156944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020166042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:39.844" endtime="20201030 18:30:39.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.852" endtime="20201030 18:30:39.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.549" endtime="20201030 18:30:39.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.547" endtime="20201030 18:30:39.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:39.860" level="INFO">${PHILIP_RES} = [{'diff': 9.097999999999051e-06}, {'diff': 8.360999999998397e-06}, {'diff': 8.347000000002297e-06}, {'diff': 8.333000000002727e-06}, {'diff': 8.318999999999688e-06}, {'diff': 8.305000000000118e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:39.856" endtime="20201030 18:30:39.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:39.864" level="INFO">${RESULT} = {'diff': [9.097999999999051e-06, 8.360999999998397e-06, 8.347000000002297e-06, 8.333000000002727e-06, 8.318999999999688e-06, 8.305000000000118e-06, 8.346999999998828e-06, 8.332999999999258e-06, 8.3340...</msg>
<status status="PASS" starttime="20201030 18:30:39.861" endtime="20201030 18:30:39.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.869" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:39.867" endtime="20201030 18:30:39.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.872" level="INFO">VALUE: [9.097999999999051e-06, 8.360999999998397e-06, 8.347000000002297e-06, 8.333000000002727e-06, 8.318999999999688e-06, 8.305000000000118e-06, 8.346999999998828e-06, 8.332999999999258e-06, 8.3340000000022e-06, 8.332999999999258e-06, 8.332999999999258e-06, 8.388999999997537e-06, 8.332999999999258e-06, 8.333000000002727e-06, 8.305999999999591e-06, 8.318999999999688e-06, 8.333999999998731e-06, 8.360999999998397e-06, 8.360999999998397e-06, 8.34800000000177e-06, 8.32000000000263e-06, 8.332999999999258e-06, 8.403000000000577e-06, 8.346999999998828e-06, 8.361000000001867e-06, 8.3340000000022e-06, 8.346999999998828e-06, 8.332999999999258e-06, 8.401999999997634e-06, 8.318999999999688e-06, 8.347000000002297e-06, 8.332999999999258e-06, 8.360999999998397e-06, 8.333999999998731e-06, 8.332999999999258e-06, 8.332999999999258e-06, 8.3340000000022e-06, 8.346999999998828e-06, 8.332999999999258e-06, 8.333999999998731e-06, 8.318999999999688e-06, 8.333000000002727e-06, 8.305999999999591e-06, 8.332999999999258e-06, 8.332999999999258e-06, 8.346999999998828e-06, 8.361000000001867e-06, 8.3340000000022e-06, 8.346999999998828e-06, 8.332999999999258e-06]</msg>
<status status="PASS" starttime="20201030 18:30:39.870" endtime="20201030 18:30:39.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.865" endtime="20201030 18:30:39.873"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:39.877" endtime="20201030 18:30:39.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.875" endtime="20201030 18:30:39.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.874" endtime="20201030 18:30:39.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.522" endtime="20201030 18:30:39.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.522" endtime="20201030 18:30:39.897"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.909" endtime="20201030 18:30:39.919"></status>
</kw>
<msg timestamp="20201030 18:30:39.919" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:39.905" endtime="20201030 18:30:39.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.927" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:39.920" endtime="20201030 18:30:39.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.929" endtime="20201030 18:30:39.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.902" endtime="20201030 18:30:39.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.900" endtime="20201030 18:30:39.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.944" endtime="20201030 18:30:40.235"></status>
</kw>
<msg timestamp="20201030 18:30:40.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022426653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022437167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:39.942" endtime="20201030 18:30:40.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022426653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022437167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:40.240" endtime="20201030 18:30:40.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.248" endtime="20201030 18:30:40.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.938" endtime="20201030 18:30:40.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.935" endtime="20201030 18:30:40.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:40.255" level="INFO">${PHILIP_RES} = [{'diff': 1.0513999999999663e-05}, {'diff': 9.833000000000758e-06}, {'diff': 9.763999999998912e-06}, {'diff': 9.749999999999343e-06}, {'diff': 9.735999999999773e-06}, {'diff': 9.667000000001397e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:30:40.252" endtime="20201030 18:30:40.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:40.260" level="INFO">${RESULT} = {'diff': [1.0513999999999663e-05, 9.833000000000758e-06, 9.763999999998912e-06, 9.749999999999343e-06, 9.735999999999773e-06, 9.667000000001397e-06, 9.722000000000203e-06, 9.763999999998912e-06, 9.763...</msg>
<status status="PASS" starttime="20201030 18:30:40.256" endtime="20201030 18:30:40.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.265" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:40.264" endtime="20201030 18:30:40.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.267" level="INFO">VALUE: [1.0513999999999663e-05, 9.833000000000758e-06, 9.763999999998912e-06, 9.749999999999343e-06, 9.735999999999773e-06, 9.667000000001397e-06, 9.722000000000203e-06, 9.763999999998912e-06, 9.763999999998912e-06, 9.749999999999343e-06, 9.749999999999343e-06, 9.764000000002382e-06, 9.805000000001618e-06, 9.749999999999343e-06, 9.749999999999343e-06, 9.764000000002382e-06, 9.708000000000633e-06, 9.763999999998912e-06, 9.749999999999343e-06, 9.749999999999343e-06, 9.749999999999343e-06, 9.778000000001952e-06, 9.763999999998912e-06, 9.749999999999343e-06, 9.749999999999343e-06, 9.749999999999343e-06, 9.750000000002812e-06, 9.778000000001952e-06, 9.736999999999246e-06, 9.749999999999343e-06, 9.749999999999343e-06, 9.764000000002382e-06, 9.791000000002048e-06, 9.749999999999343e-06, 9.749999999999343e-06, 9.763999999998912e-06, 9.776999999999009e-06, 9.750000000002812e-06, 9.749999999999343e-06, 9.749999999999343e-06, 9.762999999999439e-06, 9.763999999998912e-06, 9.764000000002382e-06, 9.749999999999343e-06, 9.749999999999343e-06, 9.763999999998912e-06, 9.763999999998912e-06, 9.764000000002382e-06, 9.722000000000203e-06, 9.763999999998912e-06]</msg>
<status status="PASS" starttime="20201030 18:30:40.266" endtime="20201030 18:30:40.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.261" endtime="20201030 18:30:40.268"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:40.271" endtime="20201030 18:30:40.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.270" endtime="20201030 18:30:40.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.269" endtime="20201030 18:30:40.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.898" endtime="20201030 18:30:40.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.898" endtime="20201030 18:30:40.292"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.301" endtime="20201030 18:30:40.309"></status>
</kw>
<msg timestamp="20201030 18:30:40.309" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:40.299" endtime="20201030 18:30:40.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.312" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:40.310" endtime="20201030 18:30:40.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.313" endtime="20201030 18:30:40.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.297" endtime="20201030 18:30:40.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.295" endtime="20201030 18:30:40.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.322" endtime="20201030 18:30:40.624"></status>
</kw>
<msg timestamp="20201030 18:30:40.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018584556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018596556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:40.320" endtime="20201030 18:30:40.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018584556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018596556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:40.629" endtime="20201030 18:30:40.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.637" endtime="20201030 18:30:40.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.318" endtime="20201030 18:30:40.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.316" endtime="20201030 18:30:40.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:40.647" level="INFO">${PHILIP_RES} = [{'diff': 1.2000000000001593e-05}, {'diff': 1.1208000000002133e-05}, {'diff': 1.1193999999999094e-05}, {'diff': 1.1221999999998233e-05}, {'diff': 1.1193999999999094e-05}, {'diff': 1.1208999999998137e-...</msg>
<status status="PASS" starttime="20201030 18:30:40.643" endtime="20201030 18:30:40.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:40.651" level="INFO">${RESULT} = {'diff': [1.2000000000001593e-05, 1.1208000000002133e-05, 1.1193999999999094e-05, 1.1221999999998233e-05, 1.1193999999999094e-05, 1.1208999999998137e-05, 1.1180999999998997e-05, 1.1207999999998663e-05...</msg>
<status status="PASS" starttime="20201030 18:30:40.648" endtime="20201030 18:30:40.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.655" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:40.654" endtime="20201030 18:30:40.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.658" level="INFO">VALUE: [1.2000000000001593e-05, 1.1208000000002133e-05, 1.1193999999999094e-05, 1.1221999999998233e-05, 1.1193999999999094e-05, 1.1208999999998137e-05, 1.1180999999998997e-05, 1.1207999999998663e-05, 1.1124999999997248e-05, 1.1222000000001703e-05, 1.1181000000002467e-05, 1.1264000000000413e-05, 1.1195000000002037e-05, 1.1208000000002133e-05, 1.1179999999999524e-05, 1.1207999999998663e-05, 1.1193999999999094e-05, 1.1222999999997707e-05, 1.1221999999998233e-05, 1.1194999999998567e-05, 1.1193999999999094e-05, 1.1179999999999524e-05, 1.1167000000002897e-05, 1.1181000000002467e-05, 1.1195000000002037e-05, 1.1152000000000384e-05, 1.1207999999998663e-05, 1.1179999999999524e-05, 1.1180999999998997e-05, 1.1180999999998997e-05, 1.1209000000001607e-05, 1.1194999999998567e-05, 1.1222000000001703e-05, 1.1194000000002563e-05, 1.1208000000002133e-05, 1.1195000000002037e-05, 1.1208999999998137e-05, 1.1194999999998567e-05, 1.1179999999999524e-05, 1.1193999999999094e-05, 1.1194999999998567e-05, 1.1180999999998997e-05, 1.1222000000001703e-05, 1.1207999999998663e-05, 1.1179999999999524e-05, 1.1194000000002563e-05, 1.1208000000002133e-05, 1.1194999999998567e-05, 1.1195000000002037e-05, 1.1193999999999094e-05]</msg>
<status status="PASS" starttime="20201030 18:30:40.656" endtime="20201030 18:30:40.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.652" endtime="20201030 18:30:40.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:40.662" endtime="20201030 18:30:40.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.661" endtime="20201030 18:30:40.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.660" endtime="20201030 18:30:40.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.293" endtime="20201030 18:30:40.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.293" endtime="20201030 18:30:40.683"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.691" endtime="20201030 18:30:40.700"></status>
</kw>
<msg timestamp="20201030 18:30:40.701" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:40.689" endtime="20201030 18:30:40.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.703" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:40.702" endtime="20201030 18:30:40.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.704" endtime="20201030 18:30:40.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.687" endtime="20201030 18:30:40.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.685" endtime="20201030 18:30:40.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.716" endtime="20201030 18:30:41.001"></status>
</kw>
<msg timestamp="20201030 18:30:41.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019137583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019151, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:40.713" endtime="20201030 18:30:41.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019137583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019151, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:41.005" endtime="20201030 18:30:41.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.014" endtime="20201030 18:30:41.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.709" endtime="20201030 18:30:41.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.708" endtime="20201030 18:30:41.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:41.020" level="INFO">${PHILIP_RES} = [{'diff': 1.3417000000001678e-05}, {'diff': 1.2666000000001454e-05}, {'diff': 1.2694000000000594e-05}, {'diff': 1.2679999999997554e-05}, {'diff': 1.2681000000000497e-05}, {'diff': 1.2681000000000497e-...</msg>
<status status="PASS" starttime="20201030 18:30:41.017" endtime="20201030 18:30:41.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:41.025" level="INFO">${RESULT} = {'diff': [1.3417000000001678e-05, 1.2666000000001454e-05, 1.2694000000000594e-05, 1.2679999999997554e-05, 1.2681000000000497e-05, 1.2681000000000497e-05, 1.2652999999997888e-05, 1.2681000000000497e-05...</msg>
<status status="PASS" starttime="20201030 18:30:41.021" endtime="20201030 18:30:41.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.029" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:41.028" endtime="20201030 18:30:41.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.031" level="INFO">VALUE: [1.3417000000001678e-05, 1.2666000000001454e-05, 1.2694000000000594e-05, 1.2679999999997554e-05, 1.2681000000000497e-05, 1.2681000000000497e-05, 1.2652999999997888e-05, 1.2681000000000497e-05, 1.2680000000001024e-05, 1.2651999999998415e-05, 1.2666000000001454e-05, 1.2667000000000928e-05, 1.2666999999997458e-05, 1.2695000000000067e-05, 1.2653000000001358e-05, 1.2681000000000497e-05, 1.2624999999998748e-05, 1.2625000000002218e-05, 1.2694000000000594e-05, 1.2653000000001358e-05, 1.2680999999997028e-05, 1.2667000000000928e-05, 1.2681000000000497e-05, 1.2695000000000067e-05, 1.2694000000000594e-05, 1.2666000000001454e-05, 1.2624999999998748e-05, 1.2681000000000497e-05, 1.2667000000000928e-05, 1.2666999999997458e-05, 1.2653000000001358e-05, 1.2681000000000497e-05, 1.2679999999997554e-05, 1.2680000000001024e-05, 1.2680000000001024e-05, 1.2652999999997888e-05, 1.2667000000000928e-05, 1.2681000000000497e-05, 1.2695000000000067e-05, 1.2680000000001024e-05, 1.2665999999997984e-05, 1.2624999999998748e-05, 1.2667000000000928e-05, 1.2680999999997028e-05, 1.2652999999997888e-05, 1.2653000000001358e-05, 1.2638999999998318e-05, 1.2666000000001454e-05, 1.2652000000001884e-05, 1.2651999999998415e-05]</msg>
<status status="PASS" starttime="20201030 18:30:41.030" endtime="20201030 18:30:41.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.025" endtime="20201030 18:30:41.033"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:41.037" endtime="20201030 18:30:41.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.035" endtime="20201030 18:30:41.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.034" endtime="20201030 18:30:41.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.684" endtime="20201030 18:30:41.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.683" endtime="20201030 18:30:41.057"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.066" endtime="20201030 18:30:41.075"></status>
</kw>
<msg timestamp="20201030 18:30:41.076" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:41.064" endtime="20201030 18:30:41.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.078" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:41.077" endtime="20201030 18:30:41.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.079" endtime="20201030 18:30:41.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.061" endtime="20201030 18:30:41.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.060" endtime="20201030 18:30:41.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.088" endtime="20201030 18:30:41.374"></status>
</kw>
<msg timestamp="20201030 18:30:41.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018554778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018569708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:41.087" endtime="20201030 18:30:41.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018554778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018569708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:41.378" endtime="20201030 18:30:41.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.386" endtime="20201030 18:30:41.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.084" endtime="20201030 18:30:41.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.083" endtime="20201030 18:30:41.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:41.393" level="INFO">${PHILIP_RES} = [{'diff': 1.4929999999999805e-05}, {'diff': 1.4125000000000248e-05}, {'diff': 1.4180999999998528e-05}, {'diff': 1.4180000000002524e-05}, {'diff': 1.4112000000000152e-05}, {'diff': 1.4152999999999388e-...</msg>
<status status="PASS" starttime="20201030 18:30:41.389" endtime="20201030 18:30:41.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:41.398" level="INFO">${RESULT} = {'diff': [1.4929999999999805e-05, 1.4125000000000248e-05, 1.4180999999998528e-05, 1.4180000000002524e-05, 1.4112000000000152e-05, 1.4152999999999388e-05, 1.4237000000000277e-05, 1.4207999999998194e-05...</msg>
<status status="PASS" starttime="20201030 18:30:41.394" endtime="20201030 18:30:41.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.402" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:41.401" endtime="20201030 18:30:41.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.405" level="INFO">VALUE: [1.4929999999999805e-05, 1.4125000000000248e-05, 1.4180999999998528e-05, 1.4180000000002524e-05, 1.4112000000000152e-05, 1.4152999999999388e-05, 1.4237000000000277e-05, 1.4207999999998194e-05, 1.4139000000003288e-05, 1.4181000000001998e-05, 1.4152999999999388e-05, 1.4194000000002094e-05, 1.4152999999999388e-05, 1.4180999999998528e-05, 1.4138999999999818e-05, 1.4179999999999054e-05, 1.4180999999998528e-05, 1.4194000000002094e-05, 1.4165999999999485e-05, 1.4208000000001664e-05, 1.4221999999997764e-05, 1.4179999999999054e-05, 1.4194000000002094e-05, 1.4166999999998958e-05, 1.4194999999998098e-05, 1.4165999999999485e-05, 1.4235999999997334e-05, 1.4209000000001137e-05, 1.4167000000002428e-05, 1.4207999999998194e-05, 1.4181000000001998e-05, 1.4152999999999388e-05, 1.4165999999999485e-05, 1.4179999999999054e-05, 1.4125000000000248e-05, 1.4152999999999388e-05, 1.4165999999999485e-05, 1.4207999999998194e-05, 1.4209000000001137e-05, 1.4180000000002524e-05, 1.4179999999999054e-05, 1.4138999999999818e-05, 1.4181000000001998e-05, 1.4151999999999915e-05, 1.4166999999998958e-05, 1.4195000000001567e-05, 1.4166999999998958e-05, 1.4179999999999054e-05, 1.4166999999998958e-05, 1.4236000000000804e-05]</msg>
<status status="PASS" starttime="20201030 18:30:41.403" endtime="20201030 18:30:41.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.399" endtime="20201030 18:30:41.406"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:41.409" endtime="20201030 18:30:41.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.408" endtime="20201030 18:30:41.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.407" endtime="20201030 18:30:41.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.058" endtime="20201030 18:30:41.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.058" endtime="20201030 18:30:41.430"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.438" endtime="20201030 18:30:41.447"></status>
</kw>
<msg timestamp="20201030 18:30:41.447" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:41.437" endtime="20201030 18:30:41.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.449" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:41.448" endtime="20201030 18:30:41.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.451" endtime="20201030 18:30:41.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.434" endtime="20201030 18:30:41.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.432" endtime="20201030 18:30:41.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.460" endtime="20201030 18:30:41.747"></status>
</kw>
<msg timestamp="20201030 18:30:41.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018458625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018475125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:41.459" endtime="20201030 18:30:41.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018458625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018475125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:41.751" endtime="20201030 18:30:41.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.760" endtime="20201030 18:30:41.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.456" endtime="20201030 18:30:41.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.454" endtime="20201030 18:30:41.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:41.766" level="INFO">${PHILIP_RES} = [{'diff': 1.6499999999999154e-05}, {'diff': 1.5694000000000125e-05}, {'diff': 1.565300000000089e-05}, {'diff': 1.5707999999999694e-05}, {'diff': 1.5680000000000555e-05}, {'diff': 1.5764000000001444e-0...</msg>
<status status="PASS" starttime="20201030 18:30:41.763" endtime="20201030 18:30:41.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:41.771" level="INFO">${RESULT} = {'diff': [1.6499999999999154e-05, 1.5694000000000125e-05, 1.565300000000089e-05, 1.5707999999999694e-05, 1.5680000000000555e-05, 1.5764000000001444e-05, 1.562499999999828e-05, 1.562500000000175e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:30:41.767" endtime="20201030 18:30:41.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.775" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:41.774" endtime="20201030 18:30:41.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.777" level="INFO">VALUE: [1.6499999999999154e-05, 1.5694000000000125e-05, 1.565300000000089e-05, 1.5707999999999694e-05, 1.5680000000000555e-05, 1.5764000000001444e-05, 1.562499999999828e-05, 1.562500000000175e-05, 1.5680000000000555e-05, 1.5694999999999598e-05, 1.5708999999999168e-05, 1.5749999999998404e-05, 1.5735999999998834e-05, 1.5694999999999598e-05, 1.5735999999998834e-05, 1.5750000000001874e-05, 1.5749999999998404e-05, 1.5681000000000028e-05, 1.5694000000000125e-05, 1.5694000000000125e-05, 1.5681000000000028e-05, 1.5709000000002638e-05, 1.577699999999807e-05, 1.5638000000001845e-05, 1.5694999999999598e-05, 1.5750000000001874e-05, 1.565300000000089e-05, 1.5652000000001415e-05, 1.5708999999999168e-05, 1.5721999999999264e-05, 1.5722000000002734e-05, 1.5721999999999264e-05, 1.5708999999999168e-05, 1.5680000000000555e-05, 1.5707999999999694e-05, 1.5735999999998834e-05, 1.5749999999998404e-05, 1.5749999999998404e-05, 1.5750000000001874e-05, 1.5694999999999598e-05, 1.5708000000003164e-05, 1.5694000000000125e-05, 1.5694999999999598e-05, 1.5694999999999598e-05, 1.5694000000000125e-05, 1.5708000000003164e-05, 1.5707999999999694e-05, 1.5707999999999694e-05, 1.5680000000000555e-05, 1.5721999999999264e-05]</msg>
<status status="PASS" starttime="20201030 18:30:41.776" endtime="20201030 18:30:41.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.771" endtime="20201030 18:30:41.778"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:41.782" endtime="20201030 18:30:41.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.780" endtime="20201030 18:30:41.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.779" endtime="20201030 18:30:41.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.431" endtime="20201030 18:30:41.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.430" endtime="20201030 18:30:41.803"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.811" endtime="20201030 18:30:41.821"></status>
</kw>
<msg timestamp="20201030 18:30:41.822" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:41.809" endtime="20201030 18:30:41.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.824" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:41.823" endtime="20201030 18:30:41.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.826" endtime="20201030 18:30:41.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.807" endtime="20201030 18:30:41.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.805" endtime="20201030 18:30:41.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.835" endtime="20201030 18:30:42.120"></status>
</kw>
<msg timestamp="20201030 18:30:42.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019444639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019462667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:41.833" endtime="20201030 18:30:42.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019444639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019462667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:42.124" endtime="20201030 18:30:42.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.133" endtime="20201030 18:30:42.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.831" endtime="20201030 18:30:42.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.829" endtime="20201030 18:30:42.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:42.139" level="INFO">${PHILIP_RES} = [{'diff': 1.8027999999999794e-05}, {'diff': 1.7263999999999474e-05}, {'diff': 1.7263999999999474e-05}, {'diff': 1.7223000000000238e-05}, {'diff': 1.7249999999999904e-05}, {'diff': 1.7263999999999474e-...</msg>
<status status="PASS" starttime="20201030 18:30:42.136" endtime="20201030 18:30:42.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:42.144" level="INFO">${RESULT} = {'diff': [1.8027999999999794e-05, 1.7263999999999474e-05, 1.7263999999999474e-05, 1.7223000000000238e-05, 1.7249999999999904e-05, 1.7263999999999474e-05, 1.7263999999999474e-05, 1.7249999999999904e-05...</msg>
<status status="PASS" starttime="20201030 18:30:42.140" endtime="20201030 18:30:42.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.148" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:42.147" endtime="20201030 18:30:42.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.150" level="INFO">VALUE: [1.8027999999999794e-05, 1.7263999999999474e-05, 1.7263999999999474e-05, 1.7223000000000238e-05, 1.7249999999999904e-05, 1.7263999999999474e-05, 1.7263999999999474e-05, 1.7249999999999904e-05, 1.7249999999999904e-05, 1.727699999999957e-05, 1.7249999999999904e-05, 1.7319999999997754e-05, 1.7305999999998184e-05, 1.7348000000000363e-05, 1.7263999999999474e-05, 1.7179999999998585e-05, 1.7193999999998155e-05, 1.7263999999999474e-05, 1.7277999999999044e-05, 1.7235999999996865e-05, 1.7249999999999904e-05, 1.7306000000001653e-05, 1.7249999999999904e-05, 1.7249999999999904e-05, 1.7222000000000764e-05, 1.7249999999999904e-05, 1.7249999999999904e-05, 1.7249999999999904e-05, 1.7236000000000334e-05, 1.730499999999871e-05, 1.7263999999999474e-05, 1.7249999999999904e-05, 1.7249999999999904e-05, 1.7222000000000764e-05, 1.7263999999999474e-05, 1.7263999999999474e-05, 1.731900000000175e-05, 1.730499999999871e-05, 1.727699999999957e-05, 1.7277999999999044e-05, 1.7263999999999474e-05, 1.729099999999914e-05, 1.7249999999999904e-05, 1.7263999999999474e-05, 1.7236999999999808e-05, 1.7236999999999808e-05, 1.7249999999999904e-05, 1.7263e-05, 1.7263999999999474e-05, 1.7291999999998614e-05]</msg>
<status status="PASS" starttime="20201030 18:30:42.149" endtime="20201030 18:30:42.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.144" endtime="20201030 18:30:42.152"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:42.156" endtime="20201030 18:30:42.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.154" endtime="20201030 18:30:42.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.153" endtime="20201030 18:30:42.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.804" endtime="20201030 18:30:42.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.803" endtime="20201030 18:30:42.176"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.185" endtime="20201030 18:30:42.195"></status>
</kw>
<msg timestamp="20201030 18:30:42.195" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:42.184" endtime="20201030 18:30:42.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.197" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:42.196" endtime="20201030 18:30:42.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.198" endtime="20201030 18:30:42.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.181" endtime="20201030 18:30:42.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.179" endtime="20201030 18:30:42.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.207" endtime="20201030 18:30:42.493"></status>
</kw>
<msg timestamp="20201030 18:30:42.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019162139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019181764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:42.206" endtime="20201030 18:30:42.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019162139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019181764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:42.497" endtime="20201030 18:30:42.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.505" endtime="20201030 18:30:42.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.203" endtime="20201030 18:30:42.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.202" endtime="20201030 18:30:42.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:42.512" level="INFO">${PHILIP_RES} = [{'diff': 1.962499999999881e-05}, {'diff': 1.8847999999998394e-05}, {'diff': 1.883299999999935e-05}, {'diff': 1.881899999999978e-05}, {'diff': 1.8848000000001863e-05}, {'diff': 1.884699999999892e-05},...</msg>
<status status="PASS" starttime="20201030 18:30:42.509" endtime="20201030 18:30:42.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:42.517" level="INFO">${RESULT} = {'diff': [1.962499999999881e-05, 1.8847999999998394e-05, 1.883299999999935e-05, 1.881899999999978e-05, 1.8848000000001863e-05, 1.884699999999892e-05, 1.884699999999892e-05, 1.883299999999935e-05, 1.88...</msg>
<status status="PASS" starttime="20201030 18:30:42.513" endtime="20201030 18:30:42.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.521" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:42.520" endtime="20201030 18:30:42.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.524" level="INFO">VALUE: [1.962499999999881e-05, 1.8847999999998394e-05, 1.883299999999935e-05, 1.881899999999978e-05, 1.8848000000001863e-05, 1.884699999999892e-05, 1.884699999999892e-05, 1.883299999999935e-05, 1.883300000000282e-05, 1.8833999999998824e-05, 1.884699999999892e-05, 1.883299999999935e-05, 1.8834000000002293e-05, 1.886100000000196e-05, 1.8819999999999254e-05, 1.883299999999935e-05, 1.883300000000282e-05, 1.8833999999998824e-05, 1.883299999999935e-05, 1.881899999999978e-05, 1.8848000000001863e-05, 1.884699999999892e-05, 1.884699999999892e-05, 1.886099999999849e-05, 1.881899999999978e-05, 1.8834000000002293e-05, 1.884699999999892e-05, 1.883299999999935e-05, 1.884699999999892e-05, 1.884700000000239e-05, 1.886099999999849e-05, 1.881899999999978e-05, 1.888899999999763e-05, 1.8862000000001433e-05, 1.883299999999935e-05, 1.876299999999803e-05, 1.887499999999806e-05, 1.884700000000239e-05, 1.8848000000001863e-05, 1.881899999999978e-05, 1.886099999999849e-05, 1.8834000000002293e-05, 1.884700000000239e-05, 1.884699999999892e-05, 1.884699999999892e-05, 1.884700000000239e-05, 1.8834000000002293e-05, 1.881899999999978e-05, 1.884699999999892e-05, 1.8848000000001863e-05]</msg>
<status status="PASS" starttime="20201030 18:30:42.522" endtime="20201030 18:30:42.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.518" endtime="20201030 18:30:42.525"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:42.528" endtime="20201030 18:30:42.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.527" endtime="20201030 18:30:42.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.525" endtime="20201030 18:30:42.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.177" endtime="20201030 18:30:42.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.177" endtime="20201030 18:30:42.549"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.558" endtime="20201030 18:30:42.567"></status>
</kw>
<msg timestamp="20201030 18:30:42.568" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:42.556" endtime="20201030 18:30:42.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.570" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:42.569" endtime="20201030 18:30:42.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.571" endtime="20201030 18:30:42.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.553" endtime="20201030 18:30:42.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.552" endtime="20201030 18:30:42.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.581" endtime="20201030 18:30:42.867"></status>
</kw>
<msg timestamp="20201030 18:30:42.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018935181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018956417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:42.579" endtime="20201030 18:30:42.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018935181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018956417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:42.871" endtime="20201030 18:30:42.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.880" endtime="20201030 18:30:42.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.576" endtime="20201030 18:30:42.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.575" endtime="20201030 18:30:42.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:42.886" level="INFO">${PHILIP_RES} = [{'diff': 2.1236000000000865e-05}, {'diff': 2.045900000000045e-05}, {'diff': 2.0429999999998366e-05}, {'diff': 2.045900000000045e-05}, {'diff': 2.0444000000001405e-05}, {'diff': 2.0443999999997936e-05...</msg>
<status status="PASS" starttime="20201030 18:30:42.883" endtime="20201030 18:30:42.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:42.890" level="INFO">${RESULT} = {'diff': [2.1236000000000865e-05, 2.045900000000045e-05, 2.0429999999998366e-05, 2.045900000000045e-05, 2.0444000000001405e-05, 2.0443999999997936e-05, 2.044500000000088e-05, 2.0458000000000975e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:30:42.887" endtime="20201030 18:30:42.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.895" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:42.894" endtime="20201030 18:30:42.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.897" level="INFO">VALUE: [2.1236000000000865e-05, 2.045900000000045e-05, 2.0429999999998366e-05, 2.045900000000045e-05, 2.0444000000001405e-05, 2.0443999999997936e-05, 2.044500000000088e-05, 2.0458000000000975e-05, 2.0457999999997506e-05, 2.043100000000131e-05, 2.0458000000000975e-05, 2.0457999999997506e-05, 2.044500000000088e-05, 2.0444000000001405e-05, 2.045900000000045e-05, 2.0472000000000545e-05, 2.0430000000001836e-05, 2.0472000000000545e-05, 2.0458000000000975e-05, 2.043100000000131e-05, 2.041699999999827e-05, 2.0444000000001405e-05, 2.0458000000000975e-05, 2.044500000000088e-05, 2.0486000000000115e-05, 2.0457999999997506e-05, 2.0443999999997936e-05, 2.0443999999997936e-05, 2.044500000000088e-05, 2.0485999999996646e-05, 2.0458000000000975e-05, 2.043100000000131e-05, 2.0444000000001405e-05, 2.044499999999741e-05, 2.0458000000000975e-05, 2.0499999999999685e-05, 2.045900000000045e-05, 2.0444000000001405e-05, 2.0458000000000975e-05, 2.043099999999784e-05, 2.0444000000001405e-05, 2.0444000000001405e-05, 2.038899999999913e-05, 2.0458000000000975e-05, 2.0458000000000975e-05, 2.044499999999741e-05, 2.0458000000000975e-05, 2.047300000000002e-05, 2.0443999999997936e-05, 2.0444000000001405e-05]</msg>
<status status="PASS" starttime="20201030 18:30:42.896" endtime="20201030 18:30:42.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.891" endtime="20201030 18:30:42.898"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:42.902" endtime="20201030 18:30:42.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.900" endtime="20201030 18:30:42.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.899" endtime="20201030 18:30:42.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.550" endtime="20201030 18:30:42.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.550" endtime="20201030 18:30:42.923"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.932" endtime="20201030 18:30:42.942"></status>
</kw>
<msg timestamp="20201030 18:30:42.942" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:42.930" endtime="20201030 18:30:42.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.945" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:42.943" endtime="20201030 18:30:42.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.946" endtime="20201030 18:30:42.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.927" endtime="20201030 18:30:42.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.925" endtime="20201030 18:30:42.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.955" endtime="20201030 18:30:43.241"></status>
</kw>
<msg timestamp="20201030 18:30:43.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019626, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019648861, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:42.953" endtime="20201030 18:30:43.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019626, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019648861, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:43.245" endtime="20201030 18:30:43.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.253" endtime="20201030 18:30:43.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.951" endtime="20201030 18:30:43.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.949" endtime="20201030 18:30:43.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:43.259" level="INFO">${PHILIP_RES} = [{'diff': 2.286099999999902e-05}, {'diff': 2.20969999999987e-05}, {'diff': 2.2083999999998605e-05}, {'diff': 2.20969999999987e-05}, {'diff': 2.211099999999827e-05}, {'diff': 2.2069999999999035e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:43.256" endtime="20201030 18:30:43.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:43.264" level="INFO">${RESULT} = {'diff': [2.286099999999902e-05, 2.20969999999987e-05, 2.2083999999998605e-05, 2.20969999999987e-05, 2.211099999999827e-05, 2.2069999999999035e-05, 2.208299999999913e-05, 2.208299999999913e-05, 2.2082...</msg>
<status status="PASS" starttime="20201030 18:30:43.260" endtime="20201030 18:30:43.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.268" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:43.267" endtime="20201030 18:30:43.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.270" level="INFO">VALUE: [2.286099999999902e-05, 2.20969999999987e-05, 2.2083999999998605e-05, 2.20969999999987e-05, 2.211099999999827e-05, 2.2069999999999035e-05, 2.208299999999913e-05, 2.208299999999913e-05, 2.208299999999913e-05, 2.2028000000000325e-05, 2.20969999999987e-05, 2.20969999999987e-05, 2.208299999999913e-05, 2.2112000000001214e-05, 2.20969999999987e-05, 2.216700000000002e-05, 2.211100000000174e-05, 2.2098000000001644e-05, 2.211100000000174e-05, 2.2027999999996856e-05, 2.209700000000217e-05, 2.2098000000001644e-05, 2.20830000000026e-05, 2.209700000000217e-05, 2.2028000000000325e-05, 2.2084000000002074e-05, 2.209700000000217e-05, 2.209700000000217e-05, 2.208299999999913e-05, 2.2084000000002074e-05, 2.211099999999827e-05, 2.2028000000000325e-05, 2.2069999999999035e-05, 2.2097999999998175e-05, 2.211099999999827e-05, 2.208299999999913e-05, 2.208299999999913e-05, 2.2097999999998175e-05, 2.208299999999913e-05, 2.206899999999956e-05, 2.2083999999998605e-05, 2.20969999999987e-05, 2.2014000000000755e-05, 2.20969999999987e-05, 2.2083999999998605e-05, 2.209700000000217e-05, 2.20969999999987e-05, 2.208299999999913e-05, 2.211100000000174e-05, 2.2041999999999895e-05]</msg>
<status status="PASS" starttime="20201030 18:30:43.269" endtime="20201030 18:30:43.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.264" endtime="20201030 18:30:43.273"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:43.276" endtime="20201030 18:30:43.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.275" endtime="20201030 18:30:43.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.274" endtime="20201030 18:30:43.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.924" endtime="20201030 18:30:43.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.923" endtime="20201030 18:30:43.297"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.305" endtime="20201030 18:30:43.316"></status>
</kw>
<msg timestamp="20201030 18:30:43.316" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:43.304" endtime="20201030 18:30:43.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.319" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:43.317" endtime="20201030 18:30:43.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.320" endtime="20201030 18:30:43.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.301" endtime="20201030 18:30:43.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.299" endtime="20201030 18:30:43.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.329" endtime="20201030 18:30:43.614"></status>
</kw>
<msg timestamp="20201030 18:30:43.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018748458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018772986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:43.327" endtime="20201030 18:30:43.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018748458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018772986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:43.618" endtime="20201030 18:30:43.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.626" endtime="20201030 18:30:43.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.325" endtime="20201030 18:30:43.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.323" endtime="20201030 18:30:43.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:43.633" level="INFO">${PHILIP_RES} = [{'diff': 2.4527999999999356e-05}, {'diff': 2.3764000000002505e-05}, {'diff': 2.3749999999999466e-05}, {'diff': 2.3764000000002505e-05}, {'diff': 2.3778000000002075e-05}, {'diff': 2.3750000000002935e-...</msg>
<status status="PASS" starttime="20201030 18:30:43.630" endtime="20201030 18:30:43.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:43.638" level="INFO">${RESULT} = {'diff': [2.4527999999999356e-05, 2.3764000000002505e-05, 2.3749999999999466e-05, 2.3764000000002505e-05, 2.3778000000002075e-05, 2.3750000000002935e-05, 2.3778000000002075e-05, 2.3764000000002505e-05...</msg>
<status status="PASS" starttime="20201030 18:30:43.634" endtime="20201030 18:30:43.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.642" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:43.641" endtime="20201030 18:30:43.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.645" level="INFO">VALUE: [2.4527999999999356e-05, 2.3764000000002505e-05, 2.3749999999999466e-05, 2.3764000000002505e-05, 2.3778000000002075e-05, 2.3750000000002935e-05, 2.3778000000002075e-05, 2.3764000000002505e-05, 2.3763000000003032e-05, 2.3778000000002075e-05, 2.3763999999999036e-05, 2.3764000000002505e-05, 2.3749999999999466e-05, 2.3735999999999896e-05, 2.3763999999999036e-05, 2.3763999999999036e-05, 2.3805999999997746e-05, 2.3762999999999562e-05, 2.3791999999998176e-05, 2.3749999999999466e-05, 2.3763999999999036e-05, 2.3763999999999036e-05, 2.3763999999999036e-05, 2.3777999999998606e-05, 2.3749999999999466e-05, 2.3763999999999036e-05, 2.368100000000109e-05, 2.3680000000001616e-05, 2.3749999999999466e-05, 2.3749999999999466e-05, 2.3749999999999466e-05, 2.3763999999999036e-05, 2.3749999999999466e-05, 2.3763999999999036e-05, 2.3735999999999896e-05, 2.379100000000217e-05, 2.3749999999999466e-05, 2.3749999999999466e-05, 2.3749999999999466e-05, 2.3749999999999466e-05, 2.3749999999999466e-05, 2.3722000000000326e-05, 2.3749999999999466e-05, 2.3735999999999896e-05, 2.3750000000002935e-05, 2.3749999999999466e-05, 2.3750000000002935e-05, 2.3749999999999466e-05, 2.370900000000023e-05, 2.3764000000002505e-05]</msg>
<status status="PASS" starttime="20201030 18:30:43.643" endtime="20201030 18:30:43.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.639" endtime="20201030 18:30:43.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:43.650" endtime="20201030 18:30:43.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.648" endtime="20201030 18:30:43.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.647" endtime="20201030 18:30:43.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.298" endtime="20201030 18:30:43.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.297" endtime="20201030 18:30:43.670"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.678" endtime="20201030 18:30:43.689"></status>
</kw>
<msg timestamp="20201030 18:30:43.689" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:43.677" endtime="20201030 18:30:43.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.691" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:43.690" endtime="20201030 18:30:43.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.692" endtime="20201030 18:30:43.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.674" endtime="20201030 18:30:43.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.672" endtime="20201030 18:30:43.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.701" endtime="20201030 18:30:43.990"></status>
</kw>
<msg timestamp="20201030 18:30:43.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018702986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018729222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:43.700" endtime="20201030 18:30:43.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018702986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018729222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:43.994" endtime="20201030 18:30:44.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.003" endtime="20201030 18:30:44.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.697" endtime="20201030 18:30:44.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.696" endtime="20201030 18:30:44.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:44.009" level="INFO">${PHILIP_RES} = [{'diff': 2.6235999999998927e-05}, {'diff': 2.5457999999999037e-05}, {'diff': 2.544499999999894e-05}, {'diff': 2.545900000000198e-05}, {'diff': 2.544499999999894e-05}, {'diff': 2.545899999999851e-05},...</msg>
<status status="PASS" starttime="20201030 18:30:44.006" endtime="20201030 18:30:44.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:44.013" level="INFO">${RESULT} = {'diff': [2.6235999999998927e-05, 2.5457999999999037e-05, 2.544499999999894e-05, 2.545900000000198e-05, 2.544499999999894e-05, 2.545899999999851e-05, 2.543099999999937e-05, 2.543099999999937e-05, 2.54...</msg>
<status status="PASS" starttime="20201030 18:30:44.010" endtime="20201030 18:30:44.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.018" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:44.017" endtime="20201030 18:30:44.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.020" level="INFO">VALUE: [2.6235999999998927e-05, 2.5457999999999037e-05, 2.544499999999894e-05, 2.545900000000198e-05, 2.544499999999894e-05, 2.545899999999851e-05, 2.543099999999937e-05, 2.543099999999937e-05, 2.5457999999999037e-05, 2.5486000000001646e-05, 2.5444000000002936e-05, 2.5457999999999037e-05, 2.5429999999999897e-05, 2.5458000000002506e-05, 2.5471999999998607e-05, 2.544499999999894e-05, 2.5472000000002076e-05, 2.545900000000198e-05, 2.543099999999937e-05, 2.544499999999894e-05, 2.5472000000002076e-05, 2.547299999999808e-05, 2.5443999999999467e-05, 2.5472000000002076e-05, 2.5457999999999037e-05, 2.5443999999999467e-05, 2.5429999999999897e-05, 2.5443999999999467e-05, 2.5443999999999467e-05, 2.544499999999894e-05, 2.544500000000241e-05, 2.544499999999894e-05, 2.543099999999937e-05, 2.545900000000198e-05, 2.5443999999999467e-05, 2.5457999999999037e-05, 2.5458000000002506e-05, 2.5429999999999897e-05, 2.5457999999999037e-05, 2.5500000000001216e-05, 2.5444000000002936e-05, 2.5485999999998177e-05, 2.544499999999894e-05, 2.5458000000002506e-05, 2.545899999999851e-05, 2.5485999999998177e-05, 2.538900000000066e-05, 2.5457999999999037e-05, 2.5443999999999467e-05, 2.5458000000002506e-05]</msg>
<status status="PASS" starttime="20201030 18:30:44.019" endtime="20201030 18:30:44.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.014" endtime="20201030 18:30:44.021"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:44.025" endtime="20201030 18:30:44.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.023" endtime="20201030 18:30:44.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.022" endtime="20201030 18:30:44.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.671" endtime="20201030 18:30:44.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.671" endtime="20201030 18:30:44.046"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.054" endtime="20201030 18:30:44.065"></status>
</kw>
<msg timestamp="20201030 18:30:44.066" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:44.052" endtime="20201030 18:30:44.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.068" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:44.067" endtime="20201030 18:30:44.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.069" endtime="20201030 18:30:44.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.050" endtime="20201030 18:30:44.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.048" endtime="20201030 18:30:44.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.079" endtime="20201030 18:30:44.366"></status>
</kw>
<msg timestamp="20201030 18:30:44.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019428347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019456278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:44.077" endtime="20201030 18:30:44.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019428347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019456278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:44.370" endtime="20201030 18:30:44.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.378" endtime="20201030 18:30:44.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.074" endtime="20201030 18:30:44.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.072" endtime="20201030 18:30:44.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:44.385" level="INFO">${PHILIP_RES} = [{'diff': 2.793100000000187e-05}, {'diff': 2.7179999999998178e-05}, {'diff': 2.7250000000002966e-05}, {'diff': 2.7166000000002077e-05}, {'diff': 2.715300000000198e-05}, {'diff': 2.7110999999999802e-05...</msg>
<status status="PASS" starttime="20201030 18:30:44.382" endtime="20201030 18:30:44.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:44.389" level="INFO">${RESULT} = {'diff': [2.793100000000187e-05, 2.7179999999998178e-05, 2.7250000000002966e-05, 2.7166000000002077e-05, 2.715300000000198e-05, 2.7110999999999802e-05, 2.7222000000000357e-05, 2.712500000000284e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:30:44.386" endtime="20201030 18:30:44.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.393" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:44.392" endtime="20201030 18:30:44.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.396" level="INFO">VALUE: [2.793100000000187e-05, 2.7179999999998178e-05, 2.7250000000002966e-05, 2.7166000000002077e-05, 2.715300000000198e-05, 2.7110999999999802e-05, 2.7222000000000357e-05, 2.712500000000284e-05, 2.7208000000000787e-05, 2.716699999999808e-05, 2.7097000000000232e-05, 2.716700000000155e-05, 2.716699999999808e-05, 2.7138999999998942e-05, 2.716700000000155e-05, 2.7165999999998608e-05, 2.716699999999808e-05, 2.7166000000002077e-05, 2.713900000000241e-05, 2.7151999999999038e-05, 2.718100000000112e-05, 2.7166000000002077e-05, 2.716699999999808e-05, 2.718099999999765e-05, 2.7166000000002077e-05, 2.716700000000155e-05, 2.7151999999999038e-05, 2.7222000000000357e-05, 2.7180000000001647e-05, 2.7208000000000787e-05, 2.7138999999998942e-05, 2.7194000000001217e-05, 2.718100000000112e-05, 2.7193999999997748e-05, 2.719500000000069e-05, 2.715300000000198e-05, 2.719500000000069e-05, 2.715299999999851e-05, 2.718100000000112e-05, 2.7194000000001217e-05, 2.7208000000000787e-05, 2.715299999999851e-05, 2.7166000000002077e-05, 2.7110999999999802e-05, 2.722299999999983e-05, 2.7138999999998942e-05, 2.7194000000001217e-05, 2.715300000000198e-05, 2.716699999999808e-05, 2.715299999999851e-05]</msg>
<status status="PASS" starttime="20201030 18:30:44.394" endtime="20201030 18:30:44.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.390" endtime="20201030 18:30:44.422"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:44.426" endtime="20201030 18:30:44.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.425" endtime="20201030 18:30:44.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.423" endtime="20201030 18:30:44.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.047" endtime="20201030 18:30:44.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.046" endtime="20201030 18:30:44.447"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.455" endtime="20201030 18:30:44.466"></status>
</kw>
<msg timestamp="20201030 18:30:44.466" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:44.454" endtime="20201030 18:30:44.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.469" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:44.467" endtime="20201030 18:30:44.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.470" endtime="20201030 18:30:44.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.451" endtime="20201030 18:30:44.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.449" endtime="20201030 18:30:44.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.479" endtime="20201030 18:30:44.764"></status>
</kw>
<msg timestamp="20201030 18:30:44.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018685083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018714764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:44.477" endtime="20201030 18:30:44.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018685083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018714764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:44.768" endtime="20201030 18:30:44.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.777" endtime="20201030 18:30:44.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.475" endtime="20201030 18:30:44.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.473" endtime="20201030 18:30:44.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:44.783" level="INFO">${PHILIP_RES} = [{'diff': 2.9680999999996682e-05}, {'diff': 2.8971999999998638e-05}, {'diff': 2.8916000000000358e-05}, {'diff': 2.8903000000000262e-05}, {'diff': 2.89170000000033e-05}, {'diff': 2.8929999999999928e-05...</msg>
<status status="PASS" starttime="20201030 18:30:44.780" endtime="20201030 18:30:44.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:44.788" level="INFO">${RESULT} = {'diff': [2.9680999999996682e-05, 2.8971999999998638e-05, 2.8916000000000358e-05, 2.8903000000000262e-05, 2.89170000000033e-05, 2.8929999999999928e-05, 2.8916999999999832e-05, 2.8916000000000358e-05, ...</msg>
<status status="PASS" starttime="20201030 18:30:44.784" endtime="20201030 18:30:44.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.793" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:44.792" endtime="20201030 18:30:44.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.795" level="INFO">VALUE: [2.9680999999996682e-05, 2.8971999999998638e-05, 2.8916000000000358e-05, 2.8903000000000262e-05, 2.89170000000033e-05, 2.8929999999999928e-05, 2.8916999999999832e-05, 2.8916000000000358e-05, 2.8929999999999928e-05, 2.9014000000000817e-05, 2.890199999999732e-05, 2.8944000000002967e-05, 2.89309999999994e-05, 2.8986000000001677e-05, 2.8903000000000262e-05, 2.8916999999999832e-05, 2.8957999999999068e-05, 2.8916999999999832e-05, 2.8903000000000262e-05, 2.8929999999999928e-05, 2.8903000000000262e-05, 2.8903000000000262e-05, 2.8875000000001122e-05, 2.8903000000000262e-05, 2.89309999999994e-05, 2.8860999999998083e-05, 2.89309999999994e-05, 2.8903000000000262e-05, 2.8943999999999498e-05, 2.893100000000287e-05, 2.8985999999998208e-05, 2.8943999999999498e-05, 2.89309999999994e-05, 2.8875000000001122e-05, 2.8916000000000358e-05, 2.8916999999999832e-05, 2.8957999999999068e-05, 2.8916000000000358e-05, 2.8903000000000262e-05, 2.8986000000001677e-05, 2.8902000000000788e-05, 2.8916999999999832e-05, 2.8916999999999832e-05, 2.8916000000000358e-05, 2.894499999999897e-05, 2.8943999999999498e-05, 2.8929999999999928e-05, 2.89309999999994e-05, 2.8943999999999498e-05, 2.8943999999999498e-05]</msg>
<status status="PASS" starttime="20201030 18:30:44.794" endtime="20201030 18:30:44.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.789" endtime="20201030 18:30:44.796"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:44.800" endtime="20201030 18:30:44.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.798" endtime="20201030 18:30:44.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.797" endtime="20201030 18:30:44.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.448" endtime="20201030 18:30:44.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.447" endtime="20201030 18:30:44.821"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.829" endtime="20201030 18:30:44.840"></status>
</kw>
<msg timestamp="20201030 18:30:44.840" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:44.827" endtime="20201030 18:30:44.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.842" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:44.841" endtime="20201030 18:30:44.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.843" endtime="20201030 18:30:44.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.825" endtime="20201030 18:30:44.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.823" endtime="20201030 18:30:44.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.852" endtime="20201030 18:30:45.139"></status>
</kw>
<msg timestamp="20201030 18:30:45.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018607417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018638917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:44.851" endtime="20201030 18:30:45.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018607417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018638917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:45.143" endtime="20201030 18:30:45.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.151" endtime="20201030 18:30:45.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.848" endtime="20201030 18:30:45.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.847" endtime="20201030 18:30:45.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:45.157" level="INFO">${PHILIP_RES} = [{'diff': 3.150000000000028e-05}, {'diff': 3.070799999999735e-05}, {'diff': 3.068100000000115e-05}, {'diff': 3.070900000000029e-05}, {'diff': 3.070800000000082e-05}, {'diff': 3.069500000000072e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:45.154" endtime="20201030 18:30:45.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:45.161" level="INFO">${RESULT} = {'diff': [3.150000000000028e-05, 3.070799999999735e-05, 3.068100000000115e-05, 3.070900000000029e-05, 3.070800000000082e-05, 3.069500000000072e-05, 3.070799999999735e-05, 3.072199999999692e-05, 3.0693...</msg>
<status status="PASS" starttime="20201030 18:30:45.158" endtime="20201030 18:30:45.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.166" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:45.165" endtime="20201030 18:30:45.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.168" level="INFO">VALUE: [3.150000000000028e-05, 3.070799999999735e-05, 3.068100000000115e-05, 3.070900000000029e-05, 3.070800000000082e-05, 3.069500000000072e-05, 3.070799999999735e-05, 3.072199999999692e-05, 3.069399999999778e-05, 3.069399999999778e-05, 3.063900000000244e-05, 3.070800000000082e-05, 3.070900000000029e-05, 3.068000000000168e-05, 3.068100000000115e-05, 3.070799999999735e-05, 3.070800000000082e-05, 3.069500000000072e-05, 3.069400000000125e-05, 3.070800000000082e-05, 3.070800000000082e-05, 3.070800000000082e-05, 3.069499999999725e-05, 3.070799999999735e-05, 3.066700000000158e-05, 3.069400000000125e-05, 3.072200000000039e-05, 3.069500000000072e-05, 3.069400000000125e-05, 3.069500000000072e-05, 3.072200000000039e-05, 3.072200000000039e-05, 3.068100000000115e-05, 3.069400000000125e-05, 3.070900000000029e-05, 3.070800000000082e-05, 3.069500000000072e-05, 3.070799999999735e-05, 3.066699999999811e-05, 3.069500000000072e-05, 3.074999999999953e-05, 3.065300000000201e-05, 3.070800000000082e-05, 3.073599999999996e-05, 3.069500000000072e-05, 3.069399999999778e-05, 3.070900000000029e-05, 3.074999999999953e-05, 3.06249999999994e-05, 3.069400000000125e-05]</msg>
<status status="PASS" starttime="20201030 18:30:45.167" endtime="20201030 18:30:45.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.162" endtime="20201030 18:30:45.170"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:45.173" endtime="20201030 18:30:45.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.172" endtime="20201030 18:30:45.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.171" endtime="20201030 18:30:45.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.821" endtime="20201030 18:30:45.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.821" endtime="20201030 18:30:45.194"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.202" endtime="20201030 18:30:45.215"></status>
</kw>
<msg timestamp="20201030 18:30:45.215" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:45.201" endtime="20201030 18:30:45.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.218" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:45.216" endtime="20201030 18:30:45.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.219" endtime="20201030 18:30:45.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.198" endtime="20201030 18:30:45.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.196" endtime="20201030 18:30:45.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.228" endtime="20201030 18:30:45.514"></status>
</kw>
<msg timestamp="20201030 18:30:45.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019315972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019349236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:45.226" endtime="20201030 18:30:45.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019315972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019349236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:45.518" endtime="20201030 18:30:45.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.526" endtime="20201030 18:30:45.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.224" endtime="20201030 18:30:45.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.222" endtime="20201030 18:30:45.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:45.533" level="INFO">${PHILIP_RES} = [{'diff': 3.326399999999813e-05}, {'diff': 3.249999999999781e-05}, {'diff': 3.250000000000128e-05}, {'diff': 3.250000000000128e-05}, {'diff': 3.251400000000085e-05}, {'diff': 3.251399999999738e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:45.529" endtime="20201030 18:30:45.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:45.537" level="INFO">${RESULT} = {'diff': [3.326399999999813e-05, 3.249999999999781e-05, 3.250000000000128e-05, 3.250000000000128e-05, 3.251400000000085e-05, 3.251399999999738e-05, 3.2541000000000514e-05, 3.251400000000085e-05, 3.245...</msg>
<status status="PASS" starttime="20201030 18:30:45.534" endtime="20201030 18:30:45.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.541" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:45.540" endtime="20201030 18:30:45.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.544" level="INFO">VALUE: [3.326399999999813e-05, 3.249999999999781e-05, 3.250000000000128e-05, 3.250000000000128e-05, 3.251400000000085e-05, 3.251399999999738e-05, 3.2541000000000514e-05, 3.251400000000085e-05, 3.24579999999991e-05, 3.256999999999913e-05, 3.250000000000128e-05, 3.245899999999857e-05, 3.248599999999824e-05, 3.249999999999781e-05, 3.251400000000085e-05, 3.254199999999999e-05, 3.251399999999738e-05, 3.251400000000085e-05, 3.250000000000128e-05, 3.251399999999738e-05, 3.2444999999999e-05, 3.250000000000128e-05, 3.252800000000042e-05, 3.254199999999999e-05, 3.249999999999781e-05, 3.250000000000128e-05, 3.250000000000128e-05, 3.251399999999738e-05, 3.250000000000128e-05, 3.252800000000042e-05, 3.248599999999824e-05, 3.249999999999781e-05, 3.247200000000214e-05, 3.254199999999999e-05, 3.249999999999781e-05, 3.250000000000128e-05, 3.251400000000085e-05, 3.252800000000042e-05, 3.251400000000085e-05, 3.250000000000128e-05, 3.251400000000085e-05, 3.252800000000042e-05, 3.249999999999781e-05, 3.251400000000085e-05, 3.251400000000085e-05, 3.2527000000000944e-05, 3.251399999999738e-05, 3.251400000000085e-05, 3.2527000000000944e-05, 3.2541000000000514e-05]</msg>
<status status="PASS" starttime="20201030 18:30:45.542" endtime="20201030 18:30:45.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.538" endtime="20201030 18:30:45.546"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:45.549" endtime="20201030 18:30:45.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.548" endtime="20201030 18:30:45.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.547" endtime="20201030 18:30:45.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.195" endtime="20201030 18:30:45.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.194" endtime="20201030 18:30:45.570"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.578" endtime="20201030 18:30:45.590"></status>
</kw>
<msg timestamp="20201030 18:30:45.591" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:45.577" endtime="20201030 18:30:45.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.593" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:45.592" endtime="20201030 18:30:45.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.594" endtime="20201030 18:30:45.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.574" endtime="20201030 18:30:45.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.572" endtime="20201030 18:30:45.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.603" endtime="20201030 18:30:45.890"></status>
</kw>
<msg timestamp="20201030 18:30:45.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018463986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018499111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:45.602" endtime="20201030 18:30:45.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018463986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018499111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:45.894" endtime="20201030 18:30:45.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.902" endtime="20201030 18:30:45.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.599" endtime="20201030 18:30:45.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.597" endtime="20201030 18:30:45.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:45.908" level="INFO">${PHILIP_RES} = [{'diff': 3.5124999999996964e-05}, {'diff': 3.4347000000000544e-05}, {'diff': 3.436199999999959e-05}, {'diff': 3.4291000000002264e-05}, {'diff': 3.4318999999997934e-05}, {'diff': 3.433400000000045e-05...</msg>
<status status="PASS" starttime="20201030 18:30:45.905" endtime="20201030 18:30:45.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:45.913" level="INFO">${RESULT} = {'diff': [3.5124999999996964e-05, 3.4347000000000544e-05, 3.436199999999959e-05, 3.4291000000002264e-05, 3.4318999999997934e-05, 3.433400000000045e-05, 3.4347000000000544e-05, 3.4347000000000544e-05, ...</msg>
<status status="PASS" starttime="20201030 18:30:45.909" endtime="20201030 18:30:45.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.918" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:45.917" endtime="20201030 18:30:45.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.920" level="INFO">VALUE: [3.5124999999996964e-05, 3.4347000000000544e-05, 3.436199999999959e-05, 3.4291000000002264e-05, 3.4318999999997934e-05, 3.433400000000045e-05, 3.4347000000000544e-05, 3.4347000000000544e-05, 3.433400000000045e-05, 3.4319000000001404e-05, 3.4374999999999684e-05, 3.4361000000000114e-05, 3.434800000000002e-05, 3.4333000000000974e-05, 3.4347000000000544e-05, 3.433399999999698e-05, 3.4361000000000114e-05, 3.427800000000217e-05, 3.433400000000045e-05, 3.4332999999997504e-05, 3.429200000000174e-05, 3.4361000000000114e-05, 3.4319000000001404e-05, 3.4319000000001404e-05, 3.4333000000000974e-05, 3.4361000000000114e-05, 3.4361000000000114e-05, 3.42779999999987e-05, 3.433399999999698e-05, 3.4388999999999253e-05, 3.4361000000000114e-05, 3.436199999999959e-05, 3.4332999999997504e-05, 3.4347000000000544e-05, 3.433400000000045e-05, 3.4333000000000974e-05, 3.427800000000217e-05, 3.4346999999997074e-05, 3.4333000000000974e-05, 3.4332999999997504e-05, 3.4333000000000974e-05, 3.433399999999698e-05, 3.4347000000000544e-05, 3.4347000000000544e-05, 3.4374999999999684e-05, 3.4333000000000974e-05, 3.4304999999998365e-05, 3.434800000000002e-05, 3.4374999999999684e-05, 3.4347000000000544e-05]</msg>
<status status="PASS" starttime="20201030 18:30:45.919" endtime="20201030 18:30:45.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.914" endtime="20201030 18:30:45.921"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:45.925" endtime="20201030 18:30:45.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.924" endtime="20201030 18:30:45.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.922" endtime="20201030 18:30:45.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.571" endtime="20201030 18:30:45.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.570" endtime="20201030 18:30:45.946"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.954" endtime="20201030 18:30:45.966"></status>
</kw>
<msg timestamp="20201030 18:30:45.966" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:45.953" endtime="20201030 18:30:45.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.969" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:45.967" endtime="20201030 18:30:45.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.970" endtime="20201030 18:30:45.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.950" endtime="20201030 18:30:45.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.948" endtime="20201030 18:30:45.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.979" endtime="20201030 18:30:46.265"></status>
</kw>
<msg timestamp="20201030 18:30:46.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018664069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018701028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:45.977" endtime="20201030 18:30:46.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018664069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018701028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:46.269" endtime="20201030 18:30:46.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.277" endtime="20201030 18:30:46.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.975" endtime="20201030 18:30:46.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.973" endtime="20201030 18:30:46.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:46.284" level="INFO">${PHILIP_RES} = [{'diff': 3.695900000000307e-05}, {'diff': 3.6180999999999713e-05}, {'diff': 3.622300000000189e-05}, {'diff': 3.6180999999999713e-05}, {'diff': 3.619499999999928e-05}, {'diff': 3.622199999999895e-05},...</msg>
<status status="PASS" starttime="20201030 18:30:46.281" endtime="20201030 18:30:46.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:46.288" level="INFO">${RESULT} = {'diff': [3.695900000000307e-05, 3.6180999999999713e-05, 3.622300000000189e-05, 3.6180999999999713e-05, 3.619499999999928e-05, 3.622199999999895e-05, 3.620799999999938e-05, 3.622199999999895e-05, 3.61...</msg>
<status status="PASS" starttime="20201030 18:30:46.285" endtime="20201030 18:30:46.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.292" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:46.291" endtime="20201030 18:30:46.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.295" level="INFO">VALUE: [3.695900000000307e-05, 3.6180999999999713e-05, 3.622300000000189e-05, 3.6180999999999713e-05, 3.619499999999928e-05, 3.622199999999895e-05, 3.620799999999938e-05, 3.622199999999895e-05, 3.6139000000001004e-05, 3.620799999999938e-05, 3.6180999999999713e-05, 3.619399999999981e-05, 3.6167000000000143e-05, 3.625000000000156e-05, 3.619399999999981e-05, 3.619399999999981e-05, 3.620799999999938e-05, 3.623599999999852e-05, 3.619399999999981e-05, 3.618000000000024e-05, 3.619399999999981e-05, 3.619399999999981e-05, 3.619399999999981e-05, 3.620800000000285e-05, 3.619399999999981e-05, 3.617999999999677e-05, 3.617999999999677e-05, 3.629200000000027e-05, 3.622200000000242e-05, 3.620800000000285e-05, 3.62780000000007e-05, 3.622200000000242e-05, 3.620799999999938e-05, 3.618000000000024e-05, 3.619499999999928e-05, 3.623600000000199e-05, 3.619499999999928e-05, 3.620799999999938e-05, 3.620799999999938e-05, 3.618000000000024e-05, 3.619499999999928e-05, 3.619499999999928e-05, 3.619499999999928e-05, 3.620899999999885e-05, 3.622299999999842e-05, 3.6180999999999713e-05, 3.619499999999928e-05, 3.627799999999723e-05, 3.623700000000146e-05, 3.620899999999885e-05]</msg>
<status status="PASS" starttime="20201030 18:30:46.294" endtime="20201030 18:30:46.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.289" endtime="20201030 18:30:46.296"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:46.300" endtime="20201030 18:30:46.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.298" endtime="20201030 18:30:46.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.297" endtime="20201030 18:30:46.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.947" endtime="20201030 18:30:46.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.946" endtime="20201030 18:30:46.321"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.329" endtime="20201030 18:30:46.342"></status>
</kw>
<msg timestamp="20201030 18:30:46.343" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:46.327" endtime="20201030 18:30:46.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.345" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:46.344" endtime="20201030 18:30:46.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.346" endtime="20201030 18:30:46.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.325" endtime="20201030 18:30:46.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.323" endtime="20201030 18:30:46.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.355" endtime="20201030 18:30:46.641"></status>
</kw>
<msg timestamp="20201030 18:30:46.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019367792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019406667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:46.353" endtime="20201030 18:30:46.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019367792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019406667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:46.645" endtime="20201030 18:30:46.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.653" endtime="20201030 18:30:46.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.351" endtime="20201030 18:30:46.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.349" endtime="20201030 18:30:46.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:46.660" level="INFO">${PHILIP_RES} = [{'diff': 3.8874999999997245e-05}, {'diff': 3.8124999999999964e-05}, {'diff': 3.808400000000073e-05}, {'diff': 3.805599999999812e-05}, {'diff': 3.808400000000073e-05}, {'diff': 3.8111000000000395e-05}...</msg>
<status status="PASS" starttime="20201030 18:30:46.657" endtime="20201030 18:30:46.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:46.664" level="INFO">${RESULT} = {'diff': [3.8874999999997245e-05, 3.8124999999999964e-05, 3.808400000000073e-05, 3.805599999999812e-05, 3.808400000000073e-05, 3.8111000000000395e-05, 3.8139000000003004e-05, 3.8097000000000825e-05, 3...</msg>
<status status="PASS" starttime="20201030 18:30:46.661" endtime="20201030 18:30:46.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.668" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:46.667" endtime="20201030 18:30:46.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.671" level="INFO">VALUE: [3.8874999999997245e-05, 3.8124999999999964e-05, 3.808400000000073e-05, 3.805599999999812e-05, 3.808400000000073e-05, 3.8111000000000395e-05, 3.8139000000003004e-05, 3.8097000000000825e-05, 3.8082999999997785e-05, 3.8097000000000825e-05, 3.8069000000001685e-05, 3.8111000000000395e-05, 3.8083000000001255e-05, 3.8097000000000825e-05, 3.8097000000000825e-05, 3.8097000000000825e-05, 3.808400000000073e-05, 3.80980000000003e-05, 3.8096999999997355e-05, 3.808400000000073e-05, 3.807000000000116e-05, 3.808399999999726e-05, 3.807000000000116e-05, 3.8097000000000825e-05, 3.8096999999997355e-05, 3.8138999999999534e-05, 3.8083000000001255e-05, 3.8124999999999964e-05, 3.8097000000000825e-05, 3.8083000000001255e-05, 3.8138999999999534e-05, 3.8111000000000395e-05, 3.8097000000000825e-05, 3.8111000000000395e-05, 3.8097000000000825e-05, 3.80980000000003e-05, 3.8152999999999104e-05, 3.808400000000073e-05, 3.8097000000000825e-05, 3.8097000000000825e-05, 3.808400000000073e-05, 3.8124999999999964e-05, 3.802799999999898e-05, 3.8055000000002115e-05, 3.8083000000001255e-05, 3.8096999999997355e-05, 3.8124999999999964e-05, 3.8083000000001255e-05, 3.8082999999997785e-05, 3.8069000000001685e-05]</msg>
<status status="PASS" starttime="20201030 18:30:46.669" endtime="20201030 18:30:46.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.665" endtime="20201030 18:30:46.673"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:46.676" endtime="20201030 18:30:46.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.675" endtime="20201030 18:30:46.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.674" endtime="20201030 18:30:46.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.321" endtime="20201030 18:30:46.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.321" endtime="20201030 18:30:46.697"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.705" endtime="20201030 18:30:46.718"></status>
</kw>
<msg timestamp="20201030 18:30:46.719" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:46.704" endtime="20201030 18:30:46.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.721" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:46.720" endtime="20201030 18:30:46.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.722" endtime="20201030 18:30:46.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.701" endtime="20201030 18:30:46.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.699" endtime="20201030 18:30:46.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.731" endtime="20201030 18:30:47.016"></status>
</kw>
<msg timestamp="20201030 18:30:47.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018622569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018663361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:46.730" endtime="20201030 18:30:47.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018622569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018663361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:47.021" endtime="20201030 18:30:47.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.029" endtime="20201030 18:30:47.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.727" endtime="20201030 18:30:47.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.726" endtime="20201030 18:30:47.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:47.035" level="INFO">${PHILIP_RES} = [{'diff': 4.07920000000013e-05}, {'diff': 4.002800000000098e-05}, {'diff': 3.99859999999988e-05}, {'diff': 3.998600000000227e-05}, {'diff': 3.994400000000009e-05}, {'diff': 3.999999999999837e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:30:47.032" endtime="20201030 18:30:47.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:47.040" level="INFO">${RESULT} = {'diff': [4.07920000000013e-05, 4.002800000000098e-05, 3.99859999999988e-05, 3.998600000000227e-05, 3.994400000000009e-05, 3.999999999999837e-05, 4.001400000000141e-05, 4.001400000000141e-05, 4.002699...</msg>
<status status="PASS" starttime="20201030 18:30:47.036" endtime="20201030 18:30:47.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.045" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:47.044" endtime="20201030 18:30:47.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.047" level="INFO">VALUE: [4.07920000000013e-05, 4.002800000000098e-05, 3.99859999999988e-05, 3.998600000000227e-05, 3.994400000000009e-05, 3.999999999999837e-05, 4.001400000000141e-05, 4.001400000000141e-05, 4.0026999999998036e-05, 4.001400000000141e-05, 3.998600000000227e-05, 3.9930999999999994e-05, 3.998600000000227e-05, 4.0041000000001076e-05, 3.999999999999837e-05, 4.002800000000098e-05, 3.998700000000174e-05, 4.001399999999794e-05, 3.998600000000227e-05, 3.995799999999966e-05, 3.997199999999923e-05, 4.0082999999999785e-05, 4.001399999999794e-05, 3.9958999999999134e-05, 4.001400000000141e-05, 3.99859999999988e-05, 3.99859999999988e-05, 4.001400000000141e-05, 3.999999999999837e-05, 3.99859999999988e-05, 3.99859999999988e-05, 3.999999999999837e-05, 3.999999999999837e-05, 4.0013000000001936e-05, 4.001399999999794e-05, 4.002800000000098e-05, 4.001400000000141e-05, 4.001399999999794e-05, 4.000000000000184e-05, 4.005600000000012e-05, 4.002800000000098e-05, 4.004200000000055e-05, 4.001400000000141e-05, 4.001399999999794e-05, 4.000000000000184e-05, 4.001400000000141e-05, 3.999999999999837e-05, 4.0026999999998036e-05, 3.994400000000009e-05, 4.001399999999794e-05]</msg>
<status status="PASS" starttime="20201030 18:30:47.046" endtime="20201030 18:30:47.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.041" endtime="20201030 18:30:47.048"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:47.052" endtime="20201030 18:30:47.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.051" endtime="20201030 18:30:47.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.049" endtime="20201030 18:30:47.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.698" endtime="20201030 18:30:47.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.697" endtime="20201030 18:30:47.073"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.081" endtime="20201030 18:30:47.093"></status>
</kw>
<msg timestamp="20201030 18:30:47.093" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:47.079" endtime="20201030 18:30:47.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.096" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:47.095" endtime="20201030 18:30:47.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.097" endtime="20201030 18:30:47.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.077" endtime="20201030 18:30:47.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.075" endtime="20201030 18:30:47.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.106" endtime="20201030 18:30:47.394"></status>
</kw>
<msg timestamp="20201030 18:30:47.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018411528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018454264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:47.104" endtime="20201030 18:30:47.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018411528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018454264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:47.398" endtime="20201030 18:30:47.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.408" endtime="20201030 18:30:47.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.102" endtime="20201030 18:30:47.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.100" endtime="20201030 18:30:47.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:47.415" level="INFO">${PHILIP_RES} = [{'diff': 4.273600000000155e-05}, {'diff': 4.197200000000123e-05}, {'diff': 4.1945000000001564e-05}, {'diff': 4.195800000000166e-05}, {'diff': 4.197200000000123e-05}, {'diff': 4.195799999999819e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:30:47.411" endtime="20201030 18:30:47.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:47.419" level="INFO">${RESULT} = {'diff': [4.273600000000155e-05, 4.197200000000123e-05, 4.1945000000001564e-05, 4.195800000000166e-05, 4.197200000000123e-05, 4.195799999999819e-05, 4.195799999999819e-05, 4.1945000000001564e-05, 4.19...</msg>
<status status="PASS" starttime="20201030 18:30:47.416" endtime="20201030 18:30:47.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.423" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:47.422" endtime="20201030 18:30:47.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.426" level="INFO">VALUE: [4.273600000000155e-05, 4.197200000000123e-05, 4.1945000000001564e-05, 4.195800000000166e-05, 4.197200000000123e-05, 4.195799999999819e-05, 4.195799999999819e-05, 4.1945000000001564e-05, 4.195800000000166e-05, 4.1944999999998095e-05, 4.1930999999998525e-05, 4.192999999999905e-05, 4.1959000000001134e-05, 4.195800000000166e-05, 4.194399999999862e-05, 4.1944999999998095e-05, 4.195800000000166e-05, 4.1931000000001994e-05, 4.200000000000037e-05, 4.197199999999776e-05, 4.1944999999998095e-05, 4.19860000000008e-05, 4.1945000000001564e-05, 4.197200000000123e-05, 4.192999999999905e-05, 4.1972999999997235e-05, 4.1930999999998525e-05, 4.202799999999951e-05, 4.1944999999998095e-05, 4.195799999999819e-05, 4.1958999999997665e-05, 4.197199999999776e-05, 4.197200000000123e-05, 4.1959000000001134e-05, 4.195799999999819e-05, 4.197199999999776e-05, 4.195800000000166e-05, 4.195800000000166e-05, 4.1973000000000704e-05, 4.195799999999819e-05, 4.197200000000123e-05, 4.1945000000001564e-05, 4.194400000000209e-05, 4.1931000000001994e-05, 4.195799999999819e-05, 4.197199999999776e-05, 4.197200000000123e-05, 4.197200000000123e-05, 4.1944999999998095e-05, 4.1944999999998095e-05]</msg>
<status status="PASS" starttime="20201030 18:30:47.424" endtime="20201030 18:30:47.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.420" endtime="20201030 18:30:47.427"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:47.431" endtime="20201030 18:30:47.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.429" endtime="20201030 18:30:47.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.428" endtime="20201030 18:30:47.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.073" endtime="20201030 18:30:47.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.073" endtime="20201030 18:30:47.452"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.461" endtime="20201030 18:30:47.475"></status>
</kw>
<msg timestamp="20201030 18:30:47.476" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:47.460" endtime="20201030 18:30:47.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.478" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:47.477" endtime="20201030 18:30:47.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.479" endtime="20201030 18:30:47.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.457" endtime="20201030 18:30:47.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.455" endtime="20201030 18:30:47.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.488" endtime="20201030 18:30:47.775"></status>
</kw>
<msg timestamp="20201030 18:30:47.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021215264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021259944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:47.487" endtime="20201030 18:30:47.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021215264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021259944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:47.779" endtime="20201030 18:30:47.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.787" endtime="20201030 18:30:47.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.484" endtime="20201030 18:30:47.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.482" endtime="20201030 18:30:47.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:47.794" level="INFO">${PHILIP_RES} = [{'diff': 4.467999999999833e-05}, {'diff': 4.391599999999801e-05}, {'diff': 4.3930999999997056e-05}, {'diff': 4.3931000000000525e-05}, {'diff': 4.398599999999933e-05}, {'diff': 4.395800000000019e-05},...</msg>
<status status="PASS" starttime="20201030 18:30:47.791" endtime="20201030 18:30:47.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:47.798" level="INFO">${RESULT} = {'diff': [4.467999999999833e-05, 4.391599999999801e-05, 4.3930999999997056e-05, 4.3931000000000525e-05, 4.398599999999933e-05, 4.395800000000019e-05, 4.3889000000001815e-05, 4.3903000000001385e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:30:47.795" endtime="20201030 18:30:47.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.802" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:47.801" endtime="20201030 18:30:47.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.805" level="INFO">VALUE: [4.467999999999833e-05, 4.391599999999801e-05, 4.3930999999997056e-05, 4.3931000000000525e-05, 4.398599999999933e-05, 4.395800000000019e-05, 4.3889000000001815e-05, 4.3903000000001385e-05, 4.3931000000000525e-05, 4.3917000000000955e-05, 4.3917000000000955e-05, 4.394400000000062e-05, 4.394399999999715e-05, 4.3931000000000525e-05, 4.3888999999998346e-05, 4.3860999999999206e-05, 4.397199999999976e-05, 4.391599999999801e-05, 4.392999999999758e-05, 4.3917000000000955e-05, 4.3931000000000525e-05, 4.3917000000000955e-05, 4.390200000000191e-05, 4.393000000000105e-05, 4.3903000000001385e-05, 4.3931000000000525e-05, 4.3931000000000525e-05, 4.3945000000000095e-05, 4.392999999999758e-05, 4.392999999999758e-05, 4.392999999999758e-05, 4.3931000000000525e-05, 4.3917000000000955e-05, 4.3917000000000955e-05, 4.391600000000148e-05, 4.393000000000105e-05, 4.3917000000000955e-05, 4.3931000000000525e-05, 4.3903000000001385e-05, 4.398599999999933e-05, 4.390199999999844e-05, 4.392999999999758e-05, 4.3945000000000095e-05, 4.3902999999997916e-05, 4.3930999999997056e-05, 4.3903000000001385e-05, 4.39999999999989e-05, 4.393000000000105e-05, 4.3931000000000525e-05, 4.3931000000000525e-05]</msg>
<status status="PASS" starttime="20201030 18:30:47.803" endtime="20201030 18:30:47.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.799" endtime="20201030 18:30:47.807"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:47.811" endtime="20201030 18:30:47.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.809" endtime="20201030 18:30:47.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.808" endtime="20201030 18:30:47.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.453" endtime="20201030 18:30:47.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.452" endtime="20201030 18:30:47.831"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.840" endtime="20201030 18:30:47.852"></status>
</kw>
<msg timestamp="20201030 18:30:47.853" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:47.838" endtime="20201030 18:30:47.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.855" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:47.854" endtime="20201030 18:30:47.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.856" endtime="20201030 18:30:47.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.835" endtime="20201030 18:30:47.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.833" endtime="20201030 18:30:47.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.865" endtime="20201030 18:30:48.151"></status>
</kw>
<msg timestamp="20201030 18:30:48.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018664556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01871125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:47.864" endtime="20201030 18:30:48.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018664556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01871125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:48.155" endtime="20201030 18:30:48.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.163" endtime="20201030 18:30:48.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.861" endtime="20201030 18:30:48.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.859" endtime="20201030 18:30:48.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:48.169" level="INFO">${PHILIP_RES} = [{'diff': 4.66939999999999e-05}, {'diff': 4.5902999999999916e-05}, {'diff': 4.5917000000002955e-05}, {'diff': 4.5930999999999056e-05}, {'diff': 4.5930999999999056e-05}, {'diff': 4.5917000000002955e-05...</msg>
<status status="PASS" starttime="20201030 18:30:48.166" endtime="20201030 18:30:48.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:48.174" level="INFO">${RESULT} = {'diff': [4.66939999999999e-05, 4.5902999999999916e-05, 4.5917000000002955e-05, 4.5930999999999056e-05, 4.5930999999999056e-05, 4.5917000000002955e-05, 4.5916999999999486e-05, 4.5944999999998626e-05, ...</msg>
<status status="PASS" starttime="20201030 18:30:48.170" endtime="20201030 18:30:48.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.179" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:48.178" endtime="20201030 18:30:48.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.181" level="INFO">VALUE: [4.66939999999999e-05, 4.5902999999999916e-05, 4.5917000000002955e-05, 4.5930999999999056e-05, 4.5930999999999056e-05, 4.5917000000002955e-05, 4.5916999999999486e-05, 4.5944999999998626e-05, 4.595800000000219e-05, 4.5902999999999916e-05, 4.5902999999999916e-05, 4.594399999999915e-05, 4.588800000000087e-05, 4.5916999999999486e-05, 4.5916999999999486e-05, 4.5861000000001206e-05, 4.592999999999958e-05, 4.591600000000001e-05, 4.592999999999958e-05, 4.592999999999958e-05, 4.591600000000001e-05, 4.590200000000044e-05, 4.591600000000001e-05, 4.591600000000001e-05, 4.591600000000001e-05, 4.5902999999999916e-05, 4.592999999999958e-05, 4.597200000000176e-05, 4.5987000000000805e-05, 4.5916999999999486e-05, 4.5987000000000805e-05, 4.5916999999999486e-05, 4.5945000000002095e-05, 4.5875000000000776e-05, 4.5944999999998626e-05, 4.5931000000002525e-05, 4.5916999999999486e-05, 4.5847000000001636e-05, 4.5945000000002095e-05, 4.5916999999999486e-05, 4.5916999999999486e-05, 4.5916999999999486e-05, 4.5930999999999056e-05, 4.5931000000002525e-05, 4.586099999999774e-05, 4.5930999999999056e-05, 4.5875000000000776e-05, 4.5930999999999056e-05, 4.592999999999958e-05, 4.598600000000133e-05]</msg>
<status status="PASS" starttime="20201030 18:30:48.180" endtime="20201030 18:30:48.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.175" endtime="20201030 18:30:48.183"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:48.186" endtime="20201030 18:30:48.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.185" endtime="20201030 18:30:48.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.183" endtime="20201030 18:30:48.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.832" endtime="20201030 18:30:48.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.831" endtime="20201030 18:30:48.207"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.215" endtime="20201030 18:30:48.228"></status>
</kw>
<msg timestamp="20201030 18:30:48.228" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:48.213" endtime="20201030 18:30:48.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.231" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:48.229" endtime="20201030 18:30:48.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.232" endtime="20201030 18:30:48.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.211" endtime="20201030 18:30:48.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.209" endtime="20201030 18:30:48.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.241" endtime="20201030 18:30:48.528"></status>
</kw>
<msg timestamp="20201030 18:30:48.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018591306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018640028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:48.239" endtime="20201030 18:30:48.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018591306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018640028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:48.532" endtime="20201030 18:30:48.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.540" endtime="20201030 18:30:48.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.237" endtime="20201030 18:30:48.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.235" endtime="20201030 18:30:48.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:48.546" level="INFO">${PHILIP_RES} = [{'diff': 4.872200000000104e-05}, {'diff': 4.7944999999997157e-05}, {'diff': 4.794400000000115e-05}, {'diff': 4.794399999999768e-05}, {'diff': 4.797200000000029e-05}, {'diff': 4.795799999999725e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:30:48.543" endtime="20201030 18:30:48.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:48.551" level="INFO">${RESULT} = {'diff': [4.872200000000104e-05, 4.7944999999997157e-05, 4.794400000000115e-05, 4.794399999999768e-05, 4.797200000000029e-05, 4.795799999999725e-05, 4.7931000000001056e-05, 4.794399999999768e-05, 4.79...</msg>
<status status="PASS" starttime="20201030 18:30:48.547" endtime="20201030 18:30:48.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.555" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:48.554" endtime="20201030 18:30:48.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.557" level="INFO">VALUE: [4.872200000000104e-05, 4.7944999999997157e-05, 4.794400000000115e-05, 4.794399999999768e-05, 4.797200000000029e-05, 4.795799999999725e-05, 4.7931000000001056e-05, 4.794399999999768e-05, 4.797200000000029e-05, 4.792999999999811e-05, 4.794400000000115e-05, 4.790299999999845e-05, 4.7903000000001916e-05, 4.7945000000000626e-05, 4.793000000000158e-05, 4.792999999999811e-05, 4.7945000000000626e-05, 4.7959000000000196e-05, 4.797200000000029e-05, 4.792999999999811e-05, 4.795800000000072e-05, 4.801400000000247e-05, 4.7931000000001056e-05, 4.7959000000000196e-05, 4.7931000000001056e-05, 4.798599999999986e-05, 4.795800000000072e-05, 4.7917000000001486e-05, 4.7959000000000196e-05, 4.7945000000000626e-05, 4.797200000000029e-05, 4.794399999999768e-05, 4.787499999999931e-05, 4.797200000000029e-05, 4.7944999999997157e-05, 4.7945000000000626e-05, 4.797199999999682e-05, 4.794400000000115e-05, 4.795799999999725e-05, 4.7945000000000626e-05, 4.7944999999997157e-05, 4.795800000000072e-05, 4.80000000000029e-05, 4.793000000000158e-05, 4.795800000000072e-05, 4.7972999999999766e-05, 4.7959000000000196e-05, 4.794400000000115e-05, 4.794400000000115e-05, 4.799999999999943e-05]</msg>
<status status="PASS" starttime="20201030 18:30:48.556" endtime="20201030 18:30:48.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.552" endtime="20201030 18:30:48.559"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:48.562" endtime="20201030 18:30:48.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.561" endtime="20201030 18:30:48.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.560" endtime="20201030 18:30:48.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.208" endtime="20201030 18:30:48.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.207" endtime="20201030 18:30:48.583"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.592" endtime="20201030 18:30:48.606"></status>
</kw>
<msg timestamp="20201030 18:30:48.606" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:48.590" endtime="20201030 18:30:48.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.609" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:48.607" endtime="20201030 18:30:48.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.610" endtime="20201030 18:30:48.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.587" endtime="20201030 18:30:48.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.585" endtime="20201030 18:30:48.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.619" endtime="20201030 18:30:48.904"></status>
</kw>
<msg timestamp="20201030 18:30:48.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019542556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019593333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:48.617" endtime="20201030 18:30:48.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019542556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019593333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:48.908" endtime="20201030 18:30:48.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.916" endtime="20201030 18:30:48.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.615" endtime="20201030 18:30:48.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.613" endtime="20201030 18:30:48.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:48.923" level="INFO">${PHILIP_RES} = [{'diff': 5.077700000000185e-05}, {'diff': 5.002800000000057e-05}, {'diff': 5.001399999999753e-05}, {'diff': 5.002800000000057e-05}, {'diff': 4.999999999999796e-05}, {'diff': 5.000000000000143e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:48.920" endtime="20201030 18:30:48.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:48.927" level="INFO">${RESULT} = {'diff': [5.077700000000185e-05, 5.002800000000057e-05, 5.001399999999753e-05, 5.002800000000057e-05, 4.999999999999796e-05, 5.000000000000143e-05, 4.999999999999796e-05, 4.993000000000011e-05, 5.0013...</msg>
<status status="PASS" starttime="20201030 18:30:48.924" endtime="20201030 18:30:48.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.931" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:48.930" endtime="20201030 18:30:48.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.934" level="INFO">VALUE: [5.077700000000185e-05, 5.002800000000057e-05, 5.001399999999753e-05, 5.002800000000057e-05, 4.999999999999796e-05, 5.000000000000143e-05, 4.999999999999796e-05, 4.993000000000011e-05, 5.001399999999753e-05, 4.998600000000186e-05, 4.999999999999796e-05, 4.999999999999796e-05, 5.002800000000057e-05, 4.999999999999796e-05, 5.006899999999981e-05, 4.999999999999796e-05, 5.0014000000001e-05, 5.001299999999806e-05, 4.998600000000186e-05, 5.005500000000024e-05, 5.000000000000143e-05, 5.005500000000024e-05, 5.0014000000001e-05, 4.9972999999998297e-05, 5.002800000000057e-05, 5.006899999999981e-05, 4.998600000000186e-05, 5.001399999999753e-05, 5.0014000000001e-05, 4.999999999999796e-05, 4.999999999999796e-05, 5.0014000000001e-05, 5.001399999999753e-05, 4.994499999999916e-05, 5.000000000000143e-05, 4.998599999999839e-05, 4.995799999999925e-05, 5.002800000000057e-05, 5.002699999999763e-05, 5.000000000000143e-05, 4.9986999999997866e-05, 5.0014000000001e-05, 4.995799999999925e-05, 5.000000000000143e-05, 5.001399999999753e-05, 5.0014000000001e-05, 4.999999999999796e-05, 5.002800000000057e-05, 5.0014000000001e-05, 5.000000000000143e-05]</msg>
<status status="PASS" starttime="20201030 18:30:48.932" endtime="20201030 18:30:48.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.928" endtime="20201030 18:30:48.936"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:48.940" endtime="20201030 18:30:48.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.938" endtime="20201030 18:30:48.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.937" endtime="20201030 18:30:48.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.584" endtime="20201030 18:30:48.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.583" endtime="20201030 18:30:48.960"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.969" endtime="20201030 18:30:48.983"></status>
</kw>
<msg timestamp="20201030 18:30:48.983" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:48.967" endtime="20201030 18:30:48.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.986" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:48.984" endtime="20201030 18:30:48.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.987" endtime="20201030 18:30:48.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.965" endtime="20201030 18:30:48.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.963" endtime="20201030 18:30:48.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.996" endtime="20201030 18:30:49.282"></status>
</kw>
<msg timestamp="20201030 18:30:49.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018536222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018589069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:48.994" endtime="20201030 18:30:49.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018536222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018589069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:49.286" endtime="20201030 18:30:49.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.294" endtime="20201030 18:30:49.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.992" endtime="20201030 18:30:49.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.990" endtime="20201030 18:30:49.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:49.300" level="INFO">${PHILIP_RES} = [{'diff': 5.284699999999823e-05}, {'diff': 5.209700000000095e-05}, {'diff': 5.209699999999748e-05}, {'diff': 5.211100000000052e-05}, {'diff': 5.206999999999781e-05}, {'diff': 5.212500000000009e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:49.297" endtime="20201030 18:30:49.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:49.305" level="INFO">${RESULT} = {'diff': [5.284699999999823e-05, 5.209700000000095e-05, 5.209699999999748e-05, 5.211100000000052e-05, 5.206999999999781e-05, 5.212500000000009e-05, 5.208300000000138e-05, 5.2138000000000184e-05, 5.209...</msg>
<status status="PASS" starttime="20201030 18:30:49.301" endtime="20201030 18:30:49.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.310" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:49.309" endtime="20201030 18:30:49.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.312" level="INFO">VALUE: [5.284699999999823e-05, 5.209700000000095e-05, 5.209699999999748e-05, 5.211100000000052e-05, 5.206999999999781e-05, 5.212500000000009e-05, 5.208300000000138e-05, 5.2138000000000184e-05, 5.209700000000095e-05, 5.211100000000052e-05, 5.206899999999834e-05, 5.208300000000138e-05, 5.202800000000257e-05, 5.206900000000181e-05, 5.206900000000181e-05, 5.208400000000085e-05, 5.207000000000128e-05, 5.213899999999966e-05, 5.209800000000042e-05, 5.207000000000128e-05, 5.209699999999748e-05, 5.204200000000214e-05, 5.206899999999834e-05, 5.212500000000009e-05, 5.209700000000095e-05, 5.208299999999791e-05, 5.209700000000095e-05, 5.213899999999966e-05, 5.212500000000009e-05, 5.209800000000042e-05, 5.208399999999738e-05, 5.209800000000042e-05, 5.208400000000085e-05, 5.208299999999791e-05, 5.208300000000138e-05, 5.209699999999748e-05, 5.208300000000138e-05, 5.209700000000095e-05, 5.212500000000009e-05, 5.209700000000095e-05, 5.208299999999791e-05, 5.208300000000138e-05, 5.213899999999966e-05, 5.209800000000042e-05, 5.208400000000085e-05, 5.208399999999738e-05, 5.208300000000138e-05, 5.209700000000095e-05, 5.209699999999748e-05, 5.209700000000095e-05]</msg>
<status status="PASS" starttime="20201030 18:30:49.311" endtime="20201030 18:30:49.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.306" endtime="20201030 18:30:49.313"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:49.317" endtime="20201030 18:30:49.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.316" endtime="20201030 18:30:49.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.315" endtime="20201030 18:30:49.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.961" endtime="20201030 18:30:49.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.961" endtime="20201030 18:30:49.338"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.346" endtime="20201030 18:30:49.360"></status>
</kw>
<msg timestamp="20201030 18:30:49.361" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:49.345" endtime="20201030 18:30:49.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.363" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:49.362" endtime="20201030 18:30:49.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.364" endtime="20201030 18:30:49.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.342" endtime="20201030 18:30:49.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.340" endtime="20201030 18:30:49.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.373" endtime="20201030 18:30:49.659"></status>
</kw>
<msg timestamp="20201030 18:30:49.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01873875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01879375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:30:49.372" endtime="20201030 18:30:49.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01873875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01879375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:30:49.663" endtime="20201030 18:30:49.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.672" endtime="20201030 18:30:49.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.369" endtime="20201030 18:30:49.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.367" endtime="20201030 18:30:49.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:49.678" level="INFO">${PHILIP_RES} = [{'diff': 5.500000000000296e-05}, {'diff': 5.4194000000000464e-05}, {'diff': 5.420899999999951e-05}, {'diff': 5.4193999999996995e-05}, {'diff': 5.422200000000307e-05}, {'diff': 5.4221999999999604e-05}...</msg>
<status status="PASS" starttime="20201030 18:30:49.675" endtime="20201030 18:30:49.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:49.682" level="INFO">${RESULT} = {'diff': [5.500000000000296e-05, 5.4194000000000464e-05, 5.420899999999951e-05, 5.4193999999996995e-05, 5.422200000000307e-05, 5.4221999999999604e-05, 5.4208000000000034e-05, 5.4208000000000034e-05, 5...</msg>
<status status="PASS" starttime="20201030 18:30:49.679" endtime="20201030 18:30:49.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.687" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:49.685" endtime="20201030 18:30:49.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.689" level="INFO">VALUE: [5.500000000000296e-05, 5.4194000000000464e-05, 5.420899999999951e-05, 5.4193999999996995e-05, 5.422200000000307e-05, 5.4221999999999604e-05, 5.4208000000000034e-05, 5.4208000000000034e-05, 5.418100000000037e-05, 5.415300000000123e-05, 5.4194000000000464e-05, 5.419499999999994e-05, 5.4263999999998314e-05, 5.4208000000000034e-05, 5.418100000000037e-05, 5.4180000000000894e-05, 5.4180000000000894e-05, 5.418100000000037e-05, 5.4180000000000894e-05, 5.4180000000000894e-05, 5.420899999999951e-05, 5.4194000000000464e-05, 5.4194000000000464e-05, 5.418100000000037e-05, 5.4194000000000464e-05, 5.4208000000000034e-05, 5.422299999999908e-05, 5.4194000000000464e-05, 5.4165999999997855e-05, 5.426400000000178e-05, 5.4194000000000464e-05, 5.4180000000000894e-05, 5.420899999999951e-05, 5.418100000000037e-05, 5.4208000000000034e-05, 5.420899999999951e-05, 5.422200000000307e-05, 5.426400000000178e-05, 5.420899999999951e-05, 5.4208000000000034e-05, 5.425000000000221e-05, 5.420900000000298e-05, 5.4208000000000034e-05, 5.4235999999999174e-05, 5.419499999999994e-05, 5.4208000000000034e-05, 5.4194000000000464e-05, 5.420899999999951e-05, 5.4208000000000034e-05, 5.4208000000000034e-05]</msg>
<status status="PASS" starttime="20201030 18:30:49.688" endtime="20201030 18:30:49.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.683" endtime="20201030 18:30:49.690"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:49.694" endtime="20201030 18:30:49.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.693" endtime="20201030 18:30:49.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.692" endtime="20201030 18:30:49.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.339" endtime="20201030 18:30:49.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.338" endtime="20201030 18:30:49.715"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.723" endtime="20201030 18:30:49.738"></status>
</kw>
<msg timestamp="20201030 18:30:49.739" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:49.722" endtime="20201030 18:30:49.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.741" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:49.740" endtime="20201030 18:30:49.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.743" endtime="20201030 18:30:49.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.719" endtime="20201030 18:30:49.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.717" endtime="20201030 18:30:49.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.751" endtime="20201030 18:30:50.037"></status>
</kw>
<msg timestamp="20201030 18:30:50.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019354611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019411736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:49.750" endtime="20201030 18:30:50.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019354611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019411736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:50.042" endtime="20201030 18:30:50.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.050" endtime="20201030 18:30:50.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.747" endtime="20201030 18:30:50.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.746" endtime="20201030 18:30:50.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:50.056" level="INFO">${PHILIP_RES} = [{'diff': 5.712499999999815e-05}, {'diff': 5.63480000000012e-05}, {'diff': 5.637500000000087e-05}, {'diff': 5.631899999999912e-05}, {'diff': 5.63610000000013e-05}, {'diff': 5.6388000000000965e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:50.053" endtime="20201030 18:30:50.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:50.060" level="INFO">${RESULT} = {'diff': [5.712499999999815e-05, 5.63480000000012e-05, 5.637500000000087e-05, 5.631899999999912e-05, 5.63610000000013e-05, 5.6388000000000965e-05, 5.634699999999826e-05, 5.634699999999826e-05, 5.63340...</msg>
<status status="PASS" starttime="20201030 18:30:50.057" endtime="20201030 18:30:50.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.065" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:50.064" endtime="20201030 18:30:50.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.067" level="INFO">VALUE: [5.712499999999815e-05, 5.63480000000012e-05, 5.637500000000087e-05, 5.631899999999912e-05, 5.63610000000013e-05, 5.6388000000000965e-05, 5.634699999999826e-05, 5.634699999999826e-05, 5.633400000000163e-05, 5.631900000000259e-05, 5.634699999999826e-05, 5.633399999999816e-05, 5.634700000000173e-05, 5.634700000000173e-05, 5.631899999999912e-05, 5.6319999999998593e-05, 5.633300000000216e-05, 5.634699999999826e-05, 5.634799999999773e-05, 5.633299999999869e-05, 5.634700000000173e-05, 5.633299999999869e-05, 5.633399999999816e-05, 5.634700000000173e-05, 5.631900000000259e-05, 5.633299999999869e-05, 5.6264000000000314e-05, 5.634700000000173e-05, 5.633300000000216e-05, 5.633399999999816e-05, 5.634699999999826e-05, 5.633300000000216e-05, 5.6319999999998593e-05, 5.638900000000044e-05, 5.63610000000013e-05, 5.633400000000163e-05, 5.634699999999826e-05, 5.630499999999955e-05, 5.633300000000216e-05, 5.63480000000012e-05, 5.631899999999912e-05, 5.634699999999826e-05, 5.63480000000012e-05, 5.634700000000173e-05, 5.636099999999783e-05, 5.633299999999869e-05, 5.633400000000163e-05, 5.63610000000013e-05, 5.6264000000000314e-05, 5.633399999999816e-05]</msg>
<status status="PASS" starttime="20201030 18:30:50.066" endtime="20201030 18:30:50.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.061" endtime="20201030 18:30:50.069"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:50.073" endtime="20201030 18:30:50.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.072" endtime="20201030 18:30:50.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.070" endtime="20201030 18:30:50.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.716" endtime="20201030 18:30:50.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.715" endtime="20201030 18:30:50.094"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.102" endtime="20201030 18:30:50.116"></status>
</kw>
<msg timestamp="20201030 18:30:50.116" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:50.101" endtime="20201030 18:30:50.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.119" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:50.118" endtime="20201030 18:30:50.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.120" endtime="20201030 18:30:50.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.098" endtime="20201030 18:30:50.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.096" endtime="20201030 18:30:50.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.129" endtime="20201030 18:30:50.415"></status>
</kw>
<msg timestamp="20201030 18:30:50.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018625417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018684708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:50.128" endtime="20201030 18:30:50.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018625417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018684708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:50.420" endtime="20201030 18:30:50.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.428" endtime="20201030 18:30:50.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.125" endtime="20201030 18:30:50.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.123" endtime="20201030 18:30:50.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:50.434" level="INFO">${PHILIP_RES} = [{'diff': 5.929100000000298e-05}, {'diff': 5.8513999999999095e-05}, {'diff': 5.8485999999999955e-05}, {'diff': 5.8485999999999955e-05}, {'diff': 5.8513999999999095e-05}, {'diff': 5.8499999999999525e-0...</msg>
<status status="PASS" starttime="20201030 18:30:50.431" endtime="20201030 18:30:50.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:50.439" level="INFO">${RESULT} = {'diff': [5.929100000000298e-05, 5.8513999999999095e-05, 5.8485999999999955e-05, 5.8485999999999955e-05, 5.8513999999999095e-05, 5.8499999999999525e-05, 5.8513999999999095e-05, 5.8513999999999095e-05,...</msg>
<status status="PASS" starttime="20201030 18:30:50.435" endtime="20201030 18:30:50.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.444" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:50.443" endtime="20201030 18:30:50.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.446" level="INFO">VALUE: [5.929100000000298e-05, 5.8513999999999095e-05, 5.8485999999999955e-05, 5.8485999999999955e-05, 5.8513999999999095e-05, 5.8499999999999525e-05, 5.8513999999999095e-05, 5.8513999999999095e-05, 5.8513999999999095e-05, 5.8500000000002994e-05, 5.851299999999962e-05, 5.8513999999999095e-05, 5.8528000000002134e-05, 5.8485999999999955e-05, 5.8499999999999525e-05, 5.8513999999999095e-05, 5.8485999999999955e-05, 5.8499999999999525e-05, 5.8527999999998664e-05, 5.8485999999999955e-05, 5.8513999999999095e-05, 5.8528000000002134e-05, 5.8513999999999095e-05, 5.8513999999999095e-05, 5.8513999999999095e-05, 5.8555999999997804e-05, 5.8542000000001704e-05, 5.8513999999999095e-05, 5.8485999999999955e-05, 5.8499999999999525e-05, 5.8499999999999525e-05, 5.8514000000002564e-05, 5.8513999999999095e-05, 5.8499999999999525e-05, 5.8513999999999095e-05, 5.8542000000001704e-05, 5.8485999999999955e-05, 5.8527999999998664e-05, 5.8471999999996915e-05, 5.8499999999999525e-05, 5.8513999999999095e-05, 5.8499999999999525e-05, 5.8472000000000385e-05, 5.8499999999999525e-05, 5.8513999999999095e-05, 5.8499999999999525e-05, 5.8499999999999525e-05, 5.8485999999999955e-05, 5.8499999999999525e-05, 5.852699999999919e-05]</msg>
<status status="PASS" starttime="20201030 18:30:50.445" endtime="20201030 18:30:50.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.440" endtime="20201030 18:30:50.448"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:50.451" endtime="20201030 18:30:50.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.450" endtime="20201030 18:30:50.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.449" endtime="20201030 18:30:50.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.095" endtime="20201030 18:30:50.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.094" endtime="20201030 18:30:50.472"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.480" endtime="20201030 18:30:50.496"></status>
</kw>
<msg timestamp="20201030 18:30:50.496" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:50.479" endtime="20201030 18:30:50.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.499" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:50.497" endtime="20201030 18:30:50.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.500" endtime="20201030 18:30:50.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.476" endtime="20201030 18:30:50.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.474" endtime="20201030 18:30:50.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.510" endtime="20201030 18:30:50.798"></status>
</kw>
<msg timestamp="20201030 18:30:50.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018728264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01878975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:50.508" endtime="20201030 18:30:50.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018728264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01878975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:50.802" endtime="20201030 18:30:50.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.810" endtime="20201030 18:30:50.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.506" endtime="20201030 18:30:50.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.503" endtime="20201030 18:30:50.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:50.817" level="INFO">${PHILIP_RES} = [{'diff': 6.148599999999949e-05}, {'diff': 6.0707999999999596e-05}, {'diff': 6.068099999999993e-05}, {'diff': 6.0721999999999166e-05}, {'diff': 6.0707999999999596e-05}, {'diff': 6.0735999999998735e-05...</msg>
<status status="PASS" starttime="20201030 18:30:50.814" endtime="20201030 18:30:50.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:50.821" level="INFO">${RESULT} = {'diff': [6.148599999999949e-05, 6.0707999999999596e-05, 6.068099999999993e-05, 6.0721999999999166e-05, 6.0707999999999596e-05, 6.0735999999998735e-05, 6.06949999999995e-05, 6.070899999999907e-05, 6.0...</msg>
<status status="PASS" starttime="20201030 18:30:50.818" endtime="20201030 18:30:50.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.825" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:50.824" endtime="20201030 18:30:50.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.828" level="INFO">VALUE: [6.148599999999949e-05, 6.0707999999999596e-05, 6.068099999999993e-05, 6.0721999999999166e-05, 6.0707999999999596e-05, 6.0735999999998735e-05, 6.06949999999995e-05, 6.070899999999907e-05, 6.0694000000000026e-05, 6.0694000000000026e-05, 6.0694000000000026e-05, 6.06949999999995e-05, 6.0694000000000026e-05, 6.0694000000000026e-05, 6.0694000000000026e-05, 6.06949999999995e-05, 6.0708000000003065e-05, 6.0707999999999596e-05, 6.0708000000003065e-05, 6.0721999999999166e-05, 6.0694000000000026e-05, 6.0694000000000026e-05, 6.0694000000000026e-05, 6.0708000000003065e-05, 6.068099999999993e-05, 6.0708000000003065e-05, 6.0707999999999596e-05, 6.0707999999999596e-05, 6.072300000000211e-05, 6.0721999999999166e-05, 6.0722000000002635e-05, 6.0694000000000026e-05, 6.069500000000297e-05, 6.06949999999995e-05, 6.0707999999999596e-05, 6.0764000000001345e-05, 6.0707999999999596e-05, 6.070900000000254e-05, 6.0721999999999166e-05, 6.0722000000002635e-05, 6.0707999999999596e-05, 6.070899999999907e-05, 6.06949999999995e-05, 6.0694000000000026e-05, 6.0679999999996986e-05, 6.070899999999907e-05, 6.070900000000254e-05, 6.0694000000000026e-05, 6.0721999999999166e-05, 6.070899999999907e-05]</msg>
<status status="PASS" starttime="20201030 18:30:50.826" endtime="20201030 18:30:50.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.822" endtime="20201030 18:30:50.829"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:50.833" endtime="20201030 18:30:50.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.831" endtime="20201030 18:30:50.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.830" endtime="20201030 18:30:50.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.473" endtime="20201030 18:30:50.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.472" endtime="20201030 18:30:50.853"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.862" endtime="20201030 18:30:50.877"></status>
</kw>
<msg timestamp="20201030 18:30:50.878" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:50.860" endtime="20201030 18:30:50.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.880" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:50.879" endtime="20201030 18:30:50.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.882" endtime="20201030 18:30:50.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.858" endtime="20201030 18:30:50.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.856" endtime="20201030 18:30:50.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.890" endtime="20201030 18:30:51.175"></status>
</kw>
<msg timestamp="20201030 18:30:51.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019409931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019473694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:50.889" endtime="20201030 18:30:51.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019409931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019473694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:51.179" endtime="20201030 18:30:51.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.188" endtime="20201030 18:30:51.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.886" endtime="20201030 18:30:51.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.885" endtime="20201030 18:30:51.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:51.194" level="INFO">${PHILIP_RES} = [{'diff': 6.37630000000014e-05}, {'diff': 6.2889e-05}, {'diff': 6.2889e-05}, {'diff': 6.29020000000001e-05}, {'diff': 6.293099999999871e-05}, {'diff': 6.291699999999914e-05}, {'diff': 6.29170000000026...</msg>
<status status="PASS" starttime="20201030 18:30:51.191" endtime="20201030 18:30:51.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:51.198" level="INFO">${RESULT} = {'diff': [6.37630000000014e-05, 6.2889e-05, 6.2889e-05, 6.29020000000001e-05, 6.293099999999871e-05, 6.291699999999914e-05, 6.291700000000261e-05, 6.293100000000218e-05, 6.290299999999957e-05, 6.29449...</msg>
<status status="PASS" starttime="20201030 18:30:51.195" endtime="20201030 18:30:51.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.202" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:51.201" endtime="20201030 18:30:51.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.205" level="INFO">VALUE: [6.37630000000014e-05, 6.2889e-05, 6.2889e-05, 6.29020000000001e-05, 6.293099999999871e-05, 6.291699999999914e-05, 6.291700000000261e-05, 6.293100000000218e-05, 6.290299999999957e-05, 6.294499999999828e-05, 6.2889e-05, 6.292999999999924e-05, 6.291699999999914e-05, 6.290300000000304e-05, 6.293100000000218e-05, 6.293099999999871e-05, 6.287500000000043e-05, 6.297199999999795e-05, 6.298600000000099e-05, 6.294400000000228e-05, 6.295800000000185e-05, 6.287499999999696e-05, 6.291699999999914e-05, 6.292999999999924e-05, 6.291599999999967e-05, 6.295800000000185e-05, 6.290300000000304e-05, 6.290299999999957e-05, 6.294499999999828e-05, 6.294499999999828e-05, 6.291699999999914e-05, 6.290299999999957e-05, 6.29300000000027e-05, 6.29300000000027e-05, 6.288799999999706e-05, 6.298600000000099e-05, 6.291699999999914e-05, 6.291699999999914e-05, 6.291700000000261e-05, 6.287499999999696e-05, 6.297200000000142e-05, 6.295800000000185e-05, 6.297199999999795e-05, 6.286100000000086e-05, 6.300000000000056e-05, 6.291700000000261e-05, 6.295800000000185e-05, 6.292999999999924e-05, 6.292999999999924e-05, 6.293099999999871e-05]</msg>
<status status="PASS" starttime="20201030 18:30:51.204" endtime="20201030 18:30:51.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.199" endtime="20201030 18:30:51.207"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:51.211" endtime="20201030 18:30:51.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.209" endtime="20201030 18:30:51.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.208" endtime="20201030 18:30:51.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.854" endtime="20201030 18:30:51.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.854" endtime="20201030 18:30:51.231"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.240" endtime="20201030 18:30:51.254"></status>
</kw>
<msg timestamp="20201030 18:30:51.255" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:51.238" endtime="20201030 18:30:51.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.257" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:51.256" endtime="20201030 18:30:51.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.258" endtime="20201030 18:30:51.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.236" endtime="20201030 18:30:51.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.234" endtime="20201030 18:30:51.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.267" endtime="20201030 18:30:51.553"></status>
</kw>
<msg timestamp="20201030 18:30:51.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01853775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018603708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:51.266" endtime="20201030 18:30:51.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01853775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018603708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:51.557" endtime="20201030 18:30:51.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.565" endtime="20201030 18:30:51.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.263" endtime="20201030 18:30:51.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.262" endtime="20201030 18:30:51.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:51.572" level="INFO">${PHILIP_RES} = [{'diff': 6.595800000000138e-05}, {'diff': 6.518099999999749e-05}, {'diff': 6.518100000000096e-05}, {'diff': 6.518000000000149e-05}, {'diff': 6.516599999999845e-05}, {'diff': 6.518000000000149e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:51.569" endtime="20201030 18:30:51.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:51.577" level="INFO">${RESULT} = {'diff': [6.595800000000138e-05, 6.518099999999749e-05, 6.518100000000096e-05, 6.518000000000149e-05, 6.516599999999845e-05, 6.518000000000149e-05, 6.519499999999706e-05, 6.519500000000053e-05, 6.5180...</msg>
<status status="PASS" starttime="20201030 18:30:51.573" endtime="20201030 18:30:51.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.581" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:51.580" endtime="20201030 18:30:51.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.583" level="INFO">VALUE: [6.595800000000138e-05, 6.518099999999749e-05, 6.518100000000096e-05, 6.518000000000149e-05, 6.516599999999845e-05, 6.518000000000149e-05, 6.519499999999706e-05, 6.519500000000053e-05, 6.518000000000149e-05, 6.517999999999802e-05, 6.519400000000106e-05, 6.516699999999792e-05, 6.516700000000139e-05, 6.518099999999749e-05, 6.515300000000182e-05, 6.519400000000106e-05, 6.518099999999749e-05, 6.519500000000053e-05, 6.516699999999792e-05, 6.516599999999845e-05, 6.519400000000106e-05, 6.518099999999749e-05, 6.524999999999934e-05, 6.511099999999964e-05, 6.518000000000149e-05, 6.515299999999835e-05, 6.516699999999792e-05, 6.513899999999878e-05, 6.519399999999759e-05, 6.516600000000192e-05, 6.518100000000096e-05, 6.516699999999792e-05, 6.516700000000139e-05, 6.516599999999845e-05, 6.518000000000149e-05, 6.519500000000053e-05, 6.518100000000096e-05, 6.518000000000149e-05, 6.511099999999964e-05, 6.516700000000139e-05, 6.515299999999835e-05, 6.52090000000001e-05, 6.519400000000106e-05, 6.516599999999845e-05, 6.518000000000149e-05, 6.520799999999716e-05, 6.516700000000139e-05, 6.517999999999802e-05, 6.519400000000106e-05, 6.516700000000139e-05]</msg>
<status status="PASS" starttime="20201030 18:30:51.582" endtime="20201030 18:30:51.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.578" endtime="20201030 18:30:51.585"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:51.588" endtime="20201030 18:30:51.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.587" endtime="20201030 18:30:51.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.586" endtime="20201030 18:30:51.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.232" endtime="20201030 18:30:51.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.232" endtime="20201030 18:30:51.609"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.617" endtime="20201030 18:30:51.633"></status>
</kw>
<msg timestamp="20201030 18:30:51.634" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:51.616" endtime="20201030 18:30:51.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.636" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:51.635" endtime="20201030 18:30:51.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.637" endtime="20201030 18:30:51.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.613" endtime="20201030 18:30:51.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.611" endtime="20201030 18:30:51.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.646" endtime="20201030 18:30:51.932"></status>
</kw>
<msg timestamp="20201030 18:30:51.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018717056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018785278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:51.645" endtime="20201030 18:30:51.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018717056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018785278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:51.937" endtime="20201030 18:30:51.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.945" endtime="20201030 18:30:51.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.642" endtime="20201030 18:30:51.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.640" endtime="20201030 18:30:51.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:51.951" level="INFO">${PHILIP_RES} = [{'diff': 6.822199999999973e-05}, {'diff': 6.747199999999898e-05}, {'diff': 6.745799999999941e-05}, {'diff': 6.744399999999984e-05}, {'diff': 6.744399999999984e-05}, {'diff': 6.744500000000278e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:51.948" endtime="20201030 18:30:51.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:51.955" level="INFO">${RESULT} = {'diff': [6.822199999999973e-05, 6.747199999999898e-05, 6.745799999999941e-05, 6.744399999999984e-05, 6.744399999999984e-05, 6.744500000000278e-05, 6.745900000000235e-05, 6.745899999999888e-05, 6.7458...</msg>
<status status="PASS" starttime="20201030 18:30:51.952" endtime="20201030 18:30:51.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.960" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:51.959" endtime="20201030 18:30:51.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.962" level="INFO">VALUE: [6.822199999999973e-05, 6.747199999999898e-05, 6.745799999999941e-05, 6.744399999999984e-05, 6.744399999999984e-05, 6.744500000000278e-05, 6.745900000000235e-05, 6.745899999999888e-05, 6.745899999999888e-05, 6.745799999999941e-05, 6.745799999999941e-05, 6.747199999999898e-05, 6.745799999999941e-05, 6.744500000000278e-05, 6.745900000000235e-05, 6.744499999999931e-05, 6.745799999999941e-05, 6.743000000000027e-05, 6.749999999999812e-05, 6.744399999999984e-05, 6.748600000000202e-05, 6.741700000000017e-05, 6.743100000000321e-05, 6.744500000000278e-05, 6.745799999999941e-05, 6.745799999999941e-05, 6.745799999999941e-05, 6.747199999999898e-05, 6.744399999999984e-05, 6.745900000000235e-05, 6.748600000000202e-05, 6.747200000000245e-05, 6.748599999999855e-05, 6.747199999999898e-05, 6.744399999999984e-05, 6.744399999999984e-05, 6.744499999999931e-05, 6.745899999999888e-05, 6.747300000000192e-05, 6.744500000000278e-05, 6.749999999999812e-05, 6.741700000000017e-05, 6.743000000000027e-05, 6.744399999999984e-05, 6.751400000000116e-05, 6.745899999999888e-05, 6.745899999999888e-05, 6.745800000000288e-05, 6.747200000000245e-05, 6.744399999999984e-05]</msg>
<status status="PASS" starttime="20201030 18:30:51.961" endtime="20201030 18:30:51.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.956" endtime="20201030 18:30:51.964"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:51.967" endtime="20201030 18:30:51.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.966" endtime="20201030 18:30:51.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.965" endtime="20201030 18:30:51.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.610" endtime="20201030 18:30:51.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.609" endtime="20201030 18:30:51.988"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.996" endtime="20201030 18:30:52.014"></status>
</kw>
<msg timestamp="20201030 18:30:52.014" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:51.995" endtime="20201030 18:30:52.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.017" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:52.015" endtime="20201030 18:30:52.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.018" endtime="20201030 18:30:52.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.992" endtime="20201030 18:30:52.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.990" endtime="20201030 18:30:52.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.027" endtime="20201030 18:30:52.312"></status>
</kw>
<msg timestamp="20201030 18:30:52.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0197175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019788028, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:30:52.025" endtime="20201030 18:30:52.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0197175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019788028, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:30:52.316" endtime="20201030 18:30:52.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.324" endtime="20201030 18:30:52.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.023" endtime="20201030 18:30:52.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.021" endtime="20201030 18:30:52.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:52.331" level="INFO">${PHILIP_RES} = [{'diff': 7.052800000000026e-05}, {'diff': 6.975000000000037e-05}, {'diff': 6.976300000000046e-05}, {'diff': 6.977700000000003e-05}, {'diff': 6.983400000000126e-05}, {'diff': 6.976399999999994e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:52.327" endtime="20201030 18:30:52.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:52.335" level="INFO">${RESULT} = {'diff': [7.052800000000026e-05, 6.975000000000037e-05, 6.976300000000046e-05, 6.977700000000003e-05, 6.983400000000126e-05, 6.976399999999994e-05, 6.975000000000037e-05, 6.976399999999994e-05, 6.9736...</msg>
<status status="PASS" starttime="20201030 18:30:52.332" endtime="20201030 18:30:52.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.339" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:52.338" endtime="20201030 18:30:52.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.341" level="INFO">VALUE: [7.052800000000026e-05, 6.975000000000037e-05, 6.976300000000046e-05, 6.977700000000003e-05, 6.983400000000126e-05, 6.976399999999994e-05, 6.975000000000037e-05, 6.976399999999994e-05, 6.97360000000008e-05, 6.981899999999874e-05, 6.976399999999994e-05, 6.976399999999994e-05, 6.97909999999996e-05, 6.976399999999994e-05, 6.977799999999951e-05, 6.97499999999969e-05, 6.97499999999969e-05, 6.970799999999819e-05, 6.97499999999969e-05, 6.970799999999819e-05, 6.97499999999969e-05, 6.97230000000007e-05, 6.977700000000003e-05, 6.975000000000037e-05, 6.975000000000037e-05, 6.975000000000037e-05, 6.980600000000212e-05, 6.977799999999951e-05, 6.976399999999994e-05, 6.976399999999994e-05, 6.975000000000037e-05, 6.976399999999994e-05, 6.976399999999994e-05, 6.976399999999994e-05, 6.975000000000037e-05, 6.977799999999951e-05, 6.980599999999865e-05, 6.97360000000008e-05, 6.976399999999994e-05, 6.97360000000008e-05, 6.976399999999994e-05, 6.975000000000037e-05, 6.975000000000037e-05, 6.975000000000037e-05, 6.97499999999969e-05, 6.973599999999733e-05, 6.975000000000037e-05, 6.979200000000255e-05, 6.970799999999819e-05, 6.975000000000037e-05]</msg>
<status status="PASS" starttime="20201030 18:30:52.340" endtime="20201030 18:30:52.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.336" endtime="20201030 18:30:52.344"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:52.348" endtime="20201030 18:30:52.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.346" endtime="20201030 18:30:52.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.345" endtime="20201030 18:30:52.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.989" endtime="20201030 18:30:52.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.988" endtime="20201030 18:30:52.368"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.376" endtime="20201030 18:30:52.392"></status>
</kw>
<msg timestamp="20201030 18:30:52.392" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:52.375" endtime="20201030 18:30:52.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.395" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:52.394" endtime="20201030 18:30:52.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.396" endtime="20201030 18:30:52.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.372" endtime="20201030 18:30:52.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.370" endtime="20201030 18:30:52.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.405" endtime="20201030 18:30:52.691"></status>
</kw>
<msg timestamp="20201030 18:30:52.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018710528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018783417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:52.404" endtime="20201030 18:30:52.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018710528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018783417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:52.695" endtime="20201030 18:30:52.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.703" endtime="20201030 18:30:52.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.401" endtime="20201030 18:30:52.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.399" endtime="20201030 18:30:52.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:52.709" level="INFO">${PHILIP_RES} = [{'diff': 7.288899999999959e-05}, {'diff': 7.21109999999997e-05}, {'diff': 7.208400000000004e-05}, {'diff': 7.212499999999927e-05}, {'diff': 7.208300000000056e-05}, {'diff': 7.208400000000004e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:52.706" endtime="20201030 18:30:52.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:52.714" level="INFO">${RESULT} = {'diff': [7.288899999999959e-05, 7.21109999999997e-05, 7.208400000000004e-05, 7.212499999999927e-05, 7.208300000000056e-05, 7.208400000000004e-05, 7.213900000000231e-05, 7.209700000000013e-05, 7.21249...</msg>
<status status="PASS" starttime="20201030 18:30:52.710" endtime="20201030 18:30:52.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.719" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:52.718" endtime="20201030 18:30:52.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.721" level="INFO">VALUE: [7.288899999999959e-05, 7.21109999999997e-05, 7.208400000000004e-05, 7.212499999999927e-05, 7.208300000000056e-05, 7.208400000000004e-05, 7.213900000000231e-05, 7.209700000000013e-05, 7.212499999999927e-05, 7.208300000000056e-05, 7.21109999999997e-05, 7.212499999999927e-05, 7.208300000000056e-05, 7.211199999999918e-05, 7.209700000000013e-05, 7.208300000000056e-05, 7.205599999999743e-05, 7.21109999999997e-05, 7.207000000000047e-05, 7.209700000000013e-05, 7.21109999999997e-05, 7.209700000000013e-05, 7.209700000000013e-05, 7.209799999999961e-05, 7.209700000000013e-05, 7.209700000000013e-05, 7.209799999999961e-05, 7.205599999999743e-05, 7.209700000000013e-05, 7.209700000000013e-05, 7.209700000000013e-05, 7.208400000000004e-05, 7.209700000000013e-05, 7.208300000000056e-05, 7.209700000000013e-05, 7.213900000000231e-05, 7.208400000000004e-05, 7.215200000000241e-05, 7.209700000000013e-05, 7.211200000000265e-05, 7.209700000000013e-05, 7.209700000000013e-05, 7.21109999999997e-05, 7.208300000000056e-05, 7.21109999999997e-05, 7.2069000000001e-05, 7.21109999999997e-05, 7.208400000000004e-05, 7.21109999999997e-05, 7.20829999999971e-05]</msg>
<status status="PASS" starttime="20201030 18:30:52.720" endtime="20201030 18:30:52.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.715" endtime="20201030 18:30:52.723"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:52.726" endtime="20201030 18:30:52.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.725" endtime="20201030 18:30:52.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.723" endtime="20201030 18:30:52.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.369" endtime="20201030 18:30:52.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.368" endtime="20201030 18:30:52.747"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.755" endtime="20201030 18:30:52.771"></status>
</kw>
<msg timestamp="20201030 18:30:52.771" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:52.754" endtime="20201030 18:30:52.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.774" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:52.772" endtime="20201030 18:30:52.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.775" endtime="20201030 18:30:52.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.751" endtime="20201030 18:30:52.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.749" endtime="20201030 18:30:52.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.784" endtime="20201030 18:30:53.071"></status>
</kw>
<msg timestamp="20201030 18:30:53.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018636681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018711917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:52.782" endtime="20201030 18:30:53.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018636681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018711917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:53.076" endtime="20201030 18:30:53.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.084" endtime="20201030 18:30:53.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.780" endtime="20201030 18:30:53.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.778" endtime="20201030 18:30:53.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:53.090" level="INFO">${PHILIP_RES} = [{'diff': 7.523600000000283e-05}, {'diff': 7.447199999999904e-05}, {'diff': 7.448600000000208e-05}, {'diff': 7.447199999999904e-05}, {'diff': 7.445799999999947e-05}, {'diff': 7.444499999999937e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:53.087" endtime="20201030 18:30:53.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:53.094" level="INFO">${RESULT} = {'diff': [7.523600000000283e-05, 7.447199999999904e-05, 7.448600000000208e-05, 7.447199999999904e-05, 7.445799999999947e-05, 7.444499999999937e-05, 7.447200000000251e-05, 7.441700000000023e-05, 7.4429...</msg>
<status status="PASS" starttime="20201030 18:30:53.091" endtime="20201030 18:30:53.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.099" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:53.098" endtime="20201030 18:30:53.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.101" level="INFO">VALUE: [7.523600000000283e-05, 7.447199999999904e-05, 7.448600000000208e-05, 7.447199999999904e-05, 7.445799999999947e-05, 7.444499999999937e-05, 7.447200000000251e-05, 7.441700000000023e-05, 7.442999999999686e-05, 7.444499999999937e-05, 7.445799999999947e-05, 7.445799999999947e-05, 7.444400000000337e-05, 7.445799999999947e-05, 7.448600000000208e-05, 7.451400000000122e-05, 7.445900000000241e-05, 7.44439999999999e-05, 7.44309999999998e-05, 7.447199999999904e-05, 7.445799999999947e-05, 7.437499999999805e-05, 7.44439999999999e-05, 7.445899999999894e-05, 7.447200000000251e-05, 7.445899999999894e-05, 7.450000000000165e-05, 7.44439999999999e-05, 7.445899999999894e-05, 7.445799999999947e-05, 7.445899999999894e-05, 7.445799999999947e-05, 7.441700000000023e-05, 7.445799999999947e-05, 7.441700000000023e-05, 7.445899999999894e-05, 7.44439999999999e-05, 7.445899999999894e-05, 7.449999999999818e-05, 7.444499999999937e-05, 7.448599999999861e-05, 7.445799999999947e-05, 7.447199999999904e-05, 7.437499999999805e-05, 7.444499999999937e-05, 7.445800000000294e-05, 7.449999999999818e-05, 7.447200000000251e-05, 7.445799999999947e-05, 7.445800000000294e-05]</msg>
<status status="PASS" starttime="20201030 18:30:53.100" endtime="20201030 18:30:53.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.095" endtime="20201030 18:30:53.103"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:53.106" endtime="20201030 18:30:53.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.105" endtime="20201030 18:30:53.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.104" endtime="20201030 18:30:53.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.748" endtime="20201030 18:30:53.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.747" endtime="20201030 18:30:53.127"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.135" endtime="20201030 18:30:53.152"></status>
</kw>
<msg timestamp="20201030 18:30:53.153" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:53.134" endtime="20201030 18:30:53.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.155" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:53.154" endtime="20201030 18:30:53.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.156" endtime="20201030 18:30:53.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.131" endtime="20201030 18:30:53.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.129" endtime="20201030 18:30:53.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.165" endtime="20201030 18:30:53.451"></status>
</kw>
<msg timestamp="20201030 18:30:53.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019473458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019551069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:53.164" endtime="20201030 18:30:53.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019473458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019551069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:53.456" endtime="20201030 18:30:53.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.464" endtime="20201030 18:30:53.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.161" endtime="20201030 18:30:53.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.160" endtime="20201030 18:30:53.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:53.470" level="INFO">${PHILIP_RES} = [{'diff': 7.761100000000173e-05}, {'diff': 7.681900000000227e-05}, {'diff': 7.682000000000175e-05}, {'diff': 7.683300000000184e-05}, {'diff': 7.683300000000184e-05}, {'diff': 7.684800000000089e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:53.467" endtime="20201030 18:30:53.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:53.474" level="INFO">${RESULT} = {'diff': [7.761100000000173e-05, 7.681900000000227e-05, 7.682000000000175e-05, 7.683300000000184e-05, 7.683300000000184e-05, 7.684800000000089e-05, 7.684699999999794e-05, 7.686099999999751e-05, 7.6860...</msg>
<status status="PASS" starttime="20201030 18:30:53.471" endtime="20201030 18:30:53.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.478" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:53.477" endtime="20201030 18:30:53.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.481" level="INFO">VALUE: [7.761100000000173e-05, 7.681900000000227e-05, 7.682000000000175e-05, 7.683300000000184e-05, 7.683300000000184e-05, 7.684800000000089e-05, 7.684699999999794e-05, 7.686099999999751e-05, 7.686099999999751e-05, 7.683299999999837e-05, 7.684799999999742e-05, 7.683299999999837e-05, 7.683400000000132e-05, 7.683300000000184e-05, 7.682000000000175e-05, 7.686100000000098e-05, 7.687500000000055e-05, 7.680599999999871e-05, 7.684700000000141e-05, 7.683299999999837e-05, 7.684800000000089e-05, 7.686100000000098e-05, 7.686099999999751e-05, 7.684699999999794e-05, 7.683299999999837e-05, 7.69029999999997e-05, 7.683300000000184e-05, 7.684700000000141e-05, 7.686100000000098e-05, 7.684700000000141e-05, 7.684700000000141e-05, 7.684699999999794e-05, 7.681999999999828e-05, 7.69029999999997e-05, 7.6764e-05, 7.684799999999742e-05, 7.687500000000055e-05, 7.686100000000098e-05, 7.684700000000141e-05, 7.683300000000184e-05, 7.684800000000089e-05, 7.686100000000098e-05, 7.682000000000175e-05, 7.687500000000055e-05, 7.683300000000184e-05, 7.686100000000098e-05, 7.686099999999751e-05, 7.684799999999742e-05, 7.684699999999794e-05, 7.684699999999794e-05]</msg>
<status status="PASS" starttime="20201030 18:30:53.480" endtime="20201030 18:30:53.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.475" endtime="20201030 18:30:53.483"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:53.487" endtime="20201030 18:30:53.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.485" endtime="20201030 18:30:53.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.484" endtime="20201030 18:30:53.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.128" endtime="20201030 18:30:53.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.127" endtime="20201030 18:30:53.508"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.516" endtime="20201030 18:30:53.533"></status>
</kw>
<msg timestamp="20201030 18:30:53.533" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:53.514" endtime="20201030 18:30:53.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.536" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:53.534" endtime="20201030 18:30:53.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.537" endtime="20201030 18:30:53.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.512" endtime="20201030 18:30:53.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.510" endtime="20201030 18:30:53.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.547" endtime="20201030 18:30:53.833"></status>
</kw>
<msg timestamp="20201030 18:30:53.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0187555, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018835542, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:30:53.545" endtime="20201030 18:30:53.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0187555, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018835542, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:30:53.837" endtime="20201030 18:30:53.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.845" endtime="20201030 18:30:53.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.543" endtime="20201030 18:30:53.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.541" endtime="20201030 18:30:53.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:53.852" level="INFO">${PHILIP_RES} = [{'diff': 8.004199999999892e-05}, {'diff': 7.927800000000207e-05}, {'diff': 7.923599999999989e-05}, {'diff': 7.92779999999986e-05}, {'diff': 7.930499999999827e-05}, {'diff': 7.932000000000078e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:53.848" endtime="20201030 18:30:53.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:53.857" level="INFO">${RESULT} = {'diff': [8.004199999999892e-05, 7.927800000000207e-05, 7.923599999999989e-05, 7.92779999999986e-05, 7.930499999999827e-05, 7.932000000000078e-05, 7.925000000000293e-05, 7.924999999999946e-05, 7.92769...</msg>
<status status="PASS" starttime="20201030 18:30:53.853" endtime="20201030 18:30:53.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.861" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:53.860" endtime="20201030 18:30:53.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.864" level="INFO">VALUE: [8.004199999999892e-05, 7.927800000000207e-05, 7.923599999999989e-05, 7.92779999999986e-05, 7.930499999999827e-05, 7.932000000000078e-05, 7.925000000000293e-05, 7.924999999999946e-05, 7.927699999999913e-05, 7.924999999999946e-05, 7.923700000000283e-05, 7.926399999999903e-05, 7.926299999999956e-05, 7.924999999999946e-05, 7.926299999999956e-05, 7.927800000000207e-05, 7.920800000000075e-05, 7.926399999999903e-05, 7.924999999999946e-05, 7.927800000000207e-05, 7.927800000000207e-05, 7.929200000000164e-05, 7.92779999999986e-05, 7.923599999999989e-05, 7.924999999999946e-05, 7.92779999999986e-05, 7.923599999999989e-05, 7.926399999999903e-05, 7.92640000000025e-05, 7.930500000000174e-05, 7.924999999999946e-05, 7.926399999999903e-05, 7.929199999999817e-05, 7.927800000000207e-05, 7.92779999999986e-05, 7.926399999999903e-05, 7.926399999999903e-05, 7.924999999999946e-05, 7.930600000000121e-05, 7.924999999999946e-05, 7.919400000000118e-05, 7.924999999999946e-05, 7.929200000000164e-05, 7.926399999999903e-05, 7.926399999999903e-05, 7.926399999999903e-05, 7.92640000000025e-05, 7.924999999999946e-05, 7.923599999999989e-05, 7.924999999999946e-05]</msg>
<status status="PASS" starttime="20201030 18:30:53.862" endtime="20201030 18:30:53.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.858" endtime="20201030 18:30:53.865"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:53.869" endtime="20201030 18:30:53.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.867" endtime="20201030 18:30:53.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.866" endtime="20201030 18:30:53.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.508" endtime="20201030 18:30:53.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.508" endtime="20201030 18:30:53.890"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.900" endtime="20201030 18:30:53.917"></status>
</kw>
<msg timestamp="20201030 18:30:53.917" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:53.898" endtime="20201030 18:30:53.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.920" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:53.918" endtime="20201030 18:30:53.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.921" endtime="20201030 18:30:53.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.895" endtime="20201030 18:30:53.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.893" endtime="20201030 18:30:53.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.930" endtime="20201030 18:30:54.219"></status>
</kw>
<msg timestamp="20201030 18:30:54.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020972889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021055417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:53.928" endtime="20201030 18:30:54.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020972889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021055417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:54.223" endtime="20201030 18:30:54.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.231" endtime="20201030 18:30:54.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.926" endtime="20201030 18:30:54.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.924" endtime="20201030 18:30:54.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:54.238" level="INFO">${PHILIP_RES} = [{'diff': 8.252799999999838e-05}, {'diff': 8.170799999999978e-05}, {'diff': 8.16529999999975e-05}, {'diff': 8.170799999999978e-05}, {'diff': 8.169400000000021e-05}, {'diff': 8.173600000000239e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:54.235" endtime="20201030 18:30:54.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:54.242" level="INFO">${RESULT} = {'diff': [8.252799999999838e-05, 8.170799999999978e-05, 8.16529999999975e-05, 8.170799999999978e-05, 8.169400000000021e-05, 8.173600000000239e-05, 8.172199999999935e-05, 8.176399999999806e-05, 8.16949...</msg>
<status status="PASS" starttime="20201030 18:30:54.239" endtime="20201030 18:30:54.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.246" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:54.245" endtime="20201030 18:30:54.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.249" level="INFO">VALUE: [8.252799999999838e-05, 8.170799999999978e-05, 8.16529999999975e-05, 8.170799999999978e-05, 8.169400000000021e-05, 8.173600000000239e-05, 8.172199999999935e-05, 8.176399999999806e-05, 8.169499999999968e-05, 8.17230000000023e-05, 8.169499999999968e-05, 8.170899999999925e-05, 8.170799999999978e-05, 8.168100000000011e-05, 8.169400000000021e-05, 8.172199999999935e-05, 8.172199999999935e-05, 8.169400000000021e-05, 8.170799999999978e-05, 8.165199999999803e-05, 8.169400000000021e-05, 8.170899999999925e-05, 8.17230000000023e-05, 8.170899999999925e-05, 8.170899999999925e-05, 8.176299999999859e-05, 8.169499999999968e-05, 8.172200000000282e-05, 8.170799999999978e-05, 8.169400000000021e-05, 8.170799999999978e-05, 8.170799999999978e-05, 8.169400000000021e-05, 8.170799999999978e-05, 8.172199999999935e-05, 8.170900000000272e-05, 8.169499999999968e-05, 8.172299999999882e-05, 8.169499999999968e-05, 8.165300000000097e-05, 8.170799999999978e-05, 8.170799999999978e-05, 8.168000000000064e-05, 8.169400000000021e-05, 8.170799999999978e-05, 8.170799999999978e-05, 8.170799999999978e-05, 8.173599999999892e-05, 8.169499999999968e-05, 8.17230000000023e-05]</msg>
<status status="PASS" starttime="20201030 18:30:54.247" endtime="20201030 18:30:54.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.243" endtime="20201030 18:30:54.250"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:54.254" endtime="20201030 18:30:54.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.252" endtime="20201030 18:30:54.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.251" endtime="20201030 18:30:54.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.891" endtime="20201030 18:30:54.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.890" endtime="20201030 18:30:54.274"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.283" endtime="20201030 18:30:54.301"></status>
</kw>
<msg timestamp="20201030 18:30:54.301" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:54.281" endtime="20201030 18:30:54.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.304" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:54.302" endtime="20201030 18:30:54.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.305" endtime="20201030 18:30:54.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.279" endtime="20201030 18:30:54.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.277" endtime="20201030 18:30:54.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.315" endtime="20201030 18:30:54.601"></status>
</kw>
<msg timestamp="20201030 18:30:54.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019461056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019546028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:54.314" endtime="20201030 18:30:54.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019461056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019546028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:54.605" endtime="20201030 18:30:54.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.613" endtime="20201030 18:30:54.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.311" endtime="20201030 18:30:54.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.309" endtime="20201030 18:30:54.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:54.619" level="INFO">${PHILIP_RES} = [{'diff': 8.497199999999913e-05}, {'diff': 8.419400000000271e-05}, {'diff': 8.419499999999872e-05}, {'diff': 8.423599999999795e-05}, {'diff': 8.41660000000001e-05}, {'diff': 8.419499999999872e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:54.616" endtime="20201030 18:30:54.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:54.624" level="INFO">${RESULT} = {'diff': [8.497199999999913e-05, 8.419400000000271e-05, 8.419499999999872e-05, 8.423599999999795e-05, 8.41660000000001e-05, 8.419499999999872e-05, 8.423599999999795e-05, 8.417999999999967e-05, 8.41110...</msg>
<status status="PASS" starttime="20201030 18:30:54.620" endtime="20201030 18:30:54.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.628" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:54.627" endtime="20201030 18:30:54.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.630" level="INFO">VALUE: [8.497199999999913e-05, 8.419400000000271e-05, 8.419499999999872e-05, 8.423599999999795e-05, 8.41660000000001e-05, 8.419499999999872e-05, 8.423599999999795e-05, 8.417999999999967e-05, 8.41110000000013e-05, 8.417999999999967e-05, 8.425000000000099e-05, 8.418099999999915e-05, 8.415200000000053e-05, 8.426400000000056e-05, 8.417999999999967e-05, 8.415199999999706e-05, 8.423600000000142e-05, 8.417999999999967e-05, 8.425000000000099e-05, 8.418100000000261e-05, 8.418000000000314e-05, 8.413900000000044e-05, 8.416699999999958e-05, 8.419399999999924e-05, 8.418099999999915e-05, 8.41660000000001e-05, 8.413900000000044e-05, 8.416699999999958e-05, 8.417999999999967e-05, 8.425000000000099e-05, 8.416699999999958e-05, 8.41660000000001e-05, 8.419499999999872e-05, 8.422200000000185e-05, 8.416699999999958e-05, 8.419499999999872e-05, 8.417999999999967e-05, 8.418000000000314e-05, 8.418100000000261e-05, 8.416599999999663e-05, 8.418100000000261e-05, 8.413900000000044e-05, 8.417999999999967e-05, 8.418099999999915e-05, 8.413900000000044e-05, 8.418099999999915e-05, 8.418099999999915e-05, 8.417999999999967e-05, 8.425000000000099e-05, 8.422300000000132e-05]</msg>
<status status="PASS" starttime="20201030 18:30:54.629" endtime="20201030 18:30:54.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.624" endtime="20201030 18:30:54.632"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:54.636" endtime="20201030 18:30:54.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.635" endtime="20201030 18:30:54.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.633" endtime="20201030 18:30:54.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.275" endtime="20201030 18:30:54.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.275" endtime="20201030 18:30:54.657"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.665" endtime="20201030 18:30:54.682"></status>
</kw>
<msg timestamp="20201030 18:30:54.683" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:54.664" endtime="20201030 18:30:54.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.685" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:54.684" endtime="20201030 18:30:54.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.686" endtime="20201030 18:30:54.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.661" endtime="20201030 18:30:54.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.659" endtime="20201030 18:30:54.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.695" endtime="20201030 18:30:54.981"></status>
</kw>
<msg timestamp="20201030 18:30:54.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018670639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018758083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:54.694" endtime="20201030 18:30:54.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018670639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018758083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:54.985" endtime="20201030 18:30:54.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.993" endtime="20201030 18:30:54.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.691" endtime="20201030 18:30:54.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.689" endtime="20201030 18:30:54.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:54.999" level="INFO">${PHILIP_RES} = [{'diff': 8.744399999999902e-05}, {'diff': 8.668100000000165e-05}, {'diff': 8.66799999999987e-05}, {'diff': 8.668100000000165e-05}, {'diff': 8.668099999999818e-05}, {'diff': 8.669500000000122e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:54.996" endtime="20201030 18:30:55.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:55.005" level="INFO">${RESULT} = {'diff': [8.744399999999902e-05, 8.668100000000165e-05, 8.66799999999987e-05, 8.668100000000165e-05, 8.668099999999818e-05, 8.669500000000122e-05, 8.66799999999987e-05, 8.66669999999986e-05, 8.6666999...</msg>
<status status="PASS" starttime="20201030 18:30:55.000" endtime="20201030 18:30:55.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.009" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:55.008" endtime="20201030 18:30:55.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.011" level="INFO">VALUE: [8.744399999999902e-05, 8.668100000000165e-05, 8.66799999999987e-05, 8.668100000000165e-05, 8.668099999999818e-05, 8.669500000000122e-05, 8.66799999999987e-05, 8.66669999999986e-05, 8.66669999999986e-05, 8.669400000000174e-05, 8.66799999999987e-05, 8.669400000000174e-05, 8.66669999999986e-05, 8.672200000000088e-05, 8.668100000000165e-05, 8.666599999999913e-05, 8.668100000000165e-05, 8.666599999999913e-05, 8.668100000000165e-05, 8.666599999999913e-05, 8.666700000000208e-05, 8.66799999999987e-05, 8.668100000000165e-05, 8.66799999999987e-05, 8.666700000000208e-05, 8.66799999999987e-05, 8.663899999999947e-05, 8.66799999999987e-05, 8.669500000000122e-05, 8.672200000000088e-05, 8.669499999999775e-05, 8.665199999999956e-05, 8.661100000000033e-05, 8.669400000000174e-05, 8.66669999999986e-05, 8.669400000000174e-05, 8.668099999999818e-05, 8.663799999999999e-05, 8.668100000000165e-05, 8.66669999999986e-05, 8.668100000000165e-05, 8.66669999999986e-05, 8.668100000000165e-05, 8.66799999999987e-05, 8.668100000000165e-05, 8.668099999999818e-05, 8.668100000000165e-05, 8.66669999999986e-05, 8.666700000000208e-05, 8.663899999999947e-05]</msg>
<status status="PASS" starttime="20201030 18:30:55.010" endtime="20201030 18:30:55.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.006" endtime="20201030 18:30:55.017"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:55.021" endtime="20201030 18:30:55.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.019" endtime="20201030 18:30:55.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.018" endtime="20201030 18:30:55.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.658" endtime="20201030 18:30:55.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.657" endtime="20201030 18:30:55.042"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.050" endtime="20201030 18:30:55.068"></status>
</kw>
<msg timestamp="20201030 18:30:55.069" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:55.049" endtime="20201030 18:30:55.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.071" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:55.070" endtime="20201030 18:30:55.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.072" endtime="20201030 18:30:55.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.046" endtime="20201030 18:30:55.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.044" endtime="20201030 18:30:55.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.081" endtime="20201030 18:30:55.367"></status>
</kw>
<msg timestamp="20201030 18:30:55.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018902417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018992417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:55.080" endtime="20201030 18:30:55.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018902417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018992417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:55.371" endtime="20201030 18:30:55.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.379" endtime="20201030 18:30:55.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.077" endtime="20201030 18:30:55.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.075" endtime="20201030 18:30:55.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:55.386" level="INFO">${PHILIP_RES} = [{'diff': 8.99999999999998e-05}, {'diff': 8.922199999999991e-05}, {'diff': 8.923700000000243e-05}, {'diff': 8.922199999999991e-05}, {'diff': 8.919500000000025e-05}, {'diff': 8.919400000000077e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:55.382" endtime="20201030 18:30:55.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:55.390" level="INFO">${RESULT} = {'diff': [8.99999999999998e-05, 8.922199999999991e-05, 8.923700000000243e-05, 8.922199999999991e-05, 8.919500000000025e-05, 8.919400000000077e-05, 8.923699999999896e-05, 8.920800000000034e-05, 8.91810...</msg>
<status status="PASS" starttime="20201030 18:30:55.387" endtime="20201030 18:30:55.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.394" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:55.393" endtime="20201030 18:30:55.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.396" level="INFO">VALUE: [8.99999999999998e-05, 8.922199999999991e-05, 8.923700000000243e-05, 8.922199999999991e-05, 8.919500000000025e-05, 8.919400000000077e-05, 8.923699999999896e-05, 8.920800000000034e-05, 8.918100000000068e-05, 8.920800000000034e-05, 8.91670000000011e-05, 8.920800000000034e-05, 8.922299999999939e-05, 8.919400000000077e-05, 8.920899999999982e-05, 8.922199999999991e-05, 8.920800000000034e-05, 8.920800000000034e-05, 8.919400000000077e-05, 8.922199999999991e-05, 8.922199999999991e-05, 8.919400000000077e-05, 8.919400000000077e-05, 8.919500000000025e-05, 8.920800000000034e-05, 8.919500000000025e-05, 8.920800000000034e-05, 8.920899999999982e-05, 8.923600000000295e-05, 8.916699999999764e-05, 8.920800000000034e-05, 8.923600000000295e-05, 8.918099999999721e-05, 8.920899999999982e-05, 8.91939999999973e-05, 8.919500000000025e-05, 8.920799999999687e-05, 8.920900000000329e-05, 8.920800000000034e-05, 8.918100000000068e-05, 8.920800000000034e-05, 8.915300000000154e-05, 8.919400000000077e-05, 8.922299999999939e-05, 8.926399999999862e-05, 8.918100000000068e-05, 8.919400000000077e-05, 8.924999999999905e-05, 8.920800000000034e-05, 8.922299999999939e-05]</msg>
<status status="PASS" starttime="20201030 18:30:55.395" endtime="20201030 18:30:55.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.391" endtime="20201030 18:30:55.398"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:55.402" endtime="20201030 18:30:55.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.400" endtime="20201030 18:30:55.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.399" endtime="20201030 18:30:55.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.042" endtime="20201030 18:30:55.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.042" endtime="20201030 18:30:55.422"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.431" endtime="20201030 18:30:55.449"></status>
</kw>
<msg timestamp="20201030 18:30:55.450" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:55.429" endtime="20201030 18:30:55.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.452" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:55.451" endtime="20201030 18:30:55.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.453" endtime="20201030 18:30:55.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.427" endtime="20201030 18:30:55.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.425" endtime="20201030 18:30:55.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.462" endtime="20201030 18:30:55.748"></status>
</kw>
<msg timestamp="20201030 18:30:55.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019462153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019554694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:55.461" endtime="20201030 18:30:55.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019462153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019554694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:55.752" endtime="20201030 18:30:55.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.760" endtime="20201030 18:30:55.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.458" endtime="20201030 18:30:55.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.456" endtime="20201030 18:30:55.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:55.767" level="INFO">${PHILIP_RES} = [{'diff': 9.254100000000154e-05}, {'diff': 9.177700000000122e-05}, {'diff': 9.177800000000069e-05}, {'diff': 9.177800000000069e-05}, {'diff': 9.176399999999765e-05}, {'diff': 9.176299999999818e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:55.764" endtime="20201030 18:30:55.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:55.771" level="INFO">${RESULT} = {'diff': [9.254100000000154e-05, 9.177700000000122e-05, 9.177800000000069e-05, 9.177800000000069e-05, 9.176399999999765e-05, 9.176299999999818e-05, 9.173599999999851e-05, 9.177800000000069e-05, 9.1750...</msg>
<status status="PASS" starttime="20201030 18:30:55.768" endtime="20201030 18:30:55.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.775" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:55.774" endtime="20201030 18:30:55.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.778" level="INFO">VALUE: [9.254100000000154e-05, 9.177700000000122e-05, 9.177800000000069e-05, 9.177800000000069e-05, 9.176399999999765e-05, 9.176299999999818e-05, 9.173599999999851e-05, 9.177800000000069e-05, 9.175000000000155e-05, 9.177800000000069e-05, 9.173700000000146e-05, 9.176399999999765e-05, 9.177799999999722e-05, 9.176400000000112e-05, 9.176399999999765e-05, 9.177700000000122e-05, 9.176400000000112e-05, 9.170799999999937e-05, 9.174999999999808e-05, 9.176399999999765e-05, 9.176399999999765e-05, 9.177799999999722e-05, 9.177800000000069e-05, 9.176400000000112e-05, 9.176300000000165e-05, 9.176400000000112e-05, 9.175000000000155e-05, 9.174999999999808e-05, 9.174999999999808e-05, 9.176400000000112e-05, 9.175000000000155e-05, 9.172199999999894e-05, 9.176400000000112e-05, 9.176400000000112e-05, 9.175000000000155e-05, 9.176399999999765e-05, 9.176399999999765e-05, 9.174999999999808e-05, 9.175000000000155e-05, 9.177800000000069e-05, 9.176400000000112e-05, 9.173600000000198e-05, 9.176400000000112e-05, 9.170799999999937e-05, 9.179099999999732e-05, 9.170799999999937e-05, 9.174999999999808e-05, 9.173600000000198e-05, 9.173700000000146e-05, 9.175000000000155e-05]</msg>
<status status="PASS" starttime="20201030 18:30:55.776" endtime="20201030 18:30:55.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.772" endtime="20201030 18:30:55.780"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:55.784" endtime="20201030 18:30:55.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.782" endtime="20201030 18:30:55.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.781" endtime="20201030 18:30:55.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.423" endtime="20201030 18:30:55.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.423" endtime="20201030 18:30:55.804"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.813" endtime="20201030 18:30:55.831"></status>
</kw>
<msg timestamp="20201030 18:30:55.831" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:55.811" endtime="20201030 18:30:55.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.834" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:55.832" endtime="20201030 18:30:55.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.835" endtime="20201030 18:30:55.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.809" endtime="20201030 18:30:55.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.807" endtime="20201030 18:30:55.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.844" endtime="20201030 18:30:56.130"></status>
</kw>
<msg timestamp="20201030 18:30:56.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018566458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018661583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:55.842" endtime="20201030 18:30:56.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018566458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018661583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:56.134" endtime="20201030 18:30:56.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.143" endtime="20201030 18:30:56.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.840" endtime="20201030 18:30:56.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.838" endtime="20201030 18:30:56.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:56.151" level="INFO">${PHILIP_RES} = [{'diff': 9.512499999999799e-05}, {'diff': 9.436099999999767e-05}, {'diff': 9.4333999999998e-05}, {'diff': 9.433299999999853e-05}, {'diff': 9.436099999999767e-05}, {'diff': 9.437499999999724e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:30:56.148" endtime="20201030 18:30:56.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:56.156" level="INFO">${RESULT} = {'diff': [9.512499999999799e-05, 9.436099999999767e-05, 9.4333999999998e-05, 9.433299999999853e-05, 9.436099999999767e-05, 9.437499999999724e-05, 9.437499999999724e-05, 9.434799999999757e-05, 9.430499...</msg>
<status status="PASS" starttime="20201030 18:30:56.152" endtime="20201030 18:30:56.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.163" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:56.162" endtime="20201030 18:30:56.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.166" level="INFO">VALUE: [9.512499999999799e-05, 9.436099999999767e-05, 9.4333999999998e-05, 9.433299999999853e-05, 9.436099999999767e-05, 9.437499999999724e-05, 9.437499999999724e-05, 9.434799999999757e-05, 9.430499999999939e-05, 9.438900000000028e-05, 9.434799999999757e-05, 9.433299999999853e-05, 9.43469999999981e-05, 9.43469999999981e-05, 9.430599999999886e-05, 9.434799999999757e-05, 9.43469999999981e-05, 9.4333999999998e-05, 9.4333999999998e-05, 9.437500000000071e-05, 9.430599999999886e-05, 9.440299999999985e-05, 9.43469999999981e-05, 9.43469999999981e-05, 9.43469999999981e-05, 9.438900000000028e-05, 9.43469999999981e-05, 9.431899999999896e-05, 9.43200000000019e-05, 9.433299999999853e-05, 9.434700000000157e-05, 9.4333999999998e-05, 9.431899999999896e-05, 9.429200000000276e-05, 9.43469999999981e-05, 9.429200000000276e-05, 9.434800000000104e-05, 9.433299999999853e-05, 9.43880000000008e-05, 9.433299999999853e-05, 9.434700000000157e-05, 9.433400000000147e-05, 9.441699999999942e-05, 9.436100000000114e-05, 9.438900000000028e-05, 9.434700000000157e-05, 9.433400000000147e-05, 9.434700000000157e-05, 9.4333000000002e-05, 9.433400000000147e-05]</msg>
<status status="PASS" starttime="20201030 18:30:56.164" endtime="20201030 18:30:56.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.158" endtime="20201030 18:30:56.168"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:56.173" endtime="20201030 18:30:56.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.171" endtime="20201030 18:30:56.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.170" endtime="20201030 18:30:56.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.805" endtime="20201030 18:30:56.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.805" endtime="20201030 18:30:56.195"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.203" endtime="20201030 18:30:56.222"></status>
</kw>
<msg timestamp="20201030 18:30:56.223" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:56.202" endtime="20201030 18:30:56.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.225" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:56.224" endtime="20201030 18:30:56.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.227" endtime="20201030 18:30:56.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.199" endtime="20201030 18:30:56.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.197" endtime="20201030 18:30:56.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.236" endtime="20201030 18:30:56.522"></status>
</kw>
<msg timestamp="20201030 18:30:56.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019028542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019126278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:56.235" endtime="20201030 18:30:56.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019028542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019126278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:56.526" endtime="20201030 18:30:56.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.534" endtime="20201030 18:30:56.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.232" endtime="20201030 18:30:56.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.230" endtime="20201030 18:30:56.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:56.540" level="INFO">${PHILIP_RES} = [{'diff': 9.773600000000104e-05}, {'diff': 9.697200000000072e-05}, {'diff': 9.695899999999716e-05}, {'diff': 9.697200000000072e-05}, {'diff': 9.695800000000115e-05}, {'diff': 9.695800000000115e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:56.537" endtime="20201030 18:30:56.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:56.544" level="INFO">${RESULT} = {'diff': [9.773600000000104e-05, 9.697200000000072e-05, 9.695899999999716e-05, 9.697200000000072e-05, 9.695800000000115e-05, 9.695800000000115e-05, 9.701399999999943e-05, 9.695900000000063e-05, 9.6931...</msg>
<status status="PASS" starttime="20201030 18:30:56.541" endtime="20201030 18:30:56.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.549" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:56.548" endtime="20201030 18:30:56.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.551" level="INFO">VALUE: [9.773600000000104e-05, 9.697200000000072e-05, 9.695899999999716e-05, 9.697200000000072e-05, 9.695800000000115e-05, 9.695800000000115e-05, 9.701399999999943e-05, 9.695900000000063e-05, 9.693100000000149e-05, 9.69730000000002e-05, 9.69860000000003e-05, 9.697200000000072e-05, 9.694400000000158e-05, 9.695799999999768e-05, 9.695800000000115e-05, 9.694400000000158e-05, 9.695799999999768e-05, 9.69730000000002e-05, 9.695900000000063e-05, 9.694500000000106e-05, 9.695799999999768e-05, 9.695800000000115e-05, 9.695800000000115e-05, 9.695799999999768e-05, 9.695799999999768e-05, 9.693100000000149e-05, 9.69730000000002e-05, 9.694499999999759e-05, 9.694399999999812e-05, 9.69860000000003e-05, 9.694399999999812e-05, 9.69860000000003e-05, 9.698699999999977e-05, 9.695799999999768e-05, 9.694499999999759e-05, 9.695800000000115e-05, 9.694400000000158e-05, 9.695800000000115e-05, 9.697200000000072e-05, 9.695800000000115e-05, 9.697200000000072e-05, 9.698599999999682e-05, 9.695900000000063e-05, 9.695800000000115e-05, 9.695800000000115e-05, 9.694399999999812e-05, 9.695800000000115e-05, 9.688899999999931e-05, 9.694499999999759e-05, 9.695900000000063e-05]</msg>
<status status="PASS" starttime="20201030 18:30:56.550" endtime="20201030 18:30:56.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.545" endtime="20201030 18:30:56.552"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:56.556" endtime="20201030 18:30:56.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.555" endtime="20201030 18:30:56.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.553" endtime="20201030 18:30:56.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.196" endtime="20201030 18:30:56.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.195" endtime="20201030 18:30:56.577"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.586" endtime="20201030 18:30:56.606"></status>
</kw>
<msg timestamp="20201030 18:30:56.606" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:56.584" endtime="20201030 18:30:56.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.609" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:56.607" endtime="20201030 18:30:56.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.610" endtime="20201030 18:30:56.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.581" endtime="20201030 18:30:56.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.579" endtime="20201030 18:30:56.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.620" endtime="20201030 18:30:56.928"></status>
</kw>
<msg timestamp="20201030 18:30:56.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020385694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020486028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:56.618" endtime="20201030 18:30:56.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020385694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020486028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:56.932" endtime="20201030 18:30:56.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.941" endtime="20201030 18:30:56.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.615" endtime="20201030 18:30:56.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.613" endtime="20201030 18:30:56.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:56.947" level="INFO">${PHILIP_RES} = [{'diff': 0.00010033400000000053}, {'diff': 9.961099999999945e-05}, {'diff': 9.958399999999978e-05}, {'diff': 9.961199999999892e-05}, {'diff': 9.959799999999935e-05}, {'diff': 9.957000000000021e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:30:56.944" endtime="20201030 18:30:56.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:56.952" level="INFO">${RESULT} = {'diff': [0.00010033400000000053, 9.961099999999945e-05, 9.958399999999978e-05, 9.961199999999892e-05, 9.959799999999935e-05, 9.957000000000021e-05, 9.959799999999935e-05, 9.961199999999892e-05, 9.959...</msg>
<status status="PASS" starttime="20201030 18:30:56.948" endtime="20201030 18:30:56.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.956" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:56.955" endtime="20201030 18:30:56.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.959" level="INFO">VALUE: [0.00010033400000000053, 9.961099999999945e-05, 9.958399999999978e-05, 9.961199999999892e-05, 9.959799999999935e-05, 9.957000000000021e-05, 9.959799999999935e-05, 9.961199999999892e-05, 9.959800000000282e-05, 9.958399999999978e-05, 9.961099999999945e-05, 9.959799999999935e-05, 9.958399999999978e-05, 9.959799999999935e-05, 9.958399999999978e-05, 9.959699999999988e-05, 9.959699999999988e-05, 9.959699999999988e-05, 9.958299999999684e-05, 9.958300000000031e-05, 9.959699999999988e-05, 9.959699999999988e-05, 9.958300000000031e-05, 9.961099999999945e-05, 9.959699999999988e-05, 9.958300000000031e-05, 9.955500000000117e-05, 9.959699999999988e-05, 9.958300000000031e-05, 9.954099999999813e-05, 9.959699999999988e-05, 9.963899999999859e-05, 9.958300000000031e-05, 9.956900000000074e-05, 9.956900000000074e-05, 9.958299999999684e-05, 9.955500000000117e-05, 9.959699999999988e-05, 9.958300000000031e-05, 9.961099999999945e-05, 9.958300000000031e-05, 9.961199999999892e-05, 9.956899999999727e-05, 9.963900000000206e-05, 9.958300000000031e-05, 9.959699999999988e-05, 9.952799999999803e-05, 9.961199999999892e-05, 9.959799999999935e-05, 9.958399999999978e-05]</msg>
<status status="PASS" starttime="20201030 18:30:56.957" endtime="20201030 18:30:56.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.953" endtime="20201030 18:30:56.961"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:56.965" endtime="20201030 18:30:56.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.963" endtime="20201030 18:30:56.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.962" endtime="20201030 18:30:56.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.578" endtime="20201030 18:30:56.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.577" endtime="20201030 18:30:56.986"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.995" endtime="20201030 18:30:57.014"></status>
</kw>
<msg timestamp="20201030 18:30:57.015" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:56.993" endtime="20201030 18:30:57.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.017" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:57.016" endtime="20201030 18:30:57.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.018" endtime="20201030 18:30:57.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.990" endtime="20201030 18:30:57.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.988" endtime="20201030 18:30:57.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.028" endtime="20201030 18:30:57.313"></status>
</kw>
<msg timestamp="20201030 18:30:57.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019462542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019565569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:57.026" endtime="20201030 18:30:57.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019462542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019565569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:57.317" endtime="20201030 18:30:57.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.325" endtime="20201030 18:30:57.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.024" endtime="20201030 18:30:57.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.022" endtime="20201030 18:30:57.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:57.331" level="INFO">${PHILIP_RES} = [{'diff': 0.00010302700000000206}, {'diff': 0.00010226400000000122}, {'diff': 0.00010226399999999775}, {'diff': 0.00010225000000000165}, {'diff': 0.00010229099999999741}, {'diff': 0.000102249999999998...</msg>
<status status="PASS" starttime="20201030 18:30:57.328" endtime="20201030 18:30:57.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:57.337" level="INFO">${RESULT} = {'diff': [0.00010302700000000206, 0.00010226400000000122, 0.00010226399999999775, 0.00010225000000000165, 0.00010229099999999741, 0.00010224999999999818, 0.00010226400000000122, 0.00010224999999999818...</msg>
<status status="PASS" starttime="20201030 18:30:57.333" endtime="20201030 18:30:57.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.342" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:57.341" endtime="20201030 18:30:57.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.344" level="INFO">VALUE: [0.00010302700000000206, 0.00010226400000000122, 0.00010226399999999775, 0.00010225000000000165, 0.00010229099999999741, 0.00010224999999999818, 0.00010226400000000122, 0.00010224999999999818, 0.00010226400000000122, 0.00010226399999999775, 0.0001022359999999986, 0.0001023480000000021, 0.0001022359999999986, 0.00010225000000000165, 0.0001022359999999986, 0.00010226400000000122, 0.00010227800000000078, 0.00010227800000000078, 0.00010226400000000122, 0.00010224999999999818, 0.00010226400000000122, 0.00010226400000000122, 0.00010222199999999904, 0.00010225000000000165, 0.00010227699999999784, 0.00010226400000000122, 0.00010226400000000122, 0.00010230599999999992, 0.00010226400000000122, 0.00010226299999999827, 0.00010220800000000294, 0.00010224999999999818, 0.00010226399999999775, 0.0001021809999999998, 0.00010227799999999732, 0.00010226400000000122, 0.00010226400000000122, 0.00010227800000000078, 0.00010226400000000122, 0.00010226299999999827, 0.00010226400000000122, 0.00010226400000000122, 0.00010226400000000122, 0.00010226400000000122, 0.00010227799999999732, 0.00010226399999999775, 0.00010224999999999818, 0.00010226400000000122, 0.00010226400000000122, 0.00010224999999999818]</msg>
<status status="PASS" starttime="20201030 18:30:57.343" endtime="20201030 18:30:57.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.338" endtime="20201030 18:30:57.346"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:57.349" endtime="20201030 18:30:57.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.348" endtime="20201030 18:30:57.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.347" endtime="20201030 18:30:57.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.987" endtime="20201030 18:30:57.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.986" endtime="20201030 18:30:57.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.367" endtime="20201030 18:30:57.370"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:57.374" endtime="20201030 18:30:57.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.373" endtime="20201030 18:30:57.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.371" endtime="20201030 18:30:57.395"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:36.974" endtime="20201030 18:30:57.395" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:30:16.926" endtime="20201030 18:30:57.404"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.476" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:30:57.485" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:30:58.661" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:30:57.475" endtime="20201030 18:30:58.662"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.664" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:30:58.663" endtime="20201030 18:30:58.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.474" endtime="20201030 18:30:58.665"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:58.667" endtime="20201030 18:30:58.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.666" endtime="20201030 18:30:58.852"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.865" endtime="20201030 18:30:58.879"></status>
</kw>
<msg timestamp="20201030 18:30:58.880" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:58.863" endtime="20201030 18:30:58.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.883" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:58.881" endtime="20201030 18:30:58.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.887" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:58.884" endtime="20201030 18:30:58.887"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:58.861" endtime="20201030 18:30:58.888"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:58.859" endtime="20201030 18:30:58.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.857" endtime="20201030 18:30:58.889"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:58.893" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:58.892" endtime="20201030 18:30:58.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.890" endtime="20201030 18:30:58.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.857" endtime="20201030 18:30:58.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.856" endtime="20201030 18:30:58.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.895" endtime="20201030 18:30:58.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.855" endtime="20201030 18:30:58.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.898" endtime="20201030 18:30:58.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.853" endtime="20201030 18:30:58.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.472" endtime="20201030 18:30:58.901"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:58.907" endtime="20201030 18:30:58.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.905" endtime="20201030 18:30:58.927"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.941" endtime="20201030 18:30:58.955"></status>
</kw>
<msg timestamp="20201030 18:30:58.955" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:58.939" endtime="20201030 18:30:58.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.958" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:58.957" endtime="20201030 18:30:58.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.961" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:58.959" endtime="20201030 18:30:58.962"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:58.936" endtime="20201030 18:30:58.962"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:58.934" endtime="20201030 18:30:58.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.932" endtime="20201030 18:30:58.963"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:58.971" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:58.968" endtime="20201030 18:30:58.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.964" endtime="20201030 18:30:58.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.932" endtime="20201030 18:30:58.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.931" endtime="20201030 18:30:58.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.976" endtime="20201030 18:30:58.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.929" endtime="20201030 18:30:58.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.928" endtime="20201030 18:30:58.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.904" endtime="20201030 18:30:58.982"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.003" endtime="20201030 18:30:59.022"></status>
</kw>
<msg timestamp="20201030 18:30:59.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:58.999" endtime="20201030 18:30:59.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:59.025" endtime="20201030 18:30:59.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.030" endtime="20201030 18:30:59.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.993" endtime="20201030 18:30:59.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.989" endtime="20201030 18:30:59.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.052" endtime="20201030 18:30:59.345"></status>
</kw>
<msg timestamp="20201030 18:30:59.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.089907111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.089921278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:59.048" endtime="20201030 18:30:59.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.089907111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.089921278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:59.349" endtime="20201030 18:30:59.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.358" endtime="20201030 18:30:59.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.042" endtime="20201030 18:30:59.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.038" endtime="20201030 18:30:59.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:59.365" level="INFO">${RESULT} = [{'diff': 1.4166999999995489e-05}, {'diff': 1.3917000000002178e-05}, {'diff': 1.4000000000000123e-05}, {'diff': 1.3834000000004232e-05}, {'diff': 1.3889000000003038e-05}, {'diff': 1.3834000000004232e-...</msg>
<status status="PASS" starttime="20201030 18:30:59.361" endtime="20201030 18:30:59.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:59.370" level="INFO">${ACCURACY} = {'diff': [1.4166999999995489e-05, 1.3917000000002178e-05, 1.4000000000000123e-05, 1.3834000000004232e-05, 1.3889000000003038e-05, 1.3834000000004232e-05, 1.3958999999993948e-05, 1.3709000000000637e-05...</msg>
<status status="PASS" starttime="20201030 18:30:59.366" endtime="20201030 18:30:59.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.375" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 18:30:59.374" endtime="20201030 18:30:59.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.377" level="INFO">VALUE: [1.4166999999995489e-05, 1.3917000000002178e-05, 1.4000000000000123e-05, 1.3834000000004232e-05, 1.3889000000003038e-05, 1.3834000000004232e-05, 1.3958999999993948e-05, 1.3709000000000637e-05, 1.3889000000003038e-05, 1.3917000000002178e-05, 1.3806000000005092e-05, 1.388899999998916e-05, 1.4042000000005772e-05, 1.3736999999999777e-05, 1.3973000000000457e-05, 1.3806000000005092e-05, 1.3972000000000984e-05, 1.3973000000000457e-05, 1.3763999999999443e-05, 1.3945000000001317e-05, 1.3986000000007492e-05, 1.3929999999995335e-05, 1.3778000000005952e-05, 1.3986999999993088e-05, 1.383299999999088e-05, 1.3973000000000457e-05, 1.386099999999002e-05, 1.3709000000000637e-05, 1.3763999999999443e-05, 1.3833999999990354e-05, 1.3819000000012127e-05, 1.3833000000004758e-05, 1.3763999999999443e-05, 1.37769999999926e-05, 1.3708000000001164e-05, 1.383299999999088e-05, 1.3679999999988146e-05, 1.3944000000001844e-05, 1.3985999999993615e-05, 1.3889000000003038e-05, 1.3929999999995335e-05, 1.3902999999995669e-05, 1.4000000000000123e-05, 1.3708000000001164e-05, 1.388899999998916e-05, 1.3971999999987106e-05, 1.3875000000010407e-05, 1.3819000000012127e-05, 1.3874999999996529e-05, 1.3861000000003898e-05]</msg>
<status status="PASS" starttime="20201030 18:30:59.376" endtime="20201030 18:30:59.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.371" endtime="20201030 18:30:59.378"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:59.382" endtime="20201030 18:30:59.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.381" endtime="20201030 18:30:59.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.379" endtime="20201030 18:30:59.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.985" endtime="20201030 18:30:59.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.984" endtime="20201030 18:30:59.403"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.412" endtime="20201030 18:30:59.426"></status>
</kw>
<msg timestamp="20201030 18:30:59.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:59.410" endtime="20201030 18:30:59.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:59.428" endtime="20201030 18:30:59.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.431" endtime="20201030 18:30:59.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.408" endtime="20201030 18:30:59.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.405" endtime="20201030 18:30:59.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.441" endtime="20201030 18:30:59.727"></status>
</kw>
<msg timestamp="20201030 18:30:59.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022200056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022214583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:59.439" endtime="20201030 18:30:59.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022200056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022214583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:59.731" endtime="20201030 18:30:59.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.740" endtime="20201030 18:30:59.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.436" endtime="20201030 18:30:59.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.435" endtime="20201030 18:30:59.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:59.748" level="INFO">${RESULT} = [{'diff': 1.452700000000029e-05}, {'diff': 1.3749999999999873e-05}, {'diff': 1.3819000000001719e-05}, {'diff': 1.4000000000000123e-05}, {'diff': 1.383299999999782e-05}, {'diff': 1.3861000000000429e-05...</msg>
<status status="PASS" starttime="20201030 18:30:59.744" endtime="20201030 18:30:59.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:59.752" level="INFO">${ACCURACY} = {'diff': [1.452700000000029e-05, 1.3749999999999873e-05, 1.3819000000001719e-05, 1.4000000000000123e-05, 1.383299999999782e-05, 1.3861000000000429e-05, 1.3861000000000429e-05, 1.3902999999999138e-05, ...</msg>
<status status="PASS" starttime="20201030 18:30:59.749" endtime="20201030 18:30:59.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.756" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 18:30:59.755" endtime="20201030 18:30:59.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.759" level="INFO">VALUE: [1.452700000000029e-05, 1.3749999999999873e-05, 1.3819000000001719e-05, 1.4000000000000123e-05, 1.383299999999782e-05, 1.3861000000000429e-05, 1.3861000000000429e-05, 1.3902999999999138e-05, 1.3736000000000304e-05, 1.3888999999999568e-05, 1.3943999999998374e-05, 1.3805999999998153e-05, 1.383299999999782e-05, 1.3931000000001748e-05, 1.3945000000001317e-05, 1.3901999999999665e-05, 1.3861000000000429e-05, 1.3749999999999873e-05, 1.3902999999999138e-05, 1.3847000000000859e-05, 1.384699999999739e-05, 1.3903000000002608e-05, 1.3931000000001748e-05, 1.3973000000000457e-05, 1.3944999999997848e-05, 1.3917000000002178e-05, 1.3888999999999568e-05, 1.3902999999999138e-05, 1.3888999999999568e-05, 1.3959000000000887e-05, 1.3695000000001067e-05, 1.3874999999999998e-05, 1.3833999999997293e-05, 1.3709000000000637e-05, 1.3973000000000457e-05, 1.3986000000000554e-05, 1.3848000000000332e-05, 1.3806000000001623e-05, 1.3973000000000457e-05, 1.3986000000000554e-05, 1.3791999999998583e-05, 1.3764000000002913e-05, 1.3861000000000429e-05, 1.377699999999954e-05, 1.379099999999911e-05, 1.3833000000001289e-05, 1.4000000000000123e-05, 1.3957999999997944e-05, 1.3874999999999998e-05, 1.381899999999825e-05]</msg>
<status status="PASS" starttime="20201030 18:30:59.758" endtime="20201030 18:30:59.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.753" endtime="20201030 18:30:59.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:59.764" endtime="20201030 18:30:59.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.762" endtime="20201030 18:30:59.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.761" endtime="20201030 18:30:59.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.404" endtime="20201030 18:30:59.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.403" endtime="20201030 18:30:59.785"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.794" endtime="20201030 18:30:59.809"></status>
</kw>
<msg timestamp="20201030 18:30:59.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:59.792" endtime="20201030 18:30:59.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:59.811" endtime="20201030 18:30:59.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.814" endtime="20201030 18:30:59.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.790" endtime="20201030 18:30:59.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.787" endtime="20201030 18:30:59.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.823" endtime="20201030 18:31:00.109"></status>
</kw>
<msg timestamp="20201030 18:31:00.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023138681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023153278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:59.822" endtime="20201030 18:31:00.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023138681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023153278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:00.114" endtime="20201030 18:31:00.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.122" endtime="20201030 18:31:00.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.819" endtime="20201030 18:31:00.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.817" endtime="20201030 18:31:00.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:00.129" level="INFO">${RESULT} = [{'diff': 1.459699999999814e-05}, {'diff': 1.3847000000000859e-05}, {'diff': 1.4000000000000123e-05}, {'diff': 1.3722000000000734e-05}, {'diff': 1.3972000000000984e-05}, {'diff': 1.4013999999999693e-0...</msg>
<status status="PASS" starttime="20201030 18:31:00.126" endtime="20201030 18:31:00.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:00.134" level="INFO">${ACCURACY} = {'diff': [1.459699999999814e-05, 1.3847000000000859e-05, 1.4000000000000123e-05, 1.3722000000000734e-05, 1.3972000000000984e-05, 1.4013999999999693e-05, 1.3944000000001844e-05, 1.3679999999998554e-05,...</msg>
<status status="PASS" starttime="20201030 18:31:00.130" endtime="20201030 18:31:00.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.138" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 18:31:00.137" endtime="20201030 18:31:00.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.141" level="INFO">VALUE: [1.459699999999814e-05, 1.3847000000000859e-05, 1.4000000000000123e-05, 1.3722000000000734e-05, 1.3972000000000984e-05, 1.4013999999999693e-05, 1.3944000000001844e-05, 1.3679999999998554e-05, 1.3945000000001317e-05, 1.3958000000001414e-05, 1.3930000000002274e-05, 1.3861000000000429e-05, 1.3778000000002483e-05, 1.3708000000001164e-05, 1.379099999999911e-05, 1.381899999999825e-05, 1.3929999999998804e-05, 1.3889000000003038e-05, 1.4000000000000123e-05, 1.3749999999999873e-05, 1.3777999999999013e-05, 1.3874999999999998e-05, 1.3972000000000984e-05, 1.3929999999998804e-05, 1.3736000000000304e-05, 1.3721999999997264e-05, 1.3763999999999443e-05, 1.3791999999998583e-05, 1.384699999999739e-05, 1.3944000000001844e-05, 1.3749999999999873e-05, 1.3708000000001164e-05, 1.3888999999999568e-05, 1.383299999999782e-05, 1.3917000000002178e-05, 1.4013999999999693e-05, 1.3707999999997694e-05, 1.3763999999999443e-05, 1.3972000000000984e-05, 1.3805999999998153e-05, 1.3666999999998458e-05, 1.384699999999739e-05, 1.3972000000000984e-05, 1.3902999999999138e-05, 1.3791999999998583e-05, 1.3819000000001719e-05, 1.3749999999999873e-05, 1.3916999999998708e-05, 1.3916999999998708e-05, 1.3931000000001748e-05]</msg>
<status status="PASS" starttime="20201030 18:31:00.139" endtime="20201030 18:31:00.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.135" endtime="20201030 18:31:00.143"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:00.147" endtime="20201030 18:31:00.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.145" endtime="20201030 18:31:00.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.144" endtime="20201030 18:31:00.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.786" endtime="20201030 18:31:00.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.785" endtime="20201030 18:31:00.168"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.184" endtime="20201030 18:31:00.199"></status>
</kw>
<msg timestamp="20201030 18:31:00.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:00.183" endtime="20201030 18:31:00.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:00.201" endtime="20201030 18:31:00.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.203" endtime="20201030 18:31:00.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.179" endtime="20201030 18:31:00.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.170" endtime="20201030 18:31:00.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.213" endtime="20201030 18:31:00.503"></status>
</kw>
<msg timestamp="20201030 18:31:00.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030012347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030026292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:00.211" endtime="20201030 18:31:00.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030012347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030026292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:00.513" endtime="20201030 18:31:00.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.531" endtime="20201030 18:31:00.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.209" endtime="20201030 18:31:00.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.207" endtime="20201030 18:31:00.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:00.545" level="INFO">${RESULT} = [{'diff': 1.3944999999997848e-05}, {'diff': 1.3694000000001594e-05}, {'diff': 1.3958000000001414e-05}, {'diff': 1.3929999999998804e-05}, {'diff': 1.3749999999999873e-05}, {'diff': 1.3749999999999873e-...</msg>
<status status="PASS" starttime="20201030 18:31:00.538" endtime="20201030 18:31:00.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:00.557" level="INFO">${ACCURACY} = {'diff': [1.3944999999997848e-05, 1.3694000000001594e-05, 1.3958000000001414e-05, 1.3929999999998804e-05, 1.3749999999999873e-05, 1.3749999999999873e-05, 1.3791000000002579e-05, 1.3916999999998708e-05...</msg>
<status status="PASS" starttime="20201030 18:31:00.547" endtime="20201030 18:31:00.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.569" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 18:31:00.567" endtime="20201030 18:31:00.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.576" level="INFO">VALUE: [1.3944999999997848e-05, 1.3694000000001594e-05, 1.3958000000001414e-05, 1.3929999999998804e-05, 1.3749999999999873e-05, 1.3749999999999873e-05, 1.3791000000002579e-05, 1.3916999999998708e-05, 1.3931000000001748e-05, 1.3958000000001414e-05, 1.3902999999999138e-05, 1.3749999999999873e-05, 1.3902999999999138e-05, 1.379099999999911e-05, 1.3986000000000554e-05, 1.3833000000001289e-05, 1.3916999999998708e-05, 1.3917000000002178e-05, 1.3819000000001719e-05, 1.3972000000000984e-05, 1.3971999999997514e-05, 1.3861000000000429e-05, 1.3903000000002608e-05, 1.3708000000001164e-05, 1.3707999999997694e-05, 1.3708000000001164e-05, 1.3861000000000429e-05, 1.3736000000000304e-05, 1.4013999999999693e-05, 1.3972000000000984e-05, 1.3833000000001289e-05, 1.3708000000001164e-05, 1.3763999999999443e-05, 1.3763999999999443e-05, 1.3972000000000984e-05, 1.3972000000000984e-05, 1.3888999999999568e-05, 1.3707999999997694e-05, 1.3959000000000887e-05, 1.3972000000000984e-05, 1.3916000000002704e-05, 1.3819999999997723e-05, 1.3972000000000984e-05, 1.3972000000000984e-05, 1.402699999999979e-05, 1.3763999999999443e-05, 1.380499999999868e-05, 1.3888999999999568e-05, 1.3777999999999013e-05, 1.3820000000001192e-05]</msg>
<status status="PASS" starttime="20201030 18:31:00.572" endtime="20201030 18:31:00.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.559" endtime="20201030 18:31:00.579"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:00.588" endtime="20201030 18:31:00.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.585" endtime="20201030 18:31:00.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.582" endtime="20201030 18:31:00.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.168" endtime="20201030 18:31:00.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.168" endtime="20201030 18:31:00.610"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.619" endtime="20201030 18:31:00.633"></status>
</kw>
<msg timestamp="20201030 18:31:00.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:00.617" endtime="20201030 18:31:00.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:00.635" endtime="20201030 18:31:00.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.637" endtime="20201030 18:31:00.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.614" endtime="20201030 18:31:00.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.612" endtime="20201030 18:31:00.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.648" endtime="20201030 18:31:00.934"></status>
</kw>
<msg timestamp="20201030 18:31:00.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022328653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0223425, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:00.646" endtime="20201030 18:31:00.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022328653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0223425, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:00.939" endtime="20201030 18:31:00.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.947" endtime="20201030 18:31:00.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.643" endtime="20201030 18:31:00.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.640" endtime="20201030 18:31:00.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:00.954" level="INFO">${RESULT} = [{'diff': 1.3847000000000859e-05}, {'diff': 1.3680999999998028e-05}, {'diff': 1.3944999999997848e-05}, {'diff': 1.3861000000000429e-05}, {'diff': 1.3777999999999013e-05}, {'diff': 1.3805999999998153e-...</msg>
<status status="PASS" starttime="20201030 18:31:00.951" endtime="20201030 18:31:00.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:00.958" level="INFO">${ACCURACY} = {'diff': [1.3847000000000859e-05, 1.3680999999998028e-05, 1.3944999999997848e-05, 1.3861000000000429e-05, 1.3777999999999013e-05, 1.3805999999998153e-05, 1.3749999999999873e-05, 1.3834000000000762e-05...</msg>
<status status="PASS" starttime="20201030 18:31:00.955" endtime="20201030 18:31:00.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.963" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 18:31:00.962" endtime="20201030 18:31:00.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.965" level="INFO">VALUE: [1.3847000000000859e-05, 1.3680999999998028e-05, 1.3944999999997848e-05, 1.3861000000000429e-05, 1.3777999999999013e-05, 1.3805999999998153e-05, 1.3749999999999873e-05, 1.3834000000000762e-05, 1.3820000000001192e-05, 1.3902999999999138e-05, 1.3929999999998804e-05, 1.3930000000002274e-05, 1.380499999999868e-05, 1.3929999999998804e-05, 1.3749999999999873e-05, 1.3972000000000984e-05, 1.3848000000000332e-05, 1.3723000000000207e-05, 1.3888999999999568e-05, 1.3986000000000554e-05, 1.3861000000000429e-05, 1.3847000000000859e-05, 1.3736000000000304e-05, 1.3721999999997264e-05, 1.3888999999999568e-05, 1.3861000000000429e-05, 1.3901999999999665e-05, 1.3888999999999568e-05, 1.3791999999998583e-05, 1.380499999999868e-05, 1.380499999999868e-05, 1.3860999999996959e-05, 1.3777999999999013e-05, 1.3722000000000734e-05, 1.381899999999825e-05, 1.3930000000002274e-05, 1.3694000000001594e-05, 1.3736000000000304e-05, 1.3917000000002178e-05, 1.3874999999999998e-05, 1.3958000000001414e-05, 1.3819000000001719e-05, 1.3888999999999568e-05, 1.380499999999868e-05, 1.3722000000000734e-05, 1.4000000000000123e-05, 1.3736000000000304e-05, 1.3999999999996654e-05, 1.3902999999999138e-05, 1.3722000000000734e-05]</msg>
<status status="PASS" starttime="20201030 18:31:00.964" endtime="20201030 18:31:00.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.959" endtime="20201030 18:31:00.967"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:00.970" endtime="20201030 18:31:00.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.969" endtime="20201030 18:31:00.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.968" endtime="20201030 18:31:00.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.611" endtime="20201030 18:31:00.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.610" endtime="20201030 18:31:00.991"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.000" endtime="20201030 18:31:01.016"></status>
</kw>
<msg timestamp="20201030 18:31:01.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:00.998" endtime="20201030 18:31:01.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:01.017" endtime="20201030 18:31:01.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.020" endtime="20201030 18:31:01.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.996" endtime="20201030 18:31:01.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.994" endtime="20201030 18:31:01.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.029" endtime="20201030 18:31:01.322"></status>
</kw>
<msg timestamp="20201030 18:31:01.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022612764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022626667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:01.027" endtime="20201030 18:31:01.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022612764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022626667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:01.333" endtime="20201030 18:31:01.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.353" endtime="20201030 18:31:01.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.025" endtime="20201030 18:31:01.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.023" endtime="20201030 18:31:01.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:01.367" level="INFO">${RESULT} = [{'diff': 1.3902999999999138e-05}, {'diff': 1.3652999999998888e-05}, {'diff': 1.3749999999999873e-05}, {'diff': 1.377699999999954e-05}, {'diff': 1.3957999999997944e-05}, {'diff': 1.3861999999999902e-0...</msg>
<status status="PASS" starttime="20201030 18:31:01.360" endtime="20201030 18:31:01.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:01.376" level="INFO">${ACCURACY} = {'diff': [1.3902999999999138e-05, 1.3652999999998888e-05, 1.3749999999999873e-05, 1.377699999999954e-05, 1.3957999999997944e-05, 1.3861999999999902e-05, 1.3749999999999873e-05, 1.3847000000000859e-05,...</msg>
<status status="PASS" starttime="20201030 18:31:01.369" endtime="20201030 18:31:01.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.385" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 18:31:01.383" endtime="20201030 18:31:01.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.392" level="INFO">VALUE: [1.3902999999999138e-05, 1.3652999999998888e-05, 1.3749999999999873e-05, 1.377699999999954e-05, 1.3957999999997944e-05, 1.3861999999999902e-05, 1.3749999999999873e-05, 1.3847000000000859e-05, 1.3736000000000304e-05, 1.3709000000000637e-05, 1.3987000000000027e-05, 1.3902999999999138e-05, 1.3874999999999998e-05, 1.3736000000000304e-05, 1.379099999999911e-05, 1.3819000000001719e-05, 1.3986000000000554e-05, 1.3888999999999568e-05, 1.3916999999998708e-05, 1.3888999999999568e-05, 1.3651999999999415e-05, 1.3917000000002178e-05, 1.3915999999999235e-05, 1.3944000000001844e-05, 1.3651999999999415e-05, 1.3693999999998124e-05, 1.3749999999999873e-05, 1.3901999999999665e-05, 1.3833000000001289e-05, 1.3957999999997944e-05, 1.4000000000000123e-05, 1.3777999999999013e-05, 1.3986000000000554e-05, 1.383299999999782e-05, 1.3777999999999013e-05, 1.3916000000002704e-05, 1.3847000000000859e-05, 1.383299999999782e-05, 1.381899999999825e-05, 1.3986000000000554e-05, 1.3888999999999568e-05, 1.4000000000000123e-05, 1.3791999999998583e-05, 1.3847000000000859e-05, 1.3888999999999568e-05, 1.3736000000000304e-05, 1.3957999999997944e-05, 1.3861000000000429e-05, 1.3972000000000984e-05, 1.3930999999998278e-05]</msg>
<status status="PASS" starttime="20201030 18:31:01.388" endtime="20201030 18:31:01.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.378" endtime="20201030 18:31:01.395"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:01.400" endtime="20201030 18:31:01.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.398" endtime="20201030 18:31:01.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.397" endtime="20201030 18:31:01.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.992" endtime="20201030 18:31:01.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.991" endtime="20201030 18:31:01.420"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.429" endtime="20201030 18:31:01.444"></status>
</kw>
<msg timestamp="20201030 18:31:01.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:01.428" endtime="20201030 18:31:01.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:01.446" endtime="20201030 18:31:01.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.448" endtime="20201030 18:31:01.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.425" endtime="20201030 18:31:01.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.423" endtime="20201030 18:31:01.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.457" endtime="20201030 18:31:01.743"></status>
</kw>
<msg timestamp="20201030 18:31:01.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02179325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:01.456" endtime="20201030 18:31:01.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02179325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:01.747" endtime="20201030 18:31:01.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.755" endtime="20201030 18:31:01.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.453" endtime="20201030 18:31:01.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.451" endtime="20201030 18:31:01.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:01.764" level="INFO">${RESULT} = [{'diff': 1.4639000000000318e-05}, {'diff': 1.384699999999739e-05}, {'diff': 1.3888999999999568e-05}, {'diff': 1.3930999999998278e-05}, {'diff': 1.3805999999998153e-05}, {'diff': 1.3888999999999568e-0...</msg>
<status status="PASS" starttime="20201030 18:31:01.760" endtime="20201030 18:31:01.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:01.774" level="INFO">${ACCURACY} = {'diff': [1.4639000000000318e-05, 1.384699999999739e-05, 1.3888999999999568e-05, 1.3930999999998278e-05, 1.3805999999998153e-05, 1.3888999999999568e-05, 1.3806000000001623e-05, 1.3902999999999138e-05,...</msg>
<status status="PASS" starttime="20201030 18:31:01.766" endtime="20201030 18:31:01.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.779" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 18:31:01.778" endtime="20201030 18:31:01.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.783" level="INFO">VALUE: [1.4639000000000318e-05, 1.384699999999739e-05, 1.3888999999999568e-05, 1.3930999999998278e-05, 1.3805999999998153e-05, 1.3888999999999568e-05, 1.3806000000001623e-05, 1.3902999999999138e-05, 1.4013999999999693e-05, 1.3805999999998153e-05, 1.3874999999999998e-05, 1.3848000000000332e-05, 1.3916999999998708e-05, 1.3805999999998153e-05, 1.3945000000001317e-05, 1.4000000000000123e-05, 1.3945000000001317e-05, 1.3888999999999568e-05, 1.3820000000001192e-05, 1.3931000000001748e-05, 1.3901999999999665e-05, 1.3848000000000332e-05, 1.3848000000000332e-05, 1.3848000000000332e-05, 1.379099999999911e-05, 1.3848000000000332e-05, 1.3805000000002149e-05, 1.3917000000002178e-05, 1.3777999999999013e-05, 1.3930999999998278e-05, 1.3985999999997084e-05, 1.3958000000001414e-05, 1.3915999999999235e-05, 1.3929999999998804e-05, 1.4000000000000123e-05, 1.3805000000002149e-05, 1.3736000000000304e-05, 1.3874999999999998e-05, 1.3874999999999998e-05, 1.3722000000000734e-05, 1.3888999999999568e-05, 1.3943999999998374e-05, 1.3792000000002053e-05, 1.3986000000000554e-05, 1.3944000000001844e-05, 1.3958000000001414e-05, 1.4000000000000123e-05, 1.3777000000003009e-05, 1.377699999999954e-05, 1.3916999999998708e-05]</msg>
<status status="PASS" starttime="20201030 18:31:01.781" endtime="20201030 18:31:01.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.775" endtime="20201030 18:31:01.785"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:01.792" endtime="20201030 18:31:01.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.789" endtime="20201030 18:31:01.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.787" endtime="20201030 18:31:01.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.421" endtime="20201030 18:31:01.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.421" endtime="20201030 18:31:01.821"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.837" endtime="20201030 18:31:01.852"></status>
</kw>
<msg timestamp="20201030 18:31:01.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:01.834" endtime="20201030 18:31:01.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:01.854" endtime="20201030 18:31:01.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.857" endtime="20201030 18:31:01.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.830" endtime="20201030 18:31:01.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.826" endtime="20201030 18:31:01.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.866" endtime="20201030 18:31:02.186"></status>
</kw>
<msg timestamp="20201030 18:31:02.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036429222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036443236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:01.864" endtime="20201030 18:31:02.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036429222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036443236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:02.196" endtime="20201030 18:31:02.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.208" endtime="20201030 18:31:02.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.861" endtime="20201030 18:31:02.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.860" endtime="20201030 18:31:02.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:02.215" level="INFO">${RESULT} = [{'diff': 1.4013999999999693e-05}, {'diff': 1.3847999999996863e-05}, {'diff': 1.3723000000000207e-05}, {'diff': 1.3763999999999443e-05}, {'diff': 1.4055999999998403e-05}, {'diff': 1.4013999999999693e-...</msg>
<status status="PASS" starttime="20201030 18:31:02.211" endtime="20201030 18:31:02.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:02.219" level="INFO">${ACCURACY} = {'diff': [1.4013999999999693e-05, 1.3847999999996863e-05, 1.3723000000000207e-05, 1.3763999999999443e-05, 1.4055999999998403e-05, 1.4013999999999693e-05, 1.3749999999999873e-05, 1.3763999999999443e-05...</msg>
<status status="PASS" starttime="20201030 18:31:02.216" endtime="20201030 18:31:02.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.224" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 18:31:02.222" endtime="20201030 18:31:02.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.226" level="INFO">VALUE: [1.4013999999999693e-05, 1.3847999999996863e-05, 1.3723000000000207e-05, 1.3763999999999443e-05, 1.4055999999998403e-05, 1.4013999999999693e-05, 1.3749999999999873e-05, 1.3763999999999443e-05, 1.3971999999994045e-05, 1.3902999999995669e-05, 1.3791999999998583e-05, 1.3819000000005188e-05, 1.3903000000002608e-05, 1.3973000000000457e-05, 1.3903000000002608e-05, 1.3833999999997293e-05, 1.3901999999996195e-05, 1.4055999999998403e-05, 1.3805999999998153e-05, 1.4028000000006202e-05, 1.3945000000001317e-05, 1.3944000000001844e-05, 1.3666000000002454e-05, 1.379099999999911e-05, 1.3874999999996529e-05, 1.3958000000001414e-05, 1.377699999999954e-05, 1.3889000000003038e-05, 1.3916000000002704e-05, 1.3930000000002274e-05, 1.3944000000001844e-05, 1.3986000000000554e-05, 1.3944999999994379e-05, 1.3929999999995335e-05, 1.3777999999999013e-05, 1.3917000000002178e-05, 1.3916000000002704e-05, 1.3763999999999443e-05, 1.3736000000000304e-05, 1.3736000000000304e-05, 1.3930000000002274e-05, 1.3958000000001414e-05, 1.3931000000001748e-05, 1.379099999999911e-05, 1.3805000000005618e-05, 1.3889000000003038e-05, 1.3944000000001844e-05, 1.3986000000000554e-05, 1.3930000000002274e-05, 1.383299999999782e-05]</msg>
<status status="PASS" starttime="20201030 18:31:02.225" endtime="20201030 18:31:02.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.220" endtime="20201030 18:31:02.228"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:02.231" endtime="20201030 18:31:02.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.230" endtime="20201030 18:31:02.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.229" endtime="20201030 18:31:02.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.823" endtime="20201030 18:31:02.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.822" endtime="20201030 18:31:02.252"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.261" endtime="20201030 18:31:02.277"></status>
</kw>
<msg timestamp="20201030 18:31:02.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:02.260" endtime="20201030 18:31:02.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:02.278" endtime="20201030 18:31:02.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.281" endtime="20201030 18:31:02.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.257" endtime="20201030 18:31:02.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.255" endtime="20201030 18:31:02.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.290" endtime="20201030 18:31:02.577"></status>
</kw>
<msg timestamp="20201030 18:31:02.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023018333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023032403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:02.289" endtime="20201030 18:31:02.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023018333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023032403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:02.581" endtime="20201030 18:31:02.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.589" endtime="20201030 18:31:02.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.286" endtime="20201030 18:31:02.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.284" endtime="20201030 18:31:02.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:02.596" level="INFO">${RESULT} = [{'diff': 1.4070000000001442e-05}, {'diff': 1.3791999999998583e-05}, {'diff': 1.3791000000002579e-05}, {'diff': 1.3861000000000429e-05}, {'diff': 1.3929999999998804e-05}, {'diff': 1.3792000000002053e-...</msg>
<status status="PASS" starttime="20201030 18:31:02.593" endtime="20201030 18:31:02.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:02.601" level="INFO">${ACCURACY} = {'diff': [1.4070000000001442e-05, 1.3791999999998583e-05, 1.3791000000002579e-05, 1.3861000000000429e-05, 1.3929999999998804e-05, 1.3792000000002053e-05, 1.3777000000003009e-05, 1.3972000000000984e-05...</msg>
<status status="PASS" starttime="20201030 18:31:02.597" endtime="20201030 18:31:02.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.605" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 18:31:02.604" endtime="20201030 18:31:02.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.608" level="INFO">VALUE: [1.4070000000001442e-05, 1.3791999999998583e-05, 1.3791000000002579e-05, 1.3861000000000429e-05, 1.3929999999998804e-05, 1.3792000000002053e-05, 1.3777000000003009e-05, 1.3972000000000984e-05, 1.383299999999782e-05, 1.4013999999999693e-05, 1.3847000000000859e-05, 1.3901999999999665e-05, 1.3763999999999443e-05, 1.4000000000000123e-05, 1.3916000000002704e-05, 1.4000000000000123e-05, 1.3749999999999873e-05, 1.3777999999999013e-05, 1.3930000000002274e-05, 1.3763999999999443e-05, 1.3874999999999998e-05, 1.3847000000000859e-05, 1.3833000000001289e-05, 1.3819000000001719e-05, 1.3929999999998804e-05, 1.3792000000002053e-05, 1.3792000000002053e-05, 1.3763999999999443e-05, 1.3902999999999138e-05, 1.3763999999999443e-05, 1.3903000000002608e-05, 1.3874999999999998e-05, 1.3736000000000304e-05, 1.4042000000002303e-05, 1.3889000000003038e-05, 1.3792000000002053e-05, 1.3763999999999443e-05, 1.3778000000002483e-05, 1.3917000000002178e-05, 1.3805999999998153e-05, 1.3791999999998583e-05, 1.3736000000000304e-05, 1.3972000000000984e-05, 1.3931000000001748e-05, 1.3763999999999443e-05, 1.3971999999997514e-05, 1.3806000000001623e-05, 1.3792000000002053e-05, 1.3833000000001289e-05, 1.3971999999997514e-05]</msg>
<status status="PASS" starttime="20201030 18:31:02.606" endtime="20201030 18:31:02.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.602" endtime="20201030 18:31:02.610"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:02.614" endtime="20201030 18:31:02.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.612" endtime="20201030 18:31:02.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.611" endtime="20201030 18:31:02.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.253" endtime="20201030 18:31:02.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.252" endtime="20201030 18:31:02.635"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.644" endtime="20201030 18:31:02.659"></status>
</kw>
<msg timestamp="20201030 18:31:02.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:02.642" endtime="20201030 18:31:02.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:02.660" endtime="20201030 18:31:02.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.663" endtime="20201030 18:31:02.665"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.639" endtime="20201030 18:31:02.665"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.637" endtime="20201030 18:31:02.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.673" endtime="20201030 18:31:02.960"></status>
</kw>
<msg timestamp="20201030 18:31:02.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02241675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022431069, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:02.671" endtime="20201030 18:31:02.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02241675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022431069, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:02.964" endtime="20201030 18:31:02.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.973" endtime="20201030 18:31:02.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.668" endtime="20201030 18:31:02.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.666" endtime="20201030 18:31:02.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:02.980" level="INFO">${RESULT} = [{'diff': 1.4319000000002219e-05}, {'diff': 1.3888999999999568e-05}, {'diff': 1.3888999999999568e-05}, {'diff': 1.3861000000000429e-05}, {'diff': 1.3958000000001414e-05}, {'diff': 1.3777999999999013e-...</msg>
<status status="PASS" starttime="20201030 18:31:02.976" endtime="20201030 18:31:02.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:02.985" level="INFO">${ACCURACY} = {'diff': [1.4319000000002219e-05, 1.3888999999999568e-05, 1.3888999999999568e-05, 1.3861000000000429e-05, 1.3958000000001414e-05, 1.3777999999999013e-05, 1.3985999999997084e-05, 1.3916999999998708e-05...</msg>
<status status="PASS" starttime="20201030 18:31:02.981" endtime="20201030 18:31:02.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.989" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 18:31:02.988" endtime="20201030 18:31:02.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.992" level="INFO">VALUE: [1.4319000000002219e-05, 1.3888999999999568e-05, 1.3888999999999568e-05, 1.3861000000000429e-05, 1.3958000000001414e-05, 1.3777999999999013e-05, 1.3985999999997084e-05, 1.3916999999998708e-05, 1.4000000000000123e-05, 1.3986000000000554e-05, 1.3777999999999013e-05, 1.3930999999998278e-05, 1.3806000000001623e-05, 1.3777999999999013e-05, 1.3985999999997084e-05, 1.3861000000000429e-05, 1.3736000000000304e-05, 1.3944999999997848e-05, 1.3860999999996959e-05, 1.3820000000001192e-05, 1.4000000000000123e-05, 1.3819999999997723e-05, 1.3721999999997264e-05, 1.3792000000002053e-05, 1.3902999999999138e-05, 1.3847999999996863e-05, 1.3985999999997084e-05, 1.380499999999868e-05, 1.3986000000000554e-05, 1.3902999999999138e-05, 1.3777000000003009e-05, 1.3820000000001192e-05, 1.3806000000001623e-05, 1.3805999999998153e-05, 1.3888999999999568e-05, 1.3736999999999777e-05, 1.3874999999999998e-05, 1.3987000000000027e-05, 1.3971999999997514e-05, 1.3834000000000762e-05, 1.3861000000000429e-05, 1.3736000000000304e-05, 1.3986000000000554e-05, 1.3973000000000457e-05, 1.3847000000000859e-05, 1.3943999999998374e-05, 1.3861000000000429e-05, 1.3736999999999777e-05, 1.3694000000001594e-05, 1.3848000000000332e-05]</msg>
<status status="PASS" starttime="20201030 18:31:02.991" endtime="20201030 18:31:02.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.986" endtime="20201030 18:31:02.993"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:02.997" endtime="20201030 18:31:03.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.996" endtime="20201030 18:31:03.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.995" endtime="20201030 18:31:03.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.636" endtime="20201030 18:31:03.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.635" endtime="20201030 18:31:03.019"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.034" endtime="20201030 18:31:03.050"></status>
</kw>
<msg timestamp="20201030 18:31:03.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:03.031" endtime="20201030 18:31:03.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:03.051" endtime="20201030 18:31:03.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.054" endtime="20201030 18:31:03.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.027" endtime="20201030 18:31:03.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.023" endtime="20201030 18:31:03.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.063" endtime="20201030 18:31:03.350"></status>
</kw>
<msg timestamp="20201030 18:31:03.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029768375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029783306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:03.062" endtime="20201030 18:31:03.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029768375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029783306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:03.355" endtime="20201030 18:31:03.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.363" endtime="20201030 18:31:03.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.059" endtime="20201030 18:31:03.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.057" endtime="20201030 18:31:03.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:03.370" level="INFO">${RESULT} = [{'diff': 1.4930999999999278e-05}, {'diff': 1.4624999999997279e-05}, {'diff': 1.481899999999925e-05}, {'diff': 1.483299999999882e-05}, {'diff': 1.480499999999968e-05}, {'diff': 1.4888999999997099e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:03.367" endtime="20201030 18:31:03.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:03.374" level="INFO">${ACCURACY} = {'diff': [1.4930999999999278e-05, 1.4624999999997279e-05, 1.481899999999925e-05, 1.483299999999882e-05, 1.480499999999968e-05, 1.4888999999997099e-05, 1.486099999999796e-05, 1.4791999999999583e-05, 1....</msg>
<status status="PASS" starttime="20201030 18:31:03.371" endtime="20201030 18:31:03.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.379" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 18:31:03.378" endtime="20201030 18:31:03.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.382" level="INFO">VALUE: [1.4930999999999278e-05, 1.4624999999997279e-05, 1.481899999999925e-05, 1.483299999999882e-05, 1.480499999999968e-05, 1.4888999999997099e-05, 1.486099999999796e-05, 1.4791999999999583e-05, 1.4721999999998264e-05, 1.4957999999998944e-05, 1.4875000000000999e-05, 1.4778000000000013e-05, 1.4749999999997404e-05, 1.483299999999882e-05, 1.4943999999999374e-05, 1.4750000000000874e-05, 1.4957999999998944e-05, 1.4930999999999278e-05, 1.4889000000000568e-05, 1.4791999999999583e-05, 1.4722000000001734e-05, 1.4903000000000138e-05, 1.4722000000001734e-05, 1.4777999999996544e-05, 1.481899999999925e-05, 1.4889000000000568e-05, 1.4902999999996669e-05, 1.4819999999998723e-05, 1.4791999999999583e-05, 1.484699999999839e-05, 1.4707999999998694e-05, 1.4973000000001457e-05, 1.4735999999997834e-05, 1.4735999999997834e-05, 1.4958999999998418e-05, 1.4722999999997738e-05, 1.4778000000000013e-05, 1.4986000000001554e-05, 1.5000000000001124e-05, 1.4930999999999278e-05, 1.4750000000000874e-05, 1.4791999999999583e-05, 1.4848000000001332e-05, 1.4820000000002193e-05, 1.4848000000001332e-05, 1.4778000000000013e-05, 1.5041999999999833e-05, 1.4806000000002623e-05, 1.4736000000001304e-05, 1.4916999999999708e-05]</msg>
<status status="PASS" starttime="20201030 18:31:03.380" endtime="20201030 18:31:03.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.375" endtime="20201030 18:31:03.383"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:03.387" endtime="20201030 18:31:03.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.385" endtime="20201030 18:31:03.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.384" endtime="20201030 18:31:03.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.021" endtime="20201030 18:31:03.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.020" endtime="20201030 18:31:03.408"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.417" endtime="20201030 18:31:03.433"></status>
</kw>
<msg timestamp="20201030 18:31:03.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:03.415" endtime="20201030 18:31:03.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:03.435" endtime="20201030 18:31:03.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.437" endtime="20201030 18:31:03.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.412" endtime="20201030 18:31:03.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.410" endtime="20201030 18:31:03.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.447" endtime="20201030 18:31:03.733"></status>
</kw>
<msg timestamp="20201030 18:31:03.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023305069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023321375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:03.445" endtime="20201030 18:31:03.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023305069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023321375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:03.738" endtime="20201030 18:31:03.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.746" endtime="20201030 18:31:03.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.442" endtime="20201030 18:31:03.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.441" endtime="20201030 18:31:03.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:03.753" level="INFO">${RESULT} = [{'diff': 1.6305999999997184e-05}, {'diff': 1.5777999999997544e-05}, {'diff': 1.5944999999999848e-05}, {'diff': 1.5973000000002457e-05}, {'diff': 1.5749999999998404e-05}, {'diff': 1.5958999999999418e-...</msg>
<status status="PASS" starttime="20201030 18:31:03.750" endtime="20201030 18:31:03.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:03.758" level="INFO">${ACCURACY} = {'diff': [1.6305999999997184e-05, 1.5777999999997544e-05, 1.5944999999999848e-05, 1.5973000000002457e-05, 1.5749999999998404e-05, 1.5958999999999418e-05, 1.588900000000157e-05, 1.5971999999999514e-05,...</msg>
<status status="PASS" starttime="20201030 18:31:03.754" endtime="20201030 18:31:03.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.762" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 18:31:03.761" endtime="20201030 18:31:03.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.765" level="INFO">VALUE: [1.6305999999997184e-05, 1.5777999999997544e-05, 1.5944999999999848e-05, 1.5973000000002457e-05, 1.5749999999998404e-05, 1.5958999999999418e-05, 1.588900000000157e-05, 1.5971999999999514e-05, 1.5931000000000278e-05, 1.5778000000001013e-05, 1.583299999999982e-05, 1.5915999999997765e-05, 1.5862000000001902e-05, 1.5679999999997085e-05, 1.5985999999999084e-05, 1.5834000000002763e-05, 1.5819999999999723e-05, 1.5819999999999723e-05, 1.5778000000001013e-05, 1.587499999999853e-05, 1.587499999999853e-05, 1.6000000000002124e-05, 1.5777999999997544e-05, 1.5777999999997544e-05, 1.583299999999982e-05, 1.5999999999998654e-05, 1.5930000000000805e-05, 1.5958999999999418e-05, 1.5985999999999084e-05, 1.5887999999998625e-05, 1.5902000000001665e-05, 1.587499999999853e-05, 1.58889999999981e-05, 1.5972000000002984e-05, 1.5985999999999084e-05, 1.57629999999985e-05, 1.581900000000025e-05, 1.581900000000025e-05, 1.5735999999998834e-05, 1.5930000000000805e-05, 1.584699999999939e-05, 1.5694000000000125e-05, 1.588900000000157e-05, 1.5901999999998195e-05, 1.5985999999999084e-05, 1.588900000000157e-05, 1.5735999999998834e-05, 1.5985999999999084e-05, 1.5721999999999264e-05, 1.6042000000000833e-05]</msg>
<status status="PASS" starttime="20201030 18:31:03.763" endtime="20201030 18:31:03.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.759" endtime="20201030 18:31:03.767"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:03.771" endtime="20201030 18:31:03.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.769" endtime="20201030 18:31:03.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.768" endtime="20201030 18:31:03.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.409" endtime="20201030 18:31:03.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.408" endtime="20201030 18:31:03.792"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.805" endtime="20201030 18:31:03.821"></status>
</kw>
<msg timestamp="20201030 18:31:03.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:03.802" endtime="20201030 18:31:03.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:03.823" endtime="20201030 18:31:03.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.828" endtime="20201030 18:31:03.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.799" endtime="20201030 18:31:03.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.795" endtime="20201030 18:31:03.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.840" endtime="20201030 18:31:04.124"></status>
</kw>
<msg timestamp="20201030 18:31:04.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027359722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027377042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:03.838" endtime="20201030 18:31:04.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027359722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027377042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:04.129" endtime="20201030 18:31:04.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.137" endtime="20201030 18:31:04.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.835" endtime="20201030 18:31:04.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.833" endtime="20201030 18:31:04.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:04.144" level="INFO">${RESULT} = [{'diff': 1.7320000000001223e-05}, {'diff': 1.6709000000000168e-05}, {'diff': 1.6820000000000723e-05}, {'diff': 1.693100000000128e-05}, {'diff': 1.680499999999821e-05}, {'diff': 1.6999999999999654e-05...</msg>
<status status="PASS" starttime="20201030 18:31:04.141" endtime="20201030 18:31:04.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:04.149" level="INFO">${ACCURACY} = {'diff': [1.7320000000001223e-05, 1.6709000000000168e-05, 1.6820000000000723e-05, 1.693100000000128e-05, 1.680499999999821e-05, 1.6999999999999654e-05, 1.6999999999999654e-05, 1.694499999999738e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:31:04.145" endtime="20201030 18:31:04.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.154" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 18:31:04.153" endtime="20201030 18:31:04.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.157" level="INFO">VALUE: [1.7320000000001223e-05, 1.6709000000000168e-05, 1.6820000000000723e-05, 1.693100000000128e-05, 1.680499999999821e-05, 1.6999999999999654e-05, 1.6999999999999654e-05, 1.694499999999738e-05, 1.7027999999998794e-05, 1.6943999999997905e-05, 1.677700000000254e-05, 1.6986000000000084e-05, 1.6749999999999404e-05, 1.6763999999998974e-05, 1.6722000000000264e-05, 1.6887999999999626e-05, 1.6986000000000084e-05, 1.6958000000000945e-05, 1.684700000000039e-05, 1.683300000000082e-05, 1.6985999999996615e-05, 1.684700000000039e-05, 1.6943999999997905e-05, 1.680500000000168e-05, 1.6930000000001805e-05, 1.6958000000000945e-05, 1.688900000000257e-05, 1.686099999999996e-05, 1.6957999999997475e-05, 1.6722000000000264e-05, 1.680499999999821e-05, 1.683300000000082e-05, 1.68889999999991e-05, 1.681899999999778e-05, 1.6708000000000695e-05, 1.681899999999778e-05, 1.6792000000001583e-05, 1.681900000000125e-05, 1.680499999999821e-05, 1.6972000000000514e-05, 1.6972000000000514e-05, 1.681900000000125e-05, 1.683300000000082e-05, 1.68889999999991e-05, 1.6999999999999654e-05, 1.690299999999867e-05, 1.684700000000039e-05, 1.6986000000000084e-05, 1.6735999999999834e-05, 1.6972000000000514e-05]</msg>
<status status="PASS" starttime="20201030 18:31:04.155" endtime="20201030 18:31:04.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.150" endtime="20201030 18:31:04.158"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:04.162" endtime="20201030 18:31:04.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.160" endtime="20201030 18:31:04.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.159" endtime="20201030 18:31:04.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.793" endtime="20201030 18:31:04.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.792" endtime="20201030 18:31:04.183"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.192" endtime="20201030 18:31:04.207"></status>
</kw>
<msg timestamp="20201030 18:31:04.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:04.190" endtime="20201030 18:31:04.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:04.208" endtime="20201030 18:31:04.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.211" endtime="20201030 18:31:04.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.188" endtime="20201030 18:31:04.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.185" endtime="20201030 18:31:04.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.220" endtime="20201030 18:31:04.509"></status>
</kw>
<msg timestamp="20201030 18:31:04.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022201722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022219972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:04.219" endtime="20201030 18:31:04.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022201722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022219972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:04.514" endtime="20201030 18:31:04.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.522" endtime="20201030 18:31:04.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.216" endtime="20201030 18:31:04.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.214" endtime="20201030 18:31:04.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:04.529" level="INFO">${RESULT} = [{'diff': 1.8250000000000904e-05}, {'diff': 1.787500000000053e-05}, {'diff': 1.7750000000000404e-05}, {'diff': 1.787499999999706e-05}, {'diff': 1.7805999999998684e-05}, {'diff': 1.7819999999998254e-05...</msg>
<status status="PASS" starttime="20201030 18:31:04.526" endtime="20201030 18:31:04.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:04.534" level="INFO">${ACCURACY} = {'diff': [1.8250000000000904e-05, 1.787500000000053e-05, 1.7750000000000404e-05, 1.787499999999706e-05, 1.7805999999998684e-05, 1.7819999999998254e-05, 1.7778000000003014e-05, 1.7806000000002153e-05, ...</msg>
<status status="PASS" starttime="20201030 18:31:04.530" endtime="20201030 18:31:04.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.538" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 18:31:04.537" endtime="20201030 18:31:04.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.542" level="INFO">VALUE: [1.8250000000000904e-05, 1.787500000000053e-05, 1.7750000000000404e-05, 1.787499999999706e-05, 1.7805999999998684e-05, 1.7819999999998254e-05, 1.7778000000003014e-05, 1.7806000000002153e-05, 1.8000000000000654e-05, 1.7971999999998045e-05, 1.786100000000096e-05, 1.8014000000000224e-05, 1.786100000000096e-05, 1.7763999999999974e-05, 1.8000000000000654e-05, 1.784699999999792e-05, 1.787500000000053e-05, 1.7792000000002584e-05, 1.78890000000001e-05, 1.790299999999967e-05, 1.793099999999881e-05, 1.7929999999999335e-05, 1.7777999999999544e-05, 1.7750000000000404e-05, 1.7999999999997185e-05, 1.7763999999999974e-05, 1.7862000000000433e-05, 1.7792000000002584e-05, 1.784700000000139e-05, 1.7834000000001293e-05, 1.7834000000001293e-05, 1.779099999999964e-05, 1.7888000000000626e-05, 1.78890000000001e-05, 1.7971999999998045e-05, 1.7915999999999765e-05, 1.781899999999878e-05, 1.8027999999999794e-05, 1.786099999999749e-05, 1.7915999999999765e-05, 1.7722000000001265e-05, 1.7722000000001265e-05, 1.7736000000000834e-05, 1.7721999999997795e-05, 1.7957999999998475e-05, 1.78890000000001e-05, 1.7777999999999544e-05, 1.7750000000000404e-05, 1.7944000000002375e-05, 1.7958000000001945e-05]</msg>
<status status="PASS" starttime="20201030 18:31:04.540" endtime="20201030 18:31:04.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.535" endtime="20201030 18:31:04.545"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:04.549" endtime="20201030 18:31:04.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.547" endtime="20201030 18:31:04.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.546" endtime="20201030 18:31:04.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.184" endtime="20201030 18:31:04.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.183" endtime="20201030 18:31:04.570"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.579" endtime="20201030 18:31:04.594"></status>
</kw>
<msg timestamp="20201030 18:31:04.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:04.577" endtime="20201030 18:31:04.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:04.596" endtime="20201030 18:31:04.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.599" endtime="20201030 18:31:04.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.575" endtime="20201030 18:31:04.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.572" endtime="20201030 18:31:04.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.608" endtime="20201030 18:31:04.895"></status>
</kw>
<msg timestamp="20201030 18:31:04.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023455681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023474667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:04.607" endtime="20201030 18:31:04.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023455681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023474667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:04.899" endtime="20201030 18:31:04.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.908" endtime="20201030 18:31:04.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.604" endtime="20201030 18:31:04.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.602" endtime="20201030 18:31:04.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:04.914" level="INFO">${RESULT} = [{'diff': 1.8986000000002085e-05}, {'diff': 1.884700000000239e-05}, {'diff': 1.8805999999999684e-05}, {'diff': 1.8999999999998185e-05}, {'diff': 1.8764000000000974e-05}, {'diff': 1.8957999999999475e-0...</msg>
<status status="PASS" starttime="20201030 18:31:04.911" endtime="20201030 18:31:04.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:04.919" level="INFO">${ACCURACY} = {'diff': [1.8986000000002085e-05, 1.884700000000239e-05, 1.8805999999999684e-05, 1.8999999999998185e-05, 1.8764000000000974e-05, 1.8957999999999475e-05, 1.8736000000001835e-05, 1.8805999999999684e-05,...</msg>
<status status="PASS" starttime="20201030 18:31:04.915" endtime="20201030 18:31:04.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.923" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 18:31:04.922" endtime="20201030 18:31:04.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.926" level="INFO">VALUE: [1.8986000000002085e-05, 1.884700000000239e-05, 1.8805999999999684e-05, 1.8999999999998185e-05, 1.8764000000000974e-05, 1.8957999999999475e-05, 1.8736000000001835e-05, 1.8805999999999684e-05, 1.8721999999998795e-05, 1.886099999999849e-05, 1.883299999999935e-05, 1.881899999999978e-05, 1.8778000000000544e-05, 1.8792000000000114e-05, 1.8693999999999655e-05, 1.88890000000011e-05, 1.890300000000067e-05, 1.8708000000002695e-05, 1.886099999999849e-05, 1.8763999999997505e-05, 1.8764000000000974e-05, 1.8750000000001404e-05, 1.876299999999803e-05, 1.8805999999999684e-05, 1.8943999999999905e-05, 1.884699999999892e-05, 1.88890000000011e-05, 1.8792000000000114e-05, 1.894500000000285e-05, 1.8916000000000766e-05, 1.866699999999999e-05, 1.8792000000000114e-05, 1.8764000000000974e-05, 1.894500000000285e-05, 1.8971999999999045e-05, 1.904099999999742e-05, 1.895899999999895e-05, 1.8764000000000974e-05, 1.8792000000000114e-05, 1.895899999999895e-05, 1.8721999999998795e-05, 1.8778000000000544e-05, 1.894499999999938e-05, 1.8986000000002085e-05, 1.893100000000328e-05, 1.873699999999784e-05, 1.893099999999981e-05, 1.8847999999998394e-05, 1.8805999999999684e-05, 1.887500000000153e-05]</msg>
<status status="PASS" starttime="20201030 18:31:04.925" endtime="20201030 18:31:04.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.920" endtime="20201030 18:31:04.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:04.932" endtime="20201030 18:31:04.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.931" endtime="20201030 18:31:04.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.929" endtime="20201030 18:31:04.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.571" endtime="20201030 18:31:04.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.570" endtime="20201030 18:31:04.953"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.962" endtime="20201030 18:31:04.977"></status>
</kw>
<msg timestamp="20201030 18:31:04.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:04.960" endtime="20201030 18:31:04.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:04.978" endtime="20201030 18:31:04.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.981" endtime="20201030 18:31:04.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.958" endtime="20201030 18:31:04.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.956" endtime="20201030 18:31:04.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.991" endtime="20201030 18:31:05.278"></status>
</kw>
<msg timestamp="20201030 18:31:05.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022183861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022204361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:04.989" endtime="20201030 18:31:05.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022183861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022204361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:05.283" endtime="20201030 18:31:05.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.291" endtime="20201030 18:31:05.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.987" endtime="20201030 18:31:05.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.985" endtime="20201030 18:31:05.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:05.298" level="INFO">${RESULT} = [{'diff': 2.0499999999999685e-05}, {'diff': 1.9833999999999824e-05}, {'diff': 1.987500000000253e-05}, {'diff': 1.9806000000000684e-05}, {'diff': 1.987500000000253e-05}, {'diff': 1.988899999999863e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:05.295" endtime="20201030 18:31:05.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:05.306" level="INFO">${ACCURACY} = {'diff': [2.0499999999999685e-05, 1.9833999999999824e-05, 1.987500000000253e-05, 1.9806000000000684e-05, 1.987500000000253e-05, 1.988899999999863e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:31:05.299" endtime="20201030 18:31:05.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.310" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 18:31:05.309" endtime="20201030 18:31:05.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.313" level="INFO">VALUE: [2.0499999999999685e-05, 1.9833999999999824e-05, 1.987500000000253e-05, 1.9806000000000684e-05, 1.987500000000253e-05, 1.988899999999863e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.987499999999906e-05, 1.987499999999906e-05, 1.9820000000000254e-05, 1.9999999999999185e-05, 1.9778000000001544e-05, 1.9735999999999365e-05, 1.9792000000001114e-05, 1.9749999999998935e-05, 1.976299999999903e-05, 1.9764000000001974e-05, 1.972299999999927e-05, 1.9806000000000684e-05, 1.9792000000001114e-05, 1.9943999999997436e-05, 1.9721999999999795e-05, 1.984700000000339e-05, 1.9749999999998935e-05, 1.9736000000002835e-05, 1.9749999999998935e-05, 1.984699999999992e-05, 1.981900000000078e-05, 1.9944000000000905e-05, 1.979099999999817e-05, 1.9764000000001974e-05, 1.9901999999998726e-05, 1.9764000000001974e-05, 1.984699999999992e-05, 1.983300000000035e-05, 2.0028000000001794e-05, 1.991700000000124e-05, 1.9763999999998505e-05, 1.9721999999999795e-05, 1.987499999999906e-05, 1.9708000000000225e-05, 1.984699999999992e-05, 1.987499999999906e-05, 1.98890000000021e-05, 1.9999999999999185e-05, 1.9986000000003085e-05, 1.9985999999999615e-05, 1.9944000000000905e-05, 1.980500000000121e-05]</msg>
<status status="PASS" starttime="20201030 18:31:05.312" endtime="20201030 18:31:05.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.307" endtime="20201030 18:31:05.320"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:05.324" endtime="20201030 18:31:05.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.322" endtime="20201030 18:31:05.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.321" endtime="20201030 18:31:05.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.954" endtime="20201030 18:31:05.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.953" endtime="20201030 18:31:05.345"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.354" endtime="20201030 18:31:05.370"></status>
</kw>
<msg timestamp="20201030 18:31:05.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:05.353" endtime="20201030 18:31:05.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:05.371" endtime="20201030 18:31:05.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.374" endtime="20201030 18:31:05.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.350" endtime="20201030 18:31:05.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.348" endtime="20201030 18:31:05.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.384" endtime="20201030 18:31:05.672"></status>
</kw>
<msg timestamp="20201030 18:31:05.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022274889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022296361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:05.382" endtime="20201030 18:31:05.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022274889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022296361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:05.676" endtime="20201030 18:31:05.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.685" endtime="20201030 18:31:05.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.379" endtime="20201030 18:31:05.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.377" endtime="20201030 18:31:05.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:05.691" level="INFO">${RESULT} = [{'diff': 2.1472000000001545e-05}, {'diff': 2.087500000000006e-05}, {'diff': 2.087500000000006e-05}, {'diff': 2.0777999999999075e-05}, {'diff': 2.094500000000138e-05}, {'diff': 2.072300000000027e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:05.688" endtime="20201030 18:31:05.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:05.696" level="INFO">${ACCURACY} = {'diff': [2.1472000000001545e-05, 2.087500000000006e-05, 2.087500000000006e-05, 2.0777999999999075e-05, 2.094500000000138e-05, 2.072300000000027e-05, 2.091700000000224e-05, 2.087500000000006e-05, 2.08...</msg>
<status status="PASS" starttime="20201030 18:31:05.692" endtime="20201030 18:31:05.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.700" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 18:31:05.699" endtime="20201030 18:31:05.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.703" level="INFO">VALUE: [2.1472000000001545e-05, 2.087500000000006e-05, 2.087500000000006e-05, 2.0777999999999075e-05, 2.094500000000138e-05, 2.072300000000027e-05, 2.091700000000224e-05, 2.087500000000006e-05, 2.080499999999874e-05, 2.086100000000049e-05, 2.087500000000006e-05, 2.065300000000242e-05, 2.0861999999999964e-05, 2.097300000000052e-05, 2.0847999999996925e-05, 2.07090000000007e-05, 2.0958000000001475e-05, 2.0763999999999505e-05, 2.0805999999998215e-05, 2.081899999999831e-05, 2.079100000000264e-05, 2.0929999999998866e-05, 2.1000000000000185e-05, 2.0749999999999935e-05, 2.0986000000000615e-05, 2.0901999999999726e-05, 2.0679999999998616e-05, 2.079099999999917e-05, 2.087500000000006e-05, 2.07769999999996e-05, 2.0722000000000795e-05, 2.0971999999997576e-05, 2.0693999999998186e-05, 2.0986000000000615e-05, 2.084700000000092e-05, 2.0971999999997576e-05, 2.0929999999998866e-05, 2.1000000000000185e-05, 2.0972000000001045e-05, 2.09029999999992e-05, 2.09029999999992e-05, 2.0806000000001684e-05, 2.088899999999963e-05, 2.0791999999998645e-05, 2.0957999999998006e-05, 2.08890000000031e-05, 2.0986000000000615e-05, 2.0986000000000615e-05, 2.0972000000001045e-05, 2.0722000000000795e-05]</msg>
<status status="PASS" starttime="20201030 18:31:05.702" endtime="20201030 18:31:05.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.697" endtime="20201030 18:31:05.705"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:05.708" endtime="20201030 18:31:05.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.707" endtime="20201030 18:31:05.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.706" endtime="20201030 18:31:05.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.346" endtime="20201030 18:31:05.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.346" endtime="20201030 18:31:05.729"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.739" endtime="20201030 18:31:05.755"></status>
</kw>
<msg timestamp="20201030 18:31:05.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:05.737" endtime="20201030 18:31:05.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:05.756" endtime="20201030 18:31:05.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.759" endtime="20201030 18:31:05.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.734" endtime="20201030 18:31:05.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.732" endtime="20201030 18:31:05.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.768" endtime="20201030 18:31:06.055"></status>
</kw>
<msg timestamp="20201030 18:31:06.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023604597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023626472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:05.767" endtime="20201030 18:31:06.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023604597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023626472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:06.059" endtime="20201030 18:31:06.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.068" endtime="20201030 18:31:06.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.764" endtime="20201030 18:31:06.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.762" endtime="20201030 18:31:06.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:06.074" level="INFO">${RESULT} = [{'diff': 2.187499999999759e-05}, {'diff': 2.181899999999931e-05}, {'diff': 2.187500000000106e-05}, {'diff': 2.180499999999974e-05}, {'diff': 2.1666000000000046e-05}, {'diff': 2.183300000000235e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:06.071" endtime="20201030 18:31:06.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:06.079" level="INFO">${ACCURACY} = {'diff': [2.187499999999759e-05, 2.181899999999931e-05, 2.187500000000106e-05, 2.180499999999974e-05, 2.1666000000000046e-05, 2.183300000000235e-05, 2.1986000000001615e-05, 2.186100000000149e-05, 2.19...</msg>
<status status="PASS" starttime="20201030 18:31:06.075" endtime="20201030 18:31:06.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.083" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 18:31:06.082" endtime="20201030 18:31:06.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.086" level="INFO">VALUE: [2.187499999999759e-05, 2.181899999999931e-05, 2.187500000000106e-05, 2.180499999999974e-05, 2.1666000000000046e-05, 2.183300000000235e-05, 2.1986000000001615e-05, 2.186100000000149e-05, 2.1916000000000296e-05, 2.2069999999999035e-05, 2.19030000000002e-05, 2.1680000000003086e-05, 2.179100000000017e-05, 2.180499999999974e-05, 2.186100000000149e-05, 2.184699999999845e-05, 2.19030000000002e-05, 2.1929999999999866e-05, 2.184699999999845e-05, 2.191699999999977e-05, 2.1943999999999436e-05, 2.1819999999998785e-05, 2.193099999999934e-05, 2.2014000000000755e-05, 2.184700000000192e-05, 2.1943999999999436e-05, 2.1722000000001795e-05, 2.1722000000001795e-05, 2.1750000000000935e-05, 2.187500000000106e-05, 2.187499999999759e-05, 2.1986000000001615e-05, 2.1943999999999436e-05, 2.186099999999802e-05, 2.184699999999845e-05, 2.1805999999999215e-05, 2.168099999999909e-05, 2.1750000000000935e-05, 2.1778000000000075e-05, 2.187500000000106e-05, 2.1778000000000075e-05, 2.1820000000002254e-05, 2.195900000000195e-05, 2.1736000000001365e-05, 2.1820000000002254e-05, 2.1764000000000505e-05, 2.173700000000084e-05, 2.188900000000063e-05, 2.187499999999759e-05, 2.194499999999891e-05]</msg>
<status status="PASS" starttime="20201030 18:31:06.085" endtime="20201030 18:31:06.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.080" endtime="20201030 18:31:06.088"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:06.092" endtime="20201030 18:31:06.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.091" endtime="20201030 18:31:06.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.089" endtime="20201030 18:31:06.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.730" endtime="20201030 18:31:06.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.730" endtime="20201030 18:31:06.113"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.122" endtime="20201030 18:31:06.137"></status>
</kw>
<msg timestamp="20201030 18:31:06.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.120" endtime="20201030 18:31:06.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.139" endtime="20201030 18:31:06.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.142" endtime="20201030 18:31:06.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.118" endtime="20201030 18:31:06.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.115" endtime="20201030 18:31:06.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.151" endtime="20201030 18:31:06.438"></status>
</kw>
<msg timestamp="20201030 18:31:06.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022186861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022210319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:06.149" endtime="20201030 18:31:06.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022186861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022210319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:06.443" endtime="20201030 18:31:06.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.451" endtime="20201030 18:31:06.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.147" endtime="20201030 18:31:06.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.145" endtime="20201030 18:31:06.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:06.458" level="INFO">${RESULT} = [{'diff': 2.3458000000000506e-05}, {'diff': 2.284699999999945e-05}, {'diff': 2.2944000000000436e-05}, {'diff': 2.2722000000002796e-05}, {'diff': 2.284699999999945e-05}, {'diff': 2.280500000000074e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:06.455" endtime="20201030 18:31:06.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:06.463" level="INFO">${ACCURACY} = {'diff': [2.3458000000000506e-05, 2.284699999999945e-05, 2.2944000000000436e-05, 2.2722000000002796e-05, 2.284699999999945e-05, 2.280500000000074e-05, 2.2929999999997397e-05, 2.2763999999998036e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:31:06.459" endtime="20201030 18:31:06.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.468" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 18:31:06.467" endtime="20201030 18:31:06.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.471" level="INFO">VALUE: [2.3458000000000506e-05, 2.284699999999945e-05, 2.2944000000000436e-05, 2.2722000000002796e-05, 2.284699999999945e-05, 2.280500000000074e-05, 2.2929999999997397e-05, 2.2763999999998036e-05, 2.283299999999988e-05, 2.294499999999991e-05, 2.286099999999902e-05, 2.293100000000034e-05, 2.2791999999997176e-05, 2.2764000000001505e-05, 2.2721999999999326e-05, 2.2749999999998466e-05, 2.291700000000077e-05, 2.287500000000206e-05, 2.2806000000000215e-05, 2.2778000000001075e-05, 2.2806000000000215e-05, 2.290299999999773e-05, 2.293100000000034e-05, 2.2985999999999146e-05, 2.295899999999948e-05, 2.293100000000034e-05, 2.286100000000249e-05, 2.297299999999905e-05, 2.288900000000163e-05, 2.27090000000027e-05, 2.2999999999998716e-05, 2.288899999999816e-05, 2.293100000000034e-05, 2.2887999999998687e-05, 2.2749999999998466e-05, 2.283299999999988e-05, 2.269499999999966e-05, 2.2806000000000215e-05, 2.298700000000209e-05, 2.295899999999948e-05, 2.280500000000074e-05, 2.29030000000012e-05, 2.284699999999945e-05, 2.2944000000000436e-05, 2.2887999999998687e-05, 2.2694000000000186e-05, 2.2971999999999576e-05, 2.2971999999999576e-05, 2.287499999999859e-05, 2.279100000000117e-05]</msg>
<status status="PASS" starttime="20201030 18:31:06.469" endtime="20201030 18:31:06.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.464" endtime="20201030 18:31:06.472"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:06.476" endtime="20201030 18:31:06.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.474" endtime="20201030 18:31:06.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.473" endtime="20201030 18:31:06.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.114" endtime="20201030 18:31:06.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.113" endtime="20201030 18:31:06.497"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.506" endtime="20201030 18:31:06.521"></status>
</kw>
<msg timestamp="20201030 18:31:06.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.504" endtime="20201030 18:31:06.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.523" endtime="20201030 18:31:06.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.525" endtime="20201030 18:31:06.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.501" endtime="20201030 18:31:06.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.499" endtime="20201030 18:31:06.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.535" endtime="20201030 18:31:06.822"></status>
</kw>
<msg timestamp="20201030 18:31:06.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022328847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02235325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:06.533" endtime="20201030 18:31:06.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022328847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02235325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:06.827" endtime="20201030 18:31:06.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.835" endtime="20201030 18:31:06.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.531" endtime="20201030 18:31:06.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.529" endtime="20201030 18:31:06.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:06.842" level="INFO">${RESULT} = [{'diff': 2.44030000000027e-05}, {'diff': 2.3806000000001215e-05}, {'diff': 2.3749999999999466e-05}, {'diff': 2.3792000000001645e-05}, {'diff': 2.387499999999959e-05}, {'diff': 2.388900000000263e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:06.839" endtime="20201030 18:31:06.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:06.847" level="INFO">${ACCURACY} = {'diff': [2.44030000000027e-05, 2.3806000000001215e-05, 2.3749999999999466e-05, 2.3792000000001645e-05, 2.387499999999959e-05, 2.388900000000263e-05, 2.373699999999937e-05, 2.3805999999997746e-05, 2.3...</msg>
<status status="PASS" starttime="20201030 18:31:06.843" endtime="20201030 18:31:06.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.851" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 18:31:06.850" endtime="20201030 18:31:06.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.854" level="INFO">VALUE: [2.44030000000027e-05, 2.3806000000001215e-05, 2.3749999999999466e-05, 2.3792000000001645e-05, 2.387499999999959e-05, 2.388900000000263e-05, 2.373699999999937e-05, 2.3805999999997746e-05, 2.3764000000002505e-05, 2.3777999999998606e-05, 2.366699999999805e-05, 2.386100000000002e-05, 2.393100000000134e-05, 2.4000000000003185e-05, 2.380500000000174e-05, 2.394499999999744e-05, 2.394500000000091e-05, 2.390299999999873e-05, 2.373699999999937e-05, 2.3943999999997967e-05, 2.3915999999998827e-05, 2.3832999999997412e-05, 2.3930000000001866e-05, 2.384700000000045e-05, 2.3818999999997842e-05, 2.3930000000001866e-05, 2.3986000000000146e-05, 2.3972000000000576e-05, 2.3763999999999036e-05, 2.388899999999916e-05, 2.37770000000026e-05, 2.3763999999999036e-05, 2.386100000000002e-05, 2.3944000000001436e-05, 2.3735999999999896e-05, 2.3944000000001436e-05, 2.383300000000088e-05, 2.3804999999998272e-05, 2.3749999999999466e-05, 2.3999999999999716e-05, 2.3792000000001645e-05, 2.384700000000045e-05, 2.386100000000002e-05, 2.39169999999983e-05, 2.3847999999999925e-05, 2.3735999999999896e-05, 2.3958000000001006e-05, 2.3957999999997537e-05, 2.3750000000002935e-05, 2.386100000000002e-05]</msg>
<status status="PASS" starttime="20201030 18:31:06.852" endtime="20201030 18:31:06.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.847" endtime="20201030 18:31:06.855"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:06.859" endtime="20201030 18:31:06.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.857" endtime="20201030 18:31:06.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.856" endtime="20201030 18:31:06.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.498" endtime="20201030 18:31:06.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.497" endtime="20201030 18:31:06.880"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.889" endtime="20201030 18:31:06.905"></status>
</kw>
<msg timestamp="20201030 18:31:06.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.887" endtime="20201030 18:31:06.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.907" endtime="20201030 18:31:06.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.909" endtime="20201030 18:31:06.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.885" endtime="20201030 18:31:06.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.882" endtime="20201030 18:31:06.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.919" endtime="20201030 18:31:07.206"></status>
</kw>
<msg timestamp="20201030 18:31:07.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023424806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023450222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:06.917" endtime="20201030 18:31:07.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023424806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023450222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:07.211" endtime="20201030 18:31:07.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.221" endtime="20201030 18:31:07.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.915" endtime="20201030 18:31:07.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.913" endtime="20201030 18:31:07.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:07.228" level="INFO">${RESULT} = [{'diff': 2.5416000000000327e-05}, {'diff': 2.469500000000166e-05}, {'diff': 2.4735999999997427e-05}, {'diff': 2.493099999999887e-05}, {'diff': 2.481900000000231e-05}, {'diff': 2.4944000000002436e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:07.225" endtime="20201030 18:31:07.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:07.232" level="INFO">${ACCURACY} = {'diff': [2.5416000000000327e-05, 2.469500000000166e-05, 2.4735999999997427e-05, 2.493099999999887e-05, 2.481900000000231e-05, 2.4944000000002436e-05, 2.4750000000000466e-05, 2.4915999999999827e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:31:07.229" endtime="20201030 18:31:07.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.237" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 18:31:07.236" endtime="20201030 18:31:07.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.240" level="INFO">VALUE: [2.5416000000000327e-05, 2.469500000000166e-05, 2.4735999999997427e-05, 2.493099999999887e-05, 2.481900000000231e-05, 2.4944000000002436e-05, 2.4750000000000466e-05, 2.4915999999999827e-05, 2.49169999999993e-05, 2.486100000000102e-05, 2.4971999999998107e-05, 2.4846999999997982e-05, 2.4833999999997886e-05, 2.497299999999758e-05, 2.4805999999998746e-05, 2.469499999999819e-05, 2.5000000000000716e-05, 2.5014000000000286e-05, 2.4736000000000896e-05, 2.488900000000016e-05, 2.4750000000000466e-05, 2.473700000000037e-05, 2.4862000000000495e-05, 2.4736000000000896e-05, 2.4957999999998537e-05, 2.49169999999993e-05, 2.4915999999999827e-05, 2.495900000000148e-05, 2.498700000000062e-05, 2.486100000000102e-05, 2.487500000000059e-05, 2.4764000000000036e-05, 2.4818999999998842e-05, 2.4763000000000562e-05, 2.4902000000000257e-05, 2.4929999999999397e-05, 2.4736000000000896e-05, 2.4804999999999272e-05, 2.4818999999998842e-05, 2.4818999999998842e-05, 2.4750000000000466e-05, 2.5027999999999856e-05, 2.4986000000001146e-05, 2.4957999999998537e-05, 2.4736000000000896e-05, 2.4750000000000466e-05, 2.4957999999998537e-05, 2.4707999999998287e-05, 2.4722000000001326e-05, 2.4860999999997552e-05]</msg>
<status status="PASS" starttime="20201030 18:31:07.238" endtime="20201030 18:31:07.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.233" endtime="20201030 18:31:07.242"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:07.246" endtime="20201030 18:31:07.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.244" endtime="20201030 18:31:07.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.243" endtime="20201030 18:31:07.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.881" endtime="20201030 18:31:07.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.880" endtime="20201030 18:31:07.267"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.276" endtime="20201030 18:31:07.291"></status>
</kw>
<msg timestamp="20201030 18:31:07.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:07.274" endtime="20201030 18:31:07.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:07.293" endtime="20201030 18:31:07.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.295" endtime="20201030 18:31:07.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.271" endtime="20201030 18:31:07.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.269" endtime="20201030 18:31:07.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.305" endtime="20201030 18:31:07.590"></status>
</kw>
<msg timestamp="20201030 18:31:07.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022174667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022200833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:07.303" endtime="20201030 18:31:07.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022174667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022200833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:07.595" endtime="20201030 18:31:07.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.603" endtime="20201030 18:31:07.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.301" endtime="20201030 18:31:07.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.299" endtime="20201030 18:31:07.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:07.610" level="INFO">${RESULT} = [{'diff': 2.6166000000001077e-05}, {'diff': 2.5666000000000577e-05}, {'diff': 2.5957999999999537e-05}, {'diff': 2.590300000000073e-05}, {'diff': 2.590299999999726e-05}, {'diff': 2.6028000000000856e-05...</msg>
<status status="PASS" starttime="20201030 18:31:07.606" endtime="20201030 18:31:07.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:07.615" level="INFO">${ACCURACY} = {'diff': [2.6166000000001077e-05, 2.5666000000000577e-05, 2.5957999999999537e-05, 2.590300000000073e-05, 2.590299999999726e-05, 2.6028000000000856e-05, 2.5764000000001036e-05, 2.5832999999999412e-05, ...</msg>
<status status="PASS" starttime="20201030 18:31:07.611" endtime="20201030 18:31:07.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.620" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 18:31:07.619" endtime="20201030 18:31:07.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.622" level="INFO">VALUE: [2.6166000000001077e-05, 2.5666000000000577e-05, 2.5957999999999537e-05, 2.590300000000073e-05, 2.590299999999726e-05, 2.6028000000000856e-05, 2.5764000000001036e-05, 2.5832999999999412e-05, 2.5972000000002576e-05, 2.5735999999998427e-05, 2.594499999999944e-05, 2.5846999999998982e-05, 2.5736000000001896e-05, 2.583300000000288e-05, 2.5778000000000606e-05, 2.5792000000000176e-05, 2.5721999999998857e-05, 2.594499999999944e-05, 2.593099999999987e-05, 2.5735999999998427e-05, 2.5860999999998552e-05, 2.5721999999998857e-05, 2.5805999999999746e-05, 2.5972000000002576e-05, 2.5833999999998886e-05, 2.5778000000000606e-05, 2.586100000000202e-05, 2.595900000000248e-05, 2.5818999999999842e-05, 2.5805999999999746e-05, 2.566700000000005e-05, 2.593099999999987e-05, 2.565300000000048e-05, 2.5834000000002355e-05, 2.5693999999999717e-05, 2.5957999999999537e-05, 2.573700000000137e-05, 2.5722000000002326e-05, 2.5930000000000397e-05, 2.5861999999998025e-05, 2.5750000000001466e-05, 2.6000000000001716e-05, 2.584700000000245e-05, 2.5916000000000827e-05, 2.5916000000000827e-05, 2.5750000000001466e-05, 2.588900000000116e-05, 2.5972000000002576e-05, 2.5874999999998122e-05, 2.5791000000000702e-05]</msg>
<status status="PASS" starttime="20201030 18:31:07.621" endtime="20201030 18:31:07.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.616" endtime="20201030 18:31:07.624"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:07.628" endtime="20201030 18:31:07.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.626" endtime="20201030 18:31:07.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.625" endtime="20201030 18:31:07.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.268" endtime="20201030 18:31:07.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.267" endtime="20201030 18:31:07.648"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.658" endtime="20201030 18:31:07.673"></status>
</kw>
<msg timestamp="20201030 18:31:07.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:07.656" endtime="20201030 18:31:07.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:07.675" endtime="20201030 18:31:07.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.677" endtime="20201030 18:31:07.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.653" endtime="20201030 18:31:07.680"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.651" endtime="20201030 18:31:07.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.687" endtime="20201030 18:31:07.975"></status>
</kw>
<msg timestamp="20201030 18:31:07.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022268611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022295931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:07.685" endtime="20201030 18:31:07.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022268611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022295931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:07.979" endtime="20201030 18:31:07.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.988" endtime="20201030 18:31:07.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.682" endtime="20201030 18:31:07.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.681" endtime="20201030 18:31:07.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:07.994" level="INFO">${RESULT} = [{'diff': 2.7320000000000816e-05}, {'diff': 2.6819000000000842e-05}, {'diff': 2.6749999999998997e-05}, {'diff': 2.6804999999997803e-05}, {'diff': 2.6958000000000537e-05}, {'diff': 2.6777999999998137e-...</msg>
<status status="PASS" starttime="20201030 18:31:07.991" endtime="20201030 18:31:07.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:07.999" level="INFO">${ACCURACY} = {'diff': [2.7320000000000816e-05, 2.6819000000000842e-05, 2.6749999999998997e-05, 2.6804999999997803e-05, 2.6958000000000537e-05, 2.6777999999998137e-05, 2.6805000000001272e-05, 2.6777999999998137e-05...</msg>
<status status="PASS" starttime="20201030 18:31:07.995" endtime="20201030 18:31:07.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.003" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 18:31:08.002" endtime="20201030 18:31:08.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.006" level="INFO">VALUE: [2.7320000000000816e-05, 2.6819000000000842e-05, 2.6749999999998997e-05, 2.6804999999997803e-05, 2.6958000000000537e-05, 2.6777999999998137e-05, 2.6805000000001272e-05, 2.6777999999998137e-05, 2.6694000000000717e-05, 2.690300000000173e-05, 2.6874999999999122e-05, 2.6777999999998137e-05, 2.6778000000001606e-05, 2.6735999999999427e-05, 2.69170000000013e-05, 2.6888999999998692e-05, 2.6846999999999982e-05, 2.6972000000000107e-05, 2.690300000000173e-05, 2.6694000000000717e-05, 2.69170000000013e-05, 2.6833999999999886e-05, 2.6874999999999122e-05, 2.7013999999998817e-05, 2.6888999999998692e-05, 2.6735999999999427e-05, 2.69170000000013e-05, 2.693100000000087e-05, 2.694500000000044e-05, 2.690300000000173e-05, 2.6763999999998567e-05, 2.6735999999999427e-05, 2.6778000000001606e-05, 2.6874999999999122e-05, 2.6860999999999552e-05, 2.670899999999976e-05, 2.694500000000044e-05, 2.691699999999783e-05, 2.6833000000000412e-05, 2.694500000000044e-05, 2.6791000000001702e-05, 2.672299999999933e-05, 2.67369999999989e-05, 2.6805999999997276e-05, 2.6999999999999247e-05, 2.6901999999998788e-05, 2.6944000000000967e-05, 2.6764000000002036e-05, 2.6749999999998997e-05, 2.6776999999998663e-05]</msg>
<status status="PASS" starttime="20201030 18:31:08.005" endtime="20201030 18:31:08.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.000" endtime="20201030 18:31:08.008"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:08.011" endtime="20201030 18:31:08.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.010" endtime="20201030 18:31:08.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.009" endtime="20201030 18:31:08.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.649" endtime="20201030 18:31:08.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.649" endtime="20201030 18:31:08.032"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.041" endtime="20201030 18:31:08.058"></status>
</kw>
<msg timestamp="20201030 18:31:08.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:08.040" endtime="20201030 18:31:08.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:08.059" endtime="20201030 18:31:08.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.062" endtime="20201030 18:31:08.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.037" endtime="20201030 18:31:08.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.035" endtime="20201030 18:31:08.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.071" endtime="20201030 18:31:08.358"></status>
</kw>
<msg timestamp="20201030 18:31:08.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023317, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023345486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:08.070" endtime="20201030 18:31:08.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023317, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023345486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:08.362" endtime="20201030 18:31:08.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.371" endtime="20201030 18:31:08.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.067" endtime="20201030 18:31:08.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.065" endtime="20201030 18:31:08.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:08.377" level="INFO">${RESULT} = [{'diff': 2.8485999999997708e-05}, {'diff': 2.7638999999999442e-05}, {'diff': 2.7875000000000122e-05}, {'diff': 2.7875000000000122e-05}, {'diff': 2.7985999999997208e-05}, {'diff': 2.7958000000001537e-...</msg>
<status status="PASS" starttime="20201030 18:31:08.374" endtime="20201030 18:31:08.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:08.382" level="INFO">${ACCURACY} = {'diff': [2.8485999999997708e-05, 2.7638999999999442e-05, 2.7875000000000122e-05, 2.7875000000000122e-05, 2.7985999999997208e-05, 2.7958000000001537e-05, 2.7820000000001316e-05, 2.772300000000033e-05,...</msg>
<status status="PASS" starttime="20201030 18:31:08.378" endtime="20201030 18:31:08.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.387" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 18:31:08.385" endtime="20201030 18:31:08.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.389" level="INFO">VALUE: [2.8485999999997708e-05, 2.7638999999999442e-05, 2.7875000000000122e-05, 2.7875000000000122e-05, 2.7985999999997208e-05, 2.7958000000001537e-05, 2.7820000000001316e-05, 2.772300000000033e-05, 2.7944000000001967e-05, 2.7861000000000552e-05, 2.7888999999999692e-05, 2.7888999999999692e-05, 2.7888999999999692e-05, 2.77369999999999e-05, 2.798700000000015e-05, 2.7806000000001746e-05, 2.791699999999883e-05, 2.7791999999998707e-05, 2.7860999999997083e-05, 2.8068999999998623e-05, 2.77369999999999e-05, 2.7888999999999692e-05, 2.7818999999998373e-05, 2.7792000000002176e-05, 2.7915999999999358e-05, 2.7861000000000552e-05, 2.7763000000000093e-05, 2.8055999999998527e-05, 2.7805000000002272e-05, 2.7790999999999233e-05, 2.7861000000000552e-05, 2.7736000000000427e-05, 2.7943999999998498e-05, 2.7915999999999358e-05, 2.7736000000000427e-05, 2.7957999999998068e-05, 2.7763999999999567e-05, 2.7833000000001412e-05, 2.7888999999999692e-05, 2.7943999999998498e-05, 2.7763999999999567e-05, 2.8027999999999387e-05, 2.7777999999999137e-05, 2.7944000000001967e-05, 2.7957999999998068e-05, 2.7818999999998373e-05, 2.7846999999997513e-05, 2.79170000000023e-05, 2.7915999999999358e-05, 2.7888999999999692e-05]</msg>
<status status="PASS" starttime="20201030 18:31:08.388" endtime="20201030 18:31:08.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.383" endtime="20201030 18:31:08.391"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:08.395" endtime="20201030 18:31:08.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.394" endtime="20201030 18:31:08.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.392" endtime="20201030 18:31:08.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.033" endtime="20201030 18:31:08.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.032" endtime="20201030 18:31:08.416"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.425" endtime="20201030 18:31:08.441"></status>
</kw>
<msg timestamp="20201030 18:31:08.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:08.423" endtime="20201030 18:31:08.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:08.442" endtime="20201030 18:31:08.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.445" endtime="20201030 18:31:08.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.421" endtime="20201030 18:31:08.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.419" endtime="20201030 18:31:08.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.454" endtime="20201030 18:31:08.741"></status>
</kw>
<msg timestamp="20201030 18:31:08.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022149722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022179236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:08.453" endtime="20201030 18:31:08.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022149722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022179236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:08.745" endtime="20201030 18:31:08.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.754" endtime="20201030 18:31:08.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.450" endtime="20201030 18:31:08.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.448" endtime="20201030 18:31:08.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:08.761" level="INFO">${RESULT} = [{'diff': 2.9514000000001317e-05}, {'diff': 2.8722000000001857e-05}, {'diff': 2.8805999999999277e-05}, {'diff': 2.8861000000001552e-05}, {'diff': 2.895900000000201e-05}, {'diff': 2.8971999999998638e-0...</msg>
<status status="PASS" starttime="20201030 18:31:08.757" endtime="20201030 18:31:08.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:08.771" level="INFO">${ACCURACY} = {'diff': [2.9514000000001317e-05, 2.8722000000001857e-05, 2.8805999999999277e-05, 2.8861000000001552e-05, 2.895900000000201e-05, 2.8971999999998638e-05, 2.893100000000287e-05, 2.8834000000001886e-05, ...</msg>
<status status="PASS" starttime="20201030 18:31:08.763" endtime="20201030 18:31:08.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.779" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 18:31:08.777" endtime="20201030 18:31:08.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.783" level="INFO">VALUE: [2.9514000000001317e-05, 2.8722000000001857e-05, 2.8805999999999277e-05, 2.8861000000001552e-05, 2.895900000000201e-05, 2.8971999999998638e-05, 2.893100000000287e-05, 2.8834000000001886e-05, 2.8874999999997653e-05, 2.8847999999997986e-05, 2.894499999999897e-05, 2.8860999999998083e-05, 2.8875000000001122e-05, 2.8736000000001427e-05, 2.8875000000001122e-05, 2.8834000000001886e-05, 2.8818999999999373e-05, 2.8902000000000788e-05, 2.8792000000003176e-05, 2.8916999999999832e-05, 2.8736000000001427e-05, 2.8971999999998638e-05, 2.8916000000000358e-05, 2.8804999999999803e-05, 2.9028000000000387e-05, 2.8889000000000692e-05, 2.8957999999999068e-05, 2.8722000000001857e-05, 2.8833000000002412e-05, 2.9000000000001247e-05, 2.8818999999999373e-05, 2.8722000000001857e-05, 2.8847000000001982e-05, 2.8888999999997222e-05, 2.8707999999998818e-05, 2.8860999999998083e-05, 2.8735999999997958e-05, 2.8846999999998513e-05, 2.8903000000000262e-05, 2.8819999999998847e-05, 2.8804999999999803e-05, 2.8721999999998388e-05, 2.8957999999999068e-05, 2.8833000000002412e-05, 2.895899999999854e-05, 2.9068999999999623e-05, 2.894500000000244e-05, 2.8764000000000567e-05, 2.8721999999998388e-05, 2.8847000000001982e-05]</msg>
<status status="PASS" starttime="20201030 18:31:08.781" endtime="20201030 18:31:08.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.772" endtime="20201030 18:31:08.784"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:08.791" endtime="20201030 18:31:08.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.788" endtime="20201030 18:31:08.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.786" endtime="20201030 18:31:08.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.417" endtime="20201030 18:31:08.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.416" endtime="20201030 18:31:08.812"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.821" endtime="20201030 18:31:08.837"></status>
</kw>
<msg timestamp="20201030 18:31:08.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:08.820" endtime="20201030 18:31:08.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:08.838" endtime="20201030 18:31:08.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.841" endtime="20201030 18:31:08.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.817" endtime="20201030 18:31:08.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.815" endtime="20201030 18:31:08.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.850" endtime="20201030 18:31:09.138"></status>
</kw>
<msg timestamp="20201030 18:31:09.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022339528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022370167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:08.849" endtime="20201030 18:31:09.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022339528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022370167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:09.142" endtime="20201030 18:31:09.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.151" endtime="20201030 18:31:09.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.846" endtime="20201030 18:31:09.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.844" endtime="20201030 18:31:09.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:09.158" level="INFO">${RESULT} = [{'diff': 3.063899999999897e-05}, {'diff': 2.9764000000001567e-05}, {'diff': 2.9971999999999638e-05}, {'diff': 2.9819000000000373e-05}, {'diff': 2.9971999999999638e-05}, {'diff': 2.991599999999789e-05...</msg>
<status status="PASS" starttime="20201030 18:31:09.154" endtime="20201030 18:31:09.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:09.162" level="INFO">${ACCURACY} = {'diff': [3.063899999999897e-05, 2.9764000000001567e-05, 2.9971999999999638e-05, 2.9819000000000373e-05, 2.9971999999999638e-05, 2.991599999999789e-05, 2.9930000000000928e-05, 2.9875000000002122e-05, ...</msg>
<status status="PASS" starttime="20201030 18:31:09.159" endtime="20201030 18:31:09.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.167" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 18:31:09.166" endtime="20201030 18:31:09.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.169" level="INFO">VALUE: [3.063899999999897e-05, 2.9764000000001567e-05, 2.9971999999999638e-05, 2.9819000000000373e-05, 2.9971999999999638e-05, 2.991599999999789e-05, 2.9930000000000928e-05, 2.9875000000002122e-05, 2.9874999999998653e-05, 2.9958000000000068e-05, 2.9805000000000803e-05, 2.9832999999999943e-05, 2.9971999999999638e-05, 2.9903000000001262e-05, 2.9874999999998653e-05, 2.9832999999999943e-05, 2.9944000000000498e-05, 2.9860999999999083e-05, 2.9931000000000402e-05, 2.9832999999999943e-05, 2.9778000000001137e-05, 2.9721999999999388e-05, 2.9763999999998098e-05, 2.9846999999999513e-05, 2.969499999999972e-05, 2.9874999999998653e-05, 2.9874999999998653e-05, 2.9971999999999638e-05, 2.995899999999954e-05, 2.9917000000000832e-05, 2.995900000000301e-05, 3.0028000000001387e-05, 2.9792000000000707e-05, 2.9917000000000832e-05, 2.9777999999997667e-05, 2.969499999999972e-05, 2.9805000000000803e-05, 2.973699999999843e-05, 2.9819999999999847e-05, 2.9763999999998098e-05, 2.9778000000001137e-05, 2.9792000000000707e-05, 2.9776999999998194e-05, 2.9735999999998958e-05, 2.9971999999999638e-05, 2.9999999999998778e-05, 2.9861000000002552e-05, 3.0013999999998348e-05, 2.9735999999998958e-05, 2.9889000000001692e-05]</msg>
<status status="PASS" starttime="20201030 18:31:09.168" endtime="20201030 18:31:09.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.163" endtime="20201030 18:31:09.171"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:09.175" endtime="20201030 18:31:09.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.173" endtime="20201030 18:31:09.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.172" endtime="20201030 18:31:09.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.813" endtime="20201030 18:31:09.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.813" endtime="20201030 18:31:09.195"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.204" endtime="20201030 18:31:09.221"></status>
</kw>
<msg timestamp="20201030 18:31:09.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:09.203" endtime="20201030 18:31:09.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:09.222" endtime="20201030 18:31:09.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.225" endtime="20201030 18:31:09.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.200" endtime="20201030 18:31:09.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.198" endtime="20201030 18:31:09.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.234" endtime="20201030 18:31:09.520"></status>
</kw>
<msg timestamp="20201030 18:31:09.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023126069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023157, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:09.233" endtime="20201030 18:31:09.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023126069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023157, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:09.525" endtime="20201030 18:31:09.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.533" endtime="20201030 18:31:09.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.230" endtime="20201030 18:31:09.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.228" endtime="20201030 18:31:09.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:09.540" level="INFO">${RESULT} = [{'diff': 3.09310000000014e-05}, {'diff': 3.072300000000333e-05}, {'diff': 3.082000000000085e-05}, {'diff': 3.081999999999738e-05}, {'diff': 3.091700000000183e-05}, {'diff': 3.074999999999953e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:09.537" endtime="20201030 18:31:09.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:09.545" level="INFO">${ACCURACY} = {'diff': [3.09310000000014e-05, 3.072300000000333e-05, 3.082000000000085e-05, 3.081999999999738e-05, 3.091700000000183e-05, 3.074999999999953e-05, 3.07639999999991e-05, 3.098600000000021e-05, 3.076399...</msg>
<status status="PASS" starttime="20201030 18:31:09.541" endtime="20201030 18:31:09.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.549" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 18:31:09.548" endtime="20201030 18:31:09.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.552" level="INFO">VALUE: [3.09310000000014e-05, 3.072300000000333e-05, 3.082000000000085e-05, 3.081999999999738e-05, 3.091700000000183e-05, 3.074999999999953e-05, 3.07639999999991e-05, 3.098600000000021e-05, 3.07639999999991e-05, 3.070900000000029e-05, 3.090199999999932e-05, 3.091699999999836e-05, 3.09579999999976e-05, 3.072200000000039e-05, 3.088899999999922e-05, 3.094399999999803e-05, 3.0776999999999194e-05, 3.07639999999991e-05, 3.0804999999998334e-05, 3.090199999999932e-05, 3.086100000000008e-05, 3.097200000000064e-05, 3.087499999999965e-05, 3.101399999999935e-05, 3.091600000000236e-05, 3.088899999999922e-05, 3.09310000000014e-05, 3.087499999999965e-05, 3.07639999999991e-05, 3.0818999999997904e-05, 3.098600000000021e-05, 3.093099999999793e-05, 3.093099999999793e-05, 3.074999999999953e-05, 3.0818999999997904e-05, 3.09579999999976e-05, 3.095900000000054e-05, 3.07639999999991e-05, 3.080600000000128e-05, 3.091700000000183e-05, 3.081999999999738e-05, 3.072200000000039e-05, 3.083400000000042e-05, 3.102800000000239e-05, 3.0847999999999987e-05, 3.077799999999867e-05, 3.091700000000183e-05, 3.09310000000014e-05, 3.099999999999978e-05, 3.097300000000011e-05]</msg>
<status status="PASS" starttime="20201030 18:31:09.550" endtime="20201030 18:31:09.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.545" endtime="20201030 18:31:09.554"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:09.558" endtime="20201030 18:31:09.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.556" endtime="20201030 18:31:09.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.555" endtime="20201030 18:31:09.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.196" endtime="20201030 18:31:09.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.196" endtime="20201030 18:31:09.579"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.588" endtime="20201030 18:31:09.603"></status>
</kw>
<msg timestamp="20201030 18:31:09.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:09.586" endtime="20201030 18:31:09.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:09.604" endtime="20201030 18:31:09.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.607" endtime="20201030 18:31:09.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.583" endtime="20201030 18:31:09.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.581" endtime="20201030 18:31:09.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.617" endtime="20201030 18:31:09.903"></status>
</kw>
<msg timestamp="20201030 18:31:09.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022252986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022285153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:09.615" endtime="20201030 18:31:09.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022252986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022285153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:09.907" endtime="20201030 18:31:09.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.916" endtime="20201030 18:31:09.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.612" endtime="20201030 18:31:09.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.610" endtime="20201030 18:31:09.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:09.922" level="INFO">${RESULT} = [{'diff': 3.216699999999961e-05}, {'diff': 3.163899999999997e-05}, {'diff': 3.192999999999946e-05}, {'diff': 3.188800000000075e-05}, {'diff': 3.1862000000000557e-05}, {'diff': 3.197300000000111e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:09.919" endtime="20201030 18:31:09.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:09.927" level="INFO">${ACCURACY} = {'diff': [3.216699999999961e-05, 3.163899999999997e-05, 3.192999999999946e-05, 3.188800000000075e-05, 3.1862000000000557e-05, 3.197300000000111e-05, 3.175000000000053e-05, 3.194399999999903e-05, 3.179...</msg>
<status status="PASS" starttime="20201030 18:31:09.923" endtime="20201030 18:31:09.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.932" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 18:31:09.931" endtime="20201030 18:31:09.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.934" level="INFO">VALUE: [3.216699999999961e-05, 3.163899999999997e-05, 3.192999999999946e-05, 3.188800000000075e-05, 3.1862000000000557e-05, 3.197300000000111e-05, 3.175000000000053e-05, 3.194399999999903e-05, 3.1790999999999764e-05, 3.200000000000078e-05, 3.1763000000000624e-05, 3.191599999999989e-05, 3.175000000000053e-05, 3.190200000000032e-05, 3.192999999999946e-05, 3.194399999999903e-05, 3.183300000000194e-05, 3.184700000000151e-05, 3.179199999999924e-05, 3.187500000000065e-05, 3.19449999999985e-05, 3.1818999999998904e-05, 3.190299999999979e-05, 3.1832999999998474e-05, 3.18050000000028e-05, 3.197199999999817e-05, 3.191699999999936e-05, 3.194399999999903e-05, 3.179200000000271e-05, 3.173600000000096e-05, 3.194399999999903e-05, 3.19310000000024e-05, 3.175000000000053e-05, 3.200000000000078e-05, 3.19449999999985e-05, 3.183300000000194e-05, 3.184700000000151e-05, 3.197199999999817e-05, 3.187500000000065e-05, 3.188900000000022e-05, 3.173599999999749e-05, 3.188900000000022e-05, 3.191699999999936e-05, 3.175000000000053e-05, 3.186100000000108e-05, 3.180600000000228e-05, 3.187500000000065e-05, 3.198700000000068e-05, 3.192999999999946e-05, 3.175000000000053e-05]</msg>
<status status="PASS" starttime="20201030 18:31:09.933" endtime="20201030 18:31:09.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.928" endtime="20201030 18:31:09.936"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:09.939" endtime="20201030 18:31:09.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.938" endtime="20201030 18:31:09.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.936" endtime="20201030 18:31:09.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.580" endtime="20201030 18:31:09.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.579" endtime="20201030 18:31:09.960"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.969" endtime="20201030 18:31:09.986"></status>
</kw>
<msg timestamp="20201030 18:31:09.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:09.967" endtime="20201030 18:31:09.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:09.989" endtime="20201030 18:31:09.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.995" endtime="20201030 18:31:09.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.964" endtime="20201030 18:31:09.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.962" endtime="20201030 18:31:10.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.014" endtime="20201030 18:31:10.306"></status>
</kw>
<msg timestamp="20201030 18:31:10.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021656694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021690514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:10.011" endtime="20201030 18:31:10.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021656694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021690514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:10.311" endtime="20201030 18:31:10.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.319" endtime="20201030 18:31:10.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.005" endtime="20201030 18:31:10.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.002" endtime="20201030 18:31:10.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:10.326" level="INFO">${RESULT} = [{'diff': 3.382000000000038e-05}, {'diff': 3.274999999999806e-05}, {'diff': 3.302800000000092e-05}, {'diff': 3.287500000000165e-05}, {'diff': 3.27640000000011e-05}, {'diff': 3.298600000000221e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:10.322" endtime="20201030 18:31:10.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:10.330" level="INFO">${ACCURACY} = {'diff': [3.382000000000038e-05, 3.274999999999806e-05, 3.302800000000092e-05, 3.287500000000165e-05, 3.27640000000011e-05, 3.298600000000221e-05, 3.280599999999981e-05, 3.29579999999996e-05, 3.281999...</msg>
<status status="PASS" starttime="20201030 18:31:10.327" endtime="20201030 18:31:10.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.334" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 18:31:10.333" endtime="20201030 18:31:10.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.337" level="INFO">VALUE: [3.382000000000038e-05, 3.274999999999806e-05, 3.302800000000092e-05, 3.287500000000165e-05, 3.27640000000011e-05, 3.298600000000221e-05, 3.280599999999981e-05, 3.29579999999996e-05, 3.281999999999938e-05, 3.295900000000254e-05, 3.270799999999935e-05, 3.293099999999993e-05, 3.290300000000079e-05, 3.280599999999981e-05, 3.290299999999732e-05, 3.279200000000024e-05, 3.272299999999839e-05, 3.277800000000067e-05, 3.297300000000211e-05, 3.273599999999849e-05, 3.270899999999882e-05, 3.290300000000079e-05, 3.283400000000242e-05, 3.288899999999775e-05, 3.2846999999999044e-05, 3.287500000000165e-05, 3.283400000000242e-05, 3.273599999999849e-05, 3.2805000000000334e-05, 3.298599999999874e-05, 3.294400000000003e-05, 3.277800000000067e-05, 3.2832999999999474e-05, 3.291600000000089e-05, 3.2860999999998614e-05, 3.300000000000178e-05, 3.2776999999997725e-05, 3.298599999999874e-05, 3.298599999999874e-05, 3.293000000000046e-05, 3.294400000000003e-05, 3.279199999999677e-05, 3.2832999999999474e-05, 3.27640000000011e-05, 3.293000000000046e-05, 3.298599999999874e-05, 3.273599999999849e-05, 3.272199999999892e-05, 3.293099999999993e-05, 3.270800000000282e-05]</msg>
<status status="PASS" starttime="20201030 18:31:10.335" endtime="20201030 18:31:10.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.331" endtime="20201030 18:31:10.342"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:10.346" endtime="20201030 18:31:10.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.344" endtime="20201030 18:31:10.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.343" endtime="20201030 18:31:10.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.961" endtime="20201030 18:31:10.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.960" endtime="20201030 18:31:10.366"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.375" endtime="20201030 18:31:10.392"></status>
</kw>
<msg timestamp="20201030 18:31:10.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:10.373" endtime="20201030 18:31:10.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:10.394" endtime="20201030 18:31:10.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.396" endtime="20201030 18:31:10.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.371" endtime="20201030 18:31:10.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.369" endtime="20201030 18:31:10.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.405" endtime="20201030 18:31:10.692"></status>
</kw>
<msg timestamp="20201030 18:31:10.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022801819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022835833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:10.404" endtime="20201030 18:31:10.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022801819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022835833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:10.698" endtime="20201030 18:31:10.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.707" endtime="20201030 18:31:10.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.401" endtime="20201030 18:31:10.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.399" endtime="20201030 18:31:10.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:10.713" level="INFO">${RESULT} = [{'diff': 3.401399999999888e-05}, {'diff': 3.374999999999906e-05}, {'diff': 3.394399999999756e-05}, {'diff': 3.377800000000167e-05}, {'diff': 3.379199999999777e-05}, {'diff': 3.373599999999949e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:10.710" endtime="20201030 18:31:10.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:10.717" level="INFO">${ACCURACY} = {'diff': [3.401399999999888e-05, 3.374999999999906e-05, 3.394399999999756e-05, 3.377800000000167e-05, 3.379199999999777e-05, 3.373599999999949e-05, 3.382000000000038e-05, 3.373599999999949e-05, 3.3749...</msg>
<status status="PASS" starttime="20201030 18:31:10.714" endtime="20201030 18:31:10.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.722" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 18:31:10.721" endtime="20201030 18:31:10.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.724" level="INFO">VALUE: [3.401399999999888e-05, 3.374999999999906e-05, 3.394399999999756e-05, 3.377800000000167e-05, 3.379199999999777e-05, 3.373599999999949e-05, 3.382000000000038e-05, 3.373599999999949e-05, 3.374999999999906e-05, 3.374999999999906e-05, 3.383399999999995e-05, 3.383399999999995e-05, 3.393099999999746e-05, 3.377800000000167e-05, 3.384799999999952e-05, 3.377800000000167e-05, 3.37779999999982e-05, 3.401399999999888e-05, 3.386199999999909e-05, 3.369500000000025e-05, 3.397299999999964e-05, 3.390199999999885e-05, 3.383399999999995e-05, 3.374999999999906e-05, 3.390199999999885e-05, 3.3791000000001764e-05, 3.373599999999949e-05, 3.366600000000164e-05, 3.3804999999997865e-05, 3.375000000000253e-05, 3.370800000000035e-05, 3.39580000000006e-05, 3.3874999999999184e-05, 3.397200000000017e-05, 3.3860999999999614e-05, 3.401399999999888e-05, 3.376399999999863e-05, 3.391599999999842e-05, 3.393099999999746e-05, 3.393000000000146e-05, 3.374999999999906e-05, 3.3874999999999184e-05, 3.398599999999974e-05, 3.375000000000253e-05, 3.372199999999992e-05, 3.379199999999777e-05, 3.390299999999832e-05, 3.379200000000124e-05, 3.37779999999982e-05, 3.379199999999777e-05]</msg>
<status status="PASS" starttime="20201030 18:31:10.723" endtime="20201030 18:31:10.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.718" endtime="20201030 18:31:10.726"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:10.730" endtime="20201030 18:31:10.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.728" endtime="20201030 18:31:10.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.727" endtime="20201030 18:31:10.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.367" endtime="20201030 18:31:10.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.367" endtime="20201030 18:31:10.751"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.759" endtime="20201030 18:31:10.775"></status>
</kw>
<msg timestamp="20201030 18:31:10.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:10.758" endtime="20201030 18:31:10.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:10.776" endtime="20201030 18:31:10.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.779" endtime="20201030 18:31:10.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.755" endtime="20201030 18:31:10.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.753" endtime="20201030 18:31:10.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.791" endtime="20201030 18:31:11.091"></status>
</kw>
<msg timestamp="20201030 18:31:11.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021558861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021593903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:10.787" endtime="20201030 18:31:11.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021558861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021593903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:11.095" endtime="20201030 18:31:11.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.105" endtime="20201030 18:31:11.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.783" endtime="20201030 18:31:11.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.782" endtime="20201030 18:31:11.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:11.111" level="INFO">${RESULT} = [{'diff': 3.504200000000249e-05}, {'diff': 3.4624999999999934e-05}, {'diff': 3.484800000000052e-05}, {'diff': 3.4861000000000614e-05}, {'diff': 3.493000000000246e-05}, {'diff': 3.4902999999999323e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:11.108" endtime="20201030 18:31:11.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:11.116" level="INFO">${ACCURACY} = {'diff': [3.504200000000249e-05, 3.4624999999999934e-05, 3.484800000000052e-05, 3.4861000000000614e-05, 3.493000000000246e-05, 3.4902999999999323e-05, 3.4833000000001474e-05, 3.492999999999899e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:31:11.112" endtime="20201030 18:31:11.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.120" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 18:31:11.119" endtime="20201030 18:31:11.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.123" level="INFO">VALUE: [3.504200000000249e-05, 3.4624999999999934e-05, 3.484800000000052e-05, 3.4861000000000614e-05, 3.493000000000246e-05, 3.4902999999999323e-05, 3.4833000000001474e-05, 3.492999999999899e-05, 3.47640000000031e-05, 3.473600000000049e-05, 3.4819000000001904e-05, 3.495799999999813e-05, 3.4875000000000184e-05, 3.4805000000002334e-05, 3.470800000000135e-05, 3.473600000000049e-05, 3.491599999999942e-05, 3.495799999999813e-05, 3.49580000000016e-05, 3.4902999999999323e-05, 3.472200000000092e-05, 3.494399999999856e-05, 3.495799999999813e-05, 3.4833000000001474e-05, 3.4888999999999754e-05, 3.498600000000074e-05, 3.481999999999791e-05, 3.481999999999791e-05, 3.497200000000117e-05, 3.498600000000074e-05, 3.47779999999992e-05, 3.497299999999717e-05, 3.4846999999997574e-05, 3.495900000000107e-05, 3.4861000000000614e-05, 3.480599999999834e-05, 3.4902999999999323e-05, 3.473599999999702e-05, 3.4888999999999754e-05, 3.497300000000064e-05, 3.47779999999992e-05, 3.491700000000236e-05, 3.484799999999705e-05, 3.504199999999902e-05, 3.4875000000000184e-05, 3.475000000000006e-05, 3.494399999999856e-05, 3.4832999999998004e-05, 3.493099999999846e-05, 3.4818999999998435e-05]</msg>
<status status="PASS" starttime="20201030 18:31:11.122" endtime="20201030 18:31:11.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.117" endtime="20201030 18:31:11.124"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:11.128" endtime="20201030 18:31:11.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.126" endtime="20201030 18:31:11.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.125" endtime="20201030 18:31:11.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.751" endtime="20201030 18:31:11.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.751" endtime="20201030 18:31:11.149"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.157" endtime="20201030 18:31:11.173"></status>
</kw>
<msg timestamp="20201030 18:31:11.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:11.156" endtime="20201030 18:31:11.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:11.175" endtime="20201030 18:31:11.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.177" endtime="20201030 18:31:11.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.153" endtime="20201030 18:31:11.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.151" endtime="20201030 18:31:11.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.186" endtime="20201030 18:31:11.473"></status>
</kw>
<msg timestamp="20201030 18:31:11.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021567681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021604111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:11.185" endtime="20201030 18:31:11.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021567681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021604111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:11.477" endtime="20201030 18:31:11.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.486" endtime="20201030 18:31:11.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.182" endtime="20201030 18:31:11.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.181" endtime="20201030 18:31:11.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:11.492" level="INFO">${RESULT} = [{'diff': 3.643000000000049e-05}, {'diff': 3.580600000000281e-05}, {'diff': 3.5903000000000324e-05}, {'diff': 3.573599999999802e-05}, {'diff': 3.598700000000121e-05}, {'diff': 3.580599999999934e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:11.489" endtime="20201030 18:31:11.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:11.496" level="INFO">${ACCURACY} = {'diff': [3.643000000000049e-05, 3.580600000000281e-05, 3.5903000000000324e-05, 3.573599999999802e-05, 3.598700000000121e-05, 3.580599999999934e-05, 3.581999999999891e-05, 3.569499999999878e-05, 3.587...</msg>
<status status="PASS" starttime="20201030 18:31:11.493" endtime="20201030 18:31:11.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.502" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 18:31:11.501" endtime="20201030 18:31:11.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.504" level="INFO">VALUE: [3.643000000000049e-05, 3.580600000000281e-05, 3.5903000000000324e-05, 3.573599999999802e-05, 3.598700000000121e-05, 3.580599999999934e-05, 3.581999999999891e-05, 3.569499999999878e-05, 3.5875000000001184e-05, 3.5903000000000324e-05, 3.5916999999999893e-05, 3.57780000000002e-05, 3.598600000000174e-05, 3.600000000000131e-05, 3.572200000000192e-05, 3.599999999999784e-05, 3.570799999999888e-05, 3.5818999999999435e-05, 3.573599999999802e-05, 3.575000000000106e-05, 3.592999999999999e-05, 3.5903000000000324e-05, 3.595799999999913e-05, 3.59580000000026e-05, 3.597200000000217e-05, 3.573599999999802e-05, 3.573599999999802e-05, 3.573599999999802e-05, 3.573599999999802e-05, 3.59719999999987e-05, 3.569399999999931e-05, 3.57780000000002e-05, 3.5861000000001614e-05, 3.5889000000000754e-05, 3.5847000000002044e-05, 3.581999999999891e-05, 3.57780000000002e-05, 3.59450000000025e-05, 3.5860999999998144e-05, 3.572199999999845e-05, 3.6055000000000115e-05, 3.5903000000000324e-05, 3.5805000000003334e-05, 3.592999999999999e-05, 3.592999999999999e-05, 3.593099999999946e-05, 3.581999999999891e-05, 3.598600000000174e-05, 3.569500000000225e-05, 3.601400000000088e-05]</msg>
<status status="PASS" starttime="20201030 18:31:11.503" endtime="20201030 18:31:11.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.497" endtime="20201030 18:31:11.506"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:11.509" endtime="20201030 18:31:11.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.508" endtime="20201030 18:31:11.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.507" endtime="20201030 18:31:11.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.149" endtime="20201030 18:31:11.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.149" endtime="20201030 18:31:11.530"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.538" endtime="20201030 18:31:11.555"></status>
</kw>
<msg timestamp="20201030 18:31:11.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:11.537" endtime="20201030 18:31:11.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:11.556" endtime="20201030 18:31:11.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.559" endtime="20201030 18:31:11.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.534" endtime="20201030 18:31:11.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.532" endtime="20201030 18:31:11.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.568" endtime="20201030 18:31:11.854"></status>
</kw>
<msg timestamp="20201030 18:31:11.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022370792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022408208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:11.566" endtime="20201030 18:31:11.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022370792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022408208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:11.858" endtime="20201030 18:31:11.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.866" endtime="20201030 18:31:11.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.564" endtime="20201030 18:31:11.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.562" endtime="20201030 18:31:11.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:11.873" level="INFO">${RESULT} = [{'diff': 3.741599999999845e-05}, {'diff': 3.672199999999945e-05}, {'diff': 3.6805000000000865e-05}, {'diff': 3.69719999999997e-05}, {'diff': 3.674999999999859e-05}, {'diff': 3.694400000000056e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:11.870" endtime="20201030 18:31:11.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:11.877" level="INFO">${ACCURACY} = {'diff': [3.741599999999845e-05, 3.672199999999945e-05, 3.6805000000000865e-05, 3.69719999999997e-05, 3.674999999999859e-05, 3.694400000000056e-05, 3.6860999999999144e-05, 3.675000000000206e-05, 3.690...</msg>
<status status="PASS" starttime="20201030 18:31:11.874" endtime="20201030 18:31:11.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.881" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 18:31:11.880" endtime="20201030 18:31:11.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.884" level="INFO">VALUE: [3.741599999999845e-05, 3.672199999999945e-05, 3.6805000000000865e-05, 3.69719999999997e-05, 3.674999999999859e-05, 3.694400000000056e-05, 3.6860999999999144e-05, 3.675000000000206e-05, 3.6902999999997854e-05, 3.6833000000000005e-05, 3.670799999999988e-05, 3.6875000000002184e-05, 3.6846999999999575e-05, 3.6833000000000005e-05, 3.681999999999991e-05, 3.673599999999902e-05, 3.675000000000206e-05, 3.6931000000000463e-05, 3.69589999999996e-05, 3.686200000000209e-05, 3.694500000000003e-05, 3.676400000000163e-05, 3.6916999999997424e-05, 3.6903000000001324e-05, 3.695800000000013e-05, 3.673699999999849e-05, 3.6846999999999575e-05, 3.6860999999999144e-05, 3.698599999999927e-05, 3.69719999999997e-05, 3.67780000000012e-05, 3.6846999999999575e-05, 3.690200000000185e-05, 3.680600000000034e-05, 3.695800000000013e-05, 3.673599999999902e-05, 3.6888999999998284e-05, 3.676400000000163e-05, 3.6874999999998714e-05, 3.676399999999816e-05, 3.695800000000013e-05, 3.67919999999973e-05, 3.6819000000000435e-05, 3.675000000000206e-05, 3.676399999999816e-05, 3.676399999999816e-05, 3.698599999999927e-05, 3.681999999999991e-05, 3.6889000000001754e-05, 3.6916999999997424e-05]</msg>
<status status="PASS" starttime="20201030 18:31:11.882" endtime="20201030 18:31:11.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.878" endtime="20201030 18:31:11.886"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:11.889" endtime="20201030 18:31:11.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.888" endtime="20201030 18:31:11.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.887" endtime="20201030 18:31:11.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.531" endtime="20201030 18:31:11.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.530" endtime="20201030 18:31:11.910"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.919" endtime="20201030 18:31:11.934"></status>
</kw>
<msg timestamp="20201030 18:31:11.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:11.917" endtime="20201030 18:31:11.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:11.936" endtime="20201030 18:31:11.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.938" endtime="20201030 18:31:11.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.915" endtime="20201030 18:31:11.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.912" endtime="20201030 18:31:11.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.947" endtime="20201030 18:31:12.233"></status>
</kw>
<msg timestamp="20201030 18:31:12.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021555542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021594236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:11.946" endtime="20201030 18:31:12.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021555542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021594236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:12.237" endtime="20201030 18:31:12.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.245" endtime="20201030 18:31:12.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.943" endtime="20201030 18:31:12.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.941" endtime="20201030 18:31:12.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:12.252" level="INFO">${RESULT} = [{'diff': 3.869399999999884e-05}, {'diff': 3.7847000000000575e-05}, {'diff': 3.7888999999999284e-05}, {'diff': 3.7903000000002324e-05}, {'diff': 3.7931000000001464e-05}, {'diff': 3.781999999999744e-05...</msg>
<status status="PASS" starttime="20201030 18:31:12.248" endtime="20201030 18:31:12.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:12.259" level="INFO">${ACCURACY} = {'diff': [3.869399999999884e-05, 3.7847000000000575e-05, 3.7888999999999284e-05, 3.7903000000002324e-05, 3.7931000000001464e-05, 3.781999999999744e-05, 3.783400000000048e-05, 3.7945000000001033e-05, 3...</msg>
<status status="PASS" starttime="20201030 18:31:12.253" endtime="20201030 18:31:12.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.263" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 18:31:12.262" endtime="20201030 18:31:12.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.266" level="INFO">VALUE: [3.869399999999884e-05, 3.7847000000000575e-05, 3.7888999999999284e-05, 3.7903000000002324e-05, 3.7931000000001464e-05, 3.781999999999744e-05, 3.783400000000048e-05, 3.7945000000001033e-05, 3.799999999999984e-05, 3.7861000000000145e-05, 3.772299999999992e-05, 3.781999999999744e-05, 3.788799999999981e-05, 3.790199999999938e-05, 3.7888999999999284e-05, 3.7763000000003155e-05, 3.79720000000007e-05, 3.791599999999895e-05, 3.774999999999959e-05, 3.7874999999999714e-05, 3.7832999999997535e-05, 3.779200000000177e-05, 3.7847000000000575e-05, 3.7861000000000145e-05, 3.769400000000131e-05, 3.7888999999999284e-05, 3.792999999999852e-05, 3.794400000000156e-05, 3.780599999999787e-05, 3.773600000000002e-05, 3.7888999999999284e-05, 3.801399999999941e-05, 3.777799999999873e-05, 3.7847000000000575e-05, 3.7945000000001033e-05, 3.7888999999999284e-05, 3.774999999999959e-05, 3.7832999999997535e-05, 3.774999999999959e-05, 3.782000000000091e-05, 3.798600000000027e-05, 3.7708999999996884e-05, 3.776399999999916e-05, 3.7930999999997994e-05, 3.77780000000022e-05, 3.7931000000001464e-05, 3.7944999999997564e-05, 3.77780000000022e-05, 3.7819000000001435e-05, 3.79590000000006e-05]</msg>
<status status="PASS" starttime="20201030 18:31:12.265" endtime="20201030 18:31:12.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.260" endtime="20201030 18:31:12.267"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:12.271" endtime="20201030 18:31:12.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.269" endtime="20201030 18:31:12.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.268" endtime="20201030 18:31:12.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.911" endtime="20201030 18:31:12.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.910" endtime="20201030 18:31:12.292"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.301" endtime="20201030 18:31:12.316"></status>
</kw>
<msg timestamp="20201030 18:31:12.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.300" endtime="20201030 18:31:12.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.318" endtime="20201030 18:31:12.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.320" endtime="20201030 18:31:12.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.296" endtime="20201030 18:31:12.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.294" endtime="20201030 18:31:12.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.329" endtime="20201030 18:31:12.615"></status>
</kw>
<msg timestamp="20201030 18:31:12.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022799514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022839194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:12.328" endtime="20201030 18:31:12.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022799514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022839194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:12.619" endtime="20201030 18:31:12.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.628" endtime="20201030 18:31:12.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.325" endtime="20201030 18:31:12.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.324" endtime="20201030 18:31:12.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:12.634" level="INFO">${RESULT} = [{'diff': 3.968000000000027e-05}, {'diff': 3.8639000000000034e-05}, {'diff': 3.8889000000000284e-05}, {'diff': 3.8860999999997675e-05}, {'diff': 3.894399999999909e-05}, {'diff': 3.8888999999996815e-05...</msg>
<status status="PASS" starttime="20201030 18:31:12.631" endtime="20201030 18:31:12.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:12.638" level="INFO">${ACCURACY} = {'diff': [3.968000000000027e-05, 3.8639000000000034e-05, 3.8889000000000284e-05, 3.8860999999997675e-05, 3.894399999999909e-05, 3.8888999999996815e-05, 3.8833000000002005e-05, 3.8818999999998965e-05, ...</msg>
<status status="PASS" starttime="20201030 18:31:12.635" endtime="20201030 18:31:12.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.642" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 18:31:12.641" endtime="20201030 18:31:12.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.645" level="INFO">VALUE: [3.968000000000027e-05, 3.8639000000000034e-05, 3.8889000000000284e-05, 3.8860999999997675e-05, 3.894399999999909e-05, 3.8888999999996815e-05, 3.8833000000002005e-05, 3.8818999999998965e-05, 3.8847000000001575e-05, 3.877799999999973e-05, 3.87919999999993e-05, 3.8695000000001784e-05, 3.8847000000001575e-05, 3.8695000000001784e-05, 3.8832999999998535e-05, 3.881999999999844e-05, 3.877799999999973e-05, 3.875000000000059e-05, 3.8930999999998994e-05, 3.8708999999997884e-05, 3.87919999999993e-05, 3.8945000000002034e-05, 3.8722999999997454e-05, 3.8860999999997675e-05, 3.8944999999998564e-05, 3.8958999999998134e-05, 3.883400000000148e-05, 3.873700000000049e-05, 3.880600000000234e-05, 3.8902999999999854e-05, 3.873600000000102e-05, 3.895800000000213e-05, 3.870800000000188e-05, 3.8777000000000256e-05, 3.872200000000145e-05, 3.8889000000000284e-05, 3.895799999999866e-05, 3.8846999999998105e-05, 3.895799999999866e-05, 3.892999999999952e-05, 3.875000000000059e-05, 3.8832999999998535e-05, 3.8889000000000284e-05, 3.897300000000117e-05, 3.875000000000059e-05, 3.8805000000002865e-05, 3.876400000000016e-05, 3.906999999999869e-05, 3.8875000000000715e-05, 3.87919999999993e-05]</msg>
<status status="PASS" starttime="20201030 18:31:12.644" endtime="20201030 18:31:12.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.639" endtime="20201030 18:31:12.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:12.650" endtime="20201030 18:31:12.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.649" endtime="20201030 18:31:12.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.647" endtime="20201030 18:31:12.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.292" endtime="20201030 18:31:12.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.292" endtime="20201030 18:31:12.671"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.679" endtime="20201030 18:31:12.696"></status>
</kw>
<msg timestamp="20201030 18:31:12.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.678" endtime="20201030 18:31:12.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.698" endtime="20201030 18:31:12.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.701" endtime="20201030 18:31:12.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.675" endtime="20201030 18:31:12.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.673" endtime="20201030 18:31:12.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.710" endtime="20201030 18:31:12.996"></status>
</kw>
<msg timestamp="20201030 18:31:13.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022419806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022460389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:12.709" endtime="20201030 18:31:13.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022419806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022460389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:13.001" endtime="20201030 18:31:13.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.009" endtime="20201030 18:31:13.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.706" endtime="20201030 18:31:13.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.705" endtime="20201030 18:31:13.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:13.016" level="INFO">${RESULT} = [{'diff': 4.0583000000000286e-05}, {'diff': 3.977800000000073e-05}, {'diff': 3.9722999999998454e-05}, {'diff': 3.9986999999998274e-05}, {'diff': 3.97920000000003e-05}, {'diff': 3.9917000000000424e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:13.012" endtime="20201030 18:31:13.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:13.020" level="INFO">${ACCURACY} = {'diff': [4.0583000000000286e-05, 3.977800000000073e-05, 3.9722999999998454e-05, 3.9986999999998274e-05, 3.97920000000003e-05, 3.9917000000000424e-05, 3.990200000000138e-05, 3.9708999999998884e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:31:13.017" endtime="20201030 18:31:13.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.024" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 18:31:13.023" endtime="20201030 18:31:13.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.027" level="INFO">VALUE: [4.0583000000000286e-05, 3.977800000000073e-05, 3.9722999999998454e-05, 3.9986999999998274e-05, 3.97920000000003e-05, 3.9917000000000424e-05, 3.990200000000138e-05, 3.9708999999998884e-05, 3.988799999999834e-05, 3.998600000000227e-05, 3.995799999999966e-05, 3.9874999999998245e-05, 3.9777000000001256e-05, 3.972199999999898e-05, 3.9903000000000854e-05, 3.993000000000052e-05, 3.976400000000116e-05, 3.994400000000009e-05, 3.995799999999966e-05, 3.9903000000000854e-05, 3.977800000000073e-05, 3.994400000000009e-05, 3.9875000000001715e-05, 3.9666999999996705e-05, 3.973599999999855e-05, 3.976400000000116e-05, 3.9832999999999535e-05, 3.9917000000000424e-05, 3.974999999999812e-05, 3.9875000000001715e-05, 3.9903000000000854e-05, 3.998600000000227e-05, 3.973599999999855e-05, 3.973599999999855e-05, 3.9930999999999994e-05, 3.9959000000002604e-05, 3.972199999999898e-05, 3.980599999999987e-05, 3.9736999999998024e-05, 3.9889000000001285e-05, 3.9846999999999105e-05, 3.9930999999999994e-05, 3.999999999999837e-05, 3.980599999999987e-05, 3.970800000000288e-05, 3.995799999999966e-05, 3.997199999999923e-05, 3.9777000000001256e-05, 3.9763000000001686e-05, 3.995799999999966e-05]</msg>
<status status="PASS" starttime="20201030 18:31:13.025" endtime="20201030 18:31:13.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.021" endtime="20201030 18:31:13.029"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:13.032" endtime="20201030 18:31:13.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.031" endtime="20201030 18:31:13.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.030" endtime="20201030 18:31:13.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.672" endtime="20201030 18:31:13.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.671" endtime="20201030 18:31:13.053"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.062" endtime="20201030 18:31:13.077"></status>
</kw>
<msg timestamp="20201030 18:31:13.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.060" endtime="20201030 18:31:13.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.079" endtime="20201030 18:31:13.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.081" endtime="20201030 18:31:13.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.058" endtime="20201030 18:31:13.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.055" endtime="20201030 18:31:13.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.090" endtime="20201030 18:31:13.376"></status>
</kw>
<msg timestamp="20201030 18:31:13.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021560889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021602625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:13.089" endtime="20201030 18:31:13.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021560889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021602625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:13.381" endtime="20201030 18:31:13.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.389" endtime="20201030 18:31:13.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.086" endtime="20201030 18:31:13.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.085" endtime="20201030 18:31:13.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:13.396" level="INFO">${RESULT} = [{'diff': 4.173600000000055e-05}, {'diff': 4.0917000000001424e-05}, {'diff': 4.077799999999826e-05}, {'diff': 4.0972999999999704e-05}, {'diff': 4.0681000000000744e-05}, {'diff': 4.0723000000002924e-05...</msg>
<status status="PASS" starttime="20201030 18:31:13.393" endtime="20201030 18:31:13.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:13.401" level="INFO">${ACCURACY} = {'diff': [4.173600000000055e-05, 4.0917000000001424e-05, 4.077799999999826e-05, 4.0972999999999704e-05, 4.0681000000000744e-05, 4.0723000000002924e-05, 4.076399999999869e-05, 4.080600000000087e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:31:13.397" endtime="20201030 18:31:13.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.406" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 18:31:13.405" endtime="20201030 18:31:13.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.409" level="INFO">VALUE: [4.173600000000055e-05, 4.0917000000001424e-05, 4.077799999999826e-05, 4.0972999999999704e-05, 4.0681000000000744e-05, 4.0723000000002924e-05, 4.076399999999869e-05, 4.080600000000087e-05, 4.0917000000001424e-05, 4.090199999999891e-05, 4.0805000000001396e-05, 4.0776999999998786e-05, 4.073599999999955e-05, 4.099999999999937e-05, 4.0889000000002285e-05, 4.097200000000023e-05, 4.097200000000023e-05, 4.0902999999998385e-05, 4.076400000000216e-05, 4.070800000000041e-05, 4.0889000000002285e-05, 4.101399999999894e-05, 4.0875000000002715e-05, 4.072199999999998e-05, 4.072199999999998e-05, 4.097200000000023e-05, 4.0903000000001855e-05, 4.0931000000000994e-05, 4.0889000000002285e-05, 4.101399999999894e-05, 4.082000000000044e-05, 4.082000000000044e-05, 4.0944999999997095e-05, 4.0860999999999675e-05, 4.081999999999697e-05, 4.07920000000013e-05, 4.081999999999697e-05, 4.091599999999848e-05, 4.0987000000002743e-05, 4.0708999999999884e-05, 4.0986999999999274e-05, 4.0805000000001396e-05, 4.088799999999934e-05, 4.077800000000173e-05, 4.0736999999999024e-05, 4.0833000000000536e-05, 4.0790999999998356e-05, 4.090200000000238e-05, 4.072199999999998e-05, 4.0860999999999675e-05]</msg>
<status status="PASS" starttime="20201030 18:31:13.407" endtime="20201030 18:31:13.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.402" endtime="20201030 18:31:13.410"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:13.414" endtime="20201030 18:31:13.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.412" endtime="20201030 18:31:13.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.411" endtime="20201030 18:31:13.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.054" endtime="20201030 18:31:13.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.053" endtime="20201030 18:31:13.435"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.445" endtime="20201030 18:31:13.461"></status>
</kw>
<msg timestamp="20201030 18:31:13.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.443" endtime="20201030 18:31:13.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.462" endtime="20201030 18:31:13.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.465" endtime="20201030 18:31:13.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.440" endtime="20201030 18:31:13.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.437" endtime="20201030 18:31:13.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.474" endtime="20201030 18:31:13.777"></status>
</kw>
<msg timestamp="20201030 18:31:13.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023535722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023577972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:13.473" endtime="20201030 18:31:13.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023535722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023577972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:13.787" endtime="20201030 18:31:13.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.806" endtime="20201030 18:31:13.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.470" endtime="20201030 18:31:13.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.468" endtime="20201030 18:31:13.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:13.819" level="INFO">${RESULT} = [{'diff': 4.225000000000062e-05}, {'diff': 4.1709000000000884e-05}, {'diff': 4.173600000000055e-05}, {'diff': 4.173600000000055e-05}, {'diff': 4.1930999999998525e-05}, {'diff': 4.183400000000101e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:13.814" endtime="20201030 18:31:13.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:13.823" level="INFO">${ACCURACY} = {'diff': [4.225000000000062e-05, 4.1709000000000884e-05, 4.173600000000055e-05, 4.173600000000055e-05, 4.1930999999998525e-05, 4.183400000000101e-05, 4.1888999999999815e-05, 4.175000000000012e-05, 4.1...</msg>
<status status="PASS" starttime="20201030 18:31:13.820" endtime="20201030 18:31:13.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.828" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 18:31:13.827" endtime="20201030 18:31:13.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.830" level="INFO">VALUE: [4.225000000000062e-05, 4.1709000000000884e-05, 4.173600000000055e-05, 4.173600000000055e-05, 4.1930999999998525e-05, 4.183400000000101e-05, 4.1888999999999815e-05, 4.175000000000012e-05, 4.1888999999999815e-05, 4.184800000000058e-05, 4.17920000000023e-05, 4.1930999999998525e-05, 4.176399999999969e-05, 4.19860000000008e-05, 4.195799999999819e-05, 4.1888999999999815e-05, 4.177800000000273e-05, 4.1847000000001106e-05, 4.201399999999994e-05, 4.190199999999991e-05, 4.173599999999708e-05, 4.195800000000166e-05, 4.193000000000252e-05, 4.1804999999998926e-05, 4.1847000000001106e-05, 4.195799999999819e-05, 4.166599999999923e-05, 4.194400000000209e-05, 4.200000000000037e-05, 4.1888999999999815e-05, 4.194399999999862e-05, 4.1860999999997206e-05, 4.168000000000227e-05, 4.176399999999969e-05, 4.201399999999994e-05, 4.1832999999998066e-05, 4.1930999999998525e-05, 4.1833000000001536e-05, 4.19860000000008e-05, 4.176399999999969e-05, 4.200000000000037e-05, 4.181999999999797e-05, 4.183400000000101e-05, 4.1945000000001564e-05, 4.1973000000000704e-05, 4.175000000000012e-05, 4.1902999999999385e-05, 4.1709000000000884e-05, 4.1973000000000704e-05, 4.188800000000034e-05]</msg>
<status status="PASS" starttime="20201030 18:31:13.829" endtime="20201030 18:31:13.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.824" endtime="20201030 18:31:13.832"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:13.836" endtime="20201030 18:31:13.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.834" endtime="20201030 18:31:13.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.833" endtime="20201030 18:31:13.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.436" endtime="20201030 18:31:13.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.435" endtime="20201030 18:31:13.857"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.867" endtime="20201030 18:31:13.884"></status>
</kw>
<msg timestamp="20201030 18:31:13.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.865" endtime="20201030 18:31:13.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.886" endtime="20201030 18:31:13.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.889" endtime="20201030 18:31:13.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.862" endtime="20201030 18:31:13.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.860" endtime="20201030 18:31:13.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.898" endtime="20201030 18:31:14.185"></status>
</kw>
<msg timestamp="20201030 18:31:14.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024736931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024780542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:13.897" endtime="20201030 18:31:14.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024736931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024780542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:14.189" endtime="20201030 18:31:14.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.197" endtime="20201030 18:31:14.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.894" endtime="20201030 18:31:14.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.892" endtime="20201030 18:31:14.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:14.204" level="INFO">${RESULT} = [{'diff': 4.3610999999998956e-05}, {'diff': 4.270799999999894e-05}, {'diff': 4.293000000000005e-05}, {'diff': 4.2874999999997776e-05}, {'diff': 4.277800000000026e-05}, {'diff': 4.297199999999876e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:14.201" endtime="20201030 18:31:14.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:14.208" level="INFO">${ACCURACY} = {'diff': [4.3610999999998956e-05, 4.270799999999894e-05, 4.293000000000005e-05, 4.2874999999997776e-05, 4.277800000000026e-05, 4.297199999999876e-05, 4.29860000000018e-05, 4.2916999999999955e-05, 4.27...</msg>
<status status="PASS" starttime="20201030 18:31:14.205" endtime="20201030 18:31:14.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.212" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 18:31:14.211" endtime="20201030 18:31:14.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.215" level="INFO">VALUE: [4.3610999999998956e-05, 4.270799999999894e-05, 4.293000000000005e-05, 4.2874999999997776e-05, 4.277800000000026e-05, 4.297199999999876e-05, 4.29860000000018e-05, 4.2916999999999955e-05, 4.277800000000026e-05, 4.2833000000002536e-05, 4.29860000000018e-05, 4.295799999999919e-05, 4.277800000000026e-05, 4.276399999999722e-05, 4.2874999999997776e-05, 4.276400000000069e-05, 4.281999999999897e-05, 4.273600000000155e-05, 4.2930999999999525e-05, 4.2846999999998636e-05, 4.284800000000158e-05, 4.291600000000048e-05, 4.300000000000137e-05, 4.2903000000000385e-05, 4.302800000000051e-05, 4.2804999999999926e-05, 4.297199999999876e-05, 4.276400000000069e-05, 4.2987000000001274e-05, 4.2861000000001676e-05, 4.277700000000079e-05, 4.269399999999937e-05, 4.277699999999732e-05, 4.29860000000018e-05, 4.294399999999962e-05, 4.2804999999999926e-05, 4.2861000000001676e-05, 4.294399999999962e-05, 4.294399999999962e-05, 4.293000000000005e-05, 4.295799999999919e-05, 4.29860000000018e-05, 4.277800000000026e-05, 4.2874999999997776e-05, 4.2832999999999066e-05, 4.275000000000112e-05, 4.2903000000000385e-05, 4.2903000000000385e-05, 4.29860000000018e-05, 4.2944999999999095e-05]</msg>
<status status="PASS" starttime="20201030 18:31:14.213" endtime="20201030 18:31:14.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.209" endtime="20201030 18:31:14.217"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:14.221" endtime="20201030 18:31:14.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.219" endtime="20201030 18:31:14.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.218" endtime="20201030 18:31:14.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.858" endtime="20201030 18:31:14.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.857" endtime="20201030 18:31:14.241"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.250" endtime="20201030 18:31:14.267"></status>
</kw>
<msg timestamp="20201030 18:31:14.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:14.248" endtime="20201030 18:31:14.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:14.268" endtime="20201030 18:31:14.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.271" endtime="20201030 18:31:14.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.246" endtime="20201030 18:31:14.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.244" endtime="20201030 18:31:14.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.280" endtime="20201030 18:31:14.576"></status>
</kw>
<msg timestamp="20201030 18:31:14.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022120875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022165292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:14.278" endtime="20201030 18:31:14.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022120875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022165292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:14.585" endtime="20201030 18:31:14.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.603" endtime="20201030 18:31:14.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.276" endtime="20201030 18:31:14.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.274" endtime="20201030 18:31:14.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:14.617" level="INFO">${RESULT} = [{'diff': 4.4416999999997986e-05}, {'diff': 4.3860999999999206e-05}, {'diff': 4.380499999999746e-05}, {'diff': 4.3860999999999206e-05}, {'diff': 4.391600000000148e-05}, {'diff': 4.395800000000019e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:14.610" endtime="20201030 18:31:14.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:14.627" level="INFO">${ACCURACY} = {'diff': [4.4416999999997986e-05, 4.3860999999999206e-05, 4.380499999999746e-05, 4.3860999999999206e-05, 4.391600000000148e-05, 4.395800000000019e-05, 4.366600000000123e-05, 4.3847000000003106e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:31:14.619" endtime="20201030 18:31:14.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.632" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 18:31:14.630" endtime="20201030 18:31:14.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.634" level="INFO">VALUE: [4.4416999999997986e-05, 4.3860999999999206e-05, 4.380499999999746e-05, 4.3860999999999206e-05, 4.391600000000148e-05, 4.395800000000019e-05, 4.366600000000123e-05, 4.3847000000003106e-05, 4.39999999999989e-05, 4.379200000000083e-05, 4.377799999999779e-05, 4.379200000000083e-05, 4.394400000000062e-05, 4.3833000000000066e-05, 4.3903000000001385e-05, 4.3889000000001815e-05, 4.3889000000001815e-05, 4.377800000000126e-05, 4.3681000000000275e-05, 4.398599999999933e-05, 4.3889000000001815e-05, 4.3945000000000095e-05, 4.397199999999976e-05, 4.380599999999693e-05, 4.3958999999999665e-05, 4.384800000000258e-05, 4.3917000000000955e-05, 4.3708999999999415e-05, 4.3930999999997056e-05, 4.377800000000126e-05, 4.386200000000215e-05, 4.3888999999998346e-05, 4.3708999999999415e-05, 4.390200000000191e-05, 4.393000000000105e-05, 4.393000000000105e-05, 4.394399999999715e-05, 4.375000000000212e-05, 4.390200000000191e-05, 4.3874999999998776e-05, 4.394400000000062e-05, 4.372199999999951e-05, 4.377800000000126e-05, 4.377800000000126e-05, 4.3805000000000927e-05, 4.398599999999933e-05, 4.3805000000000927e-05, 4.376399999999822e-05, 4.3903000000001385e-05, 4.398599999999933e-05]</msg>
<status status="PASS" starttime="20201030 18:31:14.633" endtime="20201030 18:31:14.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.628" endtime="20201030 18:31:14.635"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:14.639" endtime="20201030 18:31:14.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.638" endtime="20201030 18:31:14.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.636" endtime="20201030 18:31:14.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.242" endtime="20201030 18:31:14.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.242" endtime="20201030 18:31:14.660"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.668" endtime="20201030 18:31:14.685"></status>
</kw>
<msg timestamp="20201030 18:31:14.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:14.667" endtime="20201030 18:31:14.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:14.686" endtime="20201030 18:31:14.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.689" endtime="20201030 18:31:14.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.664" endtime="20201030 18:31:14.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.662" endtime="20201030 18:31:14.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.698" endtime="20201030 18:31:14.984"></status>
</kw>
<msg timestamp="20201030 18:31:14.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021845875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021891014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:14.696" endtime="20201030 18:31:14.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021845875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021891014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:14.988" endtime="20201030 18:31:14.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.996" endtime="20201030 18:31:14.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.694" endtime="20201030 18:31:14.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.692" endtime="20201030 18:31:14.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:15.003" level="INFO">${RESULT} = [{'diff': 4.5138999999999596e-05}, {'diff': 4.477800000000226e-05}, {'diff': 4.480500000000193e-05}, {'diff': 4.4861000000000206e-05}, {'diff': 4.474999999999965e-05}, {'diff': 4.479199999999836e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:15.000" endtime="20201030 18:31:15.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:15.007" level="INFO">${ACCURACY} = {'diff': [4.5138999999999596e-05, 4.477800000000226e-05, 4.480500000000193e-05, 4.4861000000000206e-05, 4.474999999999965e-05, 4.479199999999836e-05, 4.472200000000051e-05, 4.48060000000014e-05, 4.495...</msg>
<status status="PASS" starttime="20201030 18:31:15.004" endtime="20201030 18:31:15.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.012" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 18:31:15.011" endtime="20201030 18:31:15.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.014" level="INFO">VALUE: [4.5138999999999596e-05, 4.477800000000226e-05, 4.480500000000193e-05, 4.4861000000000206e-05, 4.474999999999965e-05, 4.479199999999836e-05, 4.472200000000051e-05, 4.48060000000014e-05, 4.495800000000119e-05, 4.4888999999999346e-05, 4.493000000000205e-05, 4.491600000000248e-05, 4.49999999999999e-05, 4.495799999999772e-05, 4.4917000000001955e-05, 4.479199999999836e-05, 4.498599999999686e-05, 4.4861000000000206e-05, 4.4861000000000206e-05, 4.475000000000312e-05, 4.476400000000269e-05, 4.49999999999999e-05, 4.497199999999729e-05, 4.472200000000051e-05, 4.473600000000008e-05, 4.477799999999879e-05, 4.476399999999922e-05, 4.4916999999998486e-05, 4.479199999999836e-05, 4.4931000000001525e-05, 4.494400000000162e-05, 4.480599999999793e-05, 4.491599999999901e-05, 4.479199999999836e-05, 4.4874999999999776e-05, 4.4917000000001955e-05, 4.49999999999999e-05, 4.494399999999815e-05, 4.498600000000033e-05, 4.497199999999729e-05, 4.497199999999729e-05, 4.497200000000076e-05, 4.474999999999965e-05, 4.497200000000076e-05, 4.4888999999999346e-05, 4.495800000000119e-05, 4.4916999999998486e-05, 4.472200000000051e-05, 4.4847000000000636e-05, 4.486099999999674e-05]</msg>
<status status="PASS" starttime="20201030 18:31:15.013" endtime="20201030 18:31:15.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.008" endtime="20201030 18:31:15.016"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:15.019" endtime="20201030 18:31:15.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.018" endtime="20201030 18:31:15.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.017" endtime="20201030 18:31:15.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.661" endtime="20201030 18:31:15.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.660" endtime="20201030 18:31:15.040"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.049" endtime="20201030 18:31:15.066"></status>
</kw>
<msg timestamp="20201030 18:31:15.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.047" endtime="20201030 18:31:15.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.067" endtime="20201030 18:31:15.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.070" endtime="20201030 18:31:15.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.044" endtime="20201030 18:31:15.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.042" endtime="20201030 18:31:15.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.079" endtime="20201030 18:31:15.374"></status>
</kw>
<msg timestamp="20201030 18:31:15.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022720667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022767264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:15.078" endtime="20201030 18:31:15.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022720667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022767264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:15.383" endtime="20201030 18:31:15.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.402" endtime="20201030 18:31:15.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.075" endtime="20201030 18:31:15.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.073" endtime="20201030 18:31:15.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:15.416" level="INFO">${RESULT} = [{'diff': 4.659699999999892e-05}, {'diff': 4.5875000000000776e-05}, {'diff': 4.5889000000000346e-05}, {'diff': 4.60000000000009e-05}, {'diff': 4.586200000000068e-05}, {'diff': 4.58190000000025e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:15.409" endtime="20201030 18:31:15.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:15.425" level="INFO">${ACCURACY} = {'diff': [4.659699999999892e-05, 4.5875000000000776e-05, 4.5889000000000346e-05, 4.60000000000009e-05, 4.586200000000068e-05, 4.58190000000025e-05, 4.602800000000004e-05, 4.58329999999986e-05, 4.59580...</msg>
<status status="PASS" starttime="20201030 18:31:15.418" endtime="20201030 18:31:15.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.433" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 18:31:15.432" endtime="20201030 18:31:15.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.436" level="INFO">VALUE: [4.659699999999892e-05, 4.5875000000000776e-05, 4.5889000000000346e-05, 4.60000000000009e-05, 4.586200000000068e-05, 4.58190000000025e-05, 4.602800000000004e-05, 4.58329999999986e-05, 4.595800000000219e-05, 4.594399999999915e-05, 4.5875000000000776e-05, 4.577799999999979e-05, 4.580499999999946e-05, 4.5875000000000776e-05, 4.598599999999786e-05, 4.5902999999999916e-05, 4.599999999999743e-05, 4.573599999999761e-05, 4.5916999999999486e-05, 4.586099999999774e-05, 4.574999999999718e-05, 4.572199999999804e-05, 4.595799999999872e-05, 4.579199999999936e-05, 4.5889000000000346e-05, 4.575000000000065e-05, 4.582000000000197e-05, 4.582000000000197e-05, 4.576400000000022e-05, 4.583400000000154e-05, 4.5889000000000346e-05, 4.60000000000009e-05, 4.60000000000009e-05, 4.595799999999872e-05, 4.5902999999999916e-05, 4.5875000000000776e-05, 4.5944999999998626e-05, 4.5709000000001415e-05, 4.5847000000001636e-05, 4.581899999999903e-05, 4.5945000000002095e-05, 4.58329999999986e-05, 4.597199999999829e-05, 4.584699999999817e-05, 4.587499999999731e-05, 4.574999999999718e-05, 4.581899999999903e-05, 4.579099999999989e-05, 4.599999999999743e-05, 4.58329999999986e-05]</msg>
<status status="PASS" starttime="20201030 18:31:15.434" endtime="20201030 18:31:15.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.427" endtime="20201030 18:31:15.442"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:15.446" endtime="20201030 18:31:15.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.445" endtime="20201030 18:31:15.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.443" endtime="20201030 18:31:15.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.041" endtime="20201030 18:31:15.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.040" endtime="20201030 18:31:15.467"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.475" endtime="20201030 18:31:15.492"></status>
</kw>
<msg timestamp="20201030 18:31:15.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.474" endtime="20201030 18:31:15.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.494" endtime="20201030 18:31:15.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.496" endtime="20201030 18:31:15.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.471" endtime="20201030 18:31:15.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.469" endtime="20201030 18:31:15.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.506" endtime="20201030 18:31:15.792"></status>
</kw>
<msg timestamp="20201030 18:31:15.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021740264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021787569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:15.504" endtime="20201030 18:31:15.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021740264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021787569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:15.796" endtime="20201030 18:31:15.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.804" endtime="20201030 18:31:15.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.502" endtime="20201030 18:31:15.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.500" endtime="20201030 18:31:15.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:15.811" level="INFO">${RESULT} = [{'diff': 4.730500000000096e-05}, {'diff': 4.675000000000165e-05}, {'diff': 4.6944999999999626e-05}, {'diff': 4.698599999999886e-05}, {'diff': 4.675000000000165e-05}, {'diff': 4.690299999999745e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:15.807" endtime="20201030 18:31:15.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:15.818" level="INFO">${ACCURACY} = {'diff': [4.730500000000096e-05, 4.675000000000165e-05, 4.6944999999999626e-05, 4.698599999999886e-05, 4.675000000000165e-05, 4.690299999999745e-05, 4.683399999999907e-05, 4.695799999999972e-05, 4.679...</msg>
<status status="PASS" starttime="20201030 18:31:15.812" endtime="20201030 18:31:15.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.823" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 18:31:15.822" endtime="20201030 18:31:15.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.825" level="INFO">VALUE: [4.730500000000096e-05, 4.675000000000165e-05, 4.6944999999999626e-05, 4.698599999999886e-05, 4.675000000000165e-05, 4.690299999999745e-05, 4.683399999999907e-05, 4.695799999999972e-05, 4.679199999999689e-05, 4.684699999999917e-05, 4.673599999999861e-05, 4.6986999999998336e-05, 4.6944999999999626e-05, 4.705500000000071e-05, 4.679200000000036e-05, 4.6889000000001346e-05, 4.691699999999702e-05, 4.699999999999843e-05, 4.6722999999998516e-05, 4.70000000000019e-05, 4.692999999999711e-05, 4.68329999999996e-05, 4.6917000000000486e-05, 4.681900000000003e-05, 4.697199999999929e-05, 4.679100000000089e-05, 4.691600000000101e-05, 4.676400000000122e-05, 4.68329999999996e-05, 4.691599999999754e-05, 4.6889000000001346e-05, 4.697199999999929e-05, 4.6861000000002206e-05, 4.674999999999818e-05, 4.676400000000122e-05, 4.66939999999999e-05, 4.670800000000294e-05, 4.68329999999996e-05, 4.6944999999999626e-05, 4.683399999999907e-05, 4.6931000000000056e-05, 4.6945000000003095e-05, 4.6889000000001346e-05, 4.677800000000079e-05, 4.6861000000002206e-05, 4.6945000000003095e-05, 4.6917000000000486e-05, 4.680599999999993e-05, 4.697200000000276e-05, 4.699999999999843e-05]</msg>
<status status="PASS" starttime="20201030 18:31:15.824" endtime="20201030 18:31:15.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.819" endtime="20201030 18:31:15.827"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:15.830" endtime="20201030 18:31:15.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.829" endtime="20201030 18:31:15.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.828" endtime="20201030 18:31:15.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.468" endtime="20201030 18:31:15.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.467" endtime="20201030 18:31:15.852"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.866" endtime="20201030 18:31:15.883"></status>
</kw>
<msg timestamp="20201030 18:31:15.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.864" endtime="20201030 18:31:15.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.886" endtime="20201030 18:31:15.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.889" endtime="20201030 18:31:15.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.860" endtime="20201030 18:31:15.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.856" endtime="20201030 18:31:15.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.900" endtime="20201030 18:31:16.199"></status>
</kw>
<msg timestamp="20201030 18:31:16.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029013153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029061819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:15.897" endtime="20201030 18:31:16.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029013153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029061819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:16.209" endtime="20201030 18:31:16.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.228" endtime="20201030 18:31:16.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.894" endtime="20201030 18:31:16.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.892" endtime="20201030 18:31:16.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:16.241" level="INFO">${RESULT} = [{'diff': 4.866599999999929e-05}, {'diff': 4.7723000000002985e-05}, {'diff': 4.792999999999811e-05}, {'diff': 4.787499999999931e-05}, {'diff': 4.774999999999918e-05}, {'diff': 4.795800000000072e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:16.235" endtime="20201030 18:31:16.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:16.248" level="INFO">${ACCURACY} = {'diff': [4.866599999999929e-05, 4.7723000000002985e-05, 4.792999999999811e-05, 4.787499999999931e-05, 4.774999999999918e-05, 4.795800000000072e-05, 4.777799999999832e-05, 4.7917000000001486e-05, 4.79...</msg>
<status status="PASS" starttime="20201030 18:31:16.243" endtime="20201030 18:31:16.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.253" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 18:31:16.252" endtime="20201030 18:31:16.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.255" level="INFO">VALUE: [4.866599999999929e-05, 4.7723000000002985e-05, 4.792999999999811e-05, 4.787499999999931e-05, 4.774999999999918e-05, 4.795800000000072e-05, 4.777799999999832e-05, 4.7917000000001486e-05, 4.798599999999986e-05, 4.772200000000004e-05, 4.787499999999931e-05, 4.779200000000136e-05, 4.7931000000001056e-05, 4.7694999999996907e-05, 4.7931000000001056e-05, 4.793099999999759e-05, 4.776399999999875e-05, 4.791699999999802e-05, 4.797200000000029e-05, 4.7972999999999766e-05, 4.783400000000007e-05, 4.7972999999999766e-05, 4.7959000000000196e-05, 4.78200000000005e-05, 4.7903000000001916e-05, 4.786099999999974e-05, 4.780499999999799e-05, 4.772200000000004e-05, 4.792999999999811e-05, 4.770800000000047e-05, 4.794399999999768e-05, 4.793000000000158e-05, 4.791699999999802e-05, 4.7889000000002346e-05, 4.781899999999756e-05, 4.78330000000006e-05, 4.798599999999986e-05, 4.786099999999974e-05, 4.781900000000103e-05, 4.798599999999986e-05, 4.779200000000136e-05, 4.775000000000265e-05, 4.798599999999986e-05, 4.776399999999875e-05, 4.768099999999387e-05, 4.773599999999961e-05, 4.777799999999832e-05, 4.7945000000000626e-05, 4.799999999999943e-05, 4.783400000000354e-05]</msg>
<status status="PASS" starttime="20201030 18:31:16.254" endtime="20201030 18:31:16.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.249" endtime="20201030 18:31:16.257"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:16.260" endtime="20201030 18:31:16.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.259" endtime="20201030 18:31:16.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.258" endtime="20201030 18:31:16.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.854" endtime="20201030 18:31:16.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.853" endtime="20201030 18:31:16.281"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.290" endtime="20201030 18:31:16.307"></status>
</kw>
<msg timestamp="20201030 18:31:16.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.288" endtime="20201030 18:31:16.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.309" endtime="20201030 18:31:16.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.311" endtime="20201030 18:31:16.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.286" endtime="20201030 18:31:16.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.283" endtime="20201030 18:31:16.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.320" endtime="20201030 18:31:16.606"></status>
</kw>
<msg timestamp="20201030 18:31:16.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023077597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0231265, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:16.319" endtime="20201030 18:31:16.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023077597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0231265, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:16.610" endtime="20201030 18:31:16.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.618" endtime="20201030 18:31:16.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.316" endtime="20201030 18:31:16.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.314" endtime="20201030 18:31:16.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:16.625" level="INFO">${RESULT} = [{'diff': 4.8903000000002916e-05}, {'diff': 4.868099999999834e-05}, {'diff': 4.898600000000086e-05}, {'diff': 4.88469999999977e-05}, {'diff': 4.886200000000021e-05}, {'diff': 4.8959000000001196e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:16.622" endtime="20201030 18:31:16.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:16.629" level="INFO">${ACCURACY} = {'diff': [4.8903000000002916e-05, 4.868099999999834e-05, 4.898600000000086e-05, 4.88469999999977e-05, 4.886200000000021e-05, 4.8959000000001196e-05, 4.873600000000061e-05, 4.876399999999975e-05, 4.895...</msg>
<status status="PASS" starttime="20201030 18:31:16.626" endtime="20201030 18:31:16.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.634" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 18:31:16.633" endtime="20201030 18:31:16.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.636" level="INFO">VALUE: [4.8903000000002916e-05, 4.868099999999834e-05, 4.898600000000086e-05, 4.88469999999977e-05, 4.886200000000021e-05, 4.8959000000001196e-05, 4.873600000000061e-05, 4.876399999999975e-05, 4.895799999999825e-05, 4.879199999999889e-05, 4.887500000000031e-05, 4.879200000000236e-05, 4.898600000000086e-05, 4.876399999999975e-05, 4.872199999999757e-05, 4.893000000000258e-05, 4.880500000000246e-05, 4.891599999999954e-05, 4.887500000000031e-05, 4.880499999999899e-05, 4.886100000000074e-05, 4.8931000000002056e-05, 4.895800000000172e-05, 4.8958999999997727e-05, 4.891699999999902e-05, 4.888899999999988e-05, 4.894399999999868e-05, 4.8931000000002056e-05, 4.873600000000061e-05, 4.880599999999846e-05, 4.887500000000031e-05, 4.900000000000043e-05, 4.88469999999977e-05, 4.879200000000236e-05, 4.873600000000061e-05, 4.8723000000000516e-05, 4.901300000000053e-05, 4.8887999999996934e-05, 4.868099999999834e-05, 4.891599999999954e-05, 4.876300000000028e-05, 4.893099999999859e-05, 4.887500000000031e-05, 4.88469999999977e-05, 4.886099999999727e-05, 4.872200000000104e-05, 4.898600000000086e-05, 4.890199999999997e-05, 4.887500000000031e-05, 4.888899999999988e-05]</msg>
<status status="PASS" starttime="20201030 18:31:16.635" endtime="20201030 18:31:16.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.630" endtime="20201030 18:31:16.638"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:16.642" endtime="20201030 18:31:16.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.641" endtime="20201030 18:31:16.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.639" endtime="20201030 18:31:16.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.282" endtime="20201030 18:31:16.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.281" endtime="20201030 18:31:16.663"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.671" endtime="20201030 18:31:16.688"></status>
</kw>
<msg timestamp="20201030 18:31:16.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.670" endtime="20201030 18:31:16.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.690" endtime="20201030 18:31:16.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.692" endtime="20201030 18:31:16.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.667" endtime="20201030 18:31:16.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.665" endtime="20201030 18:31:16.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.702" endtime="20201030 18:31:16.988"></status>
</kw>
<msg timestamp="20201030 18:31:16.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021732931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021783708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:16.700" endtime="20201030 18:31:16.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021732931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021783708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:16.992" endtime="20201030 18:31:17.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.000" endtime="20201030 18:31:17.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.697" endtime="20201030 18:31:17.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.696" endtime="20201030 18:31:17.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:17.007" level="INFO">${RESULT} = [{'diff': 5.077699999999838e-05}, {'diff': 4.987499999999784e-05}, {'diff': 4.987499999999784e-05}, {'diff': 4.997199999999882e-05}, {'diff': 4.981999999999903e-05}, {'diff': 4.988900000000088e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:17.004" endtime="20201030 18:31:17.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:17.012" level="INFO">${ACCURACY} = {'diff': [5.077699999999838e-05, 4.987499999999784e-05, 4.987499999999784e-05, 4.997199999999882e-05, 4.981999999999903e-05, 4.988900000000088e-05, 4.984700000000217e-05, 5.0014000000001e-05, 4.970800...</msg>
<status status="PASS" starttime="20201030 18:31:17.008" endtime="20201030 18:31:17.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.017" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 18:31:17.016" endtime="20201030 18:31:17.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.019" level="INFO">VALUE: [5.077699999999838e-05, 4.987499999999784e-05, 4.987499999999784e-05, 4.997199999999882e-05, 4.981999999999903e-05, 4.988900000000088e-05, 4.984700000000217e-05, 5.0014000000001e-05, 4.970800000000247e-05, 4.98330000000026e-05, 4.987500000000131e-05, 4.979199999999989e-05, 4.979199999999989e-05, 4.984799999999817e-05, 4.9723000000001516e-05, 4.980599999999946e-05, 4.9695000000002376e-05, 4.986099999999827e-05, 4.983400000000207e-05, 4.991700000000002e-05, 4.9986999999997866e-05, 4.994399999999968e-05, 4.981899999999956e-05, 4.9888000000001403e-05, 4.991600000000054e-05, 4.973600000000161e-05, 4.995799999999925e-05, 4.993000000000011e-05, 4.974999999999771e-05, 4.974999999999771e-05, 4.994399999999968e-05, 4.997199999999882e-05, 4.991700000000002e-05, 4.997200000000229e-05, 4.9707999999999e-05, 4.977800000000032e-05, 4.987500000000131e-05, 4.998599999999839e-05, 4.972199999999857e-05, 4.998599999999839e-05, 4.973599999999814e-05, 4.990300000000045e-05, 4.991700000000002e-05, 4.9695000000002376e-05, 4.990300000000045e-05, 4.975000000000118e-05, 4.986099999999827e-05, 4.980599999999946e-05, 4.993099999999959e-05, 4.984799999999817e-05]</msg>
<status status="PASS" starttime="20201030 18:31:17.018" endtime="20201030 18:31:17.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.013" endtime="20201030 18:31:17.021"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:17.024" endtime="20201030 18:31:17.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.023" endtime="20201030 18:31:17.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.022" endtime="20201030 18:31:17.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.664" endtime="20201030 18:31:17.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.663" endtime="20201030 18:31:17.045"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.054" endtime="20201030 18:31:17.071"></status>
</kw>
<msg timestamp="20201030 18:31:17.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.052" endtime="20201030 18:31:17.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.073" endtime="20201030 18:31:17.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.075" endtime="20201030 18:31:17.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.050" endtime="20201030 18:31:17.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.048" endtime="20201030 18:31:17.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.085" endtime="20201030 18:31:17.371"></status>
</kw>
<msg timestamp="20201030 18:31:17.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022000722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022051903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:17.083" endtime="20201030 18:31:17.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022000722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022051903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:17.375" endtime="20201030 18:31:17.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.383" endtime="20201030 18:31:17.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.080" endtime="20201030 18:31:17.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.079" endtime="20201030 18:31:17.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:17.390" level="INFO">${RESULT} = [{'diff': 5.118100000000084e-05}, {'diff': 5.072200000000304e-05}, {'diff': 5.074999999999871e-05}, {'diff': 5.08469999999997e-05}, {'diff': 5.0901999999998504e-05}, {'diff': 5.094400000000068e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:17.387" endtime="20201030 18:31:17.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:17.394" level="INFO">${ACCURACY} = {'diff': [5.118100000000084e-05, 5.072200000000304e-05, 5.074999999999871e-05, 5.08469999999997e-05, 5.0901999999998504e-05, 5.094400000000068e-05, 5.08469999999997e-05, 5.095800000000025e-05, 5.08890...</msg>
<status status="PASS" starttime="20201030 18:31:17.391" endtime="20201030 18:31:17.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.399" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 18:31:17.398" endtime="20201030 18:31:17.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.401" level="INFO">VALUE: [5.118100000000084e-05, 5.072200000000304e-05, 5.074999999999871e-05, 5.08469999999997e-05, 5.0901999999998504e-05, 5.094400000000068e-05, 5.08469999999997e-05, 5.095800000000025e-05, 5.088900000000188e-05, 5.094400000000068e-05, 5.090300000000145e-05, 5.081899999999709e-05, 5.094400000000068e-05, 5.079200000000089e-05, 5.091699999999755e-05, 5.088899999999841e-05, 5.086099999999927e-05, 5.074999999999871e-05, 5.075000000000218e-05, 5.090299999999798e-05, 5.074999999999871e-05, 5.087500000000231e-05, 5.091699999999755e-05, 5.084799999999917e-05, 5.1014000000002e-05, 5.073599999999914e-05, 5.093100000000059e-05, 5.077799999999785e-05, 5.080500000000099e-05, 5.074999999999871e-05, 5.09729999999993e-05, 5.079100000000142e-05, 5.086099999999927e-05, 5.086099999999927e-05, 5.074999999999871e-05, 5.079199999999742e-05, 5.091700000000102e-05, 5.091699999999755e-05, 5.090300000000145e-05, 5.080499999999752e-05, 5.087499999999884e-05, 5.086100000000274e-05, 5.083300000000013e-05, 5.079200000000089e-05, 5.097199999999982e-05, 5.098599999999939e-05, 5.077799999999785e-05, 5.099999999999896e-05, 5.095800000000025e-05, 5.097199999999982e-05]</msg>
<status status="PASS" starttime="20201030 18:31:17.400" endtime="20201030 18:31:17.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.395" endtime="20201030 18:31:17.403"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:17.406" endtime="20201030 18:31:17.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.405" endtime="20201030 18:31:17.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.404" endtime="20201030 18:31:17.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.046" endtime="20201030 18:31:17.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.045" endtime="20201030 18:31:17.427"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.436" endtime="20201030 18:31:17.454"></status>
</kw>
<msg timestamp="20201030 18:31:17.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.434" endtime="20201030 18:31:17.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.455" endtime="20201030 18:31:17.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.458" endtime="20201030 18:31:17.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.432" endtime="20201030 18:31:17.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.430" endtime="20201030 18:31:17.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.467" endtime="20201030 18:31:17.752"></status>
</kw>
<msg timestamp="20201030 18:31:17.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022725972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022778056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:17.465" endtime="20201030 18:31:17.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022725972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022778056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:17.757" endtime="20201030 18:31:17.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.765" endtime="20201030 18:31:17.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.463" endtime="20201030 18:31:17.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.461" endtime="20201030 18:31:17.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:17.772" level="INFO">${RESULT} = [{'diff': 5.208400000000085e-05}, {'diff': 5.1679999999998394e-05}, {'diff': 5.1679999999998394e-05}, {'diff': 5.173600000000014e-05}, {'diff': 5.195900000000073e-05}, {'diff': 5.176399999999928e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:17.768" endtime="20201030 18:31:17.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:17.776" level="INFO">${ACCURACY} = {'diff': [5.208400000000085e-05, 5.1679999999998394e-05, 5.1679999999998394e-05, 5.173600000000014e-05, 5.195900000000073e-05, 5.176399999999928e-05, 5.199999999999996e-05, 5.194400000000168e-05, 5.18...</msg>
<status status="PASS" starttime="20201030 18:31:17.773" endtime="20201030 18:31:17.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.780" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 18:31:17.779" endtime="20201030 18:31:17.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.783" level="INFO">VALUE: [5.208400000000085e-05, 5.1679999999998394e-05, 5.1679999999998394e-05, 5.173600000000014e-05, 5.195900000000073e-05, 5.176399999999928e-05, 5.199999999999996e-05, 5.194400000000168e-05, 5.180599999999799e-05, 5.183300000000113e-05, 5.182000000000103e-05, 5.179199999999842e-05, 5.194500000000116e-05, 5.195900000000073e-05, 5.188899999999941e-05, 5.184800000000017e-05, 5.173600000000014e-05, 5.182000000000103e-05, 5.193000000000211e-05, 5.176399999999928e-05, 5.170900000000048e-05, 5.188899999999941e-05, 5.194400000000168e-05, 5.1707999999997534e-05, 5.1901999999999504e-05, 5.168000000000186e-05, 5.183300000000113e-05, 5.1957999999997784e-05, 5.177800000000232e-05, 5.1929999999998644e-05, 5.177799999999885e-05, 5.193000000000211e-05, 5.197200000000082e-05, 5.1693999999997964e-05, 5.181900000000156e-05, 5.191700000000202e-05, 5.195800000000125e-05, 5.191700000000202e-05, 5.201399999999953e-05, 5.176399999999928e-05, 5.191699999999855e-05, 5.186100000000027e-05, 5.177799999999885e-05, 5.181999999999756e-05, 5.177800000000232e-05, 5.186100000000027e-05, 5.176399999999928e-05, 5.186199999999974e-05, 5.18340000000006e-05, 5.174999999999971e-05]</msg>
<status status="PASS" starttime="20201030 18:31:17.781" endtime="20201030 18:31:17.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.777" endtime="20201030 18:31:17.785"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:17.789" endtime="20201030 18:31:17.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.787" endtime="20201030 18:31:17.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.786" endtime="20201030 18:31:17.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.428" endtime="20201030 18:31:17.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.427" endtime="20201030 18:31:17.809"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.818" endtime="20201030 18:31:17.835"></status>
</kw>
<msg timestamp="20201030 18:31:17.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.817" endtime="20201030 18:31:17.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.836" endtime="20201030 18:31:17.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.839" endtime="20201030 18:31:17.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.814" endtime="20201030 18:31:17.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.812" endtime="20201030 18:31:17.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.848" endtime="20201030 18:31:18.134"></status>
</kw>
<msg timestamp="20201030 18:31:18.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021860403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:17.846" endtime="20201030 18:31:18.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021860403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:18.138" endtime="20201030 18:31:18.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.146" endtime="20201030 18:31:18.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.844" endtime="20201030 18:31:18.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.842" endtime="20201030 18:31:18.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:18.153" level="INFO">${RESULT} = [{'diff': 5.337500000000134e-05}, {'diff': 5.281899999999909e-05}, {'diff': 5.290299999999998e-05}, {'diff': 5.300000000000096e-05}, {'diff': 5.272200000000157e-05}, {'diff': 5.2902000000000504e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:18.149" endtime="20201030 18:31:18.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:18.158" level="INFO">${ACCURACY} = {'diff': [5.337500000000134e-05, 5.281899999999909e-05, 5.290299999999998e-05, 5.300000000000096e-05, 5.272200000000157e-05, 5.2902000000000504e-05, 5.2888000000000934e-05, 5.2943999999999214e-05, 5.2...</msg>
<status status="PASS" starttime="20201030 18:31:18.154" endtime="20201030 18:31:18.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.162" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 18:31:18.161" endtime="20201030 18:31:18.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.165" level="INFO">VALUE: [5.337500000000134e-05, 5.281899999999909e-05, 5.290299999999998e-05, 5.300000000000096e-05, 5.272200000000157e-05, 5.2902000000000504e-05, 5.2888000000000934e-05, 5.2943999999999214e-05, 5.288900000000041e-05, 5.2902000000000504e-05, 5.2999999999997494e-05, 5.283299999999866e-05, 5.2943999999999214e-05, 5.293099999999912e-05, 5.2943999999999214e-05, 5.290299999999998e-05, 5.291699999999955e-05, 5.290299999999998e-05, 5.281899999999909e-05, 5.2708000000002e-05, 5.28470000000017e-05, 5.279200000000289e-05, 5.272200000000157e-05, 5.291700000000302e-05, 5.293100000000259e-05, 5.295900000000173e-05, 5.298600000000139e-05, 5.302700000000063e-05, 5.277799999999985e-05, 5.276400000000028e-05, 5.270900000000148e-05, 5.295900000000173e-05, 5.287500000000084e-05, 5.2943999999999214e-05, 5.277700000000038e-05, 5.297200000000182e-05, 5.288900000000041e-05, 5.276400000000028e-05, 5.280499999999952e-05, 5.298600000000139e-05, 5.287500000000084e-05, 5.288900000000041e-05, 5.290299999999998e-05, 5.30280000000001e-05, 5.276400000000028e-05, 5.284699999999823e-05, 5.28609999999978e-05, 5.2985999999997924e-05, 5.2985999999997924e-05, 5.2721999999998104e-05]</msg>
<status status="PASS" starttime="20201030 18:31:18.163" endtime="20201030 18:31:18.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.159" endtime="20201030 18:31:18.166"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:18.170" endtime="20201030 18:31:18.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.168" endtime="20201030 18:31:18.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.167" endtime="20201030 18:31:18.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.810" endtime="20201030 18:31:18.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.810" endtime="20201030 18:31:18.190"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.199" endtime="20201030 18:31:18.215"></status>
</kw>
<msg timestamp="20201030 18:31:18.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:18.198" endtime="20201030 18:31:18.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:18.217" endtime="20201030 18:31:18.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.219" endtime="20201030 18:31:18.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.195" endtime="20201030 18:31:18.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.193" endtime="20201030 18:31:18.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.229" endtime="20201030 18:31:18.515"></status>
</kw>
<msg timestamp="20201030 18:31:18.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022000653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022055, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:18.227" endtime="20201030 18:31:18.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022000653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022055, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:18.519" endtime="20201030 18:31:18.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.527" endtime="20201030 18:31:18.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.224" endtime="20201030 18:31:18.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.223" endtime="20201030 18:31:18.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:18.534" level="INFO">${RESULT} = [{'diff': 5.43470000000032e-05}, {'diff': 5.390300000000098e-05}, {'diff': 5.387499999999837e-05}, {'diff': 5.379200000000042e-05}, {'diff': 5.393100000000012e-05}, {'diff': 5.388899999999794e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:18.531" endtime="20201030 18:31:18.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:18.538" level="INFO">${ACCURACY} = {'diff': [5.43470000000032e-05, 5.390300000000098e-05, 5.387499999999837e-05, 5.379200000000042e-05, 5.393100000000012e-05, 5.388899999999794e-05, 5.3721999999999104e-05, 5.402700000000163e-05, 5.3902...</msg>
<status status="PASS" starttime="20201030 18:31:18.535" endtime="20201030 18:31:18.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.542" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 18:31:18.541" endtime="20201030 18:31:18.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.545" level="INFO">VALUE: [5.43470000000032e-05, 5.390300000000098e-05, 5.387499999999837e-05, 5.379200000000042e-05, 5.393100000000012e-05, 5.388899999999794e-05, 5.3721999999999104e-05, 5.402700000000163e-05, 5.390299999999751e-05, 5.395899999999926e-05, 5.377800000000085e-05, 5.39730000000023e-05, 5.3749999999998244e-05, 5.402699999999816e-05, 5.373700000000162e-05, 5.372300000000205e-05, 5.3749999999998244e-05, 5.379100000000095e-05, 5.372200000000257e-05, 5.3957999999999784e-05, 5.381900000000009e-05, 5.388900000000141e-05, 5.390300000000098e-05, 5.391700000000055e-05, 5.3957999999999784e-05, 5.390300000000098e-05, 5.381900000000009e-05, 5.3929999999997175e-05, 5.383299999999966e-05, 5.383299999999966e-05, 5.388900000000141e-05, 5.387499999999837e-05, 5.368099999999987e-05, 5.376400000000128e-05, 5.387500000000184e-05, 5.372299999999858e-05, 5.376400000000128e-05, 5.38609999999988e-05, 5.377800000000085e-05, 5.3944000000000214e-05, 5.377800000000085e-05, 5.394499999999969e-05, 5.394500000000316e-05, 5.386199999999827e-05, 5.3707999999999534e-05, 5.372200000000257e-05, 5.380500000000052e-05, 5.3763999999997814e-05, 5.387499999999837e-05, 5.400000000000196e-05]</msg>
<status status="PASS" starttime="20201030 18:31:18.544" endtime="20201030 18:31:18.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.539" endtime="20201030 18:31:18.546"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:18.550" endtime="20201030 18:31:18.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.549" endtime="20201030 18:31:18.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.547" endtime="20201030 18:31:18.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.191" endtime="20201030 18:31:18.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.191" endtime="20201030 18:31:18.571"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.580" endtime="20201030 18:31:18.597"></status>
</kw>
<msg timestamp="20201030 18:31:18.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:18.578" endtime="20201030 18:31:18.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:18.599" endtime="20201030 18:31:18.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.601" endtime="20201030 18:31:18.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.575" endtime="20201030 18:31:18.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.573" endtime="20201030 18:31:18.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.610" endtime="20201030 18:31:18.895"></status>
</kw>
<msg timestamp="20201030 18:31:18.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022753667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022808986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:18.609" endtime="20201030 18:31:18.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022753667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022808986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:18.899" endtime="20201030 18:31:18.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.908" endtime="20201030 18:31:18.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.606" endtime="20201030 18:31:18.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.605" endtime="20201030 18:31:18.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:18.914" level="INFO">${RESULT} = [{'diff': 5.531899999999812e-05}, {'diff': 5.476400000000228e-05}, {'diff': 5.4749999999999244e-05}, {'diff': 5.482000000000056e-05}, {'diff': 5.48479999999997e-05}, {'diff': 5.497299999999983e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:18.911" endtime="20201030 18:31:18.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:18.919" level="INFO">${ACCURACY} = {'diff': [5.531899999999812e-05, 5.476400000000228e-05, 5.4749999999999244e-05, 5.482000000000056e-05, 5.48479999999997e-05, 5.497299999999983e-05, 5.497299999999983e-05, 5.4791999999997953e-05, 5.495...</msg>
<status status="PASS" starttime="20201030 18:31:18.915" endtime="20201030 18:31:18.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.923" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 18:31:18.922" endtime="20201030 18:31:18.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.926" level="INFO">VALUE: [5.531899999999812e-05, 5.476400000000228e-05, 5.4749999999999244e-05, 5.482000000000056e-05, 5.48479999999997e-05, 5.497299999999983e-05, 5.497299999999983e-05, 5.4791999999997953e-05, 5.495900000000026e-05, 5.494499999999722e-05, 5.487499999999937e-05, 5.4777999999998384e-05, 5.4708000000000534e-05, 5.477699999999891e-05, 5.487500000000284e-05, 5.4999999999999494e-05, 5.483299999999719e-05, 5.477700000000238e-05, 5.4999999999999494e-05, 5.487499999999937e-05, 5.4722000000000104e-05, 5.479200000000142e-05, 5.493099999999765e-05, 5.483300000000066e-05, 5.4791999999997953e-05, 5.488899999999894e-05, 5.493100000000112e-05, 5.481999999999709e-05, 5.4722000000000104e-05, 5.4777999999998384e-05, 5.484700000000023e-05, 5.4985999999999924e-05, 5.4972000000000354e-05, 5.494499999999722e-05, 5.497299999999983e-05, 5.502699999999916e-05, 5.4944000000001214e-05, 5.487499999999937e-05, 5.488899999999894e-05, 5.4722000000000104e-05, 5.4708000000000534e-05, 5.48609999999998e-05, 5.4985999999999924e-05, 5.4735999999999674e-05, 5.488899999999894e-05, 5.483299999999719e-05, 5.4972000000000354e-05, 5.4929999999998175e-05, 5.4999999999999494e-05, 5.490299999999851e-05]</msg>
<status status="PASS" starttime="20201030 18:31:18.924" endtime="20201030 18:31:18.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.919" endtime="20201030 18:31:18.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:18.932" endtime="20201030 18:31:18.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.930" endtime="20201030 18:31:18.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.929" endtime="20201030 18:31:18.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.572" endtime="20201030 18:31:18.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.571" endtime="20201030 18:31:18.953"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.962" endtime="20201030 18:31:18.979"></status>
</kw>
<msg timestamp="20201030 18:31:18.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:18.960" endtime="20201030 18:31:18.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:18.981" endtime="20201030 18:31:18.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.983" endtime="20201030 18:31:18.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.958" endtime="20201030 18:31:18.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.956" endtime="20201030 18:31:18.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.992" endtime="20201030 18:31:19.278"></status>
</kw>
<msg timestamp="20201030 18:31:19.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022100653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022157, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:18.991" endtime="20201030 18:31:19.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022100653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022157, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:19.285" endtime="20201030 18:31:19.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.296" endtime="20201030 18:31:19.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.988" endtime="20201030 18:31:19.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.986" endtime="20201030 18:31:19.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:19.306" level="INFO">${RESULT} = [{'diff': 5.634699999999826e-05}, {'diff': 5.568100000000187e-05}, {'diff': 5.5902000000000035e-05}, {'diff': 5.590299999999951e-05}, {'diff': 5.5972000000001354e-05}, {'diff': 5.5763999999999814e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:19.300" endtime="20201030 18:31:19.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:19.317" level="INFO">${ACCURACY} = {'diff': [5.634699999999826e-05, 5.568100000000187e-05, 5.5902000000000035e-05, 5.590299999999951e-05, 5.5972000000001354e-05, 5.5763999999999814e-05, 5.586099999999733e-05, 5.5999999999997024e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:31:19.307" endtime="20201030 18:31:19.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.322" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 18:31:19.321" endtime="20201030 18:31:19.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.325" level="INFO">VALUE: [5.634699999999826e-05, 5.568100000000187e-05, 5.5902000000000035e-05, 5.590299999999951e-05, 5.5972000000001354e-05, 5.5763999999999814e-05, 5.586099999999733e-05, 5.5999999999997024e-05, 5.5763999999999814e-05, 5.5929999999999175e-05, 5.5915999999999605e-05, 5.5735999999997204e-05, 5.579099999999948e-05, 5.5929999999999175e-05, 5.5694000000001964e-05, 5.5736000000000674e-05, 5.583300000000166e-05, 5.5957999999998315e-05, 5.588899999999994e-05, 5.566699999999883e-05, 5.590300000000298e-05, 5.5736000000000674e-05, 5.594500000000169e-05, 5.5763999999999814e-05, 5.570899999999754e-05, 5.581999999999809e-05, 5.58610000000008e-05, 5.580600000000199e-05, 5.573700000000015e-05, 5.6000000000000494e-05, 5.588899999999994e-05, 5.601299999999712e-05, 5.588899999999994e-05, 5.5972000000001354e-05, 5.583300000000166e-05, 5.5929999999999175e-05, 5.588899999999994e-05, 5.5999999999997024e-05, 5.576400000000328e-05, 5.5943999999998745e-05, 5.5943999999998745e-05, 5.588899999999994e-05, 5.591699999999908e-05, 5.5791999999998954e-05, 5.5750000000000244e-05, 5.5958000000001784e-05, 5.5763999999999814e-05, 5.593099999999865e-05, 5.6000000000000494e-05, 5.5722000000001104e-05]</msg>
<status status="PASS" starttime="20201030 18:31:19.323" endtime="20201030 18:31:19.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.318" endtime="20201030 18:31:19.326"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:19.330" endtime="20201030 18:31:19.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.328" endtime="20201030 18:31:19.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.327" endtime="20201030 18:31:19.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.954" endtime="20201030 18:31:19.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.953" endtime="20201030 18:31:19.350"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.359" endtime="20201030 18:31:19.376"></status>
</kw>
<msg timestamp="20201030 18:31:19.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:19.357" endtime="20201030 18:31:19.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:19.377" endtime="20201030 18:31:19.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.380" endtime="20201030 18:31:19.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.355" endtime="20201030 18:31:19.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.353" endtime="20201030 18:31:19.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.389" endtime="20201030 18:31:19.675"></status>
</kw>
<msg timestamp="20201030 18:31:19.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021882931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021939972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:19.388" endtime="20201030 18:31:19.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021882931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021939972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:19.679" endtime="20201030 18:31:19.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.687" endtime="20201030 18:31:19.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.385" endtime="20201030 18:31:19.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.383" endtime="20201030 18:31:19.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:19.694" level="INFO">${RESULT} = [{'diff': 5.704099999999726e-05}, {'diff': 5.6764000000000814e-05}, {'diff': 5.6985999999998455e-05}, {'diff': 5.693099999999965e-05}, {'diff': 5.6791999999999954e-05}, {'diff': 5.6764000000000814e-05...</msg>
<status status="PASS" starttime="20201030 18:31:19.691" endtime="20201030 18:31:19.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:19.698" level="INFO">${ACCURACY} = {'diff': [5.704099999999726e-05, 5.6764000000000814e-05, 5.6985999999998455e-05, 5.693099999999965e-05, 5.6791999999999954e-05, 5.6764000000000814e-05, 5.7000000000001494e-05, 5.68480000000017e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:31:19.695" endtime="20201030 18:31:19.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.703" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 18:31:19.702" endtime="20201030 18:31:19.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.705" level="INFO">VALUE: [5.704099999999726e-05, 5.6764000000000814e-05, 5.6985999999998455e-05, 5.693099999999965e-05, 5.6791999999999954e-05, 5.6764000000000814e-05, 5.7000000000001494e-05, 5.68480000000017e-05, 5.669500000000244e-05, 5.683299999999919e-05, 5.686200000000127e-05, 5.684699999999876e-05, 5.6957999999999315e-05, 5.6957999999999315e-05, 5.680500000000005e-05, 5.684700000000223e-05, 5.6750000000001244e-05, 5.6985999999998455e-05, 5.683299999999919e-05, 5.6930000000000175e-05, 5.686099999999833e-05, 5.6930000000000175e-05, 5.6750000000001244e-05, 5.6985999999998455e-05, 5.68610000000018e-05, 5.691700000000008e-05, 5.688900000000094e-05, 5.6763999999997344e-05, 5.6749999999997774e-05, 5.6819999999999093e-05, 5.704100000000073e-05, 5.6736000000001674e-05, 5.7014000000001064e-05, 5.694499999999922e-05, 5.6805999999999524e-05, 5.6778000000000384e-05, 5.688900000000094e-05, 5.6999999999998024e-05, 5.6930000000000175e-05, 5.68480000000017e-05, 5.6736000000001674e-05, 5.684699999999876e-05, 5.7014000000001064e-05, 5.6985999999998455e-05, 5.681899999999962e-05, 5.683299999999919e-05, 5.6764000000000814e-05, 5.679100000000048e-05, 5.6750000000001244e-05, 5.6957999999999315e-05]</msg>
<status status="PASS" starttime="20201030 18:31:19.704" endtime="20201030 18:31:19.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.699" endtime="20201030 18:31:19.707"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:19.710" endtime="20201030 18:31:19.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.709" endtime="20201030 18:31:19.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.708" endtime="20201030 18:31:19.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.351" endtime="20201030 18:31:19.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.351" endtime="20201030 18:31:19.731"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.740" endtime="20201030 18:31:19.758"></status>
</kw>
<msg timestamp="20201030 18:31:19.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:19.738" endtime="20201030 18:31:19.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:19.760" endtime="20201030 18:31:19.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.762" endtime="20201030 18:31:19.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.736" endtime="20201030 18:31:19.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.733" endtime="20201030 18:31:19.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.772" endtime="20201030 18:31:20.052"></status>
</kw>
<msg timestamp="20201030 18:31:20.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023235194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023293333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:19.770" endtime="20201030 18:31:20.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023235194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023293333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.057" endtime="20201030 18:31:20.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.065" endtime="20201030 18:31:20.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.767" endtime="20201030 18:31:20.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.766" endtime="20201030 18:31:20.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:20.072" level="INFO">${RESULT} = [{'diff': 5.813899999999872e-05}, {'diff': 5.7694000000000495e-05}, {'diff': 5.7985999999999455e-05}, {'diff': 5.783400000000313e-05}, {'diff': 5.790299999999804e-05}, {'diff': 5.794500000000022e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:20.068" endtime="20201030 18:31:20.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:20.076" level="INFO">${ACCURACY} = {'diff': [5.813899999999872e-05, 5.7694000000000495e-05, 5.7985999999999455e-05, 5.783400000000313e-05, 5.790299999999804e-05, 5.794500000000022e-05, 5.7749999999998775e-05, 5.7930000000001175e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:31:20.073" endtime="20201030 18:31:20.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.080" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 18:31:20.079" endtime="20201030 18:31:20.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.083" level="INFO">VALUE: [5.813899999999872e-05, 5.7694000000000495e-05, 5.7985999999999455e-05, 5.783400000000313e-05, 5.790299999999804e-05, 5.794500000000022e-05, 5.7749999999998775e-05, 5.7930000000001175e-05, 5.7887999999998996e-05, 5.7944000000000745e-05, 5.8000000000002494e-05, 5.8042000000001204e-05, 5.783300000000019e-05, 5.791700000000108e-05, 5.7985999999999455e-05, 5.8042000000001204e-05, 5.784699999999976e-05, 5.7985999999999455e-05, 5.7791999999997484e-05, 5.788899999999847e-05, 5.791700000000108e-05, 5.795899999999979e-05, 5.7806000000000524e-05, 5.791700000000108e-05, 5.794500000000022e-05, 5.797299999999936e-05, 5.7806000000000524e-05, 5.798699999999893e-05, 5.8013999999998594e-05, 5.788900000000194e-05, 5.788899999999847e-05, 5.797299999999936e-05, 5.786200000000227e-05, 5.797299999999936e-05, 5.779100000000148e-05, 5.7887999999998996e-05, 5.784699999999976e-05, 5.777700000000191e-05, 5.7708000000000065e-05, 5.783300000000019e-05, 5.788899999999847e-05, 5.783300000000019e-05, 5.781900000000062e-05, 5.7958000000000315e-05, 5.7750000000002244e-05, 5.8028000000001634e-05, 5.7985999999999455e-05, 5.786099999999933e-05, 5.784699999999976e-05, 5.7792000000000954e-05]</msg>
<status status="PASS" starttime="20201030 18:31:20.081" endtime="20201030 18:31:20.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.077" endtime="20201030 18:31:20.085"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:20.089" endtime="20201030 18:31:20.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.087" endtime="20201030 18:31:20.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.086" endtime="20201030 18:31:20.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.732" endtime="20201030 18:31:20.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.731" endtime="20201030 18:31:20.109"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.118" endtime="20201030 18:31:20.135"></status>
</kw>
<msg timestamp="20201030 18:31:20.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:20.117" endtime="20201030 18:31:20.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:20.137" endtime="20201030 18:31:20.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.139" endtime="20201030 18:31:20.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.114" endtime="20201030 18:31:20.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.112" endtime="20201030 18:31:20.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.148" endtime="20201030 18:31:20.433"></status>
</kw>
<msg timestamp="20201030 18:31:20.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021754278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021813278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.147" endtime="20201030 18:31:20.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021754278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021813278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.438" endtime="20201030 18:31:20.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.446" endtime="20201030 18:31:20.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.144" endtime="20201030 18:31:20.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.142" endtime="20201030 18:31:20.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:20.452" level="INFO">${RESULT} = [{'diff': 5.9000000000000025e-05}, {'diff': 5.88619999999998e-05}, {'diff': 5.8791999999998484e-05}, {'diff': 5.891699999999861e-05}, {'diff': 5.8736000000000205e-05}, {'diff': 5.8736000000000205e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:20.449" endtime="20201030 18:31:20.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:20.458" level="INFO">${ACCURACY} = {'diff': [5.9000000000000025e-05, 5.88619999999998e-05, 5.8791999999998484e-05, 5.891699999999861e-05, 5.8736000000000205e-05, 5.8736000000000205e-05, 5.8763999999999345e-05, 5.9013999999999595e-05, 5...</msg>
<status status="PASS" starttime="20201030 18:31:20.453" endtime="20201030 18:31:20.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.462" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 18:31:20.461" endtime="20201030 18:31:20.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.465" level="INFO">VALUE: [5.9000000000000025e-05, 5.88619999999998e-05, 5.8791999999998484e-05, 5.891699999999861e-05, 5.8736000000000205e-05, 5.8736000000000205e-05, 5.8763999999999345e-05, 5.9013999999999595e-05, 5.8915999999999136e-05, 5.88749999999999e-05, 5.881900000000162e-05, 5.881900000000162e-05, 5.88749999999999e-05, 5.8971999999997415e-05, 5.883300000000119e-05, 5.88749999999999e-05, 5.8805999999998054e-05, 5.881900000000162e-05, 5.886100000000033e-05, 5.8722000000000635e-05, 5.890300000000251e-05, 5.86810000000014e-05, 5.8722000000000635e-05, 5.8750000000003244e-05, 5.891700000000208e-05, 5.8791999999998484e-05, 5.894499999999775e-05, 5.873699999999968e-05, 5.890299999999904e-05, 5.8763999999999345e-05, 5.8943999999998276e-05, 5.888899999999947e-05, 5.880499999999858e-05, 5.879099999999901e-05, 5.8972000000000885e-05, 5.8763999999999345e-05, 5.884700000000076e-05, 5.881900000000162e-05, 5.8736000000000205e-05, 5.8929999999998706e-05, 5.8778000000002384e-05, 5.8763999999999345e-05, 5.890299999999904e-05, 5.8943999999998276e-05, 5.88749999999999e-05, 5.893099999999818e-05, 5.9028000000002634e-05, 5.890300000000251e-05, 5.877699999999944e-05, 5.88749999999999e-05]</msg>
<status status="PASS" starttime="20201030 18:31:20.463" endtime="20201030 18:31:20.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.458" endtime="20201030 18:31:20.471"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:20.474" endtime="20201030 18:31:20.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.473" endtime="20201030 18:31:20.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.472" endtime="20201030 18:31:20.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.110" endtime="20201030 18:31:20.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.110" endtime="20201030 18:31:20.495"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.504" endtime="20201030 18:31:20.520"></status>
</kw>
<msg timestamp="20201030 18:31:20.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:20.502" endtime="20201030 18:31:20.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:20.522" endtime="20201030 18:31:20.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.525" endtime="20201030 18:31:20.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.500" endtime="20201030 18:31:20.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.497" endtime="20201030 18:31:20.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.534" endtime="20201030 18:31:20.821"></status>
</kw>
<msg timestamp="20201030 18:31:20.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022219764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022279722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.532" endtime="20201030 18:31:20.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022219764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022279722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.825" endtime="20201030 18:31:20.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.833" endtime="20201030 18:31:20.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.530" endtime="20201030 18:31:20.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.528" endtime="20201030 18:31:20.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:20.840" level="INFO">${RESULT} = [{'diff': 5.9957999999998846e-05}, {'diff': 5.990300000000004e-05}, {'diff': 5.9777999999999915e-05}, {'diff': 5.995900000000179e-05}, {'diff': 5.9805999999999054e-05}, {'diff': 6.0000000000001025e-05...</msg>
<status status="PASS" starttime="20201030 18:31:20.837" endtime="20201030 18:31:20.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:20.844" level="INFO">${ACCURACY} = {'diff': [5.9957999999998846e-05, 5.990300000000004e-05, 5.9777999999999915e-05, 5.995900000000179e-05, 5.9805999999999054e-05, 6.0000000000001025e-05, 5.9819999999998624e-05, 5.998700000000093e-05, 5...</msg>
<status status="PASS" starttime="20201030 18:31:20.841" endtime="20201030 18:31:20.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.849" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 18:31:20.848" endtime="20201030 18:31:20.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.851" level="INFO">VALUE: [5.9957999999998846e-05, 5.990300000000004e-05, 5.9777999999999915e-05, 5.995900000000179e-05, 5.9805999999999054e-05, 6.0000000000001025e-05, 5.9819999999998624e-05, 5.998700000000093e-05, 5.9916000000000136e-05, 5.9972000000001885e-05, 5.997300000000136e-05, 5.9916000000000136e-05, 5.9902000000000566e-05, 5.979100000000001e-05, 5.9916000000000136e-05, 5.9777999999999915e-05, 5.981899999999915e-05, 5.9707999999998596e-05, 5.9943999999999276e-05, 5.9750000000000775e-05, 5.9957999999998846e-05, 5.98750000000009e-05, 5.9764000000000345e-05, 5.9943999999999276e-05, 5.991699999999961e-05, 5.9819999999998624e-05, 5.9833999999998194e-05, 5.9819999999998624e-05, 5.9971999999998415e-05, 5.993099999999918e-05, 5.9971999999998415e-05, 5.994499999999875e-05, 5.998699999999746e-05, 5.9861999999997334e-05, 5.993099999999918e-05, 5.9999999999997555e-05, 6.001299999999765e-05, 5.9929999999999706e-05, 5.9943999999999276e-05, 5.9735999999997735e-05, 5.9929999999999706e-05, 5.9902000000000566e-05, 5.979100000000001e-05, 5.9999999999997555e-05, 5.990300000000004e-05, 5.9806000000002524e-05, 5.9764000000000345e-05, 5.984699999999829e-05, 5.984699999999829e-05, 5.9791999999999484e-05]</msg>
<status status="PASS" starttime="20201030 18:31:20.850" endtime="20201030 18:31:20.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.845" endtime="20201030 18:31:20.853"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:20.856" endtime="20201030 18:31:20.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.855" endtime="20201030 18:31:20.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.854" endtime="20201030 18:31:20.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.496" endtime="20201030 18:31:20.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.495" endtime="20201030 18:31:20.877"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.886" endtime="20201030 18:31:20.904"></status>
</kw>
<msg timestamp="20201030 18:31:20.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:20.884" endtime="20201030 18:31:20.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:20.906" endtime="20201030 18:31:20.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.908" endtime="20201030 18:31:20.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.882" endtime="20201030 18:31:20.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.880" endtime="20201030 18:31:20.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.917" endtime="20201030 18:31:21.203"></status>
</kw>
<msg timestamp="20201030 18:31:21.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022822472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022883722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.916" endtime="20201030 18:31:21.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022822472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022883722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:21.207" endtime="20201030 18:31:21.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.215" endtime="20201030 18:31:21.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.913" endtime="20201030 18:31:21.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.911" endtime="20201030 18:31:21.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:21.222" level="INFO">${RESULT} = [{'diff': 6.12499999999988e-05}, {'diff': 6.0763999999997875e-05}, {'diff': 6.0915999999997666e-05}, {'diff': 6.062499999999818e-05}, {'diff': 6.0707999999999596e-05}, {'diff': 6.08750000000019e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:21.219" endtime="20201030 18:31:21.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:21.226" level="INFO">${ACCURACY} = {'diff': [6.12499999999988e-05, 6.0763999999997875e-05, 6.0915999999997666e-05, 6.062499999999818e-05, 6.0707999999999596e-05, 6.08750000000019e-05, 6.0707999999999596e-05, 6.0888999999998e-05, 6.0805...</msg>
<status status="PASS" starttime="20201030 18:31:21.223" endtime="20201030 18:31:21.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.231" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 18:31:21.230" endtime="20201030 18:31:21.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.233" level="INFO">VALUE: [6.12499999999988e-05, 6.0763999999997875e-05, 6.0915999999997666e-05, 6.062499999999818e-05, 6.0707999999999596e-05, 6.08750000000019e-05, 6.0707999999999596e-05, 6.0888999999998e-05, 6.080500000000058e-05, 6.0708000000003065e-05, 6.0943999999996806e-05, 6.0862000000001804e-05, 6.073699999999821e-05, 6.1028000000001165e-05, 6.0707999999999596e-05, 6.093100000000018e-05, 6.0986000000002455e-05, 6.0764000000001345e-05, 6.084699999999929e-05, 6.088900000000147e-05, 6.0722000000002635e-05, 6.095899999999932e-05, 6.0792000000000485e-05, 6.0750000000001775e-05, 6.0764000000001345e-05, 6.084699999999929e-05, 6.086100000000233e-05, 6.083299999999972e-05, 6.1028000000001165e-05, 6.080500000000058e-05, 6.0916000000001136e-05, 6.0707999999999596e-05, 6.1013999999998125e-05, 6.0707999999999596e-05, 6.0736000000002205e-05, 6.0721999999999166e-05, 6.1014000000001595e-05, 6.087499999999843e-05, 6.1000000000002025e-05, 6.1014000000001595e-05, 6.086099999999886e-05, 6.084699999999929e-05, 6.091700000000061e-05, 6.0763999999997875e-05, 6.088900000000147e-05, 6.0820000000003094e-05, 6.088900000000147e-05, 6.0764000000001345e-05, 6.088900000000147e-05, 6.097300000000236e-05]</msg>
<status status="PASS" starttime="20201030 18:31:21.232" endtime="20201030 18:31:21.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.227" endtime="20201030 18:31:21.236"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:21.239" endtime="20201030 18:31:21.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.238" endtime="20201030 18:31:21.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.237" endtime="20201030 18:31:21.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.878" endtime="20201030 18:31:21.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.877" endtime="20201030 18:31:21.260"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.269" endtime="20201030 18:31:21.286"></status>
</kw>
<msg timestamp="20201030 18:31:21.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.267" endtime="20201030 18:31:21.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.288" endtime="20201030 18:31:21.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.290" endtime="20201030 18:31:21.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.265" endtime="20201030 18:31:21.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.262" endtime="20201030 18:31:21.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.300" endtime="20201030 18:31:21.584"></status>
</kw>
<msg timestamp="20201030 18:31:21.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021878667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:21.298" endtime="20201030 18:31:21.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021878667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:21.589" endtime="20201030 18:31:21.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.597" endtime="20201030 18:31:21.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.295" endtime="20201030 18:31:21.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.294" endtime="20201030 18:31:21.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:21.603" level="INFO">${RESULT} = [{'diff': 6.242999999999874e-05}, {'diff': 6.180499999999811e-05}, {'diff': 6.194400000000128e-05}, {'diff': 6.187499999999943e-05}, {'diff': 6.197200000000042e-05}, {'diff': 6.179199999999802e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:21.600" endtime="20201030 18:31:21.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:21.608" level="INFO">${ACCURACY} = {'diff': [6.242999999999874e-05, 6.180499999999811e-05, 6.194400000000128e-05, 6.187499999999943e-05, 6.197200000000042e-05, 6.179199999999802e-05, 6.186099999999986e-05, 6.172200000000017e-05, 6.1972...</msg>
<status status="PASS" starttime="20201030 18:31:21.604" endtime="20201030 18:31:21.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.613" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 18:31:21.612" endtime="20201030 18:31:21.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.616" level="INFO">VALUE: [6.242999999999874e-05, 6.180499999999811e-05, 6.194400000000128e-05, 6.187499999999943e-05, 6.197200000000042e-05, 6.179199999999802e-05, 6.186099999999986e-05, 6.172200000000017e-05, 6.197200000000042e-05, 6.197200000000042e-05, 6.191700000000161e-05, 6.191700000000161e-05, 6.172200000000017e-05, 6.198599999999999e-05, 6.195900000000032e-05, 6.184799999999976e-05, 6.170900000000007e-05, 6.18620000000028e-05, 6.199999999999956e-05, 6.197299999999989e-05, 6.191600000000214e-05, 6.1888999999999e-05, 6.195800000000085e-05, 6.1888999999999e-05, 6.183300000000072e-05, 6.198599999999999e-05, 6.190300000000204e-05, 6.168000000000146e-05, 6.17499999999993e-05, 6.186099999999986e-05, 6.191699999999814e-05, 6.191700000000161e-05, 6.201399999999913e-05, 6.186099999999986e-05, 6.193100000000118e-05, 6.194499999999728e-05, 6.177800000000191e-05, 6.187499999999943e-05, 6.18340000000002e-05, 6.179199999999802e-05, 6.187499999999943e-05, 6.183299999999725e-05, 6.191599999999867e-05, 6.17499999999993e-05, 6.187499999999943e-05, 6.197200000000042e-05, 6.187499999999943e-05, 6.19439999999978e-05, 6.195800000000085e-05, 6.184700000000029e-05]</msg>
<status status="PASS" starttime="20201030 18:31:21.614" endtime="20201030 18:31:21.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.609" endtime="20201030 18:31:21.617"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:21.621" endtime="20201030 18:31:21.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.619" endtime="20201030 18:31:21.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.618" endtime="20201030 18:31:21.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.261" endtime="20201030 18:31:21.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.260" endtime="20201030 18:31:21.641"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.650" endtime="20201030 18:31:21.667"></status>
</kw>
<msg timestamp="20201030 18:31:21.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.648" endtime="20201030 18:31:21.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.668" endtime="20201030 18:31:21.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.671" endtime="20201030 18:31:21.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.646" endtime="20201030 18:31:21.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.644" endtime="20201030 18:31:21.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.680" endtime="20201030 18:31:21.966"></status>
</kw>
<msg timestamp="20201030 18:31:21.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021654514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021717458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:21.679" endtime="20201030 18:31:21.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021654514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021717458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:21.971" endtime="20201030 18:31:21.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.979" endtime="20201030 18:31:21.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.676" endtime="20201030 18:31:21.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.674" endtime="20201030 18:31:21.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:21.986" level="INFO">${RESULT} = [{'diff': 6.29439999999988e-05}, {'diff': 6.280600000000205e-05}, {'diff': 6.290299999999957e-05}, {'diff': 6.284699999999782e-05}, {'diff': 6.2889e-05}, {'diff': 6.298599999999752e-05}, {'diff': 6.28...</msg>
<status status="PASS" starttime="20201030 18:31:21.983" endtime="20201030 18:31:21.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:21.991" level="INFO">${ACCURACY} = {'diff': [6.29439999999988e-05, 6.280600000000205e-05, 6.290299999999957e-05, 6.284699999999782e-05, 6.2889e-05, 6.298599999999752e-05, 6.284700000000129e-05, 6.290299999999957e-05, 6.279199999999902e...</msg>
<status status="PASS" starttime="20201030 18:31:21.987" endtime="20201030 18:31:21.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.995" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 18:31:21.994" endtime="20201030 18:31:21.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.998" level="INFO">VALUE: [6.29439999999988e-05, 6.280600000000205e-05, 6.290299999999957e-05, 6.284699999999782e-05, 6.2889e-05, 6.298599999999752e-05, 6.284700000000129e-05, 6.290299999999957e-05, 6.279199999999902e-05, 6.291699999999914e-05, 6.295899999999785e-05, 6.287499999999696e-05, 6.272300000000064e-05, 6.287500000000043e-05, 6.284800000000076e-05, 6.298600000000099e-05, 6.297199999999795e-05, 6.298600000000099e-05, 6.291599999999967e-05, 6.286099999999739e-05, 6.290299999999957e-05, 6.287500000000043e-05, 6.273600000000074e-05, 6.272200000000117e-05, 6.287500000000043e-05, 6.290300000000304e-05, 6.277800000000291e-05, 6.279200000000248e-05, 6.293100000000218e-05, 6.283299999999825e-05, 6.272200000000117e-05, 6.290299999999957e-05, 6.27500000000003e-05, 6.276399999999988e-05, 6.272300000000064e-05, 6.280599999999859e-05, 6.287500000000043e-05, 6.279199999999902e-05, 6.29439999999988e-05, 6.277800000000291e-05, 6.287500000000043e-05, 6.291599999999967e-05, 6.29439999999988e-05, 6.286100000000086e-05, 6.276399999999988e-05, 6.2889e-05, 6.27080000000016e-05, 6.284700000000129e-05, 6.273600000000074e-05, 6.290299999999957e-05]</msg>
<status status="PASS" starttime="20201030 18:31:21.996" endtime="20201030 18:31:21.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.992" endtime="20201030 18:31:21.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:22.003" endtime="20201030 18:31:22.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.001" endtime="20201030 18:31:22.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.000" endtime="20201030 18:31:22.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.642" endtime="20201030 18:31:22.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.642" endtime="20201030 18:31:22.024"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.032" endtime="20201030 18:31:22.050"></status>
</kw>
<msg timestamp="20201030 18:31:22.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.031" endtime="20201030 18:31:22.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.052" endtime="20201030 18:31:22.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.054" endtime="20201030 18:31:22.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.028" endtime="20201030 18:31:22.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.026" endtime="20201030 18:31:22.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.063" endtime="20201030 18:31:22.348"></status>
</kw>
<msg timestamp="20201030 18:31:22.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022720764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022784944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:22.062" endtime="20201030 18:31:22.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022720764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022784944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:22.352" endtime="20201030 18:31:22.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.360" endtime="20201030 18:31:22.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.059" endtime="20201030 18:31:22.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.058" endtime="20201030 18:31:22.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:22.367" level="INFO">${RESULT} = [{'diff': 6.418000000000049e-05}, {'diff': 6.379200000000002e-05}, {'diff': 6.379200000000002e-05}, {'diff': 6.399999999999809e-05}, {'diff': 6.398599999999852e-05}, {'diff': 6.383299999999925e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:22.364" endtime="20201030 18:31:22.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:22.371" level="INFO">${ACCURACY} = {'diff': [6.418000000000049e-05, 6.379200000000002e-05, 6.379200000000002e-05, 6.399999999999809e-05, 6.398599999999852e-05, 6.383299999999925e-05, 6.398599999999852e-05, 6.376400000000088e-05, 6.3861...</msg>
<status status="PASS" starttime="20201030 18:31:22.368" endtime="20201030 18:31:22.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.376" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 18:31:22.375" endtime="20201030 18:31:22.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.378" level="INFO">VALUE: [6.418000000000049e-05, 6.379200000000002e-05, 6.379200000000002e-05, 6.399999999999809e-05, 6.398599999999852e-05, 6.383299999999925e-05, 6.398599999999852e-05, 6.376400000000088e-05, 6.386100000000186e-05, 6.394500000000275e-05, 6.374999999999784e-05, 6.386099999999839e-05, 6.386099999999839e-05, 6.3889000000001e-05, 6.397299999999842e-05, 6.38340000000022e-05, 6.379200000000002e-05, 6.393100000000318e-05, 6.393099999999971e-05, 6.387499999999796e-05, 6.39020000000011e-05, 6.397199999999895e-05, 6.379100000000054e-05, 6.384700000000229e-05, 6.374999999999784e-05, 6.387499999999796e-05, 6.380500000000011e-05, 6.377800000000045e-05, 6.390300000000057e-05, 6.377800000000045e-05, 6.393099999999971e-05, 6.379200000000002e-05, 6.399999999999809e-05, 6.377800000000045e-05, 6.373599999999827e-05, 6.376400000000088e-05, 6.395899999999885e-05, 6.387500000000143e-05, 6.397300000000189e-05, 6.380599999999959e-05, 6.394499999999928e-05, 6.379200000000002e-05, 6.37500000000013e-05, 6.376400000000088e-05, 6.373600000000174e-05, 6.39439999999998e-05, 6.3889000000001e-05, 6.393000000000024e-05, 6.387499999999796e-05, 6.379200000000002e-05]</msg>
<status status="PASS" starttime="20201030 18:31:22.377" endtime="20201030 18:31:22.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.372" endtime="20201030 18:31:22.380"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:22.384" endtime="20201030 18:31:22.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.383" endtime="20201030 18:31:22.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.381" endtime="20201030 18:31:22.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.024" endtime="20201030 18:31:22.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.024" endtime="20201030 18:31:22.405"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.414" endtime="20201030 18:31:22.431"></status>
</kw>
<msg timestamp="20201030 18:31:22.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.412" endtime="20201030 18:31:22.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.433" endtime="20201030 18:31:22.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.435" endtime="20201030 18:31:22.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.409" endtime="20201030 18:31:22.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.407" endtime="20201030 18:31:22.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.444" endtime="20201030 18:31:22.730"></status>
</kw>
<msg timestamp="20201030 18:31:22.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022123833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022189264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:22.443" endtime="20201030 18:31:22.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022123833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022189264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:22.734" endtime="20201030 18:31:22.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.742" endtime="20201030 18:31:22.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.440" endtime="20201030 18:31:22.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.438" endtime="20201030 18:31:22.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:22.749" level="INFO">${RESULT} = [{'diff': 6.543100000000121e-05}, {'diff': 6.48479999999993e-05}, {'diff': 6.493099999999724e-05}, {'diff': 6.487499999999896e-05}, {'diff': 6.500000000000256e-05}, {'diff': 6.480500000000111e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:22.746" endtime="20201030 18:31:22.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:22.756" level="INFO">${ACCURACY} = {'diff': [6.543100000000121e-05, 6.48479999999993e-05, 6.493099999999724e-05, 6.487499999999896e-05, 6.500000000000256e-05, 6.480500000000111e-05, 6.469399999999709e-05, 6.49440000000008e-05, 6.498599...</msg>
<status status="PASS" starttime="20201030 18:31:22.750" endtime="20201030 18:31:22.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.761" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 18:31:22.760" endtime="20201030 18:31:22.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.763" level="INFO">VALUE: [6.543100000000121e-05, 6.48479999999993e-05, 6.493099999999724e-05, 6.487499999999896e-05, 6.500000000000256e-05, 6.480500000000111e-05, 6.469399999999709e-05, 6.49440000000008e-05, 6.498599999999952e-05, 6.483300000000025e-05, 6.498599999999952e-05, 6.47219999999997e-05, 6.47639999999984e-05, 6.486100000000286e-05, 6.481900000000068e-05, 6.477800000000145e-05, 6.495800000000038e-05, 6.483300000000025e-05, 6.483300000000025e-05, 6.491700000000114e-05, 6.4889000000002e-05, 6.49029999999981e-05, 6.499999999999909e-05, 6.48340000000032e-05, 6.47089999999996e-05, 6.487500000000243e-05, 6.473599999999927e-05, 6.47500000000023e-05, 6.473599999999927e-05, 6.481900000000068e-05, 6.483300000000025e-05, 6.479100000000154e-05, 6.487499999999896e-05, 6.473599999999927e-05, 6.498600000000299e-05, 6.487499999999896e-05, 6.484699999999982e-05, 6.473599999999927e-05, 6.498599999999952e-05, 6.477800000000145e-05, 6.473599999999927e-05, 6.484699999999982e-05, 6.49029999999981e-05, 6.497199999999995e-05, 6.493100000000071e-05, 6.488899999999853e-05, 6.48340000000032e-05, 6.477799999999798e-05, 6.469500000000003e-05, 6.48479999999993e-05]</msg>
<status status="PASS" starttime="20201030 18:31:22.762" endtime="20201030 18:31:22.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.757" endtime="20201030 18:31:22.765"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:22.769" endtime="20201030 18:31:22.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.767" endtime="20201030 18:31:22.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.766" endtime="20201030 18:31:22.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.406" endtime="20201030 18:31:22.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.405" endtime="20201030 18:31:22.789"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.798" endtime="20201030 18:31:22.815"></status>
</kw>
<msg timestamp="20201030 18:31:22.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.797" endtime="20201030 18:31:22.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.817" endtime="20201030 18:31:22.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.819" endtime="20201030 18:31:22.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.794" endtime="20201030 18:31:22.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.792" endtime="20201030 18:31:22.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.828" endtime="20201030 18:31:23.116"></status>
</kw>
<msg timestamp="20201030 18:31:23.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021815694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021882208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:22.827" endtime="20201030 18:31:23.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021815694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021882208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:23.121" endtime="20201030 18:31:23.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.129" endtime="20201030 18:31:23.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.824" endtime="20201030 18:31:23.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.822" endtime="20201030 18:31:23.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:23.136" level="INFO">${RESULT} = [{'diff': 6.651400000000016e-05}, {'diff': 6.579199999999855e-05}, {'diff': 6.588899999999953e-05}, {'diff': 6.586100000000039e-05}, {'diff': 6.593099999999824e-05}, {'diff': 6.576400000000288e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:23.132" endtime="20201030 18:31:23.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:23.140" level="INFO">${ACCURACY} = {'diff': [6.651400000000016e-05, 6.579199999999855e-05, 6.588899999999953e-05, 6.586100000000039e-05, 6.593099999999824e-05, 6.576400000000288e-05, 6.57639999999994e-05, 6.569500000000103e-05, 6.57499...</msg>
<status status="PASS" starttime="20201030 18:31:23.136" endtime="20201030 18:31:23.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.144" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 18:31:23.143" endtime="20201030 18:31:23.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.147" level="INFO">VALUE: [6.651400000000016e-05, 6.579199999999855e-05, 6.588899999999953e-05, 6.586100000000039e-05, 6.593099999999824e-05, 6.576400000000288e-05, 6.57639999999994e-05, 6.569500000000103e-05, 6.574999999999984e-05, 6.587499999999996e-05, 6.584700000000082e-05, 6.581999999999769e-05, 6.580600000000159e-05, 6.57639999999994e-05, 6.57090000000006e-05, 6.579099999999907e-05, 6.580500000000211e-05, 6.570800000000113e-05, 6.579099999999907e-05, 6.595800000000138e-05, 6.583300000000125e-05, 6.573600000000027e-05, 6.600000000000009e-05, 6.579100000000254e-05, 6.591699999999867e-05, 6.595799999999791e-05, 6.591700000000214e-05, 6.601399999999966e-05, 6.573600000000027e-05, 6.597200000000095e-05, 6.573600000000027e-05, 6.593100000000171e-05, 6.58480000000003e-05, 6.595900000000085e-05, 6.579199999999855e-05, 6.598699999999999e-05, 6.577799999999898e-05, 6.583300000000125e-05, 6.591699999999867e-05, 6.579099999999907e-05, 6.59440000000018e-05, 6.580500000000211e-05, 6.57639999999994e-05, 6.573600000000027e-05, 6.588899999999953e-05, 6.580499999999864e-05, 6.573600000000027e-05, 6.597200000000095e-05, 6.586100000000039e-05, 6.588899999999953e-05]</msg>
<status status="PASS" starttime="20201030 18:31:23.145" endtime="20201030 18:31:23.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.140" endtime="20201030 18:31:23.148"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:23.152" endtime="20201030 18:31:23.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.150" endtime="20201030 18:31:23.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.149" endtime="20201030 18:31:23.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.790" endtime="20201030 18:31:23.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.790" endtime="20201030 18:31:23.173"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.187" endtime="20201030 18:31:23.206"></status>
</kw>
<msg timestamp="20201030 18:31:23.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.185" endtime="20201030 18:31:23.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.208" endtime="20201030 18:31:23.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.210" endtime="20201030 18:31:23.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.180" endtime="20201030 18:31:23.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.178" endtime="20201030 18:31:23.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.220" endtime="20201030 18:31:23.505"></status>
</kw>
<msg timestamp="20201030 18:31:23.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028969917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029037583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:23.218" endtime="20201030 18:31:23.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028969917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029037583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:23.510" endtime="20201030 18:31:23.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.518" endtime="20201030 18:31:23.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.215" endtime="20201030 18:31:23.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.214" endtime="20201030 18:31:23.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:23.525" level="INFO">${RESULT} = [{'diff': 6.766599999999748e-05}, {'diff': 6.684700000000182e-05}, {'diff': 6.695800000000238e-05}, {'diff': 6.675000000000084e-05}, {'diff': 6.681900000000268e-05}, {'diff': 6.687500000000096e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:23.521" endtime="20201030 18:31:23.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:23.529" level="INFO">${ACCURACY} = {'diff': [6.766599999999748e-05, 6.684700000000182e-05, 6.695800000000238e-05, 6.675000000000084e-05, 6.681900000000268e-05, 6.687500000000096e-05, 6.694500000000228e-05, 6.693100000000271e-05, 6.6931...</msg>
<status status="PASS" starttime="20201030 18:31:23.526" endtime="20201030 18:31:23.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.533" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 18:31:23.532" endtime="20201030 18:31:23.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.536" level="INFO">VALUE: [6.766599999999748e-05, 6.684700000000182e-05, 6.695800000000238e-05, 6.675000000000084e-05, 6.681900000000268e-05, 6.687500000000096e-05, 6.694500000000228e-05, 6.693100000000271e-05, 6.693100000000271e-05, 6.688900000000053e-05, 6.695900000000185e-05, 6.694500000000228e-05, 6.686100000000139e-05, 6.680499999999964e-05, 6.673700000000074e-05, 6.700000000000109e-05, 6.692999999999977e-05, 6.681900000000268e-05, 6.701400000000066e-05, 6.674999999999737e-05, 6.686099999999792e-05, 6.693000000000324e-05, 6.67359999999978e-05, 6.687499999999749e-05, 6.679200000000302e-05, 6.691699999999967e-05, 6.700000000000109e-05, 6.687500000000096e-05, 6.682000000000216e-05, 6.677799999999998e-05, 6.682000000000216e-05, 6.691699999999967e-05, 6.687500000000096e-05, 6.670899999999813e-05, 6.693099999999924e-05, 6.694499999999881e-05, 6.672300000000464e-05, 6.68480000000013e-05, 6.679200000000302e-05, 6.69030000000001e-05, 6.670799999999866e-05, 6.690200000000063e-05, 6.701399999999719e-05, 6.681899999999574e-05, 6.697199999999848e-05, 6.697199999999848e-05, 6.676400000000388e-05, 6.699999999999762e-05, 6.698600000000499e-05, 6.695799999999891e-05]</msg>
<status status="PASS" starttime="20201030 18:31:23.534" endtime="20201030 18:31:23.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.530" endtime="20201030 18:31:23.538"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:23.542" endtime="20201030 18:31:23.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.540" endtime="20201030 18:31:23.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.539" endtime="20201030 18:31:23.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.174" endtime="20201030 18:31:23.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.173" endtime="20201030 18:31:23.562"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.571" endtime="20201030 18:31:23.588"></status>
</kw>
<msg timestamp="20201030 18:31:23.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.569" endtime="20201030 18:31:23.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.590" endtime="20201030 18:31:23.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.592" endtime="20201030 18:31:23.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.567" endtime="20201030 18:31:23.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.565" endtime="20201030 18:31:23.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.601" endtime="20201030 18:31:23.887"></status>
</kw>
<msg timestamp="20201030 18:31:23.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021790375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021858972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:23.600" endtime="20201030 18:31:23.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021790375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021858972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:23.891" endtime="20201030 18:31:23.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.899" endtime="20201030 18:31:23.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.597" endtime="20201030 18:31:23.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.595" endtime="20201030 18:31:23.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:23.906" level="INFO">${RESULT} = [{'diff': 6.85970000000001e-05}, {'diff': 6.791700000000067e-05}, {'diff': 6.780600000000012e-05}, {'diff': 6.787499999999849e-05}, {'diff': 6.794499999999981e-05}, {'diff': 6.787500000000196e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:23.902" endtime="20201030 18:31:23.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:23.911" level="INFO">${ACCURACY} = {'diff': [6.85970000000001e-05, 6.791700000000067e-05, 6.780600000000012e-05, 6.787499999999849e-05, 6.794499999999981e-05, 6.787500000000196e-05, 6.777799999999751e-05, 6.795899999999938e-05, 6.79449...</msg>
<status status="PASS" starttime="20201030 18:31:23.907" endtime="20201030 18:31:23.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.915" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 18:31:23.914" endtime="20201030 18:31:23.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.918" level="INFO">VALUE: [6.85970000000001e-05, 6.791700000000067e-05, 6.780600000000012e-05, 6.787499999999849e-05, 6.794499999999981e-05, 6.787500000000196e-05, 6.777799999999751e-05, 6.795899999999938e-05, 6.794499999999981e-05, 6.777799999999751e-05, 6.77229999999987e-05, 6.777800000000098e-05, 6.784699999999935e-05, 6.783299999999978e-05, 6.787499999999849e-05, 6.799999999999862e-05, 6.777699999999803e-05, 6.795899999999938e-05, 6.77770000000015e-05, 6.791599999999773e-05, 6.788900000000153e-05, 6.784699999999935e-05, 6.793100000000024e-05, 6.784700000000282e-05, 6.77640000000014e-05, 6.798599999999905e-05, 6.777800000000098e-05, 6.788899999999806e-05, 6.780600000000012e-05, 6.788900000000153e-05, 6.799999999999862e-05, 6.801299999999871e-05, 6.795899999999938e-05, 6.770899999999913e-05, 6.783299999999978e-05, 6.79030000000011e-05, 6.795900000000285e-05, 6.783299999999978e-05, 6.779100000000107e-05, 6.77220000000027e-05, 6.801400000000166e-05, 6.774999999999837e-05, 6.80420000000008e-05, 6.800000000000209e-05, 6.77640000000014e-05, 6.786099999999892e-05, 6.79030000000011e-05, 6.798599999999905e-05, 6.777800000000098e-05, 6.786099999999892e-05]</msg>
<status status="PASS" starttime="20201030 18:31:23.916" endtime="20201030 18:31:23.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.912" endtime="20201030 18:31:23.919"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:23.923" endtime="20201030 18:31:23.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.921" endtime="20201030 18:31:23.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.920" endtime="20201030 18:31:23.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.563" endtime="20201030 18:31:23.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.563" endtime="20201030 18:31:23.944"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.952" endtime="20201030 18:31:23.970"></status>
</kw>
<msg timestamp="20201030 18:31:23.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.951" endtime="20201030 18:31:23.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.971" endtime="20201030 18:31:23.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.974" endtime="20201030 18:31:23.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.948" endtime="20201030 18:31:23.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.946" endtime="20201030 18:31:23.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.983" endtime="20201030 18:31:24.270"></status>
</kw>
<msg timestamp="20201030 18:31:24.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022090472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022159875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:23.982" endtime="20201030 18:31:24.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022090472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022159875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:24.275" endtime="20201030 18:31:24.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.283" endtime="20201030 18:31:24.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.979" endtime="20201030 18:31:24.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.977" endtime="20201030 18:31:24.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:24.290" level="INFO">${RESULT} = [{'diff': 6.940299999999913e-05}, {'diff': 6.884799999999983e-05}, {'diff': 6.870900000000013e-05}, {'diff': 6.880500000000164e-05}, {'diff': 6.893099999999777e-05}, {'diff': 6.879100000000207e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:24.286" endtime="20201030 18:31:24.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:24.294" level="INFO">${ACCURACY} = {'diff': [6.940299999999913e-05, 6.884799999999983e-05, 6.870900000000013e-05, 6.880500000000164e-05, 6.893099999999777e-05, 6.879100000000207e-05, 6.887499999999949e-05, 6.880500000000164e-05, 6.8874...</msg>
<status status="PASS" starttime="20201030 18:31:24.291" endtime="20201030 18:31:24.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.298" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 18:31:24.297" endtime="20201030 18:31:24.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.301" level="INFO">VALUE: [6.940299999999913e-05, 6.884799999999983e-05, 6.870900000000013e-05, 6.880500000000164e-05, 6.893099999999777e-05, 6.879100000000207e-05, 6.887499999999949e-05, 6.880500000000164e-05, 6.887499999999949e-05, 6.883300000000078e-05, 6.877799999999851e-05, 6.891599999999873e-05, 6.881900000000121e-05, 6.87359999999998e-05, 6.883400000000026e-05, 6.897200000000048e-05, 6.89169999999982e-05, 6.891700000000167e-05, 6.882000000000069e-05, 6.897299999999995e-05, 6.898600000000005e-05, 6.886099999999992e-05, 6.880600000000112e-05, 6.888899999999906e-05, 6.880500000000164e-05, 6.881899999999774e-05, 6.900000000000309e-05, 6.894400000000134e-05, 6.87359999999998e-05, 6.880500000000164e-05, 6.870799999999719e-05, 6.890200000000263e-05, 6.876399999999894e-05, 6.891700000000167e-05, 6.884700000000035e-05, 6.87359999999998e-05, 6.884700000000035e-05, 6.881900000000121e-05, 6.886099999999992e-05, 6.879199999999808e-05, 6.887500000000296e-05, 6.899999999999962e-05, 6.894500000000081e-05, 6.898600000000005e-05, 6.894500000000081e-05, 6.898699999999952e-05, 6.897299999999995e-05, 6.874999999999937e-05, 6.888799999999959e-05, 6.890299999999863e-05]</msg>
<status status="PASS" starttime="20201030 18:31:24.300" endtime="20201030 18:31:24.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.295" endtime="20201030 18:31:24.302"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:24.306" endtime="20201030 18:31:24.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.304" endtime="20201030 18:31:24.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.303" endtime="20201030 18:31:24.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.945" endtime="20201030 18:31:24.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.944" endtime="20201030 18:31:24.327"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.335" endtime="20201030 18:31:24.354"></status>
</kw>
<msg timestamp="20201030 18:31:24.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.334" endtime="20201030 18:31:24.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.355" endtime="20201030 18:31:24.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.358" endtime="20201030 18:31:24.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.331" endtime="20201030 18:31:24.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.329" endtime="20201030 18:31:24.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.367" endtime="20201030 18:31:24.653"></status>
</kw>
<msg timestamp="20201030 18:31:24.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022977292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023047278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:24.366" endtime="20201030 18:31:24.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022977292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023047278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:24.657" endtime="20201030 18:31:24.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.666" endtime="20201030 18:31:24.667"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.363" endtime="20201030 18:31:24.668"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.361" endtime="20201030 18:31:24.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:24.672" level="INFO">${RESULT} = [{'diff': 6.998600000000105e-05}, {'diff': 6.986100000000092e-05}, {'diff': 6.980499999999917e-05}, {'diff': 6.99299999999993e-05}, {'diff': 6.972200000000123e-05}, {'diff': 6.995800000000191e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:24.669" endtime="20201030 18:31:24.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:24.677" level="INFO">${ACCURACY} = {'diff': [6.998600000000105e-05, 6.986100000000092e-05, 6.980499999999917e-05, 6.99299999999993e-05, 6.972200000000123e-05, 6.995800000000191e-05, 6.99299999999993e-05, 6.979199999999908e-05, 6.998599...</msg>
<status status="PASS" starttime="20201030 18:31:24.673" endtime="20201030 18:31:24.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.681" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 18:31:24.680" endtime="20201030 18:31:24.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.683" level="INFO">VALUE: [6.998600000000105e-05, 6.986100000000092e-05, 6.980499999999917e-05, 6.99299999999993e-05, 6.972200000000123e-05, 6.995800000000191e-05, 6.99299999999993e-05, 6.979199999999908e-05, 6.998599999999758e-05, 6.981899999999874e-05, 6.997199999999801e-05, 6.994399999999887e-05, 6.994500000000181e-05, 6.980499999999917e-05, 7.001400000000019e-05, 6.976399999999994e-05, 6.965299999999938e-05, 6.976399999999994e-05, 6.981999999999822e-05, 6.991700000000267e-05, 6.97230000000007e-05, 6.980499999999917e-05, 6.998600000000105e-05, 6.99299999999993e-05, 6.97360000000008e-05, 6.998599999999758e-05, 6.970799999999819e-05, 6.980599999999865e-05, 6.998600000000105e-05, 6.980599999999865e-05, 6.99299999999993e-05, 6.988900000000006e-05, 6.987500000000049e-05, 6.976399999999994e-05, 6.977800000000298e-05, 6.995800000000191e-05, 6.980599999999865e-05, 6.975000000000037e-05, 6.993099999999877e-05, 6.975000000000037e-05, 6.980599999999865e-05, 6.984700000000135e-05, 7.000000000000062e-05, 6.973700000000027e-05, 6.970800000000166e-05, 6.977700000000003e-05, 6.981899999999874e-05, 6.987499999999702e-05, 6.973599999999733e-05, 6.990299999999963e-05]</msg>
<status status="PASS" starttime="20201030 18:31:24.682" endtime="20201030 18:31:24.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.677" endtime="20201030 18:31:24.686"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:24.689" endtime="20201030 18:31:24.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.688" endtime="20201030 18:31:24.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.687" endtime="20201030 18:31:24.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.328" endtime="20201030 18:31:24.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.327" endtime="20201030 18:31:24.710"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.719" endtime="20201030 18:31:24.737"></status>
</kw>
<msg timestamp="20201030 18:31:24.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.717" endtime="20201030 18:31:24.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.738" endtime="20201030 18:31:24.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.741" endtime="20201030 18:31:24.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.715" endtime="20201030 18:31:24.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.713" endtime="20201030 18:31:24.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.750" endtime="20201030 18:31:25.036"></status>
</kw>
<msg timestamp="20201030 18:31:25.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02195225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022023722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:24.748" endtime="20201030 18:31:25.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02195225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022023722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:25.040" endtime="20201030 18:31:25.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.049" endtime="20201030 18:31:25.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.746" endtime="20201030 18:31:25.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.744" endtime="20201030 18:31:25.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:25.055" level="INFO">${RESULT} = [{'diff': 7.147199999999951e-05}, {'diff': 7.063899999999734e-05}, {'diff': 7.077700000000103e-05}, {'diff': 7.068099999999952e-05}, {'diff': 7.088900000000106e-05}, {'diff': 7.080600000000312e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:25.052" endtime="20201030 18:31:25.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:25.060" level="INFO">${ACCURACY} = {'diff': [7.147199999999951e-05, 7.063899999999734e-05, 7.077700000000103e-05, 7.068099999999952e-05, 7.088900000000106e-05, 7.080600000000312e-05, 7.094500000000281e-05, 7.077800000000051e-05, 7.0930...</msg>
<status status="PASS" starttime="20201030 18:31:25.056" endtime="20201030 18:31:25.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.065" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 18:31:25.064" endtime="20201030 18:31:25.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.067" level="INFO">VALUE: [7.147199999999951e-05, 7.063899999999734e-05, 7.077700000000103e-05, 7.068099999999952e-05, 7.088900000000106e-05, 7.080600000000312e-05, 7.094500000000281e-05, 7.077800000000051e-05, 7.093099999999977e-05, 7.081999999999922e-05, 7.084800000000183e-05, 7.083400000000226e-05, 7.077700000000103e-05, 7.076400000000094e-05, 7.087499999999802e-05, 7.090300000000063e-05, 7.083299999999931e-05, 7.069399999999962e-05, 7.07910000000006e-05, 7.087499999999802e-05, 7.077799999999704e-05, 7.077800000000051e-05, 7.09300000000003e-05, 7.086100000000192e-05, 7.080500000000017e-05, 7.086100000000192e-05, 7.079200000000008e-05, 7.098599999999858e-05, 7.095799999999944e-05, 7.076400000000094e-05, 7.086100000000192e-05, 7.076400000000094e-05, 7.072199999999876e-05, 7.079199999999661e-05, 7.088899999999759e-05, 7.09300000000003e-05, 7.076400000000094e-05, 7.095799999999944e-05, 7.066599999999701e-05, 7.077699999999756e-05, 7.099999999999815e-05, 7.072199999999876e-05, 7.09300000000003e-05, 7.09170000000002e-05, 7.098599999999858e-05, 7.076399999999747e-05, 7.086099999999845e-05, 7.080599999999965e-05, 7.083299999999931e-05, 7.081899999999974e-05]</msg>
<status status="PASS" starttime="20201030 18:31:25.066" endtime="20201030 18:31:25.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.061" endtime="20201030 18:31:25.069"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:25.072" endtime="20201030 18:31:25.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.071" endtime="20201030 18:31:25.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.070" endtime="20201030 18:31:25.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.711" endtime="20201030 18:31:25.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.710" endtime="20201030 18:31:25.093"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.102" endtime="20201030 18:31:25.120"></status>
</kw>
<msg timestamp="20201030 18:31:25.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.100" endtime="20201030 18:31:25.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.122" endtime="20201030 18:31:25.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.124" endtime="20201030 18:31:25.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.098" endtime="20201030 18:31:25.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.096" endtime="20201030 18:31:25.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.133" endtime="20201030 18:31:25.420"></status>
</kw>
<msg timestamp="20201030 18:31:25.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022346611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022418722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:25.132" endtime="20201030 18:31:25.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022346611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022418722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:25.425" endtime="20201030 18:31:25.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.433" endtime="20201030 18:31:25.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.129" endtime="20201030 18:31:25.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.127" endtime="20201030 18:31:25.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:25.439" level="INFO">${RESULT} = [{'diff': 7.21109999999997e-05}, {'diff': 7.188800000000259e-05}, {'diff': 7.182000000000022e-05}, {'diff': 7.191600000000173e-05}, {'diff': 7.19170000000012e-05}, {'diff': 7.186099999999945e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:31:25.436" endtime="20201030 18:31:25.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:25.443" level="INFO">${ACCURACY} = {'diff': [7.21109999999997e-05, 7.188800000000259e-05, 7.182000000000022e-05, 7.191600000000173e-05, 7.19170000000012e-05, 7.186099999999945e-05, 7.181899999999727e-05, 7.183300000000031e-05, 7.188900...</msg>
<status status="PASS" starttime="20201030 18:31:25.440" endtime="20201030 18:31:25.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.448" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 18:31:25.447" endtime="20201030 18:31:25.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.451" level="INFO">VALUE: [7.21109999999997e-05, 7.188800000000259e-05, 7.182000000000022e-05, 7.191600000000173e-05, 7.19170000000012e-05, 7.186099999999945e-05, 7.181899999999727e-05, 7.183300000000031e-05, 7.188900000000206e-05, 7.2069000000001e-05, 7.179200000000108e-05, 7.19309999999973e-05, 7.206899999999752e-05, 7.186099999999945e-05, 7.195899999999991e-05, 7.194500000000034e-05, 7.197299999999948e-05, 7.180600000000065e-05, 7.191699999999773e-05, 7.198699999999905e-05, 7.179199999999761e-05, 7.195800000000044e-05, 7.190199999999869e-05, 7.191600000000173e-05, 7.175000000000237e-05, 7.177699999999856e-05, 7.179200000000108e-05, 7.207000000000047e-05, 7.183300000000031e-05, 7.176399999999847e-05, 7.184699999999988e-05, 7.194500000000034e-05, 7.198599999999958e-05, 7.195800000000044e-05, 7.187500000000249e-05, 7.184699999999988e-05, 7.176300000000246e-05, 7.193100000000077e-05, 7.170899999999966e-05, 7.184799999999936e-05, 7.193100000000077e-05, 7.17499999999989e-05, 7.173599999999933e-05, 7.197200000000001e-05, 7.199999999999915e-05, 7.19439999999974e-05, 7.180500000000117e-05, 7.177800000000151e-05, 7.191699999999773e-05, 7.173599999999933e-05]</msg>
<status status="PASS" starttime="20201030 18:31:25.449" endtime="20201030 18:31:25.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.444" endtime="20201030 18:31:25.452"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:25.456" endtime="20201030 18:31:25.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.454" endtime="20201030 18:31:25.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.453" endtime="20201030 18:31:25.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.094" endtime="20201030 18:31:25.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.093" endtime="20201030 18:31:25.476"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.485" endtime="20201030 18:31:25.504"></status>
</kw>
<msg timestamp="20201030 18:31:25.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.483" endtime="20201030 18:31:25.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.505" endtime="20201030 18:31:25.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.508" endtime="20201030 18:31:25.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.481" endtime="20201030 18:31:25.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.479" endtime="20201030 18:31:25.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.517" endtime="20201030 18:31:25.803"></status>
</kw>
<msg timestamp="20201030 18:31:25.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022635292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022708403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:25.515" endtime="20201030 18:31:25.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022635292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022708403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:25.807" endtime="20201030 18:31:25.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.815" endtime="20201030 18:31:25.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.513" endtime="20201030 18:31:25.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.511" endtime="20201030 18:31:25.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:25.822" level="INFO">${RESULT} = [{'diff': 7.311099999999723e-05}, {'diff': 7.286100000000045e-05}, {'diff': 7.298600000000058e-05}, {'diff': 7.291599999999926e-05}, {'diff': 7.295899999999744e-05}, {'diff': 7.279099999999913e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:25.818" endtime="20201030 18:31:25.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:25.826" level="INFO">${ACCURACY} = {'diff': [7.311099999999723e-05, 7.286100000000045e-05, 7.298600000000058e-05, 7.291599999999926e-05, 7.295899999999744e-05, 7.279099999999913e-05, 7.277799999999904e-05, 7.30829999999981e-05, 7.29169...</msg>
<status status="PASS" starttime="20201030 18:31:25.823" endtime="20201030 18:31:25.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.831" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 18:31:25.829" endtime="20201030 18:31:25.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.833" level="INFO">VALUE: [7.311099999999723e-05, 7.286100000000045e-05, 7.298600000000058e-05, 7.291599999999926e-05, 7.295899999999744e-05, 7.279099999999913e-05, 7.277799999999904e-05, 7.30829999999981e-05, 7.291699999999873e-05, 7.27499999999999e-05, 7.291699999999873e-05, 7.301399999999972e-05, 7.272300000000023e-05, 7.280599999999818e-05, 7.27499999999999e-05, 7.27499999999999e-05, 7.288800000000012e-05, 7.281999999999775e-05, 7.286100000000045e-05, 7.286199999999993e-05, 7.284700000000088e-05, 7.272199999999729e-05, 7.29300000000023e-05, 7.298600000000058e-05, 7.297199999999754e-05, 7.291599999999926e-05, 7.284700000000088e-05, 7.279099999999913e-05, 7.28049999999987e-05, 7.297200000000101e-05, 7.290299999999916e-05, 7.272200000000076e-05, 7.27499999999999e-05, 7.273600000000033e-05, 7.298700000000005e-05, 7.301400000000319e-05, 7.301399999999972e-05, 7.291699999999873e-05, 7.297300000000048e-05, 7.291699999999873e-05, 7.27499999999999e-05, 7.288800000000012e-05, 7.280599999999818e-05, 7.295799999999797e-05, 7.297200000000101e-05, 7.290199999999969e-05, 7.290199999999969e-05, 7.27499999999999e-05, 7.270800000000119e-05, 7.28049999999987e-05]</msg>
<status status="PASS" starttime="20201030 18:31:25.832" endtime="20201030 18:31:25.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.827" endtime="20201030 18:31:25.835"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:25.839" endtime="20201030 18:31:25.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.837" endtime="20201030 18:31:25.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.836" endtime="20201030 18:31:25.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.477" endtime="20201030 18:31:25.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.477" endtime="20201030 18:31:25.860"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.869" endtime="20201030 18:31:25.887"></status>
</kw>
<msg timestamp="20201030 18:31:25.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.867" endtime="20201030 18:31:25.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.889" endtime="20201030 18:31:25.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.891" endtime="20201030 18:31:25.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.865" endtime="20201030 18:31:25.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.862" endtime="20201030 18:31:25.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.901" endtime="20201030 18:31:26.187"></status>
</kw>
<msg timestamp="20201030 18:31:26.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022642361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022716681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:25.899" endtime="20201030 18:31:26.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022642361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022716681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.191" endtime="20201030 18:31:26.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.199" endtime="20201030 18:31:26.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.896" endtime="20201030 18:31:26.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.895" endtime="20201030 18:31:26.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:26.206" level="INFO">${RESULT} = [{'diff': 7.431999999999925e-05}, {'diff': 7.373599999999786e-05}, {'diff': 7.387500000000102e-05}, {'diff': 7.386099999999798e-05}, {'diff': 7.399999999999768e-05}, {'diff': 7.391699999999973e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:26.202" endtime="20201030 18:31:26.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:26.213" level="INFO">${ACCURACY} = {'diff': [7.431999999999925e-05, 7.373599999999786e-05, 7.387500000000102e-05, 7.386099999999798e-05, 7.399999999999768e-05, 7.391699999999973e-05, 7.380599999999918e-05, 7.376400000000047e-05, 7.3764...</msg>
<status status="PASS" starttime="20201030 18:31:26.207" endtime="20201030 18:31:26.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.218" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 18:31:26.217" endtime="20201030 18:31:26.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.220" level="INFO">VALUE: [7.431999999999925e-05, 7.373599999999786e-05, 7.387500000000102e-05, 7.386099999999798e-05, 7.399999999999768e-05, 7.391699999999973e-05, 7.380599999999918e-05, 7.376400000000047e-05, 7.376400000000047e-05, 7.372199999999829e-05, 7.395899999999844e-05, 7.384699999999841e-05, 7.384699999999841e-05, 7.372299999999776e-05, 7.383399999999832e-05, 7.401400000000072e-05, 7.376400000000047e-05, 7.372199999999829e-05, 7.387500000000102e-05, 7.38049999999997e-05, 7.379100000000013e-05, 7.397199999999854e-05, 7.367999999999958e-05, 7.384699999999841e-05, 7.366600000000001e-05, 7.381899999999927e-05, 7.39309999999993e-05, 7.380599999999918e-05, 7.377800000000004e-05, 7.394499999999887e-05, 7.39309999999993e-05, 7.391699999999973e-05, 7.39309999999993e-05, 7.39309999999993e-05, 7.376400000000047e-05, 7.3763000000001e-05, 7.387500000000102e-05, 7.37370000000008e-05, 7.372300000000123e-05, 7.395799999999897e-05, 7.400000000000115e-05, 7.392999999999983e-05, 7.390200000000069e-05, 7.39439999999994e-05, 7.388900000000059e-05, 7.390300000000016e-05, 7.39439999999994e-05, 7.395800000000244e-05, 7.391699999999973e-05, 7.370800000000219e-05]</msg>
<status status="PASS" starttime="20201030 18:31:26.219" endtime="20201030 18:31:26.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.214" endtime="20201030 18:31:26.222"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:26.225" endtime="20201030 18:31:26.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.224" endtime="20201030 18:31:26.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.223" endtime="20201030 18:31:26.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.860" endtime="20201030 18:31:26.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.860" endtime="20201030 18:31:26.246"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.255" endtime="20201030 18:31:26.272"></status>
</kw>
<msg timestamp="20201030 18:31:26.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.253" endtime="20201030 18:31:26.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.274" endtime="20201030 18:31:26.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.277" endtime="20201030 18:31:26.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.250" endtime="20201030 18:31:26.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.248" endtime="20201030 18:31:26.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.286" endtime="20201030 18:31:26.572"></status>
</kw>
<msg timestamp="20201030 18:31:26.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021849958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021924986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.284" endtime="20201030 18:31:26.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021849958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021924986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.576" endtime="20201030 18:31:26.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.584" endtime="20201030 18:31:26.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.281" endtime="20201030 18:31:26.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.280" endtime="20201030 18:31:26.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:26.591" level="INFO">${RESULT} = [{'diff': 7.502800000000129e-05}, {'diff': 7.465300000000091e-05}, {'diff': 7.473600000000233e-05}, {'diff': 7.498699999999858e-05}, {'diff': 7.480600000000018e-05}, {'diff': 7.484699999999941e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:26.588" endtime="20201030 18:31:26.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:26.595" level="INFO">${ACCURACY} = {'diff': [7.502800000000129e-05, 7.465300000000091e-05, 7.473600000000233e-05, 7.498699999999858e-05, 7.480600000000018e-05, 7.484699999999941e-05, 7.492999999999736e-05, 7.477799999999757e-05, 7.4847...</msg>
<status status="PASS" starttime="20201030 18:31:26.592" endtime="20201030 18:31:26.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.600" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 18:31:26.599" endtime="20201030 18:31:26.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.602" level="INFO">VALUE: [7.502800000000129e-05, 7.465300000000091e-05, 7.473600000000233e-05, 7.498699999999858e-05, 7.480600000000018e-05, 7.484699999999941e-05, 7.492999999999736e-05, 7.477799999999757e-05, 7.484700000000288e-05, 7.498599999999911e-05, 7.470799999999972e-05, 7.497199999999954e-05, 7.487499999999855e-05, 7.479100000000113e-05, 7.495799999999997e-05, 7.495799999999997e-05, 7.474999999999843e-05, 7.491700000000073e-05, 7.484699999999941e-05, 7.486100000000245e-05, 7.477800000000104e-05, 7.483399999999932e-05, 7.487499999999855e-05, 7.497299999999901e-05, 7.494499999999987e-05, 7.498700000000205e-05, 7.498699999999858e-05, 7.486199999999846e-05, 7.487500000000202e-05, 7.498599999999911e-05, 7.483299999999984e-05, 7.486099999999898e-05, 7.497199999999954e-05, 7.487499999999855e-05, 7.473600000000233e-05, 7.490300000000116e-05, 7.474999999999843e-05, 7.488900000000159e-05, 7.47500000000019e-05, 7.473599999999886e-05, 7.498599999999911e-05, 7.476400000000147e-05, 7.481999999999975e-05, 7.477800000000104e-05, 7.495899999999944e-05, 7.498700000000205e-05, 7.495799999999997e-05, 7.490200000000169e-05, 7.479200000000061e-05, 7.473599999999886e-05]</msg>
<status status="PASS" starttime="20201030 18:31:26.601" endtime="20201030 18:31:26.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.596" endtime="20201030 18:31:26.603"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:26.607" endtime="20201030 18:31:26.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.606" endtime="20201030 18:31:26.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.605" endtime="20201030 18:31:26.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.247" endtime="20201030 18:31:26.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.246" endtime="20201030 18:31:26.628"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.637" endtime="20201030 18:31:26.655"></status>
</kw>
<msg timestamp="20201030 18:31:26.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.635" endtime="20201030 18:31:26.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.657" endtime="20201030 18:31:26.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.659" endtime="20201030 18:31:26.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.632" endtime="20201030 18:31:26.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.630" endtime="20201030 18:31:26.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.669" endtime="20201030 18:31:26.954"></status>
</kw>
<msg timestamp="20201030 18:31:26.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022666486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022742514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.667" endtime="20201030 18:31:26.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022666486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022742514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.959" endtime="20201030 18:31:26.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.967" endtime="20201030 18:31:26.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.664" endtime="20201030 18:31:26.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.663" endtime="20201030 18:31:26.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:26.973" level="INFO">${RESULT} = [{'diff': 7.602799999999882e-05}, {'diff': 7.56379999999994e-05}, {'diff': 7.5763999999999e-05}, {'diff': 7.593000000000183e-05}, {'diff': 7.58189999999978e-05}, {'diff': 7.577700000000256e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 18:31:26.970" endtime="20201030 18:31:26.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:26.978" level="INFO">${ACCURACY} = {'diff': [7.602799999999882e-05, 7.56379999999994e-05, 7.5763999999999e-05, 7.593000000000183e-05, 7.58189999999978e-05, 7.577700000000256e-05, 7.580499999999823e-05, 7.572200000000029e-05, 7.57639999...</msg>
<status status="PASS" starttime="20201030 18:31:26.974" endtime="20201030 18:31:26.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.982" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 18:31:26.981" endtime="20201030 18:31:26.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.985" level="INFO">VALUE: [7.602799999999882e-05, 7.56379999999994e-05, 7.5763999999999e-05, 7.593000000000183e-05, 7.58189999999978e-05, 7.577700000000256e-05, 7.580499999999823e-05, 7.572200000000029e-05, 7.5763999999999e-05, 7.565299999999844e-05, 7.574999999999943e-05, 7.582000000000075e-05, 7.599999999999968e-05, 7.594500000000087e-05, 7.573599999999986e-05, 7.594500000000087e-05, 7.59029999999987e-05, 7.58890000000026e-05, 7.594500000000087e-05, 7.597300000000001e-05, 7.576299999999953e-05, 7.59449999999974e-05, 7.574999999999943e-05, 7.584700000000041e-05, 7.572200000000029e-05, 7.57769999999991e-05, 7.573599999999986e-05, 7.588899999999912e-05, 7.579099999999866e-05, 7.584700000000041e-05, 7.587499999999955e-05, 7.574999999999943e-05, 7.583299999999737e-05, 7.580599999999771e-05, 7.594500000000087e-05, 7.58189999999978e-05, 7.59310000000013e-05, 7.577800000000204e-05, 7.579099999999866e-05, 7.592999999999836e-05, 7.588899999999912e-05, 7.580600000000118e-05, 7.570800000000072e-05, 7.576400000000247e-05, 7.573599999999986e-05, 7.5763999999999e-05, 7.572200000000029e-05, 7.587499999999955e-05, 7.586099999999998e-05, 7.590300000000216e-05]</msg>
<status status="PASS" starttime="20201030 18:31:26.983" endtime="20201030 18:31:26.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.979" endtime="20201030 18:31:26.987"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:26.990" endtime="20201030 18:31:27.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.989" endtime="20201030 18:31:27.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.988" endtime="20201030 18:31:27.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.629" endtime="20201030 18:31:27.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.628" endtime="20201030 18:31:27.011"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.020" endtime="20201030 18:31:27.038"></status>
</kw>
<msg timestamp="20201030 18:31:27.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.018" endtime="20201030 18:31:27.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.039" endtime="20201030 18:31:27.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.042" endtime="20201030 18:31:27.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.016" endtime="20201030 18:31:27.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.014" endtime="20201030 18:31:27.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.052" endtime="20201030 18:31:27.337"></status>
</kw>
<msg timestamp="20201030 18:31:27.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021798056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021875681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:27.050" endtime="20201030 18:31:27.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021798056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021875681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:27.342" endtime="20201030 18:31:27.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.350" endtime="20201030 18:31:27.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.047" endtime="20201030 18:31:27.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.045" endtime="20201030 18:31:27.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:27.356" level="INFO">${RESULT} = [{'diff': 7.76250000000013e-05}, {'diff': 7.667999999999911e-05}, {'diff': 7.69579999999985e-05}, {'diff': 7.675000000000043e-05}, {'diff': 7.686099999999751e-05}, {'diff': 7.688900000000012e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:31:27.353" endtime="20201030 18:31:27.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:27.361" level="INFO">${ACCURACY} = {'diff': [7.76250000000013e-05, 7.667999999999911e-05, 7.69579999999985e-05, 7.675000000000043e-05, 7.686099999999751e-05, 7.688900000000012e-05, 7.684700000000141e-05, 7.6764e-05, 7.683300000000184e-...</msg>
<status status="PASS" starttime="20201030 18:31:27.357" endtime="20201030 18:31:27.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.366" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 18:31:27.365" endtime="20201030 18:31:27.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.369" level="INFO">VALUE: [7.76250000000013e-05, 7.667999999999911e-05, 7.69579999999985e-05, 7.675000000000043e-05, 7.686099999999751e-05, 7.688900000000012e-05, 7.684700000000141e-05, 7.6764e-05, 7.683300000000184e-05, 7.679199999999914e-05, 7.687500000000055e-05, 7.688799999999718e-05, 7.694500000000187e-05, 7.68189999999988e-05, 7.684800000000089e-05, 7.690200000000022e-05, 7.675000000000043e-05, 7.691700000000273e-05, 7.683299999999837e-05, 7.686100000000098e-05, 7.68189999999988e-05, 7.687499999999708e-05, 7.686100000000098e-05, 7.680600000000218e-05, 7.6764e-05, 7.686100000000098e-05, 7.681999999999828e-05, 7.684800000000089e-05, 7.69449999999984e-05, 7.691700000000273e-05, 7.682000000000175e-05, 7.694500000000187e-05, 7.672300000000076e-05, 7.683400000000132e-05, 7.69579999999985e-05, 7.6764e-05, 7.68189999999988e-05, 7.684699999999794e-05, 7.692999999999936e-05, 7.668000000000258e-05, 7.68050000000027e-05, 7.700000000000068e-05, 7.672200000000129e-05, 7.677799999999957e-05, 7.694399999999893e-05, 7.693099999999883e-05, 7.69440000000024e-05, 7.673600000000086e-05, 7.677799999999957e-05, 7.69449999999984e-05]</msg>
<status status="PASS" starttime="20201030 18:31:27.367" endtime="20201030 18:31:27.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.362" endtime="20201030 18:31:27.370"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:27.374" endtime="20201030 18:31:27.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.372" endtime="20201030 18:31:27.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.371" endtime="20201030 18:31:27.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.012" endtime="20201030 18:31:27.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.012" endtime="20201030 18:31:27.394"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.403" endtime="20201030 18:31:27.420"></status>
</kw>
<msg timestamp="20201030 18:31:27.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.401" endtime="20201030 18:31:27.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.422" endtime="20201030 18:31:27.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.424" endtime="20201030 18:31:27.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.399" endtime="20201030 18:31:27.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.397" endtime="20201030 18:31:27.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.433" endtime="20201030 18:31:27.720"></status>
</kw>
<msg timestamp="20201030 18:31:27.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021827569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021905611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:27.432" endtime="20201030 18:31:27.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021827569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021905611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:27.724" endtime="20201030 18:31:27.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.732" endtime="20201030 18:31:27.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.429" endtime="20201030 18:31:27.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.428" endtime="20201030 18:31:27.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:27.739" level="INFO">${RESULT} = [{'diff': 7.804199999999692e-05}, {'diff': 7.788900000000112e-05}, {'diff': 7.79169999999968e-05}, {'diff': 7.780599999999971e-05}, {'diff': 7.780599999999971e-05}, {'diff': 7.798700000000158e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:27.736" endtime="20201030 18:31:27.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:27.744" level="INFO">${ACCURACY} = {'diff': [7.804199999999692e-05, 7.788900000000112e-05, 7.79169999999968e-05, 7.780599999999971e-05, 7.780599999999971e-05, 7.798700000000158e-05, 7.78189999999998e-05, 7.798600000000211e-05, 7.773600...</msg>
<status status="PASS" starttime="20201030 18:31:27.740" endtime="20201030 18:31:27.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.749" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 18:31:27.747" endtime="20201030 18:31:27.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.751" level="INFO">VALUE: [7.804199999999692e-05, 7.788900000000112e-05, 7.79169999999968e-05, 7.780599999999971e-05, 7.780599999999971e-05, 7.798700000000158e-05, 7.78189999999998e-05, 7.798600000000211e-05, 7.773600000000186e-05, 7.788899999999765e-05, 7.788900000000112e-05, 7.769399999999968e-05, 7.780500000000024e-05, 7.783300000000284e-05, 7.774999999999796e-05, 7.783299999999937e-05, 7.787499999999808e-05, 7.788799999999818e-05, 7.79579999999995e-05, 7.793099999999983e-05, 7.793099999999983e-05, 7.784699999999894e-05, 7.781999999999928e-05, 7.7764000000001e-05, 7.791700000000026e-05, 7.783300000000284e-05, 7.776399999999753e-05, 7.798599999999864e-05, 7.794399999999993e-05, 7.791600000000079e-05, 7.786100000000198e-05, 7.79030000000007e-05, 7.797200000000254e-05, 7.799999999999821e-05, 7.7764000000001e-05, 7.791700000000026e-05, 7.781999999999928e-05, 7.78189999999998e-05, 7.786099999999851e-05, 7.784699999999894e-05, 7.79030000000007e-05, 7.783399999999885e-05, 7.798600000000211e-05, 7.790200000000122e-05, 7.798700000000158e-05, 7.783299999999937e-05, 7.798600000000211e-05, 7.784699999999894e-05, 7.770800000000272e-05, 7.780500000000024e-05]</msg>
<status status="PASS" starttime="20201030 18:31:27.750" endtime="20201030 18:31:27.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.745" endtime="20201030 18:31:27.753"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:27.756" endtime="20201030 18:31:27.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.755" endtime="20201030 18:31:27.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.754" endtime="20201030 18:31:27.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.395" endtime="20201030 18:31:27.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.395" endtime="20201030 18:31:27.777"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.786" endtime="20201030 18:31:27.805"></status>
</kw>
<msg timestamp="20201030 18:31:27.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.784" endtime="20201030 18:31:27.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.806" endtime="20201030 18:31:27.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.809" endtime="20201030 18:31:27.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.782" endtime="20201030 18:31:27.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.780" endtime="20201030 18:31:27.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.818" endtime="20201030 18:31:28.104"></status>
</kw>
<msg timestamp="20201030 18:31:28.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022603972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022683653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:27.816" endtime="20201030 18:31:28.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022603972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022683653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.108" endtime="20201030 18:31:28.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.117" endtime="20201030 18:31:28.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.814" endtime="20201030 18:31:28.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.812" endtime="20201030 18:31:28.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:28.124" level="INFO">${RESULT} = [{'diff': 7.968100000000158e-05}, {'diff': 7.87909999999982e-05}, {'diff': 7.888799999999918e-05}, {'diff': 7.894399999999746e-05}, {'diff': 7.870800000000025e-05}, {'diff': 7.89719999999966e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:31:28.120" endtime="20201030 18:31:28.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:28.128" level="INFO">${ACCURACY} = {'diff': [7.968100000000158e-05, 7.87909999999982e-05, 7.888799999999918e-05, 7.894399999999746e-05, 7.870800000000025e-05, 7.89719999999966e-05, 7.877800000000157e-05, 7.875000000000243e-05, 7.876399...</msg>
<status status="PASS" starttime="20201030 18:31:28.125" endtime="20201030 18:31:28.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.133" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 18:31:28.132" endtime="20201030 18:31:28.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.136" level="INFO">VALUE: [7.968100000000158e-05, 7.87909999999982e-05, 7.888799999999918e-05, 7.894399999999746e-05, 7.870800000000025e-05, 7.89719999999966e-05, 7.877800000000157e-05, 7.875000000000243e-05, 7.876399999999853e-05, 7.880600000000071e-05, 7.89580000000005e-05, 7.897200000000007e-05, 7.879199999999767e-05, 7.883300000000037e-05, 7.895899999999997e-05, 7.897299999999954e-05, 7.880600000000071e-05, 7.870899999999972e-05, 7.895899999999997e-05, 7.888899999999865e-05, 7.887500000000255e-05, 7.87909999999982e-05, 7.869400000000068e-05, 7.898599999999964e-05, 7.89030000000017e-05, 7.897200000000007e-05, 7.879200000000114e-05, 7.8764000000002e-05, 7.894400000000093e-05, 7.887500000000255e-05, 7.893100000000083e-05, 7.89580000000005e-05, 7.902800000000182e-05, 7.882000000000028e-05, 7.873599999999939e-05, 7.880600000000071e-05, 7.877800000000157e-05, 7.894400000000093e-05, 7.890200000000222e-05, 7.887499999999908e-05, 7.883300000000037e-05, 7.876299999999906e-05, 7.873600000000286e-05, 7.898599999999964e-05, 7.879100000000167e-05, 7.883300000000037e-05, 7.880500000000124e-05, 7.888900000000212e-05, 7.880599999999724e-05, 7.888899999999865e-05]</msg>
<status status="PASS" starttime="20201030 18:31:28.134" endtime="20201030 18:31:28.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.129" endtime="20201030 18:31:28.138"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:28.142" endtime="20201030 18:31:28.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.140" endtime="20201030 18:31:28.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.139" endtime="20201030 18:31:28.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.778" endtime="20201030 18:31:28.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.777" endtime="20201030 18:31:28.162"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.171" endtime="20201030 18:31:28.189"></status>
</kw>
<msg timestamp="20201030 18:31:28.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.170" endtime="20201030 18:31:28.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.191" endtime="20201030 18:31:28.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.194" endtime="20201030 18:31:28.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.167" endtime="20201030 18:31:28.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.165" endtime="20201030 18:31:28.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.203" endtime="20201030 18:31:28.510"></status>
</kw>
<msg timestamp="20201030 18:31:28.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022095236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022175667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.202" endtime="20201030 18:31:28.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022095236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022175667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.514" endtime="20201030 18:31:28.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.523" endtime="20201030 18:31:28.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.199" endtime="20201030 18:31:28.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.197" endtime="20201030 18:31:28.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:28.530" level="INFO">${RESULT} = [{'diff': 8.043099999999886e-05}, {'diff': 7.983300000000138e-05}, {'diff': 7.97230000000003e-05}, {'diff': 7.976300000000006e-05}, {'diff': 7.977699999999963e-05}, {'diff': 7.988899999999965e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:28.526" endtime="20201030 18:31:28.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:28.535" level="INFO">${ACCURACY} = {'diff': [8.043099999999886e-05, 7.983300000000138e-05, 7.97230000000003e-05, 7.976300000000006e-05, 7.977699999999963e-05, 7.988899999999965e-05, 7.979200000000214e-05, 7.991599999999932e-05, 7.99029...</msg>
<status status="PASS" starttime="20201030 18:31:28.531" endtime="20201030 18:31:28.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.540" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 18:31:28.539" endtime="20201030 18:31:28.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.542" level="INFO">VALUE: [8.043099999999886e-05, 7.983300000000138e-05, 7.97230000000003e-05, 7.976300000000006e-05, 7.977699999999963e-05, 7.988899999999965e-05, 7.979200000000214e-05, 7.991599999999932e-05, 7.990299999999922e-05, 7.974999999999996e-05, 7.984700000000094e-05, 7.980499999999877e-05, 7.976399999999953e-05, 7.99719999999976e-05, 7.976399999999953e-05, 7.980599999999824e-05, 7.990299999999922e-05, 7.97230000000003e-05, 7.970900000000072e-05, 7.981899999999834e-05, 7.97230000000003e-05, 7.97230000000003e-05, 7.97230000000003e-05, 7.983300000000138e-05, 7.987500000000008e-05, 7.979100000000267e-05, 7.979100000000267e-05, 7.967999999999864e-05, 8.001399999999978e-05, 7.981899999999834e-05, 8.000000000000021e-05, 7.97779999999991e-05, 7.995799999999803e-05, 7.984700000000094e-05, 7.980599999999824e-05, 7.99169999999988e-05, 7.993099999999836e-05, 7.972200000000082e-05, 7.995900000000097e-05, 7.970900000000072e-05, 7.991700000000226e-05, 7.982000000000128e-05, 7.973699999999986e-05, 7.98329999999979e-05, 7.993000000000236e-05, 7.983300000000138e-05, 7.998600000000064e-05, 7.988899999999965e-05, 7.976399999999953e-05, 7.983300000000138e-05]</msg>
<status status="PASS" starttime="20201030 18:31:28.541" endtime="20201030 18:31:28.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.536" endtime="20201030 18:31:28.544"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:28.547" endtime="20201030 18:31:28.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.546" endtime="20201030 18:31:28.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.545" endtime="20201030 18:31:28.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.163" endtime="20201030 18:31:28.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.163" endtime="20201030 18:31:28.568"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.577" endtime="20201030 18:31:28.595"></status>
</kw>
<msg timestamp="20201030 18:31:28.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.576" endtime="20201030 18:31:28.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.597" endtime="20201030 18:31:28.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.600" endtime="20201030 18:31:28.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.573" endtime="20201030 18:31:28.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.571" endtime="20201030 18:31:28.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.609" endtime="20201030 18:31:28.895"></status>
</kw>
<msg timestamp="20201030 18:31:28.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022620569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022702306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.607" endtime="20201030 18:31:28.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022620569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022702306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.900" endtime="20201030 18:31:28.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.908" endtime="20201030 18:31:28.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.605" endtime="20201030 18:31:28.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.603" endtime="20201030 18:31:28.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:28.915" level="INFO">${RESULT} = [{'diff': 8.17369999999984e-05}, {'diff': 8.084700000000195e-05}, {'diff': 8.076400000000053e-05}, {'diff': 8.072200000000182e-05}, {'diff': 8.093100000000283e-05}, {'diff': 8.095799999999903e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:28.912" endtime="20201030 18:31:28.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:28.919" level="INFO">${ACCURACY} = {'diff': [8.17369999999984e-05, 8.084700000000195e-05, 8.076400000000053e-05, 8.072200000000182e-05, 8.093100000000283e-05, 8.095799999999903e-05, 8.084700000000195e-05, 8.09169999999998e-05, 8.080599...</msg>
<status status="PASS" starttime="20201030 18:31:28.916" endtime="20201030 18:31:28.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.924" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 18:31:28.923" endtime="20201030 18:31:28.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.927" level="INFO">VALUE: [8.17369999999984e-05, 8.084700000000195e-05, 8.076400000000053e-05, 8.072200000000182e-05, 8.093100000000283e-05, 8.095799999999903e-05, 8.084700000000195e-05, 8.09169999999998e-05, 8.080599999999924e-05, 8.079199999999967e-05, 8.086099999999805e-05, 8.086099999999805e-05, 8.090300000000022e-05, 8.072299999999782e-05, 8.086099999999805e-05, 8.081899999999934e-05, 8.09719999999986e-05, 8.073599999999792e-05, 8.098599999999817e-05, 8.095799999999903e-05, 8.073599999999792e-05, 8.075000000000096e-05, 8.09169999999998e-05, 8.081899999999934e-05, 8.073600000000139e-05, 8.090300000000022e-05, 8.081999999999881e-05, 8.097200000000207e-05, 8.106899999999959e-05, 8.087500000000108e-05, 8.087500000000108e-05, 8.09450000000024e-05, 8.100000000000121e-05, 8.094399999999946e-05, 8.093100000000283e-05, 8.073600000000139e-05, 8.09719999999986e-05, 8.072200000000182e-05, 8.074999999999749e-05, 8.088899999999719e-05, 8.100000000000121e-05, 8.100000000000121e-05, 8.093100000000283e-05, 8.076399999999706e-05, 8.084700000000195e-05, 8.079199999999967e-05, 8.087500000000108e-05, 8.076400000000053e-05, 8.090300000000022e-05, 8.094499999999893e-05]</msg>
<status status="PASS" starttime="20201030 18:31:28.925" endtime="20201030 18:31:28.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.920" endtime="20201030 18:31:28.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:28.932" endtime="20201030 18:31:28.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.930" endtime="20201030 18:31:28.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.929" endtime="20201030 18:31:28.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.569" endtime="20201030 18:31:28.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.569" endtime="20201030 18:31:28.953"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.962" endtime="20201030 18:31:28.981"></status>
</kw>
<msg timestamp="20201030 18:31:28.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.960" endtime="20201030 18:31:28.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.982" endtime="20201030 18:31:28.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.985" endtime="20201030 18:31:28.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.957" endtime="20201030 18:31:28.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.955" endtime="20201030 18:31:28.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.994" endtime="20201030 18:31:29.281"></status>
</kw>
<msg timestamp="20201030 18:31:29.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023391556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023474, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:28.993" endtime="20201030 18:31:29.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023391556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023474, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:29.286" endtime="20201030 18:31:29.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.294" endtime="20201030 18:31:29.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.990" endtime="20201030 18:31:29.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.988" endtime="20201030 18:31:29.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:29.301" level="INFO">${RESULT} = [{'diff': 8.244399999999749e-05}, {'diff': 8.184699999999948e-05}, {'diff': 8.184699999999948e-05}, {'diff': 8.197300000000254e-05}, {'diff': 8.174999999999849e-05}, {'diff': 8.187499999999862e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:29.298" endtime="20201030 18:31:29.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:29.305" level="INFO">${ACCURACY} = {'diff': [8.244399999999749e-05, 8.184699999999948e-05, 8.184699999999948e-05, 8.197300000000254e-05, 8.174999999999849e-05, 8.187499999999862e-05, 8.184800000000242e-05, 8.198699999999864e-05, 8.1887...</msg>
<status status="PASS" starttime="20201030 18:31:29.302" endtime="20201030 18:31:29.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.310" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 18:31:29.309" endtime="20201030 18:31:29.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.313" level="INFO">VALUE: [8.244399999999749e-05, 8.184699999999948e-05, 8.184699999999948e-05, 8.197300000000254e-05, 8.174999999999849e-05, 8.187499999999862e-05, 8.184800000000242e-05, 8.198699999999864e-05, 8.188799999999871e-05, 8.195800000000003e-05, 8.190299999999776e-05, 8.181900000000034e-05, 8.195800000000003e-05, 8.19719999999996e-05, 8.190299999999776e-05, 8.20269999999984e-05, 8.176400000000153e-05, 8.188899999999819e-05, 8.186099999999905e-05, 8.172200000000282e-05, 8.19589999999995e-05, 8.183399999999938e-05, 8.173600000000239e-05, 8.176399999999806e-05, 8.199999999999874e-05, 8.18329999999999e-05, 8.190299999999776e-05, 8.172199999999935e-05, 8.175000000000196e-05, 8.184699999999948e-05, 8.190199999999828e-05, 8.181999999999981e-05, 8.193100000000036e-05, 8.176399999999806e-05, 8.176400000000153e-05, 8.198600000000264e-05, 8.173600000000239e-05, 8.200000000000221e-05, 8.172200000000282e-05, 8.170899999999925e-05, 8.19719999999996e-05, 8.190300000000122e-05, 8.180600000000024e-05, 8.188900000000165e-05, 8.19589999999995e-05, 8.18329999999999e-05, 8.173599999999892e-05, 8.18329999999999e-05, 8.187499999999862e-05, 8.190199999999828e-05]</msg>
<status status="PASS" starttime="20201030 18:31:29.311" endtime="20201030 18:31:29.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.306" endtime="20201030 18:31:29.315"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:29.319" endtime="20201030 18:31:29.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.317" endtime="20201030 18:31:29.339"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.316" endtime="20201030 18:31:29.339"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.954" endtime="20201030 18:31:29.339"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.953" endtime="20201030 18:31:29.340"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.349" endtime="20201030 18:31:29.367"></status>
</kw>
<msg timestamp="20201030 18:31:29.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.347" endtime="20201030 18:31:29.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.369" endtime="20201030 18:31:29.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.371" endtime="20201030 18:31:29.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.344" endtime="20201030 18:31:29.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.342" endtime="20201030 18:31:29.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.381" endtime="20201030 18:31:29.667"></status>
</kw>
<msg timestamp="20201030 18:31:29.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022302069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022385125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:29.379" endtime="20201030 18:31:29.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022302069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022385125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:29.671" endtime="20201030 18:31:29.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.680" endtime="20201030 18:31:29.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.377" endtime="20201030 18:31:29.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.375" endtime="20201030 18:31:29.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:29.686" level="INFO">${RESULT} = [{'diff': 8.305599999999802e-05}, {'diff': 8.26109999999998e-05}, {'diff': 8.281999999999734e-05}, {'diff': 8.286100000000005e-05}, {'diff': 8.274999999999949e-05}, {'diff': 8.294499999999747e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:29.683" endtime="20201030 18:31:29.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:29.694" level="INFO">${ACCURACY} = {'diff': [8.305599999999802e-05, 8.26109999999998e-05, 8.281999999999734e-05, 8.286100000000005e-05, 8.274999999999949e-05, 8.294499999999747e-05, 8.291599999999885e-05, 8.290300000000222e-05, 8.27080...</msg>
<status status="PASS" starttime="20201030 18:31:29.688" endtime="20201030 18:31:29.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.699" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 18:31:29.698" endtime="20201030 18:31:29.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.702" level="INFO">VALUE: [8.305599999999802e-05, 8.26109999999998e-05, 8.281999999999734e-05, 8.286100000000005e-05, 8.274999999999949e-05, 8.294499999999747e-05, 8.291599999999885e-05, 8.290300000000222e-05, 8.270800000000078e-05, 8.29720000000006e-05, 8.284700000000048e-05, 8.290299999999876e-05, 8.287499999999962e-05, 8.287499999999962e-05, 8.286100000000005e-05, 8.299999999999974e-05, 8.281900000000134e-05, 8.287499999999962e-05, 8.297199999999713e-05, 8.282000000000081e-05, 8.291699999999833e-05, 8.286100000000005e-05, 8.29309999999979e-05, 8.291600000000232e-05, 8.293100000000136e-05, 8.280599999999777e-05, 8.281900000000134e-05, 8.276399999999906e-05, 8.299999999999974e-05, 8.27910000000022e-05, 8.301399999999931e-05, 8.294400000000146e-05, 8.295800000000103e-05, 8.27780000000021e-05, 8.287499999999962e-05, 8.290299999999876e-05, 8.29720000000006e-05, 8.301400000000278e-05, 8.286099999999658e-05, 8.286100000000005e-05, 8.280599999999777e-05, 8.301399999999931e-05, 8.283400000000038e-05, 8.294499999999747e-05, 8.298600000000017e-05, 8.286100000000005e-05, 8.283400000000038e-05, 8.277699999999916e-05, 8.28049999999983e-05, 8.298600000000017e-05]</msg>
<status status="PASS" starttime="20201030 18:31:29.700" endtime="20201030 18:31:29.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.695" endtime="20201030 18:31:29.703"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:29.707" endtime="20201030 18:31:29.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.705" endtime="20201030 18:31:29.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.704" endtime="20201030 18:31:29.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.340" endtime="20201030 18:31:29.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.340" endtime="20201030 18:31:29.728"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.737" endtime="20201030 18:31:29.756"></status>
</kw>
<msg timestamp="20201030 18:31:29.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.735" endtime="20201030 18:31:29.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.757" endtime="20201030 18:31:29.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.760" endtime="20201030 18:31:29.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.732" endtime="20201030 18:31:29.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.730" endtime="20201030 18:31:29.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.769" endtime="20201030 18:31:30.057"></status>
</kw>
<msg timestamp="20201030 18:31:30.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022799611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022883542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:29.768" endtime="20201030 18:31:30.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022799611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022883542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.061" endtime="20201030 18:31:30.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.069" endtime="20201030 18:31:30.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.765" endtime="20201030 18:31:30.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.763" endtime="20201030 18:31:30.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:30.076" level="INFO">${RESULT} = [{'diff': 8.39309999999989e-05}, {'diff': 8.366699999999908e-05}, {'diff': 8.375000000000049e-05}, {'diff': 8.375000000000049e-05}, {'diff': 8.379200000000267e-05}, {'diff': 8.398600000000117e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:30.073" endtime="20201030 18:31:30.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:30.081" level="INFO">${ACCURACY} = {'diff': [8.39309999999989e-05, 8.366699999999908e-05, 8.375000000000049e-05, 8.375000000000049e-05, 8.379200000000267e-05, 8.398600000000117e-05, 8.38330000000019e-05, 8.39720000000016e-05, 8.4027999...</msg>
<status status="PASS" starttime="20201030 18:31:30.077" endtime="20201030 18:31:30.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.085" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 18:31:30.084" endtime="20201030 18:31:30.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.088" level="INFO">VALUE: [8.39309999999989e-05, 8.366699999999908e-05, 8.375000000000049e-05, 8.375000000000049e-05, 8.379200000000267e-05, 8.398600000000117e-05, 8.38330000000019e-05, 8.39720000000016e-05, 8.402799999999988e-05, 8.39309999999989e-05, 8.398600000000117e-05, 8.380599999999877e-05, 8.380599999999877e-05, 8.386099999999758e-05, 8.401400000000031e-05, 8.390299999999976e-05, 8.384700000000148e-05, 8.397199999999813e-05, 8.375000000000049e-05, 8.3846999999998e-05, 8.39729999999976e-05, 8.401400000000031e-05, 8.391599999999985e-05, 8.38330000000019e-05, 8.387500000000062e-05, 8.391599999999985e-05, 8.394399999999899e-05, 8.39859999999977e-05, 8.388900000000019e-05, 8.400000000000074e-05, 8.3846999999998e-05, 8.384700000000148e-05, 8.384700000000148e-05, 8.373600000000092e-05, 8.388900000000019e-05, 8.397199999999813e-05, 8.363899999999994e-05, 8.387500000000062e-05, 8.394399999999899e-05, 8.3846999999998e-05, 8.377799999999963e-05, 8.376400000000006e-05, 8.393000000000289e-05, 8.390299999999976e-05, 8.381900000000234e-05, 8.394399999999899e-05, 8.394399999999899e-05, 8.388900000000019e-05, 8.372199999999788e-05, 8.39309999999989e-05]</msg>
<status status="PASS" starttime="20201030 18:31:30.086" endtime="20201030 18:31:30.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.081" endtime="20201030 18:31:30.089"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:30.093" endtime="20201030 18:31:30.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.092" endtime="20201030 18:31:30.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.090" endtime="20201030 18:31:30.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.729" endtime="20201030 18:31:30.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.728" endtime="20201030 18:31:30.115"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.123" endtime="20201030 18:31:30.142"></status>
</kw>
<msg timestamp="20201030 18:31:30.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.122" endtime="20201030 18:31:30.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.144" endtime="20201030 18:31:30.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.147" endtime="20201030 18:31:30.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.119" endtime="20201030 18:31:30.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.117" endtime="20201030 18:31:30.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.156" endtime="20201030 18:31:30.441"></status>
</kw>
<msg timestamp="20201030 18:31:30.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023322694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02340775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:30.154" endtime="20201030 18:31:30.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023322694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02340775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:30.446" endtime="20201030 18:31:30.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.454" endtime="20201030 18:31:30.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.152" endtime="20201030 18:31:30.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.150" endtime="20201030 18:31:30.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:30.461" level="INFO">${RESULT} = [{'diff': 8.505600000000002e-05}, {'diff': 8.481999999999934e-05}, {'diff': 8.47920000000002e-05}, {'diff': 8.488799999999824e-05}, {'diff': 8.474999999999802e-05}, {'diff': 8.481899999999987e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:30.457" endtime="20201030 18:31:30.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:30.465" level="INFO">${ACCURACY} = {'diff': [8.505600000000002e-05, 8.481999999999934e-05, 8.47920000000002e-05, 8.488799999999824e-05, 8.474999999999802e-05, 8.481899999999987e-05, 8.479100000000073e-05, 8.484700000000248e-05, 8.49159...</msg>
<status status="PASS" starttime="20201030 18:31:30.462" endtime="20201030 18:31:30.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.470" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 18:31:30.469" endtime="20201030 18:31:30.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.472" level="INFO">VALUE: [8.505600000000002e-05, 8.481999999999934e-05, 8.47920000000002e-05, 8.488799999999824e-05, 8.474999999999802e-05, 8.481899999999987e-05, 8.479100000000073e-05, 8.484700000000248e-05, 8.491599999999738e-05, 8.474999999999802e-05, 8.48050000000003e-05, 8.488900000000119e-05, 8.481999999999934e-05, 8.470799999999931e-05, 8.473599999999845e-05, 8.483399999999891e-05, 8.473599999999845e-05, 8.490300000000076e-05, 8.472200000000235e-05, 8.476399999999759e-05, 8.494499999999947e-05, 8.474999999999802e-05, 8.476400000000106e-05, 8.491600000000085e-05, 8.469400000000321e-05, 8.480499999999683e-05, 8.490299999999729e-05, 8.494499999999947e-05, 8.473600000000192e-05, 8.495799999999956e-05, 8.483299999999944e-05, 8.49309999999999e-05, 8.483299999999944e-05, 8.476400000000106e-05, 8.495899999999904e-05, 8.470900000000225e-05, 8.486100000000205e-05, 8.49309999999999e-05, 8.502699999999794e-05, 8.477700000000116e-05, 8.497300000000207e-05, 8.476399999999759e-05, 8.473599999999845e-05, 8.501400000000131e-05, 8.483299999999944e-05, 8.473600000000192e-05, 8.469400000000321e-05, 8.474999999999802e-05, 8.476399999999759e-05, 8.49309999999999e-05]</msg>
<status status="PASS" starttime="20201030 18:31:30.471" endtime="20201030 18:31:30.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.466" endtime="20201030 18:31:30.475"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:30.479" endtime="20201030 18:31:30.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.477" endtime="20201030 18:31:30.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.476" endtime="20201030 18:31:30.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.116" endtime="20201030 18:31:30.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.115" endtime="20201030 18:31:30.499"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.508" endtime="20201030 18:31:30.527"></status>
</kw>
<msg timestamp="20201030 18:31:30.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.507" endtime="20201030 18:31:30.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.529" endtime="20201030 18:31:30.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.532" endtime="20201030 18:31:30.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.504" endtime="20201030 18:31:30.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.502" endtime="20201030 18:31:30.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.541" endtime="20201030 18:31:30.827"></status>
</kw>
<msg timestamp="20201030 18:31:30.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022183681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022269972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.540" endtime="20201030 18:31:30.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022183681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022269972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.831" endtime="20201030 18:31:30.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.840" endtime="20201030 18:31:30.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.537" endtime="20201030 18:31:30.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.535" endtime="20201030 18:31:30.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:30.847" level="INFO">${RESULT} = [{'diff': 8.629099999999876e-05}, {'diff': 8.588899999999872e-05}, {'diff': 8.595800000000056e-05}, {'diff': 8.595800000000056e-05}, {'diff': 8.576400000000206e-05}, {'diff': 8.580600000000077e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:30.843" endtime="20201030 18:31:30.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:30.852" level="INFO">${ACCURACY} = {'diff': [8.629099999999876e-05, 8.588899999999872e-05, 8.595800000000056e-05, 8.595800000000056e-05, 8.576400000000206e-05, 8.580600000000077e-05, 8.57920000000012e-05, 8.582000000000034e-05, 8.57639...</msg>
<status status="PASS" starttime="20201030 18:31:30.848" endtime="20201030 18:31:30.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.857" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 18:31:30.856" endtime="20201030 18:31:30.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.859" level="INFO">VALUE: [8.629099999999876e-05, 8.588899999999872e-05, 8.595800000000056e-05, 8.595800000000056e-05, 8.576400000000206e-05, 8.580600000000077e-05, 8.57920000000012e-05, 8.582000000000034e-05, 8.576399999999859e-05, 8.59729999999996e-05, 8.598699999999918e-05, 8.579099999999826e-05, 8.587500000000262e-05, 8.5847e-05, 8.588899999999872e-05, 8.593000000000142e-05, 8.587499999999915e-05, 8.594400000000099e-05, 8.583300000000044e-05, 8.594400000000099e-05, 8.587499999999915e-05, 8.591700000000133e-05, 8.594500000000047e-05, 8.591599999999838e-05, 8.577799999999816e-05, 8.577800000000163e-05, 8.573699999999893e-05, 8.574999999999902e-05, 8.601299999999937e-05, 8.597200000000013e-05, 8.583299999999697e-05, 8.597200000000013e-05, 8.593000000000142e-05, 8.579100000000173e-05, 8.575000000000249e-05, 8.594399999999752e-05, 8.575000000000249e-05, 8.576399999999859e-05, 8.59859999999997e-05, 8.59859999999997e-05, 8.586099999999958e-05, 8.590300000000176e-05, 8.580600000000077e-05, 8.5847e-05, 8.59310000000009e-05, 8.593099999999743e-05, 8.588799999999924e-05, 8.58189999999974e-05, 8.599999999999927e-05, 8.594399999999752e-05]</msg>
<status status="PASS" starttime="20201030 18:31:30.858" endtime="20201030 18:31:30.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.853" endtime="20201030 18:31:30.865"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:30.869" endtime="20201030 18:31:30.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.867" endtime="20201030 18:31:30.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.866" endtime="20201030 18:31:30.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.500" endtime="20201030 18:31:30.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.500" endtime="20201030 18:31:30.890"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.899" endtime="20201030 18:31:30.917"></status>
</kw>
<msg timestamp="20201030 18:31:30.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.897" endtime="20201030 18:31:30.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.919" endtime="20201030 18:31:30.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.922" endtime="20201030 18:31:30.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.894" endtime="20201030 18:31:30.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.892" endtime="20201030 18:31:30.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.931" endtime="20201030 18:31:31.218"></status>
</kw>
<msg timestamp="20201030 18:31:31.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022226458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022314167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.930" endtime="20201030 18:31:31.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022226458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022314167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.222" endtime="20201030 18:31:31.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.231" endtime="20201030 18:31:31.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.927" endtime="20201030 18:31:31.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.925" endtime="20201030 18:31:31.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:31.238" level="INFO">${RESULT} = [{'diff': 8.770899999999832e-05}, {'diff': 8.681900000000187e-05}, {'diff': 8.691699999999886e-05}, {'diff': 8.68189999999984e-05}, {'diff': 8.677799999999916e-05}, {'diff': 8.687500000000015e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:31.235" endtime="20201030 18:31:31.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:31.242" level="INFO">${ACCURACY} = {'diff': [8.770899999999832e-05, 8.681900000000187e-05, 8.691699999999886e-05, 8.68189999999984e-05, 8.677799999999916e-05, 8.687500000000015e-05, 8.693000000000242e-05, 8.68059999999983e-05, 8.686099...</msg>
<status status="PASS" starttime="20201030 18:31:31.239" endtime="20201030 18:31:31.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.247" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 18:31:31.246" endtime="20201030 18:31:31.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.250" level="INFO">VALUE: [8.770899999999832e-05, 8.681900000000187e-05, 8.691699999999886e-05, 8.68189999999984e-05, 8.677799999999916e-05, 8.687500000000015e-05, 8.693000000000242e-05, 8.68059999999983e-05, 8.686099999999711e-05, 8.691700000000233e-05, 8.682000000000134e-05, 8.675000000000002e-05, 8.701300000000037e-05, 8.686100000000058e-05, 8.69310000000019e-05, 8.679199999999873e-05, 8.688899999999972e-05, 8.679099999999926e-05, 8.68050000000023e-05, 8.680499999999883e-05, 8.700000000000027e-05, 8.687500000000015e-05, 8.68050000000023e-05, 8.680499999999883e-05, 8.672200000000088e-05, 8.686099999999711e-05, 8.6847000000001e-05, 8.691699999999886e-05, 8.694400000000199e-05, 8.676399999999959e-05, 8.688899999999972e-05, 8.69860000000007e-05, 8.686100000000058e-05, 8.6944999999998e-05, 8.694400000000199e-05, 8.683300000000144e-05, 8.679099999999926e-05, 8.694399999999852e-05, 8.675000000000002e-05, 8.69860000000007e-05, 8.686100000000058e-05, 8.686099999999711e-05, 8.676399999999959e-05, 8.675000000000002e-05, 8.695799999999809e-05, 8.672199999999741e-05, 8.672200000000088e-05, 8.69310000000019e-05, 8.693099999999843e-05, 8.6944999999998e-05]</msg>
<status status="PASS" starttime="20201030 18:31:31.248" endtime="20201030 18:31:31.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.243" endtime="20201030 18:31:31.251"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:31.255" endtime="20201030 18:31:31.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.253" endtime="20201030 18:31:31.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.252" endtime="20201030 18:31:31.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.891" endtime="20201030 18:31:31.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.890" endtime="20201030 18:31:31.276"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.285" endtime="20201030 18:31:31.304"></status>
</kw>
<msg timestamp="20201030 18:31:31.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.283" endtime="20201030 18:31:31.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.305" endtime="20201030 18:31:31.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.308" endtime="20201030 18:31:31.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.280" endtime="20201030 18:31:31.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.278" endtime="20201030 18:31:31.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.318" endtime="20201030 18:31:31.604"></status>
</kw>
<msg timestamp="20201030 18:31:31.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023391667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023479583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.316" endtime="20201030 18:31:31.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023391667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023479583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.608" endtime="20201030 18:31:31.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.617" endtime="20201030 18:31:31.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.313" endtime="20201030 18:31:31.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.311" endtime="20201030 18:31:31.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:31.623" level="INFO">${RESULT} = [{'diff': 8.791599999999691e-05}, {'diff': 8.779199999999973e-05}, {'diff': 8.770800000000231e-05}, {'diff': 8.787500000000115e-05}, {'diff': 8.776400000000059e-05}, {'diff': 8.776400000000059e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:31.620" endtime="20201030 18:31:31.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:31.628" level="INFO">${ACCURACY} = {'diff': [8.791599999999691e-05, 8.779199999999973e-05, 8.770800000000231e-05, 8.787500000000115e-05, 8.776400000000059e-05, 8.776400000000059e-05, 8.773600000000145e-05, 8.79860000000017e-05, 8.77770...</msg>
<status status="PASS" starttime="20201030 18:31:31.625" endtime="20201030 18:31:31.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.633" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 18:31:31.632" endtime="20201030 18:31:31.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.635" level="INFO">VALUE: [8.791599999999691e-05, 8.779199999999973e-05, 8.770800000000231e-05, 8.787500000000115e-05, 8.776400000000059e-05, 8.776400000000059e-05, 8.773600000000145e-05, 8.79860000000017e-05, 8.777700000000069e-05, 8.791599999999691e-05, 8.783299999999897e-05, 8.787499999999768e-05, 8.797199999999866e-05, 8.775000000000102e-05, 8.787499999999768e-05, 8.786099999999811e-05, 8.798599999999823e-05, 8.798599999999823e-05, 8.78059999999993e-05, 8.768099999999918e-05, 8.787500000000115e-05, 8.792999999999995e-05, 8.79860000000017e-05, 8.781999999999887e-05, 8.797200000000213e-05, 8.776400000000059e-05, 8.779199999999973e-05, 8.773600000000145e-05, 8.78189999999994e-05, 8.786100000000158e-05, 8.791599999999691e-05, 8.787500000000115e-05, 8.779199999999973e-05, 8.774999999999755e-05, 8.790300000000029e-05, 8.779199999999973e-05, 8.798599999999823e-05, 8.795799999999909e-05, 8.786099999999811e-05, 8.7944999999999e-05, 8.774999999999755e-05, 8.788900000000072e-05, 8.784699999999854e-05, 8.787500000000115e-05, 8.78189999999994e-05, 8.773700000000093e-05, 8.795799999999909e-05, 8.775000000000102e-05, 8.773600000000145e-05, 8.794399999999952e-05]</msg>
<status status="PASS" starttime="20201030 18:31:31.634" endtime="20201030 18:31:31.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.629" endtime="20201030 18:31:31.638"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:31.641" endtime="20201030 18:31:31.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.640" endtime="20201030 18:31:31.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.639" endtime="20201030 18:31:31.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.276" endtime="20201030 18:31:31.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.276" endtime="20201030 18:31:31.662"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.671" endtime="20201030 18:31:31.690"></status>
</kw>
<msg timestamp="20201030 18:31:31.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.670" endtime="20201030 18:31:31.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.692" endtime="20201030 18:31:31.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.694" endtime="20201030 18:31:31.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.667" endtime="20201030 18:31:31.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.665" endtime="20201030 18:31:31.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.704" endtime="20201030 18:31:31.989"></status>
</kw>
<msg timestamp="20201030 18:31:31.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022286153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022375903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.702" endtime="20201030 18:31:31.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022286153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022375903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.994" endtime="20201030 18:31:32.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.002" endtime="20201030 18:31:32.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.699" endtime="20201030 18:31:32.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.698" endtime="20201030 18:31:32.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:32.009" level="INFO">${RESULT} = [{'diff': 8.974999999999955e-05}, {'diff': 8.88190000000004e-05}, {'diff': 8.877700000000169e-05}, {'diff': 8.877699999999822e-05}, {'diff': 8.893000000000095e-05}, {'diff': 8.879200000000073e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:32.006" endtime="20201030 18:31:32.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:32.014" level="INFO">${ACCURACY} = {'diff': [8.974999999999955e-05, 8.88190000000004e-05, 8.877700000000169e-05, 8.877699999999822e-05, 8.893000000000095e-05, 8.879200000000073e-05, 8.898599999999923e-05, 8.884800000000248e-05, 8.89030...</msg>
<status status="PASS" starttime="20201030 18:31:32.010" endtime="20201030 18:31:32.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.019" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 18:31:32.018" endtime="20201030 18:31:32.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.021" level="INFO">VALUE: [8.974999999999955e-05, 8.88190000000004e-05, 8.877700000000169e-05, 8.877699999999822e-05, 8.893000000000095e-05, 8.879200000000073e-05, 8.898599999999923e-05, 8.884800000000248e-05, 8.890300000000129e-05, 8.880599999999683e-05, 8.877799999999769e-05, 8.883299999999997e-05, 8.88060000000003e-05, 8.895899999999957e-05, 8.891599999999791e-05, 8.895899999999957e-05, 8.879199999999726e-05, 8.888799999999877e-05, 8.868100000000018e-05, 8.873599999999898e-05, 8.879100000000126e-05, 8.89860000000027e-05, 8.879100000000126e-05, 8.884699999999954e-05, 8.880500000000083e-05, 8.883299999999997e-05, 8.879200000000073e-05, 8.883299999999997e-05, 8.879200000000073e-05, 8.884699999999954e-05, 8.879200000000073e-05, 8.891700000000086e-05, 8.872199999999941e-05, 8.877800000000116e-05, 8.888899999999825e-05, 8.897299999999914e-05, 8.877800000000116e-05, 8.874999999999855e-05, 8.893000000000095e-05, 8.876400000000159e-05, 8.884699999999954e-05, 8.901399999999837e-05, 8.891700000000086e-05, 8.877799999999769e-05, 8.876400000000159e-05, 8.88190000000004e-05, 8.877799999999769e-05, 8.89999999999988e-05, 8.872200000000288e-05, 8.898599999999923e-05]</msg>
<status status="PASS" starttime="20201030 18:31:32.020" endtime="20201030 18:31:32.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.015" endtime="20201030 18:31:32.023"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:32.027" endtime="20201030 18:31:32.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.025" endtime="20201030 18:31:32.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.024" endtime="20201030 18:31:32.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.663" endtime="20201030 18:31:32.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.662" endtime="20201030 18:31:32.047"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.056" endtime="20201030 18:31:32.074"></status>
</kw>
<msg timestamp="20201030 18:31:32.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.055" endtime="20201030 18:31:32.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.076" endtime="20201030 18:31:32.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.079" endtime="20201030 18:31:32.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.052" endtime="20201030 18:31:32.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.050" endtime="20201030 18:31:32.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.088" endtime="20201030 18:31:32.374"></status>
</kw>
<msg timestamp="20201030 18:31:32.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022090764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022181042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.087" endtime="20201030 18:31:32.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022090764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022181042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.378" endtime="20201030 18:31:32.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.387" endtime="20201030 18:31:32.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.084" endtime="20201030 18:31:32.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.082" endtime="20201030 18:31:32.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:32.394" level="INFO">${RESULT} = [{'diff': 9.027800000000266e-05}, {'diff': 8.972200000000041e-05}, {'diff': 8.979099999999879e-05}, {'diff': 8.980500000000183e-05}, {'diff': 8.997200000000066e-05}, {'diff': 8.987499999999968e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:32.391" endtime="20201030 18:31:32.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:32.398" level="INFO">${ACCURACY} = {'diff': [9.027800000000266e-05, 8.972200000000041e-05, 8.979099999999879e-05, 8.980500000000183e-05, 8.997200000000066e-05, 8.987499999999968e-05, 8.994400000000152e-05, 8.981899999999793e-05, 8.9763...</msg>
<status status="PASS" starttime="20201030 18:31:32.395" endtime="20201030 18:31:32.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.403" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 18:31:32.402" endtime="20201030 18:31:32.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.405" level="INFO">VALUE: [9.027800000000266e-05, 8.972200000000041e-05, 8.979099999999879e-05, 8.980500000000183e-05, 8.997200000000066e-05, 8.987499999999968e-05, 8.994400000000152e-05, 8.981899999999793e-05, 8.976399999999912e-05, 8.973599999999998e-05, 8.975000000000302e-05, 8.977800000000216e-05, 8.994499999999753e-05, 8.990300000000229e-05, 8.983400000000044e-05, 8.973700000000293e-05, 8.982000000000087e-05, 8.982000000000087e-05, 8.977700000000269e-05, 8.972200000000041e-05, 8.981899999999793e-05, 9.001399999999937e-05, 8.997200000000066e-05, 8.974999999999955e-05, 8.98190000000014e-05, 8.987499999999968e-05, 8.990300000000229e-05, 8.997200000000066e-05, 8.98329999999975e-05, 8.990300000000229e-05, 8.997200000000066e-05, 8.99589999999971e-05, 8.988899999999925e-05, 8.973599999999998e-05, 8.995900000000057e-05, 8.972299999999989e-05, 8.981899999999793e-05, 8.98190000000014e-05, 8.998600000000023e-05, 8.990199999999934e-05, 8.973599999999998e-05, 8.991599999999891e-05, 8.984700000000054e-05, 8.970800000000084e-05, 8.984699999999707e-05, 8.976399999999912e-05, 8.977799999999869e-05, 8.975000000000302e-05, 8.974999999999955e-05, 8.98199999999974e-05]</msg>
<status status="PASS" starttime="20201030 18:31:32.404" endtime="20201030 18:31:32.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.399" endtime="20201030 18:31:32.407"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:32.411" endtime="20201030 18:31:32.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.409" endtime="20201030 18:31:32.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.408" endtime="20201030 18:31:32.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.048" endtime="20201030 18:31:32.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.048" endtime="20201030 18:31:32.431"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.441" endtime="20201030 18:31:32.461"></status>
</kw>
<msg timestamp="20201030 18:31:32.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.439" endtime="20201030 18:31:32.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.462" endtime="20201030 18:31:32.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.465" endtime="20201030 18:31:32.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.436" endtime="20201030 18:31:32.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.434" endtime="20201030 18:31:32.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.474" endtime="20201030 18:31:32.760"></status>
</kw>
<msg timestamp="20201030 18:31:32.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023367472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023459042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.473" endtime="20201030 18:31:32.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023367472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023459042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.764" endtime="20201030 18:31:32.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.773" endtime="20201030 18:31:32.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.470" endtime="20201030 18:31:32.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.468" endtime="20201030 18:31:32.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:32.780" level="INFO">${RESULT} = [{'diff': 9.156999999999915e-05}, {'diff': 9.093000000000295e-05}, {'diff': 9.087499999999721e-05}, {'diff': 9.083300000000197e-05}, {'diff': 9.072200000000141e-05}, {'diff': 9.095800000000209e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:32.777" endtime="20201030 18:31:32.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:32.784" level="INFO">${ACCURACY} = {'diff': [9.156999999999915e-05, 9.093000000000295e-05, 9.087499999999721e-05, 9.083300000000197e-05, 9.072200000000141e-05, 9.095800000000209e-05, 9.091699999999939e-05, 9.084700000000154e-05, 9.0944...</msg>
<status status="PASS" starttime="20201030 18:31:32.781" endtime="20201030 18:31:32.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.789" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 18:31:32.788" endtime="20201030 18:31:32.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.792" level="INFO">VALUE: [9.156999999999915e-05, 9.093000000000295e-05, 9.087499999999721e-05, 9.083300000000197e-05, 9.072200000000141e-05, 9.095800000000209e-05, 9.091699999999939e-05, 9.084700000000154e-05, 9.094499999999853e-05, 9.073599999999751e-05, 9.09589999999981e-05, 9.074999999999708e-05, 9.088900000000025e-05, 9.087500000000068e-05, 9.087500000000068e-05, 9.076400000000012e-05, 9.081899999999893e-05, 9.097200000000166e-05, 9.08329999999985e-05, 9.090299999999982e-05, 9.087499999999721e-05, 9.070799999999837e-05, 9.086099999999764e-05, 9.083300000000197e-05, 9.101400000000037e-05, 9.090299999999982e-05, 9.080599999999883e-05, 9.086100000000111e-05, 9.098600000000123e-05, 9.072200000000141e-05, 9.08199999999984e-05, 9.070899999999785e-05, 9.098699999999724e-05, 9.083399999999797e-05, 9.083300000000197e-05, 9.098600000000123e-05, 9.076400000000012e-05, 9.084700000000154e-05, 9.097200000000166e-05, 9.080499999999936e-05, 9.079199999999926e-05, 9.072199999999794e-05, 9.086100000000111e-05, 9.102799999999994e-05, 9.091700000000286e-05, 9.088900000000025e-05, 9.088900000000025e-05, 9.077799999999969e-05, 9.088900000000025e-05, 9.097300000000114e-05]</msg>
<status status="PASS" starttime="20201030 18:31:32.790" endtime="20201030 18:31:32.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.785" endtime="20201030 18:31:32.794"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:32.798" endtime="20201030 18:31:32.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.796" endtime="20201030 18:31:32.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.795" endtime="20201030 18:31:32.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.432" endtime="20201030 18:31:32.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.432" endtime="20201030 18:31:32.818"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.827" endtime="20201030 18:31:32.846"></status>
</kw>
<msg timestamp="20201030 18:31:32.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.826" endtime="20201030 18:31:32.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.848" endtime="20201030 18:31:32.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.850" endtime="20201030 18:31:32.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.823" endtime="20201030 18:31:32.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.821" endtime="20201030 18:31:32.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.860" endtime="20201030 18:31:33.145"></status>
</kw>
<msg timestamp="20201030 18:31:33.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022115903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022208417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.858" endtime="20201030 18:31:33.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022115903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022208417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.150" endtime="20201030 18:31:33.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.158" endtime="20201030 18:31:33.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.855" endtime="20201030 18:31:33.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.854" endtime="20201030 18:31:33.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:33.165" level="INFO">${RESULT} = [{'diff': 9.251400000000187e-05}, {'diff': 9.177699999999775e-05}, {'diff': 9.199999999999833e-05}, {'diff': 9.168000000000023e-05}, {'diff': 9.188900000000125e-05}, {'diff': 9.191600000000091e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:33.162" endtime="20201030 18:31:33.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:33.173" level="INFO">${ACCURACY} = {'diff': [9.251400000000187e-05, 9.177699999999775e-05, 9.199999999999833e-05, 9.168000000000023e-05, 9.188900000000125e-05, 9.191600000000091e-05, 9.198600000000223e-05, 9.180500000000036e-05, 9.1944...</msg>
<status status="PASS" starttime="20201030 18:31:33.166" endtime="20201030 18:31:33.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.178" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 18:31:33.177" endtime="20201030 18:31:33.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.180" level="INFO">VALUE: [9.251400000000187e-05, 9.177699999999775e-05, 9.199999999999833e-05, 9.168000000000023e-05, 9.188900000000125e-05, 9.191600000000091e-05, 9.198600000000223e-05, 9.180500000000036e-05, 9.194400000000005e-05, 9.194499999999953e-05, 9.173600000000198e-05, 9.198600000000223e-05, 9.173599999999851e-05, 9.194499999999953e-05, 9.173599999999851e-05, 9.173700000000146e-05, 9.195900000000257e-05, 9.191599999999744e-05, 9.174999999999808e-05, 9.198599999999876e-05, 9.184699999999907e-05, 9.190200000000134e-05, 9.191700000000039e-05, 9.199999999999833e-05, 9.180500000000036e-05, 9.179200000000026e-05, 9.18199999999994e-05, 9.191699999999692e-05, 9.174999999999808e-05, 9.170799999999937e-05, 9.194499999999953e-05, 9.177800000000069e-05, 9.184800000000201e-05, 9.184799999999854e-05, 9.18199999999994e-05, 9.19870000000017e-05, 9.180500000000036e-05, 9.184699999999907e-05, 9.179099999999732e-05, 9.186099999999864e-05, 9.188900000000125e-05, 9.187500000000168e-05, 9.197200000000266e-05, 9.197200000000266e-05, 9.188800000000177e-05, 9.191700000000039e-05, 9.170799999999937e-05, 9.176400000000112e-05, 9.198600000000223e-05, 9.190299999999735e-05]</msg>
<status status="PASS" starttime="20201030 18:31:33.179" endtime="20201030 18:31:33.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.174" endtime="20201030 18:31:33.182"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:33.186" endtime="20201030 18:31:33.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.184" endtime="20201030 18:31:33.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.183" endtime="20201030 18:31:33.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.819" endtime="20201030 18:31:33.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.819" endtime="20201030 18:31:33.206"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.216" endtime="20201030 18:31:33.233"></status>
</kw>
<msg timestamp="20201030 18:31:33.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.214" endtime="20201030 18:31:33.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.235" endtime="20201030 18:31:33.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.238" endtime="20201030 18:31:33.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.211" endtime="20201030 18:31:33.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.209" endtime="20201030 18:31:33.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.247" endtime="20201030 18:31:33.535"></status>
</kw>
<msg timestamp="20201030 18:31:33.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022241028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022334847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.246" endtime="20201030 18:31:33.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022241028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022334847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.539" endtime="20201030 18:31:33.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.547" endtime="20201030 18:31:33.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.243" endtime="20201030 18:31:33.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.241" endtime="20201030 18:31:33.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:33.554" level="INFO">${RESULT} = [{'diff': 9.381900000000193e-05}, {'diff': 9.284700000000007e-05}, {'diff': 9.28330000000005e-05}, {'diff': 9.291699999999792e-05}, {'diff': 9.270899999999985e-05}, {'diff': 9.277700000000222e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:33.551" endtime="20201030 18:31:33.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:33.559" level="INFO">${ACCURACY} = {'diff': [9.381900000000193e-05, 9.284700000000007e-05, 9.28330000000005e-05, 9.291699999999792e-05, 9.270899999999985e-05, 9.277700000000222e-05, 9.284799999999954e-05, 9.288800000000277e-05, 9.29440...</msg>
<status status="PASS" starttime="20201030 18:31:33.555" endtime="20201030 18:31:33.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.563" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 18:31:33.562" endtime="20201030 18:31:33.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.566" level="INFO">VALUE: [9.381900000000193e-05, 9.284700000000007e-05, 9.28330000000005e-05, 9.291699999999792e-05, 9.270899999999985e-05, 9.277700000000222e-05, 9.284799999999954e-05, 9.288800000000277e-05, 9.294400000000105e-05, 9.287500000000268e-05, 9.280500000000136e-05, 9.28469999999966e-05, 9.281900000000093e-05, 9.290300000000182e-05, 9.276399999999865e-05, 9.280500000000136e-05, 9.286099999999964e-05, 9.286099999999964e-05, 9.30139999999989e-05, 9.273599999999951e-05, 9.279099999999832e-05, 9.299999999999933e-05, 9.276399999999865e-05, 9.286199999999911e-05, 9.298699999999924e-05, 9.269500000000028e-05, 9.284700000000007e-05, 9.281900000000093e-05, 9.272199999999994e-05, 9.281900000000093e-05, 9.29720000000002e-05, 9.294400000000105e-05, 9.295799999999715e-05, 9.284700000000007e-05, 9.283299999999703e-05, 9.291700000000139e-05, 9.287500000000268e-05, 9.290299999999835e-05, 9.276400000000212e-05, 9.280600000000083e-05, 9.294500000000053e-05, 9.284799999999954e-05, 9.297299999999967e-05, 9.279099999999832e-05, 9.275000000000255e-05, 9.276399999999865e-05, 9.277700000000222e-05, 9.29720000000002e-05, 9.279200000000126e-05, 9.290299999999835e-05]</msg>
<status status="PASS" starttime="20201030 18:31:33.564" endtime="20201030 18:31:33.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.559" endtime="20201030 18:31:33.567"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:33.571" endtime="20201030 18:31:33.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.570" endtime="20201030 18:31:33.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.568" endtime="20201030 18:31:33.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.207" endtime="20201030 18:31:33.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.207" endtime="20201030 18:31:33.592"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.601" endtime="20201030 18:31:33.621"></status>
</kw>
<msg timestamp="20201030 18:31:33.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.599" endtime="20201030 18:31:33.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.623" endtime="20201030 18:31:33.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.632" endtime="20201030 18:31:33.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.597" endtime="20201030 18:31:33.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.594" endtime="20201030 18:31:33.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.646" endtime="20201030 18:31:33.940"></status>
</kw>
<msg timestamp="20201030 18:31:33.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023080361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023174597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.644" endtime="20201030 18:31:33.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023080361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023174597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.945" endtime="20201030 18:31:33.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.954" endtime="20201030 18:31:33.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.642" endtime="20201030 18:31:33.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.640" endtime="20201030 18:31:33.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:33.963" level="INFO">${RESULT} = [{'diff': 9.423600000000101e-05}, {'diff': 9.369499999999781e-05}, {'diff': 9.395899999999763e-05}, {'diff': 9.386200000000011e-05}, {'diff': 9.387500000000021e-05}, {'diff': 9.380499999999889e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:33.959" endtime="20201030 18:31:33.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:33.968" level="INFO">${ACCURACY} = {'diff': [9.423600000000101e-05, 9.369499999999781e-05, 9.395899999999763e-05, 9.386200000000011e-05, 9.387500000000021e-05, 9.380499999999889e-05, 9.372300000000042e-05, 9.379100000000279e-05, 9.3805...</msg>
<status status="PASS" starttime="20201030 18:31:33.964" endtime="20201030 18:31:33.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.974" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 18:31:33.973" endtime="20201030 18:31:33.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.978" level="INFO">VALUE: [9.423600000000101e-05, 9.369499999999781e-05, 9.395899999999763e-05, 9.386200000000011e-05, 9.387500000000021e-05, 9.380499999999889e-05, 9.372300000000042e-05, 9.379100000000279e-05, 9.380500000000236e-05, 9.377799999999922e-05, 9.386100000000064e-05, 9.380499999999889e-05, 9.381900000000193e-05, 9.39720000000012e-05, 9.369399999999833e-05, 9.375000000000008e-05, 9.373600000000051e-05, 9.384800000000054e-05, 9.372200000000094e-05, 9.387500000000021e-05, 9.39590000000011e-05, 9.384800000000054e-05, 9.373699999999999e-05, 9.381899999999846e-05, 9.392999999999901e-05, 9.38330000000015e-05, 9.372200000000094e-05, 9.398600000000076e-05, 9.386100000000064e-05, 9.368000000000223e-05, 9.390299999999935e-05, 9.39720000000012e-05, 9.379199999999879e-05, 9.379200000000226e-05, 9.39590000000011e-05, 9.391699999999892e-05, 9.377799999999922e-05, 9.374999999999661e-05, 9.381900000000193e-05, 9.377699999999975e-05, 9.398600000000076e-05, 9.372199999999747e-05, 9.373599999999704e-05, 9.400000000000033e-05, 9.375000000000008e-05, 9.390299999999935e-05, 9.37079999999979e-05, 9.395800000000162e-05, 9.398600000000076e-05, 9.383299999999803e-05]</msg>
<status status="PASS" starttime="20201030 18:31:33.976" endtime="20201030 18:31:33.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.969" endtime="20201030 18:31:33.981"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:33.985" endtime="20201030 18:31:34.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.983" endtime="20201030 18:31:34.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.982" endtime="20201030 18:31:34.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.593" endtime="20201030 18:31:34.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.592" endtime="20201030 18:31:34.006"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.015" endtime="20201030 18:31:34.035"></status>
</kw>
<msg timestamp="20201030 18:31:34.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.013" endtime="20201030 18:31:34.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.037" endtime="20201030 18:31:34.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.040" endtime="20201030 18:31:34.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.010" endtime="20201030 18:31:34.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.008" endtime="20201030 18:31:34.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.051" endtime="20201030 18:31:34.338"></status>
</kw>
<msg timestamp="20201030 18:31:34.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022845903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022941486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:34.049" endtime="20201030 18:31:34.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022845903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022941486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:34.342" endtime="20201030 18:31:34.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.350" endtime="20201030 18:31:34.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.046" endtime="20201030 18:31:34.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.044" endtime="20201030 18:31:34.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:34.357" level="INFO">${RESULT} = [{'diff': 9.558299999999978e-05}, {'diff': 9.476400000000065e-05}, {'diff': 9.491699999999992e-05}, {'diff': 9.487500000000121e-05}, {'diff': 9.487500000000121e-05}, {'diff': 9.490200000000087e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:34.354" endtime="20201030 18:31:34.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:34.362" level="INFO">${ACCURACY} = {'diff': [9.558299999999978e-05, 9.476400000000065e-05, 9.491699999999992e-05, 9.487500000000121e-05, 9.487500000000121e-05, 9.490200000000087e-05, 9.486100000000164e-05, 9.488900000000078e-05, 9.4818...</msg>
<status status="PASS" starttime="20201030 18:31:34.358" endtime="20201030 18:31:34.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.367" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 18:31:34.366" endtime="20201030 18:31:34.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.370" level="INFO">VALUE: [9.558299999999978e-05, 9.476400000000065e-05, 9.491699999999992e-05, 9.487500000000121e-05, 9.487500000000121e-05, 9.490200000000087e-05, 9.486100000000164e-05, 9.488900000000078e-05, 9.481899999999946e-05, 9.494399999999958e-05, 9.484700000000207e-05, 9.48330000000025e-05, 9.480600000000283e-05, 9.49720000000022e-05, 9.490300000000035e-05, 9.479199999999979e-05, 9.479199999999979e-05, 9.49859999999983e-05, 9.49729999999982e-05, 9.480599999999936e-05, 9.481899999999946e-05, 9.480499999999989e-05, 9.502800000000047e-05, 9.481899999999946e-05, 9.476400000000065e-05, 9.480499999999989e-05, 9.486100000000164e-05, 9.481999999999893e-05, 9.484700000000207e-05, 9.49720000000022e-05, 9.488900000000078e-05, 9.487500000000121e-05, 9.473599999999804e-05, 9.493099999999949e-05, 9.491699999999992e-05, 9.48339999999985e-05, 9.491699999999992e-05, 9.472299999999795e-05, 9.49729999999982e-05, 9.472200000000194e-05, 9.493100000000296e-05, 9.487500000000121e-05, 9.472200000000194e-05, 9.479199999999979e-05, 9.472200000000194e-05, 9.494400000000305e-05, 9.495800000000262e-05, 9.498600000000176e-05, 9.493099999999949e-05, 9.491699999999992e-05]</msg>
<status status="PASS" starttime="20201030 18:31:34.369" endtime="20201030 18:31:34.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.363" endtime="20201030 18:31:34.371"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:34.375" endtime="20201030 18:31:34.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.374" endtime="20201030 18:31:34.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.372" endtime="20201030 18:31:34.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.007" endtime="20201030 18:31:34.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.006" endtime="20201030 18:31:34.396"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.406" endtime="20201030 18:31:34.424"></status>
</kw>
<msg timestamp="20201030 18:31:34.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.404" endtime="20201030 18:31:34.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.426" endtime="20201030 18:31:34.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.428" endtime="20201030 18:31:34.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.401" endtime="20201030 18:31:34.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.399" endtime="20201030 18:31:34.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.438" endtime="20201030 18:31:34.725"></status>
</kw>
<msg timestamp="20201030 18:31:34.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022987486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02308425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:34.436" endtime="20201030 18:31:34.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022987486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02308425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:34.730" endtime="20201030 18:31:34.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.738" endtime="20201030 18:31:34.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.433" endtime="20201030 18:31:34.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.432" endtime="20201030 18:31:34.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:34.745" level="INFO">${RESULT} = [{'diff': 9.676399999999918e-05}, {'diff': 9.590300000000135e-05}, {'diff': 9.599999999999886e-05}, {'diff': 9.599999999999886e-05}, {'diff': 9.580600000000036e-05}, {'diff': 9.587499999999874e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:34.742" endtime="20201030 18:31:34.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:34.749" level="INFO">${ACCURACY} = {'diff': [9.676399999999918e-05, 9.590300000000135e-05, 9.599999999999886e-05, 9.599999999999886e-05, 9.580600000000036e-05, 9.587499999999874e-05, 9.579100000000132e-05, 9.588900000000178e-05, 9.5874...</msg>
<status status="PASS" starttime="20201030 18:31:34.746" endtime="20201030 18:31:34.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.754" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 18:31:34.753" endtime="20201030 18:31:34.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.757" level="INFO">VALUE: [9.676399999999918e-05, 9.590300000000135e-05, 9.599999999999886e-05, 9.599999999999886e-05, 9.580600000000036e-05, 9.587499999999874e-05, 9.579100000000132e-05, 9.588900000000178e-05, 9.587499999999874e-05, 9.590299999999788e-05, 9.591700000000092e-05, 9.594400000000058e-05, 9.595800000000015e-05, 9.595800000000015e-05, 9.587499999999874e-05, 9.588900000000178e-05, 9.568100000000024e-05, 9.574999999999861e-05, 9.576399999999818e-05, 9.593100000000049e-05, 9.573599999999904e-05, 9.593100000000049e-05, 9.580499999999742e-05, 9.586099999999917e-05, 9.594400000000058e-05, 9.577799999999775e-05, 9.591600000000144e-05, 9.576400000000165e-05, 9.577799999999775e-05, 9.59859999999993e-05, 9.581900000000046e-05, 9.599999999999886e-05, 9.588900000000178e-05, 9.600000000000233e-05, 9.58339999999995e-05, 9.575000000000208e-05, 9.597300000000267e-05, 9.581900000000046e-05, 9.595899999999963e-05, 9.58469999999996e-05, 9.597199999999972e-05, 9.588900000000178e-05, 9.573600000000251e-05, 9.58469999999996e-05, 9.577800000000122e-05, 9.604200000000104e-05, 9.579199999999732e-05, 9.60140000000019e-05, 9.590300000000135e-05, 9.590300000000135e-05]</msg>
<status status="PASS" starttime="20201030 18:31:34.755" endtime="20201030 18:31:34.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.750" endtime="20201030 18:31:34.758"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:34.762" endtime="20201030 18:31:34.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.760" endtime="20201030 18:31:34.782"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.759" endtime="20201030 18:31:34.782"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.397" endtime="20201030 18:31:34.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.397" endtime="20201030 18:31:34.783"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.792" endtime="20201030 18:31:34.812"></status>
</kw>
<msg timestamp="20201030 18:31:34.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.790" endtime="20201030 18:31:34.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.813" endtime="20201030 18:31:34.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.816" endtime="20201030 18:31:34.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.788" endtime="20201030 18:31:34.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.785" endtime="20201030 18:31:34.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.826" endtime="20201030 18:31:35.112"></status>
</kw>
<msg timestamp="20201030 18:31:35.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023451278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023548611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:34.824" endtime="20201030 18:31:35.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023451278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023548611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:35.116" endtime="20201030 18:31:35.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.125" endtime="20201030 18:31:35.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.821" endtime="20201030 18:31:35.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.820" endtime="20201030 18:31:35.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:35.132" level="INFO">${RESULT} = [{'diff': 9.733300000000153e-05}, {'diff': 9.6721999999997e-05}, {'diff': 9.69860000000003e-05}, {'diff': 9.697200000000072e-05}, {'diff': 9.695900000000063e-05}, {'diff': 9.69860000000003e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 18:31:35.128" endtime="20201030 18:31:35.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:35.136" level="INFO">${ACCURACY} = {'diff': [9.733300000000153e-05, 9.6721999999997e-05, 9.69860000000003e-05, 9.697200000000072e-05, 9.695900000000063e-05, 9.69860000000003e-05, 9.676299999999971e-05, 9.690299999999888e-05, 9.69300000...</msg>
<status status="PASS" starttime="20201030 18:31:35.133" endtime="20201030 18:31:35.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.141" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 18:31:35.140" endtime="20201030 18:31:35.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.143" level="INFO">VALUE: [9.733300000000153e-05, 9.6721999999997e-05, 9.69860000000003e-05, 9.697200000000072e-05, 9.695900000000063e-05, 9.69860000000003e-05, 9.676299999999971e-05, 9.690299999999888e-05, 9.693000000000201e-05, 9.68470000000006e-05, 9.681900000000146e-05, 9.692999999999855e-05, 9.66799999999983e-05, 9.701399999999943e-05, 9.68470000000006e-05, 9.68470000000006e-05, 9.683300000000103e-05, 9.688900000000278e-05, 9.672200000000047e-05, 9.674999999999961e-05, 9.690299999999888e-05, 9.691700000000192e-05, 9.695900000000063e-05, 9.67920000000018e-05, 9.674999999999961e-05, 9.687499999999974e-05, 9.688900000000278e-05, 9.688899999999931e-05, 9.691700000000192e-05, 9.676400000000265e-05, 9.701399999999943e-05, 9.674999999999961e-05, 9.676399999999918e-05, 9.673600000000004e-05, 9.695900000000063e-05, 9.691700000000192e-05, 9.693099999999802e-05, 9.674999999999961e-05, 9.691699999999845e-05, 9.688899999999931e-05, 9.682000000000093e-05, 9.674999999999961e-05, 9.677699999999928e-05, 9.681900000000146e-05, 9.699999999999986e-05, 9.695800000000115e-05, 9.686100000000017e-05, 9.686100000000017e-05, 9.690300000000235e-05, 9.68470000000006e-05]</msg>
<status status="PASS" starttime="20201030 18:31:35.142" endtime="20201030 18:31:35.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.137" endtime="20201030 18:31:35.146"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:35.150" endtime="20201030 18:31:35.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.148" endtime="20201030 18:31:35.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.147" endtime="20201030 18:31:35.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.784" endtime="20201030 18:31:35.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.783" endtime="20201030 18:31:35.179"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.188" endtime="20201030 18:31:35.207"></status>
</kw>
<msg timestamp="20201030 18:31:35.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.186" endtime="20201030 18:31:35.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.208" endtime="20201030 18:31:35.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.211" endtime="20201030 18:31:35.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.183" endtime="20201030 18:31:35.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.181" endtime="20201030 18:31:35.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.220" endtime="20201030 18:31:35.523"></status>
</kw>
<msg timestamp="20201030 18:31:35.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030937708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031036, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:35.219" endtime="20201030 18:31:35.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030937708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031036, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:35.527" endtime="20201030 18:31:35.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.535" endtime="20201030 18:31:35.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.216" endtime="20201030 18:31:35.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.214" endtime="20201030 18:31:35.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:35.542" level="INFO">${RESULT} = [{'diff': 9.829199999999982e-05}, {'diff': 9.76669999999992e-05}, {'diff': 9.791699999999945e-05}, {'diff': 9.786200000000411e-05}, {'diff': 9.78330000000055e-05}, {'diff': 9.801400000000043e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:31:35.539" endtime="20201030 18:31:35.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:35.547" level="INFO">${ACCURACY} = {'diff': [9.829199999999982e-05, 9.76669999999992e-05, 9.791699999999945e-05, 9.786200000000411e-05, 9.78330000000055e-05, 9.801400000000043e-05, 9.793000000000301e-05, 9.775000000000061e-05, 9.795800...</msg>
<status status="PASS" starttime="20201030 18:31:35.543" endtime="20201030 18:31:35.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.551" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 18:31:35.550" endtime="20201030 18:31:35.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.554" level="INFO">VALUE: [9.829199999999982e-05, 9.76669999999992e-05, 9.791699999999945e-05, 9.786200000000411e-05, 9.78330000000055e-05, 9.801400000000043e-05, 9.793000000000301e-05, 9.775000000000061e-05, 9.795800000000215e-05, 9.791700000000292e-05, 9.794400000000258e-05, 9.78609999999977e-05, 9.790300000000335e-05, 9.795800000000215e-05, 9.787499999999727e-05, 9.790299999999641e-05, 9.792999999999608e-05, 9.806899999999924e-05, 9.783399999999803e-05, 9.792999999999608e-05, 9.780499999999942e-05, 9.779099999999985e-05, 9.79159999999965e-05, 9.800000000000086e-05, 9.798599999999436e-05, 9.790299999999641e-05, 9.775000000000061e-05, 9.793100000000249e-05, 9.78330000000055e-05, 9.795800000000215e-05, 9.779199999999932e-05, 9.787500000000421e-05, 9.793100000000249e-05, 9.768100000000224e-05, 9.787499999999727e-05, 9.776400000000018e-05, 9.795900000000163e-05, 9.797200000000172e-05, 9.788799999999737e-05, 9.783299999999856e-05, 9.797200000000172e-05, 9.788899999999684e-05, 9.78609999999977e-05, 9.79860000000013e-05, 9.772200000000147e-05, 9.776400000000018e-05, 9.783299999999856e-05, 9.788899999999684e-05, 9.795899999999469e-05, 9.781999999999846e-05]</msg>
<status status="PASS" starttime="20201030 18:31:35.552" endtime="20201030 18:31:35.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.548" endtime="20201030 18:31:35.555"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:35.559" endtime="20201030 18:31:35.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.557" endtime="20201030 18:31:35.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.556" endtime="20201030 18:31:35.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.180" endtime="20201030 18:31:35.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.179" endtime="20201030 18:31:35.579"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.588" endtime="20201030 18:31:35.607"></status>
</kw>
<msg timestamp="20201030 18:31:35.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.586" endtime="20201030 18:31:35.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.608" endtime="20201030 18:31:35.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.611" endtime="20201030 18:31:35.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.584" endtime="20201030 18:31:35.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.582" endtime="20201030 18:31:35.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.621" endtime="20201030 18:31:35.907"></status>
</kw>
<msg timestamp="20201030 18:31:35.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021527819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021627083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:35.618" endtime="20201030 18:31:35.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021527819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021627083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:35.911" endtime="20201030 18:31:35.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.919" endtime="20201030 18:31:35.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.615" endtime="20201030 18:31:35.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.614" endtime="20201030 18:31:35.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:35.926" level="INFO">${RESULT} = [{'diff': 9.926399999999821e-05}, {'diff': 9.865300000000063e-05}, {'diff': 9.89860000000023e-05}, {'diff': 9.868099999999977e-05}, {'diff': 9.902799999999753e-05}, {'diff': 9.887500000000174e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:35.923" endtime="20201030 18:31:35.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:35.930" level="INFO">${ACCURACY} = {'diff': [9.926399999999821e-05, 9.865300000000063e-05, 9.89860000000023e-05, 9.868099999999977e-05, 9.902799999999753e-05, 9.887500000000174e-05, 9.873600000000204e-05, 9.894499999999959e-05, 9.87920...</msg>
<status status="PASS" starttime="20201030 18:31:35.927" endtime="20201030 18:31:35.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.934" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 18:31:35.933" endtime="20201030 18:31:35.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.937" level="INFO">VALUE: [9.926399999999821e-05, 9.865300000000063e-05, 9.89860000000023e-05, 9.868099999999977e-05, 9.902799999999753e-05, 9.887500000000174e-05, 9.873600000000204e-05, 9.894499999999959e-05, 9.879200000000032e-05, 9.877800000000075e-05, 9.877700000000128e-05, 9.9028000000001e-05, 9.880499999999695e-05, 9.895799999999969e-05, 9.895799999999969e-05, 9.904200000000057e-05, 9.880600000000336e-05, 9.897199999999926e-05, 9.891700000000045e-05, 9.904099999999763e-05, 9.88470000000026e-05, 9.872300000000195e-05, 9.887499999999827e-05, 9.870899999999891e-05, 9.884800000000207e-05, 9.888800000000184e-05, 9.879099999999738e-05, 9.873599999999857e-05, 9.891600000000098e-05, 9.888900000000131e-05, 9.880500000000042e-05, 9.869399999999987e-05, 9.893100000000002e-05, 9.868099999999977e-05, 9.88059999999999e-05, 9.873600000000204e-05, 9.873599999999857e-05, 9.884699999999913e-05, 9.870899999999891e-05, 9.873700000000152e-05, 9.884800000000207e-05, 9.879200000000032e-05, 9.883299999999956e-05, 9.89860000000023e-05, 9.897200000000272e-05, 9.879099999999738e-05, 9.902799999999753e-05, 9.891600000000098e-05, 9.88059999999999e-05, 9.86670000000002e-05]</msg>
<status status="PASS" starttime="20201030 18:31:35.936" endtime="20201030 18:31:35.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.931" endtime="20201030 18:31:35.942"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:35.946" endtime="20201030 18:31:35.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.945" endtime="20201030 18:31:35.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.943" endtime="20201030 18:31:35.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.580" endtime="20201030 18:31:35.967"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.579" endtime="20201030 18:31:35.967"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.975" endtime="20201030 18:31:35.995"></status>
</kw>
<msg timestamp="20201030 18:31:35.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.974" endtime="20201030 18:31:35.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.997" endtime="20201030 18:31:35.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.999" endtime="20201030 18:31:36.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.971" endtime="20201030 18:31:36.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.969" endtime="20201030 18:31:36.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.008" endtime="20201030 18:31:36.297"></status>
</kw>
<msg timestamp="20201030 18:31:36.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022574486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022674986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:36.007" endtime="20201030 18:31:36.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022574486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022674986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:36.301" endtime="20201030 18:31:36.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.309" endtime="20201030 18:31:36.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.004" endtime="20201030 18:31:36.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.003" endtime="20201030 18:31:36.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:36.316" level="INFO">${RESULT} = [{'diff': 0.0001004999999999999}, {'diff': 9.977800000000175e-05}, {'diff': 9.98479999999996e-05}, {'diff': 9.976399999999871e-05}, {'diff': 9.973599999999957e-05}, {'diff': 9.9819999999997e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:31:36.313" endtime="20201030 18:31:36.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:36.320" level="INFO">${ACCURACY} = {'diff': [0.0001004999999999999, 9.977800000000175e-05, 9.98479999999996e-05, 9.976399999999871e-05, 9.973599999999957e-05, 9.9819999999997e-05, 9.988799999999937e-05, 9.994399999999765e-05, 9.9791000...</msg>
<status status="PASS" starttime="20201030 18:31:36.317" endtime="20201030 18:31:36.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.324" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 18:31:36.323" endtime="20201030 18:31:36.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.327" level="INFO">VALUE: [0.0001004999999999999, 9.977800000000175e-05, 9.98479999999996e-05, 9.976399999999871e-05, 9.973599999999957e-05, 9.9819999999997e-05, 9.988799999999937e-05, 9.994399999999765e-05, 9.979100000000185e-05, 9.98609999999997e-05, 9.993000000000155e-05, 9.990299999999841e-05, 9.997200000000026e-05, 9.975000000000261e-05, 9.982000000000046e-05, 9.988900000000231e-05, 9.995900000000016e-05, 0.00010000000000000286, 9.990299999999841e-05, 9.995900000000016e-05, 9.990299999999841e-05, 9.99860000000033e-05, 9.998599999999983e-05, 0.00010000000000000286, 9.99159999999985e-05, 9.975000000000261e-05, 9.990299999999841e-05, 0.00010001400000000243, 0.00010001399999999896, 9.991700000000145e-05, 9.98609999999997e-05, 9.995800000000069e-05, 9.984700000000013e-05, 9.998599999999983e-05, 9.987499999999927e-05, 9.995900000000016e-05, 9.995800000000069e-05, 9.977800000000175e-05, 9.998599999999983e-05, 9.998599999999983e-05, 9.987499999999927e-05, 9.983300000000056e-05, 9.976399999999871e-05, 9.98609999999997e-05, 9.992999999999808e-05, 9.9722e-05, 9.99999999999994e-05, 9.995800000000069e-05, 9.976399999999871e-05, 9.997200000000026e-05]</msg>
<status status="PASS" starttime="20201030 18:31:36.326" endtime="20201030 18:31:36.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.321" endtime="20201030 18:31:36.329"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:36.333" endtime="20201030 18:31:36.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.331" endtime="20201030 18:31:36.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.330" endtime="20201030 18:31:36.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.968" endtime="20201030 18:31:36.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.967" endtime="20201030 18:31:36.353"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.362" endtime="20201030 18:31:36.382"></status>
</kw>
<msg timestamp="20201030 18:31:36.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.361" endtime="20201030 18:31:36.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.384" endtime="20201030 18:31:36.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.387" endtime="20201030 18:31:36.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.358" endtime="20201030 18:31:36.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.356" endtime="20201030 18:31:36.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.396" endtime="20201030 18:31:36.681"></status>
</kw>
<msg timestamp="20201030 18:31:36.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021750236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021851736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:36.394" endtime="20201030 18:31:36.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021750236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021851736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:36.685" endtime="20201030 18:31:36.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.693" endtime="20201030 18:31:36.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.391" endtime="20201030 18:31:36.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.390" endtime="20201030 18:31:36.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:36.700" level="INFO">${RESULT} = [{'diff': 0.0001015000000000009}, {'diff': 0.00010098600000000083}, {'diff': 0.00010091700000000245}, {'diff': 0.00010097300000000073}, {'diff': 0.00010073700000000005}, {'diff': 0.0001009449999999981...</msg>
<status status="PASS" starttime="20201030 18:31:36.697" endtime="20201030 18:31:36.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:36.707" level="INFO">${ACCURACY} = {'diff': [0.0001015000000000009, 0.00010098600000000083, 0.00010091700000000245, 0.00010097300000000073, 0.00010073700000000005, 0.00010094499999999812, 0.00010095900000000116, 0.00010073600000000058,...</msg>
<status status="PASS" starttime="20201030 18:31:36.701" endtime="20201030 18:31:36.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.712" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 18:31:36.711" endtime="20201030 18:31:36.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.714" level="INFO">VALUE: [0.0001015000000000009, 0.00010098600000000083, 0.00010091700000000245, 0.00010097300000000073, 0.00010073700000000005, 0.00010094499999999812, 0.00010095900000000116, 0.00010073600000000058, 0.00010073600000000058, 0.00010077799999999928, 0.00010099999999999693, 0.00010081900000000199, 0.00010095800000000169, 0.00010083399999999756, 0.00010075000000000014, 0.00010098600000000083, 0.00010079200000000232, 0.00010079199999999885, 0.00010083399999999756, 0.0001006809999999983, 0.00010079200000000232, 0.00010088899999999984, 0.00010069500000000134, 0.00010075000000000014, 0.00010090199999999994, 0.00010076400000000318, 0.00010079199999999885, 0.00010083299999999809, 0.00010095799999999822, 0.00010098600000000083, 0.000100819999999998, 0.00010093099999999855, 0.00010075000000000014, 0.00010087500000000027, 0.00010088899999999984, 0.0001010000000000004, 0.00010079199999999885, 0.00010087500000000027, 0.00010080499999999895, 0.00010093000000000255, 0.00010079099999999938, 0.00010094399999999865, 0.00010101399999999996, 0.00010080499999999895, 0.00010093000000000255, 0.00010092999999999908, 0.0001008610000000007, 0.00010084699999999766, 0.00010090299999999941, 0.00010080599999999842]</msg>
<status status="PASS" starttime="20201030 18:31:36.713" endtime="20201030 18:31:36.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.708" endtime="20201030 18:31:36.715"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:36.719" endtime="20201030 18:31:36.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.718" endtime="20201030 18:31:36.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.716" endtime="20201030 18:31:36.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.355" endtime="20201030 18:31:36.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.354" endtime="20201030 18:31:36.740"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.748" endtime="20201030 18:31:36.766"></status>
</kw>
<msg timestamp="20201030 18:31:36.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.747" endtime="20201030 18:31:36.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.768" endtime="20201030 18:31:36.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.770" endtime="20201030 18:31:36.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.744" endtime="20201030 18:31:36.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.742" endtime="20201030 18:31:36.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.779" endtime="20201030 18:31:37.067"></status>
</kw>
<msg timestamp="20201030 18:31:37.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021614181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021716778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:36.778" endtime="20201030 18:31:37.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021614181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021716778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:37.071" endtime="20201030 18:31:37.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.079" endtime="20201030 18:31:37.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.775" endtime="20201030 18:31:37.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.774" endtime="20201030 18:31:37.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:37.086" level="INFO">${RESULT} = [{'diff': 0.00010259699999999941}, {'diff': 0.00010177800000000028}, {'diff': 0.00010170799999999897}, {'diff': 0.00010184699999999866}, {'diff': 0.00010177800000000028}, {'diff': 0.000101791999999999...</msg>
<status status="PASS" starttime="20201030 18:31:37.083" endtime="20201030 18:31:37.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:37.090" level="INFO">${ACCURACY} = {'diff': [0.00010259699999999941, 0.00010177800000000028, 0.00010170799999999897, 0.00010184699999999866, 0.00010177800000000028, 0.00010179199999999985, 0.00010183299999999909, 0.00010183299999999909...</msg>
<status status="PASS" starttime="20201030 18:31:37.087" endtime="20201030 18:31:37.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.094" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 18:31:37.093" endtime="20201030 18:31:37.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.097" level="INFO">VALUE: [0.00010259699999999941, 0.00010177800000000028, 0.00010170799999999897, 0.00010184699999999866, 0.00010177800000000028, 0.00010179199999999985, 0.00010183299999999909, 0.00010183299999999909, 0.00010183299999999909, 0.00010198599999999836, 0.00010183399999999856, 0.00010177800000000028, 0.00010182000000000246, 0.00010186200000000117, 0.00010183300000000256, 0.0001018749999999978, 0.0001018879999999979, 0.0001019160000000005, 0.00010180499999999995, 0.00010197199999999879, 0.00010177800000000028, 0.00010179199999999985, 0.00010183299999999909, 0.00010175000000000115, 0.00010179199999999985, 0.00010175000000000115, 0.00010180599999999942, 0.00010176400000000071, 0.00010176400000000071, 0.00010177800000000028, 0.00010174999999999768, 0.00010198599999999836, 0.00010170799999999897, 0.00010179199999999985, 0.00010177800000000028, 0.00010190300000000041, 0.00010197199999999879, 0.00010201400000000097, 0.00010179199999999985, 0.00010195799999999922, 0.00010183399999999856, 0.00010183299999999909, 0.00010190300000000041, 0.0001018060000000029, 0.00010202800000000053, 0.00010180499999999995, 0.0001018610000000017, 0.0001018749999999978, 0.00010177700000000081, 0.00010175000000000115]</msg>
<status status="PASS" starttime="20201030 18:31:37.095" endtime="20201030 18:31:37.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.091" endtime="20201030 18:31:37.098"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:37.102" endtime="20201030 18:31:37.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.100" endtime="20201030 18:31:37.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.099" endtime="20201030 18:31:37.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.741" endtime="20201030 18:31:37.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.740" endtime="20201030 18:31:37.122"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.131" endtime="20201030 18:31:37.151"></status>
</kw>
<msg timestamp="20201030 18:31:37.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.129" endtime="20201030 18:31:37.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.153" endtime="20201030 18:31:37.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.155" endtime="20201030 18:31:37.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.127" endtime="20201030 18:31:37.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.125" endtime="20201030 18:31:37.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.164" endtime="20201030 18:31:37.450"></status>
</kw>
<msg timestamp="20201030 18:31:37.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022725458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022828542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:37.162" endtime="20201030 18:31:37.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022725458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022828542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:37.454" endtime="20201030 18:31:37.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.462" endtime="20201030 18:31:37.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.160" endtime="20201030 18:31:37.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.158" endtime="20201030 18:31:37.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:37.469" level="INFO">${RESULT} = [{'diff': 0.00010308399999999981}, {'diff': 0.00010275000000000215}, {'diff': 0.00010280499999999748}, {'diff': 0.00010299999999999893}, {'diff': 0.00010283300000000009}, {'diff': 0.000102749999999998...</msg>
<status status="PASS" starttime="20201030 18:31:37.466" endtime="20201030 18:31:37.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:37.473" level="INFO">${ACCURACY} = {'diff': [0.00010308399999999981, 0.00010275000000000215, 0.00010280499999999748, 0.00010299999999999893, 0.00010283300000000009, 0.00010274999999999868, 0.00010277799999999782, 0.0001029299999999976,...</msg>
<status status="PASS" starttime="20201030 18:31:37.470" endtime="20201030 18:31:37.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.477" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 18:31:37.476" endtime="20201030 18:31:37.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.480" level="INFO">VALUE: [0.00010308399999999981, 0.00010275000000000215, 0.00010280499999999748, 0.00010299999999999893, 0.00010283300000000009, 0.00010274999999999868, 0.00010277799999999782, 0.0001029299999999976, 0.00010291700000000098, 0.00010298699999999883, 0.00010276399999999825, 0.00010284699999999966, 0.00010282, 0.00010293099999999708, 0.00010291700000000098, 0.00010304199999999764, 0.00010274999999999868, 0.0001028749999999988, 0.00010280499999999748, 0.0001027359999999991, 0.00010297199999999979, 0.00010284699999999966, 0.00010276399999999825, 0.00010288900000000184, 0.0001027359999999991, 0.00010277800000000128, 0.00010275000000000215, 0.00010283300000000009, 0.00010290300000000141, 0.00010276400000000172, 0.00010294500000000012, 0.00010274999999999868, 0.0001028749999999988, 0.00010297199999999979, 0.00010286099999999923, 0.00010280499999999748, 0.00010290300000000141, 0.00010297199999999979, 0.00010288899999999837, 0.00010294400000000065, 0.00010293100000000055, 0.00010291699999999751, 0.00010280600000000042, 0.00010280600000000042, 0.00010284699999999966, 0.00010284799999999913, 0.00010294400000000065, 0.00010277799999999782, 0.00010288800000000237, 0.00010299999999999893]</msg>
<status status="PASS" starttime="20201030 18:31:37.478" endtime="20201030 18:31:37.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.474" endtime="20201030 18:31:37.482"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:37.486" endtime="20201030 18:31:37.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.484" endtime="20201030 18:31:37.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.483" endtime="20201030 18:31:37.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.123" endtime="20201030 18:31:37.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.123" endtime="20201030 18:31:37.507"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.515" endtime="20201030 18:31:37.535"></status>
</kw>
<msg timestamp="20201030 18:31:37.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.514" endtime="20201030 18:31:37.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.536" endtime="20201030 18:31:37.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.539" endtime="20201030 18:31:37.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.511" endtime="20201030 18:31:37.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.509" endtime="20201030 18:31:37.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.548" endtime="20201030 18:31:37.849"></status>
</kw>
<msg timestamp="20201030 18:31:37.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021827, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021931708, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:37.547" endtime="20201030 18:31:37.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021827, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021931708, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:37.853" endtime="20201030 18:31:37.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.861" endtime="20201030 18:31:37.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.544" endtime="20201030 18:31:37.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.542" endtime="20201030 18:31:37.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:37.867" level="INFO">${RESULT} = [{'diff': 0.00010470800000000197}, {'diff': 0.00010379199999999839}, {'diff': 0.00010379200000000185}, {'diff': 0.00010398600000000036}, {'diff': 0.00010405499999999873}, {'diff': 0.000103902999999998...</msg>
<status status="PASS" starttime="20201030 18:31:37.864" endtime="20201030 18:31:37.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:37.872" level="INFO">${ACCURACY} = {'diff': [0.00010470800000000197, 0.00010379199999999839, 0.00010379200000000185, 0.00010398600000000036, 0.00010405499999999873, 0.00010390299999999894, 0.00010379099999999891, 0.00010384800000000013...</msg>
<status status="PASS" starttime="20201030 18:31:37.868" endtime="20201030 18:31:37.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.877" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 18:31:37.876" endtime="20201030 18:31:37.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.879" level="INFO">VALUE: [0.00010470800000000197, 0.00010379199999999839, 0.00010379200000000185, 0.00010398600000000036, 0.00010405499999999873, 0.00010390299999999894, 0.00010379099999999891, 0.00010384800000000013, 0.00010391599999999904, 0.00010391599999999904, 0.00010394400000000165, 0.00010384700000000066, 0.0001037360000000001, 0.00010377800000000229, 0.00010398600000000036, 0.00010374999999999968, 0.00010395800000000122, 0.00010384700000000066, 0.00010381999999999753, 0.000103820000000001, 0.0001038619999999997, 0.00010384799999999667, 0.00010395799999999775, 0.00010386100000000023, 0.00010369399999999793, 0.00010394400000000165, 0.00010391599999999904, 0.0001037360000000001, 0.00010377799999999882, 0.00010391699999999851, 0.0001040139999999995, 0.00010397299999999679, 0.00010395900000000069, 0.00010383300000000109, 0.0001038619999999997, 0.0001036949999999974, 0.000103820000000001, 0.00010395799999999775, 0.00010393100000000155, 0.00010399999999999993, 0.0001037360000000001, 0.00010367999999999836, 0.00010379099999999891, 0.00010399999999999993, 0.00010381900000000152, 0.00010383300000000109, 0.0001037079999999975, 0.00010379200000000185, 0.0001040139999999995, 0.00010397199999999732]</msg>
<status status="PASS" starttime="20201030 18:31:37.878" endtime="20201030 18:31:37.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.873" endtime="20201030 18:31:37.881"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:37.884" endtime="20201030 18:31:37.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.883" endtime="20201030 18:31:37.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.882" endtime="20201030 18:31:37.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.507" endtime="20201030 18:31:37.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.507" endtime="20201030 18:31:37.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.983" endtime="20201030 18:31:37.905"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:37.909" endtime="20201030 18:31:37.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.908" endtime="20201030 18:31:37.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.906" endtime="20201030 18:31:37.929"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:58.901" endtime="20201030 18:31:37.930" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:37.936" endtime="20201030 18:31:37.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.935" endtime="20201030 18:31:37.956"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.969" endtime="20201030 18:31:37.984"></status>
</kw>
<msg timestamp="20201030 18:31:37.985" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.968" endtime="20201030 18:31:37.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.987" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.986" endtime="20201030 18:31:37.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.990" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:37.988" endtime="20201030 18:31:37.991"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:37.965" endtime="20201030 18:31:37.991"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:37.963" endtime="20201030 18:31:37.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.961" endtime="20201030 18:31:37.992"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:37.996" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:37.995" endtime="20201030 18:31:37.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.993" endtime="20201030 18:31:37.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.961" endtime="20201030 18:31:37.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.960" endtime="20201030 18:31:37.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.998" endtime="20201030 18:31:37.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.959" endtime="20201030 18:31:38.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.957" endtime="20201030 18:31:38.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.933" endtime="20201030 18:31:38.001"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.010" endtime="20201030 18:31:38.025"></status>
</kw>
<msg timestamp="20201030 18:31:38.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.009" endtime="20201030 18:31:38.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.027" endtime="20201030 18:31:38.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.029" endtime="20201030 18:31:38.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.006" endtime="20201030 18:31:38.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.004" endtime="20201030 18:31:38.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.038" endtime="20201030 18:31:38.325"></status>
</kw>
<msg timestamp="20201030 18:31:38.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066846278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066868056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.037" endtime="20201030 18:31:38.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066846278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066868056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.330" endtime="20201030 18:31:38.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.338" endtime="20201030 18:31:38.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.034" endtime="20201030 18:31:38.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.032" endtime="20201030 18:31:38.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:38.345" level="INFO">${RESULT} = [{'diff': 2.1778000000000075e-05}, {'diff': 2.2194000000003156e-05}, {'diff': 2.238899999999766e-05}, {'diff': 2.2320000000006224e-05}, {'diff': 2.229100000000761e-05}, {'diff': 2.2305999999999715e-05...</msg>
<status status="PASS" starttime="20201030 18:31:38.341" endtime="20201030 18:31:38.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:38.350" level="INFO">${ACCURACY} = {'diff': [2.1778000000000075e-05, 2.2194000000003156e-05, 2.238899999999766e-05, 2.2320000000006224e-05, 2.229100000000761e-05, 2.2305999999999715e-05, 2.22770000000011e-05, 2.2250000000001435e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:31:38.346" endtime="20201030 18:31:38.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.354" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 18:31:38.353" endtime="20201030 18:31:38.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.357" level="INFO">VALUE: [2.1778000000000075e-05, 2.2194000000003156e-05, 2.238899999999766e-05, 2.2320000000006224e-05, 2.229100000000761e-05, 2.2305999999999715e-05, 2.22770000000011e-05, 2.2250000000001435e-05, 2.233299999999938e-05, 2.2416000000011205e-05, 2.230500000000024e-05, 2.234700000000589e-05, 2.2179999999996647e-05, 2.2221999999988418e-05, 2.2138000000004876e-05, 2.2165999999990138e-05, 2.236099999999852e-05, 2.1415999999996327e-05, 2.2402000000004696e-05, 2.2318999999992872e-05, 2.2138999999990472e-05, 2.229100000000761e-05, 2.233299999999938e-05, 2.145900000000145e-05, 2.2318999999992872e-05, 2.237500000000503e-05, 2.2346999999992012e-05, 2.2292000000007084e-05, 2.238900000001154e-05, 2.2166000000004016e-05, 2.231900000000675e-05, 2.236099999999852e-05, 2.238899999999766e-05, 2.244499999999594e-05, 2.2193999999989278e-05, 2.2222000000002295e-05, 2.218099999999612e-05, 2.212499999999784e-05, 2.2209000000009138e-05, 2.237500000000503e-05, 2.143100000000231e-05, 2.2222000000002295e-05, 2.2292000000007084e-05, 2.2291999999993206e-05, 2.233299999999938e-05, 2.2263999999994066e-05, 2.243100000000331e-05, 2.138899999999666e-05, 2.237500000000503e-05, 2.240300000000417e-05]</msg>
<status status="PASS" starttime="20201030 18:31:38.356" endtime="20201030 18:31:38.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.351" endtime="20201030 18:31:38.358"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:38.361" endtime="20201030 18:31:38.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.360" endtime="20201030 18:31:38.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.359" endtime="20201030 18:31:38.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.002" endtime="20201030 18:31:38.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.002" endtime="20201030 18:31:38.382"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.391" endtime="20201030 18:31:38.407"></status>
</kw>
<msg timestamp="20201030 18:31:38.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.390" endtime="20201030 18:31:38.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.408" endtime="20201030 18:31:38.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.411" endtime="20201030 18:31:38.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.387" endtime="20201030 18:31:38.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.385" endtime="20201030 18:31:38.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.420" endtime="20201030 18:31:38.704"></status>
</kw>
<msg timestamp="20201030 18:31:38.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022726403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022748806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.418" endtime="20201030 18:31:38.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022726403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022748806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.709" endtime="20201030 18:31:38.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.717" endtime="20201030 18:31:38.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.416" endtime="20201030 18:31:38.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.414" endtime="20201030 18:31:38.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:38.724" level="INFO">${RESULT} = [{'diff': 2.24030000000007e-05}, {'diff': 2.2207999999999256e-05}, {'diff': 2.2305999999999715e-05}, {'diff': 2.2111999999997745e-05}, {'diff': 2.24030000000007e-05}, {'diff': 2.22229999999983e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:38.720" endtime="20201030 18:31:38.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:38.728" level="INFO">${ACCURACY} = {'diff': [2.24030000000007e-05, 2.2207999999999256e-05, 2.2305999999999715e-05, 2.2111999999997745e-05, 2.24030000000007e-05, 2.22229999999983e-05, 2.231899999999981e-05, 2.236099999999852e-05, 2.2165...</msg>
<status status="PASS" starttime="20201030 18:31:38.725" endtime="20201030 18:31:38.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.732" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 18:31:38.731" endtime="20201030 18:31:38.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.735" level="INFO">VALUE: [2.24030000000007e-05, 2.2207999999999256e-05, 2.2305999999999715e-05, 2.2111999999997745e-05, 2.24030000000007e-05, 2.22229999999983e-05, 2.231899999999981e-05, 2.236099999999852e-05, 2.2165999999997077e-05, 2.2263999999997536e-05, 2.231899999999981e-05, 2.231899999999981e-05, 2.2152000000000976e-05, 2.2401999999997757e-05, 2.236099999999852e-05, 2.231899999999981e-05, 2.2221999999998826e-05, 2.234700000000242e-05, 2.220899999999873e-05, 2.2264000000001005e-05, 2.2166000000000546e-05, 2.2222000000002295e-05, 2.2292000000000145e-05, 2.229100000000067e-05, 2.2319999999999285e-05, 2.238899999999766e-05, 2.2193999999999686e-05, 2.234699999999895e-05, 2.2193999999999686e-05, 2.2305999999999715e-05, 2.2207999999999256e-05, 2.215300000000045e-05, 2.212500000000131e-05, 2.237500000000156e-05, 2.233299999999938e-05, 2.141699999999927e-05, 2.2235999999998396e-05, 2.2221999999998826e-05, 2.2221999999998826e-05, 2.2207999999999256e-05, 2.219500000000263e-05, 2.2292000000000145e-05, 2.2305999999999715e-05, 2.2249999999997966e-05, 2.2236000000001865e-05, 2.234700000000242e-05, 2.2348000000001894e-05, 2.2457999999999506e-05, 2.2235999999998396e-05, 2.2319999999999285e-05]</msg>
<status status="PASS" starttime="20201030 18:31:38.733" endtime="20201030 18:31:38.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.729" endtime="20201030 18:31:38.736"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:38.740" endtime="20201030 18:31:38.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.738" endtime="20201030 18:31:38.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.737" endtime="20201030 18:31:38.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.383" endtime="20201030 18:31:38.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.382" endtime="20201030 18:31:38.761"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.770" endtime="20201030 18:31:38.785"></status>
</kw>
<msg timestamp="20201030 18:31:38.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.769" endtime="20201030 18:31:38.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.787" endtime="20201030 18:31:38.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.789" endtime="20201030 18:31:38.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.765" endtime="20201030 18:31:38.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.763" endtime="20201030 18:31:38.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.799" endtime="20201030 18:31:39.085"></status>
</kw>
<msg timestamp="20201030 18:31:39.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023141458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023163653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.797" endtime="20201030 18:31:39.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023141458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023163653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:39.090" endtime="20201030 18:31:39.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.098" endtime="20201030 18:31:39.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.794" endtime="20201030 18:31:39.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.793" endtime="20201030 18:31:39.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:39.105" level="INFO">${RESULT} = [{'diff': 2.219499999999916e-05}, {'diff': 2.2305999999999715e-05}, {'diff': 2.237500000000156e-05}, {'diff': 2.2236000000001865e-05}, {'diff': 2.234699999999895e-05}, {'diff': 2.2278000000000575e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:39.101" endtime="20201030 18:31:39.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:39.109" level="INFO">${ACCURACY} = {'diff': [2.219499999999916e-05, 2.2305999999999715e-05, 2.237500000000156e-05, 2.2236000000001865e-05, 2.234699999999895e-05, 2.2278000000000575e-05, 2.237500000000156e-05, 2.1485999999997646e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:31:39.106" endtime="20201030 18:31:39.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.114" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 18:31:39.113" endtime="20201030 18:31:39.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.117" level="INFO">VALUE: [2.219499999999916e-05, 2.2305999999999715e-05, 2.237500000000156e-05, 2.2236000000001865e-05, 2.234699999999895e-05, 2.2278000000000575e-05, 2.237500000000156e-05, 2.1485999999997646e-05, 2.2250000000001435e-05, 2.234700000000242e-05, 2.22090000000022e-05, 2.238899999999766e-05, 2.2278000000000575e-05, 2.2333999999998855e-05, 2.219500000000263e-05, 2.2278000000000575e-05, 2.213899999999741e-05, 2.237499999999809e-05, 2.2333999999998855e-05, 2.22090000000022e-05, 2.213900000000088e-05, 2.215299999999698e-05, 2.2305999999999715e-05, 2.2333999999998855e-05, 2.2207999999999256e-05, 2.2208000000002726e-05, 2.237499999999809e-05, 2.2180000000000116e-05, 2.2264000000001005e-05, 2.2222000000002295e-05, 2.2208000000002726e-05, 2.2236000000001865e-05, 2.234699999999895e-05, 2.1415999999999796e-05, 2.2292000000000145e-05, 2.236100000000199e-05, 2.231899999999981e-05, 2.2276999999997632e-05, 2.2207999999999256e-05, 2.234699999999895e-05, 2.231899999999981e-05, 2.238900000000113e-05, 2.233300000000285e-05, 2.233299999999938e-05, 2.238900000000113e-05, 2.236099999999852e-05, 2.2250000000001435e-05, 2.213900000000088e-05, 2.2249999999997966e-05, 2.216700000000002e-05]</msg>
<status status="PASS" starttime="20201030 18:31:39.115" endtime="20201030 18:31:39.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.110" endtime="20201030 18:31:39.118"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:39.121" endtime="20201030 18:31:39.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.120" endtime="20201030 18:31:39.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.119" endtime="20201030 18:31:39.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.762" endtime="20201030 18:31:39.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.761" endtime="20201030 18:31:39.142"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.151" endtime="20201030 18:31:39.165"></status>
</kw>
<msg timestamp="20201030 18:31:39.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.149" endtime="20201030 18:31:39.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.167" endtime="20201030 18:31:39.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.169" endtime="20201030 18:31:39.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.147" endtime="20201030 18:31:39.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.145" endtime="20201030 18:31:39.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.178" endtime="20201030 18:31:39.464"></status>
</kw>
<msg timestamp="20201030 18:31:39.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021934056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021955597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:39.177" endtime="20201030 18:31:39.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021934056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021955597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:39.468" endtime="20201030 18:31:39.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.476" endtime="20201030 18:31:39.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.174" endtime="20201030 18:31:39.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.172" endtime="20201030 18:31:39.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:39.483" level="INFO">${RESULT} = [{'diff': 2.154099999999992e-05}, {'diff': 2.2292000000000145e-05}, {'diff': 2.2193999999999686e-05}, {'diff': 2.244499999999941e-05}, {'diff': 2.2221999999998826e-05}, {'diff': 2.212500000000131e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:39.480" endtime="20201030 18:31:39.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:39.488" level="INFO">${ACCURACY} = {'diff': [2.154099999999992e-05, 2.2292000000000145e-05, 2.2193999999999686e-05, 2.244499999999941e-05, 2.2221999999998826e-05, 2.212500000000131e-05, 2.1429999999999366e-05, 2.237500000000156e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:31:39.484" endtime="20201030 18:31:39.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.493" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 18:31:39.492" endtime="20201030 18:31:39.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.495" level="INFO">VALUE: [2.154099999999992e-05, 2.2292000000000145e-05, 2.2193999999999686e-05, 2.244499999999941e-05, 2.2221999999998826e-05, 2.212500000000131e-05, 2.1429999999999366e-05, 2.237500000000156e-05, 2.1443999999998936e-05, 2.2292000000000145e-05, 2.24030000000007e-05, 2.2207999999999256e-05, 2.219499999999916e-05, 2.243099999999984e-05, 2.2193999999999686e-05, 2.143099999999884e-05, 2.2264000000001005e-05, 2.2250000000001435e-05, 2.240299999999723e-05, 2.2292000000000145e-05, 2.237499999999809e-05, 2.215300000000045e-05, 2.223700000000134e-05, 2.22090000000022e-05, 2.218099999999959e-05, 2.236099999999852e-05, 2.2278000000000575e-05, 2.2264000000001005e-05, 2.2277999999997106e-05, 2.2292000000000145e-05, 2.2235999999998396e-05, 2.237500000000156e-05, 2.2320000000002754e-05, 2.222300000000177e-05, 2.2249999999997966e-05, 2.2249999999997966e-05, 2.144499999999841e-05, 2.24030000000007e-05, 2.2250000000001435e-05, 2.218099999999959e-05, 2.223700000000134e-05, 2.1472000000001545e-05, 2.2193999999999686e-05, 2.2235999999998396e-05, 2.2250000000001435e-05, 2.2236000000001865e-05, 2.2334000000002324e-05, 2.2277999999997106e-05, 2.2264000000001005e-05, 2.223700000000134e-05]</msg>
<status status="PASS" starttime="20201030 18:31:39.494" endtime="20201030 18:31:39.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.489" endtime="20201030 18:31:39.497"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:39.500" endtime="20201030 18:31:39.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.499" endtime="20201030 18:31:39.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.498" endtime="20201030 18:31:39.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.143" endtime="20201030 18:31:39.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.142" endtime="20201030 18:31:39.521"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.530" endtime="20201030 18:31:39.545"></status>
</kw>
<msg timestamp="20201030 18:31:39.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.528" endtime="20201030 18:31:39.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.547" endtime="20201030 18:31:39.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.549" endtime="20201030 18:31:39.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.526" endtime="20201030 18:31:39.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.523" endtime="20201030 18:31:39.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.558" endtime="20201030 18:31:39.843"></status>
</kw>
<msg timestamp="20201030 18:31:39.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021919681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:39.557" endtime="20201030 18:31:39.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021919681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:39.847" endtime="20201030 18:31:39.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.856" endtime="20201030 18:31:39.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.554" endtime="20201030 18:31:39.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.552" endtime="20201030 18:31:39.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:39.862" level="INFO">${RESULT} = [{'diff': 2.2235999999998396e-05}, {'diff': 2.215300000000045e-05}, {'diff': 2.2319999999999285e-05}, {'diff': 2.2305999999999715e-05}, {'diff': 2.243099999999984e-05}, {'diff': 2.2305999999999715e-05...</msg>
<status status="PASS" starttime="20201030 18:31:39.859" endtime="20201030 18:31:39.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:39.867" level="INFO">${ACCURACY} = {'diff': [2.2235999999998396e-05, 2.215300000000045e-05, 2.2319999999999285e-05, 2.2305999999999715e-05, 2.243099999999984e-05, 2.2305999999999715e-05, 2.234699999999895e-05, 2.2264000000001005e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:31:39.863" endtime="20201030 18:31:39.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.871" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 18:31:39.870" endtime="20201030 18:31:39.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.874" level="INFO">VALUE: [2.2235999999998396e-05, 2.215300000000045e-05, 2.2319999999999285e-05, 2.2305999999999715e-05, 2.243099999999984e-05, 2.2305999999999715e-05, 2.234699999999895e-05, 2.2264000000001005e-05, 2.22090000000022e-05, 2.2334000000002324e-05, 2.2235999999998396e-05, 2.212500000000131e-05, 2.2347999999998425e-05, 2.212500000000131e-05, 2.2250000000001435e-05, 2.215299999999698e-05, 2.14029999999997e-05, 2.2305999999999715e-05, 2.241700000000027e-05, 2.236099999999852e-05, 2.141699999999927e-05, 2.141699999999927e-05, 2.233299999999938e-05, 2.2305999999999715e-05, 2.24030000000007e-05, 2.218099999999959e-05, 2.238900000000113e-05, 2.2207999999999256e-05, 2.2250000000001435e-05, 2.2290999999997202e-05, 2.2276999999997632e-05, 2.2152000000000976e-05, 2.234699999999895e-05, 2.2152000000000976e-05, 2.2276999999997632e-05, 2.2249999999997966e-05, 2.233299999999938e-05, 2.2193999999999686e-05, 2.229100000000067e-05, 2.2180000000000116e-05, 2.230500000000024e-05, 2.2193999999999686e-05, 2.2180000000000116e-05, 2.2180000000000116e-05, 2.237500000000156e-05, 2.237499999999809e-05, 2.234699999999895e-05, 2.1429999999999366e-05, 2.213900000000088e-05, 2.215300000000045e-05]</msg>
<status status="PASS" starttime="20201030 18:31:39.872" endtime="20201030 18:31:39.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.868" endtime="20201030 18:31:39.875"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:39.879" endtime="20201030 18:31:39.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.877" endtime="20201030 18:31:39.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.876" endtime="20201030 18:31:39.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.522" endtime="20201030 18:31:39.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.521" endtime="20201030 18:31:39.899"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.908" endtime="20201030 18:31:39.927"></status>
</kw>
<msg timestamp="20201030 18:31:39.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.907" endtime="20201030 18:31:39.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.929" endtime="20201030 18:31:39.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.931" endtime="20201030 18:31:39.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.904" endtime="20201030 18:31:39.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.902" endtime="20201030 18:31:39.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.940" endtime="20201030 18:31:40.227"></status>
</kw>
<msg timestamp="20201030 18:31:40.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026095236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026116917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:39.939" endtime="20201030 18:31:40.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026095236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026116917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:40.232" endtime="20201030 18:31:40.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.240" endtime="20201030 18:31:40.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.936" endtime="20201030 18:31:40.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.935" endtime="20201030 18:31:40.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:40.247" level="INFO">${RESULT} = [{'diff': 2.168099999999909e-05}, {'diff': 2.237500000000156e-05}, {'diff': 2.218099999999959e-05}, {'diff': 2.236100000000199e-05}, {'diff': 2.231899999999981e-05}, {'diff': 2.2180000000000116e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:40.243" endtime="20201030 18:31:40.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:40.251" level="INFO">${ACCURACY} = {'diff': [2.168099999999909e-05, 2.237500000000156e-05, 2.218099999999959e-05, 2.236100000000199e-05, 2.231899999999981e-05, 2.2180000000000116e-05, 2.2319999999999285e-05, 2.2348000000001894e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 18:31:40.248" endtime="20201030 18:31:40.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.257" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 18:31:40.255" endtime="20201030 18:31:40.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.259" level="INFO">VALUE: [2.168099999999909e-05, 2.237500000000156e-05, 2.218099999999959e-05, 2.236100000000199e-05, 2.231899999999981e-05, 2.2180000000000116e-05, 2.2319999999999285e-05, 2.2348000000001894e-05, 2.238900000000113e-05, 2.216700000000002e-05, 2.2235999999998396e-05, 2.1429999999999366e-05, 2.231899999999981e-05, 2.237500000000156e-05, 2.2222000000002295e-05, 2.2290999999997202e-05, 2.233299999999938e-05, 2.2193999999999686e-05, 2.1429999999999366e-05, 2.2166000000000546e-05, 2.2180000000000116e-05, 2.233300000000285e-05, 2.2221999999998826e-05, 2.2152000000000976e-05, 2.2250000000001435e-05, 2.2180000000000116e-05, 2.2180000000000116e-05, 2.2207999999999256e-05, 2.213900000000088e-05, 2.241700000000027e-05, 2.238900000000113e-05, 2.2278000000000575e-05, 2.213899999999741e-05, 2.2277999999997106e-05, 2.2249999999997966e-05, 2.24030000000007e-05, 2.2278000000000575e-05, 2.2250000000001435e-05, 2.151300000000078e-05, 2.141700000000274e-05, 2.2222000000002295e-05, 2.2319999999999285e-05, 2.2249999999997966e-05, 2.236099999999852e-05, 2.231899999999981e-05, 2.218099999999959e-05, 2.2305999999999715e-05, 2.24030000000007e-05, 2.2221999999998826e-05, 2.2235999999998396e-05]</msg>
<status status="PASS" starttime="20201030 18:31:40.258" endtime="20201030 18:31:40.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.252" endtime="20201030 18:31:40.262"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:40.265" endtime="20201030 18:31:40.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.264" endtime="20201030 18:31:40.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.263" endtime="20201030 18:31:40.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.900" endtime="20201030 18:31:40.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.900" endtime="20201030 18:31:40.286"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.295" endtime="20201030 18:31:40.311"></status>
</kw>
<msg timestamp="20201030 18:31:40.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:40.293" endtime="20201030 18:31:40.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:40.313" endtime="20201030 18:31:40.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.315" endtime="20201030 18:31:40.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.291" endtime="20201030 18:31:40.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.288" endtime="20201030 18:31:40.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.324" endtime="20201030 18:31:40.627"></status>
</kw>
<msg timestamp="20201030 18:31:40.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022211819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0222335, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:40.323" endtime="20201030 18:31:40.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022211819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0222335, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:40.638" endtime="20201030 18:31:40.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.656" endtime="20201030 18:31:40.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.320" endtime="20201030 18:31:40.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.318" endtime="20201030 18:31:40.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:40.668" level="INFO">${RESULT} = [{'diff': 2.168099999999909e-05}, {'diff': 2.2207999999999256e-05}, {'diff': 2.2193999999999686e-05}, {'diff': 2.2235999999998396e-05}, {'diff': 2.2292000000000145e-05}, {'diff': 2.231899999999981e-05...</msg>
<status status="PASS" starttime="20201030 18:31:40.664" endtime="20201030 18:31:40.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:40.674" level="INFO">${ACCURACY} = {'diff': [2.168099999999909e-05, 2.2207999999999256e-05, 2.2193999999999686e-05, 2.2235999999998396e-05, 2.2292000000000145e-05, 2.231899999999981e-05, 2.2292000000000145e-05, 2.22229999999983e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:31:40.669" endtime="20201030 18:31:40.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.679" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 18:31:40.678" endtime="20201030 18:31:40.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.682" level="INFO">VALUE: [2.168099999999909e-05, 2.2207999999999256e-05, 2.2193999999999686e-05, 2.2235999999998396e-05, 2.2292000000000145e-05, 2.231899999999981e-05, 2.2292000000000145e-05, 2.22229999999983e-05, 2.237500000000156e-05, 2.2249999999997966e-05, 2.216700000000002e-05, 2.2250000000001435e-05, 2.2333999999998855e-05, 2.215300000000045e-05, 2.144500000000188e-05, 2.24030000000007e-05, 2.241700000000027e-05, 2.244499999999941e-05, 2.2347999999998425e-05, 2.237500000000156e-05, 2.222300000000177e-05, 2.2249999999997966e-05, 2.215300000000045e-05, 2.215300000000045e-05, 2.2305999999999715e-05, 2.2250000000001435e-05, 2.2305999999999715e-05, 2.2207999999999256e-05, 2.212500000000131e-05, 2.219500000000263e-05, 2.2098000000001644e-05, 2.2347999999998425e-05, 2.2278000000000575e-05, 2.22229999999983e-05, 2.222300000000177e-05, 2.141699999999927e-05, 2.236100000000199e-05, 2.2249999999997966e-05, 2.2193999999999686e-05, 2.2221999999998826e-05, 2.2180000000000116e-05, 2.1415999999999796e-05, 2.209700000000217e-05, 2.233300000000285e-05, 2.2221999999998826e-05, 2.2151999999997507e-05, 2.229100000000067e-05, 2.238900000000113e-05, 2.244499999999941e-05, 2.2165999999997077e-05]</msg>
<status status="PASS" starttime="20201030 18:31:40.680" endtime="20201030 18:31:40.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.675" endtime="20201030 18:31:40.684"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:40.689" endtime="20201030 18:31:40.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.687" endtime="20201030 18:31:40.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.685" endtime="20201030 18:31:40.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.287" endtime="20201030 18:31:40.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.286" endtime="20201030 18:31:40.710"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.719" endtime="20201030 18:31:40.734"></status>
</kw>
<msg timestamp="20201030 18:31:40.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:40.717" endtime="20201030 18:31:40.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:40.735" endtime="20201030 18:31:40.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.738" endtime="20201030 18:31:40.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.715" endtime="20201030 18:31:40.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.712" endtime="20201030 18:31:40.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.747" endtime="20201030 18:31:41.034"></status>
</kw>
<msg timestamp="20201030 18:31:41.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021907806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021929667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:40.745" endtime="20201030 18:31:41.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021907806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021929667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:41.039" endtime="20201030 18:31:41.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.049" endtime="20201030 18:31:41.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.742" endtime="20201030 18:31:41.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.741" endtime="20201030 18:31:41.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:41.056" level="INFO">${RESULT} = [{'diff': 2.186100000000149e-05}, {'diff': 2.2305999999999715e-05}, {'diff': 2.2235999999998396e-05}, {'diff': 2.2348000000001894e-05}, {'diff': 2.2249999999997966e-05}, {'diff': 2.238899999999766e-05...</msg>
<status status="PASS" starttime="20201030 18:31:41.052" endtime="20201030 18:31:41.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:41.060" level="INFO">${ACCURACY} = {'diff': [2.186100000000149e-05, 2.2305999999999715e-05, 2.2235999999998396e-05, 2.2348000000001894e-05, 2.2249999999997966e-05, 2.238899999999766e-05, 2.2416000000000796e-05, 2.2306000000003184e-05, ...</msg>
<status status="PASS" starttime="20201030 18:31:41.057" endtime="20201030 18:31:41.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.064" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 18:31:41.063" endtime="20201030 18:31:41.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.067" level="INFO">VALUE: [2.186100000000149e-05, 2.2305999999999715e-05, 2.2235999999998396e-05, 2.2348000000001894e-05, 2.2249999999997966e-05, 2.238899999999766e-05, 2.2416000000000796e-05, 2.2306000000003184e-05, 2.2347999999998425e-05, 2.218099999999959e-05, 2.216700000000002e-05, 2.238900000000113e-05, 2.236100000000199e-05, 2.143100000000231e-05, 2.2250000000001435e-05, 2.2249999999997966e-05, 2.2333999999998855e-05, 2.141699999999927e-05, 2.215300000000045e-05, 2.234699999999895e-05, 2.2194000000003156e-05, 2.2137999999997937e-05, 2.2166000000000546e-05, 2.226300000000153e-05, 2.231899999999981e-05, 2.1415999999999796e-05, 2.2207999999999256e-05, 2.24030000000007e-05, 2.2277999999997106e-05, 2.241700000000027e-05, 2.1500000000000685e-05, 2.2166000000000546e-05, 2.236100000000199e-05, 2.1429999999999366e-05, 2.2250000000001435e-05, 2.14029999999997e-05, 2.237500000000156e-05, 2.2235999999998396e-05, 2.2235999999998396e-05, 2.2235999999998396e-05, 2.236099999999852e-05, 2.2292000000000145e-05, 2.2222000000002295e-05, 2.237499999999809e-05, 2.230500000000024e-05, 2.2221999999998826e-05, 2.238900000000113e-05, 2.145899999999798e-05, 2.2278000000000575e-05, 2.215300000000045e-05]</msg>
<status status="PASS" starttime="20201030 18:31:41.066" endtime="20201030 18:31:41.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.061" endtime="20201030 18:31:41.072"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:41.076" endtime="20201030 18:31:41.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.075" endtime="20201030 18:31:41.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.074" endtime="20201030 18:31:41.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.711" endtime="20201030 18:31:41.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.710" endtime="20201030 18:31:41.097"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.106" endtime="20201030 18:31:41.122"></status>
</kw>
<msg timestamp="20201030 18:31:41.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:41.104" endtime="20201030 18:31:41.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:41.123" endtime="20201030 18:31:41.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.126" endtime="20201030 18:31:41.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.102" endtime="20201030 18:31:41.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.099" endtime="20201030 18:31:41.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.135" endtime="20201030 18:31:41.454"></status>
</kw>
<msg timestamp="20201030 18:31:41.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023191708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023213792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:41.134" endtime="20201030 18:31:41.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023191708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023213792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:41.463" endtime="20201030 18:31:41.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.479" endtime="20201030 18:31:41.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.131" endtime="20201030 18:31:41.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.129" endtime="20201030 18:31:41.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:41.486" level="INFO">${RESULT} = [{'diff': 2.2084000000002074e-05}, {'diff': 2.2180000000000116e-05}, {'diff': 2.2250000000001435e-05}, {'diff': 2.218099999999959e-05}, {'diff': 2.215300000000045e-05}, {'diff': 2.141699999999927e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:41.482" endtime="20201030 18:31:41.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:41.490" level="INFO">${ACCURACY} = {'diff': [2.2084000000002074e-05, 2.2180000000000116e-05, 2.2250000000001435e-05, 2.218099999999959e-05, 2.215300000000045e-05, 2.141699999999927e-05, 2.229100000000067e-05, 2.229100000000067e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 18:31:41.487" endtime="20201030 18:31:41.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.494" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 18:31:41.493" endtime="20201030 18:31:41.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.497" level="INFO">VALUE: [2.2084000000002074e-05, 2.2180000000000116e-05, 2.2250000000001435e-05, 2.218099999999959e-05, 2.215300000000045e-05, 2.141699999999927e-05, 2.229100000000067e-05, 2.229100000000067e-05, 2.237500000000156e-05, 2.22229999999983e-05, 2.237499999999809e-05, 2.219499999999916e-05, 2.2264000000001005e-05, 2.2208000000002726e-05, 2.2221999999998826e-05, 2.2235999999998396e-05, 2.234699999999895e-05, 2.1415999999999796e-05, 2.2193999999999686e-05, 2.209700000000217e-05, 2.230500000000024e-05, 2.2193999999999686e-05, 2.2264000000001005e-05, 2.231899999999981e-05, 2.233299999999938e-05, 2.2152000000000976e-05, 2.2166000000000546e-05, 2.230500000000024e-05, 2.218099999999959e-05, 2.233299999999938e-05, 2.1415999999999796e-05, 2.237500000000156e-05, 2.231899999999981e-05, 2.2250000000001435e-05, 2.233299999999938e-05, 2.2193999999999686e-05, 2.2278000000000575e-05, 2.231899999999981e-05, 2.234699999999895e-05, 2.233299999999938e-05, 2.215300000000045e-05, 2.234700000000242e-05, 2.237500000000156e-05, 2.236099999999852e-05, 2.2207999999999256e-05, 2.241700000000027e-05, 2.236100000000199e-05, 2.236100000000199e-05, 2.2362000000001464e-05, 2.2207999999999256e-05]</msg>
<status status="PASS" starttime="20201030 18:31:41.496" endtime="20201030 18:31:41.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.491" endtime="20201030 18:31:41.499"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:41.503" endtime="20201030 18:31:41.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.501" endtime="20201030 18:31:41.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.500" endtime="20201030 18:31:41.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.098" endtime="20201030 18:31:41.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.097" endtime="20201030 18:31:41.524"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.532" endtime="20201030 18:31:41.547"></status>
</kw>
<msg timestamp="20201030 18:31:41.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:41.531" endtime="20201030 18:31:41.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:41.549" endtime="20201030 18:31:41.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.551" endtime="20201030 18:31:41.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.528" endtime="20201030 18:31:41.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.526" endtime="20201030 18:31:41.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.561" endtime="20201030 18:31:41.847"></status>
</kw>
<msg timestamp="20201030 18:31:41.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022276181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022297792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:41.559" endtime="20201030 18:31:41.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022276181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022297792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:41.851" endtime="20201030 18:31:41.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.860" endtime="20201030 18:31:41.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.556" endtime="20201030 18:31:41.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.555" endtime="20201030 18:31:41.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:41.866" level="INFO">${RESULT} = [{'diff': 2.161100000000124e-05}, {'diff': 2.2070000000002504e-05}, {'diff': 2.2263999999997536e-05}, {'diff': 2.2292000000000145e-05}, {'diff': 2.236100000000199e-05}, {'diff': 2.24030000000007e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:41.863" endtime="20201030 18:31:41.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:41.871" level="INFO">${ACCURACY} = {'diff': [2.161100000000124e-05, 2.2070000000002504e-05, 2.2263999999997536e-05, 2.2292000000000145e-05, 2.236100000000199e-05, 2.24030000000007e-05, 2.2235999999998396e-05, 2.2263999999997536e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:31:41.867" endtime="20201030 18:31:41.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.876" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 18:31:41.875" endtime="20201030 18:31:41.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.878" level="INFO">VALUE: [2.161100000000124e-05, 2.2070000000002504e-05, 2.2263999999997536e-05, 2.2292000000000145e-05, 2.236100000000199e-05, 2.24030000000007e-05, 2.2235999999998396e-05, 2.2263999999997536e-05, 2.237499999999809e-05, 2.2415999999997327e-05, 2.230500000000024e-05, 2.2264000000001005e-05, 2.211099999999827e-05, 2.2235999999998396e-05, 2.213900000000088e-05, 2.2264000000001005e-05, 2.2278000000000575e-05, 2.2319999999999285e-05, 2.2319999999999285e-05, 2.238900000000113e-05, 2.238900000000113e-05, 2.238900000000113e-05, 2.236100000000199e-05, 2.140300000000317e-05, 2.2305999999999715e-05, 2.213900000000088e-05, 2.2305999999999715e-05, 2.2166000000000546e-05, 2.241700000000027e-05, 2.231899999999981e-05, 2.22770000000011e-05, 2.2221999999998826e-05, 2.2180000000000116e-05, 2.233299999999938e-05, 2.231899999999981e-05, 2.2387999999998187e-05, 2.2305999999999715e-05, 2.236100000000199e-05, 2.215300000000045e-05, 2.2263999999997536e-05, 2.2193999999999686e-05, 2.213900000000088e-05, 2.238900000000113e-05, 2.231900000000328e-05, 2.2151999999997507e-05, 2.231899999999981e-05, 2.233299999999938e-05, 2.215300000000045e-05, 2.2207999999999256e-05, 2.234700000000242e-05]</msg>
<status status="PASS" starttime="20201030 18:31:41.877" endtime="20201030 18:31:41.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.872" endtime="20201030 18:31:41.880"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:41.883" endtime="20201030 18:31:41.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.882" endtime="20201030 18:31:41.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.881" endtime="20201030 18:31:41.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.524" endtime="20201030 18:31:41.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.524" endtime="20201030 18:31:41.905"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.916" endtime="20201030 18:31:41.932"></status>
</kw>
<msg timestamp="20201030 18:31:41.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:41.913" endtime="20201030 18:31:41.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:41.934" endtime="20201030 18:31:41.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.936" endtime="20201030 18:31:41.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.911" endtime="20201030 18:31:41.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.908" endtime="20201030 18:31:41.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.945" endtime="20201030 18:31:42.232"></status>
</kw>
<msg timestamp="20201030 18:31:42.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026065958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026088556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:41.944" endtime="20201030 18:31:42.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026065958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026088556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:42.236" endtime="20201030 18:31:42.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.244" endtime="20201030 18:31:42.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.941" endtime="20201030 18:31:42.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.939" endtime="20201030 18:31:42.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:42.251" level="INFO">${RESULT} = [{'diff': 2.2597999999998675e-05}, {'diff': 2.3292000000001145e-05}, {'diff': 2.320899999999973e-05}, {'diff': 2.3347999999999425e-05}, {'diff': 2.340299999999823e-05}, {'diff': 2.3194000000000686e-05...</msg>
<status status="PASS" starttime="20201030 18:31:42.248" endtime="20201030 18:31:42.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:42.255" level="INFO">${ACCURACY} = {'diff': [2.2597999999998675e-05, 2.3292000000001145e-05, 2.320899999999973e-05, 2.3347999999999425e-05, 2.340299999999823e-05, 2.3194000000000686e-05, 2.338899999999866e-05, 2.3429999999997897e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:31:42.252" endtime="20201030 18:31:42.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.260" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 18:31:42.259" endtime="20201030 18:31:42.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.262" level="INFO">VALUE: [2.2597999999998675e-05, 2.3292000000001145e-05, 2.320899999999973e-05, 2.3347999999999425e-05, 2.340299999999823e-05, 2.3194000000000686e-05, 2.338899999999866e-05, 2.3429999999997897e-05, 2.337499999999909e-05, 2.329100000000167e-05, 2.3276999999998632e-05, 2.3278000000001575e-05, 2.320899999999973e-05, 2.330500000000124e-05, 2.3165999999998077e-05, 2.3194000000000686e-05, 2.3264000000002005e-05, 2.330500000000124e-05, 2.3402000000002227e-05, 2.3151999999998507e-05, 2.32770000000021e-05, 2.338899999999866e-05, 2.3208000000000256e-05, 2.3151999999998507e-05, 2.338900000000213e-05, 2.3221999999999826e-05, 2.330500000000124e-05, 2.330500000000124e-05, 2.336099999999952e-05, 2.337499999999909e-05, 2.316700000000102e-05, 2.338899999999866e-05, 2.3180000000001116e-05, 2.3221999999999826e-05, 2.318100000000059e-05, 2.334699999999995e-05, 2.336099999999952e-05, 2.315299999999798e-05, 2.34030000000017e-05, 2.334699999999995e-05, 2.315300000000145e-05, 2.3263999999998536e-05, 2.338899999999866e-05, 2.331900000000081e-05, 2.243099999999984e-05, 2.32229999999993e-05, 2.24030000000007e-05, 2.336099999999952e-05, 2.3235999999999396e-05, 2.338899999999866e-05]</msg>
<status status="PASS" starttime="20201030 18:31:42.261" endtime="20201030 18:31:42.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.256" endtime="20201030 18:31:42.264"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:42.267" endtime="20201030 18:31:42.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.266" endtime="20201030 18:31:42.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.265" endtime="20201030 18:31:42.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.906" endtime="20201030 18:31:42.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.905" endtime="20201030 18:31:42.288"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.297" endtime="20201030 18:31:42.313"></status>
</kw>
<msg timestamp="20201030 18:31:42.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.296" endtime="20201030 18:31:42.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.315" endtime="20201030 18:31:42.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.317" endtime="20201030 18:31:42.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.293" endtime="20201030 18:31:42.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.291" endtime="20201030 18:31:42.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.327" endtime="20201030 18:31:42.613"></status>
</kw>
<msg timestamp="20201030 18:31:42.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023740833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023764653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:42.325" endtime="20201030 18:31:42.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023740833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023764653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:42.617" endtime="20201030 18:31:42.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.626" endtime="20201030 18:31:42.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.322" endtime="20201030 18:31:42.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.321" endtime="20201030 18:31:42.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:42.632" level="INFO">${RESULT} = [{'diff': 2.3820000000000785e-05}, {'diff': 2.44169999999988e-05}, {'diff': 2.438899999999966e-05}, {'diff': 2.4332999999997912e-05}, {'diff': 2.4292000000002145e-05}, {'diff': 2.434700000000095e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:42.629" endtime="20201030 18:31:42.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:42.637" level="INFO">${ACCURACY} = {'diff': [2.3820000000000785e-05, 2.44169999999988e-05, 2.438899999999966e-05, 2.4332999999997912e-05, 2.4292000000002145e-05, 2.434700000000095e-05, 2.420900000000073e-05, 2.436100000000052e-05, 2.42...</msg>
<status status="PASS" starttime="20201030 18:31:42.633" endtime="20201030 18:31:42.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.641" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 18:31:42.640" endtime="20201030 18:31:42.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.644" level="INFO">VALUE: [2.3820000000000785e-05, 2.44169999999988e-05, 2.438899999999966e-05, 2.4332999999997912e-05, 2.4292000000002145e-05, 2.434700000000095e-05, 2.420900000000073e-05, 2.436100000000052e-05, 2.4222000000000826e-05, 2.418100000000159e-05, 2.418099999999812e-05, 2.416699999999855e-05, 2.416700000000202e-05, 2.436100000000052e-05, 2.4291999999998676e-05, 2.420899999999726e-05, 2.441700000000227e-05, 2.415300000000245e-05, 2.344499999999694e-05, 2.430500000000224e-05, 2.440299999999923e-05, 2.4277999999999106e-05, 2.4222000000000826e-05, 2.4277999999999106e-05, 2.4306000000001715e-05, 2.337499999999909e-05, 2.4333999999997385e-05, 2.415300000000245e-05, 2.4388000000000187e-05, 2.4263999999999536e-05, 2.4151999999999507e-05, 2.4235999999996927e-05, 2.4249999999999966e-05, 2.3443999999997467e-05, 2.4151999999999507e-05, 2.4249999999999966e-05, 2.4194000000001686e-05, 2.4165999999999077e-05, 2.437500000000009e-05, 2.413899999999941e-05, 2.4290999999999202e-05, 2.4318999999998342e-05, 2.4179999999998647e-05, 2.4348000000000425e-05, 2.4443999999998467e-05, 2.4208000000001256e-05, 2.4304999999998772e-05, 2.4292000000002145e-05, 2.4249999999999966e-05, 2.434700000000095e-05]</msg>
<status status="PASS" starttime="20201030 18:31:42.642" endtime="20201030 18:31:42.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.637" endtime="20201030 18:31:42.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:42.650" endtime="20201030 18:31:42.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.648" endtime="20201030 18:31:42.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.647" endtime="20201030 18:31:42.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.289" endtime="20201030 18:31:42.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.289" endtime="20201030 18:31:42.670"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.679" endtime="20201030 18:31:42.694"></status>
</kw>
<msg timestamp="20201030 18:31:42.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.677" endtime="20201030 18:31:42.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.696" endtime="20201030 18:31:42.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.698" endtime="20201030 18:31:42.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.675" endtime="20201030 18:31:42.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.673" endtime="20201030 18:31:42.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.707" endtime="20201030 18:31:42.993"></status>
</kw>
<msg timestamp="20201030 18:31:42.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022120667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022145903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:42.706" endtime="20201030 18:31:42.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022120667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022145903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:42.998" endtime="20201030 18:31:43.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.006" endtime="20201030 18:31:43.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.703" endtime="20201030 18:31:43.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.701" endtime="20201030 18:31:43.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:43.013" level="INFO">${RESULT} = [{'diff': 2.5236000000001396e-05}, {'diff': 2.5249999999997497e-05}, {'diff': 2.538900000000066e-05}, {'diff': 2.518099999999912e-05}, {'diff': 2.537499999999762e-05}, {'diff': 2.5235999999997927e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:43.009" endtime="20201030 18:31:43.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:43.018" level="INFO">${ACCURACY} = {'diff': [2.5236000000001396e-05, 2.5249999999997497e-05, 2.538900000000066e-05, 2.518099999999912e-05, 2.537499999999762e-05, 2.5235999999997927e-05, 2.5263999999997067e-05, 2.5083999999998136e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:31:43.014" endtime="20201030 18:31:43.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.022" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 18:31:43.021" endtime="20201030 18:31:43.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.025" level="INFO">VALUE: [2.5236000000001396e-05, 2.5249999999997497e-05, 2.538900000000066e-05, 2.518099999999912e-05, 2.537499999999762e-05, 2.5235999999997927e-05, 2.5263999999997067e-05, 2.5083999999998136e-05, 2.52230000000013e-05, 2.523700000000087e-05, 2.5305999999999246e-05, 2.5291000000000202e-05, 2.5319999999998816e-05, 2.5318999999999342e-05, 2.520900000000173e-05, 2.5263000000001062e-05, 2.5166000000000077e-05, 2.5222000000001826e-05, 2.5179999999999647e-05, 2.5236000000001396e-05, 2.5332999999998912e-05, 2.537499999999762e-05, 2.4402000000003227e-05, 2.5277000000000632e-05, 2.5249999999997497e-05, 2.513899999999694e-05, 2.538899999999719e-05, 2.5291000000000202e-05, 2.538899999999719e-05, 2.5221999999998357e-05, 2.5278000000000106e-05, 2.5332999999998912e-05, 2.5264000000000536e-05, 2.5166000000000077e-05, 2.5222000000001826e-05, 2.537500000000109e-05, 2.5193999999999217e-05, 2.518099999999912e-05, 2.5236000000001396e-05, 2.5291999999999676e-05, 2.5222000000001826e-05, 2.538900000000066e-05, 2.516699999999955e-05, 2.537499999999762e-05, 2.519499999999869e-05, 2.4500000000000216e-05, 2.5208000000002256e-05, 2.515299999999998e-05, 2.5263999999997067e-05, 2.5291999999999676e-05]</msg>
<status status="PASS" starttime="20201030 18:31:43.023" endtime="20201030 18:31:43.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.019" endtime="20201030 18:31:43.026"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:43.030" endtime="20201030 18:31:43.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.028" endtime="20201030 18:31:43.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.027" endtime="20201030 18:31:43.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.671" endtime="20201030 18:31:43.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.671" endtime="20201030 18:31:43.051"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.060" endtime="20201030 18:31:43.075"></status>
</kw>
<msg timestamp="20201030 18:31:43.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.058" endtime="20201030 18:31:43.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.076" endtime="20201030 18:31:43.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.079" endtime="20201030 18:31:43.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.055" endtime="20201030 18:31:43.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.053" endtime="20201030 18:31:43.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.088" endtime="20201030 18:31:43.376"></status>
</kw>
<msg timestamp="20201030 18:31:43.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022127181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022152903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:43.087" endtime="20201030 18:31:43.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022127181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022152903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:43.380" endtime="20201030 18:31:43.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.388" endtime="20201030 18:31:43.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.084" endtime="20201030 18:31:43.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.082" endtime="20201030 18:31:43.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:43.395" level="INFO">${RESULT} = [{'diff': 2.5722000000002326e-05}, {'diff': 2.6306000000000246e-05}, {'diff': 2.6374999999998622e-05}, {'diff': 2.6305999999996776e-05}, {'diff': 2.6276999999998163e-05}, {'diff': 2.613900000000141e-0...</msg>
<status status="PASS" starttime="20201030 18:31:43.392" endtime="20201030 18:31:43.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:43.399" level="INFO">${ACCURACY} = {'diff': [2.5722000000002326e-05, 2.6306000000000246e-05, 2.6374999999998622e-05, 2.6305999999996776e-05, 2.6276999999998163e-05, 2.613900000000141e-05, 2.6471999999999607e-05, 2.6306000000000246e-05,...</msg>
<status status="PASS" starttime="20201030 18:31:43.396" endtime="20201030 18:31:43.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.404" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 18:31:43.403" endtime="20201030 18:31:43.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.406" level="INFO">VALUE: [2.5722000000002326e-05, 2.6306000000000246e-05, 2.6374999999998622e-05, 2.6305999999996776e-05, 2.6276999999998163e-05, 2.613900000000141e-05, 2.6471999999999607e-05, 2.6306000000000246e-05, 2.6346999999999482e-05, 2.6222000000002826e-05, 2.6347999999998956e-05, 2.615300000000098e-05, 2.62369999999984e-05, 2.6361999999998526e-05, 2.613900000000141e-05, 2.6194000000000217e-05, 2.6319999999999816e-05, 2.54169999999998e-05, 2.6250000000001966e-05, 2.616700000000055e-05, 2.5443999999999467e-05, 2.5429999999999897e-05, 2.638900000000166e-05, 2.6304999999997303e-05, 2.5416000000000327e-05, 2.6360999999999052e-05, 2.638900000000166e-05, 2.6194000000000217e-05, 2.6194000000000217e-05, 2.6250000000001966e-05, 2.6319000000000342e-05, 2.6416000000001327e-05, 2.6152000000001507e-05, 2.638899999999819e-05, 2.6194000000000217e-05, 2.6235999999998927e-05, 2.6346999999999482e-05, 2.615300000000098e-05, 2.6332999999999912e-05, 2.6263999999998067e-05, 2.5429999999999897e-05, 2.616700000000055e-05, 2.6318999999996873e-05, 2.645899999999951e-05, 2.6332999999999912e-05, 2.6318999999996873e-05, 2.6374999999998622e-05, 2.616700000000055e-05, 2.6278000000001106e-05, 2.6207999999999787e-05]</msg>
<status status="PASS" starttime="20201030 18:31:43.405" endtime="20201030 18:31:43.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.400" endtime="20201030 18:31:43.408"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:43.411" endtime="20201030 18:31:43.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.410" endtime="20201030 18:31:43.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.409" endtime="20201030 18:31:43.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.052" endtime="20201030 18:31:43.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.051" endtime="20201030 18:31:43.432"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.441" endtime="20201030 18:31:43.459"></status>
</kw>
<msg timestamp="20201030 18:31:43.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.439" endtime="20201030 18:31:43.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.461" endtime="20201030 18:31:43.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.463" endtime="20201030 18:31:43.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.437" endtime="20201030 18:31:43.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.435" endtime="20201030 18:31:43.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.472" endtime="20201030 18:31:43.758"></status>
</kw>
<msg timestamp="20201030 18:31:43.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025676778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025704014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:43.471" endtime="20201030 18:31:43.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025676778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025704014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:43.762" endtime="20201030 18:31:43.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.771" endtime="20201030 18:31:43.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.468" endtime="20201030 18:31:43.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.467" endtime="20201030 18:31:43.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:43.777" level="INFO">${RESULT} = [{'diff': 2.7235999999999927e-05}, {'diff': 2.7305999999997776e-05}, {'diff': 2.741699999999833e-05}, {'diff': 2.740300000000223e-05}, {'diff': 2.716699999999808e-05}, {'diff': 2.713900000000241e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:43.774" endtime="20201030 18:31:43.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:43.781" level="INFO">${ACCURACY} = {'diff': [2.7235999999999927e-05, 2.7305999999997776e-05, 2.741699999999833e-05, 2.740300000000223e-05, 2.716699999999808e-05, 2.713900000000241e-05, 2.719500000000069e-05, 2.720900000000026e-05, 2.73...</msg>
<status status="PASS" starttime="20201030 18:31:43.778" endtime="20201030 18:31:43.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.786" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 18:31:43.785" endtime="20201030 18:31:43.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.788" level="INFO">VALUE: [2.7235999999999927e-05, 2.7305999999997776e-05, 2.741699999999833e-05, 2.740300000000223e-05, 2.716699999999808e-05, 2.713900000000241e-05, 2.719500000000069e-05, 2.720900000000026e-05, 2.7361000000000052e-05, 2.740299999999876e-05, 2.7084000000000136e-05, 2.716700000000155e-05, 2.720900000000026e-05, 2.7347999999999956e-05, 2.7138999999998942e-05, 2.7443999999997998e-05, 2.718100000000112e-05, 2.722299999999983e-05, 2.7264000000002536e-05, 2.7347999999999956e-05, 2.7318999999997873e-05, 2.738900000000266e-05, 2.715300000000198e-05, 2.7291999999998207e-05, 2.640300000000123e-05, 2.7332999999997443e-05, 2.7361000000000052e-05, 2.7401999999999288e-05, 2.7401999999999288e-05, 2.7361000000000052e-05, 2.7388999999999192e-05, 2.7292000000001676e-05, 2.7291000000002202e-05, 2.7222000000000357e-05, 2.7361000000000052e-05, 2.7304999999998303e-05, 2.7222000000000357e-05, 2.7166000000002077e-05, 2.741699999999833e-05, 2.7264000000002536e-05, 2.7388999999999192e-05, 2.7347000000000482e-05, 2.7263999999999067e-05, 2.6430000000000897e-05, 2.7333000000000912e-05, 2.7222000000000357e-05, 2.7318999999997873e-05, 2.7194000000001217e-05, 2.7347000000000482e-05, 2.715299999999851e-05]</msg>
<status status="PASS" starttime="20201030 18:31:43.787" endtime="20201030 18:31:43.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.782" endtime="20201030 18:31:43.791"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:43.794" endtime="20201030 18:31:43.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.793" endtime="20201030 18:31:43.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.792" endtime="20201030 18:31:43.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.433" endtime="20201030 18:31:43.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.433" endtime="20201030 18:31:43.815"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.824" endtime="20201030 18:31:43.839"></status>
</kw>
<msg timestamp="20201030 18:31:43.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.822" endtime="20201030 18:31:43.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.841" endtime="20201030 18:31:43.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.843" endtime="20201030 18:31:43.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.820" endtime="20201030 18:31:43.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.818" endtime="20201030 18:31:43.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.853" endtime="20201030 18:31:44.138"></status>
</kw>
<msg timestamp="20201030 18:31:44.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021962708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021990583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:43.851" endtime="20201030 18:31:44.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021962708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021990583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:44.142" endtime="20201030 18:31:44.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.151" endtime="20201030 18:31:44.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.848" endtime="20201030 18:31:44.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.847" endtime="20201030 18:31:44.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:44.157" level="INFO">${RESULT} = [{'diff': 2.7875000000000122e-05}, {'diff': 2.8402999999999762e-05}, {'diff': 2.8333999999997916e-05}, {'diff': 2.8361000000001052e-05}, {'diff': 2.8332999999998443e-05}, {'diff': 2.8207999999998318e-...</msg>
<status status="PASS" starttime="20201030 18:31:44.154" endtime="20201030 18:31:44.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:44.162" level="INFO">${ACCURACY} = {'diff': [2.7875000000000122e-05, 2.8402999999999762e-05, 2.8333999999997916e-05, 2.8361000000001052e-05, 2.8332999999998443e-05, 2.8207999999998318e-05, 2.8304999999999303e-05, 2.8304999999999303e-05...</msg>
<status status="PASS" starttime="20201030 18:31:44.158" endtime="20201030 18:31:44.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.167" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 18:31:44.166" endtime="20201030 18:31:44.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.169" level="INFO">VALUE: [2.7875000000000122e-05, 2.8402999999999762e-05, 2.8333999999997916e-05, 2.8361000000001052e-05, 2.8332999999998443e-05, 2.8207999999998318e-05, 2.8304999999999303e-05, 2.8304999999999303e-05, 2.8374999999997152e-05, 2.8138999999999942e-05, 2.8250000000000497e-05, 2.8222000000001357e-05, 2.8125000000000372e-05, 2.8291999999999207e-05, 2.8138999999999942e-05, 2.8332999999998443e-05, 2.8360999999997583e-05, 2.8360999999997583e-05, 2.8207999999998318e-05, 2.8334000000001386e-05, 2.74170000000018e-05, 2.8306000000002246e-05, 2.819500000000169e-05, 2.818099999999865e-05, 2.8375000000000622e-05, 2.8305999999998777e-05, 2.8277999999999637e-05, 2.8333999999997916e-05, 2.816699999999908e-05, 2.822300000000083e-05, 2.8375000000000622e-05, 2.8361000000001052e-05, 2.8236000000000927e-05, 2.74309999999979e-05, 2.8319999999998346e-05, 2.8347999999997486e-05, 2.8333999999997916e-05, 2.8334000000001386e-05, 2.8194000000002217e-05, 2.8334000000001386e-05, 2.8264000000000067e-05, 2.8334000000001386e-05, 2.8375000000000622e-05, 2.8290999999999733e-05, 2.8318999999998873e-05, 2.8277000000000163e-05, 2.8318999999998873e-05, 2.8207999999998318e-05, 2.8361000000001052e-05, 2.8250000000000497e-05]</msg>
<status status="PASS" starttime="20201030 18:31:44.168" endtime="20201030 18:31:44.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.163" endtime="20201030 18:31:44.170"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:44.174" endtime="20201030 18:31:44.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.173" endtime="20201030 18:31:44.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.171" endtime="20201030 18:31:44.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.816" endtime="20201030 18:31:44.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.815" endtime="20201030 18:31:44.195"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.203" endtime="20201030 18:31:44.218"></status>
</kw>
<msg timestamp="20201030 18:31:44.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.202" endtime="20201030 18:31:44.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.220" endtime="20201030 18:31:44.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.222" endtime="20201030 18:31:44.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.199" endtime="20201030 18:31:44.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.197" endtime="20201030 18:31:44.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.231" endtime="20201030 18:31:44.530"></status>
</kw>
<msg timestamp="20201030 18:31:44.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022038944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022068486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:44.230" endtime="20201030 18:31:44.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022038944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022068486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:44.535" endtime="20201030 18:31:44.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.543" endtime="20201030 18:31:44.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.227" endtime="20201030 18:31:44.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.225" endtime="20201030 18:31:44.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:44.549" level="INFO">${RESULT} = [{'diff': 2.9541999999996987e-05}, {'diff': 2.9333999999998916e-05}, {'diff': 2.9334000000002386e-05}, {'diff': 2.9277999999997167e-05}, {'diff': 2.9416000000000858e-05}, {'diff': 2.9235999999998458e-...</msg>
<status status="PASS" starttime="20201030 18:31:44.546" endtime="20201030 18:31:44.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:44.553" level="INFO">${ACCURACY} = {'diff': [2.9541999999996987e-05, 2.9333999999998916e-05, 2.9334000000002386e-05, 2.9277999999997167e-05, 2.9416000000000858e-05, 2.9235999999998458e-05, 2.8429999999999428e-05, 2.9277000000001163e-05...</msg>
<status status="PASS" starttime="20201030 18:31:44.550" endtime="20201030 18:31:44.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.558" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 18:31:44.557" endtime="20201030 18:31:44.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.560" level="INFO">VALUE: [2.9541999999996987e-05, 2.9333999999998916e-05, 2.9334000000002386e-05, 2.9277999999997167e-05, 2.9416000000000858e-05, 2.9235999999998458e-05, 2.8429999999999428e-05, 2.9277000000001163e-05, 2.9180000000000178e-05, 2.9193999999999748e-05, 2.9290999999997264e-05, 2.9277999999997167e-05, 2.9152000000001038e-05, 2.9389000000001192e-05, 2.9249999999998028e-05, 2.9318999999999873e-05, 2.9193999999999748e-05, 2.9278000000000637e-05, 2.9152000000001038e-05, 2.9264000000001067e-05, 2.8415999999999858e-05, 2.9153000000000512e-05, 2.9332999999999443e-05, 2.9374999999998153e-05, 2.9153000000000512e-05, 2.9346999999999013e-05, 2.9346999999999013e-05, 2.9305999999999777e-05, 2.9346999999999013e-05, 2.9208000000002787e-05, 2.9278000000000637e-05, 2.9235999999998458e-05, 2.9221999999998888e-05, 2.9193999999999748e-05, 2.9111000000001802e-05, 2.9318999999999873e-05, 2.9305999999999777e-05, 2.9389000000001192e-05, 2.9319999999999347e-05, 2.9167000000000082e-05, 2.9138999999997472e-05, 2.919499999999922e-05, 2.9360999999998583e-05, 2.94309999999999e-05, 2.9305999999999777e-05, 2.9374999999998153e-05, 2.9292000000000207e-05, 2.9250000000001497e-05, 2.841699999999933e-05, 2.9236000000001927e-05]</msg>
<status status="PASS" starttime="20201030 18:31:44.559" endtime="20201030 18:31:44.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.554" endtime="20201030 18:31:44.562"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:44.565" endtime="20201030 18:31:44.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.564" endtime="20201030 18:31:44.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.563" endtime="20201030 18:31:44.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.196" endtime="20201030 18:31:44.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.195" endtime="20201030 18:31:44.586"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.594" endtime="20201030 18:31:44.611"></status>
</kw>
<msg timestamp="20201030 18:31:44.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.593" endtime="20201030 18:31:44.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.613" endtime="20201030 18:31:44.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.615" endtime="20201030 18:31:44.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.590" endtime="20201030 18:31:44.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.588" endtime="20201030 18:31:44.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.624" endtime="20201030 18:31:44.910"></status>
</kw>
<msg timestamp="20201030 18:31:44.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022704097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022734597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:44.622" endtime="20201030 18:31:44.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022704097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022734597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:44.914" endtime="20201030 18:31:44.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.923" endtime="20201030 18:31:44.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.620" endtime="20201030 18:31:44.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.618" endtime="20201030 18:31:44.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:44.929" level="INFO">${RESULT} = [{'diff': 3.0499999999999278e-05}, {'diff': 3.0208000000000318e-05}, {'diff': 3.016599999999814e-05}, {'diff': 3.0221999999999888e-05}, {'diff': 3.0264000000002067e-05}, {'diff': 3.0402999999998293e-0...</msg>
<status status="PASS" starttime="20201030 18:31:44.926" endtime="20201030 18:31:44.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:44.933" level="INFO">${ACCURACY} = {'diff': [3.0499999999999278e-05, 3.0208000000000318e-05, 3.016599999999814e-05, 3.0221999999999888e-05, 3.0264000000002067e-05, 3.0402999999998293e-05, 3.0068999999997154e-05, 3.0194000000000748e-05,...</msg>
<status status="PASS" starttime="20201030 18:31:44.930" endtime="20201030 18:31:44.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.938" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 18:31:44.937" endtime="20201030 18:31:44.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.940" level="INFO">VALUE: [3.0499999999999278e-05, 3.0208000000000318e-05, 3.016599999999814e-05, 3.0221999999999888e-05, 3.0264000000002067e-05, 3.0402999999998293e-05, 3.0068999999997154e-05, 3.0194000000000748e-05, 3.0375000000002622e-05, 3.020899999999979e-05, 3.0416999999997862e-05, 3.0152999999998042e-05, 3.0250000000002497e-05, 3.0221999999999888e-05, 3.0347000000000013e-05, 3.0360999999999583e-05, 3.0360999999999583e-05, 3.0208000000000318e-05, 3.0403000000001762e-05, 3.0235999999999458e-05, 3.0333999999999917e-05, 3.0306000000000777e-05, 3.0236000000002927e-05, 3.0318999999997404e-05, 3.0181000000000652e-05, 3.023699999999893e-05, 3.0360999999999583e-05, 3.0181000000000652e-05, 3.0153000000001512e-05, 3.0402999999998293e-05, 3.0403000000001762e-05, 3.0347999999999486e-05, 3.0208000000000318e-05, 3.0388999999998723e-05, 3.0292000000001207e-05, 3.015199999999857e-05, 3.0306000000000777e-05, 3.0208000000000318e-05, 3.0333000000000443e-05, 3.017999999999771e-05, 3.038800000000272e-05, 3.0263999999998598e-05, 3.0221999999999888e-05, 3.0318999999997404e-05, 3.0221999999999888e-05, 3.0180000000001178e-05, 3.0180000000001178e-05, 3.0374999999999153e-05, 3.0250000000002497e-05, 3.0221999999999888e-05]</msg>
<status status="PASS" starttime="20201030 18:31:44.939" endtime="20201030 18:31:44.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.934" endtime="20201030 18:31:44.942"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:44.946" endtime="20201030 18:31:44.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.944" endtime="20201030 18:31:44.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.943" endtime="20201030 18:31:44.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.587" endtime="20201030 18:31:44.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.586" endtime="20201030 18:31:44.967"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.975" endtime="20201030 18:31:44.990"></status>
</kw>
<msg timestamp="20201030 18:31:44.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.974" endtime="20201030 18:31:44.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.992" endtime="20201030 18:31:44.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.994" endtime="20201030 18:31:44.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.971" endtime="20201030 18:31:44.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.969" endtime="20201030 18:31:44.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.003" endtime="20201030 18:31:45.289"></status>
</kw>
<msg timestamp="20201030 18:31:45.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022145958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022176514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:45.002" endtime="20201030 18:31:45.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022145958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022176514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:45.293" endtime="20201030 18:31:45.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.301" endtime="20201030 18:31:45.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.999" endtime="20201030 18:31:45.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.998" endtime="20201030 18:31:45.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:45.308" level="INFO">${RESULT} = [{'diff': 3.055600000000103e-05}, {'diff': 3.117999999999871e-05}, {'diff': 3.0402000000002288e-05}, {'diff': 3.1346999999997543e-05}, {'diff': 3.1346999999997543e-05}, {'diff': 3.118000000000218e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:45.305" endtime="20201030 18:31:45.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:45.313" level="INFO">${ACCURACY} = {'diff': [3.055600000000103e-05, 3.117999999999871e-05, 3.0402000000002288e-05, 3.1346999999997543e-05, 3.1346999999997543e-05, 3.118000000000218e-05, 3.1444999999998e-05, 3.115299999999904e-05, 3.136...</msg>
<status status="PASS" starttime="20201030 18:31:45.309" endtime="20201030 18:31:45.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.318" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 18:31:45.317" endtime="20201030 18:31:45.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.320" level="INFO">VALUE: [3.055600000000103e-05, 3.117999999999871e-05, 3.0402000000002288e-05, 3.1346999999997543e-05, 3.1346999999997543e-05, 3.118000000000218e-05, 3.1444999999998e-05, 3.115299999999904e-05, 3.136100000000058e-05, 3.0430000000001428e-05, 3.136100000000058e-05, 3.113899999999947e-05, 3.113899999999947e-05, 3.113900000000294e-05, 3.143099999999843e-05, 3.120800000000132e-05, 3.1346999999997543e-05, 3.122199999999742e-05, 3.11249999999999e-05, 3.125000000000003e-05, 3.118099999999818e-05, 3.123599999999699e-05, 3.130600000000178e-05, 3.118100000000165e-05, 3.0485999999999708e-05, 3.115299999999904e-05, 3.137500000000015e-05, 3.133400000000092e-05, 3.138899999999972e-05, 3.125000000000003e-05, 3.116700000000208e-05, 3.138899999999972e-05, 3.127799999999917e-05, 3.119499999999775e-05, 3.1362000000000056e-05, 3.123600000000046e-05, 3.116699999999861e-05, 3.134700000000101e-05, 3.138899999999972e-05, 3.127800000000264e-05, 3.1138e-05, 3.126400000000307e-05, 3.140199999999982e-05, 3.119399999999828e-05, 3.131900000000187e-05, 3.138899999999972e-05, 3.119400000000175e-05, 3.1318999999998404e-05, 3.137500000000015e-05, 3.115199999999957e-05]</msg>
<status status="PASS" starttime="20201030 18:31:45.319" endtime="20201030 18:31:45.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.314" endtime="20201030 18:31:45.321"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:45.325" endtime="20201030 18:31:45.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.323" endtime="20201030 18:31:45.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.322" endtime="20201030 18:31:45.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.968" endtime="20201030 18:31:45.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.967" endtime="20201030 18:31:45.346"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.355" endtime="20201030 18:31:45.370"></status>
</kw>
<msg timestamp="20201030 18:31:45.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.354" endtime="20201030 18:31:45.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.372" endtime="20201030 18:31:45.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.374" endtime="20201030 18:31:45.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.351" endtime="20201030 18:31:45.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.349" endtime="20201030 18:31:45.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.383" endtime="20201030 18:31:45.669"></status>
</kw>
<msg timestamp="20201030 18:31:45.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022702708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022734722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:45.382" endtime="20201030 18:31:45.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022702708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022734722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:45.673" endtime="20201030 18:31:45.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.681" endtime="20201030 18:31:45.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.379" endtime="20201030 18:31:45.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.377" endtime="20201030 18:31:45.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:45.688" level="INFO">${RESULT} = [{'diff': 3.201400000000035e-05}, {'diff': 3.217999999999971e-05}, {'diff': 3.216699999999961e-05}, {'diff': 3.238900000000072e-05}, {'diff': 3.2360999999998113e-05}, {'diff': 3.2304999999999834e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:45.685" endtime="20201030 18:31:45.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:45.692" level="INFO">${ACCURACY} = {'diff': [3.201400000000035e-05, 3.217999999999971e-05, 3.216699999999961e-05, 3.238900000000072e-05, 3.2360999999998113e-05, 3.2304999999999834e-05, 3.21250000000009e-05, 3.219399999999928e-05, 3.144...</msg>
<status status="PASS" starttime="20201030 18:31:45.689" endtime="20201030 18:31:45.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.696" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 18:31:45.695" endtime="20201030 18:31:45.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.699" level="INFO">VALUE: [3.201400000000035e-05, 3.217999999999971e-05, 3.216699999999961e-05, 3.238900000000072e-05, 3.2360999999998113e-05, 3.2304999999999834e-05, 3.21250000000009e-05, 3.219399999999928e-05, 3.1444999999998e-05, 3.225000000000103e-05, 3.234799999999802e-05, 3.241699999999986e-05, 3.231999999999888e-05, 3.2332999999998974e-05, 3.238900000000072e-05, 3.230600000000278e-05, 3.225000000000103e-05, 3.213900000000047e-05, 3.238900000000072e-05, 3.234700000000201e-05, 3.218099999999918e-05, 3.231999999999888e-05, 3.22640000000006e-05, 3.218099999999918e-05, 3.223599999999799e-05, 3.223600000000146e-05, 3.244399999999953e-05, 3.219399999999928e-05, 3.236100000000158e-05, 3.225000000000103e-05, 3.2304999999999834e-05, 3.220900000000179e-05, 3.234800000000149e-05, 3.240199999999735e-05, 3.216600000000014e-05, 3.2277000000000694e-05, 3.2291000000000264e-05, 3.2291000000000264e-05, 3.238800000000125e-05, 3.2291000000000264e-05, 3.213900000000047e-05, 3.216600000000014e-05, 3.2304999999999834e-05, 3.211100000000133e-05, 3.234700000000201e-05, 3.215300000000004e-05, 3.219399999999928e-05, 3.1444000000002e-05, 3.227800000000017e-05, 3.219400000000275e-05]</msg>
<status status="PASS" starttime="20201030 18:31:45.698" endtime="20201030 18:31:45.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.693" endtime="20201030 18:31:45.700"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:45.704" endtime="20201030 18:31:45.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.702" endtime="20201030 18:31:45.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.701" endtime="20201030 18:31:45.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.347" endtime="20201030 18:31:45.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.346" endtime="20201030 18:31:45.725"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.733" endtime="20201030 18:31:45.749"></status>
</kw>
<msg timestamp="20201030 18:31:45.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.732" endtime="20201030 18:31:45.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.751" endtime="20201030 18:31:45.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.753" endtime="20201030 18:31:45.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.729" endtime="20201030 18:31:45.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.727" endtime="20201030 18:31:45.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.762" endtime="20201030 18:31:46.050"></status>
</kw>
<msg timestamp="20201030 18:31:46.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022861153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022894486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:45.761" endtime="20201030 18:31:46.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022861153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022894486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.054" endtime="20201030 18:31:46.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.063" endtime="20201030 18:31:46.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.758" endtime="20201030 18:31:46.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.756" endtime="20201030 18:31:46.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:46.070" level="INFO">${RESULT} = [{'diff': 3.3332999999999974e-05}, {'diff': 3.3332999999999974e-05}, {'diff': 3.313900000000147e-05}, {'diff': 3.240300000000029e-05}, {'diff': 3.3374999999998683e-05}, {'diff': 3.324999999999856e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:46.066" endtime="20201030 18:31:46.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:46.074" level="INFO">${ACCURACY} = {'diff': [3.3332999999999974e-05, 3.3332999999999974e-05, 3.313900000000147e-05, 3.240300000000029e-05, 3.3374999999998683e-05, 3.324999999999856e-05, 3.323599999999899e-05, 3.32779999999977e-05, 3.31...</msg>
<status status="PASS" starttime="20201030 18:31:46.071" endtime="20201030 18:31:46.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.079" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 18:31:46.078" endtime="20201030 18:31:46.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.081" level="INFO">VALUE: [3.3332999999999974e-05, 3.3332999999999974e-05, 3.313900000000147e-05, 3.240300000000029e-05, 3.3374999999998683e-05, 3.324999999999856e-05, 3.323599999999899e-05, 3.32779999999977e-05, 3.316700000000061e-05, 3.32640000000016e-05, 3.341699999999739e-05, 3.320899999999932e-05, 3.332000000000335e-05, 3.315300000000104e-05, 3.329200000000074e-05, 3.319500000000322e-05, 3.322199999999942e-05, 3.325000000000203e-05, 3.316700000000061e-05, 3.323599999999899e-05, 3.329200000000074e-05, 3.320899999999932e-05, 3.315300000000104e-05, 3.330600000000031e-05, 3.326399999999813e-05, 3.3346999999999544e-05, 3.3332999999999974e-05, 3.333399999999945e-05, 3.316700000000061e-05, 3.329200000000074e-05, 3.3291000000001264e-05, 3.322199999999942e-05, 3.3346999999999544e-05, 3.3291000000001264e-05, 3.3290999999997795e-05, 3.31519999999981e-05, 3.3305000000000834e-05, 3.3276999999998225e-05, 3.3291000000001264e-05, 3.322199999999942e-05, 3.241600000000039e-05, 3.3304999999997364e-05, 3.3346999999999544e-05, 3.323600000000246e-05, 3.329200000000074e-05, 3.318000000000071e-05, 3.316700000000061e-05, 3.341699999999739e-05, 3.3305000000000834e-05, 3.3374999999998683e-05]</msg>
<status status="PASS" starttime="20201030 18:31:46.080" endtime="20201030 18:31:46.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.075" endtime="20201030 18:31:46.087"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:46.091" endtime="20201030 18:31:46.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.090" endtime="20201030 18:31:46.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.088" endtime="20201030 18:31:46.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.725" endtime="20201030 18:31:46.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.725" endtime="20201030 18:31:46.112"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.121" endtime="20201030 18:31:46.137"></status>
</kw>
<msg timestamp="20201030 18:31:46.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.119" endtime="20201030 18:31:46.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.139" endtime="20201030 18:31:46.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.141" endtime="20201030 18:31:46.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.117" endtime="20201030 18:31:46.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.115" endtime="20201030 18:31:46.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.151" endtime="20201030 18:31:46.437"></status>
</kw>
<msg timestamp="20201030 18:31:46.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022587847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.149" endtime="20201030 18:31:46.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022587847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.442" endtime="20201030 18:31:46.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.450" endtime="20201030 18:31:46.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.147" endtime="20201030 18:31:46.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.145" endtime="20201030 18:31:46.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:46.457" level="INFO">${RESULT} = [{'diff': 3.3610999999999364e-05}, {'diff': 3.4318999999997934e-05}, {'diff': 3.422199999999695e-05}, {'diff': 3.419400000000128e-05}, {'diff': 3.441599999999892e-05}, {'diff': 3.4305000000001834e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:46.453" endtime="20201030 18:31:46.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:46.462" level="INFO">${ACCURACY} = {'diff': [3.3610999999999364e-05, 3.4318999999997934e-05, 3.422199999999695e-05, 3.419400000000128e-05, 3.441599999999892e-05, 3.4305000000001834e-05, 3.423599999999999e-05, 3.4374999999999684e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:31:46.458" endtime="20201030 18:31:46.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.467" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 18:31:46.466" endtime="20201030 18:31:46.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.469" level="INFO">VALUE: [3.3610999999999364e-05, 3.4318999999997934e-05, 3.422199999999695e-05, 3.419400000000128e-05, 3.441599999999892e-05, 3.4305000000001834e-05, 3.423599999999999e-05, 3.4374999999999684e-05, 3.4291000000002264e-05, 3.4152999999998573e-05, 3.4332999999997504e-05, 3.441700000000186e-05, 3.4138999999999003e-05, 3.419399999999781e-05, 3.416700000000161e-05, 3.432000000000088e-05, 3.429199999999827e-05, 3.423599999999999e-05, 3.431999999999741e-05, 3.4333000000000974e-05, 3.422200000000042e-05, 3.4361000000000114e-05, 3.440300000000229e-05, 3.4388999999999253e-05, 3.429199999999827e-05, 3.419500000000075e-05, 3.419500000000075e-05, 3.42779999999987e-05, 3.4374999999999684e-05, 3.4388999999999253e-05, 3.434800000000002e-05, 3.433400000000045e-05, 3.4402999999998823e-05, 3.440300000000229e-05, 3.441699999999839e-05, 3.430599999999784e-05, 3.4361000000000114e-05, 3.4374999999999684e-05, 3.4152999999998573e-05, 3.420800000000085e-05, 3.419500000000075e-05, 3.4388999999999253e-05, 3.426399999999913e-05, 3.420900000000032e-05, 3.4332999999997504e-05, 3.4305000000001834e-05, 3.4333000000000974e-05, 3.422199999999695e-05, 3.416599999999867e-05, 3.419399999999781e-05]</msg>
<status status="PASS" starttime="20201030 18:31:46.468" endtime="20201030 18:31:46.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.463" endtime="20201030 18:31:46.471"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:46.475" endtime="20201030 18:31:46.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.473" endtime="20201030 18:31:46.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.472" endtime="20201030 18:31:46.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.113" endtime="20201030 18:31:46.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.112" endtime="20201030 18:31:46.495"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.504" endtime="20201030 18:31:46.522"></status>
</kw>
<msg timestamp="20201030 18:31:46.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.503" endtime="20201030 18:31:46.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.526" endtime="20201030 18:31:46.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.531" endtime="20201030 18:31:46.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.500" endtime="20201030 18:31:46.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.498" endtime="20201030 18:31:46.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.551" endtime="20201030 18:31:46.848"></status>
</kw>
<msg timestamp="20201030 18:31:46.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022433611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022468139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.548" endtime="20201030 18:31:46.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022433611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022468139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.852" endtime="20201030 18:31:46.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.860" endtime="20201030 18:31:46.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.542" endtime="20201030 18:31:46.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.538" endtime="20201030 18:31:46.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:46.867" level="INFO">${RESULT} = [{'diff': 3.452800000000242e-05}, {'diff': 3.519500000000175e-05}, {'diff': 3.5375000000000684e-05}, {'diff': 3.541599999999992e-05}, {'diff': 3.4374999999999684e-05}, {'diff': 3.5416999999999393e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:46.864" endtime="20201030 18:31:46.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:46.871" level="INFO">${ACCURACY} = {'diff': [3.452800000000242e-05, 3.519500000000175e-05, 3.5375000000000684e-05, 3.541599999999992e-05, 3.4374999999999684e-05, 3.5416999999999393e-05, 3.52779999999997e-05, 3.5360999999997644e-05, 3.5...</msg>
<status status="PASS" starttime="20201030 18:31:46.868" endtime="20201030 18:31:46.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.876" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 18:31:46.875" endtime="20201030 18:31:46.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.879" level="INFO">VALUE: [3.452800000000242e-05, 3.519500000000175e-05, 3.5375000000000684e-05, 3.541599999999992e-05, 3.4374999999999684e-05, 3.5416999999999393e-05, 3.52779999999997e-05, 3.5360999999997644e-05, 3.517999999999924e-05, 3.522300000000089e-05, 3.527800000000317e-05, 3.536200000000059e-05, 3.540200000000035e-05, 3.526400000000013e-05, 3.517999999999924e-05, 3.519500000000175e-05, 3.5375000000000684e-05, 3.516599999999967e-05, 3.5389000000000254e-05, 3.5125000000000434e-05, 3.525000000000056e-05, 3.5375000000000684e-05, 3.517999999999924e-05, 3.5110999999997394e-05, 3.5346999999998074e-05, 3.516599999999967e-05, 3.522200000000142e-05, 3.526400000000013e-05, 3.5290999999999795e-05, 3.529199999999927e-05, 3.5361000000001114e-05, 3.526400000000013e-05, 3.5361000000001114e-05, 3.5152999999999573e-05, 3.441699999999839e-05, 3.529199999999927e-05, 3.530599999999884e-05, 3.5152999999999573e-05, 3.5347000000001544e-05, 3.518100000000218e-05, 3.519500000000175e-05, 3.52779999999997e-05, 3.519499999999828e-05, 3.531999999999841e-05, 3.529199999999927e-05, 3.519499999999828e-05, 3.531999999999841e-05, 3.525000000000056e-05, 3.529200000000274e-05, 3.529200000000274e-05]</msg>
<status status="PASS" starttime="20201030 18:31:46.877" endtime="20201030 18:31:46.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.872" endtime="20201030 18:31:46.880"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:46.884" endtime="20201030 18:31:46.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.883" endtime="20201030 18:31:46.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.881" endtime="20201030 18:31:46.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.496" endtime="20201030 18:31:46.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.496" endtime="20201030 18:31:46.905"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.914" endtime="20201030 18:31:46.934"></status>
</kw>
<msg timestamp="20201030 18:31:46.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.913" endtime="20201030 18:31:46.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.936" endtime="20201030 18:31:46.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.938" endtime="20201030 18:31:46.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.910" endtime="20201030 18:31:46.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.908" endtime="20201030 18:31:46.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.948" endtime="20201030 18:31:47.233"></status>
</kw>
<msg timestamp="20201030 18:31:47.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026290444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026326931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.946" endtime="20201030 18:31:47.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026290444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026326931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:47.237" endtime="20201030 18:31:47.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.246" endtime="20201030 18:31:47.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.944" endtime="20201030 18:31:47.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.942" endtime="20201030 18:31:47.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:47.253" level="INFO">${RESULT} = [{'diff': 3.648700000000171e-05}, {'diff': 3.6152999999997104e-05}, {'diff': 3.623699999999799e-05}, {'diff': 3.6417000000000394e-05}, {'diff': 3.6277000000001225e-05}, {'diff': 3.615199999999763e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:47.249" endtime="20201030 18:31:47.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:47.257" level="INFO">${ACCURACY} = {'diff': [3.648700000000171e-05, 3.6152999999997104e-05, 3.623699999999799e-05, 3.6417000000000394e-05, 3.6277000000001225e-05, 3.615199999999763e-05, 3.62780000000007e-05, 3.634799999999855e-05, 3.63...</msg>
<status status="PASS" starttime="20201030 18:31:47.254" endtime="20201030 18:31:47.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.262" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 18:31:47.261" endtime="20201030 18:31:47.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.264" level="INFO">VALUE: [3.648700000000171e-05, 3.6152999999997104e-05, 3.623699999999799e-05, 3.6417000000000394e-05, 3.6277000000001225e-05, 3.615199999999763e-05, 3.62780000000007e-05, 3.634799999999855e-05, 3.6388999999997784e-05, 3.638799999999831e-05, 3.6332999999999505e-05, 3.6277000000001225e-05, 3.6305000000000365e-05, 3.623600000000199e-05, 3.619399999999981e-05, 3.62780000000007e-05, 3.619399999999981e-05, 3.623599999999852e-05, 3.6304999999996895e-05, 3.6305000000000365e-05, 3.6403000000000824e-05, 3.6388999999997784e-05, 3.5402999999999823e-05, 3.6305000000000365e-05, 3.6167000000000143e-05, 3.6277000000001225e-05, 3.6417000000000394e-05, 3.6167000000000143e-05, 3.6167000000000143e-05, 3.629200000000027e-05, 3.543099999999896e-05, 3.629200000000027e-05, 3.6167000000000143e-05, 3.6167000000000143e-05, 3.623600000000199e-05, 3.6305000000000365e-05, 3.6180999999999713e-05, 3.543099999999896e-05, 3.6374999999998214e-05, 3.629200000000027e-05, 3.620900000000232e-05, 3.620899999999885e-05, 3.634799999999855e-05, 3.6180999999999713e-05, 3.633400000000245e-05, 3.634799999999855e-05, 3.622299999999842e-05, 3.625000000000156e-05, 3.638800000000178e-05, 3.6153000000000574e-05]</msg>
<status status="PASS" starttime="20201030 18:31:47.263" endtime="20201030 18:31:47.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.258" endtime="20201030 18:31:47.267"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:47.270" endtime="20201030 18:31:47.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.269" endtime="20201030 18:31:47.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.268" endtime="20201030 18:31:47.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.906" endtime="20201030 18:31:47.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.905" endtime="20201030 18:31:47.291"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.300" endtime="20201030 18:31:47.316"></status>
</kw>
<msg timestamp="20201030 18:31:47.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:47.299" endtime="20201030 18:31:47.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:47.318" endtime="20201030 18:31:47.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.324" endtime="20201030 18:31:47.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.296" endtime="20201030 18:31:47.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.294" endtime="20201030 18:31:47.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.340" endtime="20201030 18:31:47.627"></status>
</kw>
<msg timestamp="20201030 18:31:47.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022400514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022437569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:47.336" endtime="20201030 18:31:47.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022400514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022437569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:47.631" endtime="20201030 18:31:47.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.639" endtime="20201030 18:31:47.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.333" endtime="20201030 18:31:47.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.330" endtime="20201030 18:31:47.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:47.646" level="INFO">${RESULT} = [{'diff': 3.7055000000001115e-05}, {'diff': 3.720800000000038e-05}, {'diff': 3.720800000000038e-05}, {'diff': 3.7290999999998325e-05}, {'diff': 3.7263000000002655e-05}, {'diff': 3.715199999999863e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:47.643" endtime="20201030 18:31:47.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:47.651" level="INFO">${ACCURACY} = {'diff': [3.7055000000001115e-05, 3.720800000000038e-05, 3.720800000000038e-05, 3.7290999999998325e-05, 3.7263000000002655e-05, 3.715199999999863e-05, 3.719400000000081e-05, 3.7290999999998325e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:31:47.647" endtime="20201030 18:31:47.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.656" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 18:31:47.655" endtime="20201030 18:31:47.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.659" level="INFO">VALUE: [3.7055000000001115e-05, 3.720800000000038e-05, 3.720800000000038e-05, 3.7290999999998325e-05, 3.7263000000002655e-05, 3.715199999999863e-05, 3.719400000000081e-05, 3.7290999999998325e-05, 3.7319000000000935e-05, 3.724999999999909e-05, 3.7389000000002254e-05, 3.7318999999997465e-05, 3.718000000000124e-05, 3.7138999999998534e-05, 3.7361000000003114e-05, 3.719400000000081e-05, 3.723599999999952e-05, 3.7166999999997674e-05, 3.7153000000001574e-05, 3.72919999999978e-05, 3.7389000000002254e-05, 3.7374999999999214e-05, 3.7375000000002684e-05, 3.7319000000000935e-05, 3.7374999999999214e-05, 3.730599999999737e-05, 3.7417000000001394e-05, 3.731999999999694e-05, 3.720799999999691e-05, 3.72780000000017e-05, 3.733399999999998e-05, 3.720899999999985e-05, 3.7195000000000283e-05, 3.7360999999999644e-05, 3.730599999999737e-05, 3.7402999999998354e-05, 3.7417000000001394e-05, 3.723599999999952e-05, 3.708399999999973e-05, 3.711199999999887e-05, 3.720799999999691e-05, 3.720800000000038e-05, 3.7374999999999214e-05, 3.723699999999899e-05, 3.723599999999952e-05, 3.726399999999866e-05, 3.71659999999982e-05, 3.719400000000081e-05, 3.715199999999863e-05, 3.71520000000021e-05]</msg>
<status status="PASS" starttime="20201030 18:31:47.657" endtime="20201030 18:31:47.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.652" endtime="20201030 18:31:47.660"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:47.664" endtime="20201030 18:31:47.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.662" endtime="20201030 18:31:47.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.661" endtime="20201030 18:31:47.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.292" endtime="20201030 18:31:47.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.291" endtime="20201030 18:31:47.685"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.694" endtime="20201030 18:31:47.710"></status>
</kw>
<msg timestamp="20201030 18:31:47.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:47.692" endtime="20201030 18:31:47.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:47.711" endtime="20201030 18:31:47.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.714" endtime="20201030 18:31:47.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.689" endtime="20201030 18:31:47.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.687" endtime="20201030 18:31:47.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.724" endtime="20201030 18:31:48.011"></status>
</kw>
<msg timestamp="20201030 18:31:48.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022435764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022473375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:47.722" endtime="20201030 18:31:48.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022435764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022473375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:48.016" endtime="20201030 18:31:48.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.024" endtime="20201030 18:31:48.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.719" endtime="20201030 18:31:48.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.717" endtime="20201030 18:31:48.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:48.031" level="INFO">${RESULT} = [{'diff': 3.7610999999999895e-05}, {'diff': 3.8124999999999964e-05}, {'diff': 3.8166999999998674e-05}, {'diff': 3.8318999999998465e-05}, {'diff': 3.8375000000000214e-05}, {'diff': 3.82919999999988e-05...</msg>
<status status="PASS" starttime="20201030 18:31:48.028" endtime="20201030 18:31:48.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:48.036" level="INFO">${ACCURACY} = {'diff': [3.7610999999999895e-05, 3.8124999999999964e-05, 3.8166999999998674e-05, 3.8318999999998465e-05, 3.8375000000000214e-05, 3.82919999999988e-05, 3.8195000000001283e-05, 3.8332999999998035e-05, ...</msg>
<status status="PASS" starttime="20201030 18:31:48.032" endtime="20201030 18:31:48.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.040" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 18:31:48.039" endtime="20201030 18:31:48.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.043" level="INFO">VALUE: [3.7610999999999895e-05, 3.8124999999999964e-05, 3.8166999999998674e-05, 3.8318999999998465e-05, 3.8375000000000214e-05, 3.82919999999988e-05, 3.8195000000001283e-05, 3.8332999999998035e-05, 3.8181000000001714e-05, 3.823600000000052e-05, 3.833400000000098e-05, 3.826399999999966e-05, 3.8194999999997814e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.8209000000000853e-05, 3.8375000000000214e-05, 3.826399999999966e-05, 3.8181000000001714e-05, 3.8195000000001283e-05, 3.8124999999999964e-05, 3.825000000000009e-05, 3.825000000000009e-05, 3.820800000000138e-05, 3.8276999999999756e-05, 3.820800000000138e-05, 3.819399999999834e-05, 3.82780000000027e-05, 3.825000000000009e-05, 3.8347000000001075e-05, 3.8361000000000645e-05, 3.8375000000000214e-05, 3.8319000000001935e-05, 3.823600000000052e-05, 3.8152999999999104e-05, 3.741599999999845e-05, 3.8333000000001505e-05, 3.820800000000138e-05, 3.823600000000052e-05, 3.8152999999999104e-05, 3.8360999999997175e-05, 3.8111000000000395e-05, 3.820800000000138e-05, 3.8181000000001714e-05, 3.82919999999988e-05, 3.8138999999999534e-05, 3.8209000000000853e-05, 3.823600000000052e-05, 3.8333000000001505e-05, 3.823599999999705e-05]</msg>
<status status="PASS" starttime="20201030 18:31:48.041" endtime="20201030 18:31:48.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.037" endtime="20201030 18:31:48.044"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:48.048" endtime="20201030 18:31:48.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.047" endtime="20201030 18:31:48.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.045" endtime="20201030 18:31:48.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.686" endtime="20201030 18:31:48.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.685" endtime="20201030 18:31:48.069"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.078" endtime="20201030 18:31:48.095"></status>
</kw>
<msg timestamp="20201030 18:31:48.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.076" endtime="20201030 18:31:48.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.096" endtime="20201030 18:31:48.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.099" endtime="20201030 18:31:48.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.074" endtime="20201030 18:31:48.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.072" endtime="20201030 18:31:48.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.108" endtime="20201030 18:31:48.395"></status>
</kw>
<msg timestamp="20201030 18:31:48.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023307681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023346569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:48.107" endtime="20201030 18:31:48.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023307681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023346569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:48.399" endtime="20201030 18:31:48.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.408" endtime="20201030 18:31:48.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.104" endtime="20201030 18:31:48.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.102" endtime="20201030 18:31:48.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:48.415" level="INFO">${RESULT} = [{'diff': 3.888800000000081e-05}, {'diff': 3.841599999999945e-05}, {'diff': 3.940200000000088e-05}, {'diff': 3.9263000000001186e-05}, {'diff': 3.9263000000001186e-05}, {'diff': 3.925000000000109e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:48.412" endtime="20201030 18:31:48.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:48.419" level="INFO">${ACCURACY} = {'diff': [3.888800000000081e-05, 3.841599999999945e-05, 3.940200000000088e-05, 3.9263000000001186e-05, 3.9263000000001186e-05, 3.925000000000109e-05, 3.915199999999716e-05, 3.926400000000066e-05, 3.91...</msg>
<status status="PASS" starttime="20201030 18:31:48.416" endtime="20201030 18:31:48.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.424" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 18:31:48.423" endtime="20201030 18:31:48.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.427" level="INFO">VALUE: [3.888800000000081e-05, 3.841599999999945e-05, 3.940200000000088e-05, 3.9263000000001186e-05, 3.9263000000001186e-05, 3.925000000000109e-05, 3.915199999999716e-05, 3.926400000000066e-05, 3.915200000000063e-05, 3.9403000000000354e-05, 3.9139000000000534e-05, 3.9318999999999465e-05, 3.850000000000034e-05, 3.9291000000000326e-05, 3.925000000000109e-05, 3.922200000000195e-05, 3.9346999999998605e-05, 3.931999999999894e-05, 3.9125000000000965e-05, 3.9166999999999674e-05, 3.923600000000152e-05, 3.926400000000066e-05, 3.9375000000001215e-05, 3.9139000000000534e-05, 3.92919999999998e-05, 3.923599999999805e-05, 3.9403000000000354e-05, 3.9361000000001645e-05, 3.925000000000109e-05, 3.9166999999999674e-05, 3.9361000000001645e-05, 3.923600000000152e-05, 3.9375000000001215e-05, 3.8416999999998924e-05, 3.925000000000109e-05, 3.9332999999999035e-05, 3.926400000000066e-05, 3.8417000000002394e-05, 3.9361000000001645e-05, 3.9375000000001215e-05, 3.9209000000001853e-05, 3.940199999999741e-05, 3.919399999999934e-05, 3.843000000000249e-05, 3.940199999999741e-05, 3.841600000000292e-05, 3.9333000000002505e-05, 3.919399999999934e-05, 3.91660000000002e-05, 3.9346999999998605e-05]</msg>
<status status="PASS" starttime="20201030 18:31:48.425" endtime="20201030 18:31:48.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.420" endtime="20201030 18:31:48.429"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:48.433" endtime="20201030 18:31:48.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.431" endtime="20201030 18:31:48.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.430" endtime="20201030 18:31:48.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.070" endtime="20201030 18:31:48.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.069" endtime="20201030 18:31:48.454"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.463" endtime="20201030 18:31:48.479"></status>
</kw>
<msg timestamp="20201030 18:31:48.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.461" endtime="20201030 18:31:48.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.480" endtime="20201030 18:31:48.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.483" endtime="20201030 18:31:48.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.458" endtime="20201030 18:31:48.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.456" endtime="20201030 18:31:48.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.492" endtime="20201030 18:31:48.779"></status>
</kw>
<msg timestamp="20201030 18:31:48.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022626375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0226665, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:48.491" endtime="20201030 18:31:48.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022626375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0226665, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:48.783" endtime="20201030 18:31:48.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.791" endtime="20201030 18:31:48.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.488" endtime="20201030 18:31:48.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.486" endtime="20201030 18:31:48.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:48.798" level="INFO">${RESULT} = [{'diff': 4.0124999999998495e-05}, {'diff': 3.9459000000002104e-05}, {'diff': 3.9430999999999494e-05}, {'diff': 4.030600000000037e-05}, {'diff': 3.9444999999999064e-05}, {'diff': 4.023599999999905e-05...</msg>
<status status="PASS" starttime="20201030 18:31:48.795" endtime="20201030 18:31:48.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:48.803" level="INFO">${ACCURACY} = {'diff': [4.0124999999998495e-05, 3.9459000000002104e-05, 3.9430999999999494e-05, 4.030600000000037e-05, 3.9444999999999064e-05, 4.023599999999905e-05, 4.025000000000209e-05, 4.031999999999994e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:31:48.799" endtime="20201030 18:31:48.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.808" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 18:31:48.807" endtime="20201030 18:31:48.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.811" level="INFO">VALUE: [4.0124999999998495e-05, 3.9459000000002104e-05, 3.9430999999999494e-05, 4.030600000000037e-05, 3.9444999999999064e-05, 4.023599999999905e-05, 4.025000000000209e-05, 4.031999999999994e-05, 4.0166999999997205e-05, 4.0236999999998524e-05, 3.9430999999999494e-05, 4.0167000000000674e-05, 4.0139000000001535e-05, 4.0263000000002186e-05, 4.027799999999776e-05, 4.026400000000166e-05, 4.0277000000001756e-05, 4.031999999999994e-05, 4.02920000000008e-05, 4.0222999999998954e-05, 4.005600000000012e-05, 4.018000000000077e-05, 4.019400000000034e-05, 4.0333000000000035e-05, 4.0276999999998286e-05, 4.0319000000000466e-05, 4.0305000000000896e-05, 4.019400000000034e-05, 4.0153000000001104e-05, 4.0403000000001354e-05, 4.0374999999998745e-05, 4.0333000000000035e-05, 4.0346999999999605e-05, 4.022199999999948e-05, 4.020799999999991e-05, 4.0360999999999175e-05, 4.02920000000008e-05, 4.0375000000002215e-05, 4.0431000000000494e-05, 4.027800000000123e-05, 4.026400000000166e-05, 3.9445000000002534e-05, 4.022199999999948e-05, 4.026400000000166e-05, 4.0403000000001354e-05, 4.0194999999999814e-05, 4.0375000000002215e-05, 4.0333000000000035e-05, 4.034799999999908e-05, 4.0403000000001354e-05]</msg>
<status status="PASS" starttime="20201030 18:31:48.809" endtime="20201030 18:31:48.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.804" endtime="20201030 18:31:48.812"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:48.816" endtime="20201030 18:31:48.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.814" endtime="20201030 18:31:48.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.813" endtime="20201030 18:31:48.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.455" endtime="20201030 18:31:48.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.454" endtime="20201030 18:31:48.837"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.846" endtime="20201030 18:31:48.862"></status>
</kw>
<msg timestamp="20201030 18:31:48.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.844" endtime="20201030 18:31:48.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.863" endtime="20201030 18:31:48.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.866" endtime="20201030 18:31:48.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.842" endtime="20201030 18:31:48.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.839" endtime="20201030 18:31:48.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.876" endtime="20201030 18:31:49.167"></status>
</kw>
<msg timestamp="20201030 18:31:49.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022351542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022392278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:48.874" endtime="20201030 18:31:49.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022351542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022392278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:49.171" endtime="20201030 18:31:49.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.180" endtime="20201030 18:31:49.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.871" endtime="20201030 18:31:49.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.870" endtime="20201030 18:31:49.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:49.187" level="INFO">${RESULT} = [{'diff': 4.073600000000302e-05}, {'diff': 4.12920000000018e-05}, {'diff': 4.1402999999998885e-05}, {'diff': 4.131999999999747e-05}, {'diff': 4.130600000000137e-05}, {'diff': 4.1402999999998885e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:49.183" endtime="20201030 18:31:49.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:49.191" level="INFO">${ACCURACY} = {'diff': [4.073600000000302e-05, 4.12920000000018e-05, 4.1402999999998885e-05, 4.131999999999747e-05, 4.130600000000137e-05, 4.1402999999998885e-05, 4.1152999999998635e-05, 4.1347000000000605e-05, 4.1...</msg>
<status status="PASS" starttime="20201030 18:31:49.188" endtime="20201030 18:31:49.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.196" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 18:31:49.194" endtime="20201030 18:31:49.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.198" level="INFO">VALUE: [4.073600000000302e-05, 4.12920000000018e-05, 4.1402999999998885e-05, 4.131999999999747e-05, 4.130600000000137e-05, 4.1402999999998885e-05, 4.1152999999998635e-05, 4.1347000000000605e-05, 4.1138999999999065e-05, 4.1291000000002326e-05, 4.1167000000001674e-05, 4.0430999999997025e-05, 4.1181000000001244e-05, 4.1152999999998635e-05, 4.115199999999916e-05, 4.133400000000051e-05, 4.124999999999962e-05, 4.141600000000245e-05, 4.113799999999959e-05, 4.1138999999999065e-05, 4.120800000000091e-05, 4.1347000000000605e-05, 4.1347000000000605e-05, 4.140199999999941e-05, 4.120800000000091e-05, 4.116599999999873e-05, 4.123600000000005e-05, 4.1388999999999315e-05, 4.127799999999876e-05, 4.1374999999999745e-05, 4.130600000000137e-05, 4.124999999999962e-05, 4.1167000000001674e-05, 4.0487000000002243e-05, 4.126400000000266e-05, 4.0417000000000924e-05, 4.1139000000002535e-05, 4.1333000000001036e-05, 4.1361000000000175e-05, 4.0417000000000924e-05, 4.1195000000000814e-05, 4.1181000000001244e-05, 4.1110999999999925e-05, 4.049999999999887e-05, 4.126399999999919e-05, 4.0430999999997025e-05, 4.132000000000094e-05, 4.1361000000000175e-05, 4.044400000000059e-05, 4.1402999999998885e-05]</msg>
<status status="PASS" starttime="20201030 18:31:49.197" endtime="20201030 18:31:49.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.192" endtime="20201030 18:31:49.199"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:49.203" endtime="20201030 18:31:49.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.202" endtime="20201030 18:31:49.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.200" endtime="20201030 18:31:49.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.838" endtime="20201030 18:31:49.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.837" endtime="20201030 18:31:49.224"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.233" endtime="20201030 18:31:49.251"></status>
</kw>
<msg timestamp="20201030 18:31:49.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:49.232" endtime="20201030 18:31:49.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:49.252" endtime="20201030 18:31:49.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.255" endtime="20201030 18:31:49.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.229" endtime="20201030 18:31:49.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.227" endtime="20201030 18:31:49.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.264" endtime="20201030 18:31:49.551"></status>
</kw>
<msg timestamp="20201030 18:31:49.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023946792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023988403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:49.263" endtime="20201030 18:31:49.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023946792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023988403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:49.555" endtime="20201030 18:31:49.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.563" endtime="20201030 18:31:49.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.260" endtime="20201030 18:31:49.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.258" endtime="20201030 18:31:49.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:49.571" level="INFO">${RESULT} = [{'diff': 4.1610999999996956e-05}, {'diff': 4.222199999999801e-05}, {'diff': 4.223600000000105e-05}, {'diff': 4.209800000000083e-05}, {'diff': 4.2361000000001175e-05}, {'diff': 4.226400000000019e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:49.567" endtime="20201030 18:31:49.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:49.575" level="INFO">${ACCURACY} = {'diff': [4.1610999999996956e-05, 4.222199999999801e-05, 4.223600000000105e-05, 4.209800000000083e-05, 4.2361000000001175e-05, 4.226400000000019e-05, 4.240200000000041e-05, 4.219399999999887e-05, 4.23...</msg>
<status status="PASS" starttime="20201030 18:31:49.572" endtime="20201030 18:31:49.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.579" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 18:31:49.578" endtime="20201030 18:31:49.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.582" level="INFO">VALUE: [4.1610999999996956e-05, 4.222199999999801e-05, 4.223600000000105e-05, 4.209800000000083e-05, 4.2361000000001175e-05, 4.226400000000019e-05, 4.240200000000041e-05, 4.219399999999887e-05, 4.2389000000000315e-05, 4.2209000000001384e-05, 4.2180999999998775e-05, 4.223600000000105e-05, 4.2318999999998996e-05, 4.2125000000000495e-05, 4.215200000000016e-05, 4.2181000000002244e-05, 4.2209000000001384e-05, 4.2152999999999635e-05, 4.241599999999998e-05, 4.223599999999758e-05, 4.2223000000000954e-05, 4.2209000000001384e-05, 4.21660000000032e-05, 4.227799999999976e-05, 4.2361000000001175e-05, 4.2333000000002036e-05, 4.2402999999999885e-05, 4.2374999999997276e-05, 4.2402999999999885e-05, 4.2361000000001175e-05, 4.219399999999887e-05, 4.2361000000001175e-05, 4.1473000000000204e-05, 4.222200000000148e-05, 4.2181000000002244e-05, 4.2389000000000315e-05, 4.232000000000194e-05, 4.208400000000126e-05, 4.2375000000000745e-05, 4.2389000000000315e-05, 4.229199999999933e-05, 4.21799999999993e-05, 4.233400000000151e-05, 4.2389000000000315e-05, 4.226400000000019e-05, 4.236200000000065e-05, 4.2389000000000315e-05, 4.2277000000000287e-05, 4.224999999999715e-05, 4.2332999999998566e-05]</msg>
<status status="PASS" starttime="20201030 18:31:49.581" endtime="20201030 18:31:49.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.576" endtime="20201030 18:31:49.584"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:49.588" endtime="20201030 18:31:49.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.587" endtime="20201030 18:31:49.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.585" endtime="20201030 18:31:49.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.225" endtime="20201030 18:31:49.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.224" endtime="20201030 18:31:49.609"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.618" endtime="20201030 18:31:49.635"></status>
</kw>
<msg timestamp="20201030 18:31:49.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:49.617" endtime="20201030 18:31:49.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:49.636" endtime="20201030 18:31:49.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.639" endtime="20201030 18:31:49.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.614" endtime="20201030 18:31:49.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.611" endtime="20201030 18:31:49.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.648" endtime="20201030 18:31:49.933"></status>
</kw>
<msg timestamp="20201030 18:31:49.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022586903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022629958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:49.647" endtime="20201030 18:31:49.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022586903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022629958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:49.938" endtime="20201030 18:31:49.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.946" endtime="20201030 18:31:49.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.644" endtime="20201030 18:31:49.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.642" endtime="20201030 18:31:49.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:49.953" level="INFO">${RESULT} = [{'diff': 4.3055000000000176e-05}, {'diff': 4.344400000000012e-05}, {'diff': 4.319399999999987e-05}, {'diff': 4.325000000000162e-05}, {'diff': 4.329099999999739e-05}, {'diff': 4.3318999999999996e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:49.949" endtime="20201030 18:31:49.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:49.958" level="INFO">${ACCURACY} = {'diff': [4.3055000000000176e-05, 4.344400000000012e-05, 4.319399999999987e-05, 4.325000000000162e-05, 4.329099999999739e-05, 4.3318999999999996e-05, 4.329200000000033e-05, 4.3375000000001745e-05, 4.3...</msg>
<status status="PASS" starttime="20201030 18:31:49.954" endtime="20201030 18:31:49.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.963" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 18:31:49.962" endtime="20201030 18:31:49.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.965" level="INFO">VALUE: [4.3055000000000176e-05, 4.344400000000012e-05, 4.319399999999987e-05, 4.325000000000162e-05, 4.329099999999739e-05, 4.3318999999999996e-05, 4.329200000000033e-05, 4.3375000000001745e-05, 4.323599999999858e-05, 4.3388999999997846e-05, 4.327800000000076e-05, 4.319399999999987e-05, 4.3361000000002176e-05, 4.323599999999858e-05, 4.3346999999999136e-05, 4.3403000000000885e-05, 4.3167000000000205e-05, 4.2430999999999025e-05, 4.3097000000002356e-05, 4.329200000000033e-05, 4.3346999999999136e-05, 4.3346999999999136e-05, 4.3195000000002814e-05, 4.2431000000002494e-05, 4.2445000000002064e-05, 4.330600000000337e-05, 4.2361000000001175e-05, 4.329200000000033e-05, 4.2402999999999885e-05, 4.250000000000087e-05, 4.333399999999904e-05, 4.3360999999998706e-05, 4.338800000000184e-05, 4.324999999999815e-05, 4.320799999999944e-05, 4.327700000000129e-05, 4.323600000000205e-05, 4.316599999999726e-05, 4.3305000000000426e-05, 4.315200000000116e-05, 4.322199999999901e-05, 4.3375000000001745e-05, 4.329099999999739e-05, 4.324999999999815e-05, 4.319399999999987e-05, 4.3318999999999996e-05, 4.3209000000002384e-05, 4.3318999999999996e-05, 4.326400000000119e-05, 4.3332999999999566e-05]</msg>
<status status="PASS" starttime="20201030 18:31:49.964" endtime="20201030 18:31:49.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.959" endtime="20201030 18:31:49.967"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:49.971" endtime="20201030 18:31:49.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.969" endtime="20201030 18:31:49.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.968" endtime="20201030 18:31:49.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.610" endtime="20201030 18:31:49.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.609" endtime="20201030 18:31:49.991"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.001" endtime="20201030 18:31:50.017"></status>
</kw>
<msg timestamp="20201030 18:31:50.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:49.999" endtime="20201030 18:31:50.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.019" endtime="20201030 18:31:50.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.021" endtime="20201030 18:31:50.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.996" endtime="20201030 18:31:50.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.994" endtime="20201030 18:31:50.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.031" endtime="20201030 18:31:50.318"></status>
</kw>
<msg timestamp="20201030 18:31:50.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022420264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022464097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:50.029" endtime="20201030 18:31:50.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022420264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022464097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:50.322" endtime="20201030 18:31:50.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.330" endtime="20201030 18:31:50.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.027" endtime="20201030 18:31:50.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.025" endtime="20201030 18:31:50.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:50.337" level="INFO">${RESULT} = [{'diff': 4.3833000000000066e-05}, {'diff': 4.4305000000001427e-05}, {'diff': 4.4374999999999276e-05}, {'diff': 4.4153000000001635e-05}, {'diff': 4.417999999999783e-05}, {'diff': 4.4347000000000136e-0...</msg>
<status status="PASS" starttime="20201030 18:31:50.334" endtime="20201030 18:31:50.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:50.342" level="INFO">${ACCURACY} = {'diff': [4.3833000000000066e-05, 4.4305000000001427e-05, 4.4374999999999276e-05, 4.4153000000001635e-05, 4.417999999999783e-05, 4.4347000000000136e-05, 4.4110999999999456e-05, 4.4181000000000775e-05,...</msg>
<status status="PASS" starttime="20201030 18:31:50.338" endtime="20201030 18:31:50.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.346" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 18:31:50.345" endtime="20201030 18:31:50.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.349" level="INFO">VALUE: [4.3833000000000066e-05, 4.4305000000001427e-05, 4.4374999999999276e-05, 4.4153000000001635e-05, 4.417999999999783e-05, 4.4347000000000136e-05, 4.4110999999999456e-05, 4.4181000000000775e-05, 4.423599999999958e-05, 4.420800000000044e-05, 4.432000000000047e-05, 4.420800000000044e-05, 4.4402999999998416e-05, 4.4403000000001885e-05, 4.433400000000004e-05, 4.4417000000001455e-05, 4.43060000000009e-05, 4.426400000000219e-05, 4.427799999999829e-05, 4.425000000000262e-05, 4.423599999999958e-05, 4.4375000000002746e-05, 4.4222999999999485e-05, 4.4374999999999276e-05, 4.424999999999915e-05, 4.424999999999915e-05, 4.4152999999998166e-05, 4.417999999999783e-05, 4.422200000000001e-05, 4.426399999999872e-05, 4.4360999999999706e-05, 4.43060000000009e-05, 4.426400000000219e-05, 4.422200000000001e-05, 4.4374999999999276e-05, 4.41800000000013e-05, 4.4389000000002315e-05, 4.417999999999783e-05, 4.4403000000001885e-05, 4.4402999999998416e-05, 4.427800000000176e-05, 4.4374999999999276e-05, 4.4389000000002315e-05, 4.3417000000000455e-05, 4.429200000000133e-05, 4.3444999999999595e-05, 4.424999999999915e-05, 4.427799999999829e-05, 4.4167000000001205e-05, 4.4361000000003176e-05]</msg>
<status status="PASS" starttime="20201030 18:31:50.347" endtime="20201030 18:31:50.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.342" endtime="20201030 18:31:50.350"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:50.354" endtime="20201030 18:31:50.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.352" endtime="20201030 18:31:50.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.351" endtime="20201030 18:31:50.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.992" endtime="20201030 18:31:50.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.992" endtime="20201030 18:31:50.375"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.384" endtime="20201030 18:31:50.404"></status>
</kw>
<msg timestamp="20201030 18:31:50.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.382" endtime="20201030 18:31:50.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.406" endtime="20201030 18:31:50.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.409" endtime="20201030 18:31:50.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.380" endtime="20201030 18:31:50.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.378" endtime="20201030 18:31:50.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.419" endtime="20201030 18:31:50.705"></status>
</kw>
<msg timestamp="20201030 18:31:50.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026339347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026384042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:50.417" endtime="20201030 18:31:50.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026339347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026384042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:50.709" endtime="20201030 18:31:50.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.717" endtime="20201030 18:31:50.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.414" endtime="20201030 18:31:50.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.412" endtime="20201030 18:31:50.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:50.724" level="INFO">${RESULT} = [{'diff': 4.4695000000000845e-05}, {'diff': 4.5166999999998736e-05}, {'diff': 4.536099999999724e-05}, {'diff': 4.5209000000000915e-05}, {'diff': 4.517999999999883e-05}, {'diff': 4.5388999999999846e-05...</msg>
<status status="PASS" starttime="20201030 18:31:50.721" endtime="20201030 18:31:50.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:50.729" level="INFO">${ACCURACY} = {'diff': [4.4695000000000845e-05, 4.5166999999998736e-05, 4.536099999999724e-05, 4.5209000000000915e-05, 4.517999999999883e-05, 4.5388999999999846e-05, 4.5194999999997876e-05, 4.5152999999999166e-05, ...</msg>
<status status="PASS" starttime="20201030 18:31:50.725" endtime="20201030 18:31:50.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.733" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 18:31:50.732" endtime="20201030 18:31:50.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.736" level="INFO">VALUE: [4.4695000000000845e-05, 4.5166999999998736e-05, 4.536099999999724e-05, 4.5209000000000915e-05, 4.517999999999883e-05, 4.5388999999999846e-05, 4.5194999999997876e-05, 4.5152999999999166e-05, 4.517999999999883e-05, 4.520800000000144e-05, 4.5111000000000456e-05, 4.520800000000144e-05, 4.5152999999999166e-05, 4.515199999999969e-05, 4.5375000000000276e-05, 4.529099999999939e-05, 4.51939999999984e-05, 4.5347000000001136e-05, 4.5402999999999416e-05, 4.51939999999984e-05, 4.529199999999886e-05, 4.523600000000058e-05, 4.520799999999797e-05, 4.5152999999999166e-05, 4.5445000000001595e-05, 4.5375000000000276e-05, 4.520800000000144e-05, 4.5125000000000026e-05, 4.527799999999929e-05, 4.525000000000015e-05, 4.5375000000000276e-05, 4.525000000000015e-05, 4.5166999999998736e-05, 4.536099999999724e-05, 4.519400000000187e-05, 4.5153000000002635e-05, 4.442999999999808e-05, 4.525000000000015e-05, 4.5167000000002205e-05, 4.4417000000001455e-05, 4.526399999999972e-05, 4.540199999999994e-05, 4.5209000000000915e-05, 4.529200000000233e-05, 4.5361000000000706e-05, 4.527699999999982e-05, 4.53329999999981e-05, 4.526399999999972e-05, 4.520800000000144e-05, 4.529099999999939e-05]</msg>
<status status="PASS" starttime="20201030 18:31:50.734" endtime="20201030 18:31:50.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.729" endtime="20201030 18:31:50.799"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:50.804" endtime="20201030 18:31:50.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.802" endtime="20201030 18:31:50.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.800" endtime="20201030 18:31:50.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.376" endtime="20201030 18:31:50.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.376" endtime="20201030 18:31:50.825"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.834" endtime="20201030 18:31:50.850"></status>
</kw>
<msg timestamp="20201030 18:31:50.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.832" endtime="20201030 18:31:50.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.852" endtime="20201030 18:31:50.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.855" endtime="20201030 18:31:50.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.830" endtime="20201030 18:31:50.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.827" endtime="20201030 18:31:50.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.864" endtime="20201030 18:31:51.149"></status>
</kw>
<msg timestamp="20201030 18:31:51.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022563847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022610389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:50.862" endtime="20201030 18:31:51.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022563847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022610389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:51.153" endtime="20201030 18:31:51.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.162" endtime="20201030 18:31:51.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.860" endtime="20201030 18:31:51.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.858" endtime="20201030 18:31:51.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:51.170" level="INFO">${RESULT} = [{'diff': 4.654200000000011e-05}, {'diff': 4.6139000000000596e-05}, {'diff': 4.627800000000029e-05}, {'diff': 4.63329999999991e-05}, {'diff': 4.630599999999943e-05}, {'diff': 4.6389000000000846e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:51.165" endtime="20201030 18:31:51.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:51.174" level="INFO">${ACCURACY} = {'diff': [4.654200000000011e-05, 4.6139000000000596e-05, 4.627800000000029e-05, 4.63329999999991e-05, 4.630599999999943e-05, 4.6389000000000846e-05, 4.6319000000003e-05, 4.6167000000003205e-05, 4.6291...</msg>
<status status="PASS" starttime="20201030 18:31:51.171" endtime="20201030 18:31:51.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.179" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 18:31:51.178" endtime="20201030 18:31:51.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.181" level="INFO">VALUE: [4.654200000000011e-05, 4.6139000000000596e-05, 4.627800000000029e-05, 4.63329999999991e-05, 4.630599999999943e-05, 4.6389000000000846e-05, 4.6319000000003e-05, 4.6167000000003205e-05, 4.629199999999986e-05, 4.6153000000000166e-05, 4.636099999999824e-05, 4.630599999999943e-05, 4.6166999999999736e-05, 4.6194999999998876e-05, 4.6319999999999e-05, 4.6195000000002345e-05, 4.631899999999953e-05, 4.6181000000002775e-05, 4.63329999999991e-05, 4.6209000000001915e-05, 4.630599999999943e-05, 4.626299999999778e-05, 4.6389000000000846e-05, 4.6389000000000846e-05, 4.534800000000061e-05, 4.626400000000072e-05, 4.641600000000051e-05, 4.627700000000082e-05, 4.6125000000001026e-05, 4.6347000000002136e-05, 4.625000000000115e-05, 4.630499999999996e-05, 4.627699999999735e-05, 4.634699999999867e-05, 4.630499999999996e-05, 4.627800000000029e-05, 4.629199999999986e-05, 4.6375000000001276e-05, 4.6458999999998696e-05, 4.6166999999999736e-05, 4.6361000000001706e-05, 4.636099999999824e-05, 4.625000000000115e-05, 4.622199999999854e-05, 4.630599999999943e-05, 4.625000000000115e-05, 4.6319999999999e-05, 4.6389000000000846e-05, 4.630599999999943e-05, 4.6319999999999e-05]</msg>
<status status="PASS" starttime="20201030 18:31:51.180" endtime="20201030 18:31:51.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.175" endtime="20201030 18:31:51.188"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:51.192" endtime="20201030 18:31:51.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.191" endtime="20201030 18:31:51.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.189" endtime="20201030 18:31:51.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.826" endtime="20201030 18:31:51.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.825" endtime="20201030 18:31:51.213"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.222" endtime="20201030 18:31:51.238"></status>
</kw>
<msg timestamp="20201030 18:31:51.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.221" endtime="20201030 18:31:51.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.240" endtime="20201030 18:31:51.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.243" endtime="20201030 18:31:51.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.218" endtime="20201030 18:31:51.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.216" endtime="20201030 18:31:51.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.252" endtime="20201030 18:31:51.539"></status>
</kw>
<msg timestamp="20201030 18:31:51.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023221264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023268347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:51.251" endtime="20201030 18:31:51.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023221264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023268347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:51.543" endtime="20201030 18:31:51.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.551" endtime="20201030 18:31:51.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.248" endtime="20201030 18:31:51.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.246" endtime="20201030 18:31:51.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:51.558" level="INFO">${RESULT} = [{'diff': 4.708300000000332e-05}, {'diff': 4.718000000000083e-05}, {'diff': 4.722199999999954e-05}, {'diff': 4.71940000000004e-05}, {'diff': 4.71940000000004e-05}, {'diff': 4.71940000000004e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:31:51.555" endtime="20201030 18:31:51.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:51.562" level="INFO">${ACCURACY} = {'diff': [4.708300000000332e-05, 4.718000000000083e-05, 4.722199999999954e-05, 4.71940000000004e-05, 4.71940000000004e-05, 4.71940000000004e-05, 4.724999999999868e-05, 4.720799999999997e-05, 4.7166999...</msg>
<status status="PASS" starttime="20201030 18:31:51.559" endtime="20201030 18:31:51.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.567" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 18:31:51.566" endtime="20201030 18:31:51.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.571" level="INFO">VALUE: [4.708300000000332e-05, 4.718000000000083e-05, 4.722199999999954e-05, 4.71940000000004e-05, 4.71940000000004e-05, 4.71940000000004e-05, 4.724999999999868e-05, 4.720799999999997e-05, 4.716699999999727e-05, 4.71940000000004e-05, 4.732e-05, 4.722199999999954e-05, 4.7139000000001596e-05, 4.7375000000002276e-05, 4.732e-05, 4.7181000000000306e-05, 4.727800000000129e-05, 4.7194999999999876e-05, 4.734799999999914e-05, 4.712499999999856e-05, 4.737499999999881e-05, 4.727799999999782e-05, 4.737499999999881e-05, 4.7375000000002276e-05, 4.726299999999878e-05, 4.732e-05, 4.719399999999693e-05, 4.723599999999911e-05, 4.73330000000001e-05, 4.740199999999847e-05, 4.643000000000008e-05, 4.725000000000215e-05, 4.7403000000001416e-05, 4.737499999999881e-05, 4.71940000000004e-05, 4.723600000000258e-05, 4.7375000000002276e-05, 4.7181000000000306e-05, 4.7167000000000736e-05, 4.723599999999911e-05, 4.7180999999996837e-05, 4.720799999999997e-05, 4.73330000000001e-05, 4.722199999999954e-05, 4.7417000000000986e-05, 4.6444999999999126e-05, 4.730599999999696e-05, 4.723599999999911e-05, 4.730600000000043e-05, 4.743000000000108e-05]</msg>
<status status="PASS" starttime="20201030 18:31:51.568" endtime="20201030 18:31:51.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.563" endtime="20201030 18:31:51.572"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:51.576" endtime="20201030 18:31:51.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.574" endtime="20201030 18:31:51.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.573" endtime="20201030 18:31:51.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.214" endtime="20201030 18:31:51.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.213" endtime="20201030 18:31:51.597"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.606" endtime="20201030 18:31:51.622"></status>
</kw>
<msg timestamp="20201030 18:31:51.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.604" endtime="20201030 18:31:51.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.624" endtime="20201030 18:31:51.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.627" endtime="20201030 18:31:51.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.601" endtime="20201030 18:31:51.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.599" endtime="20201030 18:31:51.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.636" endtime="20201030 18:31:51.922"></status>
</kw>
<msg timestamp="20201030 18:31:51.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022388958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022436722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:51.634" endtime="20201030 18:31:51.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022388958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022436722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:51.927" endtime="20201030 18:31:51.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.935" endtime="20201030 18:31:51.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.632" endtime="20201030 18:31:51.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.630" endtime="20201030 18:31:51.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:51.942" level="INFO">${RESULT} = [{'diff': 4.776399999999875e-05}, {'diff': 4.841699999999852e-05}, {'diff': 4.818000000000183e-05}, {'diff': 4.822199999999707e-05}, {'diff': 4.820800000000097e-05}, {'diff': 4.829200000000186e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:51.939" endtime="20201030 18:31:51.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:51.947" level="INFO">${ACCURACY} = {'diff': [4.776399999999875e-05, 4.841699999999852e-05, 4.818000000000183e-05, 4.822199999999707e-05, 4.820800000000097e-05, 4.829200000000186e-05, 4.8181000000001306e-05, 4.820800000000097e-05, 4.827...</msg>
<status status="PASS" starttime="20201030 18:31:51.943" endtime="20201030 18:31:51.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.952" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 18:31:51.951" endtime="20201030 18:31:51.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.954" level="INFO">VALUE: [4.776399999999875e-05, 4.841699999999852e-05, 4.818000000000183e-05, 4.822199999999707e-05, 4.820800000000097e-05, 4.829200000000186e-05, 4.8181000000001306e-05, 4.820800000000097e-05, 4.827799999999882e-05, 4.834700000000067e-05, 4.819399999999793e-05, 4.837499999999981e-05, 4.81529999999987e-05, 4.833299999999763e-05, 4.822200000000054e-05, 4.840299999999895e-05, 4.830600000000143e-05, 4.8195000000000876e-05, 4.841699999999852e-05, 4.8167000000001736e-05, 4.830600000000143e-05, 4.826399999999925e-05, 4.8320000000001e-05, 4.824999999999968e-05, 4.829099999999892e-05, 4.836100000000024e-05, 4.824999999999968e-05, 4.827699999999935e-05, 4.837499999999981e-05, 4.830500000000196e-05, 4.811099999999999e-05, 4.830499999999849e-05, 4.822200000000054e-05, 4.831899999999806e-05, 4.83469999999972e-05, 4.836100000000024e-05, 4.820800000000097e-05, 4.833299999999763e-05, 4.8139000000002596e-05, 4.822200000000054e-05, 4.822199999999707e-05, 4.822200000000054e-05, 4.820800000000097e-05, 4.81529999999987e-05, 4.83330000000011e-05, 4.816699999999827e-05, 4.812499999999956e-05, 4.8320000000001e-05, 4.833400000000057e-05, 4.824999999999968e-05]</msg>
<status status="PASS" starttime="20201030 18:31:51.953" endtime="20201030 18:31:51.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.948" endtime="20201030 18:31:51.956"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:51.959" endtime="20201030 18:31:51.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.958" endtime="20201030 18:31:51.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.957" endtime="20201030 18:31:51.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.598" endtime="20201030 18:31:51.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.597" endtime="20201030 18:31:51.980"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.989" endtime="20201030 18:31:52.007"></status>
</kw>
<msg timestamp="20201030 18:31:52.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.988" endtime="20201030 18:31:52.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.009" endtime="20201030 18:31:52.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.012" endtime="20201030 18:31:52.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.985" endtime="20201030 18:31:52.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.983" endtime="20201030 18:31:52.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.021" endtime="20201030 18:31:52.308"></status>
</kw>
<msg timestamp="20201030 18:31:52.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022372444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022421306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:52.019" endtime="20201030 18:31:52.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022372444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022421306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:52.312" endtime="20201030 18:31:52.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.320" endtime="20201030 18:31:52.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.017" endtime="20201030 18:31:52.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.015" endtime="20201030 18:31:52.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:52.327" level="INFO">${RESULT} = [{'diff': 4.886200000000021e-05}, {'diff': 4.9222999999997546e-05}, {'diff': 4.91940000000024e-05}, {'diff': 4.930599999999896e-05}, {'diff': 4.922199999999807e-05}, {'diff': 4.930599999999896e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:52.324" endtime="20201030 18:31:52.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:52.332" level="INFO">${ACCURACY} = {'diff': [4.886200000000021e-05, 4.9222999999997546e-05, 4.91940000000024e-05, 4.930599999999896e-05, 4.922199999999807e-05, 4.930599999999896e-05, 4.922199999999807e-05, 4.9137999999997184e-05, 4.916...</msg>
<status status="PASS" starttime="20201030 18:31:52.328" endtime="20201030 18:31:52.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.336" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 18:31:52.335" endtime="20201030 18:31:52.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.339" level="INFO">VALUE: [4.886200000000021e-05, 4.9222999999997546e-05, 4.91940000000024e-05, 4.930599999999896e-05, 4.922199999999807e-05, 4.930599999999896e-05, 4.922199999999807e-05, 4.9137999999997184e-05, 4.916599999999979e-05, 4.931900000000253e-05, 4.912500000000056e-05, 4.922199999999807e-05, 4.836100000000024e-05, 4.92079999999985e-05, 4.844400000000165e-05, 4.925000000000068e-05, 4.917999999999936e-05, 4.929200000000286e-05, 4.927799999999982e-05, 4.927799999999982e-05, 4.936100000000124e-05, 4.944499999999866e-05, 4.923600000000111e-05, 4.9320000000002e-05, 4.913900000000013e-05, 4.9195000000001876e-05, 4.926400000000025e-05, 4.929199999999939e-05, 4.930599999999896e-05, 4.919499999999841e-05, 4.837499999999981e-05, 4.937499999999734e-05, 4.926399999999678e-05, 4.925000000000068e-05, 4.933400000000157e-05, 4.9209000000001446e-05, 4.926400000000025e-05, 4.9223000000001016e-05, 4.931900000000253e-05, 4.916599999999979e-05, 4.913800000000065e-05, 4.913800000000065e-05, 4.917999999999936e-05, 4.911100000000099e-05, 4.930499999999949e-05, 4.938900000000038e-05, 4.911100000000099e-05, 4.845800000000122e-05, 4.938899999999691e-05, 4.9459000000001696e-05]</msg>
<status status="PASS" starttime="20201030 18:31:52.338" endtime="20201030 18:31:52.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.333" endtime="20201030 18:31:52.340"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:52.344" endtime="20201030 18:31:52.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.343" endtime="20201030 18:31:52.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.341" endtime="20201030 18:31:52.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.981" endtime="20201030 18:31:52.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.981" endtime="20201030 18:31:52.365"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.374" endtime="20201030 18:31:52.392"></status>
</kw>
<msg timestamp="20201030 18:31:52.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.373" endtime="20201030 18:31:52.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.393" endtime="20201030 18:31:52.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.396" endtime="20201030 18:31:52.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.370" endtime="20201030 18:31:52.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.368" endtime="20201030 18:31:52.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.406" endtime="20201030 18:31:52.692"></status>
</kw>
<msg timestamp="20201030 18:31:52.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023631347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023681236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:52.404" endtime="20201030 18:31:52.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023631347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023681236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:52.696" endtime="20201030 18:31:52.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.705" endtime="20201030 18:31:52.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.401" endtime="20201030 18:31:52.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.400" endtime="20201030 18:31:52.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:52.712" level="INFO">${RESULT} = [{'diff': 4.988900000000088e-05}, {'diff': 5.013899999999766e-05}, {'diff': 5.040300000000095e-05}, {'diff': 5.01530000000007e-05}, {'diff': 5.041700000000052e-05}, {'diff': 5.030599999999996e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:52.708" endtime="20201030 18:31:52.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:52.716" level="INFO">${ACCURACY} = {'diff': [4.988900000000088e-05, 5.013899999999766e-05, 5.040300000000095e-05, 5.01530000000007e-05, 5.041700000000052e-05, 5.030599999999996e-05, 4.943099999999909e-05, 5.03339999999991e-05, 5.016700...</msg>
<status status="PASS" starttime="20201030 18:31:52.713" endtime="20201030 18:31:52.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.721" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 18:31:52.720" endtime="20201030 18:31:52.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.724" level="INFO">VALUE: [4.988900000000088e-05, 5.013899999999766e-05, 5.040300000000095e-05, 5.01530000000007e-05, 5.041700000000052e-05, 5.030599999999996e-05, 4.943099999999909e-05, 5.03339999999991e-05, 5.016700000000027e-05, 5.025000000000168e-05, 5.036099999999877e-05, 5.041700000000052e-05, 5.03469999999992e-05, 5.013900000000113e-05, 4.944499999999866e-05, 5.0223000000002016e-05, 5.031999999999953e-05, 5.0222999999998547e-05, 5.030500000000049e-05, 5.011200000000146e-05, 4.9431000000002556e-05, 5.027799999999735e-05, 5.026300000000178e-05, 5.036100000000224e-05, 5.036099999999877e-05, 5.022199999999907e-05, 4.945800000000222e-05, 5.023599999999864e-05, 5.025000000000168e-05, 5.023600000000211e-05, 5.040299999999748e-05, 5.040300000000095e-05, 5.01530000000007e-05, 5.025000000000168e-05, 5.013899999999766e-05, 5.029200000000039e-05, 5.025000000000168e-05, 4.943099999999909e-05, 5.026400000000125e-05, 4.9445000000002126e-05, 5.018099999999984e-05, 5.022199999999907e-05, 5.019499999999941e-05, 5.027800000000082e-05, 5.038900000000138e-05, 5.030599999999996e-05, 5.0222999999998547e-05, 5.031999999999953e-05, 5.029100000000092e-05, 5.009799999999842e-05]</msg>
<status status="PASS" starttime="20201030 18:31:52.722" endtime="20201030 18:31:52.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.717" endtime="20201030 18:31:52.726"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:52.729" endtime="20201030 18:31:52.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.728" endtime="20201030 18:31:52.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.727" endtime="20201030 18:31:52.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.366" endtime="20201030 18:31:52.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.366" endtime="20201030 18:31:52.750"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.759" endtime="20201030 18:31:52.777"></status>
</kw>
<msg timestamp="20201030 18:31:52.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.758" endtime="20201030 18:31:52.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.778" endtime="20201030 18:31:52.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.781" endtime="20201030 18:31:52.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.755" endtime="20201030 18:31:52.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.753" endtime="20201030 18:31:52.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.790" endtime="20201030 18:31:53.077"></status>
</kw>
<msg timestamp="20201030 18:31:53.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02287225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022923347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:52.789" endtime="20201030 18:31:53.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02287225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022923347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:53.088" endtime="20201030 18:31:53.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.098" endtime="20201030 18:31:53.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.786" endtime="20201030 18:31:53.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.784" endtime="20201030 18:31:53.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:53.106" level="INFO">${RESULT} = [{'diff': 5.109699999999995e-05}, {'diff': 5.1137999999999184e-05}, {'diff': 5.1152000000002223e-05}, {'diff': 5.129099999999845e-05}, {'diff': 5.12080000000005e-05}, {'diff': 5.113899999999866e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:53.102" endtime="20201030 18:31:53.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:53.113" level="INFO">${ACCURACY} = {'diff': [5.109699999999995e-05, 5.1137999999999184e-05, 5.1152000000002223e-05, 5.129099999999845e-05, 5.12080000000005e-05, 5.113899999999866e-05, 5.136100000000324e-05, 5.122200000000007e-05, 5.144...</msg>
<status status="PASS" starttime="20201030 18:31:53.108" endtime="20201030 18:31:53.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.119" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 18:31:53.118" endtime="20201030 18:31:53.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.122" level="INFO">VALUE: [5.109699999999995e-05, 5.1137999999999184e-05, 5.1152000000002223e-05, 5.129099999999845e-05, 5.12080000000005e-05, 5.113899999999866e-05, 5.136100000000324e-05, 5.122200000000007e-05, 5.144500000000066e-05, 5.136099999999977e-05, 5.140299999999848e-05, 5.041700000000052e-05, 5.132000000000053e-05, 5.124999999999921e-05, 5.118100000000084e-05, 5.12080000000005e-05, 5.130600000000096e-05, 5.130600000000096e-05, 5.115299999999823e-05, 5.11530000000017e-05, 5.124999999999921e-05, 5.13470000000002e-05, 5.130599999999749e-05, 5.127800000000182e-05, 5.127799999999835e-05, 5.136099999999977e-05, 5.118099999999737e-05, 5.119500000000041e-05, 5.109799999999942e-05, 5.127800000000182e-05, 5.130500000000149e-05, 5.127700000000235e-05, 5.12080000000005e-05, 5.1151999999998754e-05, 5.127799999999835e-05, 5.1429999999998144e-05, 5.129100000000192e-05, 5.126399999999878e-05, 5.122200000000007e-05, 5.130499999999802e-05, 5.131900000000106e-05, 5.1193999999997464e-05, 5.129200000000139e-05, 5.123599999999964e-05, 5.126400000000225e-05, 5.126399999999878e-05, 5.127799999999835e-05, 5.041700000000052e-05, 5.127800000000182e-05, 5.129199999999792e-05]</msg>
<status status="PASS" starttime="20201030 18:31:53.120" endtime="20201030 18:31:53.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.114" endtime="20201030 18:31:53.123"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:53.127" endtime="20201030 18:31:53.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.125" endtime="20201030 18:31:53.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.124" endtime="20201030 18:31:53.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.751" endtime="20201030 18:31:53.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.751" endtime="20201030 18:31:53.147"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.156" endtime="20201030 18:31:53.172"></status>
</kw>
<msg timestamp="20201030 18:31:53.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:53.154" endtime="20201030 18:31:53.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:53.174" endtime="20201030 18:31:53.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.176" endtime="20201030 18:31:53.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.152" endtime="20201030 18:31:53.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.150" endtime="20201030 18:31:53.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.185" endtime="20201030 18:31:53.477"></status>
</kw>
<msg timestamp="20201030 18:31:53.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021863569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021915917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:53.184" endtime="20201030 18:31:53.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021863569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021915917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:53.481" endtime="20201030 18:31:53.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.490" endtime="20201030 18:31:53.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.181" endtime="20201030 18:31:53.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.179" endtime="20201030 18:31:53.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:53.496" level="INFO">${RESULT} = [{'diff': 5.234800000000067e-05}, {'diff': 5.223700000000012e-05}, {'diff': 5.21669999999988e-05}, {'diff': 5.141700000000152e-05}, {'diff': 5.1415999999998574e-05}, {'diff': 5.2402000000000004e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:53.493" endtime="20201030 18:31:53.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:53.501" level="INFO">${ACCURACY} = {'diff': [5.234800000000067e-05, 5.223700000000012e-05, 5.21669999999988e-05, 5.141700000000152e-05, 5.1415999999998574e-05, 5.2402000000000004e-05, 5.2152000000003224e-05, 5.218000000000236e-05, 5.22...</msg>
<status status="PASS" starttime="20201030 18:31:53.497" endtime="20201030 18:31:53.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.505" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 18:31:53.504" endtime="20201030 18:31:53.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.508" level="INFO">VALUE: [5.234800000000067e-05, 5.223700000000012e-05, 5.21669999999988e-05, 5.141700000000152e-05, 5.1415999999998574e-05, 5.2402000000000004e-05, 5.2152000000003224e-05, 5.218000000000236e-05, 5.222200000000107e-05, 5.225000000000021e-05, 5.237500000000034e-05, 5.241699999999905e-05, 5.227800000000282e-05, 5.231900000000206e-05, 5.238899999999991e-05, 5.218099999999837e-05, 5.213899999999966e-05, 5.237500000000034e-05, 5.23470000000012e-05, 5.219400000000193e-05, 5.231899999999859e-05, 5.220900000000098e-05, 5.226399999999978e-05, 5.232000000000153e-05, 5.212500000000009e-05, 5.227799999999935e-05, 5.21669999999988e-05, 5.144500000000066e-05, 5.229199999999892e-05, 5.218099999999837e-05, 5.215299999999923e-05, 5.230599999999849e-05, 5.21530000000027e-05, 5.230500000000249e-05, 5.223600000000064e-05, 5.1415999999998574e-05, 5.238899999999991e-05, 5.226300000000031e-05, 5.226300000000031e-05, 5.2415999999999574e-05, 5.243100000000209e-05, 5.226399999999978e-05, 5.236100000000077e-05, 5.229199999999892e-05, 5.233300000000163e-05, 5.236100000000077e-05, 5.141700000000152e-05, 5.223600000000064e-05, 5.222200000000107e-05, 5.226399999999978e-05]</msg>
<status status="PASS" starttime="20201030 18:31:53.507" endtime="20201030 18:31:53.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.502" endtime="20201030 18:31:53.509"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:53.513" endtime="20201030 18:31:53.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.512" endtime="20201030 18:31:53.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.510" endtime="20201030 18:31:53.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.148" endtime="20201030 18:31:53.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.148" endtime="20201030 18:31:53.534"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.543" endtime="20201030 18:31:53.560"></status>
</kw>
<msg timestamp="20201030 18:31:53.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:53.541" endtime="20201030 18:31:53.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:53.562" endtime="20201030 18:31:53.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.564" endtime="20201030 18:31:53.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.539" endtime="20201030 18:31:53.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.537" endtime="20201030 18:31:53.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.574" endtime="20201030 18:31:53.881"></status>
</kw>
<msg timestamp="20201030 18:31:53.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023604958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023657833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:53.572" endtime="20201030 18:31:53.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023604958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023657833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:53.885" endtime="20201030 18:31:53.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.894" endtime="20201030 18:31:53.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.570" endtime="20201030 18:31:53.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.568" endtime="20201030 18:31:53.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:53.902" level="INFO">${RESULT} = [{'diff': 5.287500000000084e-05}, {'diff': 5.3166000000000324e-05}, {'diff': 5.2415999999999574e-05}, {'diff': 5.3193999999999464e-05}, {'diff': 5.330500000000002e-05}, {'diff': 5.329100000000045e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:53.898" endtime="20201030 18:31:53.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:53.907" level="INFO">${ACCURACY} = {'diff': [5.287500000000084e-05, 5.3166000000000324e-05, 5.2415999999999574e-05, 5.3193999999999464e-05, 5.330500000000002e-05, 5.329100000000045e-05, 5.330500000000002e-05, 5.337500000000134e-05, 5.3...</msg>
<status status="PASS" starttime="20201030 18:31:53.903" endtime="20201030 18:31:53.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.913" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 18:31:53.911" endtime="20201030 18:31:53.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.917" level="INFO">VALUE: [5.287500000000084e-05, 5.3166000000000324e-05, 5.2415999999999574e-05, 5.3193999999999464e-05, 5.330500000000002e-05, 5.329100000000045e-05, 5.330500000000002e-05, 5.337500000000134e-05, 5.341700000000005e-05, 5.3263999999997313e-05, 5.331899999999959e-05, 5.318099999999937e-05, 5.327800000000035e-05, 5.319499999999894e-05, 5.320899999999851e-05, 5.313900000000066e-05, 5.341700000000005e-05, 5.326400000000078e-05, 5.340300000000048e-05, 5.329199999999992e-05, 5.3263999999997313e-05, 5.319499999999894e-05, 5.337500000000134e-05, 5.331899999999959e-05, 5.329199999999992e-05, 5.322200000000207e-05, 5.326300000000131e-05, 5.333299999999916e-05, 5.333300000000263e-05, 5.330500000000002e-05, 5.3193999999999464e-05, 5.315300000000023e-05, 5.327800000000035e-05, 5.315300000000023e-05, 5.3179999999999894e-05, 5.331899999999959e-05, 5.337499999999787e-05, 5.3235999999998174e-05, 5.334699999999873e-05, 5.329199999999992e-05, 5.3207999999999034e-05, 5.337500000000134e-05, 5.311100000000152e-05, 5.331999999999906e-05, 5.319500000000241e-05, 5.333299999999916e-05, 5.3221999999998604e-05, 5.3180000000003363e-05, 5.31669999999998e-05, 5.326400000000078e-05]</msg>
<status status="PASS" starttime="20201030 18:31:53.914" endtime="20201030 18:31:53.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.908" endtime="20201030 18:31:53.918"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:53.924" endtime="20201030 18:31:53.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.923" endtime="20201030 18:31:53.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.921" endtime="20201030 18:31:53.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.535" endtime="20201030 18:31:53.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.534" endtime="20201030 18:31:53.945"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.954" endtime="20201030 18:31:53.971"></status>
</kw>
<msg timestamp="20201030 18:31:53.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:53.952" endtime="20201030 18:31:53.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:53.973" endtime="20201030 18:31:53.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.975" endtime="20201030 18:31:53.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.950" endtime="20201030 18:31:53.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.948" endtime="20201030 18:31:53.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.985" endtime="20201030 18:31:54.270"></status>
</kw>
<msg timestamp="20201030 18:31:54.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022525597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:53.983" endtime="20201030 18:31:54.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022525597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:54.274" endtime="20201030 18:31:54.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.282" endtime="20201030 18:31:54.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.980" endtime="20201030 18:31:54.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.979" endtime="20201030 18:31:54.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:54.289" level="INFO">${RESULT} = [{'diff': 5.4430000000001144e-05}, {'diff': 5.437499999999887e-05}, {'diff': 5.426400000000178e-05}, {'diff': 5.437499999999887e-05}, {'diff': 5.431900000000059e-05}, {'diff': 5.429200000000092e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:54.286" endtime="20201030 18:31:54.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:54.296" level="INFO">${ACCURACY} = {'diff': [5.4430000000001144e-05, 5.437499999999887e-05, 5.426400000000178e-05, 5.437499999999887e-05, 5.431900000000059e-05, 5.429200000000092e-05, 5.344500000000266e-05, 5.4263999999998314e-05, 5.43...</msg>
<status status="PASS" starttime="20201030 18:31:54.290" endtime="20201030 18:31:54.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.301" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 18:31:54.300" endtime="20201030 18:31:54.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.304" level="INFO">VALUE: [5.4430000000001144e-05, 5.437499999999887e-05, 5.426400000000178e-05, 5.437499999999887e-05, 5.431900000000059e-05, 5.429200000000092e-05, 5.344500000000266e-05, 5.4263999999998314e-05, 5.434699999999973e-05, 5.411099999999905e-05, 5.343099999999962e-05, 5.429200000000092e-05, 5.412500000000209e-05, 5.41670000000008e-05, 5.4221999999999604e-05, 5.441700000000105e-05, 5.436199999999877e-05, 5.441700000000105e-05, 5.440300000000148e-05, 5.437499999999887e-05, 5.426400000000178e-05, 5.4208000000000034e-05, 5.4165999999997855e-05, 5.408299999999991e-05, 5.43470000000032e-05, 5.412499999999862e-05, 5.4180000000000894e-05, 5.3443999999999714e-05, 5.425000000000221e-05, 5.415300000000123e-05, 5.437499999999887e-05, 5.4249999999998744e-05, 5.441700000000105e-05, 5.4277999999997883e-05, 5.409699999999948e-05, 5.4208000000000034e-05, 5.415299999999776e-05, 5.4221999999999604e-05, 5.41809999999969e-05, 5.437499999999887e-05, 5.418100000000037e-05, 5.43479999999992e-05, 5.420899999999951e-05, 5.341700000000005e-05, 5.4249999999998744e-05, 5.440300000000148e-05, 5.426400000000178e-05, 5.422299999999908e-05, 5.418100000000037e-05, 5.433399999999963e-05]</msg>
<status status="PASS" starttime="20201030 18:31:54.302" endtime="20201030 18:31:54.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.297" endtime="20201030 18:31:54.305"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:54.310" endtime="20201030 18:31:54.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.308" endtime="20201030 18:31:54.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.307" endtime="20201030 18:31:54.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.946" endtime="20201030 18:31:54.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.946" endtime="20201030 18:31:54.331"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.340" endtime="20201030 18:31:54.356"></status>
</kw>
<msg timestamp="20201030 18:31:54.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:54.338" endtime="20201030 18:31:54.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:54.357" endtime="20201030 18:31:54.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.360" endtime="20201030 18:31:54.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.335" endtime="20201030 18:31:54.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.333" endtime="20201030 18:31:54.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.369" endtime="20201030 18:31:54.669"></status>
</kw>
<msg timestamp="20201030 18:31:54.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021995069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:54.368" endtime="20201030 18:31:54.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021995069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:54.673" endtime="20201030 18:31:54.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.682" endtime="20201030 18:31:54.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.365" endtime="20201030 18:31:54.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.363" endtime="20201030 18:31:54.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:54.688" level="INFO">${RESULT} = [{'diff': 5.5236000000000174e-05}, {'diff': 5.5416000000002574e-05}, {'diff': 5.534700000000073e-05}, {'diff': 5.5193999999997995e-05}, {'diff': 5.5180000000001894e-05}, {'diff': 5.533300000000116e-05...</msg>
<status status="PASS" starttime="20201030 18:31:54.685" endtime="20201030 18:31:54.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:54.692" level="INFO">${ACCURACY} = {'diff': [5.5236000000000174e-05, 5.5416000000002574e-05, 5.534700000000073e-05, 5.5193999999997995e-05, 5.5180000000001894e-05, 5.533300000000116e-05, 5.5165999999998855e-05, 5.5221999999997134e-05, ...</msg>
<status status="PASS" starttime="20201030 18:31:54.689" endtime="20201030 18:31:54.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.697" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 18:31:54.696" endtime="20201030 18:31:54.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.699" level="INFO">VALUE: [5.5236000000000174e-05, 5.5416000000002574e-05, 5.534700000000073e-05, 5.5193999999997995e-05, 5.5180000000001894e-05, 5.533300000000116e-05, 5.5165999999998855e-05, 5.5221999999997134e-05, 5.529100000000245e-05, 5.5165999999998855e-05, 5.534699999999726e-05, 5.541700000000205e-05, 5.537499999999987e-05, 5.5207999999997565e-05, 5.537499999999987e-05, 5.540299999999901e-05, 5.440300000000148e-05, 5.530600000000149e-05, 5.5291999999998453e-05, 5.51670000000018e-05, 5.5236000000000174e-05, 5.5277999999998884e-05, 5.5221999999997134e-05, 5.520900000000051e-05, 5.532000000000106e-05, 5.531999999999759e-05, 5.530600000000149e-05, 5.5305999999998023e-05, 5.522300000000008e-05, 5.534700000000073e-05, 5.526299999999984e-05, 5.5179999999998425e-05, 5.5236000000000174e-05, 5.515299999999876e-05, 5.5458000000001284e-05, 5.518100000000137e-05, 5.543099999999815e-05, 5.53610000000003e-05, 5.5430000000002144e-05, 5.5236000000000174e-05, 5.533300000000116e-05, 5.513899999999919e-05, 5.513900000000266e-05, 5.443099999999715e-05, 5.519500000000094e-05, 5.530600000000149e-05, 5.534699999999726e-05, 5.5222000000000604e-05, 5.515299999999876e-05, 5.5263999999999314e-05]</msg>
<status status="PASS" starttime="20201030 18:31:54.698" endtime="20201030 18:31:54.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.693" endtime="20201030 18:31:54.701"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:54.704" endtime="20201030 18:31:54.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.703" endtime="20201030 18:31:54.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.702" endtime="20201030 18:31:54.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.332" endtime="20201030 18:31:54.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.331" endtime="20201030 18:31:54.725"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.734" endtime="20201030 18:31:54.751"></status>
</kw>
<msg timestamp="20201030 18:31:54.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:54.732" endtime="20201030 18:31:54.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:54.753" endtime="20201030 18:31:54.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.755" endtime="20201030 18:31:54.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.730" endtime="20201030 18:31:54.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.728" endtime="20201030 18:31:54.758"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.764" endtime="20201030 18:31:55.050"></status>
</kw>
<msg timestamp="20201030 18:31:55.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023205958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023262, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:54.763" endtime="20201030 18:31:55.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023205958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023262, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:55.055" endtime="20201030 18:31:55.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.063" endtime="20201030 18:31:55.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.760" endtime="20201030 18:31:55.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.759" endtime="20201030 18:31:55.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:55.069" level="INFO">${RESULT} = [{'diff': 5.604200000000267e-05}, {'diff': 5.6222000000001604e-05}, {'diff': 5.630600000000249e-05}, {'diff': 5.634700000000173e-05}, {'diff': 5.619500000000194e-05}, {'diff': 5.641699999999958e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:55.066" endtime="20201030 18:31:55.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:55.074" level="INFO">${ACCURACY} = {'diff': [5.604200000000267e-05, 5.6222000000001604e-05, 5.630600000000249e-05, 5.634700000000173e-05, 5.619500000000194e-05, 5.641699999999958e-05, 5.616699999999933e-05, 5.6250000000000744e-05, 5.61...</msg>
<status status="PASS" starttime="20201030 18:31:55.070" endtime="20201030 18:31:55.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.078" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 18:31:55.077" endtime="20201030 18:31:55.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.081" level="INFO">VALUE: [5.604200000000267e-05, 5.6222000000001604e-05, 5.630600000000249e-05, 5.634700000000173e-05, 5.619500000000194e-05, 5.641699999999958e-05, 5.616699999999933e-05, 5.6250000000000744e-05, 5.612500000000062e-05, 5.6416000000000105e-05, 5.6277999999999884e-05, 5.622300000000108e-05, 5.6236000000001174e-05, 5.5443999999998245e-05, 5.6429999999999675e-05, 5.634699999999826e-05, 5.6387999999997496e-05, 5.6165999999999855e-05, 5.633299999999869e-05, 5.6179999999999425e-05, 5.630499999999955e-05, 5.640300000000001e-05, 5.5444000000001714e-05, 5.6236000000001174e-05, 5.609700000000148e-05, 5.6250000000000744e-05, 5.613900000000019e-05, 5.6264000000000314e-05, 5.641699999999958e-05, 5.640300000000001e-05, 5.609700000000148e-05, 5.633299999999869e-05, 5.6305999999999023e-05, 5.615299999999976e-05, 5.609699999999801e-05, 5.637500000000087e-05, 5.6291999999999454e-05, 5.6236000000001174e-05, 5.6264000000000314e-05, 5.6263999999996844e-05, 5.6235999999997704e-05, 5.543100000000162e-05, 5.630600000000249e-05, 5.61809999999989e-05, 5.6222000000001604e-05, 5.6180000000002894e-05, 5.629099999999998e-05, 5.637500000000087e-05, 5.6208000000002034e-05, 5.630499999999955e-05]</msg>
<status status="PASS" starttime="20201030 18:31:55.079" endtime="20201030 18:31:55.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.075" endtime="20201030 18:31:55.083"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:55.087" endtime="20201030 18:31:55.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.085" endtime="20201030 18:31:55.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.084" endtime="20201030 18:31:55.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.726" endtime="20201030 18:31:55.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.726" endtime="20201030 18:31:55.107"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.116" endtime="20201030 18:31:55.133"></status>
</kw>
<msg timestamp="20201030 18:31:55.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.114" endtime="20201030 18:31:55.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.134" endtime="20201030 18:31:55.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.137" endtime="20201030 18:31:55.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.112" endtime="20201030 18:31:55.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.110" endtime="20201030 18:31:55.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.146" endtime="20201030 18:31:55.431"></status>
</kw>
<msg timestamp="20201030 18:31:55.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021967139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022024292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:55.144" endtime="20201030 18:31:55.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021967139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022024292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:55.435" endtime="20201030 18:31:55.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.443" endtime="20201030 18:31:55.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.142" endtime="20201030 18:31:55.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.140" endtime="20201030 18:31:55.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:55.450" level="INFO">${RESULT} = [{'diff': 5.715300000000076e-05}, {'diff': 5.7388000000001965e-05}, {'diff': 5.7333999999999163e-05}, {'diff': 5.7278000000000884e-05}, {'diff': 5.7166000000000855e-05}, {'diff': 5.7263999999997844e-0...</msg>
<status status="PASS" starttime="20201030 18:31:55.447" endtime="20201030 18:31:55.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:55.455" level="INFO">${ACCURACY} = {'diff': [5.715300000000076e-05, 5.7388000000001965e-05, 5.7333999999999163e-05, 5.7278000000000884e-05, 5.7166000000000855e-05, 5.7263999999997844e-05, 5.7249999999998274e-05, 5.7264000000001314e-05,...</msg>
<status status="PASS" starttime="20201030 18:31:55.451" endtime="20201030 18:31:55.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.460" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 18:31:55.459" endtime="20201030 18:31:55.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.462" level="INFO">VALUE: [5.715300000000076e-05, 5.7388000000001965e-05, 5.7333999999999163e-05, 5.7278000000000884e-05, 5.7166000000000855e-05, 5.7263999999997844e-05, 5.7249999999998274e-05, 5.7264000000001314e-05, 5.7193999999999995e-05, 5.7165999999997386e-05, 5.7249999999998274e-05, 5.7193999999999995e-05, 5.7180000000000425e-05, 5.738900000000144e-05, 5.716700000000033e-05, 5.7264000000001314e-05, 5.7193999999999995e-05, 5.713899999999772e-05, 5.731900000000012e-05, 5.738900000000144e-05, 5.7222000000002604e-05, 5.733299999999969e-05, 5.73749999999984e-05, 5.734799999999873e-05, 5.7306000000000024e-05, 5.716700000000033e-05, 5.7319999999999593e-05, 5.719499999999947e-05, 5.7236000000002174e-05, 5.7235999999998705e-05, 5.715300000000076e-05, 5.737500000000187e-05, 5.734799999999873e-05, 5.7263999999997844e-05, 5.738900000000144e-05, 5.7152000000001285e-05, 5.7193999999999995e-05, 5.7180000000000425e-05, 5.6429999999999675e-05, 5.731900000000012e-05, 5.7416000000001105e-05, 5.7180000000000425e-05, 5.733299999999969e-05, 5.740300000000101e-05, 5.73749999999984e-05, 5.716699999999686e-05, 5.7249999999998274e-05, 5.734700000000273e-05, 5.7221999999999135e-05, 5.7235999999998705e-05]</msg>
<status status="PASS" starttime="20201030 18:31:55.461" endtime="20201030 18:31:55.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.456" endtime="20201030 18:31:55.463"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:55.467" endtime="20201030 18:31:55.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.466" endtime="20201030 18:31:55.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.464" endtime="20201030 18:31:55.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.108" endtime="20201030 18:31:55.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.108" endtime="20201030 18:31:55.488"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.498" endtime="20201030 18:31:55.514"></status>
</kw>
<msg timestamp="20201030 18:31:55.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.496" endtime="20201030 18:31:55.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.516" endtime="20201030 18:31:55.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.518" endtime="20201030 18:31:55.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.493" endtime="20201030 18:31:55.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.491" endtime="20201030 18:31:55.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.528" endtime="20201030 18:31:55.815"></status>
</kw>
<msg timestamp="20201030 18:31:55.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023563694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02362175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:55.526" endtime="20201030 18:31:55.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023563694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02362175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:55.819" endtime="20201030 18:31:55.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.827" endtime="20201030 18:31:55.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.523" endtime="20201030 18:31:55.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.522" endtime="20201030 18:31:55.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:55.834" level="INFO">${RESULT} = [{'diff': 5.8056000000000774e-05}, {'diff': 5.8249999999999275e-05}, {'diff': 5.8208000000000565e-05}, {'diff': 5.838899999999897e-05}, {'diff': 5.816700000000133e-05}, {'diff': 5.819500000000047e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:55.831" endtime="20201030 18:31:55.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:55.838" level="INFO">${ACCURACY} = {'diff': [5.8056000000000774e-05, 5.8249999999999275e-05, 5.8208000000000565e-05, 5.838899999999897e-05, 5.816700000000133e-05, 5.819500000000047e-05, 5.836099999999983e-05, 5.834700000000026e-05, 5.8...</msg>
<status status="PASS" starttime="20201030 18:31:55.835" endtime="20201030 18:31:55.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.843" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 18:31:55.842" endtime="20201030 18:31:55.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.845" level="INFO">VALUE: [5.8056000000000774e-05, 5.8249999999999275e-05, 5.8208000000000565e-05, 5.838899999999897e-05, 5.816700000000133e-05, 5.819500000000047e-05, 5.836099999999983e-05, 5.834700000000026e-05, 5.8194999999997e-05, 5.83749999999994e-05, 5.822300000000308e-05, 5.8334000000000163e-05, 5.8291999999997984e-05, 5.8334000000000163e-05, 5.81810000000009e-05, 5.820900000000004e-05, 5.7429999999997206e-05, 5.831900000000112e-05, 5.8151999999998816e-05, 5.83749999999994e-05, 5.8179999999997956e-05, 5.8208000000000565e-05, 5.8222000000000135e-05, 5.8194000000000995e-05, 5.813899999999872e-05, 5.8334000000000163e-05, 5.81810000000009e-05, 5.8263999999998844e-05, 5.8306000000001024e-05, 5.8291999999997984e-05, 5.8194000000000995e-05, 5.841700000000158e-05, 5.840300000000201e-05, 5.8235999999999705e-05, 5.819500000000047e-05, 5.816700000000133e-05, 5.840300000000201e-05, 5.8320000000000594e-05, 5.8319999999997124e-05, 5.8208000000000565e-05, 5.820900000000004e-05, 5.8194000000000995e-05, 5.815299999999829e-05, 5.819500000000047e-05, 5.838899999999897e-05, 5.8193999999997525e-05, 5.8249999999999275e-05, 5.833299999999722e-05, 5.7444000000000245e-05, 5.812499999999915e-05]</msg>
<status status="PASS" starttime="20201030 18:31:55.844" endtime="20201030 18:31:55.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.839" endtime="20201030 18:31:55.847"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:55.850" endtime="20201030 18:31:55.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.849" endtime="20201030 18:31:55.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.848" endtime="20201030 18:31:55.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.489" endtime="20201030 18:31:55.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.488" endtime="20201030 18:31:55.871"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.880" endtime="20201030 18:31:55.897"></status>
</kw>
<msg timestamp="20201030 18:31:55.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.878" endtime="20201030 18:31:55.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.899" endtime="20201030 18:31:55.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.901" endtime="20201030 18:31:55.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.876" endtime="20201030 18:31:55.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.873" endtime="20201030 18:31:55.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.910" endtime="20201030 18:31:56.195"></status>
</kw>
<msg timestamp="20201030 18:31:56.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022969208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023028667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:55.909" endtime="20201030 18:31:56.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022969208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023028667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:56.200" endtime="20201030 18:31:56.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.208" endtime="20201030 18:31:56.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.906" endtime="20201030 18:31:56.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.904" endtime="20201030 18:31:56.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:56.214" level="INFO">${RESULT} = [{'diff': 5.945899999999782e-05}, {'diff': 5.916699999999886e-05}, {'diff': 5.940299999999954e-05}, {'diff': 5.934700000000126e-05}, {'diff': 5.922300000000061e-05}, {'diff': 5.922300000000061e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:56.211" endtime="20201030 18:31:56.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:56.219" level="INFO">${ACCURACY} = {'diff': [5.945899999999782e-05, 5.916699999999886e-05, 5.940299999999954e-05, 5.934700000000126e-05, 5.922300000000061e-05, 5.922300000000061e-05, 5.936100000000083e-05, 5.9415999999999636e-05, 5.934...</msg>
<status status="PASS" starttime="20201030 18:31:56.216" endtime="20201030 18:31:56.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.223" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 18:31:56.222" endtime="20201030 18:31:56.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.226" level="INFO">VALUE: [5.945899999999782e-05, 5.916699999999886e-05, 5.940299999999954e-05, 5.934700000000126e-05, 5.922300000000061e-05, 5.922300000000061e-05, 5.936100000000083e-05, 5.9415999999999636e-05, 5.934700000000126e-05, 5.936100000000083e-05, 5.922299999999714e-05, 5.8472000000000385e-05, 5.9179999999998956e-05, 5.931900000000212e-05, 5.9222000000001135e-05, 5.940299999999954e-05, 5.931899999999865e-05, 5.840299999999854e-05, 5.915299999999929e-05, 5.9222000000001135e-05, 5.938899999999997e-05, 5.9207999999998095e-05, 5.841700000000158e-05, 5.934700000000126e-05, 5.9362000000000303e-05, 5.9319999999998124e-05, 5.9221999999997665e-05, 5.93750000000004e-05, 5.941700000000258e-05, 5.919500000000147e-05, 5.9402000000000066e-05, 5.933299999999822e-05, 5.9305999999998554e-05, 5.915299999999929e-05, 5.9165999999999386e-05, 5.9180000000002425e-05, 5.933300000000169e-05, 5.930499999999908e-05, 5.9151999999999816e-05, 5.930499999999908e-05, 5.9222000000001135e-05, 5.9278000000002884e-05, 5.9194000000001995e-05, 5.915299999999929e-05, 5.91810000000019e-05, 5.9193999999998526e-05, 5.9222000000001135e-05, 5.940299999999954e-05, 5.9320000000001594e-05, 5.93750000000004e-05]</msg>
<status status="PASS" starttime="20201030 18:31:56.224" endtime="20201030 18:31:56.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.219" endtime="20201030 18:31:56.232"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:56.236" endtime="20201030 18:31:56.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.234" endtime="20201030 18:31:56.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.233" endtime="20201030 18:31:56.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.872" endtime="20201030 18:31:56.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.871" endtime="20201030 18:31:56.257"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.265" endtime="20201030 18:31:56.283"></status>
</kw>
<msg timestamp="20201030 18:31:56.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:56.264" endtime="20201030 18:31:56.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:56.285" endtime="20201030 18:31:56.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.288" endtime="20201030 18:31:56.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.261" endtime="20201030 18:31:56.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.259" endtime="20201030 18:31:56.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.297" endtime="20201030 18:31:56.582"></status>
</kw>
<msg timestamp="20201030 18:31:56.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021972875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022032403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:56.295" endtime="20201030 18:31:56.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021972875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022032403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:56.587" endtime="20201030 18:31:56.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.595" endtime="20201030 18:31:56.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.293" endtime="20201030 18:31:56.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.291" endtime="20201030 18:31:56.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:56.601" level="INFO">${RESULT} = [{'diff': 5.9527999999999665e-05}, {'diff': 6.041700000000011e-05}, {'diff': 6.0305999999999554e-05}, {'diff': 6.022299999999814e-05}, {'diff': 6.0319999999999124e-05}, {'diff': 6.020900000000204e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:56.598" endtime="20201030 18:31:56.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:56.607" level="INFO">${ACCURACY} = {'diff': [5.9527999999999665e-05, 6.041700000000011e-05, 6.0305999999999554e-05, 6.022299999999814e-05, 6.0319999999999124e-05, 6.020900000000204e-05, 5.943100000000215e-05, 6.0179999999999956e-05, 6....</msg>
<status status="PASS" starttime="20201030 18:31:56.602" endtime="20201030 18:31:56.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.611" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 18:31:56.610" endtime="20201030 18:31:56.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.614" level="INFO">VALUE: [5.9527999999999665e-05, 6.041700000000011e-05, 6.0305999999999554e-05, 6.022299999999814e-05, 6.0319999999999124e-05, 6.020900000000204e-05, 5.943100000000215e-05, 6.0179999999999956e-05, 6.033300000000269e-05, 6.034700000000226e-05, 6.031899999999965e-05, 6.0235999999998235e-05, 6.038900000000097e-05, 6.030500000000008e-05, 6.0264000000000845e-05, 6.031899999999965e-05, 6.0235999999998235e-05, 6.034699999999879e-05, 6.0278000000000415e-05, 6.030500000000008e-05, 6.034700000000226e-05, 6.015300000000029e-05, 6.0250000000001275e-05, 6.040300000000054e-05, 6.040300000000054e-05, 6.0235999999998235e-05, 6.037499999999793e-05, 6.040299999999707e-05, 6.0235999999998235e-05, 6.0236000000001705e-05, 6.016699999999986e-05, 6.0264000000000845e-05, 6.015300000000029e-05, 6.037499999999793e-05, 6.022299999999814e-05, 6.0249999999997805e-05, 6.022300000000161e-05, 6.0388000000001496e-05, 6.036100000000183e-05, 6.0194000000002995e-05, 6.0166000000000386e-05, 6.0165999999996916e-05, 6.0263999999997375e-05, 6.0264000000000845e-05, 6.036099999999836e-05, 6.0222000000002135e-05, 6.0207999999999096e-05, 6.0193999999999526e-05, 6.015300000000029e-05, 6.0277999999996945e-05]</msg>
<status status="PASS" starttime="20201030 18:31:56.612" endtime="20201030 18:31:56.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.607" endtime="20201030 18:31:56.615"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:56.619" endtime="20201030 18:31:56.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.617" endtime="20201030 18:31:56.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.616" endtime="20201030 18:31:56.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.258" endtime="20201030 18:31:56.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.257" endtime="20201030 18:31:56.639"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.648" endtime="20201030 18:31:56.665"></status>
</kw>
<msg timestamp="20201030 18:31:56.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:56.646" endtime="20201030 18:31:56.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:56.666" endtime="20201030 18:31:56.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.669" endtime="20201030 18:31:56.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.644" endtime="20201030 18:31:56.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.642" endtime="20201030 18:31:56.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.678" endtime="20201030 18:31:56.964"></status>
</kw>
<msg timestamp="20201030 18:31:56.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021966153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:56.676" endtime="20201030 18:31:56.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021966153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:56.968" endtime="20201030 18:31:56.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.977" endtime="20201030 18:31:56.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.674" endtime="20201030 18:31:56.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.672" endtime="20201030 18:31:56.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:56.983" level="INFO">${RESULT} = [{'diff': 6.0916000000001136e-05}, {'diff': 6.129100000000151e-05}, {'diff': 6.12080000000001e-05}, {'diff': 6.13889999999985e-05}, {'diff': 6.12080000000001e-05}, {'diff': 6.126400000000184e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:31:56.980" endtime="20201030 18:31:56.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:56.987" level="INFO">${ACCURACY} = {'diff': [6.0916000000001136e-05, 6.129100000000151e-05, 6.12080000000001e-05, 6.13889999999985e-05, 6.12080000000001e-05, 6.126400000000184e-05, 6.125000000000227e-05, 6.133300000000022e-05, 6.118000...</msg>
<status status="PASS" starttime="20201030 18:31:56.984" endtime="20201030 18:31:56.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.992" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 18:31:56.991" endtime="20201030 18:31:56.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.994" level="INFO">VALUE: [6.0916000000001136e-05, 6.129100000000151e-05, 6.12080000000001e-05, 6.13889999999985e-05, 6.12080000000001e-05, 6.126400000000184e-05, 6.125000000000227e-05, 6.133300000000022e-05, 6.118000000000096e-05, 6.133300000000022e-05, 6.116700000000086e-05, 6.134699999999979e-05, 6.129200000000098e-05, 6.116700000000086e-05, 6.130600000000055e-05, 6.14019999999986e-05, 6.133300000000022e-05, 6.116700000000086e-05, 6.13339999999997e-05, 6.116699999999739e-05, 6.116700000000086e-05, 6.1195e-05, 6.130600000000055e-05, 6.126400000000184e-05, 6.115299999999782e-05, 6.126400000000184e-05, 6.127800000000141e-05, 6.127700000000194e-05, 6.12080000000001e-05, 6.131900000000065e-05, 6.115300000000129e-05, 6.117999999999749e-05, 6.0430000000000206e-05, 6.12080000000001e-05, 6.133300000000022e-05, 6.132000000000012e-05, 6.125000000000227e-05, 6.0430000000000206e-05, 6.122199999999967e-05, 6.131900000000065e-05, 6.129200000000098e-05, 6.044499999999925e-05, 6.123599999999924e-05, 6.12080000000001e-05, 6.044499999999925e-05, 6.041700000000011e-05, 6.118100000000043e-05, 6.130599999999709e-05, 6.120899999999957e-05, 6.130599999999709e-05]</msg>
<status status="PASS" starttime="20201030 18:31:56.993" endtime="20201030 18:31:56.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.988" endtime="20201030 18:31:56.996"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:56.999" endtime="20201030 18:31:57.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.998" endtime="20201030 18:31:57.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.997" endtime="20201030 18:31:57.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.640" endtime="20201030 18:31:57.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.640" endtime="20201030 18:31:57.020"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.029" endtime="20201030 18:31:57.046"></status>
</kw>
<msg timestamp="20201030 18:31:57.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.027" endtime="20201030 18:31:57.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.048" endtime="20201030 18:31:57.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.050" endtime="20201030 18:31:57.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.025" endtime="20201030 18:31:57.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.022" endtime="20201030 18:31:57.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.059" endtime="20201030 18:31:57.344"></status>
</kw>
<msg timestamp="20201030 18:31:57.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022785222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022846792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:57.058" endtime="20201030 18:31:57.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022785222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022846792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:57.348" endtime="20201030 18:31:57.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.356" endtime="20201030 18:31:57.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.055" endtime="20201030 18:31:57.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.053" endtime="20201030 18:31:57.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:57.363" level="INFO">${RESULT} = [{'diff': 6.157000000000037e-05}, {'diff': 6.242999999999874e-05}, {'diff': 6.241600000000264e-05}, {'diff': 6.229200000000198e-05}, {'diff': 6.218000000000196e-05}, {'diff': 6.219399999999806e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:57.360" endtime="20201030 18:31:57.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:57.367" level="INFO">${ACCURACY} = {'diff': [6.157000000000037e-05, 6.242999999999874e-05, 6.241600000000264e-05, 6.229200000000198e-05, 6.218000000000196e-05, 6.219399999999806e-05, 6.145800000000035e-05, 6.227799999999895e-05, 6.2249...</msg>
<status status="PASS" starttime="20201030 18:31:57.364" endtime="20201030 18:31:57.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.372" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 18:31:57.371" endtime="20201030 18:31:57.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.375" level="INFO">VALUE: [6.157000000000037e-05, 6.242999999999874e-05, 6.241600000000264e-05, 6.229200000000198e-05, 6.218000000000196e-05, 6.219399999999806e-05, 6.145800000000035e-05, 6.227799999999895e-05, 6.22499999999998e-05, 6.215200000000282e-05, 6.22499999999998e-05, 6.137499999999893e-05, 6.236100000000036e-05, 6.237499999999993e-05, 6.218100000000143e-05, 6.231900000000165e-05, 6.213899999999925e-05, 6.218099999999796e-05, 6.216700000000186e-05, 6.215299999999882e-05, 6.226399999999938e-05, 6.23889999999995e-05, 6.22499999999998e-05, 6.2195000000001e-05, 6.215299999999882e-05, 6.2195000000001e-05, 6.229199999999852e-05, 6.230599999999809e-05, 6.234700000000079e-05, 6.236100000000036e-05, 6.23340000000007e-05, 6.222200000000067e-05, 6.234700000000079e-05, 6.219400000000153e-05, 6.14300000000012e-05, 6.14439999999973e-05, 6.222200000000067e-05, 6.236100000000036e-05, 6.22499999999998e-05, 6.216599999999892e-05, 6.209700000000054e-05, 6.233300000000122e-05, 6.230499999999861e-05, 6.236100000000036e-05, 6.230600000000155e-05, 6.220799999999763e-05, 6.216700000000186e-05, 6.218100000000143e-05, 6.237499999999993e-05, 6.229200000000198e-05]</msg>
<status status="PASS" starttime="20201030 18:31:57.373" endtime="20201030 18:31:57.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.368" endtime="20201030 18:31:57.376"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:57.380" endtime="20201030 18:31:57.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.379" endtime="20201030 18:31:57.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.377" endtime="20201030 18:31:57.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.021" endtime="20201030 18:31:57.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.020" endtime="20201030 18:31:57.401"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.409" endtime="20201030 18:31:57.427"></status>
</kw>
<msg timestamp="20201030 18:31:57.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.408" endtime="20201030 18:31:57.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.428" endtime="20201030 18:31:57.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.431" endtime="20201030 18:31:57.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.405" endtime="20201030 18:31:57.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.403" endtime="20201030 18:31:57.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.440" endtime="20201030 18:31:57.726"></status>
</kw>
<msg timestamp="20201030 18:31:57.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021915375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021978458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:57.438" endtime="20201030 18:31:57.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021915375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021978458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:57.730" endtime="20201030 18:31:57.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.738" endtime="20201030 18:31:57.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.436" endtime="20201030 18:31:57.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.434" endtime="20201030 18:31:57.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:57.745" level="INFO">${RESULT} = [{'diff': 6.30829999999985e-05}, {'diff': 6.330499999999961e-05}, {'diff': 6.334699999999832e-05}, {'diff': 6.32219999999982e-05}, {'diff': 6.326400000000038e-05}, {'diff': 6.324999999999734e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:31:57.742" endtime="20201030 18:31:57.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:57.752" level="INFO">${ACCURACY} = {'diff': [6.30829999999985e-05, 6.330499999999961e-05, 6.334699999999832e-05, 6.32219999999982e-05, 6.326400000000038e-05, 6.324999999999734e-05, 6.240300000000254e-05, 6.244400000000178e-05, 6.327799...</msg>
<status status="PASS" starttime="20201030 18:31:57.746" endtime="20201030 18:31:57.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.757" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 18:31:57.756" endtime="20201030 18:31:57.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.760" level="INFO">VALUE: [6.30829999999985e-05, 6.330499999999961e-05, 6.334699999999832e-05, 6.32219999999982e-05, 6.326400000000038e-05, 6.324999999999734e-05, 6.240300000000254e-05, 6.244400000000178e-05, 6.327799999999995e-05, 6.326400000000038e-05, 6.330599999999909e-05, 6.337499999999746e-05, 6.327799999999995e-05, 6.32500000000008e-05, 6.318099999999896e-05, 6.327799999999995e-05, 6.33340000000017e-05, 6.24300000000022e-05, 6.341699999999964e-05, 6.316699999999939e-05, 6.336199999999736e-05, 6.318099999999896e-05, 6.241700000000211e-05, 6.342999999999974e-05, 6.331900000000265e-05, 6.330499999999961e-05, 6.32080000000021e-05, 6.326400000000038e-05, 6.327700000000047e-05, 6.317999999999949e-05, 6.316699999999939e-05, 6.315299999999982e-05, 6.319400000000253e-05, 6.334700000000179e-05, 6.319399999999906e-05, 6.329199999999952e-05, 6.331899999999918e-05, 6.331999999999866e-05, 6.313900000000025e-05, 6.32500000000008e-05, 6.323700000000071e-05, 6.320900000000157e-05, 6.320900000000157e-05, 6.32500000000008e-05, 6.334800000000126e-05, 6.330599999999909e-05, 6.322300000000114e-05, 6.241699999999864e-05, 6.331899999999918e-05, 6.331899999999918e-05]</msg>
<status status="PASS" starttime="20201030 18:31:57.758" endtime="20201030 18:31:57.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.753" endtime="20201030 18:31:57.761"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:57.765" endtime="20201030 18:31:57.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.763" endtime="20201030 18:31:57.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.762" endtime="20201030 18:31:57.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.402" endtime="20201030 18:31:57.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.401" endtime="20201030 18:31:57.785"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.794" endtime="20201030 18:31:57.811"></status>
</kw>
<msg timestamp="20201030 18:31:57.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.792" endtime="20201030 18:31:57.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.812" endtime="20201030 18:31:57.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.815" endtime="20201030 18:31:57.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.790" endtime="20201030 18:31:57.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.788" endtime="20201030 18:31:57.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.824" endtime="20201030 18:31:58.111"></status>
</kw>
<msg timestamp="20201030 18:31:58.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021949056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022013083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:57.823" endtime="20201030 18:31:58.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021949056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022013083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:58.115" endtime="20201030 18:31:58.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.123" endtime="20201030 18:31:58.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.820" endtime="20201030 18:31:58.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.818" endtime="20201030 18:31:58.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:58.130" level="INFO">${RESULT} = [{'diff': 6.402699999999775e-05}, {'diff': 6.427800000000095e-05}, {'diff': 6.436100000000236e-05}, {'diff': 6.415199999999788e-05}, {'diff': 6.436099999999889e-05}, {'diff': 6.434699999999932e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:58.127" endtime="20201030 18:31:58.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:58.134" level="INFO">${ACCURACY} = {'diff': [6.402699999999775e-05, 6.427800000000095e-05, 6.436100000000236e-05, 6.415199999999788e-05, 6.436099999999889e-05, 6.434699999999932e-05, 6.431999999999966e-05, 6.423599999999877e-05, 6.4306...</msg>
<status status="PASS" starttime="20201030 18:31:58.131" endtime="20201030 18:31:58.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.139" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 18:31:58.138" endtime="20201030 18:31:58.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.141" level="INFO">VALUE: [6.402699999999775e-05, 6.427800000000095e-05, 6.436100000000236e-05, 6.415199999999788e-05, 6.436099999999889e-05, 6.434699999999932e-05, 6.431999999999966e-05, 6.423599999999877e-05, 6.430600000000009e-05, 6.420799999999963e-05, 6.4195000000003e-05, 6.437499999999846e-05, 6.440300000000107e-05, 6.430600000000009e-05, 6.430600000000009e-05, 6.438899999999803e-05, 6.441700000000064e-05, 6.408400000000244e-05, 6.42080000000031e-05, 6.423599999999877e-05, 6.436200000000183e-05, 6.423700000000171e-05, 6.415199999999788e-05, 6.42500000000018e-05, 6.418000000000049e-05, 6.42500000000018e-05, 6.433299999999975e-05, 6.422200000000267e-05, 6.341600000000017e-05, 6.423599999999877e-05, 6.431900000000018e-05, 6.42219999999992e-05, 6.341600000000017e-05, 6.420799999999963e-05, 6.42639999999979e-05, 6.430600000000009e-05, 6.418099999999996e-05, 6.43890000000015e-05, 6.424999999999834e-05, 6.437499999999846e-05, 6.422200000000267e-05, 6.429200000000052e-05, 6.436099999999889e-05, 6.433399999999923e-05, 6.341699999999964e-05, 6.443100000000021e-05, 6.409800000000201e-05, 6.426299999999843e-05, 6.437500000000193e-05, 6.412500000000168e-05]</msg>
<status status="PASS" starttime="20201030 18:31:58.140" endtime="20201030 18:31:58.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.135" endtime="20201030 18:31:58.142"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:58.146" endtime="20201030 18:31:58.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.145" endtime="20201030 18:31:58.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.143" endtime="20201030 18:31:58.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.786" endtime="20201030 18:31:58.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.786" endtime="20201030 18:31:58.167"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.176" endtime="20201030 18:31:58.193"></status>
</kw>
<msg timestamp="20201030 18:31:58.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:58.174" endtime="20201030 18:31:58.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:58.195" endtime="20201030 18:31:58.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.197" endtime="20201030 18:31:58.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.171" endtime="20201030 18:31:58.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.169" endtime="20201030 18:31:58.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.206" endtime="20201030 18:31:58.492"></status>
</kw>
<msg timestamp="20201030 18:31:58.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022728556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022793403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:58.205" endtime="20201030 18:31:58.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022728556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022793403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:58.497" endtime="20201030 18:31:58.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.505" endtime="20201030 18:31:58.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.202" endtime="20201030 18:31:58.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.200" endtime="20201030 18:31:58.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:58.511" level="INFO">${RESULT} = [{'diff': 6.484699999999982e-05}, {'diff': 6.511099999999964e-05}, {'diff': 6.530499999999814e-05}, {'diff': 6.523699999999924e-05}, {'diff': 6.522299999999967e-05}, {'diff': 6.441699999999717e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:58.508" endtime="20201030 18:31:58.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:58.516" level="INFO">${ACCURACY} = {'diff': [6.484699999999982e-05, 6.511099999999964e-05, 6.530499999999814e-05, 6.523699999999924e-05, 6.522299999999967e-05, 6.441699999999717e-05, 6.530500000000161e-05, 6.54159999999987e-05, 6.53880...</msg>
<status status="PASS" starttime="20201030 18:31:58.512" endtime="20201030 18:31:58.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.520" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 18:31:58.519" endtime="20201030 18:31:58.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.522" level="INFO">VALUE: [6.484699999999982e-05, 6.511099999999964e-05, 6.530499999999814e-05, 6.523699999999924e-05, 6.522299999999967e-05, 6.441699999999717e-05, 6.530500000000161e-05, 6.54159999999987e-05, 6.538800000000303e-05, 6.533300000000075e-05, 6.518000000000149e-05, 6.523599999999977e-05, 6.443000000000074e-05, 6.523599999999977e-05, 6.534700000000032e-05, 6.531900000000118e-05, 6.441700000000064e-05, 6.513899999999878e-05, 6.533300000000075e-05, 6.52090000000001e-05, 6.536099999999989e-05, 6.524999999999934e-05, 6.520799999999716e-05, 6.534700000000032e-05, 6.53479999999998e-05, 6.52220000000002e-05, 6.519499999999706e-05, 6.516700000000139e-05, 6.523699999999924e-05, 6.519500000000053e-05, 6.541700000000164e-05, 6.524999999999934e-05, 6.515300000000182e-05, 6.52639999999989e-05, 6.526400000000238e-05, 6.545800000000088e-05, 6.518000000000149e-05, 6.52220000000002e-05, 6.537499999999946e-05, 6.52639999999989e-05, 6.520800000000063e-05, 6.526400000000238e-05, 6.52639999999989e-05, 6.538899999999903e-05, 6.536099999999989e-05, 6.533300000000075e-05, 6.538899999999903e-05, 6.516699999999792e-05, 6.513900000000225e-05, 6.54029999999986e-05]</msg>
<status status="PASS" starttime="20201030 18:31:58.521" endtime="20201030 18:31:58.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.516" endtime="20201030 18:31:58.525"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:58.528" endtime="20201030 18:31:58.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.527" endtime="20201030 18:31:58.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.526" endtime="20201030 18:31:58.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.168" endtime="20201030 18:31:58.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.167" endtime="20201030 18:31:58.549"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.558" endtime="20201030 18:31:58.575"></status>
</kw>
<msg timestamp="20201030 18:31:58.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:58.556" endtime="20201030 18:31:58.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:58.576" endtime="20201030 18:31:58.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.579" endtime="20201030 18:31:58.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.554" endtime="20201030 18:31:58.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.551" endtime="20201030 18:31:58.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.588" endtime="20201030 18:31:58.873"></status>
</kw>
<msg timestamp="20201030 18:31:58.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021992417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022058694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:58.586" endtime="20201030 18:31:58.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021992417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022058694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:58.878" endtime="20201030 18:31:58.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.886" endtime="20201030 18:31:58.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.584" endtime="20201030 18:31:58.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.582" endtime="20201030 18:31:58.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:58.892" level="INFO">${RESULT} = [{'diff': 6.6277e-05}, {'diff': 6.637500000000046e-05}, {'diff': 6.630499999999914e-05}, {'diff': 6.623600000000077e-05}, {'diff': 6.612500000000021e-05}, {'diff': 6.64029999999996e-05}, {'diff': 6.63...</msg>
<status status="PASS" starttime="20201030 18:31:58.889" endtime="20201030 18:31:58.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:58.897" level="INFO">${ACCURACY} = {'diff': [6.6277e-05, 6.637500000000046e-05, 6.630499999999914e-05, 6.623600000000077e-05, 6.612500000000021e-05, 6.64029999999996e-05, 6.634700000000132e-05, 6.634699999999785e-05, 6.631899999999871e...</msg>
<status status="PASS" starttime="20201030 18:31:58.893" endtime="20201030 18:31:58.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.902" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 18:31:58.901" endtime="20201030 18:31:58.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.905" level="INFO">VALUE: [6.6277e-05, 6.637500000000046e-05, 6.630499999999914e-05, 6.623600000000077e-05, 6.612500000000021e-05, 6.64029999999996e-05, 6.634700000000132e-05, 6.634699999999785e-05, 6.631899999999871e-05, 6.627799999999948e-05, 6.615299999999935e-05, 6.54029999999986e-05, 6.616699999999892e-05, 6.625000000000034e-05, 6.629199999999905e-05, 6.620799999999816e-05, 6.623600000000077e-05, 6.618099999999849e-05, 6.636100000000089e-05, 6.629199999999905e-05, 6.613899999999978e-05, 6.64029999999996e-05, 6.615300000000282e-05, 6.633400000000123e-05, 6.615299999999935e-05, 6.622300000000067e-05, 6.633400000000123e-05, 6.6277e-05, 6.620800000000163e-05, 6.642999999999927e-05, 6.629199999999905e-05, 6.631900000000218e-05, 6.62220000000012e-05, 6.616599999999945e-05, 6.536099999999989e-05, 6.618000000000249e-05, 6.625000000000034e-05, 6.629199999999905e-05, 6.616699999999892e-05, 6.62639999999999e-05, 6.633299999999828e-05, 6.62090000000011e-05, 6.618100000000196e-05, 6.543099999999774e-05, 6.612500000000021e-05, 6.615299999999935e-05, 6.613899999999978e-05, 6.623700000000024e-05, 6.543099999999774e-05, 6.634799999999733e-05]</msg>
<status status="PASS" starttime="20201030 18:31:58.903" endtime="20201030 18:31:58.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.898" endtime="20201030 18:31:58.906"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:58.910" endtime="20201030 18:31:58.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.908" endtime="20201030 18:31:58.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.907" endtime="20201030 18:31:58.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.550" endtime="20201030 18:31:58.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.549" endtime="20201030 18:31:58.930"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.939" endtime="20201030 18:31:58.957"></status>
</kw>
<msg timestamp="20201030 18:31:58.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:58.937" endtime="20201030 18:31:58.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:58.959" endtime="20201030 18:31:58.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.961" endtime="20201030 18:31:58.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.935" endtime="20201030 18:31:58.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.933" endtime="20201030 18:31:58.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.970" endtime="20201030 18:31:59.257"></status>
</kw>
<msg timestamp="20201030 18:31:59.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022048611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:58.969" endtime="20201030 18:31:59.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022048611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:59.262" endtime="20201030 18:31:59.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.270" endtime="20201030 18:31:59.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.966" endtime="20201030 18:31:59.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.964" endtime="20201030 18:31:59.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:59.277" level="INFO">${RESULT} = [{'diff': 6.745799999999941e-05}, {'diff': 6.725000000000134e-05}, {'diff': 6.731899999999971e-05}, {'diff': 6.642999999999927e-05}, {'diff': 6.719399999999959e-05}, {'diff': 6.72220000000022e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:59.273" endtime="20201030 18:31:59.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:59.281" level="INFO">${ACCURACY} = {'diff': [6.745799999999941e-05, 6.725000000000134e-05, 6.731899999999971e-05, 6.642999999999927e-05, 6.719399999999959e-05, 6.72220000000022e-05, 6.736100000000189e-05, 6.643100000000221e-05, 6.72090...</msg>
<status status="PASS" starttime="20201030 18:31:59.278" endtime="20201030 18:31:59.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.285" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 18:31:59.284" endtime="20201030 18:31:59.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.288" level="INFO">VALUE: [6.745799999999941e-05, 6.725000000000134e-05, 6.731899999999971e-05, 6.642999999999927e-05, 6.719399999999959e-05, 6.72220000000022e-05, 6.736100000000189e-05, 6.643100000000221e-05, 6.72090000000021e-05, 6.716699999999992e-05, 6.716699999999992e-05, 6.72359999999983e-05, 6.744399999999984e-05, 6.741700000000017e-05, 6.72090000000021e-05, 6.718000000000002e-05, 6.719500000000253e-05, 6.718099999999949e-05, 6.731899999999971e-05, 6.730500000000014e-05, 6.734699999999885e-05, 6.738900000000103e-05, 6.736100000000189e-05, 6.72220000000022e-05, 6.722199999999873e-05, 6.730500000000014e-05, 6.737499999999799e-05, 6.72640000000009e-05, 6.738900000000103e-05, 6.713900000000078e-05, 6.720800000000263e-05, 6.737499999999799e-05, 6.744399999999984e-05, 6.727800000000048e-05, 6.747199999999898e-05, 6.730599999999962e-05, 6.736100000000189e-05, 6.718099999999949e-05, 6.738900000000103e-05, 6.726299999999796e-05, 6.724999999999787e-05, 6.729100000000057e-05, 6.736100000000189e-05, 6.642999999999927e-05, 6.734700000000232e-05, 6.72640000000009e-05, 6.737500000000146e-05, 6.737500000000146e-05, 6.724999999999787e-05, 6.712499999999774e-05]</msg>
<status status="PASS" starttime="20201030 18:31:59.286" endtime="20201030 18:31:59.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.282" endtime="20201030 18:31:59.289"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:59.293" endtime="20201030 18:31:59.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.291" endtime="20201030 18:31:59.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.290" endtime="20201030 18:31:59.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.931" endtime="20201030 18:31:59.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.931" endtime="20201030 18:31:59.314"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.322" endtime="20201030 18:31:59.341"></status>
</kw>
<msg timestamp="20201030 18:31:59.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:59.321" endtime="20201030 18:31:59.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:59.343" endtime="20201030 18:31:59.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.345" endtime="20201030 18:31:59.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.318" endtime="20201030 18:31:59.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.316" endtime="20201030 18:31:59.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.354" endtime="20201030 18:31:59.640"></status>
</kw>
<msg timestamp="20201030 18:31:59.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023045153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023113014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:59.353" endtime="20201030 18:31:59.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023045153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023113014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:59.645" endtime="20201030 18:31:59.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.653" endtime="20201030 18:31:59.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.350" endtime="20201030 18:31:59.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.348" endtime="20201030 18:31:59.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:59.660" level="INFO">${RESULT} = [{'diff': 6.786100000000239e-05}, {'diff': 6.830600000000062e-05}, {'diff': 6.824999999999887e-05}, {'diff': 6.838900000000203e-05}, {'diff': 6.816700000000092e-05}, {'diff': 6.833300000000028e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:59.656" endtime="20201030 18:31:59.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:59.664" level="INFO">${ACCURACY} = {'diff': [6.786100000000239e-05, 6.830600000000062e-05, 6.824999999999887e-05, 6.838900000000203e-05, 6.816700000000092e-05, 6.833300000000028e-05, 6.837499999999899e-05, 6.823700000000224e-05, 6.8387...</msg>
<status status="PASS" starttime="20201030 18:31:59.661" endtime="20201030 18:31:59.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.668" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 18:31:59.667" endtime="20201030 18:31:59.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.671" level="INFO">VALUE: [6.786100000000239e-05, 6.830600000000062e-05, 6.824999999999887e-05, 6.838900000000203e-05, 6.816700000000092e-05, 6.833300000000028e-05, 6.837499999999899e-05, 6.823700000000224e-05, 6.838799999999909e-05, 6.830499999999767e-05, 6.817999999999755e-05, 6.818000000000102e-05, 6.836100000000289e-05, 6.837499999999899e-05, 6.836100000000289e-05, 6.827799999999801e-05, 6.84030000000016e-05, 6.82909999999981e-05, 6.838899999999856e-05, 6.834700000000332e-05, 6.815299999999788e-05, 6.82359999999993e-05, 6.818100000000049e-05, 6.818100000000049e-05, 6.841700000000117e-05, 6.830600000000062e-05, 6.827800000000148e-05, 6.82359999999993e-05, 6.824999999999887e-05, 6.840299999999813e-05, 6.816700000000092e-05, 6.838900000000203e-05, 6.833399999999976e-05, 6.741700000000017e-05, 6.830499999999767e-05, 6.811099999999917e-05, 6.825000000000234e-05, 6.815199999999841e-05, 6.830500000000114e-05, 6.823600000000277e-05, 6.838899999999856e-05, 6.824999999999887e-05, 6.833300000000028e-05, 6.827800000000148e-05, 6.84169999999977e-05, 6.825000000000234e-05, 6.820800000000016e-05, 6.824999999999887e-05, 6.823600000000277e-05, 6.838900000000203e-05]</msg>
<status status="PASS" starttime="20201030 18:31:59.669" endtime="20201030 18:31:59.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.665" endtime="20201030 18:31:59.673"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:59.677" endtime="20201030 18:31:59.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.675" endtime="20201030 18:31:59.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.674" endtime="20201030 18:31:59.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.315" endtime="20201030 18:31:59.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.314" endtime="20201030 18:31:59.697"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.706" endtime="20201030 18:31:59.724"></status>
</kw>
<msg timestamp="20201030 18:31:59.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:59.704" endtime="20201030 18:31:59.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:59.725" endtime="20201030 18:31:59.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.728" endtime="20201030 18:31:59.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.702" endtime="20201030 18:31:59.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.700" endtime="20201030 18:31:59.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.737" endtime="20201030 18:32:00.023"></status>
</kw>
<msg timestamp="20201030 18:32:00.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021878722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021947806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:59.735" endtime="20201030 18:32:00.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021878722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021947806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:00.027" endtime="20201030 18:32:00.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.035" endtime="20201030 18:32:00.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.733" endtime="20201030 18:32:00.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.731" endtime="20201030 18:32:00.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:00.042" level="INFO">${RESULT} = [{'diff': 6.90840000000005e-05}, {'diff': 6.930599999999815e-05}, {'diff': 6.916699999999845e-05}, {'diff': 6.934700000000085e-05}, {'diff': 6.92360000000003e-05}, {'diff': 6.927699999999953e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:00.038" endtime="20201030 18:32:00.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:00.047" level="INFO">${ACCURACY} = {'diff': [6.90840000000005e-05, 6.930599999999815e-05, 6.916699999999845e-05, 6.934700000000085e-05, 6.92360000000003e-05, 6.927699999999953e-05, 6.938899999999956e-05, 6.926399999999944e-05, 6.937499...</msg>
<status status="PASS" starttime="20201030 18:32:00.043" endtime="20201030 18:32:00.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.051" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 18:32:00.050" endtime="20201030 18:32:00.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.054" level="INFO">VALUE: [6.90840000000005e-05, 6.930599999999815e-05, 6.916699999999845e-05, 6.934700000000085e-05, 6.92360000000003e-05, 6.927699999999953e-05, 6.938899999999956e-05, 6.926399999999944e-05, 6.937499999999999e-05, 6.940299999999913e-05, 6.941700000000217e-05, 6.936100000000042e-05, 6.941700000000217e-05, 6.927799999999901e-05, 6.929200000000205e-05, 6.938899999999956e-05, 6.943100000000174e-05, 6.937499999999999e-05, 6.918100000000149e-05, 6.930599999999815e-05, 6.938900000000303e-05, 6.924999999999987e-05, 6.92909999999991e-05, 6.927800000000248e-05, 6.920900000000063e-05, 6.916599999999898e-05, 6.929199999999858e-05, 6.843000000000127e-05, 6.920800000000116e-05, 6.92909999999991e-05, 6.919400000000159e-05, 6.930499999999867e-05, 6.922200000000073e-05, 6.919400000000159e-05, 6.933300000000128e-05, 6.920800000000116e-05, 6.937499999999999e-05, 6.938899999999956e-05, 6.94169999999987e-05, 6.838900000000203e-05, 6.84169999999977e-05, 6.940299999999913e-05, 6.922200000000073e-05, 6.94169999999987e-05, 6.913899999999931e-05, 6.934800000000033e-05, 6.919500000000106e-05, 6.933400000000076e-05, 6.843100000000074e-05, 6.92230000000002e-05]</msg>
<status status="PASS" starttime="20201030 18:32:00.052" endtime="20201030 18:32:00.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.048" endtime="20201030 18:32:00.055"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:00.059" endtime="20201030 18:32:00.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.057" endtime="20201030 18:32:00.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.056" endtime="20201030 18:32:00.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.698" endtime="20201030 18:32:00.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.698" endtime="20201030 18:32:00.079"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.088" endtime="20201030 18:32:00.106"></status>
</kw>
<msg timestamp="20201030 18:32:00.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:00.087" endtime="20201030 18:32:00.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:00.107" endtime="20201030 18:32:00.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.110" endtime="20201030 18:32:00.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.084" endtime="20201030 18:32:00.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.082" endtime="20201030 18:32:00.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.119" endtime="20201030 18:32:00.406"></status>
</kw>
<msg timestamp="20201030 18:32:00.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022421389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022491764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:00.118" endtime="20201030 18:32:00.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022421389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022491764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:00.410" endtime="20201030 18:32:00.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.418" endtime="20201030 18:32:00.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.115" endtime="20201030 18:32:00.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.113" endtime="20201030 18:32:00.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:00.425" level="INFO">${RESULT} = [{'diff': 7.037500000000099e-05}, {'diff': 7.034700000000185e-05}, {'diff': 7.02360000000013e-05}, {'diff': 7.047199999999851e-05}, {'diff': 7.027800000000001e-05}, {'diff': 7.02360000000013e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:00.421" endtime="20201030 18:32:00.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:00.429" level="INFO">${ACCURACY} = {'diff': [7.037500000000099e-05, 7.034700000000185e-05, 7.02360000000013e-05, 7.047199999999851e-05, 7.027800000000001e-05, 7.02360000000013e-05, 7.040300000000013e-05, 7.038900000000056e-05, 7.012500...</msg>
<status status="PASS" starttime="20201030 18:32:00.426" endtime="20201030 18:32:00.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.433" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 18:32:00.432" endtime="20201030 18:32:00.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.436" level="INFO">VALUE: [7.037500000000099e-05, 7.034700000000185e-05, 7.02360000000013e-05, 7.047199999999851e-05, 7.027800000000001e-05, 7.02360000000013e-05, 7.040300000000013e-05, 7.038900000000056e-05, 7.012500000000074e-05, 7.026400000000044e-05, 7.030600000000262e-05, 7.026300000000096e-05, 7.034800000000133e-05, 6.94299999999988e-05, 7.020799999999869e-05, 7.036099999999795e-05, 7.030499999999967e-05, 7.026400000000044e-05, 7.031899999999924e-05, 7.020799999999869e-05, 7.018099999999902e-05, 7.036100000000142e-05, 7.018099999999902e-05, 7.034700000000185e-05, 7.044499999999884e-05, 6.950000000000012e-05, 7.040300000000013e-05, 7.030599999999915e-05, 7.033399999999829e-05, 7.030599999999915e-05, 7.019499999999859e-05, 7.018099999999902e-05, 7.030499999999967e-05, 7.037500000000099e-05, 6.94299999999988e-05, 7.020799999999869e-05, 7.027699999999706e-05, 7.016599999999998e-05, 7.041600000000023e-05, 7.040199999999719e-05, 7.038900000000056e-05, 7.015299999999988e-05, 7.020799999999869e-05, 7.019399999999912e-05, 7.017999999999955e-05, 7.040299999999666e-05, 7.023599999999783e-05, 7.02360000000013e-05, 7.034699999999838e-05, 7.040300000000013e-05]</msg>
<status status="PASS" starttime="20201030 18:32:00.434" endtime="20201030 18:32:00.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.430" endtime="20201030 18:32:00.437"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:00.441" endtime="20201030 18:32:00.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.439" endtime="20201030 18:32:00.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.438" endtime="20201030 18:32:00.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.080" endtime="20201030 18:32:00.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.080" endtime="20201030 18:32:00.462"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.470" endtime="20201030 18:32:00.489"></status>
</kw>
<msg timestamp="20201030 18:32:00.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:00.469" endtime="20201030 18:32:00.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:00.490" endtime="20201030 18:32:00.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.493" endtime="20201030 18:32:00.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.466" endtime="20201030 18:32:00.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.464" endtime="20201030 18:32:00.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.502" endtime="20201030 18:32:00.787"></status>
</kw>
<msg timestamp="20201030 18:32:00.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022833875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022904847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:00.500" endtime="20201030 18:32:00.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022833875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022904847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:00.792" endtime="20201030 18:32:00.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.800" endtime="20201030 18:32:00.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.498" endtime="20201030 18:32:00.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.496" endtime="20201030 18:32:00.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:00.807" level="INFO">${RESULT} = [{'diff': 7.097199999999901e-05}, {'diff': 7.120799999999969e-05}, {'diff': 7.122199999999926e-05}, {'diff': 7.122199999999926e-05}, {'diff': 7.116700000000045e-05}, {'diff': 7.137500000000199e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:00.803" endtime="20201030 18:32:00.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:00.811" level="INFO">${ACCURACY} = {'diff': [7.097199999999901e-05, 7.120799999999969e-05, 7.122199999999926e-05, 7.122199999999926e-05, 7.116700000000045e-05, 7.137500000000199e-05, 7.116700000000045e-05, 7.116700000000045e-05, 7.1374...</msg>
<status status="PASS" starttime="20201030 18:32:00.808" endtime="20201030 18:32:00.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.815" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 18:32:00.814" endtime="20201030 18:32:00.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.818" level="INFO">VALUE: [7.097199999999901e-05, 7.120799999999969e-05, 7.122199999999926e-05, 7.122199999999926e-05, 7.116700000000045e-05, 7.137500000000199e-05, 7.116700000000045e-05, 7.116700000000045e-05, 7.137499999999852e-05, 7.136100000000242e-05, 7.120899999999916e-05, 7.115300000000088e-05, 7.136099999999895e-05, 7.127800000000101e-05, 7.118100000000002e-05, 7.134799999999886e-05, 7.04169999999997e-05, 7.12360000000023e-05, 7.122199999999926e-05, 7.126399999999797e-05, 7.120799999999969e-05, 7.131900000000024e-05, 7.141599999999776e-05, 7.126400000000144e-05, 7.130500000000067e-05, 7.122199999999926e-05, 7.129200000000058e-05, 7.120799999999969e-05, 7.130600000000015e-05, 7.116700000000045e-05, 7.115300000000088e-05, 7.116700000000045e-05, 7.115299999999741e-05, 7.127799999999754e-05, 7.120899999999916e-05, 7.122199999999926e-05, 7.120899999999916e-05, 7.120899999999916e-05, 7.130600000000015e-05, 7.136099999999895e-05, 7.115200000000141e-05, 7.120799999999969e-05, 7.117999999999708e-05, 7.140199999999819e-05, 7.134699999999938e-05, 7.125000000000187e-05, 7.112499999999827e-05, 7.04299999999998e-05, 7.134699999999938e-05, 7.125000000000187e-05]</msg>
<status status="PASS" starttime="20201030 18:32:00.816" endtime="20201030 18:32:00.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.811" endtime="20201030 18:32:00.820"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:00.823" endtime="20201030 18:32:00.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.822" endtime="20201030 18:32:00.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.821" endtime="20201030 18:32:00.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.462" endtime="20201030 18:32:00.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.462" endtime="20201030 18:32:00.844"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.853" endtime="20201030 18:32:00.871"></status>
</kw>
<msg timestamp="20201030 18:32:00.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:00.851" endtime="20201030 18:32:00.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:00.872" endtime="20201030 18:32:00.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.875" endtime="20201030 18:32:00.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.849" endtime="20201030 18:32:00.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.847" endtime="20201030 18:32:00.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.884" endtime="20201030 18:32:01.170"></status>
</kw>
<msg timestamp="20201030 18:32:01.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022293986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022365944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:00.882" endtime="20201030 18:32:01.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022293986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022365944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:01.174" endtime="20201030 18:32:01.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.182" endtime="20201030 18:32:01.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.880" endtime="20201030 18:32:01.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.878" endtime="20201030 18:32:01.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:01.189" level="INFO">${RESULT} = [{'diff': 7.195800000000044e-05}, {'diff': 7.22499999999994e-05}, {'diff': 7.217999999999808e-05}, {'diff': 7.240200000000266e-05}, {'diff': 7.220800000000069e-05}, {'diff': 7.218000000000155e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:01.186" endtime="20201030 18:32:01.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:01.196" level="INFO">${ACCURACY} = {'diff': [7.195800000000044e-05, 7.22499999999994e-05, 7.217999999999808e-05, 7.240200000000266e-05, 7.220800000000069e-05, 7.218000000000155e-05, 7.236099999999995e-05, 7.231899999999777e-05, 7.23050...</msg>
<status status="PASS" starttime="20201030 18:32:01.190" endtime="20201030 18:32:01.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.201" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 18:32:01.200" endtime="20201030 18:32:01.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.203" level="INFO">VALUE: [7.195800000000044e-05, 7.22499999999994e-05, 7.217999999999808e-05, 7.240200000000266e-05, 7.220800000000069e-05, 7.218000000000155e-05, 7.236099999999995e-05, 7.231899999999777e-05, 7.230500000000167e-05, 7.234700000000038e-05, 7.230600000000115e-05, 7.227799999999854e-05, 7.233300000000081e-05, 7.232000000000072e-05, 7.212499999999927e-05, 7.227800000000201e-05, 7.220900000000016e-05, 7.237500000000299e-05, 7.22369999999993e-05, 7.233399999999682e-05, 7.218100000000102e-05, 7.241699999999823e-05, 7.237499999999952e-05, 7.219399999999765e-05, 7.234699999999691e-05, 7.22499999999994e-05, 7.227799999999854e-05, 7.236099999999995e-05, 7.238899999999909e-05, 7.22910000000021e-05, 7.213899999999884e-05, 7.238900000000256e-05, 7.222200000000026e-05, 7.209700000000013e-05, 7.22499999999994e-05, 7.213899999999884e-05, 7.237499999999952e-05, 7.226399999999897e-05, 7.225000000000287e-05, 7.229199999999811e-05, 7.22499999999994e-05, 7.226399999999897e-05, 7.216699999999798e-05, 7.227800000000201e-05, 7.223599999999983e-05, 7.227799999999854e-05, 7.215199999999894e-05, 7.141599999999776e-05, 7.222200000000026e-05, 7.229099999999863e-05]</msg>
<status status="PASS" starttime="20201030 18:32:01.202" endtime="20201030 18:32:01.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.197" endtime="20201030 18:32:01.205"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:01.208" endtime="20201030 18:32:01.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.207" endtime="20201030 18:32:01.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.206" endtime="20201030 18:32:01.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.845" endtime="20201030 18:32:01.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.845" endtime="20201030 18:32:01.229"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.238" endtime="20201030 18:32:01.254"></status>
</kw>
<msg timestamp="20201030 18:32:01.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:01.236" endtime="20201030 18:32:01.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:01.256" endtime="20201030 18:32:01.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.258" endtime="20201030 18:32:01.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.233" endtime="20201030 18:32:01.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.231" endtime="20201030 18:32:01.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.268" endtime="20201030 18:32:01.554"></status>
</kw>
<msg timestamp="20201030 18:32:01.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021923611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021996736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:01.266" endtime="20201030 18:32:01.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021923611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021996736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:01.558" endtime="20201030 18:32:01.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.566" endtime="20201030 18:32:01.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.263" endtime="20201030 18:32:01.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.262" endtime="20201030 18:32:01.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:01.573" level="INFO">${RESULT} = [{'diff': 7.312500000000027e-05}, {'diff': 7.313899999999984e-05}, {'diff': 7.24170000000017e-05}, {'diff': 7.316699999999898e-05}, {'diff': 7.334700000000138e-05}, {'diff': 7.337500000000052e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:01.570" endtime="20201030 18:32:01.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:01.577" level="INFO">${ACCURACY} = {'diff': [7.312500000000027e-05, 7.313899999999984e-05, 7.24170000000017e-05, 7.316699999999898e-05, 7.334700000000138e-05, 7.337500000000052e-05, 7.319499999999812e-05, 7.316699999999898e-05, 7.34030...</msg>
<status status="PASS" starttime="20201030 18:32:01.574" endtime="20201030 18:32:01.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.582" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 18:32:01.581" endtime="20201030 18:32:01.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.585" level="INFO">VALUE: [7.312500000000027e-05, 7.313899999999984e-05, 7.24170000000017e-05, 7.316699999999898e-05, 7.334700000000138e-05, 7.337500000000052e-05, 7.319499999999812e-05, 7.316699999999898e-05, 7.340300000000313e-05, 7.336100000000095e-05, 7.340299999999966e-05, 7.341699999999923e-05, 7.313899999999984e-05, 7.33049999999992e-05, 7.313899999999984e-05, 7.319400000000212e-05, 7.338800000000062e-05, 7.338900000000009e-05, 7.331900000000224e-05, 7.317999999999908e-05, 7.337500000000052e-05, 7.331899999999877e-05, 7.331899999999877e-05, 7.34170000000027e-05, 7.32500000000004e-05, 7.326399999999997e-05, 7.326399999999997e-05, 7.326399999999997e-05, 7.334699999999791e-05, 7.334699999999791e-05, 7.32500000000004e-05, 7.323600000000083e-05, 7.329199999999911e-05, 7.341699999999923e-05, 7.244499999999737e-05, 7.247200000000051e-05, 7.240299999999866e-05, 7.338800000000062e-05, 7.329099999999963e-05, 7.316599999999951e-05, 7.323600000000083e-05, 7.322200000000126e-05, 7.322200000000126e-05, 7.315299999999941e-05, 7.323600000000083e-05, 7.326399999999997e-05, 7.322200000000126e-05, 7.320800000000169e-05, 7.320800000000169e-05, 7.333300000000181e-05]</msg>
<status status="PASS" starttime="20201030 18:32:01.583" endtime="20201030 18:32:01.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.578" endtime="20201030 18:32:01.587"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:01.591" endtime="20201030 18:32:01.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.589" endtime="20201030 18:32:01.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.588" endtime="20201030 18:32:01.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.230" endtime="20201030 18:32:01.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.229" endtime="20201030 18:32:01.611"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.620" endtime="20201030 18:32:01.638"></status>
</kw>
<msg timestamp="20201030 18:32:01.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:01.618" endtime="20201030 18:32:01.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:01.639" endtime="20201030 18:32:01.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.642" endtime="20201030 18:32:01.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.616" endtime="20201030 18:32:01.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.614" endtime="20201030 18:32:01.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.653" endtime="20201030 18:32:01.940"></status>
</kw>
<msg timestamp="20201030 18:32:01.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022755292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022829153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:01.651" endtime="20201030 18:32:01.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022755292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022829153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:01.945" endtime="20201030 18:32:01.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.953" endtime="20201030 18:32:01.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.648" endtime="20201030 18:32:01.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.645" endtime="20201030 18:32:01.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:01.960" level="INFO">${RESULT} = [{'diff': 7.386100000000145e-05}, {'diff': 7.436100000000195e-05}, {'diff': 7.422299999999826e-05}, {'diff': 7.416699999999998e-05}, {'diff': 7.440300000000066e-05}, {'diff': 7.437500000000152e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:01.956" endtime="20201030 18:32:01.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:01.964" level="INFO">${ACCURACY} = {'diff': [7.386100000000145e-05, 7.436100000000195e-05, 7.422299999999826e-05, 7.416699999999998e-05, 7.440300000000066e-05, 7.437500000000152e-05, 7.434700000000238e-05, 7.427700000000106e-05, 7.4346...</msg>
<status status="PASS" starttime="20201030 18:32:01.961" endtime="20201030 18:32:01.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.968" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 18:32:01.967" endtime="20201030 18:32:01.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.971" level="INFO">VALUE: [7.386100000000145e-05, 7.436100000000195e-05, 7.422299999999826e-05, 7.416699999999998e-05, 7.440300000000066e-05, 7.437500000000152e-05, 7.434700000000238e-05, 7.427700000000106e-05, 7.434699999999891e-05, 7.342999999999933e-05, 7.415199999999747e-05, 7.431899999999977e-05, 7.412500000000127e-05, 7.437500000000152e-05, 7.416699999999998e-05, 7.416699999999998e-05, 7.42639999999975e-05, 7.423599999999836e-05, 7.429200000000011e-05, 7.34309999999988e-05, 7.433399999999882e-05, 7.341699999999923e-05, 7.441700000000023e-05, 7.422199999999879e-05, 7.344499999999837e-05, 7.416600000000051e-05, 7.34170000000027e-05, 7.434699999999891e-05, 7.420900000000216e-05, 7.427700000000106e-05, 7.438900000000109e-05, 7.434699999999891e-05, 7.429100000000063e-05, 7.437500000000152e-05, 7.440300000000066e-05, 7.433299999999934e-05, 7.437500000000152e-05, 7.430599999999968e-05, 7.44029999999972e-05, 7.416699999999998e-05, 7.422199999999879e-05, 7.437499999999805e-05, 7.437500000000152e-05, 7.420799999999922e-05, 7.44029999999972e-05, 7.436099999999848e-05, 7.415300000000041e-05, 7.426400000000097e-05, 7.434800000000186e-05, 7.341699999999923e-05]</msg>
<status status="PASS" starttime="20201030 18:32:01.969" endtime="20201030 18:32:01.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.965" endtime="20201030 18:32:01.973"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:01.977" endtime="20201030 18:32:01.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.975" endtime="20201030 18:32:01.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.974" endtime="20201030 18:32:01.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.612" endtime="20201030 18:32:01.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.612" endtime="20201030 18:32:01.997"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.006" endtime="20201030 18:32:02.024"></status>
</kw>
<msg timestamp="20201030 18:32:02.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:02.004" endtime="20201030 18:32:02.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:02.026" endtime="20201030 18:32:02.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.028" endtime="20201030 18:32:02.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.002" endtime="20201030 18:32:02.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.000" endtime="20201030 18:32:02.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.037" endtime="20201030 18:32:02.325"></status>
</kw>
<msg timestamp="20201030 18:32:02.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022420014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022495111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:02.035" endtime="20201030 18:32:02.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022420014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022495111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:02.329" endtime="20201030 18:32:02.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.337" endtime="20201030 18:32:02.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.033" endtime="20201030 18:32:02.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.031" endtime="20201030 18:32:02.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:02.347" level="INFO">${RESULT} = [{'diff': 7.509700000000313e-05}, {'diff': 7.526400000000197e-05}, {'diff': 7.524999999999893e-05}, {'diff': 7.531900000000077e-05}, {'diff': 7.534699999999991e-05}, {'diff': 7.52639999999985e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:02.342" endtime="20201030 18:32:02.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:02.352" level="INFO">${ACCURACY} = {'diff': [7.509700000000313e-05, 7.526400000000197e-05, 7.524999999999893e-05, 7.531900000000077e-05, 7.534699999999991e-05, 7.52639999999985e-05, 7.533300000000034e-05, 7.52639999999985e-05, 7.515300...</msg>
<status status="PASS" starttime="20201030 18:32:02.348" endtime="20201030 18:32:02.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.356" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 18:32:02.355" endtime="20201030 18:32:02.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.359" level="INFO">VALUE: [7.509700000000313e-05, 7.526400000000197e-05, 7.524999999999893e-05, 7.531900000000077e-05, 7.534699999999991e-05, 7.52639999999985e-05, 7.533300000000034e-05, 7.52639999999985e-05, 7.515300000000141e-05, 7.530600000000068e-05, 7.520899999999969e-05, 7.520900000000316e-05, 7.533300000000034e-05, 7.526400000000197e-05, 7.515299999999794e-05, 7.531900000000077e-05, 7.524999999999893e-05, 7.538799999999915e-05, 7.540200000000219e-05, 7.536099999999948e-05, 7.520800000000022e-05, 7.533300000000034e-05, 7.438900000000109e-05, 7.443000000000033e-05, 7.524999999999893e-05, 7.523599999999936e-05, 7.523600000000283e-05, 7.444500000000284e-05, 7.541699999999776e-05, 7.523599999999936e-05, 7.520899999999969e-05, 7.543000000000133e-05, 7.534799999999939e-05, 7.522299999999926e-05, 7.444500000000284e-05, 7.536099999999948e-05, 7.519400000000065e-05, 7.520800000000022e-05, 7.533300000000034e-05, 7.537499999999905e-05, 7.519400000000065e-05, 7.536100000000295e-05, 7.520800000000022e-05, 7.522199999999979e-05, 7.533300000000034e-05, 7.515300000000141e-05, 7.516699999999751e-05, 7.522199999999979e-05, 7.536099999999948e-05, 7.533300000000034e-05]</msg>
<status status="PASS" starttime="20201030 18:32:02.357" endtime="20201030 18:32:02.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.353" endtime="20201030 18:32:02.360"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:02.364" endtime="20201030 18:32:02.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.362" endtime="20201030 18:32:02.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.361" endtime="20201030 18:32:02.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.998" endtime="20201030 18:32:02.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.998" endtime="20201030 18:32:02.388"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.406" endtime="20201030 18:32:02.427"></status>
</kw>
<msg timestamp="20201030 18:32:02.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:02.402" endtime="20201030 18:32:02.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:02.430" endtime="20201030 18:32:02.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.435" endtime="20201030 18:32:02.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.397" endtime="20201030 18:32:02.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.393" endtime="20201030 18:32:02.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.454" endtime="20201030 18:32:02.743"></status>
</kw>
<msg timestamp="20201030 18:32:02.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035746472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035822583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:02.451" endtime="20201030 18:32:02.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035746472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035822583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:02.747" endtime="20201030 18:32:02.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.755" endtime="20201030 18:32:02.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.445" endtime="20201030 18:32:02.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.442" endtime="20201030 18:32:02.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:02.762" level="INFO">${RESULT} = [{'diff': 7.611099999999676e-05}, {'diff': 7.615300000000241e-05}, {'diff': 7.615300000000241e-05}, {'diff': 7.623600000000036e-05}, {'diff': 7.620800000000122e-05}, {'diff': 7.637500000000352e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:02.758" endtime="20201030 18:32:02.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:02.766" level="INFO">${ACCURACY} = {'diff': [7.611099999999676e-05, 7.615300000000241e-05, 7.615300000000241e-05, 7.623600000000036e-05, 7.620800000000122e-05, 7.637500000000352e-05, 7.623600000000036e-05, 7.638799999999668e-05, 7.6319...</msg>
<status status="PASS" starttime="20201030 18:32:02.763" endtime="20201030 18:32:02.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.771" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 18:32:02.770" endtime="20201030 18:32:02.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.773" level="INFO">VALUE: [7.611099999999676e-05, 7.615300000000241e-05, 7.615300000000241e-05, 7.623600000000036e-05, 7.620800000000122e-05, 7.637500000000352e-05, 7.623600000000036e-05, 7.638799999999668e-05, 7.631999999999778e-05, 7.611099999999676e-05, 7.633300000000481e-05, 7.629199999999864e-05, 7.623600000000036e-05, 7.624999999999993e-05, 7.618100000000155e-05, 7.633299999999787e-05, 7.623600000000036e-05, 7.627799999999907e-05, 7.634800000000386e-05, 7.619399999999471e-05, 7.629099999999917e-05, 7.636100000000395e-05, 7.538899999999515e-05, 7.618000000000208e-05, 7.634700000000438e-05, 7.640299999999572e-05, 7.633299999999787e-05, 7.622200000000079e-05, 7.634799999999692e-05, 7.64440000000019e-05, 7.633300000000481e-05, 7.616700000000198e-05, 7.62639999999995e-05, 7.633399999999735e-05, 7.623600000000036e-05, 7.640300000000266e-05, 7.61389999999959e-05, 7.62639999999995e-05, 7.618000000000208e-05, 7.624999999999993e-05, 7.60969999999972e-05, 7.631900000000524e-05, 7.6151999999996e-05, 7.634700000000438e-05, 7.6151999999996e-05, 7.543000000000133e-05, 7.620800000000122e-05, 7.619399999999471e-05, 7.60969999999972e-05, 7.63890000000031e-05]</msg>
<status status="PASS" starttime="20201030 18:32:02.772" endtime="20201030 18:32:02.774"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.767" endtime="20201030 18:32:02.774"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:02.778" endtime="20201030 18:32:02.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.776" endtime="20201030 18:32:02.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.775" endtime="20201030 18:32:02.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.389" endtime="20201030 18:32:02.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.388" endtime="20201030 18:32:02.799"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.807" endtime="20201030 18:32:02.826"></status>
</kw>
<msg timestamp="20201030 18:32:02.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:02.806" endtime="20201030 18:32:02.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:02.827" endtime="20201030 18:32:02.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.830" endtime="20201030 18:32:02.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.803" endtime="20201030 18:32:02.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.801" endtime="20201030 18:32:02.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.839" endtime="20201030 18:32:03.124"></status>
</kw>
<msg timestamp="20201030 18:32:03.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023072639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023149472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:02.837" endtime="20201030 18:32:03.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023072639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023149472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:03.128" endtime="20201030 18:32:03.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.136" endtime="20201030 18:32:03.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.835" endtime="20201030 18:32:03.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.833" endtime="20201030 18:32:03.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:03.143" level="INFO">${RESULT} = [{'diff': 7.683300000000184e-05}, {'diff': 7.737500000000105e-05}, {'diff': 7.716699999999951e-05}, {'diff': 7.723600000000136e-05}, {'diff': 7.725000000000093e-05}, {'diff': 7.643099999999833e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:03.140" endtime="20201030 18:32:03.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:03.147" level="INFO">${ACCURACY} = {'diff': [7.683300000000184e-05, 7.737500000000105e-05, 7.716699999999951e-05, 7.723600000000136e-05, 7.725000000000093e-05, 7.643099999999833e-05, 7.747199999999857e-05, 7.727800000000007e-05, 7.7319...</msg>
<status status="PASS" starttime="20201030 18:32:03.144" endtime="20201030 18:32:03.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.151" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 18:32:03.150" endtime="20201030 18:32:03.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.154" level="INFO">VALUE: [7.683300000000184e-05, 7.737500000000105e-05, 7.716699999999951e-05, 7.723600000000136e-05, 7.725000000000093e-05, 7.643099999999833e-05, 7.747199999999857e-05, 7.727800000000007e-05, 7.731999999999878e-05, 7.727800000000007e-05, 7.730599999999921e-05, 7.720900000000169e-05, 7.734800000000139e-05, 7.64449999999979e-05, 7.715299999999994e-05, 7.730599999999921e-05, 7.74030000000002e-05, 7.716600000000004e-05, 7.715200000000047e-05, 7.722199999999832e-05, 7.72640000000005e-05, 7.723600000000136e-05, 7.738900000000062e-05, 7.737500000000105e-05, 7.74030000000002e-05, 7.720899999999822e-05, 7.722199999999832e-05, 7.72640000000005e-05, 7.720799999999875e-05, 7.718099999999908e-05, 7.738900000000062e-05, 7.733399999999835e-05, 7.71250000000008e-05, 7.719499999999865e-05, 7.725000000000093e-05, 7.715299999999994e-05, 7.730599999999921e-05, 7.727800000000007e-05, 7.740200000000072e-05, 7.725000000000093e-05, 7.72770000000006e-05, 7.716600000000004e-05, 7.733300000000234e-05, 7.730499999999974e-05, 7.738900000000062e-05, 7.725000000000093e-05, 7.738900000000062e-05, 7.718000000000308e-05, 7.732000000000225e-05, 7.727800000000007e-05]</msg>
<status status="PASS" starttime="20201030 18:32:03.153" endtime="20201030 18:32:03.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.148" endtime="20201030 18:32:03.156"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:03.160" endtime="20201030 18:32:03.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.158" endtime="20201030 18:32:03.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.157" endtime="20201030 18:32:03.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.800" endtime="20201030 18:32:03.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.799" endtime="20201030 18:32:03.180"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.189" endtime="20201030 18:32:03.207"></status>
</kw>
<msg timestamp="20201030 18:32:03.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:03.187" endtime="20201030 18:32:03.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:03.209" endtime="20201030 18:32:03.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.211" endtime="20201030 18:32:03.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.185" endtime="20201030 18:32:03.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.183" endtime="20201030 18:32:03.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.220" endtime="20201030 18:32:03.505"></status>
</kw>
<msg timestamp="20201030 18:32:03.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021866889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021944611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:03.219" endtime="20201030 18:32:03.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021866889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021944611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:03.509" endtime="20201030 18:32:03.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.518" endtime="20201030 18:32:03.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.216" endtime="20201030 18:32:03.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.214" endtime="20201030 18:32:03.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:03.524" level="INFO">${RESULT} = [{'diff': 7.772199999999882e-05}, {'diff': 7.838900000000162e-05}, {'diff': 7.825000000000193e-05}, {'diff': 7.838899999999815e-05}, {'diff': 7.836199999999849e-05}, {'diff': 7.82640000000015e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:03.521" endtime="20201030 18:32:03.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:03.529" level="INFO">${ACCURACY} = {'diff': [7.772199999999882e-05, 7.838900000000162e-05, 7.825000000000193e-05, 7.838899999999815e-05, 7.836199999999849e-05, 7.82640000000015e-05, 7.83190000000003e-05, 7.827800000000107e-05, 7.843100...</msg>
<status status="PASS" starttime="20201030 18:32:03.525" endtime="20201030 18:32:03.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.534" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 18:32:03.533" endtime="20201030 18:32:03.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.536" level="INFO">VALUE: [7.772199999999882e-05, 7.838900000000162e-05, 7.825000000000193e-05, 7.838899999999815e-05, 7.836199999999849e-05, 7.82640000000015e-05, 7.83190000000003e-05, 7.827800000000107e-05, 7.843100000000033e-05, 7.84030000000012e-05, 7.819499999999965e-05, 7.820899999999922e-05, 7.823600000000236e-05, 7.818100000000008e-05, 7.815300000000094e-05, 7.816700000000051e-05, 7.8151999999998e-05, 7.818000000000061e-05, 7.81250000000018e-05, 7.837500000000205e-05, 7.820799999999975e-05, 7.823599999999889e-05, 7.808299999999962e-05, 7.833299999999987e-05, 7.818000000000061e-05, 7.830600000000021e-05, 7.822199999999932e-05, 7.820799999999975e-05, 7.834700000000291e-05, 7.829200000000064e-05, 7.827800000000107e-05, 7.82640000000015e-05, 7.81389999999979e-05, 7.815300000000094e-05, 7.833299999999987e-05, 7.83190000000003e-05, 7.837499999999858e-05, 7.833299999999987e-05, 7.837500000000205e-05, 7.841599999999782e-05, 7.843000000000086e-05, 7.837500000000205e-05, 7.816699999999704e-05, 7.837499999999858e-05, 7.816600000000104e-05, 7.84169999999973e-05, 7.823599999999889e-05, 7.830600000000021e-05, 7.816700000000051e-05, 7.840299999999772e-05]</msg>
<status status="PASS" starttime="20201030 18:32:03.535" endtime="20201030 18:32:03.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.530" endtime="20201030 18:32:03.537"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:03.541" endtime="20201030 18:32:03.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.540" endtime="20201030 18:32:03.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.538" endtime="20201030 18:32:03.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.181" endtime="20201030 18:32:03.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.181" endtime="20201030 18:32:03.562"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.570" endtime="20201030 18:32:03.589"></status>
</kw>
<msg timestamp="20201030 18:32:03.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:03.569" endtime="20201030 18:32:03.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:03.590" endtime="20201030 18:32:03.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.593" endtime="20201030 18:32:03.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.566" endtime="20201030 18:32:03.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.564" endtime="20201030 18:32:03.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.602" endtime="20201030 18:32:03.889"></status>
</kw>
<msg timestamp="20201030 18:32:03.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021819222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021897917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:03.600" endtime="20201030 18:32:03.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021819222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021897917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:03.893" endtime="20201030 18:32:03.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.901" endtime="20201030 18:32:03.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.598" endtime="20201030 18:32:03.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.596" endtime="20201030 18:32:03.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:03.908" level="INFO">${RESULT} = [{'diff': 7.869500000000015e-05}, {'diff': 7.841700000000076e-05}, {'diff': 7.924999999999946e-05}, {'diff': 7.934700000000044e-05}, {'diff': 7.93190000000013e-05}, {'diff': 7.94030000000022e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:03.905" endtime="20201030 18:32:03.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:03.912" level="INFO">${ACCURACY} = {'diff': [7.869500000000015e-05, 7.841700000000076e-05, 7.924999999999946e-05, 7.934700000000044e-05, 7.93190000000013e-05, 7.94030000000022e-05, 7.922200000000032e-05, 7.849999999999871e-05, 7.841599...</msg>
<status status="PASS" starttime="20201030 18:32:03.909" endtime="20201030 18:32:03.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.916" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 18:32:03.915" endtime="20201030 18:32:03.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.919" level="INFO">VALUE: [7.869500000000015e-05, 7.841700000000076e-05, 7.924999999999946e-05, 7.934700000000044e-05, 7.93190000000013e-05, 7.94030000000022e-05, 7.922200000000032e-05, 7.849999999999871e-05, 7.841599999999782e-05, 7.92640000000025e-05, 7.936100000000001e-05, 7.923600000000336e-05, 7.929199999999817e-05, 7.937499999999958e-05, 7.936100000000001e-05, 7.940299999999872e-05, 7.923599999999989e-05, 7.934700000000044e-05, 7.84030000000012e-05, 7.940299999999872e-05, 7.941700000000176e-05, 7.940299999999872e-05, 7.918099999999761e-05, 7.923599999999989e-05, 7.837499999999858e-05, 7.843000000000086e-05, 7.932000000000078e-05, 7.919400000000118e-05, 7.92909999999987e-05, 7.920800000000075e-05, 7.92909999999987e-05, 7.913900000000237e-05, 7.92779999999986e-05, 7.91389999999989e-05, 7.926399999999903e-05, 7.915299999999847e-05, 7.930600000000121e-05, 7.927699999999913e-05, 7.934699999999698e-05, 7.932000000000078e-05, 7.937499999999958e-05, 7.923599999999989e-05, 7.926399999999903e-05, 7.933399999999688e-05, 7.912499999999933e-05, 7.923599999999989e-05, 7.934700000000044e-05, 7.926299999999956e-05, 7.841600000000129e-05, 7.934700000000044e-05]</msg>
<status status="PASS" starttime="20201030 18:32:03.917" endtime="20201030 18:32:03.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.913" endtime="20201030 18:32:03.920"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:03.924" endtime="20201030 18:32:03.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.922" endtime="20201030 18:32:03.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.921" endtime="20201030 18:32:03.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.563" endtime="20201030 18:32:03.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.562" endtime="20201030 18:32:03.944"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.953" endtime="20201030 18:32:03.972"></status>
</kw>
<msg timestamp="20201030 18:32:03.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:03.951" endtime="20201030 18:32:03.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:03.973" endtime="20201030 18:32:03.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.976" endtime="20201030 18:32:03.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.949" endtime="20201030 18:32:03.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.947" endtime="20201030 18:32:03.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.985" endtime="20201030 18:32:04.269"></status>
</kw>
<msg timestamp="20201030 18:32:04.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023026153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023106083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:03.983" endtime="20201030 18:32:04.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023026153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023106083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:04.273" endtime="20201030 18:32:04.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.282" endtime="20201030 18:32:04.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.981" endtime="20201030 18:32:04.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.979" endtime="20201030 18:32:04.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:04.288" level="INFO">${RESULT} = [{'diff': 7.992999999999889e-05}, {'diff': 8.023599999999742e-05}, {'diff': 8.038900000000015e-05}, {'diff': 8.023599999999742e-05}, {'diff': 8.033300000000188e-05}, {'diff': 8.037500000000058e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:04.285" endtime="20201030 18:32:04.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:04.292" level="INFO">${ACCURACY} = {'diff': [7.992999999999889e-05, 8.023599999999742e-05, 8.038900000000015e-05, 8.023599999999742e-05, 8.033300000000188e-05, 8.037500000000058e-05, 8.036100000000101e-05, 8.020799999999828e-05, 8.0180...</msg>
<status status="PASS" starttime="20201030 18:32:04.289" endtime="20201030 18:32:04.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.297" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 18:32:04.296" endtime="20201030 18:32:04.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.300" level="INFO">VALUE: [7.992999999999889e-05, 8.023599999999742e-05, 8.038900000000015e-05, 8.023599999999742e-05, 8.033300000000188e-05, 8.037500000000058e-05, 8.036100000000101e-05, 8.020799999999828e-05, 8.018099999999861e-05, 8.016699999999904e-05, 8.02230000000008e-05, 8.022200000000132e-05, 8.022200000000132e-05, 8.025000000000046e-05, 8.026300000000056e-05, 8.015299999999947e-05, 8.029199999999917e-05, 8.027700000000013e-05, 8.023599999999742e-05, 8.016599999999957e-05, 8.020800000000175e-05, 7.937499999999958e-05, 8.031899999999884e-05, 8.020799999999828e-05, 8.020799999999828e-05, 8.029200000000264e-05, 8.03190000000023e-05, 7.943100000000133e-05, 8.029199999999917e-05, 8.034700000000145e-05, 8.015299999999947e-05, 8.037500000000058e-05, 8.022200000000132e-05, 8.025000000000046e-05, 8.019500000000165e-05, 8.037500000000058e-05, 8.040299999999972e-05, 8.026400000000003e-05, 8.037499999999712e-05, 8.037500000000058e-05, 7.942999999999839e-05, 8.01389999999999e-05, 8.027700000000013e-05, 8.032000000000178e-05, 8.025000000000046e-05, 7.944400000000143e-05, 8.019399999999871e-05, 7.94169999999983e-05, 8.015300000000294e-05, 8.025000000000046e-05]</msg>
<status status="PASS" starttime="20201030 18:32:04.298" endtime="20201030 18:32:04.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.293" endtime="20201030 18:32:04.301"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:04.305" endtime="20201030 18:32:04.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.304" endtime="20201030 18:32:04.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.302" endtime="20201030 18:32:04.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.945" endtime="20201030 18:32:04.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.945" endtime="20201030 18:32:04.326"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.335" endtime="20201030 18:32:04.352"></status>
</kw>
<msg timestamp="20201030 18:32:04.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:04.333" endtime="20201030 18:32:04.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:04.354" endtime="20201030 18:32:04.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.356" endtime="20201030 18:32:04.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.331" endtime="20201030 18:32:04.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.329" endtime="20201030 18:32:04.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.365" endtime="20201030 18:32:04.650"></status>
</kw>
<msg timestamp="20201030 18:32:04.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022398694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022479792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:04.364" endtime="20201030 18:32:04.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022398694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022479792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:04.655" endtime="20201030 18:32:04.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.664" endtime="20201030 18:32:04.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.361" endtime="20201030 18:32:04.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.359" endtime="20201030 18:32:04.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:04.671" level="INFO">${RESULT} = [{'diff': 8.10979999999982e-05}, {'diff': 8.116700000000004e-05}, {'diff': 8.04169999999993e-05}, {'diff': 8.137500000000158e-05}, {'diff': 8.134799999999845e-05}, {'diff': 8.113800000000143e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:04.668" endtime="20201030 18:32:04.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:04.678" level="INFO">${ACCURACY} = {'diff': [8.10979999999982e-05, 8.116700000000004e-05, 8.04169999999993e-05, 8.137500000000158e-05, 8.134799999999845e-05, 8.113800000000143e-05, 8.042999999999939e-05, 8.136100000000202e-05, 8.129100...</msg>
<status status="PASS" starttime="20201030 18:32:04.672" endtime="20201030 18:32:04.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.683" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 18:32:04.682" endtime="20201030 18:32:04.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.685" level="INFO">VALUE: [8.10979999999982e-05, 8.116700000000004e-05, 8.04169999999993e-05, 8.137500000000158e-05, 8.134799999999845e-05, 8.113800000000143e-05, 8.042999999999939e-05, 8.136100000000202e-05, 8.12910000000007e-05, 8.11109999999983e-05, 8.037500000000058e-05, 8.123599999999842e-05, 8.130599999999974e-05, 8.122199999999885e-05, 8.125000000000146e-05, 8.14170000000003e-05, 8.12919999999967e-05, 8.123599999999842e-05, 8.116700000000004e-05, 8.136099999999855e-05, 8.136100000000202e-05, 8.125000000000146e-05, 8.11390000000009e-05, 8.120899999999875e-05, 8.133399999999888e-05, 8.131999999999931e-05, 8.116600000000057e-05, 8.125000000000146e-05, 8.120800000000275e-05, 8.129099999999723e-05, 8.143000000000039e-05, 8.123599999999842e-05, 8.126400000000103e-05, 8.130599999999974e-05, 8.13049999999968e-05, 8.137500000000158e-05, 8.131999999999931e-05, 8.133399999999888e-05, 8.122199999999885e-05, 8.126400000000103e-05, 8.136100000000202e-05, 8.131999999999931e-05, 8.133399999999888e-05, 8.12780000000006e-05, 8.12910000000007e-05, 8.131999999999931e-05, 8.1152000000001e-05, 8.141600000000082e-05, 8.137500000000158e-05, 8.120799999999928e-05]</msg>
<status status="PASS" starttime="20201030 18:32:04.684" endtime="20201030 18:32:04.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.679" endtime="20201030 18:32:04.686"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:04.690" endtime="20201030 18:32:04.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.689" endtime="20201030 18:32:04.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.687" endtime="20201030 18:32:04.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.327" endtime="20201030 18:32:04.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.327" endtime="20201030 18:32:04.711"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.719" endtime="20201030 18:32:04.738"></status>
</kw>
<msg timestamp="20201030 18:32:04.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:04.718" endtime="20201030 18:32:04.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:04.739" endtime="20201030 18:32:04.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.741" endtime="20201030 18:32:04.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.715" endtime="20201030 18:32:04.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.713" endtime="20201030 18:32:04.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.751" endtime="20201030 18:32:05.037"></status>
</kw>
<msg timestamp="20201030 18:32:05.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021906153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021988528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:04.749" endtime="20201030 18:32:05.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021906153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021988528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:05.041" endtime="20201030 18:32:05.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.049" endtime="20201030 18:32:05.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.747" endtime="20201030 18:32:05.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.745" endtime="20201030 18:32:05.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:05.056" level="INFO">${RESULT} = [{'diff': 8.237499999999912e-05}, {'diff': 8.233399999999988e-05}, {'diff': 8.237499999999912e-05}, {'diff': 8.224999999999899e-05}, {'diff': 8.224999999999899e-05}, {'diff': 8.240300000000172e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:05.053" endtime="20201030 18:32:05.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:05.060" level="INFO">${ACCURACY} = {'diff': [8.237499999999912e-05, 8.233399999999988e-05, 8.237499999999912e-05, 8.224999999999899e-05, 8.224999999999899e-05, 8.240300000000172e-05, 8.22369999999989e-05, 8.223700000000236e-05, 8.22219...</msg>
<status status="PASS" starttime="20201030 18:32:05.057" endtime="20201030 18:32:05.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.064" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 18:32:05.063" endtime="20201030 18:32:05.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.067" level="INFO">VALUE: [8.237499999999912e-05, 8.233399999999988e-05, 8.237499999999912e-05, 8.224999999999899e-05, 8.224999999999899e-05, 8.240300000000172e-05, 8.22369999999989e-05, 8.223700000000236e-05, 8.222199999999985e-05, 8.216600000000157e-05, 8.237499999999912e-05, 8.236099999999955e-05, 8.21659999999981e-05, 8.240300000000172e-05, 8.241699999999783e-05, 8.237499999999912e-05, 8.219399999999724e-05, 8.219400000000071e-05, 8.215300000000147e-05, 8.230600000000074e-05, 8.209699999999973e-05, 8.222199999999985e-05, 8.230600000000074e-05, 8.220899999999975e-05, 8.24170000000013e-05, 8.234800000000292e-05, 8.240299999999826e-05, 8.241600000000182e-05, 8.220800000000028e-05, 8.230500000000127e-05, 8.222199999999985e-05, 8.227700000000213e-05, 8.240300000000172e-05, 8.224999999999899e-05, 8.230600000000074e-05, 8.216700000000104e-05, 8.14170000000003e-05, 8.234699999999998e-05, 8.215300000000147e-05, 8.233299999999694e-05, 8.24170000000013e-05, 8.219499999999672e-05, 8.226399999999856e-05, 8.215300000000147e-05, 8.238899999999869e-05, 8.24170000000013e-05, 8.240299999999826e-05, 8.227699999999866e-05, 8.227699999999866e-05, 8.220800000000028e-05]</msg>
<status status="PASS" starttime="20201030 18:32:05.065" endtime="20201030 18:32:05.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.061" endtime="20201030 18:32:05.068"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:05.072" endtime="20201030 18:32:05.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.070" endtime="20201030 18:32:05.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.069" endtime="20201030 18:32:05.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.712" endtime="20201030 18:32:05.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.711" endtime="20201030 18:32:05.093"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.101" endtime="20201030 18:32:05.119"></status>
</kw>
<msg timestamp="20201030 18:32:05.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:05.100" endtime="20201030 18:32:05.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:05.121" endtime="20201030 18:32:05.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.123" endtime="20201030 18:32:05.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.097" endtime="20201030 18:32:05.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.095" endtime="20201030 18:32:05.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.132" endtime="20201030 18:32:05.417"></status>
</kw>
<msg timestamp="20201030 18:32:05.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022814292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022896764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:05.131" endtime="20201030 18:32:05.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022814292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022896764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:05.421" endtime="20201030 18:32:05.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.429" endtime="20201030 18:32:05.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.128" endtime="20201030 18:32:05.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.127" endtime="20201030 18:32:05.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:05.436" level="INFO">${RESULT} = [{'diff': 8.24720000000001e-05}, {'diff': 8.32919999999987e-05}, {'diff': 8.329200000000217e-05}, {'diff': 8.326399999999956e-05}, {'diff': 8.324999999999999e-05}, {'diff': 8.345800000000153e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:05.433" endtime="20201030 18:32:05.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:05.440" level="INFO">${ACCURACY} = {'diff': [8.24720000000001e-05, 8.32919999999987e-05, 8.329200000000217e-05, 8.326399999999956e-05, 8.324999999999999e-05, 8.345800000000153e-05, 8.32369999999999e-05, 8.329200000000217e-05, 8.3137999...</msg>
<status status="PASS" starttime="20201030 18:32:05.437" endtime="20201030 18:32:05.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.445" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 18:32:05.443" endtime="20201030 18:32:05.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.447" level="INFO">VALUE: [8.24720000000001e-05, 8.32919999999987e-05, 8.329200000000217e-05, 8.326399999999956e-05, 8.324999999999999e-05, 8.345800000000153e-05, 8.32369999999999e-05, 8.329200000000217e-05, 8.313799999999996e-05, 8.315199999999953e-05, 8.326399999999956e-05, 8.327799999999913e-05, 8.337500000000012e-05, 8.33469999999975e-05, 8.318000000000214e-05, 8.337500000000012e-05, 8.317999999999867e-05, 8.323599999999695e-05, 8.332000000000131e-05, 8.324999999999999e-05, 8.32919999999987e-05, 8.337500000000012e-05, 8.329200000000217e-05, 8.318099999999815e-05, 8.331999999999784e-05, 8.323599999999695e-05, 8.332000000000131e-05, 8.334800000000045e-05, 8.340199999999978e-05, 8.323599999999695e-05, 8.323600000000042e-05, 8.337500000000012e-05, 8.33049999999988e-05, 8.324999999999999e-05, 8.336100000000055e-05, 8.324999999999999e-05, 8.32919999999987e-05, 8.32780000000026e-05, 8.327799999999913e-05, 8.320900000000075e-05, 8.24720000000001e-05, 8.333400000000088e-05, 8.340299999999926e-05, 8.334799999999698e-05, 8.324999999999999e-05, 8.324999999999999e-05, 8.32369999999999e-05, 8.318099999999815e-05, 8.313799999999996e-05, 8.31659999999991e-05]</msg>
<status status="PASS" starttime="20201030 18:32:05.446" endtime="20201030 18:32:05.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.441" endtime="20201030 18:32:05.449"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:05.453" endtime="20201030 18:32:05.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.451" endtime="20201030 18:32:05.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.450" endtime="20201030 18:32:05.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.093" endtime="20201030 18:32:05.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.093" endtime="20201030 18:32:05.473"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.482" endtime="20201030 18:32:05.501"></status>
</kw>
<msg timestamp="20201030 18:32:05.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:05.481" endtime="20201030 18:32:05.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:05.502" endtime="20201030 18:32:05.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.505" endtime="20201030 18:32:05.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.478" endtime="20201030 18:32:05.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.476" endtime="20201030 18:32:05.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.514" endtime="20201030 18:32:05.799"></status>
</kw>
<msg timestamp="20201030 18:32:05.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021950875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02203525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:05.512" endtime="20201030 18:32:05.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021950875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02203525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:05.803" endtime="20201030 18:32:05.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.811" endtime="20201030 18:32:05.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.509" endtime="20201030 18:32:05.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.508" endtime="20201030 18:32:05.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:05.818" level="INFO">${RESULT} = [{'diff': 8.437499999999765e-05}, {'diff': 8.426400000000056e-05}, {'diff': 8.443000000000339e-05}, {'diff': 8.422299999999786e-05}, {'diff': 8.422199999999838e-05}, {'diff': 8.441699999999983e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:05.815" endtime="20201030 18:32:05.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:05.823" level="INFO">${ACCURACY} = {'diff': [8.437499999999765e-05, 8.426400000000056e-05, 8.443000000000339e-05, 8.422299999999786e-05, 8.422199999999838e-05, 8.441699999999983e-05, 8.440300000000026e-05, 8.43469999999985e-05, 8.34029...</msg>
<status status="PASS" starttime="20201030 18:32:05.819" endtime="20201030 18:32:05.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.827" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 18:32:05.826" endtime="20201030 18:32:05.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.830" level="INFO">VALUE: [8.437499999999765e-05, 8.426400000000056e-05, 8.443000000000339e-05, 8.422299999999786e-05, 8.422199999999838e-05, 8.441699999999983e-05, 8.440300000000026e-05, 8.43469999999985e-05, 8.340299999999926e-05, 8.437499999999765e-05, 8.433299999999894e-05, 8.426300000000109e-05, 8.441600000000035e-05, 8.438900000000069e-05, 8.427800000000013e-05, 8.342999999999892e-05, 8.417999999999967e-05, 8.440300000000026e-05, 8.416699999999958e-05, 8.423599999999795e-05, 8.419499999999872e-05, 8.436099999999808e-05, 8.4153e-05, 8.431999999999884e-05, 8.4153e-05, 8.34309999999984e-05, 8.437500000000112e-05, 8.34170000000023e-05, 8.42919999999997e-05, 8.437500000000112e-05, 8.437500000000112e-05, 8.426399999999709e-05, 8.442999999999992e-05, 8.419399999999924e-05, 8.420799999999881e-05, 8.440300000000026e-05, 8.42919999999997e-05, 8.424999999999752e-05, 8.418099999999915e-05, 8.4153e-05, 8.437500000000112e-05, 8.430599999999927e-05, 8.436100000000155e-05, 8.422199999999838e-05, 8.416699999999958e-05, 8.418099999999915e-05, 8.436099999999808e-05, 8.419399999999924e-05, 8.348600000000067e-05, 8.426299999999762e-05]</msg>
<status status="PASS" starttime="20201030 18:32:05.829" endtime="20201030 18:32:05.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.824" endtime="20201030 18:32:05.831"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:05.835" endtime="20201030 18:32:05.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.833" endtime="20201030 18:32:05.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.832" endtime="20201030 18:32:05.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.474" endtime="20201030 18:32:05.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.474" endtime="20201030 18:32:05.856"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.864" endtime="20201030 18:32:05.882"></status>
</kw>
<msg timestamp="20201030 18:32:05.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:05.862" endtime="20201030 18:32:05.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:05.883" endtime="20201030 18:32:05.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.886" endtime="20201030 18:32:05.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.860" endtime="20201030 18:32:05.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.858" endtime="20201030 18:32:05.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.895" endtime="20201030 18:32:06.181"></status>
</kw>
<msg timestamp="20201030 18:32:06.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022021083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022106556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:05.893" endtime="20201030 18:32:06.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022021083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022106556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:06.185" endtime="20201030 18:32:06.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.193" endtime="20201030 18:32:06.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.891" endtime="20201030 18:32:06.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.889" endtime="20201030 18:32:06.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:06.200" level="INFO">${RESULT} = [{'diff': 8.54729999999991e-05}, {'diff': 8.512500000000187e-05}, {'diff': 8.524999999999852e-05}, {'diff': 8.533299999999994e-05}, {'diff': 8.53469999999995e-05}, {'diff': 8.529099999999776e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:06.197" endtime="20201030 18:32:06.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:06.204" level="INFO">${ACCURACY} = {'diff': [8.54729999999991e-05, 8.512500000000187e-05, 8.524999999999852e-05, 8.533299999999994e-05, 8.53469999999995e-05, 8.529099999999776e-05, 8.5153000000001e-05, 8.5153000000001e-05, 8.5292000000...</msg>
<status status="PASS" starttime="20201030 18:32:06.201" endtime="20201030 18:32:06.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.209" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 18:32:06.208" endtime="20201030 18:32:06.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.211" level="INFO">VALUE: [8.54729999999991e-05, 8.512500000000187e-05, 8.524999999999852e-05, 8.533299999999994e-05, 8.53469999999995e-05, 8.529099999999776e-05, 8.5153000000001e-05, 8.5153000000001e-05, 8.52920000000007e-05, 8.520799999999981e-05, 8.51249999999984e-05, 8.525000000000199e-05, 8.51669999999971e-05, 8.533299999999994e-05, 8.523600000000242e-05, 8.533399999999941e-05, 8.526400000000156e-05, 8.536099999999908e-05, 8.526399999999809e-05, 8.538899999999822e-05, 8.540300000000126e-05, 8.440300000000026e-05, 8.53050000000008e-05, 8.536099999999908e-05, 8.522199999999938e-05, 8.529099999999776e-05, 8.524999999999852e-05, 8.522199999999938e-05, 8.536100000000255e-05, 8.518000000000067e-05, 8.530600000000027e-05, 8.534700000000298e-05, 8.53469999999995e-05, 8.518100000000015e-05, 8.516700000000058e-05, 8.522299999999886e-05, 8.522299999999886e-05, 8.520900000000275e-05, 8.511099999999883e-05, 8.526299999999862e-05, 8.52920000000007e-05, 8.540199999999831e-05, 8.522199999999938e-05, 8.536100000000255e-05, 8.530499999999733e-05, 8.53059999999968e-05, 8.527800000000113e-05, 8.51669999999971e-05, 8.516700000000058e-05, 8.537499999999865e-05]</msg>
<status status="PASS" starttime="20201030 18:32:06.210" endtime="20201030 18:32:06.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.205" endtime="20201030 18:32:06.212"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:06.216" endtime="20201030 18:32:06.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.215" endtime="20201030 18:32:06.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.213" endtime="20201030 18:32:06.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.856" endtime="20201030 18:32:06.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.856" endtime="20201030 18:32:06.237"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.245" endtime="20201030 18:32:06.265"></status>
</kw>
<msg timestamp="20201030 18:32:06.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:06.244" endtime="20201030 18:32:06.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:06.266" endtime="20201030 18:32:06.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.269" endtime="20201030 18:32:06.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.241" endtime="20201030 18:32:06.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.239" endtime="20201030 18:32:06.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.278" endtime="20201030 18:32:06.563"></status>
</kw>
<msg timestamp="20201030 18:32:06.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022976722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023063208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:06.276" endtime="20201030 18:32:06.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022976722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023063208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:06.568" endtime="20201030 18:32:06.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.576" endtime="20201030 18:32:06.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.274" endtime="20201030 18:32:06.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.272" endtime="20201030 18:32:06.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:06.582" level="INFO">${RESULT} = [{'diff': 8.64860000000002e-05}, {'diff': 8.638899999999922e-05}, {'diff': 8.626399999999909e-05}, {'diff': 8.627800000000213e-05}, {'diff': 8.630499999999833e-05}, {'diff': 8.626399999999909e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:06.579" endtime="20201030 18:32:06.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:06.586" level="INFO">${ACCURACY} = {'diff': [8.64860000000002e-05, 8.638899999999922e-05, 8.626399999999909e-05, 8.627800000000213e-05, 8.630499999999833e-05, 8.626399999999909e-05, 8.626399999999909e-05, 8.636100000000008e-05, 8.63200...</msg>
<status status="PASS" starttime="20201030 18:32:06.583" endtime="20201030 18:32:06.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.591" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 18:32:06.590" endtime="20201030 18:32:06.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.593" level="INFO">VALUE: [8.64860000000002e-05, 8.638899999999922e-05, 8.626399999999909e-05, 8.627800000000213e-05, 8.630499999999833e-05, 8.626399999999909e-05, 8.626399999999909e-05, 8.636100000000008e-05, 8.632000000000084e-05, 8.61249999999994e-05, 8.641700000000183e-05, 8.638899999999922e-05, 8.61669999999981e-05, 8.636100000000008e-05, 8.624999999999952e-05, 8.627799999999866e-05, 8.644399999999802e-05, 8.633299999999747e-05, 8.626400000000256e-05, 8.620800000000081e-05, 8.637500000000312e-05, 8.63050000000018e-05, 8.624999999999952e-05, 8.644500000000097e-05, 8.624999999999952e-05, 8.544499999999997e-05, 8.633300000000094e-05, 8.633300000000094e-05, 8.63470000000005e-05, 8.618099999999768e-05, 8.630600000000127e-05, 8.547199999999963e-05, 8.54310000000004e-05, 8.638899999999922e-05, 8.637499999999965e-05, 8.638799999999974e-05, 8.620800000000081e-05, 8.623599999999995e-05, 8.63189999999979e-05, 8.627699999999919e-05, 8.637499999999965e-05, 8.640300000000226e-05, 8.643099999999793e-05, 8.623599999999995e-05, 8.636100000000008e-05, 8.638899999999922e-05, 8.636100000000008e-05, 8.619500000000072e-05, 8.634699999999704e-05, 8.619500000000072e-05]</msg>
<status status="PASS" starttime="20201030 18:32:06.592" endtime="20201030 18:32:06.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.587" endtime="20201030 18:32:06.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:06.605" endtime="20201030 18:32:06.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.604" endtime="20201030 18:32:06.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.602" endtime="20201030 18:32:06.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.238" endtime="20201030 18:32:06.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.237" endtime="20201030 18:32:06.626"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.635" endtime="20201030 18:32:06.653"></status>
</kw>
<msg timestamp="20201030 18:32:06.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:06.633" endtime="20201030 18:32:06.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:06.655" endtime="20201030 18:32:06.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.657" endtime="20201030 18:32:06.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.630" endtime="20201030 18:32:06.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.628" endtime="20201030 18:32:06.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.667" endtime="20201030 18:32:06.951"></status>
</kw>
<msg timestamp="20201030 18:32:06.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021789764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021876347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:06.666" endtime="20201030 18:32:06.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021789764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021876347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:06.956" endtime="20201030 18:32:06.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.964" endtime="20201030 18:32:06.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.663" endtime="20201030 18:32:06.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.661" endtime="20201030 18:32:06.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:06.970" level="INFO">${RESULT} = [{'diff': 8.658300000000119e-05}, {'diff': 8.713899999999997e-05}, {'diff': 8.738900000000022e-05}, {'diff': 8.641700000000183e-05}, {'diff': 8.727700000000019e-05}, {'diff': 8.731900000000237e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:06.967" endtime="20201030 18:32:06.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:06.975" level="INFO">${ACCURACY} = {'diff': [8.658300000000119e-05, 8.713899999999997e-05, 8.738900000000022e-05, 8.641700000000183e-05, 8.727700000000019e-05, 8.731900000000237e-05, 8.718099999999868e-05, 8.713800000000049e-05, 8.7152...</msg>
<status status="PASS" starttime="20201030 18:32:06.971" endtime="20201030 18:32:06.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.980" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 18:32:06.979" endtime="20201030 18:32:06.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.982" level="INFO">VALUE: [8.658300000000119e-05, 8.713899999999997e-05, 8.738900000000022e-05, 8.641700000000183e-05, 8.727700000000019e-05, 8.731900000000237e-05, 8.718099999999868e-05, 8.713800000000049e-05, 8.715200000000006e-05, 8.723599999999748e-05, 8.716599999999963e-05, 8.720800000000181e-05, 8.725000000000052e-05, 8.738900000000022e-05, 8.733299999999847e-05, 8.740299999999979e-05, 8.718099999999868e-05, 8.718099999999868e-05, 8.719499999999825e-05, 8.737500000000065e-05, 8.726400000000009e-05, 8.725000000000052e-05, 8.71669999999991e-05, 8.740299999999979e-05, 8.720799999999834e-05, 8.644399999999802e-05, 8.737500000000065e-05, 8.644400000000149e-05, 8.720799999999834e-05, 8.738900000000022e-05, 8.737499999999718e-05, 8.725000000000052e-05, 8.725000000000052e-05, 8.72920000000027e-05, 8.727799999999966e-05, 8.73470000000015e-05, 8.736199999999708e-05, 8.734699999999804e-05, 8.726400000000009e-05, 8.734799999999751e-05, 8.718099999999868e-05, 8.730600000000227e-05, 8.730600000000227e-05, 8.736100000000108e-05, 8.738800000000074e-05, 8.738800000000074e-05, 8.720800000000181e-05, 8.741599999999988e-05, 8.726400000000009e-05, 8.729099999999976e-05]</msg>
<status status="PASS" starttime="20201030 18:32:06.981" endtime="20201030 18:32:06.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.976" endtime="20201030 18:32:06.984"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:06.987" endtime="20201030 18:32:07.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.986" endtime="20201030 18:32:07.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.985" endtime="20201030 18:32:07.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.627" endtime="20201030 18:32:07.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.626" endtime="20201030 18:32:07.008"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.016" endtime="20201030 18:32:07.035"></status>
</kw>
<msg timestamp="20201030 18:32:07.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:07.015" endtime="20201030 18:32:07.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:07.037" endtime="20201030 18:32:07.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.039" endtime="20201030 18:32:07.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.012" endtime="20201030 18:32:07.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.010" endtime="20201030 18:32:07.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.048" endtime="20201030 18:32:07.334"></status>
</kw>
<msg timestamp="20201030 18:32:07.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022043208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022130736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:07.047" endtime="20201030 18:32:07.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022043208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022130736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:07.338" endtime="20201030 18:32:07.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.346" endtime="20201030 18:32:07.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.044" endtime="20201030 18:32:07.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.042" endtime="20201030 18:32:07.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:07.353" level="INFO">${RESULT} = [{'diff': 8.752799999999991e-05}, {'diff': 8.83189999999999e-05}, {'diff': 8.822199999999891e-05}, {'diff': 8.815300000000054e-05}, {'diff': 8.843099999999993e-05}, {'diff': 8.811100000000183e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:07.350" endtime="20201030 18:32:07.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:07.357" level="INFO">${ACCURACY} = {'diff': [8.752799999999991e-05, 8.83189999999999e-05, 8.822199999999891e-05, 8.815300000000054e-05, 8.843099999999993e-05, 8.811100000000183e-05, 8.829200000000023e-05, 8.841700000000036e-05, 8.82359...</msg>
<status status="PASS" starttime="20201030 18:32:07.354" endtime="20201030 18:32:07.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.361" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 18:32:07.360" endtime="20201030 18:32:07.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.364" level="INFO">VALUE: [8.752799999999991e-05, 8.83189999999999e-05, 8.822199999999891e-05, 8.815300000000054e-05, 8.843099999999993e-05, 8.811100000000183e-05, 8.829200000000023e-05, 8.841700000000036e-05, 8.823599999999848e-05, 8.815300000000054e-05, 8.831999999999937e-05, 8.81670000000001e-05, 8.83059999999998e-05, 8.822299999999839e-05, 8.818099999999968e-05, 8.748599999999773e-05, 8.836100000000208e-05, 8.81250000000014e-05, 8.837499999999818e-05, 8.819399999999977e-05, 8.833299999999947e-05, 8.834699999999904e-05, 8.820799999999934e-05, 8.826400000000109e-05, 8.824999999999805e-05, 8.81670000000001e-05, 8.81670000000001e-05, 8.831999999999937e-05, 8.833399999999894e-05, 8.74449999999985e-05, 8.833299999999947e-05, 8.809799999999826e-05, 8.840199999999784e-05, 8.836199999999808e-05, 8.815200000000106e-05, 8.830500000000033e-05, 8.833299999999947e-05, 8.830500000000033e-05, 8.820799999999934e-05, 8.841600000000088e-05, 8.833299999999947e-05, 8.818099999999968e-05, 8.83189999999999e-05, 8.824999999999805e-05, 8.837500000000165e-05, 8.833399999999894e-05, 8.818099999999968e-05, 8.832000000000284e-05, 8.826400000000109e-05, 8.827800000000066e-05]</msg>
<status status="PASS" starttime="20201030 18:32:07.363" endtime="20201030 18:32:07.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.358" endtime="20201030 18:32:07.365"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:07.369" endtime="20201030 18:32:07.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.368" endtime="20201030 18:32:07.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.366" endtime="20201030 18:32:07.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.009" endtime="20201030 18:32:07.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.008" endtime="20201030 18:32:07.390"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.398" endtime="20201030 18:32:07.417"></status>
</kw>
<msg timestamp="20201030 18:32:07.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:07.397" endtime="20201030 18:32:07.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:07.419" endtime="20201030 18:32:07.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.421" endtime="20201030 18:32:07.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.394" endtime="20201030 18:32:07.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.392" endtime="20201030 18:32:07.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.430" endtime="20201030 18:32:07.716"></status>
</kw>
<msg timestamp="20201030 18:32:07.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023193931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023282917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:07.429" endtime="20201030 18:32:07.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023193931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023282917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:07.720" endtime="20201030 18:32:07.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.729" endtime="20201030 18:32:07.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.426" endtime="20201030 18:32:07.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.425" endtime="20201030 18:32:07.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:07.735" level="INFO">${RESULT} = [{'diff': 8.898599999999923e-05}, {'diff': 8.93190000000009e-05}, {'diff': 8.927800000000166e-05}, {'diff': 8.934700000000004e-05}, {'diff': 8.924999999999905e-05}, {'diff': 8.920799999999687e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:07.732" endtime="20201030 18:32:07.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:07.739" level="INFO">${ACCURACY} = {'diff': [8.898599999999923e-05, 8.93190000000009e-05, 8.927800000000166e-05, 8.934700000000004e-05, 8.924999999999905e-05, 8.920799999999687e-05, 8.841600000000088e-05, 8.843000000000045e-05, 8.93890...</msg>
<status status="PASS" starttime="20201030 18:32:07.736" endtime="20201030 18:32:07.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.744" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 18:32:07.743" endtime="20201030 18:32:07.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.747" level="INFO">VALUE: [8.898599999999923e-05, 8.93190000000009e-05, 8.927800000000166e-05, 8.934700000000004e-05, 8.924999999999905e-05, 8.920799999999687e-05, 8.841600000000088e-05, 8.843000000000045e-05, 8.938900000000222e-05, 8.940300000000179e-05, 8.926400000000209e-05, 8.922199999999991e-05, 8.927800000000166e-05, 8.923599999999948e-05, 8.940300000000179e-05, 8.918099999999721e-05, 8.934700000000004e-05, 8.923600000000295e-05, 8.940299999999832e-05, 8.918099999999721e-05, 8.930499999999786e-05, 8.918100000000068e-05, 8.940300000000179e-05, 8.936200000000255e-05, 8.937499999999918e-05, 8.916600000000163e-05, 8.915299999999807e-05, 8.920800000000034e-05, 8.841600000000088e-05, 8.917999999999773e-05, 8.923599999999948e-05, 8.937499999999918e-05, 8.918100000000068e-05, 8.841700000000036e-05, 8.932000000000037e-05, 8.938799999999927e-05, 8.934700000000004e-05, 8.926400000000209e-05, 8.91389999999985e-05, 8.93060000000008e-05, 8.838900000000122e-05, 8.913799999999902e-05, 8.91670000000011e-05, 8.920800000000034e-05, 8.938899999999875e-05, 8.926399999999862e-05, 8.93190000000009e-05, 8.926399999999862e-05, 8.915300000000154e-05, 8.918099999999721e-05]</msg>
<status status="PASS" starttime="20201030 18:32:07.745" endtime="20201030 18:32:07.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.740" endtime="20201030 18:32:07.748"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:07.752" endtime="20201030 18:32:07.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.750" endtime="20201030 18:32:07.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.749" endtime="20201030 18:32:07.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.391" endtime="20201030 18:32:07.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.390" endtime="20201030 18:32:07.773"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.781" endtime="20201030 18:32:07.800"></status>
</kw>
<msg timestamp="20201030 18:32:07.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:07.780" endtime="20201030 18:32:07.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:07.802" endtime="20201030 18:32:07.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.804" endtime="20201030 18:32:07.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.777" endtime="20201030 18:32:07.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.775" endtime="20201030 18:32:07.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.813" endtime="20201030 18:32:08.098"></status>
</kw>
<msg timestamp="20201030 18:32:08.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021793917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021883611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:07.812" endtime="20201030 18:32:08.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021793917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021883611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:08.102" endtime="20201030 18:32:08.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.111" endtime="20201030 18:32:08.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.809" endtime="20201030 18:32:08.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.807" endtime="20201030 18:32:08.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:08.117" level="INFO">${RESULT} = [{'diff': 8.969400000000127e-05}, {'diff': 9.025000000000005e-05}, {'diff': 9.022199999999744e-05}, {'diff': 9.030599999999833e-05}, {'diff': 9.025000000000005e-05}, {'diff': 9.016699999999864e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:08.114" endtime="20201030 18:32:08.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:08.125" level="INFO">${ACCURACY} = {'diff': [8.969400000000127e-05, 9.025000000000005e-05, 9.022199999999744e-05, 9.030599999999833e-05, 9.025000000000005e-05, 9.016699999999864e-05, 9.016600000000263e-05, 9.01670000000021e-05, 9.02919...</msg>
<status status="PASS" starttime="20201030 18:32:08.118" endtime="20201030 18:32:08.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.129" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 18:32:08.128" endtime="20201030 18:32:08.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.132" level="INFO">VALUE: [8.969400000000127e-05, 9.025000000000005e-05, 9.022199999999744e-05, 9.030599999999833e-05, 9.025000000000005e-05, 9.016699999999864e-05, 9.016600000000263e-05, 9.01670000000021e-05, 9.029199999999876e-05, 9.027799999999919e-05, 9.018099999999821e-05, 8.941700000000136e-05, 9.030499999999886e-05, 9.022200000000091e-05, 9.041700000000236e-05, 9.034700000000104e-05, 9.012499999999993e-05, 9.026399999999962e-05, 9.023600000000048e-05, 9.029200000000223e-05, 8.943099999999746e-05, 9.024999999999658e-05, 9.01389999999995e-05, 9.043099999999846e-05, 9.027799999999919e-05, 9.037500000000018e-05, 9.025000000000005e-05, 9.036200000000008e-05, 9.025000000000005e-05, 9.023600000000048e-05, 9.016600000000263e-05, 9.037500000000018e-05, 9.029200000000223e-05, 9.037500000000018e-05, 9.033300000000147e-05, 9.037500000000018e-05, 9.01939999999983e-05, 9.029199999999876e-05, 9.025000000000005e-05, 9.015299999999907e-05, 9.037500000000018e-05, 9.045800000000159e-05, 9.022200000000091e-05, 9.016699999999864e-05, 9.034700000000104e-05, 9.022299999999692e-05, 9.01670000000021e-05, 9.033400000000094e-05, 9.038800000000027e-05, 9.033300000000147e-05]</msg>
<status status="PASS" starttime="20201030 18:32:08.130" endtime="20201030 18:32:08.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.126" endtime="20201030 18:32:08.133"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:08.137" endtime="20201030 18:32:08.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.135" endtime="20201030 18:32:08.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.134" endtime="20201030 18:32:08.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.774" endtime="20201030 18:32:08.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.773" endtime="20201030 18:32:08.157"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.166" endtime="20201030 18:32:08.185"></status>
</kw>
<msg timestamp="20201030 18:32:08.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.165" endtime="20201030 18:32:08.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.186" endtime="20201030 18:32:08.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.189" endtime="20201030 18:32:08.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.162" endtime="20201030 18:32:08.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.160" endtime="20201030 18:32:08.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.198" endtime="20201030 18:32:08.484"></status>
</kw>
<msg timestamp="20201030 18:32:08.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021835319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021926097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:08.196" endtime="20201030 18:32:08.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021835319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021926097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:08.488" endtime="20201030 18:32:08.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.496" endtime="20201030 18:32:08.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.193" endtime="20201030 18:32:08.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.192" endtime="20201030 18:32:08.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:08.503" level="INFO">${RESULT} = [{'diff': 9.077799999999969e-05}, {'diff': 9.140300000000032e-05}, {'diff': 9.136099999999814e-05}, {'diff': 9.122199999999844e-05}, {'diff': 9.116699999999964e-05}, {'diff': 9.118099999999921e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:08.499" endtime="20201030 18:32:08.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:08.507" level="INFO">${ACCURACY} = {'diff': [9.077799999999969e-05, 9.140300000000032e-05, 9.136099999999814e-05, 9.122199999999844e-05, 9.116699999999964e-05, 9.118099999999921e-05, 9.141699999999989e-05, 9.043100000000193e-05, 9.1180...</msg>
<status status="PASS" starttime="20201030 18:32:08.504" endtime="20201030 18:32:08.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.511" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 18:32:08.510" endtime="20201030 18:32:08.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.514" level="INFO">VALUE: [9.077799999999969e-05, 9.140300000000032e-05, 9.136099999999814e-05, 9.122199999999844e-05, 9.116699999999964e-05, 9.118099999999921e-05, 9.141699999999989e-05, 9.043100000000193e-05, 9.118099999999921e-05, 9.129199999999976e-05, 9.118099999999921e-05, 9.141699999999989e-05, 9.134799999999804e-05, 9.127800000000019e-05, 9.138899999999728e-05, 9.040300000000279e-05, 9.13190000000029e-05, 9.140299999999685e-05, 9.11939999999993e-05, 9.120799999999887e-05, 9.116600000000016e-05, 9.130499999999986e-05, 9.120799999999887e-05, 9.131899999999943e-05, 9.115300000000007e-05, 9.119499999999878e-05, 9.043099999999846e-05, 9.124999999999758e-05, 9.118099999999921e-05, 9.127699999999725e-05, 9.138900000000075e-05, 9.117999999999973e-05, 9.125000000000105e-05, 9.120800000000234e-05, 9.1332999999999e-05, 9.140200000000084e-05, 9.122200000000191e-05, 9.131899999999943e-05, 9.041599999999941e-05, 9.147299999999817e-05, 9.11390000000005e-05, 9.116699999999964e-05, 9.129199999999976e-05, 9.123600000000148e-05, 9.108300000000222e-05, 9.125000000000105e-05, 9.120900000000182e-05, 9.04450000000015e-05, 9.140300000000032e-05, 9.140300000000032e-05]</msg>
<status status="PASS" starttime="20201030 18:32:08.512" endtime="20201030 18:32:08.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.508" endtime="20201030 18:32:08.515"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:08.519" endtime="20201030 18:32:08.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.517" endtime="20201030 18:32:08.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.516" endtime="20201030 18:32:08.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.158" endtime="20201030 18:32:08.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.158" endtime="20201030 18:32:08.539"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.548" endtime="20201030 18:32:08.567"></status>
</kw>
<msg timestamp="20201030 18:32:08.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.546" endtime="20201030 18:32:08.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.569" endtime="20201030 18:32:08.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.571" endtime="20201030 18:32:08.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.544" endtime="20201030 18:32:08.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.542" endtime="20201030 18:32:08.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.581" endtime="20201030 18:32:08.867"></status>
</kw>
<msg timestamp="20201030 18:32:08.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022613417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022705236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:08.579" endtime="20201030 18:32:08.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022613417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022705236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:08.871" endtime="20201030 18:32:08.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.879" endtime="20201030 18:32:08.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.576" endtime="20201030 18:32:08.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.575" endtime="20201030 18:32:08.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:08.886" level="INFO">${RESULT} = [{'diff': 9.181899999999993e-05}, {'diff': 9.216700000000064e-05}, {'diff': 9.142999999999998e-05}, {'diff': 9.2333e-05}, {'diff': 9.222199999999944e-05}, {'diff': 9.236099999999914e-05}, {'diff': 9.2...</msg>
<status status="PASS" starttime="20201030 18:32:08.883" endtime="20201030 18:32:08.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:08.890" level="INFO">${ACCURACY} = {'diff': [9.181899999999993e-05, 9.216700000000064e-05, 9.142999999999998e-05, 9.2333e-05, 9.222199999999944e-05, 9.236099999999914e-05, 9.218100000000021e-05, 9.233399999999947e-05, 9.225000000000205...</msg>
<status status="PASS" starttime="20201030 18:32:08.887" endtime="20201030 18:32:08.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.895" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 18:32:08.894" endtime="20201030 18:32:08.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.897" level="INFO">VALUE: [9.181899999999993e-05, 9.216700000000064e-05, 9.142999999999998e-05, 9.2333e-05, 9.222199999999944e-05, 9.236099999999914e-05, 9.218100000000021e-05, 9.233399999999947e-05, 9.225000000000205e-05, 9.237499999999871e-05, 9.222299999999892e-05, 9.220900000000282e-05, 9.216700000000064e-05, 9.21940000000003e-05, 9.21940000000003e-05, 9.21659999999977e-05, 9.231900000000043e-05, 9.225000000000205e-05, 9.223599999999901e-05, 9.240300000000132e-05, 9.225000000000205e-05, 9.223600000000248e-05, 9.21940000000003e-05, 9.240300000000132e-05, 9.223599999999901e-05, 9.226400000000162e-05, 9.218100000000021e-05, 9.220899999999935e-05, 9.140300000000032e-05, 9.143099999999946e-05, 9.141699999999989e-05, 9.238800000000227e-05, 9.237499999999871e-05, 9.223599999999901e-05, 9.218000000000073e-05, 9.21940000000003e-05, 9.227799999999772e-05, 9.2333e-05, 9.220799999999987e-05, 9.240299999999785e-05, 9.2333e-05, 9.241700000000089e-05, 9.222199999999944e-05, 9.229200000000076e-05, 9.216700000000064e-05, 9.147200000000216e-05, 9.224999999999858e-05, 9.229200000000076e-05, 9.240299999999785e-05, 9.222199999999944e-05]</msg>
<status status="PASS" starttime="20201030 18:32:08.896" endtime="20201030 18:32:08.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.891" endtime="20201030 18:32:08.899"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:08.903" endtime="20201030 18:32:08.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.901" endtime="20201030 18:32:08.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.900" endtime="20201030 18:32:08.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.540" endtime="20201030 18:32:08.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.540" endtime="20201030 18:32:08.923"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.932" endtime="20201030 18:32:08.951"></status>
</kw>
<msg timestamp="20201030 18:32:08.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.931" endtime="20201030 18:32:08.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.953" endtime="20201030 18:32:08.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.955" endtime="20201030 18:32:08.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.928" endtime="20201030 18:32:08.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.926" endtime="20201030 18:32:08.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.964" endtime="20201030 18:32:09.246"></status>
</kw>
<msg timestamp="20201030 18:32:09.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021764944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021857917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:08.963" endtime="20201030 18:32:09.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021764944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021857917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:09.250" endtime="20201030 18:32:09.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.258" endtime="20201030 18:32:09.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.960" endtime="20201030 18:32:09.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.958" endtime="20201030 18:32:09.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:09.265" level="INFO">${RESULT} = [{'diff': 9.297299999999967e-05}, {'diff': 9.315300000000207e-05}, {'diff': 9.319500000000078e-05}, {'diff': 9.322199999999697e-05}, {'diff': 9.333299999999753e-05}, {'diff': 9.322299999999992e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:09.261" endtime="20201030 18:32:09.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:09.270" level="INFO">${ACCURACY} = {'diff': [9.297299999999967e-05, 9.315300000000207e-05, 9.319500000000078e-05, 9.322199999999697e-05, 9.333299999999753e-05, 9.322299999999992e-05, 9.330600000000133e-05, 9.326399999999915e-05, 9.3208...</msg>
<status status="PASS" starttime="20201030 18:32:09.266" endtime="20201030 18:32:09.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.274" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 18:32:09.273" endtime="20201030 18:32:09.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.277" level="INFO">VALUE: [9.297299999999967e-05, 9.315300000000207e-05, 9.319500000000078e-05, 9.322199999999697e-05, 9.333299999999753e-05, 9.322299999999992e-05, 9.330600000000133e-05, 9.326399999999915e-05, 9.320800000000087e-05, 9.315300000000207e-05, 9.338899999999928e-05, 9.33469999999971e-05, 9.337499999999971e-05, 9.336100000000014e-05, 9.330599999999786e-05, 9.313899999999903e-05, 9.32079999999974e-05, 9.243100000000046e-05, 9.333299999999753e-05, 9.326399999999915e-05, 9.33469999999971e-05, 9.320900000000035e-05, 9.323600000000001e-05, 9.327799999999872e-05, 9.330600000000133e-05, 9.319500000000078e-05, 9.3333000000001e-05, 9.331900000000143e-05, 9.326299999999968e-05, 9.340300000000232e-05, 9.323600000000001e-05, 9.338899999999928e-05, 9.315300000000207e-05, 9.324999999999958e-05, 9.331900000000143e-05, 9.324999999999958e-05, 9.32079999999974e-05, 9.318100000000121e-05, 9.341699999999842e-05, 9.341700000000189e-05, 9.338899999999928e-05, 9.320900000000035e-05, 9.333400000000047e-05, 9.320800000000087e-05, 9.338899999999928e-05, 9.330500000000186e-05, 9.320800000000087e-05, 9.3333000000001e-05, 9.327699999999925e-05, 9.330600000000133e-05]</msg>
<status status="PASS" starttime="20201030 18:32:09.275" endtime="20201030 18:32:09.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.270" endtime="20201030 18:32:09.278"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:09.281" endtime="20201030 18:32:09.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.280" endtime="20201030 18:32:09.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.279" endtime="20201030 18:32:09.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.924" endtime="20201030 18:32:09.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.924" endtime="20201030 18:32:09.302"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.311" endtime="20201030 18:32:09.329"></status>
</kw>
<msg timestamp="20201030 18:32:09.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:09.309" endtime="20201030 18:32:09.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:09.330" endtime="20201030 18:32:09.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.333" endtime="20201030 18:32:09.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.307" endtime="20201030 18:32:09.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.305" endtime="20201030 18:32:09.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.342" endtime="20201030 18:32:09.628"></status>
</kw>
<msg timestamp="20201030 18:32:09.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021946778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:09.340" endtime="20201030 18:32:09.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021946778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:09.632" endtime="20201030 18:32:09.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.641" endtime="20201030 18:32:09.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.338" endtime="20201030 18:32:09.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.336" endtime="20201030 18:32:09.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:09.647" level="INFO">${RESULT} = [{'diff': 9.450000000000083e-05}, {'diff': 9.419499999999831e-05}, {'diff': 9.426400000000015e-05}, {'diff': 9.433299999999853e-05}, {'diff': 9.431999999999843e-05}, {'diff': 9.433299999999853e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:09.644" endtime="20201030 18:32:09.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:09.651" level="INFO">${ACCURACY} = {'diff': [9.450000000000083e-05, 9.419499999999831e-05, 9.426400000000015e-05, 9.433299999999853e-05, 9.431999999999843e-05, 9.433299999999853e-05, 9.422199999999797e-05, 9.418000000000273e-05, 9.4402...</msg>
<status status="PASS" starttime="20201030 18:32:09.648" endtime="20201030 18:32:09.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.656" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 18:32:09.655" endtime="20201030 18:32:09.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.658" level="INFO">VALUE: [9.450000000000083e-05, 9.419499999999831e-05, 9.426400000000015e-05, 9.433299999999853e-05, 9.431999999999843e-05, 9.433299999999853e-05, 9.422199999999797e-05, 9.418000000000273e-05, 9.440299999999985e-05, 9.425000000000058e-05, 9.420800000000187e-05, 9.436100000000114e-05, 9.43469999999981e-05, 9.426400000000015e-05, 9.436099999999767e-05, 9.420900000000135e-05, 9.343100000000146e-05, 9.41529999999996e-05, 9.429099999999982e-05, 9.420900000000135e-05, 9.425000000000058e-05, 9.418099999999874e-05, 9.426400000000015e-05, 9.430499999999939e-05, 9.341600000000241e-05, 9.412500000000046e-05, 9.41659999999997e-05, 9.42079999999984e-05, 9.41529999999996e-05, 9.427799999999972e-05, 9.422200000000144e-05, 9.422199999999797e-05, 9.418100000000221e-05, 9.344500000000103e-05, 9.443099999999899e-05, 9.419499999999831e-05, 9.416699999999917e-05, 9.413900000000003e-05, 9.437499999999724e-05, 9.412500000000046e-05, 9.440200000000037e-05, 9.41940000000023e-05, 9.417999999999926e-05, 9.420800000000187e-05, 9.436100000000114e-05, 9.42079999999984e-05, 9.436099999999767e-05, 9.441699999999942e-05, 9.343100000000146e-05, 9.43200000000019e-05]</msg>
<status status="PASS" starttime="20201030 18:32:09.657" endtime="20201030 18:32:09.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.652" endtime="20201030 18:32:09.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:09.663" endtime="20201030 18:32:09.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.661" endtime="20201030 18:32:09.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.660" endtime="20201030 18:32:09.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.303" endtime="20201030 18:32:09.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.302" endtime="20201030 18:32:09.684"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.692" endtime="20201030 18:32:09.712"></status>
</kw>
<msg timestamp="20201030 18:32:09.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:09.691" endtime="20201030 18:32:09.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:09.714" endtime="20201030 18:32:09.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.716" endtime="20201030 18:32:09.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.688" endtime="20201030 18:32:09.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.686" endtime="20201030 18:32:09.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.725" endtime="20201030 18:32:10.011"></status>
</kw>
<msg timestamp="20201030 18:32:10.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023216792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023311639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:09.724" endtime="20201030 18:32:10.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023216792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023311639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:10.015" endtime="20201030 18:32:10.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.023" endtime="20201030 18:32:10.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.721" endtime="20201030 18:32:10.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.719" endtime="20201030 18:32:10.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:10.030" level="INFO">${RESULT} = [{'diff': 9.48469999999986e-05}, {'diff': 9.522199999999897e-05}, {'diff': 9.529200000000029e-05}, {'diff': 9.518100000000321e-05}, {'diff': 9.531899999999996e-05}, {'diff': 9.533400000000247e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:10.027" endtime="20201030 18:32:10.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:10.034" level="INFO">${ACCURACY} = {'diff': [9.48469999999986e-05, 9.522199999999897e-05, 9.529200000000029e-05, 9.518100000000321e-05, 9.531899999999996e-05, 9.533400000000247e-05, 9.513900000000103e-05, 9.529200000000029e-05, 9.51810...</msg>
<status status="PASS" starttime="20201030 18:32:10.031" endtime="20201030 18:32:10.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.039" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 18:32:10.038" endtime="20201030 18:32:10.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.041" level="INFO">VALUE: [9.48469999999986e-05, 9.522199999999897e-05, 9.529200000000029e-05, 9.518100000000321e-05, 9.531899999999996e-05, 9.533400000000247e-05, 9.513900000000103e-05, 9.529200000000029e-05, 9.518100000000321e-05, 9.516700000000017e-05, 9.536100000000214e-05, 9.5333999999999e-05, 9.523700000000149e-05, 9.526400000000115e-05, 9.53469999999991e-05, 9.519399999999983e-05, 9.529200000000029e-05, 9.444399999999908e-05, 9.51530000000006e-05, 9.533299999999953e-05, 9.516700000000017e-05, 9.543099999999999e-05, 9.538900000000128e-05, 9.444499999999856e-05, 9.530599999999986e-05, 9.541700000000042e-05, 9.53200000000029e-05, 9.529199999999682e-05, 9.531999999999943e-05, 9.536199999999814e-05, 9.533299999999953e-05, 9.436100000000114e-05, 9.519399999999983e-05, 9.531899999999996e-05, 9.540299999999738e-05, 9.524999999999811e-05, 9.540299999999738e-05, 9.51530000000006e-05, 9.518099999999974e-05, 9.515299999999713e-05, 9.524999999999811e-05, 9.441699999999942e-05, 9.541700000000042e-05, 9.511100000000189e-05, 9.537500000000171e-05, 9.537500000000171e-05, 9.443100000000246e-05, 9.523600000000201e-05, 9.518000000000026e-05, 9.53469999999991e-05]</msg>
<status status="PASS" starttime="20201030 18:32:10.040" endtime="20201030 18:32:10.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.035" endtime="20201030 18:32:10.043"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:10.047" endtime="20201030 18:32:10.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.045" endtime="20201030 18:32:10.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.044" endtime="20201030 18:32:10.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.685" endtime="20201030 18:32:10.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.684" endtime="20201030 18:32:10.068"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.076" endtime="20201030 18:32:10.095"></status>
</kw>
<msg timestamp="20201030 18:32:10.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:10.075" endtime="20201030 18:32:10.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:10.096" endtime="20201030 18:32:10.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.099" endtime="20201030 18:32:10.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.072" endtime="20201030 18:32:10.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.070" endtime="20201030 18:32:10.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.108" endtime="20201030 18:32:10.393"></status>
</kw>
<msg timestamp="20201030 18:32:10.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021837444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021933819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:10.106" endtime="20201030 18:32:10.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021837444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021933819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:10.397" endtime="20201030 18:32:10.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.406" endtime="20201030 18:32:10.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.104" endtime="20201030 18:32:10.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.102" endtime="20201030 18:32:10.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:10.412" level="INFO">${RESULT} = [{'diff': 9.637499999999924e-05}, {'diff': 9.624999999999911e-05}, {'diff': 9.62080000000004e-05}, {'diff': 9.619399999999736e-05}, {'diff': 9.62080000000004e-05}, {'diff': 9.644500000000056e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:10.409" endtime="20201030 18:32:10.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:10.417" level="INFO">${ACCURACY} = {'diff': [9.637499999999924e-05, 9.624999999999911e-05, 9.62080000000004e-05, 9.619399999999736e-05, 9.62080000000004e-05, 9.644500000000056e-05, 9.61669999999977e-05, 9.637500000000271e-05, 9.6305000...</msg>
<status status="PASS" starttime="20201030 18:32:10.413" endtime="20201030 18:32:10.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.422" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 18:32:10.421" endtime="20201030 18:32:10.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.424" level="INFO">VALUE: [9.637499999999924e-05, 9.624999999999911e-05, 9.62080000000004e-05, 9.619399999999736e-05, 9.62080000000004e-05, 9.644500000000056e-05, 9.61669999999977e-05, 9.637500000000271e-05, 9.630500000000139e-05, 9.613900000000203e-05, 9.541699999999695e-05, 9.544499999999956e-05, 9.637500000000271e-05, 9.620899999999988e-05, 9.624999999999911e-05, 9.619500000000031e-05, 9.620899999999988e-05, 9.62920000000013e-05, 9.62080000000004e-05, 9.627699999999878e-05, 9.631900000000096e-05, 9.630600000000086e-05, 9.624999999999911e-05, 9.619400000000083e-05, 9.538900000000128e-05, 9.633300000000053e-05, 9.638799999999934e-05, 9.619500000000031e-05, 9.624999999999911e-05, 9.622199999999997e-05, 9.619500000000031e-05, 9.618100000000074e-05, 9.624999999999911e-05, 9.636099999999967e-05, 9.619499999999684e-05, 9.624999999999911e-05, 9.543000000000051e-05, 9.629099999999835e-05, 9.637500000000271e-05, 9.622199999999997e-05, 9.609699999999985e-05, 9.538900000000128e-05, 9.542999999999704e-05, 9.626399999999868e-05, 9.637499999999924e-05, 9.612499999999899e-05, 9.625000000000258e-05, 9.618100000000074e-05, 9.541700000000042e-05, 9.629199999999782e-05]</msg>
<status status="PASS" starttime="20201030 18:32:10.423" endtime="20201030 18:32:10.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.418" endtime="20201030 18:32:10.425"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:10.429" endtime="20201030 18:32:10.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.427" endtime="20201030 18:32:10.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.426" endtime="20201030 18:32:10.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.068" endtime="20201030 18:32:10.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.068" endtime="20201030 18:32:10.450"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.458" endtime="20201030 18:32:10.477"></status>
</kw>
<msg timestamp="20201030 18:32:10.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:10.457" endtime="20201030 18:32:10.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:10.478" endtime="20201030 18:32:10.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.481" endtime="20201030 18:32:10.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.454" endtime="20201030 18:32:10.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.452" endtime="20201030 18:32:10.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.490" endtime="20201030 18:32:10.784"></status>
</kw>
<msg timestamp="20201030 18:32:10.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021935278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:10.489" endtime="20201030 18:32:10.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021935278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:10.788" endtime="20201030 18:32:10.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.796" endtime="20201030 18:32:10.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.486" endtime="20201030 18:32:10.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.484" endtime="20201030 18:32:10.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:10.803" level="INFO">${RESULT} = [{'diff': 9.659700000000035e-05}, {'diff': 9.738899999999981e-05}, {'diff': 9.732000000000143e-05}, {'diff': 9.71669999999987e-05}, {'diff': 9.733399999999753e-05}, {'diff': 9.71799999999988e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:10.800" endtime="20201030 18:32:10.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:10.807" level="INFO">${ACCURACY} = {'diff': [9.659700000000035e-05, 9.738899999999981e-05, 9.732000000000143e-05, 9.71669999999987e-05, 9.733399999999753e-05, 9.71799999999988e-05, 9.64019999999989e-05, 9.723600000000054e-05, 9.7152999...</msg>
<status status="PASS" starttime="20201030 18:32:10.804" endtime="20201030 18:32:10.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.811" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 18:32:10.810" endtime="20201030 18:32:10.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.814" level="INFO">VALUE: [9.659700000000035e-05, 9.738899999999981e-05, 9.732000000000143e-05, 9.71669999999987e-05, 9.733399999999753e-05, 9.71799999999988e-05, 9.64019999999989e-05, 9.723600000000054e-05, 9.715299999999913e-05, 9.740299999999938e-05, 9.715299999999913e-05, 9.73470000000011e-05, 9.731899999999849e-05, 9.740300000000285e-05, 9.737500000000024e-05, 9.725000000000011e-05, 9.719499999999784e-05, 9.720899999999741e-05, 9.736100000000067e-05, 9.726399999999968e-05, 9.643100000000099e-05, 9.713899999999956e-05, 9.725000000000011e-05, 9.726399999999968e-05, 9.731899999999849e-05, 9.731900000000196e-05, 9.730499999999892e-05, 9.730499999999892e-05, 9.741700000000242e-05, 9.740300000000285e-05, 9.726399999999968e-05, 9.719499999999784e-05, 9.729199999999882e-05, 9.744400000000208e-05, 9.72920000000023e-05, 9.726399999999968e-05, 9.725000000000011e-05, 9.727799999999925e-05, 9.725000000000011e-05, 9.736100000000067e-05, 9.709700000000085e-05, 9.737500000000024e-05, 9.720799999999793e-05, 9.636099999999967e-05, 9.727799999999925e-05, 9.726400000000315e-05, 9.729199999999882e-05, 9.711100000000042e-05, 9.715299999999913e-05, 9.733299999999806e-05]</msg>
<status status="PASS" starttime="20201030 18:32:10.812" endtime="20201030 18:32:10.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.808" endtime="20201030 18:32:10.815"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:10.819" endtime="20201030 18:32:10.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.817" endtime="20201030 18:32:10.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.816" endtime="20201030 18:32:10.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.450" endtime="20201030 18:32:10.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.450" endtime="20201030 18:32:10.840"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.848" endtime="20201030 18:32:10.868"></status>
</kw>
<msg timestamp="20201030 18:32:10.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:10.847" endtime="20201030 18:32:10.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:10.870" endtime="20201030 18:32:10.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.872" endtime="20201030 18:32:10.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.844" endtime="20201030 18:32:10.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.842" endtime="20201030 18:32:10.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.881" endtime="20201030 18:32:11.167"></status>
</kw>
<msg timestamp="20201030 18:32:11.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022757667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022855583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:10.880" endtime="20201030 18:32:11.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022757667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022855583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:11.171" endtime="20201030 18:32:11.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.179" endtime="20201030 18:32:11.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.877" endtime="20201030 18:32:11.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.876" endtime="20201030 18:32:11.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:11.186" level="INFO">${RESULT} = [{'diff': 9.791599999999998e-05}, {'diff': 9.823599999999807e-05}, {'diff': 9.838899999999734e-05}, {'diff': 9.741700000000242e-05}, {'diff': 9.818100000000274e-05}, {'diff': 9.815300000000013e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:11.183" endtime="20201030 18:32:11.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:11.190" level="INFO">${ACCURACY} = {'diff': [9.791599999999998e-05, 9.823599999999807e-05, 9.838899999999734e-05, 9.741700000000242e-05, 9.818100000000274e-05, 9.815300000000013e-05, 9.837499999999777e-05, 9.831999999999896e-05, 9.8237...</msg>
<status status="PASS" starttime="20201030 18:32:11.187" endtime="20201030 18:32:11.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.195" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 18:32:11.194" endtime="20201030 18:32:11.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.198" level="INFO">VALUE: [9.791599999999998e-05, 9.823599999999807e-05, 9.838899999999734e-05, 9.741700000000242e-05, 9.818100000000274e-05, 9.815300000000013e-05, 9.837499999999777e-05, 9.831999999999896e-05, 9.823700000000102e-05, 9.815300000000013e-05, 9.818099999999927e-05, 9.840300000000038e-05, 9.82219999999985e-05, 9.831999999999896e-05, 9.837500000000124e-05, 9.829100000000035e-05, 9.838900000000081e-05, 9.742999999999905e-05, 9.840300000000038e-05, 9.834699999999863e-05, 9.829199999999982e-05, 9.834699999999863e-05, 9.81669999999997e-05, 9.744499999999809e-05, 9.826400000000068e-05, 9.823600000000154e-05, 9.744499999999809e-05, 9.81669999999997e-05, 9.831999999999896e-05, 9.741699999999895e-05, 9.844399999999962e-05, 9.819399999999937e-05, 9.820799999999894e-05, 9.829100000000035e-05, 9.841600000000048e-05, 9.822200000000197e-05, 9.831899999999949e-05, 9.826400000000068e-05, 9.81799999999998e-05, 9.81669999999997e-05, 9.838900000000081e-05, 9.847199999999875e-05, 9.819499999999884e-05, 9.833399999999853e-05, 9.836200000000114e-05, 9.838899999999734e-05, 9.831999999999896e-05, 9.740200000000337e-05, 9.833299999999906e-05, 9.824999999999764e-05]</msg>
<status status="PASS" starttime="20201030 18:32:11.196" endtime="20201030 18:32:11.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.191" endtime="20201030 18:32:11.199"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:11.203" endtime="20201030 18:32:11.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.201" endtime="20201030 18:32:11.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.200" endtime="20201030 18:32:11.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.841" endtime="20201030 18:32:11.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.840" endtime="20201030 18:32:11.223"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.232" endtime="20201030 18:32:11.251"></status>
</kw>
<msg timestamp="20201030 18:32:11.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:11.231" endtime="20201030 18:32:11.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:11.252" endtime="20201030 18:32:11.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.255" endtime="20201030 18:32:11.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.228" endtime="20201030 18:32:11.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.226" endtime="20201030 18:32:11.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.264" endtime="20201030 18:32:11.548"></status>
</kw>
<msg timestamp="20201030 18:32:11.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021754694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021853958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:11.263" endtime="20201030 18:32:11.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021754694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021853958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:11.552" endtime="20201030 18:32:11.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.560" endtime="20201030 18:32:11.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.260" endtime="20201030 18:32:11.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.258" endtime="20201030 18:32:11.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:11.567" level="INFO">${RESULT} = [{'diff': 9.926399999999821e-05}, {'diff': 9.919499999999984e-05}, {'diff': 9.93060000000004e-05}, {'diff': 9.93470000000031e-05}, {'diff': 9.920899999999941e-05}, {'diff': 9.936199999999867e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:11.564" endtime="20201030 18:32:11.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:11.575" level="INFO">${ACCURACY} = {'diff': [9.926399999999821e-05, 9.919499999999984e-05, 9.93060000000004e-05, 9.93470000000031e-05, 9.920899999999941e-05, 9.936199999999867e-05, 9.934699999999963e-05, 9.937499999999877e-05, 9.923599...</msg>
<status status="PASS" starttime="20201030 18:32:11.568" endtime="20201030 18:32:11.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.579" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 18:32:11.578" endtime="20201030 18:32:11.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.581" level="INFO">VALUE: [9.926399999999821e-05, 9.919499999999984e-05, 9.93060000000004e-05, 9.93470000000031e-05, 9.920899999999941e-05, 9.936199999999867e-05, 9.934699999999963e-05, 9.937499999999877e-05, 9.923599999999907e-05, 9.911099999999895e-05, 9.919400000000037e-05, 9.938900000000181e-05, 9.920799999999994e-05, 9.927800000000125e-05, 9.933300000000006e-05, 9.915299999999766e-05, 9.941700000000095e-05, 9.941700000000095e-05, 9.934699999999963e-05, 9.840300000000038e-05, 9.918100000000027e-05, 9.925000000000211e-05, 9.943099999999705e-05, 9.929099999999788e-05, 9.913900000000156e-05, 9.927699999999831e-05, 9.931900000000049e-05, 9.931900000000049e-05, 9.938899999999834e-05, 9.920799999999994e-05, 9.940299999999791e-05, 9.93609999999992e-05, 9.913900000000156e-05, 9.93470000000031e-05, 9.929200000000082e-05, 9.937500000000224e-05, 9.930500000000092e-05, 9.918100000000027e-05, 9.93060000000004e-05, 9.920899999999941e-05, 9.922299999999898e-05, 9.920899999999941e-05, 9.930499999999745e-05, 9.940199999999844e-05, 9.919400000000037e-05, 9.916599999999776e-05, 9.944500000000009e-05, 9.922200000000297e-05, 9.923599999999907e-05, 9.912500000000199e-05]</msg>
<status status="PASS" starttime="20201030 18:32:11.580" endtime="20201030 18:32:11.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.575" endtime="20201030 18:32:11.583"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:11.586" endtime="20201030 18:32:11.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.585" endtime="20201030 18:32:11.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.584" endtime="20201030 18:32:11.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.224" endtime="20201030 18:32:11.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.224" endtime="20201030 18:32:11.607"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.616" endtime="20201030 18:32:11.635"></status>
</kw>
<msg timestamp="20201030 18:32:11.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:11.614" endtime="20201030 18:32:11.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:11.636" endtime="20201030 18:32:11.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.639" endtime="20201030 18:32:11.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.611" endtime="20201030 18:32:11.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.609" endtime="20201030 18:32:11.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.648" endtime="20201030 18:32:11.933"></status>
</kw>
<msg timestamp="20201030 18:32:11.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021825542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021925931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:11.646" endtime="20201030 18:32:11.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021825542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021925931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:11.937" endtime="20201030 18:32:11.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.945" endtime="20201030 18:32:11.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.643" endtime="20201030 18:32:11.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.642" endtime="20201030 18:32:11.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:11.952" level="INFO">${RESULT} = [{'diff': 0.00010038899999999934}, {'diff': 0.00010026300000000321}, {'diff': 0.00010031900000000149}, {'diff': 0.00010020800000000094}, {'diff': 0.00010023600000000008}, {'diff': 0.000100194000000001...</msg>
<status status="PASS" starttime="20201030 18:32:11.949" endtime="20201030 18:32:11.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:11.956" level="INFO">${ACCURACY} = {'diff': [0.00010038899999999934, 0.00010026300000000321, 0.00010031900000000149, 0.00010020800000000094, 0.00010023600000000008, 0.00010019400000000137, 0.00010040299999999891, 0.0001001670000000017,...</msg>
<status status="PASS" starttime="20201030 18:32:11.953" endtime="20201030 18:32:11.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.960" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 18:32:11.959" endtime="20201030 18:32:11.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.963" level="INFO">VALUE: [0.00010038899999999934, 0.00010026300000000321, 0.00010031900000000149, 0.00010020800000000094, 0.00010023600000000008, 0.00010019400000000137, 0.00010040299999999891, 0.0001001670000000017, 0.00010037499999999977, 0.00010022199999999704, 0.00010034700000000063, 0.00010024999999999964, 9.941700000000095e-05, 0.00010037499999999977, 0.00010037499999999977, 9.944500000000009e-05, 0.00010026400000000268, 9.942999999999758e-05, 0.00010023699999999955, 0.00010034700000000063, 0.00010020800000000094, 0.0001004020000000029, 0.00010023600000000008, 0.0001003610000000002, 0.0001003610000000002, 0.00010026399999999921, 0.0001003060000000014, 0.00010015299999999866, 0.00010026399999999921, 0.0001001670000000017, 0.00010015299999999866, 0.00010030599999999792, 0.00010024999999999964, 0.00010038899999999934, 0.00010025000000000311, 0.00010033300000000106, 0.00010023600000000008, 0.00010038899999999934, 0.00010030500000000192, 9.943000000000105e-05, 0.00010038899999999934, 0.00010023600000000008, 0.00010030500000000192, 0.00010030599999999792, 0.00010015300000000213, 0.00010029200000000182, 0.00010030599999999792, 0.00010018100000000127, 0.0001001670000000017, 0.00010033399999999706]</msg>
<status status="PASS" starttime="20201030 18:32:11.961" endtime="20201030 18:32:11.967"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.957" endtime="20201030 18:32:11.968"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:11.972" endtime="20201030 18:32:11.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.970" endtime="20201030 18:32:11.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.969" endtime="20201030 18:32:11.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.608" endtime="20201030 18:32:11.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.607" endtime="20201030 18:32:11.992"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.001" endtime="20201030 18:32:12.020"></status>
</kw>
<msg timestamp="20201030 18:32:12.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:11.999" endtime="20201030 18:32:12.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:12.022" endtime="20201030 18:32:12.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.024" endtime="20201030 18:32:12.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.997" endtime="20201030 18:32:12.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.995" endtime="20201030 18:32:12.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.033" endtime="20201030 18:32:12.317"></status>
</kw>
<msg timestamp="20201030 18:32:12.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022747792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022849042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:12.032" endtime="20201030 18:32:12.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022747792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022849042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:12.321" endtime="20201030 18:32:12.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.330" endtime="20201030 18:32:12.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.029" endtime="20201030 18:32:12.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.028" endtime="20201030 18:32:12.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:12.336" level="INFO">${RESULT} = [{'diff': 0.00010125000000000065}, {'diff': 0.00010125000000000065}, {'diff': 0.00010115299999999966}, {'diff': 0.00010125000000000065}, {'diff': 0.00010126400000000021}, {'diff': 0.000101305999999998...</msg>
<status status="PASS" starttime="20201030 18:32:12.333" endtime="20201030 18:32:12.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:12.340" level="INFO">${ACCURACY} = {'diff': [0.00010125000000000065, 0.00010125000000000065, 0.00010115299999999966, 0.00010125000000000065, 0.00010126400000000021, 0.00010130599999999892, 0.00010140200000000044, 0.00010115299999999966...</msg>
<status status="PASS" starttime="20201030 18:32:12.337" endtime="20201030 18:32:12.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.344" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 18:32:12.343" endtime="20201030 18:32:12.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.347" level="INFO">VALUE: [0.00010125000000000065, 0.00010125000000000065, 0.00010115299999999966, 0.00010125000000000065, 0.00010126400000000021, 0.00010130599999999892, 0.00010140200000000044, 0.00010115299999999966, 0.00010126300000000074, 0.00010140200000000044, 0.00010147200000000176, 0.00010130500000000292, 0.00010125000000000065, 0.00010120800000000194, 0.00010126400000000021, 0.00010126400000000021, 0.00010116699999999923, 0.00010044500000000109, 0.0001012359999999976, 0.0001013480000000011, 0.00010130499999999945, 0.00010138900000000034, 0.0001011809999999988, 0.00010123600000000108, 0.00010115200000000019, 0.00010123600000000108, 0.00010130499999999945, 0.00010134699999999816, 0.00010111100000000095, 0.00010125000000000065, 0.00010120900000000141, 0.00010126400000000021, 0.00010113900000000009, 0.00010131900000000249, 0.00010120900000000141, 0.00010120900000000141, 0.00010120900000000141, 0.00010120900000000141, 0.00010043099999999805, 0.0001013199999999985, 0.0001013199999999985, 0.00010127700000000031, 0.00010138900000000034, 0.00010126400000000021, 0.00010129099999999988, 0.00010125000000000065, 0.00010140299999999991, 0.00010116699999999923, 0.00010122199999999804, 0.00010140299999999991]</msg>
<status status="PASS" starttime="20201030 18:32:12.346" endtime="20201030 18:32:12.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.341" endtime="20201030 18:32:12.349"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:12.353" endtime="20201030 18:32:12.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.351" endtime="20201030 18:32:12.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.350" endtime="20201030 18:32:12.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.993" endtime="20201030 18:32:12.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.993" endtime="20201030 18:32:12.373"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.382" endtime="20201030 18:32:12.401"></status>
</kw>
<msg timestamp="20201030 18:32:12.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:12.380" endtime="20201030 18:32:12.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:12.403" endtime="20201030 18:32:12.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.405" endtime="20201030 18:32:12.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.378" endtime="20201030 18:32:12.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.376" endtime="20201030 18:32:12.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.414" endtime="20201030 18:32:12.700"></status>
</kw>
<msg timestamp="20201030 18:32:12.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021763139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021865556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:12.413" endtime="20201030 18:32:12.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021763139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021865556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:12.704" endtime="20201030 18:32:12.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.712" endtime="20201030 18:32:12.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.410" endtime="20201030 18:32:12.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.409" endtime="20201030 18:32:12.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:12.718" level="INFO">${RESULT} = [{'diff': 0.00010241700000000048}, {'diff': 0.00010227699999999784}, {'diff': 0.00010215200000000119}, {'diff': 0.00010237500000000177}, {'diff': 0.00010216600000000076}, {'diff': 0.000102221999999999...</msg>
<status status="PASS" starttime="20201030 18:32:12.715" endtime="20201030 18:32:12.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:12.723" level="INFO">${ACCURACY} = {'diff': [0.00010241700000000048, 0.00010227699999999784, 0.00010215200000000119, 0.00010237500000000177, 0.00010216600000000076, 0.00010222199999999904, 0.00010220799999999947, 0.00010241700000000048...</msg>
<status status="PASS" starttime="20201030 18:32:12.719" endtime="20201030 18:32:12.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.728" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 18:32:12.727" endtime="20201030 18:32:12.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.730" level="INFO">VALUE: [0.00010241700000000048, 0.00010227699999999784, 0.00010215200000000119, 0.00010237500000000177, 0.00010216600000000076, 0.00010222199999999904, 0.00010220799999999947, 0.00010241700000000048, 0.00010227800000000078, 0.00010227800000000078, 0.00010223600000000208, 0.00010216700000000023, 0.00010215300000000066, 0.00010144499999999862, 0.00010229099999999741, 0.00010220900000000241, 0.00010216700000000023, 0.0001023610000000022, 0.00010240299999999744, 0.00010220799999999947, 0.00010223600000000208, 0.00010216700000000023, 0.00010215299999999719, 0.00010144400000000262, 0.0001023749999999983, 0.00010237500000000177, 0.00010227800000000078, 0.00010234700000000263, 0.00010222199999999904, 0.00010231900000000002, 0.00010236099999999873, 0.00010223700000000155, 0.00010215300000000066, 0.00010220799999999947, 0.0001023749999999983, 0.00010215200000000119, 0.00010213900000000109, 0.00010231900000000002, 0.00010241599999999754, 0.00010215300000000066, 0.00010237500000000177, 0.00010220799999999947, 0.00010237500000000177, 0.00010224999999999818, 0.00010220899999999894, 0.00010219499999999937, 0.0001023199999999995, 0.00010226400000000122, 0.00010234799999999863, 0.00010241699999999701]</msg>
<status status="PASS" starttime="20201030 18:32:12.729" endtime="20201030 18:32:12.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.724" endtime="20201030 18:32:12.731"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:12.735" endtime="20201030 18:32:12.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.733" endtime="20201030 18:32:12.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.732" endtime="20201030 18:32:12.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.374" endtime="20201030 18:32:12.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.374" endtime="20201030 18:32:12.756"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.764" endtime="20201030 18:32:12.784"></status>
</kw>
<msg timestamp="20201030 18:32:12.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:12.763" endtime="20201030 18:32:12.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:12.786" endtime="20201030 18:32:12.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.788" endtime="20201030 18:32:12.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.760" endtime="20201030 18:32:12.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.758" endtime="20201030 18:32:12.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.797" endtime="20201030 18:32:13.090"></status>
</kw>
<msg timestamp="20201030 18:32:13.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02216025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022263639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:12.796" endtime="20201030 18:32:13.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02216025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022263639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:13.099" endtime="20201030 18:32:13.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.117" endtime="20201030 18:32:13.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.793" endtime="20201030 18:32:13.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.792" endtime="20201030 18:32:13.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:13.131" level="INFO">${RESULT} = [{'diff': 0.00010338900000000234}, {'diff': 0.00010319500000000037}, {'diff': 0.00010323600000000308}, {'diff': 0.00010316700000000123}, {'diff': 0.0001031810000000008}, {'diff': 0.0001032499999999991...</msg>
<status status="PASS" starttime="20201030 18:32:13.124" endtime="20201030 18:32:13.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:13.139" level="INFO">${ACCURACY} = {'diff': [0.00010338900000000234, 0.00010319500000000037, 0.00010323600000000308, 0.00010316700000000123, 0.0001031810000000008, 0.00010324999999999918, 0.00010327700000000231, 0.00010320800000000047,...</msg>
<status status="PASS" starttime="20201030 18:32:13.133" endtime="20201030 18:32:13.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.148" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 18:32:13.146" endtime="20201030 18:32:13.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.154" level="INFO">VALUE: [0.00010338900000000234, 0.00010319500000000037, 0.00010323600000000308, 0.00010316700000000123, 0.0001031810000000008, 0.00010324999999999918, 0.00010327700000000231, 0.00010320800000000047, 0.00010323600000000308, 0.0001031940000000009, 0.00010337500000000277, 0.00010320800000000047, 0.00010327800000000179, 0.00010340299999999844, 0.00010326400000000222, 0.00010320899999999994, 0.00010329200000000135, 0.00010333400000000006, 0.00010315300000000166, 0.00010324999999999918, 0.00010327800000000179, 0.00010329199999999789, 0.00010320800000000047, 0.00010327799999999832, 0.00010334700000000016, 0.0001033749999999993, 0.00010330500000000145, 0.00010331900000000102, 0.00010336099999999973, 0.00010327800000000179, 0.0001032359999999996, 0.00010243100000000005, 0.0001023749999999983, 0.00010322200000000004, 0.00010244499999999962, 0.00010324999999999918, 0.0001031810000000008, 0.0001033749999999993, 0.00010325000000000265, 0.00010241599999999754, 0.00010327699999999884, 0.00010324999999999918, 0.0001031940000000009, 0.00010326400000000222, 0.0001032359999999996, 0.00010319399999999743, 0.00010320800000000047, 0.00010338899999999887, 0.0001032359999999996, 0.00010322300000000298]</msg>
<status status="PASS" starttime="20201030 18:32:13.151" endtime="20201030 18:32:13.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.141" endtime="20201030 18:32:13.156"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:13.164" endtime="20201030 18:32:13.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.161" endtime="20201030 18:32:13.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.158" endtime="20201030 18:32:13.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.757" endtime="20201030 18:32:13.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.756" endtime="20201030 18:32:13.186"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.194" endtime="20201030 18:32:13.215"></status>
</kw>
<msg timestamp="20201030 18:32:13.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:13.193" endtime="20201030 18:32:13.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:13.216" endtime="20201030 18:32:13.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.219" endtime="20201030 18:32:13.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.190" endtime="20201030 18:32:13.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.188" endtime="20201030 18:32:13.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.228" endtime="20201030 18:32:13.513"></status>
</kw>
<msg timestamp="20201030 18:32:13.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022846236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022949833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:13.226" endtime="20201030 18:32:13.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022846236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022949833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:13.517" endtime="20201030 18:32:13.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.525" endtime="20201030 18:32:13.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.224" endtime="20201030 18:32:13.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.222" endtime="20201030 18:32:13.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:13.532" level="INFO">${RESULT} = [{'diff': 0.00010359700000000041}, {'diff': 0.00010418099999999833}, {'diff': 0.00010348599999999986}, {'diff': 0.00010431900000000202}, {'diff': 0.00010440299999999944}, {'diff': 0.000104361000000000...</msg>
<status status="PASS" starttime="20201030 18:32:13.529" endtime="20201030 18:32:13.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:13.536" level="INFO">${ACCURACY} = {'diff': [0.00010359700000000041, 0.00010418099999999833, 0.00010348599999999986, 0.00010431900000000202, 0.00010440299999999944, 0.00010436100000000073, 0.00010422199999999757, 0.00010340299999999844...</msg>
<status status="PASS" starttime="20201030 18:32:13.533" endtime="20201030 18:32:13.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.540" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 18:32:13.539" endtime="20201030 18:32:13.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.542" level="INFO">VALUE: [0.00010359700000000041, 0.00010418099999999833, 0.00010348599999999986, 0.00010431900000000202, 0.00010440299999999944, 0.00010436100000000073, 0.00010422199999999757, 0.00010340299999999844, 0.00010440299999999944, 0.00010422199999999757, 0.00010412500000000005, 0.0001041940000000019, 0.00010347299999999976, 0.0001043750000000003, 0.00010433300000000159, 0.0001041949999999979, 0.00010343100000000105, 0.00010416599999999929, 0.00010423700000000008, 0.00010345800000000072, 0.00010429100000000288, 0.00010442999999999911, 0.00010422200000000104, 0.00010425000000000018, 0.00010433299999999812, 0.0001043750000000003, 0.00010417999999999886, 0.00010340299999999844, 0.00010440299999999944, 0.00010427799999999932, 0.00010422200000000104, 0.00010426399999999975, 0.00010416700000000223, 0.0001043750000000003, 0.00010411100000000048, 0.00010426399999999975, 0.0001043880000000004, 0.00010429099999999941, 0.0001042360000000006, 0.00010430600000000192, 0.00010434699999999769, 0.00010430600000000192, 0.0001043750000000003, 0.00010426399999999975, 0.00010422199999999757, 0.0001041810000000018, 0.0001043750000000003, 0.00010427799999999932, 0.00010440299999999944, 0.0001043339999999976]</msg>
<status status="PASS" starttime="20201030 18:32:13.541" endtime="20201030 18:32:13.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.537" endtime="20201030 18:32:13.545"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:13.548" endtime="20201030 18:32:13.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.547" endtime="20201030 18:32:13.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.546" endtime="20201030 18:32:13.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.187" endtime="20201030 18:32:13.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.186" endtime="20201030 18:32:13.571"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.581" endtime="20201030 18:32:13.601"></status>
</kw>
<msg timestamp="20201030 18:32:13.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:13.579" endtime="20201030 18:32:13.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:13.602" endtime="20201030 18:32:13.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.605" endtime="20201030 18:32:13.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.576" endtime="20201030 18:32:13.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.574" endtime="20201030 18:32:13.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.616" endtime="20201030 18:32:13.906"></status>
</kw>
<msg timestamp="20201030 18:32:13.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025479431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025584139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:13.614" endtime="20201030 18:32:13.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025479431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025584139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:13.911" endtime="20201030 18:32:13.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.919" endtime="20201030 18:32:13.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.611" endtime="20201030 18:32:13.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.610" endtime="20201030 18:32:13.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:13.925" level="INFO">${RESULT} = [{'diff': 0.0001047079999999985}, {'diff': 0.00010515300000000019}, {'diff': 0.00010529199999999989}, {'diff': 0.00010538900000000087}, {'diff': 0.00010520899999999847}, {'diff': 0.0001054020000000009...</msg>
<status status="PASS" starttime="20201030 18:32:13.922" endtime="20201030 18:32:13.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:13.930" level="INFO">${ACCURACY} = {'diff': [0.0001047079999999985, 0.00010515300000000019, 0.00010529199999999989, 0.00010538900000000087, 0.00010520899999999847, 0.00010540200000000097, 0.0001053750000000013, 0.00010533400000000206, ...</msg>
<status status="PASS" starttime="20201030 18:32:13.926" endtime="20201030 18:32:13.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.935" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 18:32:13.934" endtime="20201030 18:32:13.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.937" level="INFO">VALUE: [0.0001047079999999985, 0.00010515300000000019, 0.00010529199999999989, 0.00010538900000000087, 0.00010520899999999847, 0.00010540200000000097, 0.0001053750000000013, 0.00010533400000000206, 0.00010445799999999825, 0.00010526300000000127, 0.00010534699999999869, 0.00010540300000000044, 0.00010516600000000029, 0.00010525000000000118, 0.00010527800000000032, 0.00010540299999999697, 0.00010538900000000087, 0.00010516699999999976, 0.00010541700000000001, 0.00010529199999999989, 0.00010518099999999933, 0.00010516699999999976, 0.00010443099999999858, 0.0001052629999999978, 0.00010515200000000072, 0.00010541600000000054, 0.00010536100000000173, 0.0001052360000000016, 0.00010531899999999955, 0.00010536100000000173, 0.00010536100000000173, 0.0001051810000000028, 0.00010525000000000118, 0.00010520900000000194, 0.00010543099999999958, 0.0001053339999999986, 0.0001053889999999974, 0.00010534799999999817, 0.0001043750000000003, 0.00010523599999999814, 0.000105207999999999, 0.00010538900000000087, 0.00010519399999999943, 0.00010515300000000019, 0.00010513900000000062, 0.00010526400000000075, 0.00010540300000000044, 0.00010536100000000173, 0.00010529199999999989, 0.00010440299999999944]</msg>
<status status="PASS" starttime="20201030 18:32:13.936" endtime="20201030 18:32:13.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.931" endtime="20201030 18:32:13.939"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:13.942" endtime="20201030 18:32:13.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.941" endtime="20201030 18:32:13.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.940" endtime="20201030 18:32:13.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.572" endtime="20201030 18:32:13.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.571" endtime="20201030 18:32:13.963"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.972" endtime="20201030 18:32:13.992"></status>
</kw>
<msg timestamp="20201030 18:32:13.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:13.971" endtime="20201030 18:32:13.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:13.994" endtime="20201030 18:32:13.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.996" endtime="20201030 18:32:13.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.968" endtime="20201030 18:32:13.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.966" endtime="20201030 18:32:13.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.005" endtime="20201030 18:32:14.292"></status>
</kw>
<msg timestamp="20201030 18:32:14.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022734278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022839875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:14.004" endtime="20201030 18:32:14.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022734278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022839875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:14.296" endtime="20201030 18:32:14.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.304" endtime="20201030 18:32:14.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.001" endtime="20201030 18:32:14.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.000" endtime="20201030 18:32:14.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:14.310" level="INFO">${RESULT} = [{'diff': 0.00010559699999999894}, {'diff': 0.0001063889999999984}, {'diff': 0.00010626400000000175}, {'diff': 0.00010632000000000003}, {'diff': 0.00010629200000000089}, {'diff': 0.0001063340000000030...</msg>
<status status="PASS" starttime="20201030 18:32:14.307" endtime="20201030 18:32:14.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:14.314" level="INFO">${ACCURACY} = {'diff': [0.00010559699999999894, 0.0001063889999999984, 0.00010626400000000175, 0.00010632000000000003, 0.00010629200000000089, 0.00010633400000000306, 0.00010615299999999772, 0.00010630600000000046,...</msg>
<status status="PASS" starttime="20201030 18:32:14.311" endtime="20201030 18:32:14.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.319" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 18:32:14.318" endtime="20201030 18:32:14.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.321" level="INFO">VALUE: [0.00010559699999999894, 0.0001063889999999984, 0.00010626400000000175, 0.00010632000000000003, 0.00010629200000000089, 0.00010633400000000306, 0.00010615299999999772, 0.00010630600000000046, 0.00010640300000000144, 0.00010631900000000055, 0.00010637499999999883, 0.00010631899999999708, 0.00010612499999999858, 0.00010638900000000187, 0.00010630600000000046, 0.00010643100000000058, 0.00010543099999999958, 0.00010615200000000172, 0.0001063889999999984, 0.00010616700000000076, 0.00010629200000000089, 0.00010620899999999947, 0.00010638900000000187, 0.00010622299999999904, 0.00010634699999999969, 0.00010615200000000172, 0.000106208, 0.00010643000000000111, 0.00010636099999999926, 0.000106208, 0.00010623599999999914, 0.00010638900000000187, 0.0001063339999999996, 0.00010636099999999926, 0.00010618099999999686, 0.00010617999999999739, 0.00010630600000000046, 0.00010636099999999926, 0.00010619400000000043, 0.00010625000000000218, 0.00010631900000000055, 0.00010618000000000086, 0.00010616599999999782, 0.00010634699999999969, 0.000106208, 0.00010630499999999751, 0.00010623599999999914, 0.00010640300000000144, 0.00010623599999999914, 0.00010613900000000162]</msg>
<status status="PASS" starttime="20201030 18:32:14.320" endtime="20201030 18:32:14.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.315" endtime="20201030 18:32:14.322"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:14.326" endtime="20201030 18:32:14.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.325" endtime="20201030 18:32:14.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.323" endtime="20201030 18:32:14.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.964" endtime="20201030 18:32:14.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.963" endtime="20201030 18:32:14.347"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.355" endtime="20201030 18:32:14.376"></status>
</kw>
<msg timestamp="20201030 18:32:14.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:14.354" endtime="20201030 18:32:14.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:14.377" endtime="20201030 18:32:14.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.380" endtime="20201030 18:32:14.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.351" endtime="20201030 18:32:14.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.349" endtime="20201030 18:32:14.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.389" endtime="20201030 18:32:14.674"></status>
</kw>
<msg timestamp="20201030 18:32:14.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023166806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023273333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:14.387" endtime="20201030 18:32:14.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023166806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023273333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:14.678" endtime="20201030 18:32:14.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.686" endtime="20201030 18:32:14.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.385" endtime="20201030 18:32:14.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.383" endtime="20201030 18:32:14.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:14.692" level="INFO">${RESULT} = [{'diff': 0.00010652699999999862}, {'diff': 0.00010717999999999839}, {'diff': 0.0001072499999999997}, {'diff': 0.00010740299999999897}, {'diff': 0.0001072499999999997}, {'diff': 0.00010723600000000014...</msg>
<status status="PASS" starttime="20201030 18:32:14.689" endtime="20201030 18:32:14.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:14.696" level="INFO">${ACCURACY} = {'diff': [0.00010652699999999862, 0.00010717999999999839, 0.0001072499999999997, 0.00010740299999999897, 0.0001072499999999997, 0.00010723600000000014, 0.00010722200000000057, 0.00010718099999999786, ...</msg>
<status status="PASS" starttime="20201030 18:32:14.693" endtime="20201030 18:32:14.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.701" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 18:32:14.700" endtime="20201030 18:32:14.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.704" level="INFO">VALUE: [0.00010652699999999862, 0.00010717999999999839, 0.0001072499999999997, 0.00010740299999999897, 0.0001072499999999997, 0.00010723600000000014, 0.00010722200000000057, 0.00010718099999999786, 0.00010716700000000176, 0.00010715299999999872, 0.00010741700000000201, 0.0001073889999999994, 0.00010723600000000014, 0.00010730500000000198, 0.0001074019999999995, 0.00010643000000000111, 0.00010744399999999821, 0.0001074019999999995, 0.00010737499999999983, 0.00010727799999999885, 0.00010736100000000026, 0.00010722200000000057, 0.00010716699999999829, 0.00010723600000000014, 0.00010727699999999937, 0.00010730599999999799, 0.00010715300000000219, 0.00010734800000000017, 0.00010729200000000189, 0.00010717999999999839, 0.00010716600000000229, 0.00010717999999999839, 0.00010738900000000287, 0.0001073889999999994, 0.00010644400000000068, 0.00010734700000000069, 0.00010716699999999829, 0.00010718100000000133, 0.00010718100000000133, 0.0001073889999999994, 0.00010644500000000015, 0.00010727799999999885, 0.00010726399999999928, 0.00010730600000000146, 0.00010731999999999756, 0.00010719400000000143, 0.00010731900000000155, 0.00010734700000000069, 0.00010726400000000275, 0.00010716699999999829]</msg>
<status status="PASS" starttime="20201030 18:32:14.702" endtime="20201030 18:32:14.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.697" endtime="20201030 18:32:14.705"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:14.709" endtime="20201030 18:32:14.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.707" endtime="20201030 18:32:14.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.706" endtime="20201030 18:32:14.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.348" endtime="20201030 18:32:14.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.347" endtime="20201030 18:32:14.730"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.738" endtime="20201030 18:32:14.758"></status>
</kw>
<msg timestamp="20201030 18:32:14.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:14.737" endtime="20201030 18:32:14.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:14.759" endtime="20201030 18:32:14.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.762" endtime="20201030 18:32:14.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.734" endtime="20201030 18:32:14.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.732" endtime="20201030 18:32:14.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.772" endtime="20201030 18:32:15.057"></status>
</kw>
<msg timestamp="20201030 18:32:15.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022344278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02245275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:14.770" endtime="20201030 18:32:15.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022344278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02245275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:15.061" endtime="20201030 18:32:15.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.070" endtime="20201030 18:32:15.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.767" endtime="20201030 18:32:15.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.765" endtime="20201030 18:32:15.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:15.077" level="INFO">${RESULT} = [{'diff': 0.00010847200000000182}, {'diff': 0.0001082500000000007}, {'diff': 0.00010830599999999899}, {'diff': 0.00010826400000000028}, {'diff': 0.0001083890000000004}, {'diff': 0.00010823599999999767...</msg>
<status status="PASS" starttime="20201030 18:32:15.073" endtime="20201030 18:32:15.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:15.084" level="INFO">${ACCURACY} = {'diff': [0.00010847200000000182, 0.0001082500000000007, 0.00010830599999999899, 0.00010826400000000028, 0.0001083890000000004, 0.00010823599999999767, 0.00010831999999999856, 0.00010826400000000028, ...</msg>
<status status="PASS" starttime="20201030 18:32:15.078" endtime="20201030 18:32:15.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.089" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 18:32:15.088" endtime="20201030 18:32:15.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.092" level="INFO">VALUE: [0.00010847200000000182, 0.0001082500000000007, 0.00010830599999999899, 0.00010826400000000028, 0.0001083890000000004, 0.00010823599999999767, 0.00010831999999999856, 0.00010826400000000028, 0.00010743000000000211, 0.00010826400000000028, 0.00010741599999999907, 0.00010826399999999681, 0.00010836100000000126, 0.00010820799999999853, 0.00010818099999999886, 0.00010815299999999972, 0.00010830599999999899, 0.0001081950000000019, 0.00010817999999999939, 0.00010820900000000147, 0.00010831999999999856, 0.00010827799999999985, 0.00010830499999999951, 0.00010823700000000061, 0.00010834700000000169, 0.00010826400000000028, 0.00010841600000000007, 0.00010815299999999972, 0.00010836099999999779, 0.0001082219999999981, 0.00010824999999999724, 0.00010815299999999972, 0.00010834700000000169, 0.00010823600000000114, 0.00010822200000000157, 0.00010815299999999972, 0.00010834800000000117, 0.00010744499999999768, 0.0001082500000000007, 0.00010822200000000157, 0.0001080829999999984, 0.00010820799999999853, 0.000108208000000002, 0.00010826400000000028, 0.00010827799999999985, 0.00010819400000000243, 0.00010836100000000126, 0.00010820900000000147, 0.0001082500000000007, 0.00010822300000000104]</msg>
<status status="PASS" starttime="20201030 18:32:15.090" endtime="20201030 18:32:15.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.085" endtime="20201030 18:32:15.093"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:15.097" endtime="20201030 18:32:15.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.095" endtime="20201030 18:32:15.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.094" endtime="20201030 18:32:15.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.731" endtime="20201030 18:32:15.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.730" endtime="20201030 18:32:15.118"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.127" endtime="20201030 18:32:15.148"></status>
</kw>
<msg timestamp="20201030 18:32:15.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:15.125" endtime="20201030 18:32:15.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:15.149" endtime="20201030 18:32:15.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.152" endtime="20201030 18:32:15.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.122" endtime="20201030 18:32:15.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.120" endtime="20201030 18:32:15.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.161" endtime="20201030 18:32:15.471"></status>
</kw>
<msg timestamp="20201030 18:32:15.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022644306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022753375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:15.160" endtime="20201030 18:32:15.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022644306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022753375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:15.476" endtime="20201030 18:32:15.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.484" endtime="20201030 18:32:15.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.157" endtime="20201030 18:32:15.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.155" endtime="20201030 18:32:15.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:15.491" level="INFO">${RESULT} = [{'diff': 0.00010906899999999983}, {'diff': 0.00010933399999999913}, {'diff': 0.00010843099999999911}, {'diff': 0.00010933299999999965}, {'diff': 0.00010916700000000029}, {'diff': 0.000109221999999999...</msg>
<status status="PASS" starttime="20201030 18:32:15.488" endtime="20201030 18:32:15.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:15.495" level="INFO">${ACCURACY} = {'diff': [0.00010906899999999983, 0.00010933399999999913, 0.00010843099999999911, 0.00010933299999999965, 0.00010916700000000029, 0.0001092219999999991, 0.000109208999999999, 0.00010912500000000158, 0...</msg>
<status status="PASS" starttime="20201030 18:32:15.492" endtime="20201030 18:32:15.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.500" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 18:32:15.499" endtime="20201030 18:32:15.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.502" level="INFO">VALUE: [0.00010906899999999983, 0.00010933399999999913, 0.00010843099999999911, 0.00010933299999999965, 0.00010916700000000029, 0.0001092219999999991, 0.000109208999999999, 0.00010912500000000158, 0.00010923600000000214, 0.00010931900000000008, 0.00010930500000000051, 0.00010924999999999824, 0.00010913900000000115, 0.00010919399999999996, 0.00010929200000000042, 0.00010936100000000226, 0.00010931999999999956, 0.00010925000000000171, 0.00010841699999999954, 0.00010920900000000247, 0.00010916600000000082, 0.00010930599999999999, 0.00010923599999999867, 0.00010844399999999921, 0.00010923600000000214, 0.00010927700000000137, 0.00010923599999999867, 0.00010915299999999725, 0.00010916700000000029, 0.00010922200000000257, 0.0001091950000000029, 0.00010936099999999879, 0.00010915300000000072, 0.000109208999999999, 0.00010927700000000137, 0.0001093890000000014, 0.00010931999999999956, 0.00010930599999999999, 0.00010936100000000226, 0.00010944400000000021, 0.00010931900000000008, 0.00010929200000000042, 0.00010916700000000029, 0.00010927800000000085, 0.00010916700000000029, 0.00010919499999999943, 0.00010923600000000214, 0.00010926400000000128, 0.00010934700000000269, 0.00010923599999999867]</msg>
<status status="PASS" starttime="20201030 18:32:15.501" endtime="20201030 18:32:15.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.496" endtime="20201030 18:32:15.504"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:15.507" endtime="20201030 18:32:15.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.506" endtime="20201030 18:32:15.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.505" endtime="20201030 18:32:15.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.118" endtime="20201030 18:32:15.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.118" endtime="20201030 18:32:15.528"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.537" endtime="20201030 18:32:15.558"></status>
</kw>
<msg timestamp="20201030 18:32:15.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:15.536" endtime="20201030 18:32:15.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:15.559" endtime="20201030 18:32:15.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.562" endtime="20201030 18:32:15.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.533" endtime="20201030 18:32:15.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.531" endtime="20201030 18:32:15.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.571" endtime="20201030 18:32:15.857"></status>
</kw>
<msg timestamp="20201030 18:32:15.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023369597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023479694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:15.570" endtime="20201030 18:32:15.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023369597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023479694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:15.861" endtime="20201030 18:32:15.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.869" endtime="20201030 18:32:15.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.567" endtime="20201030 18:32:15.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.565" endtime="20201030 18:32:15.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:15.876" level="INFO">${RESULT} = [{'diff': 0.00011009699999999997}, {'diff': 0.00011036099999999979}, {'diff': 0.00011029099999999847}, {'diff': 0.00011019400000000096}, {'diff': 0.00011027799999999838}, {'diff': 0.000110389000000002...</msg>
<status status="PASS" starttime="20201030 18:32:15.873" endtime="20201030 18:32:15.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:15.881" level="INFO">${ACCURACY} = {'diff': [0.00011009699999999997, 0.00011036099999999979, 0.00011029099999999847, 0.00011019400000000096, 0.00011027799999999838, 0.0001103890000000024, 0.00011013899999999868, 0.00011018000000000139,...</msg>
<status status="PASS" starttime="20201030 18:32:15.877" endtime="20201030 18:32:15.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.885" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 18:32:15.884" endtime="20201030 18:32:15.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.888" level="INFO">VALUE: [0.00011009699999999997, 0.00011036099999999979, 0.00011029099999999847, 0.00011019400000000096, 0.00011027799999999838, 0.0001103890000000024, 0.00011013899999999868, 0.00011018000000000139, 0.00011027799999999838, 0.0001103890000000024, 0.00011038899999999893, 0.00011037499999999936, 0.00011034700000000022, 0.00011029200000000142, 0.00011019500000000043, 0.00011026400000000228, 0.0001102220000000001, 0.00011030500000000151, 0.00011023599999999967, 0.00011037499999999936, 0.00011015299999999825, 0.00011019400000000096, 0.00011041699999999807, 0.00011029200000000142, 0.00011023599999999967, 0.00011016700000000129, 0.00011018100000000086, 0.0001102220000000001, 0.00011016699999999782, 0.000110209, 0.0001103479999999997, 0.00011027700000000237, 0.00011030500000000151, 0.00011029099999999847, 0.00011016600000000182, 0.00011040300000000197, 0.00010940300000000097, 0.00010943000000000064, 0.00011034700000000022, 0.00011016700000000129, 0.00011018100000000086, 0.00011037499999999936, 0.0001103890000000024, 0.00011029099999999847, 0.0001103890000000024, 0.00011024999999999924, 0.00011024999999999924, 0.00011020800000000053, 0.00010951399999999806, 0.00011026399999999881]</msg>
<status status="PASS" starttime="20201030 18:32:15.886" endtime="20201030 18:32:15.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.881" endtime="20201030 18:32:15.890"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:15.894" endtime="20201030 18:32:15.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.892" endtime="20201030 18:32:15.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.891" endtime="20201030 18:32:15.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.529" endtime="20201030 18:32:15.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.529" endtime="20201030 18:32:15.915"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.924" endtime="20201030 18:32:15.944"></status>
</kw>
<msg timestamp="20201030 18:32:15.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:15.922" endtime="20201030 18:32:15.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:15.946" endtime="20201030 18:32:15.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.948" endtime="20201030 18:32:15.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.919" endtime="20201030 18:32:15.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.917" endtime="20201030 18:32:15.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.958" endtime="20201030 18:32:16.245"></status>
</kw>
<msg timestamp="20201030 18:32:16.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022577375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022688111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:15.956" endtime="20201030 18:32:16.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022577375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022688111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:16.249" endtime="20201030 18:32:16.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:16.257" endtime="20201030 18:32:16.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.953" endtime="20201030 18:32:16.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.951" endtime="20201030 18:32:16.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:16.264" level="INFO">${RESULT} = [{'diff': 0.00011073600000000017}, {'diff': 0.00011129199999999895}, {'diff': 0.00011138899999999993}, {'diff': 0.00011136100000000079}, {'diff': 0.00011123600000000067}, {'diff': 0.000111250000000000...</msg>
<status status="PASS" starttime="20201030 18:32:16.261" endtime="20201030 18:32:16.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:16.269" level="INFO">${ACCURACY} = {'diff': [0.00011073600000000017, 0.00011129199999999895, 0.00011138899999999993, 0.00011136100000000079, 0.00011123600000000067, 0.00011125000000000024, 0.00011118099999999839, 0.00011134799999999723...</msg>
<status status="PASS" starttime="20201030 18:32:16.265" endtime="20201030 18:32:16.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.274" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 18:32:16.273" endtime="20201030 18:32:16.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.277" level="INFO">VALUE: [0.00011073600000000017, 0.00011129199999999895, 0.00011138899999999993, 0.00011136100000000079, 0.00011123600000000067, 0.00011125000000000024, 0.00011118099999999839, 0.00011134799999999723, 0.00011122300000000057, 0.00011130500000000251, 0.00011120800000000153, 0.00011137500000000036, 0.00011138899999999993, 0.00011043000000000164, 0.0001112220000000011, 0.00011130499999999904, 0.00011043100000000111, 0.00011044499999999721, 0.00011115299999999925, 0.00011127799999999938, 0.0001112220000000011, 0.00011117999999999892, 0.0001114029999999995, 0.00011118100000000186, 0.00011132000000000156, 0.00011116599999999935, 0.00011044399999999774, 0.0001112359999999972, 0.00011111100000000054, 0.00011133300000000165, 0.0001114029999999995, 0.00011137500000000036, 0.00011133300000000165, 0.00011118100000000186, 0.00011142999999999917, 0.000111209000000001, 0.00011137500000000036, 0.0001114159999999996, 0.00011126399999999981, 0.00011119399999999849, 0.00011117999999999892, 0.00011115199999999978, 0.00011131900000000208, 0.00011119400000000196, 0.00011133300000000165, 0.00011117999999999892, 0.00011115299999999925, 0.00011119500000000143, 0.00011115299999999925, 0.00011132000000000156]</msg>
<status status="PASS" starttime="20201030 18:32:16.275" endtime="20201030 18:32:16.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.270" endtime="20201030 18:32:16.278"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:16.282" endtime="20201030 18:32:16.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.280" endtime="20201030 18:32:16.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.279" endtime="20201030 18:32:16.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.916" endtime="20201030 18:32:16.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.915" endtime="20201030 18:32:16.302"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:16.311" endtime="20201030 18:32:16.332"></status>
</kw>
<msg timestamp="20201030 18:32:16.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:16.310" endtime="20201030 18:32:16.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:16.333" endtime="20201030 18:32:16.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:16.336" endtime="20201030 18:32:16.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.307" endtime="20201030 18:32:16.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.305" endtime="20201030 18:32:16.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:16.345" endtime="20201030 18:32:16.632"></status>
</kw>
<msg timestamp="20201030 18:32:16.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02248475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022596708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:16.344" endtime="20201030 18:32:16.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02248475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022596708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:16.636" endtime="20201030 18:32:16.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:16.644" endtime="20201030 18:32:16.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.341" endtime="20201030 18:32:16.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.339" endtime="20201030 18:32:16.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:16.651" level="INFO">${RESULT} = [{'diff': 0.00011195799999999881}, {'diff': 0.00011215200000000078}, {'diff': 0.00011230500000000004}, {'diff': 0.00011238900000000093}, {'diff': 0.00011241700000000007}, {'diff': 0.000112416999999996...</msg>
<status status="PASS" starttime="20201030 18:32:16.648" endtime="20201030 18:32:16.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:16.655" level="INFO">${ACCURACY} = {'diff': [0.00011195799999999881, 0.00011215200000000078, 0.00011230500000000004, 0.00011238900000000093, 0.00011241700000000007, 0.0001124169999999966, 0.0001122359999999982, 0.00011236099999999832, ...</msg>
<status status="PASS" starttime="20201030 18:32:16.652" endtime="20201030 18:32:16.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.660" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 18:32:16.659" endtime="20201030 18:32:16.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.662" level="INFO">VALUE: [0.00011195799999999881, 0.00011215200000000078, 0.00011230500000000004, 0.00011238900000000093, 0.00011241700000000007, 0.0001124169999999966, 0.0001122359999999982, 0.00011236099999999832, 0.00011222199999999863, 0.0001123749999999979, 0.00011220899999999853, 0.00011234699999999875, 0.00011233399999999866, 0.00011236100000000179, 0.0001124030000000005, 0.00011213900000000068, 0.00011219399999999949, 0.00011220800000000253, 0.00011229100000000047, 0.00011236099999999832, 0.00011230500000000004, 0.00011220799999999906, 0.00011236099999999832, 0.00011219499999999896, 0.00011240199999999756, 0.00011223600000000167, 0.00011223600000000167, 0.0001124030000000005, 0.00011219500000000243, 0.00011240299999999703, 0.00011144400000000221, 0.00011217999999999992, 0.0001122359999999982, 0.00011233299999999918, 0.00011231899999999961, 0.00011230500000000004, 0.00011234699999999875, 0.00011241700000000007, 0.00011236100000000179, 0.0001122220000000021, 0.00011217999999999992, 0.00011241700000000007, 0.00011229100000000047, 0.00011225000000000124, 0.00011233399999999866, 0.00011230500000000004, 0.00011238799999999799, 0.00011234699999999875, 0.00011217999999999992, 0.00011216600000000035]</msg>
<status status="PASS" starttime="20201030 18:32:16.661" endtime="20201030 18:32:16.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.656" endtime="20201030 18:32:16.664"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:16.668" endtime="20201030 18:32:16.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.666" endtime="20201030 18:32:16.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.665" endtime="20201030 18:32:16.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.303" endtime="20201030 18:32:16.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.303" endtime="20201030 18:32:16.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.001" endtime="20201030 18:32:16.689"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:16.693" endtime="20201030 18:32:16.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.691" endtime="20201030 18:32:16.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.690" endtime="20201030 18:32:16.713"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:37.931" endtime="20201030 18:32:16.713" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:30:57.427" endtime="20201030 18:32:16.717"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.771" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:32:16.780" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:32:17.955" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:32:16.770" endtime="20201030 18:32:17.956"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.959" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:32:17.957" endtime="20201030 18:32:17.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.768" endtime="20201030 18:32:17.960"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:17.962" endtime="20201030 18:32:18.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.960" endtime="20201030 18:32:18.151"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.165" endtime="20201030 18:32:18.179"></status>
</kw>
<msg timestamp="20201030 18:32:18.180" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:18.163" endtime="20201030 18:32:18.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.182" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:18.181" endtime="20201030 18:32:18.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.186" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:18.183" endtime="20201030 18:32:18.187"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:18.160" endtime="20201030 18:32:18.188"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:18.158" endtime="20201030 18:32:18.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.157" endtime="20201030 18:32:18.188"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:18.192" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:18.192" endtime="20201030 18:32:18.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.189" endtime="20201030 18:32:18.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.156" endtime="20201030 18:32:18.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.155" endtime="20201030 18:32:18.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.194" endtime="20201030 18:32:18.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.154" endtime="20201030 18:32:18.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.198" endtime="20201030 18:32:18.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.152" endtime="20201030 18:32:18.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.767" endtime="20201030 18:32:18.200"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:18.206" endtime="20201030 18:32:18.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.204" endtime="20201030 18:32:18.229"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.258" endtime="20201030 18:32:18.276"></status>
</kw>
<msg timestamp="20201030 18:32:18.278" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:18.254" endtime="20201030 18:32:18.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.283" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:18.280" endtime="20201030 18:32:18.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.290" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:18.286" endtime="20201030 18:32:18.291"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:18.248" endtime="20201030 18:32:18.292"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:18.243" endtime="20201030 18:32:18.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.240" endtime="20201030 18:32:18.294"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:18.304" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:18.301" endtime="20201030 18:32:18.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.296" endtime="20201030 18:32:18.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.238" endtime="20201030 18:32:18.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.237" endtime="20201030 18:32:18.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.308" endtime="20201030 18:32:18.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.234" endtime="20201030 18:32:18.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.230" endtime="20201030 18:32:18.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.203" endtime="20201030 18:32:18.315"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.324" endtime="20201030 18:32:24.443"></status>
</kw>
<msg timestamp="20201030 18:32:24.443" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:18.322" endtime="20201030 18:32:24.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.446" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:24.445" endtime="20201030 18:32:24.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.447" endtime="20201030 18:32:24.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.320" endtime="20201030 18:32:24.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.318" endtime="20201030 18:32:24.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:24.453" level="INFO">${RESULT} = {'bg-timer-count': 0, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:32:24.451" endtime="20201030 18:32:24.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.458" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:24.456" endtime="20201030 18:32:24.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.460" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:32:24.459" endtime="20201030 18:32:24.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.454" endtime="20201030 18:32:24.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.465" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:24.464" endtime="20201030 18:32:24.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.467" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:32:24.466" endtime="20201030 18:32:24.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.461" endtime="20201030 18:32:24.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.472" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:32:24.471" endtime="20201030 18:32:24.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.474" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 18:32:24.473" endtime="20201030 18:32:24.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.468" endtime="20201030 18:32:24.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.482" endtime="20201030 18:32:24.802"></status>
</kw>
<msg timestamp="20201030 18:32:24.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.1084455, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.208466514, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:32:24.480" endtime="20201030 18:32:24.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.1084455, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.208466514, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:32:24.807" endtime="20201030 18:32:24.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.815" endtime="20201030 18:32:24.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.477" endtime="20201030 18:32:24.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.476" endtime="20201030 18:32:24.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:32:24.822" level="INFO">${FILTERED} = [{'diff': 0.10002101399999999}, {'diff': 0.10000426300000001}, {'diff': 0.10000669499999998}, {'diff': 0.10000673600000004}, {'diff': 0.10000673599999998}, {'diff': 0.10000673599999998}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201030 18:32:24.819" endtime="20201030 18:32:24.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:24.826" level="INFO">${RESULT} = {'diff': [0.10002101399999999, 0.10000426300000001, 0.10000669499999998, 0.10000673600000004, 0.10000673599999998, 0.10000673599999998, 0.100006763, 0.10000669500000003, 0.10000684699999995, 0.1000067...</msg>
<status status="PASS" starttime="20201030 18:32:24.823" endtime="20201030 18:32:24.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.830" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:32:24.829" endtime="20201030 18:32:24.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.833" level="INFO">VALUE: [0.10002101399999999, 0.10000426300000001, 0.10000669499999998, 0.10000673600000004, 0.10000673599999998, 0.10000673599999998, 0.100006763, 0.10000669500000003, 0.10000684699999995, 0.100006708, 0.10000672200000005, 0.10000681999999994, 0.10000673599999987, 0.1000067360000001, 0.1000067360000001, 0.10000674999999992, 0.1000067360000001, 0.10000674999999992, 0.10000672200000005, 0.1000067360000001, 0.10000684699999995, 0.100006708, 0.1000067360000001, 0.10000683300000013, 0.10000673599999965, 0.10000672200000027, 0.10000676399999975, 0.10000680599999967, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.410000003536197e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.409999999095305e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201030 18:32:24.832" endtime="20201030 18:32:24.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.827" endtime="20201030 18:32:24.834"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:24.838" endtime="20201030 18:32:24.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.837" endtime="20201030 18:32:24.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.835" endtime="20201030 18:32:24.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.316" endtime="20201030 18:32:24.859"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 18:32:18.201" endtime="20201030 18:32:24.859" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:24.869" endtime="20201030 18:32:24.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.865" endtime="20201030 18:32:24.889"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.911" endtime="20201030 18:32:24.926"></status>
</kw>
<msg timestamp="20201030 18:32:24.926" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:24.908" endtime="20201030 18:32:24.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.929" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:24.927" endtime="20201030 18:32:24.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.932" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:24.930" endtime="20201030 18:32:24.932"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:24.905" endtime="20201030 18:32:24.933"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:24.902" endtime="20201030 18:32:24.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.900" endtime="20201030 18:32:24.934"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:24.938" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:24.937" endtime="20201030 18:32:24.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.935" endtime="20201030 18:32:24.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.897" endtime="20201030 18:32:24.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.896" endtime="20201030 18:32:24.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.940" endtime="20201030 18:32:24.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.895" endtime="20201030 18:32:24.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.892" endtime="20201030 18:32:24.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.863" endtime="20201030 18:32:24.942"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.951" endtime="20201030 18:32:31.073"></status>
</kw>
<msg timestamp="20201030 18:32:31.075" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:24.949" endtime="20201030 18:32:31.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.080" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:31.077" endtime="20201030 18:32:31.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.083" endtime="20201030 18:32:31.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.947" endtime="20201030 18:32:31.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.945" endtime="20201030 18:32:31.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:31.095" level="INFO">${RESULT} = {'bg-timer-count': 5, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:32:31.091" endtime="20201030 18:32:31.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.104" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:31.101" endtime="20201030 18:32:31.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.108" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:32:31.106" endtime="20201030 18:32:31.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.097" endtime="20201030 18:32:31.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.119" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:31.117" endtime="20201030 18:32:31.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.128" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:32:31.121" endtime="20201030 18:32:31.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.112" endtime="20201030 18:32:31.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.139" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:32:31.137" endtime="20201030 18:32:31.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.143" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 18:32:31.141" endtime="20201030 18:32:31.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.132" endtime="20201030 18:32:31.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.160" endtime="20201030 18:32:31.464"></status>
</kw>
<msg timestamp="20201030 18:32:31.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072117569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.172145458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:31.156" endtime="20201030 18:32:31.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072117569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.172145458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:31.468" endtime="20201030 18:32:31.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.476" endtime="20201030 18:32:31.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.150" endtime="20201030 18:32:31.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.147" endtime="20201030 18:32:31.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:32:31.482" level="INFO">${FILTERED} = [{'diff': 0.100027889}, {'diff': 0.09999813799999999}, {'diff': 5.419999999922709e-07}, {'diff': 5.409999999650417e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 5.41...</msg>
<status status="PASS" starttime="20201030 18:32:31.479" endtime="20201030 18:32:31.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:31.486" level="INFO">${RESULT} = {'diff': [0.100027889, 0.09999813799999999, 5.419999999922709e-07, 5.409999999650417e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 5.410000000205528e-07, 5.419999999922709e-07, 5.419999999922709e...</msg>
<status status="PASS" starttime="20201030 18:32:31.483" endtime="20201030 18:32:31.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.491" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:32:31.490" endtime="20201030 18:32:31.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.493" level="INFO">VALUE: [0.100027889, 0.09999813799999999, 5.419999999922709e-07, 5.409999999650417e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 5.410000000205528e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000001315751e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 0.10000724999999999, 0.10000677800000002, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 0.10000723600000017, 0.10000680600000011, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07]</msg>
<status status="PASS" starttime="20201030 18:32:31.492" endtime="20201030 18:32:31.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.487" endtime="20201030 18:32:31.495"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:31.498" endtime="20201030 18:32:31.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.497" endtime="20201030 18:32:31.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.496" endtime="20201030 18:32:31.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.943" endtime="20201030 18:32:31.519"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 18:32:24.861" endtime="20201030 18:32:31.519" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:31.526" endtime="20201030 18:32:31.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.524" endtime="20201030 18:32:31.546"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.559" endtime="20201030 18:32:31.572"></status>
</kw>
<msg timestamp="20201030 18:32:31.573" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:31.557" endtime="20201030 18:32:31.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.576" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:31.574" endtime="20201030 18:32:31.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.579" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:31.577" endtime="20201030 18:32:31.579"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:31.554" endtime="20201030 18:32:31.579"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:31.552" endtime="20201030 18:32:31.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.551" endtime="20201030 18:32:31.580"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:31.584" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:31.583" endtime="20201030 18:32:31.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.581" endtime="20201030 18:32:31.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.550" endtime="20201030 18:32:31.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.549" endtime="20201030 18:32:31.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.586" endtime="20201030 18:32:31.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.548" endtime="20201030 18:32:31.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.546" endtime="20201030 18:32:31.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.523" endtime="20201030 18:32:31.588"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.598" endtime="20201030 18:32:37.719"></status>
</kw>
<msg timestamp="20201030 18:32:37.720" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:31.595" endtime="20201030 18:32:37.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.725" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:37.722" endtime="20201030 18:32:37.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.728" endtime="20201030 18:32:37.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.592" endtime="20201030 18:32:37.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.590" endtime="20201030 18:32:37.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:37.740" level="INFO">${RESULT} = {'bg-timer-count': 10, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:32:37.735" endtime="20201030 18:32:37.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.750" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:37.748" endtime="20201030 18:32:37.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.754" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:32:37.752" endtime="20201030 18:32:37.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.742" endtime="20201030 18:32:37.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.765" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:37.762" endtime="20201030 18:32:37.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.769" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:32:37.767" endtime="20201030 18:32:37.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.757" endtime="20201030 18:32:37.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.779" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:32:37.777" endtime="20201030 18:32:37.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.783" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 18:32:37.781" endtime="20201030 18:32:37.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.772" endtime="20201030 18:32:37.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.798" endtime="20201030 18:32:38.099"></status>
</kw>
<msg timestamp="20201030 18:32:38.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062111056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162146167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:37.795" endtime="20201030 18:32:38.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062111056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162146167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:38.103" endtime="20201030 18:32:38.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.110" endtime="20201030 18:32:38.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.790" endtime="20201030 18:32:38.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.786" endtime="20201030 18:32:38.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:32:38.117" level="INFO">${FILTERED} = [{'diff': 0.10003511100000001}, {'diff': 0.09999056999999997}, {'diff': 0.10000675000000003}, {'diff': 0.10000783299999999}, {'diff': 0.10000673600000004}, {'diff': 0.10000673599999998}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201030 18:32:38.114" endtime="20201030 18:32:38.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:38.122" level="INFO">${RESULT} = {'diff': [0.10003511100000001, 0.09999056999999997, 0.10000675000000003, 0.10000783299999999, 0.10000673600000004, 0.10000673599999998, 0.10000677699999994, 0.10000673599999998, 0.100006708, 0.1000068...</msg>
<status status="PASS" starttime="20201030 18:32:38.118" endtime="20201030 18:32:38.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.126" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:32:38.125" endtime="20201030 18:32:38.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.129" level="INFO">VALUE: [0.10003511100000001, 0.09999056999999997, 0.10000675000000003, 0.10000783299999999, 0.10000673600000004, 0.10000673599999998, 0.10000677699999994, 0.10000673599999998, 0.100006708, 0.10000683399999999, 0.10000672300000013, 0.10000681900000008, 0.10000681900000008, 0.10000674999999992, 0.10000676399999997, 0.1000067360000001, 0.10000673599999987, 0.10000673699999996, 0.10000684699999995, 0.10000676399999997, 0.10000674999999992, 0.10000684799999959, 0.10000674999999992, 0.10000687500000005, 0.10000672199999983, 0.10000684699999995, 0.10000676300000011, 0.10000674999999992, 0.10000683400000021, 0.1000069029999997, 5.410000003536197e-07, 5.419999999922709e-07, 5.409999999095305e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201030 18:32:38.128" endtime="20201030 18:32:38.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.123" endtime="20201030 18:32:38.130"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:38.134" endtime="20201030 18:32:38.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.132" endtime="20201030 18:32:38.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.131" endtime="20201030 18:32:38.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.589" endtime="20201030 18:32:38.154"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 18:32:31.521" endtime="20201030 18:32:38.155" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:38.161" endtime="20201030 18:32:38.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.160" endtime="20201030 18:32:38.181"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.194" endtime="20201030 18:32:38.209"></status>
</kw>
<msg timestamp="20201030 18:32:38.209" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:38.192" endtime="20201030 18:32:38.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.212" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:38.211" endtime="20201030 18:32:38.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.215" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:38.213" endtime="20201030 18:32:38.215"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:38.190" endtime="20201030 18:32:38.216"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:38.187" endtime="20201030 18:32:38.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.186" endtime="20201030 18:32:38.217"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:38.221" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:38.220" endtime="20201030 18:32:38.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.218" endtime="20201030 18:32:38.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.185" endtime="20201030 18:32:38.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.185" endtime="20201030 18:32:38.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.222" endtime="20201030 18:32:38.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.183" endtime="20201030 18:32:38.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.182" endtime="20201030 18:32:38.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.159" endtime="20201030 18:32:38.225"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.233" endtime="20201030 18:32:44.356"></status>
</kw>
<msg timestamp="20201030 18:32:44.357" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:38.232" endtime="20201030 18:32:44.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.362" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:44.359" endtime="20201030 18:32:44.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.366" endtime="20201030 18:32:44.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.229" endtime="20201030 18:32:44.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.227" endtime="20201030 18:32:44.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:44.376" level="INFO">${RESULT} = {'bg-timer-count': 15, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:32:44.373" endtime="20201030 18:32:44.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.385" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:44.383" endtime="20201030 18:32:44.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.389" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:32:44.387" endtime="20201030 18:32:44.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.378" endtime="20201030 18:32:44.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.399" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:44.397" endtime="20201030 18:32:44.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.403" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:32:44.401" endtime="20201030 18:32:44.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.392" endtime="20201030 18:32:44.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.413" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:32:44.411" endtime="20201030 18:32:44.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.417" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 18:32:44.415" endtime="20201030 18:32:44.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.406" endtime="20201030 18:32:44.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.433" endtime="20201030 18:32:44.733"></status>
</kw>
<msg timestamp="20201030 18:32:44.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062450917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162490431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:44.429" endtime="20201030 18:32:44.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062450917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162490431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:44.737" endtime="20201030 18:32:44.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.745" endtime="20201030 18:32:44.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.424" endtime="20201030 18:32:44.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.420" endtime="20201030 18:32:44.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:32:44.752" level="INFO">${FILTERED} = [{'diff': 0.100039514}, {'diff': 0.09998670900000001}, {'diff': 0.10000679200000001}, {'diff': 0.10000673600000004}, {'diff': 0.10000677800000002}, {'diff': 4.73000000056345e-07}, {'diff': 5.419999999...</msg>
<status status="PASS" starttime="20201030 18:32:44.748" endtime="20201030 18:32:44.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:44.756" level="INFO">${RESULT} = {'diff': [0.100039514, 0.09998670900000001, 0.10000679200000001, 0.10000673600000004, 0.10000677800000002, 4.73000000056345e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000000205528e-07, 0....</msg>
<status status="PASS" starttime="20201030 18:32:44.752" endtime="20201030 18:32:44.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.760" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:32:44.759" endtime="20201030 18:32:44.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.762" level="INFO">VALUE: [0.100039514, 0.09998670900000001, 0.10000679200000001, 0.10000673600000004, 0.10000677800000002, 4.73000000056345e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000000205528e-07, 0.10000719400000002, 0.10000680500000003, 0.10000680599999989, 0.10000680599999989, 0.10000680600000011, 0.1000067360000001, 0.10000683300000013, 0.100006708, 0.10000680599999989, 0.10000687500000005, 5.419999999922709e-07, 4.7199999997360464e-07, 5.409999999095305e-07, 5.420000004363601e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7200000041769385e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 5.419999995481817e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 18:32:44.761" endtime="20201030 18:32:44.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.756" endtime="20201030 18:32:44.763"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:44.767" endtime="20201030 18:32:44.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.766" endtime="20201030 18:32:44.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.764" endtime="20201030 18:32:44.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.226" endtime="20201030 18:32:44.788"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 18:32:38.156" endtime="20201030 18:32:44.788" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:44.795" endtime="20201030 18:32:44.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.793" endtime="20201030 18:32:44.814"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.828" endtime="20201030 18:32:44.842"></status>
</kw>
<msg timestamp="20201030 18:32:44.843" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:44.827" endtime="20201030 18:32:44.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.845" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:44.844" endtime="20201030 18:32:44.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.848" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:44.846" endtime="20201030 18:32:44.849"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:44.824" endtime="20201030 18:32:44.849"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:44.822" endtime="20201030 18:32:44.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.821" endtime="20201030 18:32:44.850"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:44.854" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:44.853" endtime="20201030 18:32:44.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.851" endtime="20201030 18:32:44.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.820" endtime="20201030 18:32:44.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.819" endtime="20201030 18:32:44.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.856" endtime="20201030 18:32:44.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.817" endtime="20201030 18:32:44.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.815" endtime="20201030 18:32:44.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.792" endtime="20201030 18:32:44.858"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.867" endtime="20201030 18:32:50.988"></status>
</kw>
<msg timestamp="20201030 18:32:50.989" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:44.865" endtime="20201030 18:32:50.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:50.995" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:50.991" endtime="20201030 18:32:50.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.998" endtime="20201030 18:32:51.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.862" endtime="20201030 18:32:51.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.860" endtime="20201030 18:32:51.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:51.008" level="INFO">${RESULT} = {'bg-timer-count': 20, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:32:51.005" endtime="20201030 18:32:51.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.017" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:51.015" endtime="20201030 18:32:51.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.021" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:32:51.019" endtime="20201030 18:32:51.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.010" endtime="20201030 18:32:51.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.033" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:51.031" endtime="20201030 18:32:51.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.037" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:32:51.035" endtime="20201030 18:32:51.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.024" endtime="20201030 18:32:51.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.047" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:32:51.045" endtime="20201030 18:32:51.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.051" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 18:32:51.049" endtime="20201030 18:32:51.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.040" endtime="20201030 18:32:51.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.067" endtime="20201030 18:32:51.365"></status>
</kw>
<msg timestamp="20201030 18:32:51.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062279306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162349264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:51.063" endtime="20201030 18:32:51.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062279306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162349264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:51.369" endtime="20201030 18:32:51.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.381" endtime="20201030 18:32:51.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.058" endtime="20201030 18:32:51.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.054" endtime="20201030 18:32:51.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:32:51.392" level="INFO">${FILTERED} = [{'diff': 0.10006995799999999}, {'diff': 0.09995722199999998}, {'diff': 0.100004431}, {'diff': 0.10000909699999999}, {'diff': 0.10000579200000004}, {'diff': 5.419999999922709e-07}, {'diff': 4.72000000...</msg>
<status status="PASS" starttime="20201030 18:32:51.388" endtime="20201030 18:32:51.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:51.400" level="INFO">${RESULT} = {'diff': [0.10006995799999999, 0.09995722199999998, 0.100004431, 0.10000909699999999, 0.10000579200000004, 5.419999999922709e-07, 4.7200000008462695e-07, 5.420000001032932e-07, 5.410000000205528e-07, ...</msg>
<status status="PASS" starttime="20201030 18:32:51.395" endtime="20201030 18:32:51.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.408" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:32:51.407" endtime="20201030 18:32:51.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.410" level="INFO">VALUE: [0.10006995799999999, 0.09995722199999998, 0.100004431, 0.10000909699999999, 0.10000579200000004, 5.419999999922709e-07, 4.7200000008462695e-07, 5.420000001032932e-07, 5.410000000205528e-07, 4.7200000019564925e-07, 0.10000723600000017, 0.100006708, 0.10000672200000005, 0.10000673599999987, 0.10000672299999991, 0.10000672300000013, 0.10000681900000008, 0.10000672199999983, 0.10000673600000032, 0.10000672199999983, 0.10000672299999991, 0.10000672299999991, 0.10000680500000003, 0.1000067360000001, 0.10000674999999992, 0.10000670900000008, 0.10000672299999991, 0.1000068190000003, 0.10000672199999983, 0.1000067360000001, 0.10000672199999983, 0.10000680600000011, 0.1000067360000001, 0.10000672199999983, 0.10000680500000003, 0.10000681999999994, 0.10000673699999973, 0.10000680600000011, 4.73000000056345e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.419999995481817e-07]</msg>
<status status="PASS" starttime="20201030 18:32:51.409" endtime="20201030 18:32:51.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.404" endtime="20201030 18:32:51.412"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:51.415" endtime="20201030 18:32:51.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.414" endtime="20201030 18:32:51.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.413" endtime="20201030 18:32:51.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.859" endtime="20201030 18:32:51.436"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 18:32:44.790" endtime="20201030 18:32:51.437" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:51.443" endtime="20201030 18:32:51.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.442" endtime="20201030 18:32:51.463"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.477" endtime="20201030 18:32:51.490"></status>
</kw>
<msg timestamp="20201030 18:32:51.491" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:51.475" endtime="20201030 18:32:51.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.493" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:51.492" endtime="20201030 18:32:51.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.497" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:51.494" endtime="20201030 18:32:51.497"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:51.472" endtime="20201030 18:32:51.498"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:51.470" endtime="20201030 18:32:51.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.469" endtime="20201030 18:32:51.498"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:51.502" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:51.502" endtime="20201030 18:32:51.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.499" endtime="20201030 18:32:51.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.468" endtime="20201030 18:32:51.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.467" endtime="20201030 18:32:51.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.504" endtime="20201030 18:32:51.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.466" endtime="20201030 18:32:51.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.464" endtime="20201030 18:32:51.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.440" endtime="20201030 18:32:51.507"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.517" endtime="20201030 18:32:57.640"></status>
</kw>
<msg timestamp="20201030 18:32:57.641" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:51.515" endtime="20201030 18:32:57.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.647" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:57.643" endtime="20201030 18:32:57.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:57.650" endtime="20201030 18:32:57.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.512" endtime="20201030 18:32:57.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.509" endtime="20201030 18:32:57.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:57.661" level="INFO">${RESULT} = {'bg-timer-count': 25, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:32:57.658" endtime="20201030 18:32:57.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.670" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:57.668" endtime="20201030 18:32:57.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.675" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:32:57.673" endtime="20201030 18:32:57.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.663" endtime="20201030 18:32:57.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.685" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:57.683" endtime="20201030 18:32:57.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.690" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:32:57.688" endtime="20201030 18:32:57.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.678" endtime="20201030 18:32:57.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.700" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:32:57.698" endtime="20201030 18:32:57.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.705" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 18:32:57.703" endtime="20201030 18:32:57.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.693" endtime="20201030 18:32:57.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:57.721" endtime="20201030 18:32:58.035"></status>
</kw>
<msg timestamp="20201030 18:32:58.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063920292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164009444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:57.718" endtime="20201030 18:32:58.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:58.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063920292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164009444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:58.039" endtime="20201030 18:32:58.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:58.047" endtime="20201030 18:32:58.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.712" endtime="20201030 18:32:58.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.708" endtime="20201030 18:32:58.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:32:58.054" level="INFO">${FILTERED} = [{'diff': 0.100089152}, {'diff': 0.09993679099999997}, {'diff': 0.10000749999999997}, {'diff': 0.10000790200000004}, {'diff': 0.10000570800000003}, {'diff': 0.10000673599999998}, {'diff': 0.1000067219...</msg>
<status status="PASS" starttime="20201030 18:32:58.051" endtime="20201030 18:32:58.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:58.059" level="INFO">${RESULT} = {'diff': [0.100089152, 0.09993679099999997, 0.10000749999999997, 0.10000790200000004, 0.10000570800000003, 0.10000673599999998, 0.10000672199999994, 0.100006708, 0.10000672199999994, 0.100006722000000...</msg>
<status status="PASS" starttime="20201030 18:32:58.055" endtime="20201030 18:32:58.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:58.063" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:32:58.062" endtime="20201030 18:32:58.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:58.066" level="INFO">VALUE: [0.100089152, 0.09993679099999997, 0.10000749999999997, 0.10000790200000004, 0.10000570800000003, 0.10000673599999998, 0.10000672199999994, 0.100006708, 0.10000672199999994, 0.10000672200000005, 0.1000067360000001, 0.10000670900000008, 0.10000680500000003, 0.10000672199999983, 0.10000672200000005, 0.1000067360000001, 0.100006708, 0.10000673599999987, 0.10000670899999986, 0.10000679200000007, 0.10000684699999995, 0.100006708, 0.10000669399999973, 0.10000680600000011, 0.1000067360000001, 0.10000670900000008, 0.10000680600000011, 0.1000067360000001, 0.10000676399999975, 0.10000669400000017, 0.10000676400000019, 0.10000674999999992, 0.10000672199999983, 0.10000682000000038, 0.10000681899999986, 0.10000674999999992, 0.10000674999999992, 0.10000674999999992, 0.10000674999999992, 0.10000674999999992, 0.10000674999999948, 0.1000067360000001, 0.10000675000000037, 0.10000675000000037, 0.10000675000000037, 0.10000676399999975, 0.10000676400000064, 0.10000672199999983, 0.10000679200000029, 0.10000672199999983, 0.1000067360000001]</msg>
<status status="PASS" starttime="20201030 18:32:58.064" endtime="20201030 18:32:58.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.060" endtime="20201030 18:32:58.067"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:58.071" endtime="20201030 18:32:58.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.069" endtime="20201030 18:32:58.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.068" endtime="20201030 18:32:58.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.508" endtime="20201030 18:32:58.091"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 18:32:51.438" endtime="20201030 18:32:58.092" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:32:16.726" endtime="20201030 18:32:58.098"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201030 18:30:14.680" endtime="20201030 18:32:58.130"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
