<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 15:54:27.570" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.132" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:54:28.140" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:54:29.360" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:54:28.130" endtime="20201030 15:54:29.361"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.363" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:54:29.362" endtime="20201030 15:54:29.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.129" endtime="20201030 15:54:29.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:29.367" endtime="20201030 15:54:29.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.365" endtime="20201030 15:54:29.606"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.618" endtime="20201030 15:54:29.633"></status>
</kw>
<msg timestamp="20201030 15:54:29.633" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:29.617" endtime="20201030 15:54:29.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.636" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:29.634" endtime="20201030 15:54:29.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.639" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:29.637" endtime="20201030 15:54:29.639"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:29.614" endtime="20201030 15:54:29.640"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:29.612" endtime="20201030 15:54:29.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.611" endtime="20201030 15:54:29.641"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:29.645" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:29.645" endtime="20201030 15:54:29.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.642" endtime="20201030 15:54:29.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.610" endtime="20201030 15:54:29.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.609" endtime="20201030 15:54:29.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.647" endtime="20201030 15:54:29.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.608" endtime="20201030 15:54:29.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.650" endtime="20201030 15:54:29.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.606" endtime="20201030 15:54:29.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.127" endtime="20201030 15:54:29.652"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:29.658" endtime="20201030 15:54:29.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.657" endtime="20201030 15:54:29.678"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.691" endtime="20201030 15:54:29.705"></status>
</kw>
<msg timestamp="20201030 15:54:29.706" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:29.690" endtime="20201030 15:54:29.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.708" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:29.707" endtime="20201030 15:54:29.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.711" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:29.709" endtime="20201030 15:54:29.711"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:29.687" endtime="20201030 15:54:29.712"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:29.685" endtime="20201030 15:54:29.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.683" endtime="20201030 15:54:29.713"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:29.720" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:29.719" endtime="20201030 15:54:29.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.714" endtime="20201030 15:54:29.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.682" endtime="20201030 15:54:29.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.682" endtime="20201030 15:54:29.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.722" endtime="20201030 15:54:29.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.680" endtime="20201030 15:54:29.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.679" endtime="20201030 15:54:29.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.655" endtime="20201030 15:54:29.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.738" endtime="20201030 15:54:29.749"></status>
</kw>
<msg timestamp="20201030 15:54:29.750" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:29.734" endtime="20201030 15:54:29.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.754" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:29.752" endtime="20201030 15:54:29.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.755" endtime="20201030 15:54:29.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.728" endtime="20201030 15:54:29.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.727" endtime="20201030 15:54:29.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.762" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 15:54:29.761" endtime="20201030 15:54:29.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.764" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201030 15:54:29.763" endtime="20201030 15:54:29.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.759" endtime="20201030 15:54:29.765"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:29.653" endtime="20201030 15:54:29.766" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:54:27.682" endtime="20201030 15:54:29.768"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.820" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:54:29.828" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:54:31.084" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:54:29.819" endtime="20201030 15:54:31.086"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.093" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:54:31.089" endtime="20201030 15:54:31.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.818" endtime="20201030 15:54:31.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:31.099" endtime="20201030 15:54:31.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.096" endtime="20201030 15:54:31.370"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.383" endtime="20201030 15:54:31.397"></status>
</kw>
<msg timestamp="20201030 15:54:31.397" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.381" endtime="20201030 15:54:31.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.400" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.398" endtime="20201030 15:54:31.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.403" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:31.401" endtime="20201030 15:54:31.403"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:31.379" endtime="20201030 15:54:31.404"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:31.377" endtime="20201030 15:54:31.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.375" endtime="20201030 15:54:31.405"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:31.409" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:31.408" endtime="20201030 15:54:31.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.406" endtime="20201030 15:54:31.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.375" endtime="20201030 15:54:31.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.374" endtime="20201030 15:54:31.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.410" endtime="20201030 15:54:31.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.373" endtime="20201030 15:54:31.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.413" endtime="20201030 15:54:31.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.371" endtime="20201030 15:54:31.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.816" endtime="20201030 15:54:31.416"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:31.423" endtime="20201030 15:54:31.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.420" endtime="20201030 15:54:31.443"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.456" endtime="20201030 15:54:31.470"></status>
</kw>
<msg timestamp="20201030 15:54:31.471" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.455" endtime="20201030 15:54:31.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.474" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.472" endtime="20201030 15:54:31.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.477" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:31.475" endtime="20201030 15:54:31.478"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:31.452" endtime="20201030 15:54:31.478"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:31.450" endtime="20201030 15:54:31.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.448" endtime="20201030 15:54:31.479"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:31.483" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:31.482" endtime="20201030 15:54:31.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.480" endtime="20201030 15:54:31.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.447" endtime="20201030 15:54:31.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.447" endtime="20201030 15:54:31.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.485" endtime="20201030 15:54:31.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.445" endtime="20201030 15:54:31.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.443" endtime="20201030 15:54:31.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.419" endtime="20201030 15:54:31.488"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.497" endtime="20201030 15:54:31.508"></status>
</kw>
<msg timestamp="20201030 15:54:31.509" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.495" endtime="20201030 15:54:31.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.511" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.510" endtime="20201030 15:54:31.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.512" endtime="20201030 15:54:31.514"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.492" endtime="20201030 15:54:31.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.491" endtime="20201030 15:54:31.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.522" endtime="20201030 15:54:31.797"></status>
</kw>
<msg timestamp="20201030 15:54:31.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064976528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064977069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:31.520" endtime="20201030 15:54:31.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064976528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064977069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:31.800" endtime="20201030 15:54:31.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.806" endtime="20201030 15:54:31.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.518" endtime="20201030 15:54:31.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.516" endtime="20201030 15:54:31.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:31.813" level="INFO">${RESULT} = [{'diff': 5.409999999927972e-07}, {'diff': 8.652999999997357e-06}, {'diff': 8.805000000000618e-06}, {'diff': 1.59169999999903e-05}, {'diff': 1.7527999999988886e-05}, {'diff': 1.4180000000002524e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:54:31.810" endtime="20201030 15:54:31.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:31.819" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999927972e-07, 8.652999999997357e-06, 8.805000000000618e-06, 1.59169999999903e-05, 1.7527999999988886e-05, 1.4180000000002524e-05, 1.3374999999996029e-05, 1.0138999999992349e-05, 1.1...</msg>
<status status="PASS" starttime="20201030 15:54:31.815" endtime="20201030 15:54:31.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.826" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:31.824" endtime="20201030 15:54:31.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.830" level="INFO">VALUE: [5.409999999927972e-07, 8.652999999997357e-06, 8.805000000000618e-06, 1.59169999999903e-05, 1.7527999999988886e-05, 1.4180000000002524e-05, 1.3374999999996029e-05, 1.0138999999992349e-05, 1.1055999999995403e-05, 1.6792000000001583e-05, 1.0388999999999537e-05, 1.6028000000001263e-05, 9.333999999999731e-06, 1.605500000000093e-05, 4.375000000000906e-06, 1.3471999999986606e-05, 1.6320000000000223e-05, 1.1598000000001552e-05, 9.722000000003672e-06, 1.7208000000004664e-05, 1.1291999999996083e-05, 7.222000000001172e-06, 1.6708000000004164e-05, 6.513999999999132e-06, 9.597000000000078e-06]</msg>
<status status="PASS" starttime="20201030 15:54:31.828" endtime="20201030 15:54:31.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.820" endtime="20201030 15:54:31.832"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:31.839" endtime="20201030 15:54:31.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.835" endtime="20201030 15:54:31.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.833" endtime="20201030 15:54:31.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.489" endtime="20201030 15:54:31.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.489" endtime="20201030 15:54:31.860"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.869" endtime="20201030 15:54:31.879"></status>
</kw>
<msg timestamp="20201030 15:54:31.880" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.867" endtime="20201030 15:54:31.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.882" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.881" endtime="20201030 15:54:31.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.883" endtime="20201030 15:54:31.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.864" endtime="20201030 15:54:31.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.862" endtime="20201030 15:54:31.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.893" endtime="20201030 15:54:32.160"></status>
</kw>
<msg timestamp="20201030 15:54:32.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019951542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019952083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:31.891" endtime="20201030 15:54:32.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019951542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019952083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:32.163" endtime="20201030 15:54:32.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.169" endtime="20201030 15:54:32.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.889" endtime="20201030 15:54:32.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.887" endtime="20201030 15:54:32.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:32.176" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 1.1750000000001343e-05}, {'diff': 8.999999999998592e-06}, {'diff': 1.3486000000000054e-05}, {'diff': 1.0819999999998192e-05}, {'diff': 1.4555999999998903e-05...</msg>
<status status="PASS" starttime="20201030 15:54:32.173" endtime="20201030 15:54:32.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:32.181" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 1.1750000000001343e-05, 8.999999999998592e-06, 1.3486000000000054e-05, 1.0819999999998192e-05, 1.4555999999998903e-05, 1.577700000000154e-05, 1.3360999999999928e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:54:32.178" endtime="20201030 15:54:32.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.185" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:32.184" endtime="20201030 15:54:32.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.188" level="INFO">VALUE: [5.409999999997361e-07, 1.1750000000001343e-05, 8.999999999998592e-06, 1.3486000000000054e-05, 1.0819999999998192e-05, 1.4555999999998903e-05, 1.577700000000154e-05, 1.3360999999999928e-05, 1.4987000000001027e-05, 9.860999999999898e-06, 1.1166999999999427e-05, 1.4166999999998958e-05, 1.1332999999998788e-05, 8.652000000001353e-06, 1.711099999999674e-05, 8.806000000000092e-06, 8.652000000001353e-06, 1.7263999999999474e-05, 1.586100000000243e-05, 7.180999999998466e-06, 7.847000000001797e-06, 4.082999999998477e-06, 1.4292000000002553e-05, 1.4305999999998653e-05, 1.0667000000002397e-05]</msg>
<status status="PASS" starttime="20201030 15:54:32.187" endtime="20201030 15:54:32.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.182" endtime="20201030 15:54:32.189"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:32.192" endtime="20201030 15:54:32.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.191" endtime="20201030 15:54:32.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.190" endtime="20201030 15:54:32.213"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.861" endtime="20201030 15:54:32.213"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.860" endtime="20201030 15:54:32.213"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.222" endtime="20201030 15:54:32.232"></status>
</kw>
<msg timestamp="20201030 15:54:32.233" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:32.219" endtime="20201030 15:54:32.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.235" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:32.234" endtime="20201030 15:54:32.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.237" endtime="20201030 15:54:32.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.217" endtime="20201030 15:54:32.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.215" endtime="20201030 15:54:32.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.246" endtime="20201030 15:54:32.515"></status>
</kw>
<msg timestamp="20201030 15:54:32.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019528917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019529458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:32.244" endtime="20201030 15:54:32.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019528917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019529458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:32.518" endtime="20201030 15:54:32.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.523" endtime="20201030 15:54:32.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.241" endtime="20201030 15:54:32.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.240" endtime="20201030 15:54:32.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:32.529" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 1.1888999999997568e-05}, {'diff': 4.09800000000099e-06}, {'diff': 1.4805999999999153e-05}, {'diff': 7.958999999998356e-06}, {'diff': 1.1054999999999399e-05},...</msg>
<status status="PASS" starttime="20201030 15:54:32.527" endtime="20201030 15:54:32.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:32.532" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 1.1888999999997568e-05, 4.09800000000099e-06, 1.4805999999999153e-05, 7.958999999998356e-06, 1.1054999999999399e-05, 7.707999999998633e-06, 1.0542000000002272e-05, 1.4...</msg>
<status status="PASS" starttime="20201030 15:54:32.530" endtime="20201030 15:54:32.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.537" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:32.536" endtime="20201030 15:54:32.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.540" level="INFO">VALUE: [5.409999999997361e-07, 1.1888999999997568e-05, 4.09800000000099e-06, 1.4805999999999153e-05, 7.958999999998356e-06, 1.1054999999999399e-05, 7.707999999998633e-06, 1.0542000000002272e-05, 1.4180999999998528e-05, 1.8056000000002403e-05, 4.486999999997465e-06, 1.2569000000000469e-05, 7.500000000000562e-06, 5.971999999999922e-06, 9.125000000002187e-06, 1.2152999999997388e-05, 1.430499999999918e-05, 1.6569000000001e-05, 1.754099999999939e-05, 7.138999999999757e-06, 9.028000000001202e-06, 1.2694000000000594e-05, 1.4987000000001027e-05, 5.430999999996716e-06, 7.987000000000966e-06]</msg>
<status status="PASS" starttime="20201030 15:54:32.538" endtime="20201030 15:54:32.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.534" endtime="20201030 15:54:32.540"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:32.545" endtime="20201030 15:54:32.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.543" endtime="20201030 15:54:32.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.541" endtime="20201030 15:54:32.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.214" endtime="20201030 15:54:32.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.213" endtime="20201030 15:54:32.566"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.577" endtime="20201030 15:54:32.588"></status>
</kw>
<msg timestamp="20201030 15:54:32.588" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:32.574" endtime="20201030 15:54:32.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.591" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:32.589" endtime="20201030 15:54:32.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.592" endtime="20201030 15:54:32.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.571" endtime="20201030 15:54:32.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.569" endtime="20201030 15:54:32.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.601" endtime="20201030 15:54:32.884"></status>
</kw>
<msg timestamp="20201030 15:54:32.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022241764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022256694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:32.599" endtime="20201030 15:54:32.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022241764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022256694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:32.887" endtime="20201030 15:54:32.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.893" endtime="20201030 15:54:32.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.597" endtime="20201030 15:54:32.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.595" endtime="20201030 15:54:32.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:32.899" level="INFO">${RESULT} = [{'diff': 1.4929999999999805e-05}, {'diff': 8.874999999998467e-06}, {'diff': 9.860999999999898e-06}, {'diff': 9.708000000000633e-06}, {'diff': 1.5292000000000083e-05}, {'diff': 1.5250000000001374e-05}...</msg>
<status status="PASS" starttime="20201030 15:54:32.896" endtime="20201030 15:54:32.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:32.902" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.4929999999999805e-05, 8.874999999998467e-06, 9.860999999999898e-06, 9.708000000000633e-06, 1.5292000000000083e-05, 1.5250000000001374e-05, 1.5763999999997974e-05, 7.722999999997676e-06, 2....</msg>
<status status="PASS" starttime="20201030 15:54:32.900" endtime="20201030 15:54:32.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.907" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:32.906" endtime="20201030 15:54:32.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.909" level="INFO">VALUE: [1.4929999999999805e-05, 8.874999999998467e-06, 9.860999999999898e-06, 9.708000000000633e-06, 1.5292000000000083e-05, 1.5250000000001374e-05, 1.5763999999997974e-05, 7.722999999997676e-06, 2.76400000000232e-06, 9.333999999999731e-06, 1.2541999999997333e-05, 7.0279999999992016e-06, 1.3486000000000054e-05, 1.4041999999998833e-05, 1.588900000000157e-05, 1.1333999999998262e-05, 4.360999999997867e-06, 8.652999999997357e-06, 1.3499999999999623e-05, 5.528000000001171e-06, 9.750000000002812e-06, 1.5028000000000263e-05, 1.7249999999999904e-05, 8.597000000002547e-06, 8.459000000002326e-06]</msg>
<status status="PASS" starttime="20201030 15:54:32.908" endtime="20201030 15:54:32.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.903" endtime="20201030 15:54:32.910"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:32.914" endtime="20201030 15:54:32.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.912" endtime="20201030 15:54:32.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.911" endtime="20201030 15:54:32.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.567" endtime="20201030 15:54:32.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.567" endtime="20201030 15:54:32.934"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.943" endtime="20201030 15:54:32.953"></status>
</kw>
<msg timestamp="20201030 15:54:32.954" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:32.941" endtime="20201030 15:54:32.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.957" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:32.955" endtime="20201030 15:54:32.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.958" endtime="20201030 15:54:32.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.938" endtime="20201030 15:54:32.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.937" endtime="20201030 15:54:32.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.967" endtime="20201030 15:54:33.235"></status>
</kw>
<msg timestamp="20201030 15:54:33.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019648292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019648833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:32.965" endtime="20201030 15:54:33.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019648292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019648833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:33.238" endtime="20201030 15:54:33.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.243" endtime="20201030 15:54:33.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.962" endtime="20201030 15:54:33.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.961" endtime="20201030 15:54:33.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:33.249" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 1.0790999999999579e-05}, {'diff': 1.766699999999899e-05}, {'diff': 8.374999999997967e-06}, {'diff': 1.1416999999999677e-05}, {'diff': 1.3901999999999665e-05}...</msg>
<status status="PASS" starttime="20201030 15:54:33.247" endtime="20201030 15:54:33.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:33.252" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 1.0790999999999579e-05, 1.766699999999899e-05, 8.374999999997967e-06, 1.1416999999999677e-05, 1.3901999999999665e-05, 6.7779999999989515e-06, 9.346999999999828e-06, 1....</msg>
<status status="PASS" starttime="20201030 15:54:33.250" endtime="20201030 15:54:33.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.257" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:33.256" endtime="20201030 15:54:33.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.259" level="INFO">VALUE: [5.409999999997361e-07, 1.0790999999999579e-05, 1.766699999999899e-05, 8.374999999997967e-06, 1.1416999999999677e-05, 1.3901999999999665e-05, 6.7779999999989515e-06, 9.346999999999828e-06, 1.7929999999999335e-05, 4.347000000001766e-06, 4.903000000000546e-06, 6.763999999999382e-06, 1.2417000000000677e-05, 7.194999999998036e-06, 9.320000000000161e-06, 1.563900000000132e-05, 7.847999999997801e-06, 7.721999999998203e-06, 1.0556000000001842e-05, 1.0430999999998247e-05, 6.374999999999437e-06, 1.0152000000002853e-05, 7.985999999998022e-06, 8.124999999997717e-06, 1.693100000000128e-05]</msg>
<status status="PASS" starttime="20201030 15:54:33.258" endtime="20201030 15:54:33.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.253" endtime="20201030 15:54:33.260"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:33.264" endtime="20201030 15:54:33.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.262" endtime="20201030 15:54:33.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.261" endtime="20201030 15:54:33.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.935" endtime="20201030 15:54:33.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.935" endtime="20201030 15:54:33.285"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.293" endtime="20201030 15:54:33.304"></status>
</kw>
<msg timestamp="20201030 15:54:33.304" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.291" endtime="20201030 15:54:33.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.307" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.305" endtime="20201030 15:54:33.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.308" endtime="20201030 15:54:33.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.288" endtime="20201030 15:54:33.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.287" endtime="20201030 15:54:33.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.317" endtime="20201030 15:54:33.586"></status>
</kw>
<msg timestamp="20201030 15:54:33.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019605083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019605625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:33.315" endtime="20201030 15:54:33.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019605083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019605625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:33.593" endtime="20201030 15:54:33.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.602" endtime="20201030 15:54:33.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.313" endtime="20201030 15:54:33.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.311" endtime="20201030 15:54:33.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:33.613" level="INFO">${RESULT} = [{'diff': 5.420000000026792e-07}, {'diff': 5.457999999999852e-06}, {'diff': 1.7429999999998835e-05}, {'diff': 1.0916999999999177e-05}, {'diff': 6.097000000000047e-06}, {'diff': 1.0943999999998844e-05}...</msg>
<status status="PASS" starttime="20201030 15:54:33.609" endtime="20201030 15:54:33.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:33.619" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.420000000026792e-07, 5.457999999999852e-06, 1.7429999999998835e-05, 1.0916999999999177e-05, 6.097000000000047e-06, 1.0943999999998844e-05, 1.0402999999999107e-05, 1.1875000000001468e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:54:33.615" endtime="20201030 15:54:33.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.628" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:33.626" endtime="20201030 15:54:33.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.632" level="INFO">VALUE: [5.420000000026792e-07, 5.457999999999852e-06, 1.7429999999998835e-05, 1.0916999999999177e-05, 6.097000000000047e-06, 1.0943999999998844e-05, 1.0402999999999107e-05, 1.1875000000001468e-05, 1.2416000000001204e-05, 5.722000000003141e-06, 1.0013999999999162e-05, 8.249999999997842e-06, 9.346999999999828e-06, 1.3902999999999138e-05, 1.3486000000000054e-05, 1.3083000000000539e-05, 1.858300000000257e-05, 7.070000000001381e-06, 1.1750000000001343e-05, 9.735999999999773e-06, 1.0415999999999204e-05, 5.971999999999922e-06, 9.999999999999593e-06, 9.860999999999898e-06, 1.3486000000000054e-05]</msg>
<status status="PASS" starttime="20201030 15:54:33.630" endtime="20201030 15:54:33.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.622" endtime="20201030 15:54:33.634"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:33.640" endtime="20201030 15:54:33.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.637" endtime="20201030 15:54:33.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.635" endtime="20201030 15:54:33.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.285" endtime="20201030 15:54:33.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.285" endtime="20201030 15:54:33.664"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.676" endtime="20201030 15:54:33.686"></status>
</kw>
<msg timestamp="20201030 15:54:33.686" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.673" endtime="20201030 15:54:33.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.689" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.688" endtime="20201030 15:54:33.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.690" endtime="20201030 15:54:33.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.669" endtime="20201030 15:54:33.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.667" endtime="20201030 15:54:33.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.700" endtime="20201030 15:54:33.968"></status>
</kw>
<msg timestamp="20201030 15:54:33.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025613972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025614514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:33.699" endtime="20201030 15:54:33.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025613972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025614514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:33.971" endtime="20201030 15:54:33.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.976" endtime="20201030 15:54:33.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.696" endtime="20201030 15:54:33.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.694" endtime="20201030 15:54:33.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:33.982" level="INFO">${RESULT} = [{'diff': 5.420000000026792e-07}, {'diff': 8.153000000000327e-06}, {'diff': 4.513999999997131e-06}, {'diff': 1.5305999999999653e-05}, {'diff': 1.3013999999998693e-05}, {'diff': 9.999999999999593e-06},...</msg>
<status status="PASS" starttime="20201030 15:54:33.979" endtime="20201030 15:54:33.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:33.985" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.420000000026792e-07, 8.153000000000327e-06, 4.513999999997131e-06, 1.5305999999999653e-05, 1.3013999999998693e-05, 9.999999999999593e-06, 1.1207999999998663e-05, 5.319999999999631e-06, 1.1...</msg>
<status status="PASS" starttime="20201030 15:54:33.983" endtime="20201030 15:54:33.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.990" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:33.989" endtime="20201030 15:54:33.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.992" level="INFO">VALUE: [5.420000000026792e-07, 8.153000000000327e-06, 4.513999999997131e-06, 1.5305999999999653e-05, 1.3013999999998693e-05, 9.999999999999593e-06, 1.1207999999998663e-05, 5.319999999999631e-06, 1.1611000000001648e-05, 1.3097000000000109e-05, 1.6569000000001e-05, 9.597000000000078e-06, 1.616700000000096e-05, 1.2292000000000552e-05, 1.630500000000118e-05, 1.1347999999997832e-05, 1.2221999999999233e-05, 1.2180000000000524e-05, 6.917000000002116e-06, 5.820000000000131e-06, 1.5763999999997974e-05, 1.5098000000001582e-05, 1.430499999999918e-05, 1.779099999999964e-05, 1.7665999999999515e-05]</msg>
<status status="PASS" starttime="20201030 15:54:33.991" endtime="20201030 15:54:33.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.986" endtime="20201030 15:54:33.993"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:33.997" endtime="20201030 15:54:34.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.995" endtime="20201030 15:54:34.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.994" endtime="20201030 15:54:34.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.666" endtime="20201030 15:54:34.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.665" endtime="20201030 15:54:34.018"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.028" endtime="20201030 15:54:34.038"></status>
</kw>
<msg timestamp="20201030 15:54:34.039" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:34.024" endtime="20201030 15:54:34.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.041" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:34.040" endtime="20201030 15:54:34.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.043" endtime="20201030 15:54:34.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.022" endtime="20201030 15:54:34.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.020" endtime="20201030 15:54:34.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.052" endtime="20201030 15:54:34.318"></status>
</kw>
<msg timestamp="20201030 15:54:34.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020822931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020823472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:34.050" endtime="20201030 15:54:34.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020822931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020823472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:34.321" endtime="20201030 15:54:34.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.327" endtime="20201030 15:54:34.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.048" endtime="20201030 15:54:34.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.046" endtime="20201030 15:54:34.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:34.333" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 6.806000000001561e-06}, {'diff': 1.5221999999998764e-05}, {'diff': 1.2541000000001329e-05}, {'diff': 1.0541999999998802e-05}, {'diff': 1.5347999999998363e-05...</msg>
<status status="PASS" starttime="20201030 15:54:34.330" endtime="20201030 15:54:34.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:34.336" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 6.806000000001561e-06, 1.5221999999998764e-05, 1.2541000000001329e-05, 1.0541999999998802e-05, 1.5347999999998363e-05, 1.1805999999999622e-05, 4.222000000001641e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:54:34.334" endtime="20201030 15:54:34.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.341" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:34.339" endtime="20201030 15:54:34.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.343" level="INFO">VALUE: [5.409999999997361e-07, 6.806000000001561e-06, 1.5221999999998764e-05, 1.2541000000001329e-05, 1.0541999999998802e-05, 1.5347999999998363e-05, 1.1805999999999622e-05, 4.222000000001641e-06, 1.5777999999997544e-05, 5.444999999999756e-06, 1.4194999999998098e-05, 6.374999999999437e-06, 7.056000000001811e-06, 7.445000000001756e-06, 1.1764000000000913e-05, 1.2681000000000497e-05, 8.625000000001687e-06, 7.333000000001727e-06, 8.486000000001992e-06, 1.4971999999998514e-05, 8.666999999996927e-06, 1.0263999999999412e-05, 1.2014000000001163e-05, 9.041999999997302e-06, 1.554100000000086e-05]</msg>
<status status="PASS" starttime="20201030 15:54:34.342" endtime="20201030 15:54:34.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.337" endtime="20201030 15:54:34.344"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:34.347" endtime="20201030 15:54:34.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.346" endtime="20201030 15:54:34.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.345" endtime="20201030 15:54:34.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.019" endtime="20201030 15:54:34.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.018" endtime="20201030 15:54:34.368"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.377" endtime="20201030 15:54:34.387"></status>
</kw>
<msg timestamp="20201030 15:54:34.388" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:34.374" endtime="20201030 15:54:34.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.390" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:34.389" endtime="20201030 15:54:34.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.391" endtime="20201030 15:54:34.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.372" endtime="20201030 15:54:34.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.370" endtime="20201030 15:54:34.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.401" endtime="20201030 15:54:34.670"></status>
</kw>
<msg timestamp="20201030 15:54:34.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019279972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019280514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:34.399" endtime="20201030 15:54:34.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019279972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019280514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:34.672" endtime="20201030 15:54:34.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.678" endtime="20201030 15:54:34.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.397" endtime="20201030 15:54:34.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.395" endtime="20201030 15:54:34.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:34.684" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 1.0541999999998802e-05}, {'diff': 1.1222000000001703e-05}, {'diff': 1.4971999999998514e-05}, {'diff': 1.3666000000002454e-05}, {'diff': 1.2805999999997153e-0...</msg>
<status status="PASS" starttime="20201030 15:54:34.682" endtime="20201030 15:54:34.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:34.688" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 1.0541999999998802e-05, 1.1222000000001703e-05, 1.4971999999998514e-05, 1.3666000000002454e-05, 1.2805999999997153e-05, 1.2931000000000747e-05, 1.3500000000003093e-05,...</msg>
<status status="PASS" starttime="20201030 15:54:34.685" endtime="20201030 15:54:34.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.692" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:34.691" endtime="20201030 15:54:34.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.695" level="INFO">VALUE: [5.419999999992098e-07, 1.0541999999998802e-05, 1.1222000000001703e-05, 1.4971999999998514e-05, 1.3666000000002454e-05, 1.2805999999997153e-05, 1.2931000000000747e-05, 1.3500000000003093e-05, 1.1334000000001732e-05, 1.4263999999999943e-05, 7.305999999998591e-06, 9.610999999999648e-06, 1.658300000000057e-05, 1.0138999999999287e-05, 1.4415999999999735e-05, 1.1569000000002938e-05, 8.931000000000217e-06, 1.3568999999998e-05, 1.3888999999999568e-05, 7.304999999999118e-06, 4.152999999999796e-06, 1.5597999999998613e-05, 1.4431000000002248e-05, 5.985999999999492e-06, 3.0419999999982406e-06]</msg>
<status status="PASS" starttime="20201030 15:54:34.694" endtime="20201030 15:54:34.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.689" endtime="20201030 15:54:34.696"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:34.700" endtime="20201030 15:54:34.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.698" endtime="20201030 15:54:34.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.697" endtime="20201030 15:54:34.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.369" endtime="20201030 15:54:34.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.368" endtime="20201030 15:54:34.720"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.729" endtime="20201030 15:54:34.739"></status>
</kw>
<msg timestamp="20201030 15:54:34.740" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:34.727" endtime="20201030 15:54:34.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.742" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:34.741" endtime="20201030 15:54:34.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.743" endtime="20201030 15:54:34.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.724" endtime="20201030 15:54:34.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.722" endtime="20201030 15:54:34.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.753" endtime="20201030 15:54:35.039"></status>
</kw>
<msg timestamp="20201030 15:54:35.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019828764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019829306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:34.751" endtime="20201030 15:54:35.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019828764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019829306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.042" endtime="20201030 15:54:35.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.047" endtime="20201030 15:54:35.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.748" endtime="20201030 15:54:35.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.747" endtime="20201030 15:54:35.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:35.053" level="INFO">${RESULT} = [{'diff': 5.420000000026792e-07}, {'diff': 1.5514000000001194e-05}, {'diff': 9.195000000000036e-06}, {'diff': 8.250000000001312e-06}, {'diff': 8.776999999998009e-06}, {'diff': 1.9264000000001474e-05},...</msg>
<status status="PASS" starttime="20201030 15:54:35.051" endtime="20201030 15:54:35.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:35.056" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.420000000026792e-07, 1.5514000000001194e-05, 9.195000000000036e-06, 8.250000000001312e-06, 8.776999999998009e-06, 1.9264000000001474e-05, 9.972000000000453e-06, 1.5638000000001845e-05, 1.0...</msg>
<status status="PASS" starttime="20201030 15:54:35.054" endtime="20201030 15:54:35.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.061" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:35.060" endtime="20201030 15:54:35.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.063" level="INFO">VALUE: [5.420000000026792e-07, 1.5514000000001194e-05, 9.195000000000036e-06, 8.250000000001312e-06, 8.776999999998009e-06, 1.9264000000001474e-05, 9.972000000000453e-06, 1.5638000000001845e-05, 1.0818999999998719e-05, 2.76400000000232e-06, 1.3222000000000234e-05, 7.443999999998813e-06, 1.3764000000002913e-05, 1.537499999999803e-05, 1.2417000000000677e-05, 4.208999999998075e-06, 1.2958999999999887e-05, 5.971999999999922e-06, 1.0763999999999913e-05, 1.0652999999999357e-05, 1.0681000000001967e-05, 8.639000000001257e-06, 8.125000000001187e-06, 1.0944000000002313e-05, 9.59800000000302e-06]</msg>
<status status="PASS" starttime="20201030 15:54:35.062" endtime="20201030 15:54:35.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.057" endtime="20201030 15:54:35.064"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:35.068" endtime="20201030 15:54:35.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.066" endtime="20201030 15:54:35.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.065" endtime="20201030 15:54:35.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.721" endtime="20201030 15:54:35.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.721" endtime="20201030 15:54:35.089"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.098" endtime="20201030 15:54:35.108"></status>
</kw>
<msg timestamp="20201030 15:54:35.108" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.095" endtime="20201030 15:54:35.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.111" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.110" endtime="20201030 15:54:35.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.112" endtime="20201030 15:54:35.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.093" endtime="20201030 15:54:35.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.091" endtime="20201030 15:54:35.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.121" endtime="20201030 15:54:35.390"></status>
</kw>
<msg timestamp="20201030 15:54:35.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019631722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019632264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.119" endtime="20201030 15:54:35.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019631722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019632264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.393" endtime="20201030 15:54:35.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.398" endtime="20201030 15:54:35.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.117" endtime="20201030 15:54:35.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.115" endtime="20201030 15:54:35.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:35.404" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 6.917000000002116e-06}, {'diff': 1.6042000000000833e-05}, {'diff': 1.2583000000000039e-05}, {'diff': 7.582999999998508e-06}, {'diff': 1.0555000000002368e-05}...</msg>
<status status="PASS" starttime="20201030 15:54:35.401" endtime="20201030 15:54:35.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:35.407" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 6.917000000002116e-06, 1.6042000000000833e-05, 1.2583000000000039e-05, 7.582999999998508e-06, 1.0555000000002368e-05, 1.3472000000000484e-05, 1.2958999999999887e-05, 8...</msg>
<status status="PASS" starttime="20201030 15:54:35.405" endtime="20201030 15:54:35.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.412" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:35.411" endtime="20201030 15:54:35.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.414" level="INFO">VALUE: [5.419999999992098e-07, 6.917000000002116e-06, 1.6042000000000833e-05, 1.2583000000000039e-05, 7.582999999998508e-06, 1.0555000000002368e-05, 1.3472000000000484e-05, 1.2958999999999887e-05, 8.389000000001007e-06, 8.792000000000522e-06, 6.639000000002726e-06, 1.5235999999998334e-05, 9.208000000000133e-06, 9.722000000000203e-06, 1.4709000000001637e-05, 1.1000000000000593e-05, 1.0667000000002397e-05, 9.763999999998912e-06, 6.9029999999990765e-06, 1.2820000000000192e-05, 1.1653000000000358e-05, 1.0027999999998732e-05, 6.638999999999257e-06, 1.4277999999999513e-05, 9.250000000002312e-06]</msg>
<status status="PASS" starttime="20201030 15:54:35.413" endtime="20201030 15:54:35.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.408" endtime="20201030 15:54:35.415"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:35.419" endtime="20201030 15:54:35.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.417" endtime="20201030 15:54:35.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.416" endtime="20201030 15:54:35.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.089" endtime="20201030 15:54:35.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.089" endtime="20201030 15:54:35.440"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.449" endtime="20201030 15:54:35.459"></status>
</kw>
<msg timestamp="20201030 15:54:35.459" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.446" endtime="20201030 15:54:35.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.462" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.460" endtime="20201030 15:54:35.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.463" endtime="20201030 15:54:35.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.444" endtime="20201030 15:54:35.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.442" endtime="20201030 15:54:35.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.472" endtime="20201030 15:54:35.752"></status>
</kw>
<msg timestamp="20201030 15:54:35.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019833083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019833625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.470" endtime="20201030 15:54:35.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019833083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019833625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.759" endtime="20201030 15:54:35.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.771" endtime="20201030 15:54:35.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.468" endtime="20201030 15:54:35.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.466" endtime="20201030 15:54:35.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:35.780" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 6.806000000001561e-06}, {'diff': 1.6055999999996934e-05}, {'diff': 6.888999999999507e-06}, {'diff': 1.0541999999998802e-05}, {'diff': 6.249999999999312e-06},...</msg>
<status status="PASS" starttime="20201030 15:54:35.777" endtime="20201030 15:54:35.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:35.783" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 6.806000000001561e-06, 1.6055999999996934e-05, 6.888999999999507e-06, 1.0541999999998802e-05, 6.249999999999312e-06, 1.1084000000001482e-05, 9.860999999999898e-06, 1.2...</msg>
<status status="PASS" starttime="20201030 15:54:35.781" endtime="20201030 15:54:35.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.787" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:35.786" endtime="20201030 15:54:35.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.790" level="INFO">VALUE: [5.419999999992098e-07, 6.806000000001561e-06, 1.6055999999996934e-05, 6.888999999999507e-06, 1.0541999999998802e-05, 6.249999999999312e-06, 1.1084000000001482e-05, 9.860999999999898e-06, 1.2556000000000372e-05, 8.513999999997662e-06, 1.4957999999998944e-05, 1.3417000000001678e-05, 1.0263999999999412e-05, 2.749999999999281e-06, 9.221999999999703e-06, 1.5931000000000278e-05, 1.1361000000001398e-05, 1.2417000000000677e-05, 1.6042000000000833e-05, 1.1208000000002133e-05, 7.569999999998411e-06, 1.3624999999999748e-05, 1.0556000000001842e-05, 1.534699999999889e-05, 1.0417000000002147e-05]</msg>
<status status="PASS" starttime="20201030 15:54:35.789" endtime="20201030 15:54:35.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.784" endtime="20201030 15:54:35.791"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:35.795" endtime="20201030 15:54:35.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.793" endtime="20201030 15:54:35.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.792" endtime="20201030 15:54:35.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.440" endtime="20201030 15:54:35.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.440" endtime="20201030 15:54:35.815"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.824" endtime="20201030 15:54:35.835"></status>
</kw>
<msg timestamp="20201030 15:54:35.835" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.822" endtime="20201030 15:54:35.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.838" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.836" endtime="20201030 15:54:35.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.839" endtime="20201030 15:54:35.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.819" endtime="20201030 15:54:35.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.818" endtime="20201030 15:54:35.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.848" endtime="20201030 15:54:36.117"></status>
</kw>
<msg timestamp="20201030 15:54:36.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019632431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019632972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.847" endtime="20201030 15:54:36.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019632431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019632972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.120" endtime="20201030 15:54:36.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.126" endtime="20201030 15:54:36.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.844" endtime="20201030 15:54:36.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.842" endtime="20201030 15:54:36.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:36.133" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 1.7263999999999474e-05}, {'diff': 9.735999999999773e-06}, {'diff': 1.658300000000057e-05}, {'diff': 1.1750000000001343e-05}, {'diff': 1.508299999999907e-05},...</msg>
<status status="PASS" starttime="20201030 15:54:36.130" endtime="20201030 15:54:36.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:36.138" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 1.7263999999999474e-05, 9.735999999999773e-06, 1.658300000000057e-05, 1.1750000000001343e-05, 1.508299999999907e-05, 1.1721999999998733e-05, 1.1889000000001038e-05, 3....</msg>
<status status="PASS" starttime="20201030 15:54:36.135" endtime="20201030 15:54:36.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.143" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:36.141" endtime="20201030 15:54:36.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.147" level="INFO">VALUE: [5.409999999997361e-07, 1.7263999999999474e-05, 9.735999999999773e-06, 1.658300000000057e-05, 1.1750000000001343e-05, 1.508299999999907e-05, 1.1721999999998733e-05, 1.1889000000001038e-05, 3.5690000000018762e-06, 1.5750000000001874e-05, 1.0902000000000134e-05, 4.361000000001336e-06, 1.2583999999999512e-05, 1.6722999999999738e-05, 1.2708999999999637e-05, 1.3889000000003038e-05, 6.222000000000172e-06, 1.4569999999998473e-05, 5.431000000000186e-06, 9.860999999999898e-06, 7.0419999999987715e-06, 1.2819000000000719e-05, 1.3222000000000234e-05, 1.2695000000000067e-05, 1.591700000000071e-05]</msg>
<status status="PASS" starttime="20201030 15:54:36.145" endtime="20201030 15:54:36.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.138" endtime="20201030 15:54:36.147"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:36.151" endtime="20201030 15:54:36.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.150" endtime="20201030 15:54:36.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.148" endtime="20201030 15:54:36.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.816" endtime="20201030 15:54:36.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.816" endtime="20201030 15:54:36.172"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.181" endtime="20201030 15:54:36.192"></status>
</kw>
<msg timestamp="20201030 15:54:36.192" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.178" endtime="20201030 15:54:36.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.195" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.194" endtime="20201030 15:54:36.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.196" endtime="20201030 15:54:36.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.176" endtime="20201030 15:54:36.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.174" endtime="20201030 15:54:36.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.205" endtime="20201030 15:54:36.474"></status>
</kw>
<msg timestamp="20201030 15:54:36.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019431167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019431708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.204" endtime="20201030 15:54:36.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019431167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019431708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.476" endtime="20201030 15:54:36.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.482" endtime="20201030 15:54:36.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.201" endtime="20201030 15:54:36.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.199" endtime="20201030 15:54:36.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:36.488" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 8.528000000000702e-06}, {'diff': 5.153000000000796e-06}, {'diff': 1.2153000000000858e-05}, {'diff': 1.3347000000000359e-05}, {'diff': 4.179999999999462e-06},...</msg>
<status status="PASS" starttime="20201030 15:54:36.485" endtime="20201030 15:54:36.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:36.491" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 8.528000000000702e-06, 5.153000000000796e-06, 1.2153000000000858e-05, 1.3347000000000359e-05, 4.179999999999462e-06, 1.2415999999997734e-05, 1.6306000000000653e-05, 1....</msg>
<status status="PASS" starttime="20201030 15:54:36.489" endtime="20201030 15:54:36.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.496" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:36.494" endtime="20201030 15:54:36.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.498" level="INFO">VALUE: [5.409999999997361e-07, 8.528000000000702e-06, 5.153000000000796e-06, 1.2153000000000858e-05, 1.3347000000000359e-05, 4.179999999999462e-06, 1.2415999999997734e-05, 1.6306000000000653e-05, 1.483299999999882e-05, 1.0541999999998802e-05, 1.4666999999999458e-05, 6.110999999999617e-06, 1.0527999999999232e-05, 7.582999999998508e-06, 1.2014000000001163e-05, 6.374999999999437e-06, 9.610999999999648e-06, 1.1443999999999344e-05, 1.1832999999999289e-05, 1.1568999999999469e-05, 1.5028000000000263e-05, 1.4693999999999124e-05, 1.1485999999998053e-05, 1.2959000000003357e-05, 1.5514000000001194e-05]</msg>
<status status="PASS" starttime="20201030 15:54:36.497" endtime="20201030 15:54:36.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.492" endtime="20201030 15:54:36.499"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:36.503" endtime="20201030 15:54:36.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.501" endtime="20201030 15:54:36.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.500" endtime="20201030 15:54:36.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.173" endtime="20201030 15:54:36.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.172" endtime="20201030 15:54:36.523"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.532" endtime="20201030 15:54:36.542"></status>
</kw>
<msg timestamp="20201030 15:54:36.542" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.530" endtime="20201030 15:54:36.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.545" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.543" endtime="20201030 15:54:36.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.546" endtime="20201030 15:54:36.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.527" endtime="20201030 15:54:36.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.526" endtime="20201030 15:54:36.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.555" endtime="20201030 15:54:36.823"></status>
</kw>
<msg timestamp="20201030 15:54:36.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019331514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019332056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.553" endtime="20201030 15:54:36.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019331514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019332056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.826" endtime="20201030 15:54:36.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.831" endtime="20201030 15:54:36.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.551" endtime="20201030 15:54:36.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.549" endtime="20201030 15:54:36.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:36.837" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 8.665999999997454e-06}, {'diff': 1.1083999999998012e-05}, {'diff': 8.374999999997967e-06}, {'diff': 1.2555000000000899e-05}, {'diff': 1.4028000000002733e-05}...</msg>
<status status="PASS" starttime="20201030 15:54:36.835" endtime="20201030 15:54:36.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:36.840" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 8.665999999997454e-06, 1.1083999999998012e-05, 8.374999999997967e-06, 1.2555000000000899e-05, 1.4028000000002733e-05, 1.0263999999999412e-05, 6.9719999999974525e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:54:36.838" endtime="20201030 15:54:36.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.845" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:36.843" endtime="20201030 15:54:36.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.847" level="INFO">VALUE: [5.419999999992098e-07, 8.665999999997454e-06, 1.1083999999998012e-05, 8.374999999997967e-06, 1.2555000000000899e-05, 1.4028000000002733e-05, 1.0263999999999412e-05, 6.9719999999974525e-06, 1.3902000000003134e-05, 1.6972999999999988e-05, 1.0556000000001842e-05, 1.2416999999997208e-05, 9.749999999999343e-06, 8.791999999997052e-06, 1.6180000000001055e-05, 1.486099999999796e-05, 1.584699999999939e-05, 5.846999999999797e-06, 6.9029999999990765e-06, 6.888999999999507e-06, 1.4431000000002248e-05, 1.484699999999839e-05, 7.165999999999423e-06, 1.3903000000002608e-05, 8.527999999997232e-06]</msg>
<status status="PASS" starttime="20201030 15:54:36.846" endtime="20201030 15:54:36.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.841" endtime="20201030 15:54:36.848"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:36.852" endtime="20201030 15:54:36.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.850" endtime="20201030 15:54:36.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.849" endtime="20201030 15:54:36.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.524" endtime="20201030 15:54:36.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.524" endtime="20201030 15:54:36.873"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.882" endtime="20201030 15:54:36.891"></status>
</kw>
<msg timestamp="20201030 15:54:36.892" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.879" endtime="20201030 15:54:36.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.895" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.893" endtime="20201030 15:54:36.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.896" endtime="20201030 15:54:36.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.877" endtime="20201030 15:54:36.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.875" endtime="20201030 15:54:36.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.905" endtime="20201030 15:54:37.174"></status>
</kw>
<msg timestamp="20201030 15:54:37.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019497917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019498458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.903" endtime="20201030 15:54:37.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019497917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019498458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:37.177" endtime="20201030 15:54:37.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.182" endtime="20201030 15:54:37.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.901" endtime="20201030 15:54:37.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.899" endtime="20201030 15:54:37.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:37.188" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 1.4152999999999388e-05}, {'diff': 1.402699999999979e-05}, {'diff': 1.4971999999998514e-05}, {'diff': 1.1068999999998969e-05}, {'diff': 7.569000000002407e-06}...</msg>
<status status="PASS" starttime="20201030 15:54:37.186" endtime="20201030 15:54:37.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:37.191" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 1.4152999999999388e-05, 1.402699999999979e-05, 1.4971999999998514e-05, 1.1068999999998969e-05, 7.569000000002407e-06, 7.165999999999423e-06, 1.254099999999786e-05, 1.2...</msg>
<status status="PASS" starttime="20201030 15:54:37.189" endtime="20201030 15:54:37.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.196" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:37.195" endtime="20201030 15:54:37.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.198" level="INFO">VALUE: [5.409999999997361e-07, 1.4152999999999388e-05, 1.402699999999979e-05, 1.4971999999998514e-05, 1.1068999999998969e-05, 7.569000000002407e-06, 7.165999999999423e-06, 1.254099999999786e-05, 1.2444999999999817e-05, 1.588900000000157e-05, 1.536099999999846e-05, 6.638999999999257e-06, 1.2569999999999942e-05, 1.4333999999997793e-05, 1.1055999999998872e-05, 1.1610999999998178e-05, 1.0943999999998844e-05, 1.2721999999999734e-05, 1.0291999999998552e-05, 9.999999999999593e-06, 8.805000000000618e-06, 8.000000000001062e-06, 7.791000000000048e-06, 1.0459000000000857e-05, 7.151999999999853e-06]</msg>
<status status="PASS" starttime="20201030 15:54:37.197" endtime="20201030 15:54:37.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.192" endtime="20201030 15:54:37.199"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:37.203" endtime="20201030 15:54:37.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.201" endtime="20201030 15:54:37.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.200" endtime="20201030 15:54:37.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.873" endtime="20201030 15:54:37.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.873" endtime="20201030 15:54:37.225"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.235" endtime="20201030 15:54:37.246"></status>
</kw>
<msg timestamp="20201030 15:54:37.247" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:37.232" endtime="20201030 15:54:37.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.249" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:37.248" endtime="20201030 15:54:37.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.251" endtime="20201030 15:54:37.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.229" endtime="20201030 15:54:37.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.227" endtime="20201030 15:54:37.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.262" endtime="20201030 15:54:37.529"></status>
</kw>
<msg timestamp="20201030 15:54:37.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022633778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022634319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:37.260" endtime="20201030 15:54:37.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022633778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022634319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:37.531" endtime="20201030 15:54:37.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.537" endtime="20201030 15:54:37.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.258" endtime="20201030 15:54:37.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.255" endtime="20201030 15:54:37.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:37.543" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 7.736000000001242e-06}, {'diff': 1.4972000000001984e-05}, {'diff': 1.5222999999998238e-05}, {'diff': 7.929999999999743e-06}, {'diff': 8.389000000001007e-06},...</msg>
<status status="PASS" starttime="20201030 15:54:37.540" endtime="20201030 15:54:37.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:37.546" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 7.736000000001242e-06, 1.4972000000001984e-05, 1.5222999999998238e-05, 7.929999999999743e-06, 8.389000000001007e-06, 1.4708000000002164e-05, 1.3083000000000539e-05, 1....</msg>
<status status="PASS" starttime="20201030 15:54:37.544" endtime="20201030 15:54:37.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.550" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:37.549" endtime="20201030 15:54:37.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.553" level="INFO">VALUE: [5.409999999997361e-07, 7.736000000001242e-06, 1.4972000000001984e-05, 1.5222999999998238e-05, 7.929999999999743e-06, 8.389000000001007e-06, 1.4708000000002164e-05, 1.3083000000000539e-05, 1.0403000000002577e-05, 1.3027999999998263e-05, 1.3235999999999803e-05, 7.999999999997592e-06, 1.1319999999998692e-05, 4.625000000001156e-06, 1.0374999999999968e-05, 5.292000000000491e-06, 9.597000000000078e-06, 7.860999999997897e-06, 8.139000000000757e-06, 9.860999999999898e-06, 1.630500000000118e-05, 1.1610999999998178e-05, 1.1193999999999094e-05, 7.569999999998411e-06, 8.374999999997967e-06]</msg>
<status status="PASS" starttime="20201030 15:54:37.551" endtime="20201030 15:54:37.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.547" endtime="20201030 15:54:37.554"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:37.558" endtime="20201030 15:54:37.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.556" endtime="20201030 15:54:37.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.555" endtime="20201030 15:54:37.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.226" endtime="20201030 15:54:37.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.225" endtime="20201030 15:54:37.578"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.587" endtime="20201030 15:54:37.598"></status>
</kw>
<msg timestamp="20201030 15:54:37.598" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:37.585" endtime="20201030 15:54:37.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.601" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:37.599" endtime="20201030 15:54:37.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.602" endtime="20201030 15:54:37.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.582" endtime="20201030 15:54:37.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.580" endtime="20201030 15:54:37.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.611" endtime="20201030 15:54:37.879"></status>
</kw>
<msg timestamp="20201030 15:54:37.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019427292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019427833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:37.609" endtime="20201030 15:54:37.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019427292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019427833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:37.882" endtime="20201030 15:54:37.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.887" endtime="20201030 15:54:37.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.607" endtime="20201030 15:54:37.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.605" endtime="20201030 15:54:37.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:37.893" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 1.4027999999999263e-05}, {'diff': 1.4292000000002553e-05}, {'diff': 1.0805000000002618e-05}, {'diff': 8.403000000000577e-06}, {'diff': 6.637999999999783e-06}...</msg>
<status status="PASS" starttime="20201030 15:54:37.891" endtime="20201030 15:54:37.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:37.897" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 1.4027999999999263e-05, 1.4292000000002553e-05, 1.0805000000002618e-05, 8.403000000000577e-06, 6.637999999999783e-06, 1.1485999999998053e-05, 1.3624999999999748e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:54:37.894" endtime="20201030 15:54:37.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.901" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:37.900" endtime="20201030 15:54:37.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.903" level="INFO">VALUE: [5.409999999997361e-07, 1.4027999999999263e-05, 1.4292000000002553e-05, 1.0805000000002618e-05, 8.403000000000577e-06, 6.637999999999783e-06, 1.1485999999998053e-05, 1.3624999999999748e-05, 1.8528000000000294e-05, 3.5690000000018762e-06, 1.0152000000002853e-05, 6.235999999999742e-06, 1.738900000000307e-05, 1.1209000000001607e-05, 1.4056000000001873e-05, 4.7499999999978115e-06, 5.180999999999936e-06, 1.1068999999998969e-05, 1.1472000000001953e-05, 1.5999999999998654e-05, 6.916000000002642e-06, 1.1139000000000288e-05, 1.4986000000001554e-05, 1.2958000000000414e-05, 1.3486000000000054e-05]</msg>
<status status="PASS" starttime="20201030 15:54:37.902" endtime="20201030 15:54:37.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.898" endtime="20201030 15:54:37.908"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:37.912" endtime="20201030 15:54:37.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.910" endtime="20201030 15:54:37.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.909" endtime="20201030 15:54:37.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.579" endtime="20201030 15:54:37.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.579" endtime="20201030 15:54:37.933"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.942" endtime="20201030 15:54:37.952"></status>
</kw>
<msg timestamp="20201030 15:54:37.953" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:37.939" endtime="20201030 15:54:37.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.955" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:37.954" endtime="20201030 15:54:37.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.956" endtime="20201030 15:54:37.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.937" endtime="20201030 15:54:37.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.935" endtime="20201030 15:54:37.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.965" endtime="20201030 15:54:38.235"></status>
</kw>
<msg timestamp="20201030 15:54:38.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019482472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019483014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:37.964" endtime="20201030 15:54:38.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019482472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019483014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:38.238" endtime="20201030 15:54:38.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.243" endtime="20201030 15:54:38.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.961" endtime="20201030 15:54:38.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.960" endtime="20201030 15:54:38.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:38.249" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 9.818999999997718e-06}, {'diff': 1.0806000000002092e-05}, {'diff': 1.2153000000000858e-05}, {'diff': 1.2584000000002982e-05}, {'diff': 1.0402999999999107e-05...</msg>
<status status="PASS" starttime="20201030 15:54:38.247" endtime="20201030 15:54:38.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:38.252" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 9.818999999997718e-06, 1.0806000000002092e-05, 1.2153000000000858e-05, 1.2584000000002982e-05, 1.0402999999999107e-05, 1.2694000000000594e-05, 8.389000000001007e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:54:38.250" endtime="20201030 15:54:38.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.257" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:38.256" endtime="20201030 15:54:38.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.259" level="INFO">VALUE: [5.419999999992098e-07, 9.818999999997718e-06, 1.0806000000002092e-05, 1.2153000000000858e-05, 1.2584000000002982e-05, 1.0402999999999107e-05, 1.2694000000000594e-05, 8.389000000001007e-06, 1.1209000000001607e-05, 1.0917000000002647e-05, 1.4333999999997793e-05, 9.458000000000383e-06, 1.0278000000002452e-05, 1.1069999999998442e-05, 1.5777999999997544e-05, 1.2165999999997484e-05, 1.1124999999997248e-05, 1.7763999999999974e-05, 5.708000000000102e-06, 1.454099999999986e-05, 1.0416999999998677e-05, 1.1014000000000163e-05, 1.3124999999999248e-05, 9.888999999999037e-06, 7.583000000001977e-06]</msg>
<status status="PASS" starttime="20201030 15:54:38.258" endtime="20201030 15:54:38.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.253" endtime="20201030 15:54:38.260"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:38.264" endtime="20201030 15:54:38.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.263" endtime="20201030 15:54:38.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.261" endtime="20201030 15:54:38.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.934" endtime="20201030 15:54:38.285"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.933" endtime="20201030 15:54:38.285"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.295" endtime="20201030 15:54:38.306"></status>
</kw>
<msg timestamp="20201030 15:54:38.307" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.291" endtime="20201030 15:54:38.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.309" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.308" endtime="20201030 15:54:38.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.310" endtime="20201030 15:54:38.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.289" endtime="20201030 15:54:38.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.287" endtime="20201030 15:54:38.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.319" endtime="20201030 15:54:38.588"></status>
</kw>
<msg timestamp="20201030 15:54:38.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021434208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02143475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:38.318" endtime="20201030 15:54:38.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021434208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02143475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:38.591" endtime="20201030 15:54:38.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.597" endtime="20201030 15:54:38.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.315" endtime="20201030 15:54:38.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.313" endtime="20201030 15:54:38.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:38.603" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 1.1735999999998303e-05}, {'diff': 1.5249999999997904e-05}, {'diff': 1.0262999999999939e-05}, {'diff': 9.597999999999551e-06}, {'diff': 1.3166999999997958e-05...</msg>
<status status="PASS" starttime="20201030 15:54:38.601" endtime="20201030 15:54:38.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:38.607" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 1.1735999999998303e-05, 1.5249999999997904e-05, 1.0262999999999939e-05, 9.597999999999551e-06, 1.3166999999997958e-05, 1.6056000000000403e-05, 1.765299999999942e-05, 5...</msg>
<status status="PASS" starttime="20201030 15:54:38.605" endtime="20201030 15:54:38.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.611" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:38.610" endtime="20201030 15:54:38.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.614" level="INFO">VALUE: [5.419999999992098e-07, 1.1735999999998303e-05, 1.5249999999997904e-05, 1.0262999999999939e-05, 9.597999999999551e-06, 1.3166999999997958e-05, 1.6056000000000403e-05, 1.765299999999942e-05, 5.569000000000407e-06, 1.1610999999998178e-05, 1.5528000000000763e-05, 1.1486000000001523e-05, 3.194000000001501e-06, 9.763999999998912e-06, 1.4320000000001692e-05, 7.721999999998203e-06, 1.1874999999997998e-05, 1.2499999999998623e-05, 1.2014000000001163e-05, 1.2042000000000302e-05, 5.708000000000102e-06, 1.2555000000000899e-05, 6.374999999999437e-06, 5.860999999999367e-06, 1.0693999999998594e-05]</msg>
<status status="PASS" starttime="20201030 15:54:38.612" endtime="20201030 15:54:38.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.608" endtime="20201030 15:54:38.615"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:38.623" endtime="20201030 15:54:38.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.620" endtime="20201030 15:54:38.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.616" endtime="20201030 15:54:38.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.286" endtime="20201030 15:54:38.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.285" endtime="20201030 15:54:38.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.488" endtime="20201030 15:54:38.648"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:31.416" endtime="20201030 15:54:38.650" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:38.664" endtime="20201030 15:54:38.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.661" endtime="20201030 15:54:38.688"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.718" endtime="20201030 15:54:38.731"></status>
</kw>
<msg timestamp="20201030 15:54:38.732" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.715" endtime="20201030 15:54:38.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.735" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.733" endtime="20201030 15:54:38.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.738" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:38.736" endtime="20201030 15:54:38.738"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:38.709" endtime="20201030 15:54:38.739"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:38.704" endtime="20201030 15:54:38.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.701" endtime="20201030 15:54:38.740"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:38.743" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:38.743" endtime="20201030 15:54:38.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.740" endtime="20201030 15:54:38.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.699" endtime="20201030 15:54:38.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.696" endtime="20201030 15:54:38.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.745" endtime="20201030 15:54:38.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.693" endtime="20201030 15:54:38.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.689" endtime="20201030 15:54:38.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.658" endtime="20201030 15:54:38.748"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.757" endtime="20201030 15:54:38.769"></status>
</kw>
<msg timestamp="20201030 15:54:38.769" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.755" endtime="20201030 15:54:38.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.772" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.770" endtime="20201030 15:54:38.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.773" endtime="20201030 15:54:38.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.753" endtime="20201030 15:54:38.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.751" endtime="20201030 15:54:38.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.784" endtime="20201030 15:54:39.068"></status>
</kw>
<msg timestamp="20201030 15:54:39.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.082656208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.082657361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:38.781" endtime="20201030 15:54:39.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.082656208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.082657361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:39.077" endtime="20201030 15:54:39.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.085" endtime="20201030 15:54:39.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.778" endtime="20201030 15:54:39.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.777" endtime="20201030 15:54:39.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:39.092" level="INFO">${RESULT} = [{'diff': 1.1530000000037344e-06}, {'diff': 8.890000000039144e-07}, {'diff': 8.750000000112834e-07}, {'diff': 8.890000000039144e-07}, {'diff': 8.889999999900366e-07}, {'diff': 8.750000000112834e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:54:39.089" endtime="20201030 15:54:39.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:39.096" level="INFO">${OVERHEAD} = {'diff': [1.1530000000037344e-06, 8.890000000039144e-07, 8.750000000112834e-07, 8.890000000039144e-07, 8.889999999900366e-07, 8.750000000112834e-07, 8.87999999990563e-07, 8.749999999974056e-07, 8.3399...</msg>
<status status="PASS" starttime="20201030 15:54:39.093" endtime="20201030 15:54:39.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.100" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:39.099" endtime="20201030 15:54:39.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.103" level="INFO">VALUE: [1.1530000000037344e-06, 8.890000000039144e-07, 8.750000000112834e-07, 8.890000000039144e-07, 8.889999999900366e-07, 8.750000000112834e-07, 8.87999999990563e-07, 8.749999999974056e-07, 8.339999999912306e-07, 8.749999999974056e-07, 8.610000000047746e-07, 9.300000000100894e-07, 8.749999999974056e-07, 8.889999999900366e-07, 8.890000000039144e-07, 8.610000000047746e-07, 8.890000000039144e-07, 8.749999999974056e-07, 8.890000000039144e-07, 8.749999999974056e-07, 8.610000000047746e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.060000000059686e-07, 8.890000000039144e-07, 8.749999999974056e-07, 8.199999999985996e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.610000000047746e-07, 8.889999999900366e-07, 8.890000000039144e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.610000000047746e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.749999999974056e-07, 9.450000000021941e-07, 8.750000000112834e-07, 8.749999999974056e-07, 9.440000000027204e-07, 8.749999999974056e-07, 8.609999999908968e-07, 8.749999999974056e-07, 8.750000000112834e-07, 8.610000000047746e-07, 8.749999999974056e-07, 8.749999999974056e-07]</msg>
<status status="PASS" starttime="20201030 15:54:39.101" endtime="20201030 15:54:39.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.097" endtime="20201030 15:54:39.104"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:39.107" endtime="20201030 15:54:39.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.106" endtime="20201030 15:54:39.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.105" endtime="20201030 15:54:39.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.750" endtime="20201030 15:54:39.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.749" endtime="20201030 15:54:39.128"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.137" endtime="20201030 15:54:39.147"></status>
</kw>
<msg timestamp="20201030 15:54:39.148" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.135" endtime="20201030 15:54:39.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.151" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.149" endtime="20201030 15:54:39.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.152" endtime="20201030 15:54:39.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.132" endtime="20201030 15:54:39.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.130" endtime="20201030 15:54:39.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.161" endtime="20201030 15:54:39.450"></status>
</kw>
<msg timestamp="20201030 15:54:39.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020190403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020191625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:39.159" endtime="20201030 15:54:39.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020190403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020191625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:39.460" endtime="20201030 15:54:39.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.478" endtime="20201030 15:54:39.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.157" endtime="20201030 15:54:39.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.155" endtime="20201030 15:54:39.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:39.491" level="INFO">${RESULT} = [{'diff': 1.2220000000021103e-06}, {'diff': 8.749999999974056e-07}, {'diff': 8.610000000013052e-07}, {'diff': 8.750000000008751e-07}, {'diff': 9.299999999996811e-07}, {'diff': 8.750000000008751e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:54:39.485" endtime="20201030 15:54:39.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:39.500" level="INFO">${OVERHEAD} = {'diff': [1.2220000000021103e-06, 8.749999999974056e-07, 8.610000000013052e-07, 8.750000000008751e-07, 9.299999999996811e-07, 8.750000000008751e-07, 8.750000000008751e-07, 9.309999999991547e-07, 8.609...</msg>
<status status="PASS" starttime="20201030 15:54:39.493" endtime="20201030 15:54:39.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.510" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:39.507" endtime="20201030 15:54:39.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.515" level="INFO">VALUE: [1.2220000000021103e-06, 8.749999999974056e-07, 8.610000000013052e-07, 8.750000000008751e-07, 9.299999999996811e-07, 8.750000000008751e-07, 8.750000000008751e-07, 9.309999999991547e-07, 8.609999999978357e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.480000000012089e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.750000000008751e-07, 9.43999999999251e-07, 8.89000000000445e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 9.59000000001764e-07, 8.049999999995561e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.610000000013052e-07, 8.880000000009713e-07, 8.89000000000445e-07, 8.329999999986959e-07, 8.750000000008751e-07]</msg>
<status status="PASS" starttime="20201030 15:54:39.512" endtime="20201030 15:54:39.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.502" endtime="20201030 15:54:39.517"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:39.525" endtime="20201030 15:54:39.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.522" endtime="20201030 15:54:39.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.519" endtime="20201030 15:54:39.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.129" endtime="20201030 15:54:39.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.128" endtime="20201030 15:54:39.546"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.554" endtime="20201030 15:54:39.566"></status>
</kw>
<msg timestamp="20201030 15:54:39.567" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.552" endtime="20201030 15:54:39.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.569" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.568" endtime="20201030 15:54:39.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.570" endtime="20201030 15:54:39.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.550" endtime="20201030 15:54:39.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.548" endtime="20201030 15:54:39.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.579" endtime="20201030 15:54:39.859"></status>
</kw>
<msg timestamp="20201030 15:54:39.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020007889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020009111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:39.578" endtime="20201030 15:54:39.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020007889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020009111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:39.863" endtime="20201030 15:54:39.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.871" endtime="20201030 15:54:39.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.575" endtime="20201030 15:54:39.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.573" endtime="20201030 15:54:39.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:39.878" level="INFO">${RESULT} = [{'diff': 1.2219999999986408e-06}, {'diff': 8.89000000000445e-07}, {'diff': 8.750000000008751e-07}, {'diff': 8.480000000012089e-07}, {'diff': 8.750000000008751e-07}, {'diff': 8.609999999978357e-07}, {...</msg>
<status status="PASS" starttime="20201030 15:54:39.875" endtime="20201030 15:54:39.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:39.883" level="INFO">${OVERHEAD} = {'diff': [1.2219999999986408e-06, 8.89000000000445e-07, 8.750000000008751e-07, 8.480000000012089e-07, 8.750000000008751e-07, 8.609999999978357e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.7500...</msg>
<status status="PASS" starttime="20201030 15:54:39.879" endtime="20201030 15:54:39.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.887" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:39.886" endtime="20201030 15:54:39.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.889" level="INFO">VALUE: [1.2219999999986408e-06, 8.89000000000445e-07, 8.750000000008751e-07, 8.480000000012089e-07, 8.750000000008751e-07, 8.609999999978357e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 9.309999999991547e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.89000000000445e-07, 9.160000000001112e-07, 8.750000000008751e-07, 9.020000000005413e-07, 8.749999999974056e-07, 8.609999999978357e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.609999999978357e-07, 8.470000000017353e-07, 8.750000000008751e-07, 8.18999999999126e-07, 8.750000000008751e-07, 9.030000000000149e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.609999999978357e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.609999999978357e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.749999999974056e-07]</msg>
<status status="PASS" starttime="20201030 15:54:39.888" endtime="20201030 15:54:39.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.884" endtime="20201030 15:54:39.890"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:39.894" endtime="20201030 15:54:39.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.892" endtime="20201030 15:54:39.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.891" endtime="20201030 15:54:39.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.547" endtime="20201030 15:54:39.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.547" endtime="20201030 15:54:39.915"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.923" endtime="20201030 15:54:39.934"></status>
</kw>
<msg timestamp="20201030 15:54:39.935" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.921" endtime="20201030 15:54:39.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.937" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.936" endtime="20201030 15:54:39.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.938" endtime="20201030 15:54:39.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.919" endtime="20201030 15:54:39.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.917" endtime="20201030 15:54:39.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.947" endtime="20201030 15:54:40.236"></status>
</kw>
<msg timestamp="20201030 15:54:40.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019715722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019716931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:39.946" endtime="20201030 15:54:40.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019715722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019716931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:40.240" endtime="20201030 15:54:40.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.249" endtime="20201030 15:54:40.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.943" endtime="20201030 15:54:40.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.941" endtime="20201030 15:54:40.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:40.256" level="INFO">${RESULT} = [{'diff': 1.2089999999985446e-06}, {'diff': 8.749999999974056e-07}, {'diff': 8.750000000008751e-07}, {'diff': 9.030000000000149e-07}, {'diff': 8.339999999981695e-07}, {'diff': 8.750000000008751e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:54:40.253" endtime="20201030 15:54:40.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:40.260" level="INFO">${OVERHEAD} = {'diff': [1.2089999999985446e-06, 8.749999999974056e-07, 8.750000000008751e-07, 9.030000000000149e-07, 8.339999999981695e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.889999999969755e-07, 8.750...</msg>
<status status="PASS" starttime="20201030 15:54:40.257" endtime="20201030 15:54:40.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.264" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:40.263" endtime="20201030 15:54:40.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.267" level="INFO">VALUE: [1.2089999999985446e-06, 8.749999999974056e-07, 8.750000000008751e-07, 9.030000000000149e-07, 8.339999999981695e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.889999999969755e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.059999999990297e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.330000000021653e-07, 8.329999999986959e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.469999999982658e-07, 8.750000000008751e-07, 9.030000000000149e-07, 8.330000000021653e-07, 9.169999999995848e-07, 8.750000000008751e-07, 8.610000000013052e-07, 9.309999999991547e-07, 8.749999999974056e-07, 8.609999999978357e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.749999999974056e-07, 9.299999999996811e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.750000000008751e-07, 9.169999999995848e-07, 8.750000000008751e-07, 8.610000000013052e-07, 9.020000000005413e-07, 8.750000000008751e-07, 8.750000000008751e-07, 9.030000000000149e-07, 9.309999999991547e-07, 8.750000000008751e-07, 8.750000000008751e-07]</msg>
<status status="PASS" starttime="20201030 15:54:40.265" endtime="20201030 15:54:40.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.261" endtime="20201030 15:54:40.268"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:40.271" endtime="20201030 15:54:40.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.270" endtime="20201030 15:54:40.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.269" endtime="20201030 15:54:40.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.915" endtime="20201030 15:54:40.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.915" endtime="20201030 15:54:40.292"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.300" endtime="20201030 15:54:40.311"></status>
</kw>
<msg timestamp="20201030 15:54:40.312" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.299" endtime="20201030 15:54:40.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.314" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.313" endtime="20201030 15:54:40.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.316" endtime="20201030 15:54:40.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.296" endtime="20201030 15:54:40.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.294" endtime="20201030 15:54:40.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.325" endtime="20201030 15:54:40.612"></status>
</kw>
<msg timestamp="20201030 15:54:40.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019767722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019768917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:40.324" endtime="20201030 15:54:40.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019767722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019768917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:40.616" endtime="20201030 15:54:40.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.625" endtime="20201030 15:54:40.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.321" endtime="20201030 15:54:40.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.320" endtime="20201030 15:54:40.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:40.631" level="INFO">${RESULT} = [{'diff': 1.1949999999989747e-06}, {'diff': 8.750000000008751e-07}, {'diff': 8.750000000008751e-07}, {'diff': 8.609999999978357e-07}, {'diff': 8.750000000008751e-07}, {'diff': 8.750000000008751e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:54:40.628" endtime="20201030 15:54:40.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:40.635" level="INFO">${OVERHEAD} = {'diff': [1.1949999999989747e-06, 8.750000000008751e-07, 8.750000000008751e-07, 8.609999999978357e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 9.450000000021941e-07, 8.610...</msg>
<status status="PASS" starttime="20201030 15:54:40.632" endtime="20201030 15:54:40.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.639" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:40.638" endtime="20201030 15:54:40.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.642" level="INFO">VALUE: [1.1949999999989747e-06, 8.750000000008751e-07, 8.750000000008751e-07, 8.609999999978357e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 9.450000000021941e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.609999999978357e-07, 8.880000000009713e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.750000000008751e-07, 9.309999999991547e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.610000000013052e-07, 9.299999999996811e-07, 8.330000000021653e-07, 8.610000000013052e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.89000000000445e-07, 9.019999999970718e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.749999999974056e-07]</msg>
<status status="PASS" starttime="20201030 15:54:40.640" endtime="20201030 15:54:40.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.636" endtime="20201030 15:54:40.643"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:40.647" endtime="20201030 15:54:40.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.646" endtime="20201030 15:54:40.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.644" endtime="20201030 15:54:40.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.293" endtime="20201030 15:54:40.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.293" endtime="20201030 15:54:40.668"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.676" endtime="20201030 15:54:40.687"></status>
</kw>
<msg timestamp="20201030 15:54:40.688" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.674" endtime="20201030 15:54:40.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.690" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.689" endtime="20201030 15:54:40.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.691" endtime="20201030 15:54:40.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.672" endtime="20201030 15:54:40.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.670" endtime="20201030 15:54:40.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.700" endtime="20201030 15:54:40.985"></status>
</kw>
<msg timestamp="20201030 15:54:40.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019319583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019320778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:40.699" endtime="20201030 15:54:40.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019319583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019320778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:40.990" endtime="20201030 15:54:40.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.998" endtime="20201030 15:54:40.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.696" endtime="20201030 15:54:41.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.695" endtime="20201030 15:54:41.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:41.004" level="INFO">${RESULT} = [{'diff': 1.1949999999989747e-06}, {'diff': 8.610000000013052e-07}, {'diff': 9.449999999987246e-07}, {'diff': 9.310000000026242e-07}, {'diff': 9.030000000000149e-07}, {'diff': 8.750000000008751e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:54:41.001" endtime="20201030 15:54:41.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:41.009" level="INFO">${OVERHEAD} = {'diff': [1.1949999999989747e-06, 8.610000000013052e-07, 9.449999999987246e-07, 9.310000000026242e-07, 9.030000000000149e-07, 8.750000000008751e-07, 8.18999999999126e-07, 9.449999999987246e-07, 8.8900...</msg>
<status status="PASS" starttime="20201030 15:54:41.005" endtime="20201030 15:54:41.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.013" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:41.012" endtime="20201030 15:54:41.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.016" level="INFO">VALUE: [1.1949999999989747e-06, 8.610000000013052e-07, 9.449999999987246e-07, 9.310000000026242e-07, 9.030000000000149e-07, 8.750000000008751e-07, 8.18999999999126e-07, 9.449999999987246e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.480000000012089e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.470000000017353e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.609999999978357e-07, 8.609999999978357e-07, 8.880000000009713e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.880000000009713e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.880000000009713e-07, 8.750000000008751e-07, 8.479999999977395e-07, 8.750000000008751e-07]</msg>
<status status="PASS" starttime="20201030 15:54:41.015" endtime="20201030 15:54:41.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.010" endtime="20201030 15:54:41.017"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:41.021" endtime="20201030 15:54:41.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.019" endtime="20201030 15:54:41.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.018" endtime="20201030 15:54:41.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.669" endtime="20201030 15:54:41.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.668" endtime="20201030 15:54:41.041"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.049" endtime="20201030 15:54:41.060"></status>
</kw>
<msg timestamp="20201030 15:54:41.061" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.048" endtime="20201030 15:54:41.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.063" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.062" endtime="20201030 15:54:41.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.064" endtime="20201030 15:54:41.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.045" endtime="20201030 15:54:41.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.043" endtime="20201030 15:54:41.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.073" endtime="20201030 15:54:41.358"></status>
</kw>
<msg timestamp="20201030 15:54:41.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019282569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019283778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:41.072" endtime="20201030 15:54:41.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019282569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019283778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:41.362" endtime="20201030 15:54:41.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.370" endtime="20201030 15:54:41.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.069" endtime="20201030 15:54:41.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.068" endtime="20201030 15:54:41.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:41.378" level="INFO">${RESULT} = [{'diff': 1.209000000002014e-06}, {'diff': 8.749999999974056e-07}, {'diff': 8.750000000008751e-07}, {'diff': 8.750000000008751e-07}, {'diff': 8.750000000008751e-07}, {'diff': 8.750000000008751e-07}, {...</msg>
<status status="PASS" starttime="20201030 15:54:41.374" endtime="20201030 15:54:41.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:41.382" level="INFO">${OVERHEAD} = {'diff': [1.209000000002014e-06, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.610000000013052e-07, 8.6200...</msg>
<status status="PASS" starttime="20201030 15:54:41.379" endtime="20201030 15:54:41.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.386" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:41.385" endtime="20201030 15:54:41.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.388" level="INFO">VALUE: [1.209000000002014e-06, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.610000000013052e-07, 8.620000000007788e-07, 8.609999999978357e-07, 8.470000000017353e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.89000000000445e-07, 8.750000000008751e-07, 9.449999999987246e-07, 9.309999999991547e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.34000000001639e-07, 8.469999999982658e-07, 8.609999999978357e-07, 8.750000000008751e-07, 8.750000000008751e-07, 9.309999999991547e-07, 8.480000000012089e-07, 8.750000000008751e-07, 8.609999999978357e-07, 8.18999999999126e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.609999999978357e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.329999999986959e-07, 8.89000000000445e-07, 8.330000000021653e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 9.160000000001112e-07, 8.89000000000445e-07, 8.89000000000445e-07]</msg>
<status status="PASS" starttime="20201030 15:54:41.387" endtime="20201030 15:54:41.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.383" endtime="20201030 15:54:41.390"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:41.393" endtime="20201030 15:54:41.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.392" endtime="20201030 15:54:41.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.391" endtime="20201030 15:54:41.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.042" endtime="20201030 15:54:41.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.042" endtime="20201030 15:54:41.414"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.422" endtime="20201030 15:54:41.434"></status>
</kw>
<msg timestamp="20201030 15:54:41.434" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.420" endtime="20201030 15:54:41.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.437" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.435" endtime="20201030 15:54:41.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.438" endtime="20201030 15:54:41.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.418" endtime="20201030 15:54:41.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.416" endtime="20201030 15:54:41.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.448" endtime="20201030 15:54:41.734"></status>
</kw>
<msg timestamp="20201030 15:54:41.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019338, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019339194, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:54:41.446" endtime="20201030 15:54:41.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019338, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019339194, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:54:41.738" endtime="20201030 15:54:41.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.747" endtime="20201030 15:54:41.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.443" endtime="20201030 15:54:41.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.442" endtime="20201030 15:54:41.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:41.753" level="INFO">${RESULT} = [{'diff': 1.193999999999501e-06}, {'diff': 8.89000000000445e-07}, {'diff': 8.89000000000445e-07}, {'diff': 8.610000000013052e-07}, {'diff': 8.610000000013052e-07}, {'diff': 8.749999999974056e-07}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:41.750" endtime="20201030 15:54:41.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:41.757" level="INFO">${OVERHEAD} = {'diff': [1.193999999999501e-06, 8.89000000000445e-07, 8.89000000000445e-07, 8.610000000013052e-07, 8.610000000013052e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.879999...</msg>
<status status="PASS" starttime="20201030 15:54:41.754" endtime="20201030 15:54:41.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.761" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:41.760" endtime="20201030 15:54:41.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.764" level="INFO">VALUE: [1.193999999999501e-06, 8.89000000000445e-07, 8.89000000000445e-07, 8.610000000013052e-07, 8.610000000013052e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.879999999975019e-07, 8.480000000012089e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.199999999985996e-07, 8.049999999995561e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.470000000017353e-07, 9.030000000000149e-07, 8.750000000008751e-07, 8.329999999986959e-07, 8.750000000008751e-07, 8.609999999978357e-07, 8.749999999974056e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.059999999990297e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.620000000007788e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.469999999982658e-07]</msg>
<status status="PASS" starttime="20201030 15:54:41.763" endtime="20201030 15:54:41.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.758" endtime="20201030 15:54:41.768"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:41.772" endtime="20201030 15:54:41.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.770" endtime="20201030 15:54:41.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.769" endtime="20201030 15:54:41.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.415" endtime="20201030 15:54:41.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.414" endtime="20201030 15:54:41.793"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.801" endtime="20201030 15:54:41.811"></status>
</kw>
<msg timestamp="20201030 15:54:41.812" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.799" endtime="20201030 15:54:41.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.814" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.813" endtime="20201030 15:54:41.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.815" endtime="20201030 15:54:41.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.796" endtime="20201030 15:54:41.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.795" endtime="20201030 15:54:41.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.824" endtime="20201030 15:54:42.108"></status>
</kw>
<msg timestamp="20201030 15:54:42.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019303194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019304403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:41.823" endtime="20201030 15:54:42.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019303194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019304403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:42.112" endtime="20201030 15:54:42.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.121" endtime="20201030 15:54:42.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.820" endtime="20201030 15:54:42.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.818" endtime="20201030 15:54:42.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:42.128" level="INFO">${RESULT} = [{'diff': 1.209000000002014e-06}, {'diff': 8.480000000012089e-07}, {'diff': 8.609999999978357e-07}, {'diff': 8.89000000000445e-07}, {'diff': 8.750000000008751e-07}, {'diff': 8.750000000008751e-07}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:42.125" endtime="20201030 15:54:42.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:42.133" level="INFO">${OVERHEAD} = {'diff': [1.209000000002014e-06, 8.480000000012089e-07, 8.609999999978357e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.89000000000445e-07, 9.310000000026242e-07, 8.610000...</msg>
<status status="PASS" starttime="20201030 15:54:42.129" endtime="20201030 15:54:42.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.137" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:42.136" endtime="20201030 15:54:42.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.140" level="INFO">VALUE: [1.209000000002014e-06, 8.480000000012089e-07, 8.609999999978357e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.89000000000445e-07, 9.310000000026242e-07, 8.610000000013052e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.750000000008751e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.200000000020691e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.609999999978357e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.749999999974056e-07, 9.299999999996811e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.060000000024992e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.750000000008751e-07, 9.450000000021941e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.750000000008751e-07, 9.030000000000149e-07]</msg>
<status status="PASS" starttime="20201030 15:54:42.138" endtime="20201030 15:54:42.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.134" endtime="20201030 15:54:42.141"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:42.145" endtime="20201030 15:54:42.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.143" endtime="20201030 15:54:42.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.142" endtime="20201030 15:54:42.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.793" endtime="20201030 15:54:42.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.793" endtime="20201030 15:54:42.166"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.173" endtime="20201030 15:54:42.185"></status>
</kw>
<msg timestamp="20201030 15:54:42.185" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:42.172" endtime="20201030 15:54:42.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.188" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:42.186" endtime="20201030 15:54:42.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.189" endtime="20201030 15:54:42.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.169" endtime="20201030 15:54:42.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.168" endtime="20201030 15:54:42.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.199" endtime="20201030 15:54:42.491"></status>
</kw>
<msg timestamp="20201030 15:54:42.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019464736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019465944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:42.197" endtime="20201030 15:54:42.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019464736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019465944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:42.495" endtime="20201030 15:54:42.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.503" endtime="20201030 15:54:42.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.194" endtime="20201030 15:54:42.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.192" endtime="20201030 15:54:42.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:42.511" level="INFO">${RESULT} = [{'diff': 1.207999999999071e-06}, {'diff': 8.750000000008751e-07}, {'diff': 8.620000000007788e-07}, {'diff': 8.190000000025954e-07}, {'diff': 8.609999999978357e-07}, {'diff': 8.610000000013052e-07}, {...</msg>
<status status="PASS" starttime="20201030 15:54:42.508" endtime="20201030 15:54:42.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:42.515" level="INFO">${OVERHEAD} = {'diff': [1.207999999999071e-06, 8.750000000008751e-07, 8.620000000007788e-07, 8.190000000025954e-07, 8.609999999978357e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.1900...</msg>
<status status="PASS" starttime="20201030 15:54:42.512" endtime="20201030 15:54:42.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.519" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:42.518" endtime="20201030 15:54:42.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.522" level="INFO">VALUE: [1.207999999999071e-06, 8.750000000008751e-07, 8.620000000007788e-07, 8.190000000025954e-07, 8.609999999978357e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.190000000025954e-07, 8.750000000008751e-07, 8.609999999978357e-07, 9.030000000000149e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.889999999969755e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.89000000000445e-07, 8.749999999974056e-07, 8.470000000017353e-07, 9.020000000005413e-07, 8.609999999978357e-07, 8.749999999974056e-07, 7.909999999999862e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.609999999978357e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.200000000020691e-07, 8.750000000008751e-07, 8.750000000008751e-07, 7.909999999999862e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.609999999978357e-07, 8.609999999978357e-07, 8.749999999974056e-07]</msg>
<status status="PASS" starttime="20201030 15:54:42.520" endtime="20201030 15:54:42.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.516" endtime="20201030 15:54:42.523"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:42.527" endtime="20201030 15:54:42.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.525" endtime="20201030 15:54:42.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.524" endtime="20201030 15:54:42.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.166" endtime="20201030 15:54:42.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.166" endtime="20201030 15:54:42.548"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.556" endtime="20201030 15:54:42.567"></status>
</kw>
<msg timestamp="20201030 15:54:42.568" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:42.554" endtime="20201030 15:54:42.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.570" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:42.569" endtime="20201030 15:54:42.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.571" endtime="20201030 15:54:42.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.551" endtime="20201030 15:54:42.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.550" endtime="20201030 15:54:42.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.581" endtime="20201030 15:54:42.865"></status>
</kw>
<msg timestamp="20201030 15:54:42.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019848292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0198495, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:54:42.580" endtime="20201030 15:54:42.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019848292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0198495, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:54:42.869" endtime="20201030 15:54:42.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.878" endtime="20201030 15:54:42.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.577" endtime="20201030 15:54:42.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.576" endtime="20201030 15:54:42.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:42.886" level="INFO">${RESULT} = [{'diff': 1.207999999999071e-06}, {'diff': 8.610000000013052e-07}, {'diff': 8.89000000000445e-07}, {'diff': 9.160000000001112e-07}, {'diff': 9.43999999999251e-07}, {'diff': 8.750000000008751e-07}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:42.882" endtime="20201030 15:54:42.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:42.891" level="INFO">${OVERHEAD} = {'diff': [1.207999999999071e-06, 8.610000000013052e-07, 8.89000000000445e-07, 9.160000000001112e-07, 9.43999999999251e-07, 8.750000000008751e-07, 9.030000000000149e-07, 8.609999999978357e-07, 8.749999...</msg>
<status status="PASS" starttime="20201030 15:54:42.887" endtime="20201030 15:54:42.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.895" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:42.894" endtime="20201030 15:54:42.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.898" level="INFO">VALUE: [1.207999999999071e-06, 8.610000000013052e-07, 8.89000000000445e-07, 9.160000000001112e-07, 9.43999999999251e-07, 8.750000000008751e-07, 9.030000000000149e-07, 8.609999999978357e-07, 8.749999999974056e-07, 9.299999999996811e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.880000000009713e-07, 8.609999999978357e-07, 8.750000000008751e-07, 8.750000000008751e-07, 9.170000000030543e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.470000000017353e-07, 9.450000000021941e-07, 8.89000000000445e-07, 8.749999999974056e-07, 9.449999999987246e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.609999999978357e-07, 8.749999999974056e-07, 8.060000000024992e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 9.43999999999251e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.889999999969755e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.889999999969755e-07, 8.469999999982658e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.609999999978357e-07, 8.89000000000445e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.749999999974056e-07]</msg>
<status status="PASS" starttime="20201030 15:54:42.896" endtime="20201030 15:54:42.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.892" endtime="20201030 15:54:42.906"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:42.910" endtime="20201030 15:54:42.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.908" endtime="20201030 15:54:42.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.907" endtime="20201030 15:54:42.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.548" endtime="20201030 15:54:42.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.548" endtime="20201030 15:54:42.931"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.939" endtime="20201030 15:54:42.951"></status>
</kw>
<msg timestamp="20201030 15:54:42.951" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:42.937" endtime="20201030 15:54:42.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.953" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:42.952" endtime="20201030 15:54:42.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.955" endtime="20201030 15:54:42.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.934" endtime="20201030 15:54:42.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.933" endtime="20201030 15:54:42.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.964" endtime="20201030 15:54:43.249"></status>
</kw>
<msg timestamp="20201030 15:54:43.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019779542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01978075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:42.962" endtime="20201030 15:54:43.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019779542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01978075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:43.253" endtime="20201030 15:54:43.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.261" endtime="20201030 15:54:43.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.960" endtime="20201030 15:54:43.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.958" endtime="20201030 15:54:43.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:43.268" level="INFO">${RESULT} = [{'diff': 1.207999999999071e-06}, {'diff': 8.750000000008751e-07}, {'diff': 9.030000000000149e-07}, {'diff': 8.610000000013052e-07}, {'diff': 8.750000000008751e-07}, {'diff': 8.610000000013052e-07}, {...</msg>
<status status="PASS" starttime="20201030 15:54:43.264" endtime="20201030 15:54:43.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:43.272" level="INFO">${OVERHEAD} = {'diff': [1.207999999999071e-06, 8.750000000008751e-07, 9.030000000000149e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.3300...</msg>
<status status="PASS" starttime="20201030 15:54:43.269" endtime="20201030 15:54:43.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.277" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:43.276" endtime="20201030 15:54:43.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.279" level="INFO">VALUE: [1.207999999999071e-06, 8.750000000008751e-07, 9.030000000000149e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.330000000021653e-07, 8.889999999969755e-07, 9.030000000000149e-07, 9.299999999996811e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.609999999978357e-07, 8.610000000013052e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.329999999986959e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.609999999978357e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.480000000012089e-07, 8.620000000007788e-07, 8.620000000007788e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.620000000007788e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.89000000000445e-07, 8.469999999982658e-07, 8.610000000013052e-07]</msg>
<status status="PASS" starttime="20201030 15:54:43.278" endtime="20201030 15:54:43.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.273" endtime="20201030 15:54:43.281"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:43.284" endtime="20201030 15:54:43.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.283" endtime="20201030 15:54:43.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.281" endtime="20201030 15:54:43.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.931" endtime="20201030 15:54:43.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.931" endtime="20201030 15:54:43.305"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.313" endtime="20201030 15:54:43.324"></status>
</kw>
<msg timestamp="20201030 15:54:43.325" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:43.311" endtime="20201030 15:54:43.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.327" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:43.326" endtime="20201030 15:54:43.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.328" endtime="20201030 15:54:43.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.309" endtime="20201030 15:54:43.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.307" endtime="20201030 15:54:43.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.337" endtime="20201030 15:54:43.626"></status>
</kw>
<msg timestamp="20201030 15:54:43.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019610833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019612042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:43.336" endtime="20201030 15:54:43.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019610833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019612042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:43.630" endtime="20201030 15:54:43.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.638" endtime="20201030 15:54:43.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.333" endtime="20201030 15:54:43.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.332" endtime="20201030 15:54:43.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:43.646" level="INFO">${RESULT} = [{'diff': 1.2089999999985446e-06}, {'diff': 8.750000000008751e-07}, {'diff': 8.89000000000445e-07}, {'diff': 8.750000000008751e-07}, {'diff': 8.750000000008751e-07}, {'diff': 8.89000000000445e-07}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:43.643" endtime="20201030 15:54:43.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:43.650" level="INFO">${OVERHEAD} = {'diff': [1.2089999999985446e-06, 8.750000000008751e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.750000000008751e-07, 9.44999...</msg>
<status status="PASS" starttime="20201030 15:54:43.647" endtime="20201030 15:54:43.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.654" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:43.653" endtime="20201030 15:54:43.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.657" level="INFO">VALUE: [1.2089999999985446e-06, 8.750000000008751e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.750000000008751e-07, 9.449999999987246e-07, 8.610000000013052e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.199999999985996e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.470000000017353e-07, 9.450000000021941e-07, 8.750000000008751e-07, 8.609999999978357e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.609999999978357e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.749999999974056e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.749999999974056e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.749999999974056e-07, 9.450000000021941e-07, 8.750000000008751e-07, 8.619999999973094e-07, 8.749999999974056e-07, 8.749999999974056e-07]</msg>
<status status="PASS" starttime="20201030 15:54:43.656" endtime="20201030 15:54:43.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.651" endtime="20201030 15:54:43.658"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:43.662" endtime="20201030 15:54:43.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.661" endtime="20201030 15:54:43.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.659" endtime="20201030 15:54:43.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.306" endtime="20201030 15:54:43.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.305" endtime="20201030 15:54:43.683"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.693" endtime="20201030 15:54:43.705"></status>
</kw>
<msg timestamp="20201030 15:54:43.706" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:43.691" endtime="20201030 15:54:43.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.710" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:43.708" endtime="20201030 15:54:43.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.711" endtime="20201030 15:54:43.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.688" endtime="20201030 15:54:43.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.686" endtime="20201030 15:54:43.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.723" endtime="20201030 15:54:44.012"></status>
</kw>
<msg timestamp="20201030 15:54:44.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022416056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022417319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:43.721" endtime="20201030 15:54:44.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022416056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022417319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:44.016" endtime="20201030 15:54:44.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.025" endtime="20201030 15:54:44.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.718" endtime="20201030 15:54:44.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.716" endtime="20201030 15:54:44.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:44.031" level="INFO">${RESULT} = [{'diff': 1.2630000000013464e-06}, {'diff': 8.749999999974056e-07}, {'diff': 8.750000000008751e-07}, {'diff': 8.750000000008751e-07}, {'diff': 8.609999999978357e-07}, {'diff': 8.750000000008751e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:54:44.028" endtime="20201030 15:54:44.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:44.035" level="INFO">${OVERHEAD} = {'diff': [1.2630000000013464e-06, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.609999999978357e-07, 8.750000000008751e-07, 8.610000000013052e-07, 9.160000000001112e-07, 8.750...</msg>
<status status="PASS" starttime="20201030 15:54:44.032" endtime="20201030 15:54:44.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.039" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:44.038" endtime="20201030 15:54:44.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.042" level="INFO">VALUE: [1.2630000000013464e-06, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.609999999978357e-07, 8.750000000008751e-07, 8.610000000013052e-07, 9.160000000001112e-07, 8.750000000008751e-07, 8.750000000008751e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.89000000000445e-07, 9.019999999970718e-07, 9.43999999999251e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.609999999978357e-07, 9.030000000000149e-07, 8.750000000008751e-07, 8.050000000030255e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.18999999999126e-07, 8.880000000009713e-07, 8.34000000001639e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.609999999978357e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.329999999986959e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.89000000000445e-07, 8.89000000000445e-07, 8.750000000008751e-07]</msg>
<status status="PASS" starttime="20201030 15:54:44.041" endtime="20201030 15:54:44.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.036" endtime="20201030 15:54:44.044"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:44.048" endtime="20201030 15:54:44.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.046" endtime="20201030 15:54:44.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.045" endtime="20201030 15:54:44.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.684" endtime="20201030 15:54:44.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.684" endtime="20201030 15:54:44.068"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.076" endtime="20201030 15:54:44.087"></status>
</kw>
<msg timestamp="20201030 15:54:44.087" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:44.075" endtime="20201030 15:54:44.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.090" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:44.088" endtime="20201030 15:54:44.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.091" endtime="20201030 15:54:44.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.072" endtime="20201030 15:54:44.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.070" endtime="20201030 15:54:44.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.100" endtime="20201030 15:54:44.389"></status>
</kw>
<msg timestamp="20201030 15:54:44.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019457514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019458764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:44.098" endtime="20201030 15:54:44.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019457514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019458764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:44.393" endtime="20201030 15:54:44.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.401" endtime="20201030 15:54:44.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.096" endtime="20201030 15:54:44.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.094" endtime="20201030 15:54:44.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:44.407" level="INFO">${RESULT} = [{'diff': 1.2500000000012501e-06}, {'diff': 8.749999999974056e-07}, {'diff': 8.750000000008751e-07}, {'diff': 9.43999999999251e-07}, {'diff': 8.749999999974056e-07}, {'diff': 8.750000000008751e-07}, {...</msg>
<status status="PASS" starttime="20201030 15:54:44.404" endtime="20201030 15:54:44.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:44.412" level="INFO">${OVERHEAD} = {'diff': [1.2500000000012501e-06, 8.749999999974056e-07, 8.750000000008751e-07, 9.43999999999251e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.7500...</msg>
<status status="PASS" starttime="20201030 15:54:44.408" endtime="20201030 15:54:44.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.417" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:44.416" endtime="20201030 15:54:44.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.419" level="INFO">VALUE: [1.2500000000012501e-06, 8.749999999974056e-07, 8.750000000008751e-07, 9.43999999999251e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.880000000009713e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.609999999978357e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.329999999986959e-07, 8.750000000008751e-07, 8.330000000021653e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.18999999999126e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.609999999978357e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.749999999974056e-07]</msg>
<status status="PASS" starttime="20201030 15:54:44.418" endtime="20201030 15:54:44.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.413" endtime="20201030 15:54:44.421"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:44.424" endtime="20201030 15:54:44.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.423" endtime="20201030 15:54:44.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.421" endtime="20201030 15:54:44.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.069" endtime="20201030 15:54:44.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.069" endtime="20201030 15:54:44.445"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.453" endtime="20201030 15:54:44.464"></status>
</kw>
<msg timestamp="20201030 15:54:44.464" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:44.451" endtime="20201030 15:54:44.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.467" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:44.465" endtime="20201030 15:54:44.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.468" endtime="20201030 15:54:44.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.449" endtime="20201030 15:54:44.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.447" endtime="20201030 15:54:44.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.477" endtime="20201030 15:54:44.767"></status>
</kw>
<msg timestamp="20201030 15:54:44.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019670389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019671583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:44.476" endtime="20201030 15:54:44.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019670389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019671583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:44.771" endtime="20201030 15:54:44.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.779" endtime="20201030 15:54:44.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.473" endtime="20201030 15:54:44.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.471" endtime="20201030 15:54:44.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:44.786" level="INFO">${RESULT} = [{'diff': 1.193999999999501e-06}, {'diff': 8.750000000008751e-07}, {'diff': 9.019999999970718e-07}, {'diff': 8.750000000008751e-07}, {'diff': 8.749999999974056e-07}, {'diff': 8.34000000001639e-07}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:44.783" endtime="20201030 15:54:44.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:44.791" level="INFO">${OVERHEAD} = {'diff': [1.193999999999501e-06, 8.750000000008751e-07, 9.019999999970718e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.34000000001639e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.60999...</msg>
<status status="PASS" starttime="20201030 15:54:44.787" endtime="20201030 15:54:44.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.795" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:44.794" endtime="20201030 15:54:44.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.797" level="INFO">VALUE: [1.193999999999501e-06, 8.750000000008751e-07, 9.019999999970718e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.34000000001639e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.609999999978357e-07, 8.750000000008751e-07, 9.310000000026242e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.609999999978357e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.889999999969755e-07, 8.609999999978357e-07, 8.89000000000445e-07, 8.750000000008751e-07, 9.030000000000149e-07, 8.750000000008751e-07, 8.190000000025954e-07, 8.750000000008751e-07, 8.479999999977395e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.89000000000445e-07, 8.749999999974056e-07, 9.309999999991547e-07, 8.750000000008751e-07, 8.750000000008751e-07, 9.030000000000149e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.89000000000445e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.749999999974056e-07]</msg>
<status status="PASS" starttime="20201030 15:54:44.796" endtime="20201030 15:54:44.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.791" endtime="20201030 15:54:44.798"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:44.802" endtime="20201030 15:54:44.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.801" endtime="20201030 15:54:44.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.799" endtime="20201030 15:54:44.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.446" endtime="20201030 15:54:44.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.445" endtime="20201030 15:54:44.823"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.831" endtime="20201030 15:54:44.842"></status>
</kw>
<msg timestamp="20201030 15:54:44.843" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:44.829" endtime="20201030 15:54:44.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.845" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:44.844" endtime="20201030 15:54:44.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.846" endtime="20201030 15:54:44.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.827" endtime="20201030 15:54:44.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.825" endtime="20201030 15:54:44.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.856" endtime="20201030 15:54:45.145"></status>
</kw>
<msg timestamp="20201030 15:54:45.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01967575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019676944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:44.855" endtime="20201030 15:54:45.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01967575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019676944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:45.149" endtime="20201030 15:54:45.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.158" endtime="20201030 15:54:45.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.852" endtime="20201030 15:54:45.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.851" endtime="20201030 15:54:45.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:45.164" level="INFO">${RESULT} = [{'diff': 1.193999999999501e-06}, {'diff': 8.750000000008751e-07}, {'diff': 8.750000000008751e-07}, {'diff': 8.750000000008751e-07}, {'diff': 8.470000000017353e-07}, {'diff': 9.449999999987246e-07}, {...</msg>
<status status="PASS" starttime="20201030 15:54:45.161" endtime="20201030 15:54:45.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:45.169" level="INFO">${OVERHEAD} = {'diff': [1.193999999999501e-06, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.470000000017353e-07, 9.449999999987246e-07, 9.030000000000149e-07, 8.749999999974056e-07, 7.9099...</msg>
<status status="PASS" starttime="20201030 15:54:45.165" endtime="20201030 15:54:45.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.173" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:45.172" endtime="20201030 15:54:45.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.176" level="INFO">VALUE: [1.193999999999501e-06, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.470000000017353e-07, 9.449999999987246e-07, 9.030000000000149e-07, 8.749999999974056e-07, 7.909999999999862e-07, 8.750000000008751e-07, 8.750000000008751e-07, 9.309999999991547e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.89000000000445e-07, 9.309999999991547e-07, 8.610000000013052e-07, 8.749999999974056e-07, 8.610000000013052e-07, 8.609999999978357e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.609999999978357e-07, 8.749999999974056e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.610000000013052e-07, 8.199999999985996e-07, 8.610000000013052e-07, 8.750000000008751e-07, 9.43999999999251e-07, 8.620000000007788e-07, 8.609999999978357e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.750000000008751e-07]</msg>
<status status="PASS" starttime="20201030 15:54:45.175" endtime="20201030 15:54:45.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.170" endtime="20201030 15:54:45.181"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:45.184" endtime="20201030 15:54:45.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.183" endtime="20201030 15:54:45.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.182" endtime="20201030 15:54:45.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.824" endtime="20201030 15:54:45.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.823" endtime="20201030 15:54:45.205"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.213" endtime="20201030 15:54:45.225"></status>
</kw>
<msg timestamp="20201030 15:54:45.225" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:45.212" endtime="20201030 15:54:45.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.228" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:45.226" endtime="20201030 15:54:45.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.229" endtime="20201030 15:54:45.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.209" endtime="20201030 15:54:45.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.207" endtime="20201030 15:54:45.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.238" endtime="20201030 15:54:45.527"></status>
</kw>
<msg timestamp="20201030 15:54:45.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019662333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019663542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:45.236" endtime="20201030 15:54:45.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019662333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019663542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:45.531" endtime="20201030 15:54:45.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.539" endtime="20201030 15:54:45.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.233" endtime="20201030 15:54:45.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.232" endtime="20201030 15:54:45.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:45.546" level="INFO">${RESULT} = [{'diff': 1.2089999999985446e-06}, {'diff': 8.89000000000445e-07}, {'diff': 8.880000000009713e-07}, {'diff': 8.749999999974056e-07}, {'diff': 8.750000000008751e-07}, {'diff': 8.749999999974056e-07}, {...</msg>
<status status="PASS" starttime="20201030 15:54:45.543" endtime="20201030 15:54:45.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:45.551" level="INFO">${OVERHEAD} = {'diff': [1.2089999999985446e-06, 8.89000000000445e-07, 8.880000000009713e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.609999999978357e-07, 8.750000000008751e-07, 8.7499...</msg>
<status status="PASS" starttime="20201030 15:54:45.547" endtime="20201030 15:54:45.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.555" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:45.554" endtime="20201030 15:54:45.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.557" level="INFO">VALUE: [1.2089999999985446e-06, 8.89000000000445e-07, 8.880000000009713e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.609999999978357e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.470000000017353e-07, 8.750000000008751e-07, 8.749999999974056e-07, 9.030000000000149e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.469999999982658e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.889999999969755e-07, 8.750000000008751e-07, 8.480000000012089e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.89000000000445e-07, 8.610000000013052e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.190000000025954e-07, 9.030000000000149e-07, 9.299999999996811e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.609999999978357e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.609999999978357e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.750000000008751e-07]</msg>
<status status="PASS" starttime="20201030 15:54:45.556" endtime="20201030 15:54:45.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.551" endtime="20201030 15:54:45.559"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:45.562" endtime="20201030 15:54:45.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.561" endtime="20201030 15:54:45.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.560" endtime="20201030 15:54:45.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.206" endtime="20201030 15:54:45.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.206" endtime="20201030 15:54:45.583"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.591" endtime="20201030 15:54:45.601"></status>
</kw>
<msg timestamp="20201030 15:54:45.602" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:45.589" endtime="20201030 15:54:45.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.604" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:45.603" endtime="20201030 15:54:45.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.606" endtime="20201030 15:54:45.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.587" endtime="20201030 15:54:45.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.585" endtime="20201030 15:54:45.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.615" endtime="20201030 15:54:45.902"></status>
</kw>
<msg timestamp="20201030 15:54:45.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019218181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019219389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:45.613" endtime="20201030 15:54:45.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019218181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019219389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:45.911" endtime="20201030 15:54:45.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.930" endtime="20201030 15:54:45.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.610" endtime="20201030 15:54:45.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.609" endtime="20201030 15:54:45.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:45.945" level="INFO">${RESULT} = [{'diff': 1.207999999999071e-06}, {'diff': 8.749999999974056e-07}, {'diff': 8.750000000008751e-07}, {'diff': 8.750000000008751e-07}, {'diff': 8.89000000000445e-07}, {'diff': 8.470000000017353e-07}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:45.938" endtime="20201030 15:54:45.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:45.954" level="INFO">${OVERHEAD} = {'diff': [1.207999999999071e-06, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.470000000017353e-07, 8.749999999974056e-07, 8.89000000000445e-07, 8.879999...</msg>
<status status="PASS" starttime="20201030 15:54:45.947" endtime="20201030 15:54:45.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.963" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:45.961" endtime="20201030 15:54:45.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.968" level="INFO">VALUE: [1.207999999999071e-06, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.470000000017353e-07, 8.749999999974056e-07, 8.89000000000445e-07, 8.879999999975019e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.480000000012089e-07, 8.750000000008751e-07, 9.030000000000149e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.610000000013052e-07, 8.18999999999126e-07, 8.469999999982658e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.609999999978357e-07, 8.610000000013052e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.619999999973094e-07, 8.89000000000445e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.610000000013052e-07, 8.609999999978357e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.89000000000445e-07, 9.299999999996811e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.89000000000445e-07]</msg>
<status status="PASS" starttime="20201030 15:54:45.965" endtime="20201030 15:54:45.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.956" endtime="20201030 15:54:45.971"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:45.979" endtime="20201030 15:54:45.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.976" endtime="20201030 15:54:46.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.973" endtime="20201030 15:54:46.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.584" endtime="20201030 15:54:46.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.583" endtime="20201030 15:54:46.001"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.009" endtime="20201030 15:54:46.020"></status>
</kw>
<msg timestamp="20201030 15:54:46.020" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.007" endtime="20201030 15:54:46.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.022" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.021" endtime="20201030 15:54:46.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.024" endtime="20201030 15:54:46.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.004" endtime="20201030 15:54:46.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.003" endtime="20201030 15:54:46.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.033" endtime="20201030 15:54:46.319"></status>
</kw>
<msg timestamp="20201030 15:54:46.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019837069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019838306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:46.032" endtime="20201030 15:54:46.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019837069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019838306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:46.324" endtime="20201030 15:54:46.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.332" endtime="20201030 15:54:46.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.029" endtime="20201030 15:54:46.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.028" endtime="20201030 15:54:46.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:46.339" level="INFO">${RESULT} = [{'diff': 1.2370000000011538e-06}, {'diff': 8.750000000008751e-07}, {'diff': 8.750000000008751e-07}, {'diff': 8.750000000008751e-07}, {'diff': 8.749999999974056e-07}, {'diff': 8.190000000025954e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:54:46.335" endtime="20201030 15:54:46.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:46.343" level="INFO">${OVERHEAD} = {'diff': [1.2370000000011538e-06, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.190000000025954e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.750...</msg>
<status status="PASS" starttime="20201030 15:54:46.340" endtime="20201030 15:54:46.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.347" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:46.346" endtime="20201030 15:54:46.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.350" level="INFO">VALUE: [1.2370000000011538e-06, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.190000000025954e-07, 8.749999999974056e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.610000000013052e-07, 8.619999999973094e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.329999999986959e-07, 8.750000000008751e-07, 8.469999999982658e-07, 9.440000000027204e-07, 8.879999999975019e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.620000000007788e-07, 9.030000000000149e-07, 8.339999999981695e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.609999999978357e-07, 8.610000000013052e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.470000000017353e-07, 8.609999999978357e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.750000000008751e-07, 9.169999999995848e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.749999999974056e-07]</msg>
<status status="PASS" starttime="20201030 15:54:46.348" endtime="20201030 15:54:46.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.344" endtime="20201030 15:54:46.352"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:46.355" endtime="20201030 15:54:46.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.354" endtime="20201030 15:54:46.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.353" endtime="20201030 15:54:46.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.001" endtime="20201030 15:54:46.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.001" endtime="20201030 15:54:46.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.748" endtime="20201030 15:54:46.376"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:38.653" endtime="20201030 15:54:46.377" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:46.384" endtime="20201030 15:54:46.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.382" endtime="20201030 15:54:46.404"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.417" endtime="20201030 15:54:46.432"></status>
</kw>
<msg timestamp="20201030 15:54:46.432" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.416" endtime="20201030 15:54:46.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.435" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.433" endtime="20201030 15:54:46.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.438" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:46.436" endtime="20201030 15:54:46.438"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:46.413" endtime="20201030 15:54:46.439"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:46.410" endtime="20201030 15:54:46.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.409" endtime="20201030 15:54:46.440"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:46.443" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:46.443" endtime="20201030 15:54:46.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.440" endtime="20201030 15:54:46.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.408" endtime="20201030 15:54:46.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.408" endtime="20201030 15:54:46.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.445" endtime="20201030 15:54:46.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.406" endtime="20201030 15:54:46.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.404" endtime="20201030 15:54:46.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.381" endtime="20201030 15:54:46.448"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.457" endtime="20201030 15:54:46.476"></status>
</kw>
<msg timestamp="20201030 15:54:46.477" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.456" endtime="20201030 15:54:46.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.479" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.478" endtime="20201030 15:54:46.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.481" endtime="20201030 15:54:46.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.452" endtime="20201030 15:54:46.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.450" endtime="20201030 15:54:46.484"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.486" endtime="20201030 15:54:46.488"></status>
</kw>
<msg timestamp="20201030 15:54:46.489" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:54:46.485" endtime="20201030 15:54:46.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.493" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:46.492" endtime="20201030 15:54:46.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.495" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:46.494" endtime="20201030 15:54:46.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.489" endtime="20201030 15:54:46.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.500" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:46.499" endtime="20201030 15:54:46.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.502" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:46.501" endtime="20201030 15:54:46.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.496" endtime="20201030 15:54:46.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.509" endtime="20201030 15:54:46.798"></status>
</kw>
<msg timestamp="20201030 15:54:46.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066000597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066004611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:46.508" endtime="20201030 15:54:46.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066000597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066004611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:46.802" endtime="20201030 15:54:46.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.811" endtime="20201030 15:54:46.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.505" endtime="20201030 15:54:46.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.503" endtime="20201030 15:54:46.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:46.817" level="INFO">${RESULT} = [{'diff': 4.014000000010509e-06}, {'diff': 3.6250000000070948e-06}, {'diff': 3.611000000000586e-06}, {'diff': 2.750000000009689e-06}, {'diff': 2.777999999994951e-06}, {'diff': 3.6670000000127434e-06},...</msg>
<status status="PASS" starttime="20201030 15:54:46.814" endtime="20201030 15:54:46.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:46.822" level="INFO">${OVERHEAD} = {'diff': [4.014000000010509e-06, 3.6250000000070948e-06, 3.611000000000586e-06, 2.750000000009689e-06, 2.777999999994951e-06, 3.6670000000127434e-06, 2.7499999999958114e-06, 2.8060000000079688e-06, 3....</msg>
<status status="PASS" starttime="20201030 15:54:46.818" endtime="20201030 15:54:46.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.827" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 15:54:46.826" endtime="20201030 15:54:46.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.830" level="INFO">VALUE: [4.014000000010509e-06, 3.6250000000070948e-06, 3.611000000000586e-06, 2.750000000009689e-06, 2.777999999994951e-06, 3.6670000000127434e-06, 2.7499999999958114e-06, 2.8060000000079688e-06, 3.6250000000070948e-06, 2.7219999999966715e-06, 2.8200000000006e-06, 3.5689999999949373e-06, 2.7630000000028465e-06, 2.778000000008829e-06, 3.6530000000062346e-06, 2.76400000000232e-06, 2.7770000000093553e-06, 3.638000000000252e-06, 2.7639999999884424e-06, 2.819999999986722e-06, 3.652999999992357e-06, 2.778000000008829e-06, 2.778000000008829e-06, 3.6389999999997258e-06, 2.76400000000232e-06, 2.805999999994091e-06, 3.6250000000070948e-06, 2.777999999994951e-06, 2.8049999999946174e-06, 3.624999999993217e-06, 2.777999999994951e-06, 2.750000000009689e-06, 3.6389999999997258e-06, 2.7630000000028465e-06, 2.79200000000146e-06, 3.6389999999997258e-06, 2.777999999994951e-06, 2.750000000009689e-06, 3.6389999999997258e-06, 2.778000000008829e-06, 2.8060000000079688e-06, 3.638000000000252e-06, 2.7499999999958114e-06, 2.7499999999958114e-06, 3.6389999999997258e-06, 2.76400000000232e-06, 2.8049999999946174e-06, 3.6389999999997258e-06, 2.7639999999884424e-06, 2.7910000000019863e-06]</msg>
<status status="PASS" starttime="20201030 15:54:46.828" endtime="20201030 15:54:46.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.823" endtime="20201030 15:54:46.831"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:46.835" endtime="20201030 15:54:46.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.833" endtime="20201030 15:54:46.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.832" endtime="20201030 15:54:46.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.448" endtime="20201030 15:54:46.855"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:46.378" endtime="20201030 15:54:46.856" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:46.863" endtime="20201030 15:54:46.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.861" endtime="20201030 15:54:46.883"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.896" endtime="20201030 15:54:46.909"></status>
</kw>
<msg timestamp="20201030 15:54:46.909" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.894" endtime="20201030 15:54:46.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.912" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.910" endtime="20201030 15:54:46.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.916" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:46.913" endtime="20201030 15:54:46.916"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:46.891" endtime="20201030 15:54:46.917"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:46.889" endtime="20201030 15:54:46.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.888" endtime="20201030 15:54:46.918"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:46.921" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:46.921" endtime="20201030 15:54:46.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.918" endtime="20201030 15:54:46.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.887" endtime="20201030 15:54:46.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.886" endtime="20201030 15:54:46.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.923" endtime="20201030 15:54:46.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.885" endtime="20201030 15:54:46.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.883" endtime="20201030 15:54:46.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.860" endtime="20201030 15:54:46.926"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.934" endtime="20201030 15:54:46.967"></status>
</kw>
<msg timestamp="20201030 15:54:46.967" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.933" endtime="20201030 15:54:46.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.970" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.969" endtime="20201030 15:54:46.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.972" endtime="20201030 15:54:46.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.930" endtime="20201030 15:54:46.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.928" endtime="20201030 15:54:46.974"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.976" endtime="20201030 15:54:46.978"></status>
</kw>
<msg timestamp="20201030 15:54:46.978" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:54:46.975" endtime="20201030 15:54:46.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.982" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:46.981" endtime="20201030 15:54:46.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.985" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:46.984" endtime="20201030 15:54:46.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.979" endtime="20201030 15:54:46.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.989" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:46.988" endtime="20201030 15:54:46.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.991" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:46.990" endtime="20201030 15:54:46.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.986" endtime="20201030 15:54:46.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.999" endtime="20201030 15:54:47.297"></status>
</kw>
<msg timestamp="20201030 15:54:47.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064224972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064227944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:46.997" endtime="20201030 15:54:47.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064224972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064227944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:47.302" endtime="20201030 15:54:47.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.310" endtime="20201030 15:54:47.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.995" endtime="20201030 15:54:47.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.993" endtime="20201030 15:54:47.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:47.316" level="INFO">${RESULT} = [{'diff': 2.9719999999899827e-06}, {'diff': 1.0625000000000218e-05}, {'diff': 1.0361000000000398e-05}, {'diff': 1.0361000000000398e-05}, {'diff': 1.0277999999988574e-05}, {'diff': 1.0361000000000398e-...</msg>
<status status="PASS" starttime="20201030 15:54:47.313" endtime="20201030 15:54:47.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:47.321" level="INFO">${OVERHEAD} = {'diff': [2.9719999999899827e-06, 1.0625000000000218e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0277999999988574e-05, 1.0361000000000398e-05, 1.0306000000001592e-05, 1.029200000000896e-05,...</msg>
<status status="PASS" starttime="20201030 15:54:47.317" endtime="20201030 15:54:47.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.325" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 15:54:47.324" endtime="20201030 15:54:47.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.328" level="INFO">VALUE: [2.9719999999899827e-06, 1.0625000000000218e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0277999999988574e-05, 1.0361000000000398e-05, 1.0306000000001592e-05, 1.029200000000896e-05, 1.0361000000000398e-05, 1.0374999999993029e-05, 1.0277999999988574e-05, 1.0375000000006906e-05, 1.0375000000006906e-05, 1.0278000000002452e-05, 1.0361000000000398e-05, 1.0374999999993029e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0402000000006573e-05, 1.0263999999995943e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0305999999987714e-05, 1.0346999999993889e-05, 1.0374999999993029e-05, 1.026400000000982e-05, 1.0333000000001258e-05, 1.0375000000006906e-05, 1.0306000000001592e-05, 1.0347000000007767e-05, 1.0361000000000398e-05, 1.0306000000001592e-05, 1.0374999999993029e-05, 1.0388999999999537e-05, 1.0306000000001592e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0306000000001592e-05, 1.0305000000002118e-05, 1.0375000000006906e-05, 1.0305000000002118e-05, 1.0374999999993029e-05, 1.0374999999993029e-05, 1.0291000000009487e-05, 1.0334000000000731e-05, 1.0388999999999537e-05, 1.0291000000009487e-05, 1.036099999998652e-05, 1.0375000000006906e-05, 1.029099999999561e-05]</msg>
<status status="PASS" starttime="20201030 15:54:47.326" endtime="20201030 15:54:47.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.321" endtime="20201030 15:54:47.329"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:47.333" endtime="20201030 15:54:47.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.331" endtime="20201030 15:54:47.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.330" endtime="20201030 15:54:47.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.926" endtime="20201030 15:54:47.354"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:46.857" endtime="20201030 15:54:47.355" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:47.363" endtime="20201030 15:54:47.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.361" endtime="20201030 15:54:47.383"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.398" endtime="20201030 15:54:47.412"></status>
</kw>
<msg timestamp="20201030 15:54:47.412" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:47.396" endtime="20201030 15:54:47.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.415" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:47.413" endtime="20201030 15:54:47.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.418" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:47.416" endtime="20201030 15:54:47.418"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:47.393" endtime="20201030 15:54:47.419"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:47.391" endtime="20201030 15:54:47.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.390" endtime="20201030 15:54:47.420"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:47.424" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:47.423" endtime="20201030 15:54:47.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.421" endtime="20201030 15:54:47.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.389" endtime="20201030 15:54:47.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.387" endtime="20201030 15:54:47.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.425" endtime="20201030 15:54:47.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.386" endtime="20201030 15:54:47.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.384" endtime="20201030 15:54:47.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.360" endtime="20201030 15:54:47.428"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.437" endtime="20201030 15:54:47.503"></status>
</kw>
<msg timestamp="20201030 15:54:47.503" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:47.435" endtime="20201030 15:54:47.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.506" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:47.505" endtime="20201030 15:54:47.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.508" endtime="20201030 15:54:47.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.432" endtime="20201030 15:54:47.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.430" endtime="20201030 15:54:47.510"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.513" endtime="20201030 15:54:47.514"></status>
</kw>
<msg timestamp="20201030 15:54:47.515" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:54:47.511" endtime="20201030 15:54:47.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.519" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:47.518" endtime="20201030 15:54:47.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.521" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:47.520" endtime="20201030 15:54:47.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.516" endtime="20201030 15:54:47.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.527" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:47.526" endtime="20201030 15:54:47.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.529" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:47.528" endtime="20201030 15:54:47.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.524" endtime="20201030 15:54:47.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.536" endtime="20201030 15:54:47.828"></status>
</kw>
<msg timestamp="20201030 15:54:47.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065071278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065075597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:47.535" endtime="20201030 15:54:47.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065071278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065075597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:47.832" endtime="20201030 15:54:47.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.840" endtime="20201030 15:54:47.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.532" endtime="20201030 15:54:47.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.530" endtime="20201030 15:54:47.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:47.847" level="INFO">${RESULT} = [{'diff': 4.319000000002626e-06}, {'diff': 1.866699999999999e-05}, {'diff': 1.8402000000000696e-05}, {'diff': 1.8485999999998115e-05}, {'diff': 1.8500000000004624e-05}, {'diff': 1.8388000000008065e-05...</msg>
<status status="PASS" starttime="20201030 15:54:47.844" endtime="20201030 15:54:47.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:47.851" level="INFO">${OVERHEAD} = {'diff': [4.319000000002626e-06, 1.866699999999999e-05, 1.8402000000000696e-05, 1.8485999999998115e-05, 1.8500000000004624e-05, 1.8388000000008065e-05, 1.8471999999991606e-05, 1.840300000000017e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:54:47.848" endtime="20201030 15:54:47.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.856" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 15:54:47.855" endtime="20201030 15:54:47.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.859" level="INFO">VALUE: [4.319000000002626e-06, 1.866699999999999e-05, 1.8402000000000696e-05, 1.8485999999998115e-05, 1.8500000000004624e-05, 1.8388000000008065e-05, 1.8471999999991606e-05, 1.840300000000017e-05, 1.8443999999992466e-05, 1.8485999999998115e-05, 1.8471999999991606e-05, 1.840300000000017e-05, 1.8513999999997255e-05, 1.8457999999998975e-05, 1.8457999999998975e-05, 1.8471999999991606e-05, 1.8443999999992466e-05, 1.837500000000103e-05, 1.8472000000005484e-05, 1.8471999999991606e-05, 1.840300000000017e-05, 1.8500000000004624e-05, 1.847299999999108e-05, 1.837500000000103e-05, 1.8500000000004624e-05, 1.8485999999998115e-05, 1.8389000000007538e-05, 1.8500000000004624e-05, 1.851299999999778e-05, 1.83610000000084e-05, 1.851300000001166e-05, 1.8527999999989886e-05, 1.838899999999366e-05, 1.8500000000004624e-05, 1.8513999999997255e-05, 1.840300000000017e-05, 1.8485999999998115e-05, 1.8415999999993327e-05, 1.840300000000017e-05, 1.8485999999998115e-05, 1.8472000000005484e-05, 1.837500000000103e-05, 1.8471999999991606e-05, 1.8457999999998975e-05, 1.8389000000007538e-05, 1.8472000000005484e-05, 1.8472000000005484e-05, 1.840300000000017e-05, 1.8473000000004958e-05, 1.8402000000000696e-05]</msg>
<status status="PASS" starttime="20201030 15:54:47.857" endtime="20201030 15:54:47.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.852" endtime="20201030 15:54:47.860"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:47.864" endtime="20201030 15:54:47.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.862" endtime="20201030 15:54:47.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.861" endtime="20201030 15:54:47.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.429" endtime="20201030 15:54:47.884"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:47.356" endtime="20201030 15:54:47.885" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:47.892" endtime="20201030 15:54:47.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.890" endtime="20201030 15:54:47.912"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.925" endtime="20201030 15:54:47.940"></status>
</kw>
<msg timestamp="20201030 15:54:47.940" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:47.924" endtime="20201030 15:54:47.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.943" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:47.941" endtime="20201030 15:54:47.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.946" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:47.944" endtime="20201030 15:54:47.946"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:47.921" endtime="20201030 15:54:47.947"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:47.918" endtime="20201030 15:54:47.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.917" endtime="20201030 15:54:47.948"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:47.951" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:47.951" endtime="20201030 15:54:47.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.949" endtime="20201030 15:54:47.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.916" endtime="20201030 15:54:47.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.916" endtime="20201030 15:54:47.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.953" endtime="20201030 15:54:47.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.914" endtime="20201030 15:54:47.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.912" endtime="20201030 15:54:47.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.889" endtime="20201030 15:54:47.956"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.968" endtime="20201030 15:54:47.988"></status>
</kw>
<msg timestamp="20201030 15:54:47.988" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:47.966" endtime="20201030 15:54:47.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.991" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:47.990" endtime="20201030 15:54:47.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.997" endtime="20201030 15:54:47.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.960" endtime="20201030 15:54:48.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.958" endtime="20201030 15:54:48.000"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.003" endtime="20201030 15:54:48.005"></status>
</kw>
<msg timestamp="20201030 15:54:48.006" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:54:48.001" endtime="20201030 15:54:48.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.012" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:48.010" endtime="20201030 15:54:48.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.015" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:48.013" endtime="20201030 15:54:48.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.008" endtime="20201030 15:54:48.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.021" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:48.020" endtime="20201030 15:54:48.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.023" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:48.022" endtime="20201030 15:54:48.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.017" endtime="20201030 15:54:48.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.030" endtime="20201030 15:54:48.315"></status>
</kw>
<msg timestamp="20201030 15:54:48.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068986069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068989403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:48.029" endtime="20201030 15:54:48.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068986069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068989403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:48.319" endtime="20201030 15:54:48.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.328" endtime="20201030 15:54:48.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.026" endtime="20201030 15:54:48.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.024" endtime="20201030 15:54:48.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:48.334" level="INFO">${RESULT} = [{'diff': 3.3340000000076087e-06}, {'diff': 3.1530000000057345e-06}, {'diff': 2.737000000002654e-06}, {'diff': 3.1529999999918568e-06}, {'diff': 2.7499999999958114e-06}, {'diff': 3.1669999999983656e-0...</msg>
<status status="PASS" starttime="20201030 15:54:48.331" endtime="20201030 15:54:48.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:48.339" level="INFO">${OVERHEAD} = {'diff': [3.3340000000076087e-06, 3.1530000000057345e-06, 2.737000000002654e-06, 3.1529999999918568e-06, 2.7499999999958114e-06, 3.1669999999983656e-06, 2.7219999999966715e-06, 3.1529999999918568e-06,...</msg>
<status status="PASS" starttime="20201030 15:54:48.335" endtime="20201030 15:54:48.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.344" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 15:54:48.343" endtime="20201030 15:54:48.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.346" level="INFO">VALUE: [3.3340000000076087e-06, 3.1530000000057345e-06, 2.737000000002654e-06, 3.1529999999918568e-06, 2.7499999999958114e-06, 3.1669999999983656e-06, 2.7219999999966715e-06, 3.1529999999918568e-06, 2.7499999999958114e-06, 3.1389999999992257e-06, 2.750000000009689e-06, 3.1389999999992257e-06, 2.778000000008829e-06, 3.152000000006261e-06, 2.777999999994951e-06, 3.151999999992383e-06, 2.76400000000232e-06, 3.1810000000048744e-06, 2.7499999999958114e-06, 3.1529999999918568e-06, 2.777999999994951e-06, 3.1800000000054007e-06, 2.7499999999958114e-06, 3.1389999999992257e-06, 2.750000000009689e-06, 3.1389999999992257e-06, 2.7499999999958114e-06, 3.1660000000127697e-06, 2.7499999999958114e-06, 3.1530000000057345e-06, 2.7770000000093553e-06, 3.1389999999992257e-06, 2.722999999996145e-06, 3.1669999999983656e-06, 2.7219999999966715e-06, 3.1389999999992257e-06, 2.750000000009689e-06, 3.152000000006261e-06, 2.791999999987582e-06, 3.1530000000057345e-06, 2.7499999999958114e-06, 3.1669999999983656e-06, 2.7219999999966715e-06, 3.1389999999992257e-06, 2.7360000000031803e-06, 3.1389999999992257e-06, 2.7499999999958114e-06, 3.137999999999752e-06, 2.7499999999958114e-06, 3.1530000000057345e-06]</msg>
<status status="PASS" starttime="20201030 15:54:48.345" endtime="20201030 15:54:48.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.340" endtime="20201030 15:54:48.348"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:48.351" endtime="20201030 15:54:48.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.350" endtime="20201030 15:54:48.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.349" endtime="20201030 15:54:48.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.956" endtime="20201030 15:54:48.372"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:47.887" endtime="20201030 15:54:48.372" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:48.379" endtime="20201030 15:54:48.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.378" endtime="20201030 15:54:48.399"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.412" endtime="20201030 15:54:48.427"></status>
</kw>
<msg timestamp="20201030 15:54:48.428" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.411" endtime="20201030 15:54:48.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.430" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.429" endtime="20201030 15:54:48.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.433" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:48.431" endtime="20201030 15:54:48.433"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:48.408" endtime="20201030 15:54:48.434"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:48.406" endtime="20201030 15:54:48.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.405" endtime="20201030 15:54:48.435"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:48.439" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:48.438" endtime="20201030 15:54:48.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.436" endtime="20201030 15:54:48.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.404" endtime="20201030 15:54:48.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.403" endtime="20201030 15:54:48.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.440" endtime="20201030 15:54:48.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.402" endtime="20201030 15:54:48.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.400" endtime="20201030 15:54:48.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.377" endtime="20201030 15:54:48.443"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.452" endtime="20201030 15:54:48.486"></status>
</kw>
<msg timestamp="20201030 15:54:48.486" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.450" endtime="20201030 15:54:48.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.489" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.487" endtime="20201030 15:54:48.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.490" endtime="20201030 15:54:48.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.448" endtime="20201030 15:54:48.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.445" endtime="20201030 15:54:48.493"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.495" endtime="20201030 15:54:48.497"></status>
</kw>
<msg timestamp="20201030 15:54:48.497" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:54:48.494" endtime="20201030 15:54:48.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.501" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:48.500" endtime="20201030 15:54:48.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.503" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:48.502" endtime="20201030 15:54:48.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.498" endtime="20201030 15:54:48.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.508" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:48.507" endtime="20201030 15:54:48.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.510" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:48.509" endtime="20201030 15:54:48.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.505" endtime="20201030 15:54:48.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.517" endtime="20201030 15:54:48.804"></status>
</kw>
<msg timestamp="20201030 15:54:48.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065046792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065056986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:48.516" endtime="20201030 15:54:48.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065046792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065056986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:48.808" endtime="20201030 15:54:48.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.816" endtime="20201030 15:54:48.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.513" endtime="20201030 15:54:48.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.511" endtime="20201030 15:54:48.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:48.823" level="INFO">${RESULT} = [{'diff': 1.0193999999991155e-05}, {'diff': 1.0249999999989434e-05}, {'diff': 1.0346999999993889e-05}, {'diff': 1.0179999999998524e-05}, {'diff': 1.03200000000081e-05}, {'diff': 1.0193999999991155e-05...</msg>
<status status="PASS" starttime="20201030 15:54:48.820" endtime="20201030 15:54:48.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:48.827" level="INFO">${OVERHEAD} = {'diff': [1.0193999999991155e-05, 1.0249999999989434e-05, 1.0346999999993889e-05, 1.0179999999998524e-05, 1.03200000000081e-05, 1.0193999999991155e-05, 1.0333000000001258e-05, 1.0179999999998524e-05, ...</msg>
<status status="PASS" starttime="20201030 15:54:48.824" endtime="20201030 15:54:48.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.832" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 15:54:48.831" endtime="20201030 15:54:48.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.834" level="INFO">VALUE: [1.0193999999991155e-05, 1.0249999999989434e-05, 1.0346999999993889e-05, 1.0179999999998524e-05, 1.03200000000081e-05, 1.0193999999991155e-05, 1.0333000000001258e-05, 1.0179999999998524e-05, 1.0333000000001258e-05, 1.0235999999996803e-05, 1.0333000000001258e-05, 1.0180999999997997e-05, 1.0318999999994749e-05, 1.0180999999997997e-05, 1.0374999999993029e-05, 1.0195000000004506e-05, 1.0347999999993363e-05, 1.0167000000005366e-05, 1.0319000000008627e-05, 1.0221999999990294e-05, 1.0333000000001258e-05, 1.0221999999990294e-05, 1.033299999998738e-05, 1.0180999999997997e-05, 1.0361999999999871e-05, 1.0179999999998524e-05, 1.0334000000000731e-05, 1.0165999999992015e-05, 1.0319000000008627e-05, 1.0179999999998524e-05, 1.0334000000000731e-05, 1.0194000000005032e-05, 1.0361000000000398e-05, 1.0166000000005893e-05, 1.0333000000001258e-05, 1.0167000000005366e-05, 1.0333000000001258e-05, 1.0180000000012401e-05, 1.0305999999987714e-05, 1.0193999999991155e-05, 1.0333000000001258e-05, 1.0180999999997997e-05, 1.0333000000001258e-05, 1.0195000000004506e-05, 1.0333000000001258e-05, 1.0237000000010155e-05, 1.0402999999992169e-05, 1.0180999999997997e-05, 1.0319000000008627e-05, 1.0195000000004506e-05]</msg>
<status status="PASS" starttime="20201030 15:54:48.833" endtime="20201030 15:54:48.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.828" endtime="20201030 15:54:48.836"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:48.839" endtime="20201030 15:54:48.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.838" endtime="20201030 15:54:48.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.836" endtime="20201030 15:54:48.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.444" endtime="20201030 15:54:48.860"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:48.374" endtime="20201030 15:54:48.860" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:48.867" endtime="20201030 15:54:48.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.866" endtime="20201030 15:54:48.887"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.903" endtime="20201030 15:54:48.917"></status>
</kw>
<msg timestamp="20201030 15:54:48.918" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.901" endtime="20201030 15:54:48.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.921" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.919" endtime="20201030 15:54:48.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.925" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:48.922" endtime="20201030 15:54:48.926"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:48.897" endtime="20201030 15:54:48.926"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:48.895" endtime="20201030 15:54:48.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.893" endtime="20201030 15:54:48.927"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:48.932" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:48.931" endtime="20201030 15:54:48.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.929" endtime="20201030 15:54:48.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.891" endtime="20201030 15:54:48.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.891" endtime="20201030 15:54:48.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.934" endtime="20201030 15:54:48.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.890" endtime="20201030 15:54:48.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.888" endtime="20201030 15:54:48.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.864" endtime="20201030 15:54:48.938"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.947" endtime="20201030 15:54:49.013"></status>
</kw>
<msg timestamp="20201030 15:54:49.013" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.945" endtime="20201030 15:54:49.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.016" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:49.014" endtime="20201030 15:54:49.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.017" endtime="20201030 15:54:49.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.942" endtime="20201030 15:54:49.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.940" endtime="20201030 15:54:49.020"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.022" endtime="20201030 15:54:49.024"></status>
</kw>
<msg timestamp="20201030 15:54:49.024" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:54:49.021" endtime="20201030 15:54:49.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.028" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:49.027" endtime="20201030 15:54:49.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.031" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:49.030" endtime="20201030 15:54:49.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.025" endtime="20201030 15:54:49.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.036" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:49.034" endtime="20201030 15:54:49.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.039" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:49.038" endtime="20201030 15:54:49.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.032" endtime="20201030 15:54:49.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.046" endtime="20201030 15:54:49.336"></status>
</kw>
<msg timestamp="20201030 15:54:49.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072044944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072061819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:49.044" endtime="20201030 15:54:49.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072044944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072061819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:49.340" endtime="20201030 15:54:49.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.349" endtime="20201030 15:54:49.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.042" endtime="20201030 15:54:49.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.040" endtime="20201030 15:54:49.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:49.355" level="INFO">${RESULT} = [{'diff': 1.687499999999953e-05}, {'diff': 1.686099999999302e-05}, {'diff': 1.7014000000009633e-05}, {'diff': 1.687499999999953e-05}, {'diff': 1.7056000000001403e-05}, {'diff': 1.6917000000005178e-05}...</msg>
<status status="PASS" starttime="20201030 15:54:49.352" endtime="20201030 15:54:49.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:49.359" level="INFO">${OVERHEAD} = {'diff': [1.687499999999953e-05, 1.686099999999302e-05, 1.7014000000009633e-05, 1.687499999999953e-05, 1.7056000000001403e-05, 1.6917000000005178e-05, 1.7028000000002264e-05, 1.6901999999999195e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:54:49.356" endtime="20201030 15:54:49.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.364" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 15:54:49.363" endtime="20201030 15:54:49.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.366" level="INFO">VALUE: [1.687499999999953e-05, 1.686099999999302e-05, 1.7014000000009633e-05, 1.687499999999953e-05, 1.7056000000001403e-05, 1.6917000000005178e-05, 1.7028000000002264e-05, 1.6901999999999195e-05, 1.7041999999994895e-05, 1.690299999999867e-05, 1.701299999999628e-05, 1.6861000000006898e-05, 1.704099999999542e-05, 1.6903000000012547e-05, 1.706899999999456e-05, 1.6903000000012547e-05, 1.704099999999542e-05, 1.684700000000039e-05, 1.7000000000003124e-05, 1.6945000000004318e-05, 1.705500000000193e-05, 1.6888000000006564e-05, 1.705500000000193e-05, 1.6903000000012547e-05, 1.706899999999456e-05, 1.6889000000006038e-05, 1.7056000000001403e-05, 1.6901999999999195e-05, 1.7041999999994895e-05, 1.690299999999867e-05, 1.7069999999994034e-05, 1.6917000000005178e-05, 1.709700000000758e-05, 1.6903000000012547e-05, 1.7042000000008772e-05, 1.6902000000013073e-05, 1.7069999999994034e-05, 1.684700000000039e-05, 1.7000000000003124e-05, 1.687499999999953e-05, 1.704099999999542e-05, 1.6917000000005178e-05, 1.7056000000001403e-05, 1.6917000000005178e-05, 1.7125000000006718e-05, 1.690299999999867e-05, 1.7041999999994895e-05, 1.688899999999216e-05, 1.705500000000193e-05, 1.690299999999867e-05]</msg>
<status status="PASS" starttime="20201030 15:54:49.365" endtime="20201030 15:54:49.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.360" endtime="20201030 15:54:49.368"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:49.372" endtime="20201030 15:54:49.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.371" endtime="20201030 15:54:49.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.370" endtime="20201030 15:54:49.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.939" endtime="20201030 15:54:49.393"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:48.862" endtime="20201030 15:54:49.393" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:49.400" endtime="20201030 15:54:49.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.399" endtime="20201030 15:54:49.420"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.433" endtime="20201030 15:54:49.448"></status>
</kw>
<msg timestamp="20201030 15:54:49.448" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:49.432" endtime="20201030 15:54:49.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.451" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:49.449" endtime="20201030 15:54:49.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.454" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:49.452" endtime="20201030 15:54:49.454"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:49.429" endtime="20201030 15:54:49.455"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:49.427" endtime="20201030 15:54:49.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.426" endtime="20201030 15:54:49.456"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:49.459" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:49.458" endtime="20201030 15:54:49.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.456" endtime="20201030 15:54:49.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.425" endtime="20201030 15:54:49.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.424" endtime="20201030 15:54:49.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.461" endtime="20201030 15:54:49.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.423" endtime="20201030 15:54:49.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.421" endtime="20201030 15:54:49.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.397" endtime="20201030 15:54:49.464"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.467" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:54:49.476" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:54:50.713" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:54:49.466" endtime="20201030 15:54:50.714"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.717" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:54:50.715" endtime="20201030 15:54:50.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.464" endtime="20201030 15:54:50.718"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.729" endtime="20201030 15:54:50.737"></status>
</kw>
<msg timestamp="20201030 15:54:50.737" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:50.727" endtime="20201030 15:54:50.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.740" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:50.739" endtime="20201030 15:54:50.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.741" endtime="20201030 15:54:50.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.725" endtime="20201030 15:54:50.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.722" endtime="20201030 15:54:50.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.750" endtime="20201030 15:54:51.054"></status>
</kw>
<msg timestamp="20201030 15:54:51.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.319003069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.319007361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:50.749" endtime="20201030 15:54:51.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.319003069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.319007361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:51.059" endtime="20201030 15:54:51.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.070" endtime="20201030 15:54:51.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.746" endtime="20201030 15:54:51.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.744" endtime="20201030 15:54:51.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:51.078" level="INFO">${PHILIP_RES} = [{'diff': 4.2919999998503044e-06}, {'diff': 3.5560000000156577e-06}, {'diff': 3.4859999999969915e-06}, {'diff': 3.514000000093276e-06}, {'diff': 3.5419999999675156e-06}, {'diff': 3.5419999999675156e-0...</msg>
<status status="PASS" starttime="20201030 15:54:51.073" endtime="20201030 15:54:51.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:51.085" level="INFO">${RESULT} = {'diff': [4.2919999998503044e-06, 3.5560000000156577e-06, 3.4859999999969915e-06, 3.514000000093276e-06, 3.5419999999675156e-06, 3.5419999999675156e-06, 3.5419999999675156e-06, 3.5560000000156577e-06,...</msg>
<status status="PASS" starttime="20201030 15:54:51.080" endtime="20201030 15:54:51.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.092" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:51.090" endtime="20201030 15:54:51.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.095" level="INFO">VALUE: [4.2919999998503044e-06, 3.5560000000156577e-06, 3.4859999999969915e-06, 3.514000000093276e-06, 3.5419999999675156e-06, 3.5419999999675156e-06, 3.5419999999675156e-06, 3.5560000000156577e-06, 3.526999999836633e-06, 3.5419999999675156e-06, 3.5270000000586776e-06, 3.6249999999515836e-06, 3.5279999999193734e-06, 3.54200000018956e-06, 3.5419999999675156e-06, 3.5419999999675156e-06, 3.5419999999675156e-06, 3.54100000010682e-06, 3.5419999999675156e-06, 3.540999999884775e-06, 3.5419999999675156e-06, 3.540999999884775e-06, 3.5000000000451337e-06, 3.5419999999675156e-06, 3.528000000141418e-06, 3.5419999999675156e-06, 3.54100000010682e-06, 3.54200000018956e-06, 3.54100000010682e-06, 3.499999999823089e-06, 3.5549999999329174e-06, 3.5419999999675156e-06, 3.5419999999675156e-06, 3.5419999999675156e-06, 3.5560000000156577e-06, 3.5130000000105355e-06, 3.5419999999675156e-06, 3.5270000000586776e-06, 3.5419999999675156e-06, 3.5419999999675156e-06, 3.4869999998576873e-06, 3.5419999999675156e-06, 3.54100000010682e-06, 3.5279999999193734e-06, 3.540999999884775e-06, 3.5279999999193734e-06, 3.540999999884775e-06, 3.5419999999675156e-06, 3.5419999999675156e-06, 3.5549999999329174e-06]</msg>
<status status="PASS" starttime="20201030 15:54:51.093" endtime="20201030 15:54:51.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.086" endtime="20201030 15:54:51.096"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:51.102" endtime="20201030 15:54:51.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.099" endtime="20201030 15:54:51.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.097" endtime="20201030 15:54:51.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.719" endtime="20201030 15:54:51.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.719" endtime="20201030 15:54:51.124"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.133" endtime="20201030 15:54:51.140"></status>
</kw>
<msg timestamp="20201030 15:54:51.141" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:51.131" endtime="20201030 15:54:51.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.143" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:51.142" endtime="20201030 15:54:51.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.144" endtime="20201030 15:54:51.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.128" endtime="20201030 15:54:51.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.126" endtime="20201030 15:54:51.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.154" endtime="20201030 15:54:51.442"></status>
</kw>
<msg timestamp="20201030 15:54:51.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019438583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019444889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:51.152" endtime="20201030 15:54:51.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019438583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019444889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:51.446" endtime="20201030 15:54:51.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.454" endtime="20201030 15:54:51.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.149" endtime="20201030 15:54:51.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.148" endtime="20201030 15:54:51.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:51.461" level="INFO">${PHILIP_RES} = [{'diff': 6.306000000001061e-06}, {'diff': 5.999999999999062e-06}, {'diff': 5.985999999999492e-06}, {'diff': 5.999999999999062e-06}, {'diff': 6.054999999997868e-06}, {'diff': 6.014000000002101e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:51.458" endtime="20201030 15:54:51.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:51.466" level="INFO">${RESULT} = {'diff': [6.306000000001061e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.999999999999062e-06, 6.054999999997868e-06, 6.014000000002101e-06, 6.000000000002531e-06, 5.958000000000352e-06, 6.0279...</msg>
<status status="PASS" starttime="20201030 15:54:51.462" endtime="20201030 15:54:51.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.471" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:51.470" endtime="20201030 15:54:51.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.473" level="INFO">VALUE: [6.306000000001061e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.999999999999062e-06, 6.054999999997868e-06, 6.014000000002101e-06, 6.000000000002531e-06, 5.958000000000352e-06, 6.0279999999982015e-06, 5.985999999999492e-06, 6.028000000001671e-06, 6.0279999999982015e-06, 6.027000000002197e-06, 5.9439999999973125e-06, 5.999999999999062e-06, 6.012999999999158e-06, 6.014000000002101e-06, 6.0829999999970075e-06, 6.056000000000811e-06, 6.0279999999982015e-06, 6.0139999999986316e-06, 5.944000000000782e-06, 5.999999999999062e-06, 5.971999999999922e-06, 6.014000000002101e-06, 6.041000000001767e-06, 6.0139999999986316e-06, 5.999999999999062e-06, 6.026999999998728e-06, 6.028000000001671e-06, 6.014000000002101e-06, 6.055000000001337e-06, 5.999999999999062e-06, 6.0139999999986316e-06, 5.971999999999922e-06, 6.028000000001671e-06, 6.041000000001767e-06, 6.028000000001671e-06, 6.0279999999982015e-06, 6.040999999998298e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.986000000002961e-06, 6.0139999999986316e-06, 6.0139999999986316e-06, 5.958000000000352e-06, 6.0139999999986316e-06, 6.028000000001671e-06, 6.014000000002101e-06, 5.985999999999492e-06]</msg>
<status status="PASS" starttime="20201030 15:54:51.472" endtime="20201030 15:54:51.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.467" endtime="20201030 15:54:51.474"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:51.478" endtime="20201030 15:54:51.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.476" endtime="20201030 15:54:51.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.475" endtime="20201030 15:54:51.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.125" endtime="20201030 15:54:51.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.124" endtime="20201030 15:54:51.499"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.507" endtime="20201030 15:54:51.516"></status>
</kw>
<msg timestamp="20201030 15:54:51.516" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:51.506" endtime="20201030 15:54:51.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.519" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:51.517" endtime="20201030 15:54:51.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.520" endtime="20201030 15:54:51.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.503" endtime="20201030 15:54:51.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.501" endtime="20201030 15:54:51.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.529" endtime="20201030 15:54:51.818"></status>
</kw>
<msg timestamp="20201030 15:54:51.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019191917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019199639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:51.528" endtime="20201030 15:54:51.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019191917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019199639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:51.822" endtime="20201030 15:54:51.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.830" endtime="20201030 15:54:51.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.525" endtime="20201030 15:54:51.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.523" endtime="20201030 15:54:51.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:51.837" level="INFO">${PHILIP_RES} = [{'diff': 7.722000000001672e-06}, {'diff': 7.472000000001422e-06}, {'diff': 7.429999999999243e-06}, {'diff': 7.445000000001756e-06}, {'diff': 7.430999999998716e-06}, {'diff': 7.443999999998813e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:51.834" endtime="20201030 15:54:51.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:51.841" level="INFO">${RESULT} = {'diff': [7.722000000001672e-06, 7.472000000001422e-06, 7.429999999999243e-06, 7.445000000001756e-06, 7.430999999998716e-06, 7.443999999998813e-06, 7.402999999999577e-06, 7.443999999998813e-06, 7.4029...</msg>
<status status="PASS" starttime="20201030 15:54:51.838" endtime="20201030 15:54:51.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.845" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:51.844" endtime="20201030 15:54:51.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.848" level="INFO">VALUE: [7.722000000001672e-06, 7.472000000001422e-06, 7.429999999999243e-06, 7.445000000001756e-06, 7.430999999998716e-06, 7.443999999998813e-06, 7.402999999999577e-06, 7.443999999998813e-06, 7.402999999999577e-06, 7.459000000001326e-06, 7.429999999999243e-06, 7.443999999998813e-06, 7.445000000001756e-06, 7.443999999998813e-06, 7.430999999998716e-06, 7.459000000001326e-06, 7.457999999998383e-06, 7.500000000000562e-06, 7.473000000000896e-06, 7.458000000001852e-06, 7.500000000000562e-06, 7.459000000001326e-06, 7.458000000001852e-06, 7.443999999998813e-06, 7.459000000001326e-06, 7.430000000002712e-06, 7.443999999998813e-06, 7.444999999998286e-06, 7.430000000002712e-06, 7.360999999997397e-06, 7.458999999997856e-06, 7.458000000001852e-06, 7.459000000001326e-06, 7.458999999997856e-06, 7.457999999998383e-06, 7.445000000001756e-06, 7.444999999998286e-06, 7.389000000000007e-06, 7.445000000001756e-06, 7.444999999998286e-06, 7.389000000000007e-06, 7.459000000001326e-06, 7.4719999999979525e-06, 7.472000000001422e-06, 7.459000000001326e-06, 7.443999999998813e-06, 7.443999999998813e-06, 7.389000000000007e-06, 7.457999999998383e-06, 7.443999999998813e-06]</msg>
<status status="PASS" starttime="20201030 15:54:51.846" endtime="20201030 15:54:51.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.842" endtime="20201030 15:54:51.849"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:51.853" endtime="20201030 15:54:51.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.851" endtime="20201030 15:54:51.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.850" endtime="20201030 15:54:51.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.500" endtime="20201030 15:54:51.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.499" endtime="20201030 15:54:51.874"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.883" endtime="20201030 15:54:51.891"></status>
</kw>
<msg timestamp="20201030 15:54:51.892" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:51.881" endtime="20201030 15:54:51.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.894" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:51.893" endtime="20201030 15:54:51.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.895" endtime="20201030 15:54:51.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.878" endtime="20201030 15:54:51.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.876" endtime="20201030 15:54:51.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.904" endtime="20201030 15:54:52.190"></status>
</kw>
<msg timestamp="20201030 15:54:52.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01968275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019691944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:51.903" endtime="20201030 15:54:52.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01968275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019691944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:52.195" endtime="20201030 15:54:52.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.203" endtime="20201030 15:54:52.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.900" endtime="20201030 15:54:52.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.899" endtime="20201030 15:54:52.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:52.210" level="INFO">${PHILIP_RES} = [{'diff': 9.194000000000563e-06}, {'diff': 8.917000000000647e-06}, {'diff': 8.903000000001077e-06}, {'diff': 8.931000000000217e-06}, {'diff': 8.917000000000647e-06}, {'diff': 8.931000000000217e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:52.206" endtime="20201030 15:54:52.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:52.214" level="INFO">${RESULT} = {'diff': [9.194000000000563e-06, 8.917000000000647e-06, 8.903000000001077e-06, 8.931000000000217e-06, 8.917000000000647e-06, 8.931000000000217e-06, 8.916000000001173e-06, 8.916000000001173e-06, 8.9160...</msg>
<status status="PASS" starttime="20201030 15:54:52.211" endtime="20201030 15:54:52.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.221" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:52.217" endtime="20201030 15:54:52.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.224" level="INFO">VALUE: [9.194000000000563e-06, 8.917000000000647e-06, 8.903000000001077e-06, 8.931000000000217e-06, 8.917000000000647e-06, 8.931000000000217e-06, 8.916000000001173e-06, 8.916000000001173e-06, 8.916000000001173e-06, 8.944000000000313e-06, 8.903000000001077e-06, 8.902999999997607e-06, 8.916999999997177e-06, 8.917000000000647e-06, 8.916000000001173e-06, 8.902000000001603e-06, 8.930000000000743e-06, 8.985999999999023e-06, 8.931000000000217e-06, 8.917000000000647e-06, 8.903000000001077e-06, 8.915999999997704e-06, 8.916000000001173e-06, 8.930000000000743e-06, 8.917000000000647e-06, 8.903000000001077e-06, 8.931000000000217e-06, 8.931000000000217e-06, 8.916000000001173e-06, 8.916000000001173e-06, 8.929999999997273e-06, 8.930999999996747e-06, 8.931000000000217e-06, 8.917000000000647e-06, 8.917000000000647e-06, 8.931000000000217e-06, 8.930000000000743e-06, 8.930000000000743e-06, 8.917000000000647e-06, 8.931000000000217e-06, 8.931000000000217e-06, 8.958999999999356e-06, 8.917000000000647e-06, 8.930000000000743e-06, 8.930000000000743e-06, 8.917000000000647e-06, 9.000000000002062e-06, 8.917000000000647e-06, 8.931000000000217e-06, 8.917000000000647e-06]</msg>
<status status="PASS" starttime="20201030 15:54:52.222" endtime="20201030 15:54:52.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.215" endtime="20201030 15:54:52.225"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:52.229" endtime="20201030 15:54:52.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.228" endtime="20201030 15:54:52.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.226" endtime="20201030 15:54:52.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.875" endtime="20201030 15:54:52.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.874" endtime="20201030 15:54:52.250"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.258" endtime="20201030 15:54:52.268"></status>
</kw>
<msg timestamp="20201030 15:54:52.269" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:52.257" endtime="20201030 15:54:52.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.271" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:52.270" endtime="20201030 15:54:52.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.272" endtime="20201030 15:54:52.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.254" endtime="20201030 15:54:52.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.252" endtime="20201030 15:54:52.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.286" endtime="20201030 15:54:52.575"></status>
</kw>
<msg timestamp="20201030 15:54:52.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018679347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018690069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:52.284" endtime="20201030 15:54:52.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018679347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018690069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:52.579" endtime="20201030 15:54:52.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.588" endtime="20201030 15:54:52.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.278" endtime="20201030 15:54:52.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.276" endtime="20201030 15:54:52.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:52.594" level="INFO">${PHILIP_RES} = [{'diff': 1.0722000000001203e-05}, {'diff': 1.0443999999998343e-05}, {'diff': 1.0429999999998774e-05}, {'diff': 1.0431000000001717e-05}, {'diff': 1.0472000000000953e-05}, {'diff': 1.0431000000001717e-...</msg>
<status status="PASS" starttime="20201030 15:54:52.591" endtime="20201030 15:54:52.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:52.600" level="INFO">${RESULT} = {'diff': [1.0722000000001203e-05, 1.0443999999998343e-05, 1.0429999999998774e-05, 1.0431000000001717e-05, 1.0472000000000953e-05, 1.0431000000001717e-05, 1.0429999999998774e-05, 1.0403000000002577e-05...</msg>
<status status="PASS" starttime="20201030 15:54:52.595" endtime="20201030 15:54:52.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.604" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:52.603" endtime="20201030 15:54:52.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.606" level="INFO">VALUE: [1.0722000000001203e-05, 1.0443999999998343e-05, 1.0429999999998774e-05, 1.0431000000001717e-05, 1.0472000000000953e-05, 1.0431000000001717e-05, 1.0429999999998774e-05, 1.0403000000002577e-05, 1.0402999999999107e-05, 1.0430999999998247e-05, 1.0388999999999537e-05, 1.0416999999998677e-05, 1.0431000000001717e-05, 1.0430000000002243e-05, 1.0430999999998247e-05, 1.0430000000002243e-05, 1.0431000000001717e-05, 1.0429999999998774e-05, 1.0430999999998247e-05, 1.0416000000002673e-05, 1.0430999999998247e-05, 1.0374999999999968e-05, 1.0374999999999968e-05, 1.0443999999998343e-05, 1.0471999999997483e-05, 1.0430000000002243e-05, 1.0430999999998247e-05, 1.0431000000001717e-05, 1.0430000000002243e-05, 1.0458999999997387e-05, 1.0415999999999204e-05, 1.0431000000001717e-05, 1.0443999999998343e-05, 1.0416999999998677e-05, 1.0486000000000523e-05, 1.0430999999998247e-05, 1.0429999999998774e-05, 1.0486000000000523e-05, 1.0416999999998677e-05, 1.0445000000001287e-05, 1.0417000000002147e-05, 1.0430999999998247e-05, 1.0388999999999537e-05, 1.0430000000002243e-05, 1.0445000000001287e-05, 1.0485999999997053e-05, 1.0431000000001717e-05, 1.0443999999998343e-05, 1.0444999999997817e-05, 1.0430000000002243e-05]</msg>
<status status="PASS" starttime="20201030 15:54:52.605" endtime="20201030 15:54:52.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.600" endtime="20201030 15:54:52.608"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:52.611" endtime="20201030 15:54:52.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.610" endtime="20201030 15:54:52.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.609" endtime="20201030 15:54:52.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.251" endtime="20201030 15:54:52.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.250" endtime="20201030 15:54:52.632"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.640" endtime="20201030 15:54:52.649"></status>
</kw>
<msg timestamp="20201030 15:54:52.649" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:52.639" endtime="20201030 15:54:52.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.651" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:52.650" endtime="20201030 15:54:52.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.653" endtime="20201030 15:54:52.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.636" endtime="20201030 15:54:52.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.634" endtime="20201030 15:54:52.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.662" endtime="20201030 15:54:52.948"></status>
</kw>
<msg timestamp="20201030 15:54:52.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018597194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018609444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:52.660" endtime="20201030 15:54:52.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018597194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018609444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:52.952" endtime="20201030 15:54:52.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.961" endtime="20201030 15:54:52.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.657" endtime="20201030 15:54:52.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.656" endtime="20201030 15:54:52.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:52.968" level="INFO">${PHILIP_RES} = [{'diff': 1.2249999999998373e-05}, {'diff': 1.1943999999999844e-05}, {'diff': 1.1971999999998983e-05}, {'diff': 1.1957999999999414e-05}, {'diff': 1.1957999999999414e-05}, {'diff': 1.1917000000000177e-...</msg>
<status status="PASS" starttime="20201030 15:54:52.965" endtime="20201030 15:54:52.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:52.973" level="INFO">${RESULT} = {'diff': [1.2249999999998373e-05, 1.1943999999999844e-05, 1.1971999999998983e-05, 1.1957999999999414e-05, 1.1957999999999414e-05, 1.1917000000000177e-05, 1.1901999999997664e-05, 1.1985999999998553e-05...</msg>
<status status="PASS" starttime="20201030 15:54:52.969" endtime="20201030 15:54:52.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.977" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:52.976" endtime="20201030 15:54:52.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.980" level="INFO">VALUE: [1.2249999999998373e-05, 1.1943999999999844e-05, 1.1971999999998983e-05, 1.1957999999999414e-05, 1.1957999999999414e-05, 1.1917000000000177e-05, 1.1901999999997664e-05, 1.1985999999998553e-05, 1.1957999999999414e-05, 1.201299999999822e-05, 1.1943999999999844e-05, 1.1957999999999414e-05, 1.1943999999999844e-05, 1.1971999999998983e-05, 1.1901999999997664e-05, 1.1930999999999747e-05, 1.1957999999999414e-05, 1.1957999999999414e-05, 1.1943999999999844e-05, 1.1957999999999414e-05, 1.1887999999998095e-05, 1.1957999999999414e-05, 1.1929999999996804e-05, 1.1957999999999414e-05, 1.1944000000003313e-05, 1.1957999999999414e-05, 1.1958000000002883e-05, 1.1957999999999414e-05, 1.1972000000002453e-05, 1.1971999999998983e-05, 1.1943999999999844e-05, 1.1957999999999414e-05, 1.1943999999999844e-05, 1.1957999999999414e-05, 1.1971999999998983e-05, 1.1917000000000177e-05, 1.1957999999999414e-05, 1.1971999999998983e-05, 1.1957999999999414e-05, 1.1971999999998983e-05, 1.1971999999998983e-05, 1.1943999999999844e-05, 1.1971999999998983e-05, 1.1972000000002453e-05, 1.1958999999998887e-05, 1.1917000000000177e-05, 1.1958999999998887e-05, 1.1958000000002883e-05, 1.1903000000000608e-05, 1.1958000000002883e-05]</msg>
<status status="PASS" starttime="20201030 15:54:52.978" endtime="20201030 15:54:52.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.973" endtime="20201030 15:54:52.981"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:52.985" endtime="20201030 15:54:53.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.983" endtime="20201030 15:54:53.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.982" endtime="20201030 15:54:53.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.633" endtime="20201030 15:54:53.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.632" endtime="20201030 15:54:53.005"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.014" endtime="20201030 15:54:53.023"></status>
</kw>
<msg timestamp="20201030 15:54:53.024" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:53.012" endtime="20201030 15:54:53.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.026" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:53.025" endtime="20201030 15:54:53.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.027" endtime="20201030 15:54:53.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.010" endtime="20201030 15:54:53.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.008" endtime="20201030 15:54:53.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.036" endtime="20201030 15:54:53.324"></status>
</kw>
<msg timestamp="20201030 15:54:53.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019428361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019442139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:53.035" endtime="20201030 15:54:53.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019428361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019442139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:53.328" endtime="20201030 15:54:53.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.337" endtime="20201030 15:54:53.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.032" endtime="20201030 15:54:53.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.030" endtime="20201030 15:54:53.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:53.343" level="INFO">${PHILIP_RES} = [{'diff': 1.3777999999999013e-05}, {'diff': 1.3556000000001373e-05}, {'diff': 1.3528000000002233e-05}, {'diff': 1.3584000000000512e-05}, {'diff': 1.3499999999999623e-05}, {'diff': 1.3513999999999193e-...</msg>
<status status="PASS" starttime="20201030 15:54:53.340" endtime="20201030 15:54:53.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:53.348" level="INFO">${RESULT} = {'diff': [1.3777999999999013e-05, 1.3556000000001373e-05, 1.3528000000002233e-05, 1.3584000000000512e-05, 1.3499999999999623e-05, 1.3513999999999193e-05, 1.3556000000001373e-05, 1.3513999999999193e-05...</msg>
<status status="PASS" starttime="20201030 15:54:53.344" endtime="20201030 15:54:53.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.352" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:53.351" endtime="20201030 15:54:53.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.354" level="INFO">VALUE: [1.3777999999999013e-05, 1.3556000000001373e-05, 1.3528000000002233e-05, 1.3584000000000512e-05, 1.3499999999999623e-05, 1.3513999999999193e-05, 1.3556000000001373e-05, 1.3513999999999193e-05, 1.3541999999998333e-05, 1.3513999999999193e-05, 1.3486000000000054e-05, 1.3513999999999193e-05, 1.352699999999929e-05, 1.3527999999998763e-05, 1.3583999999997043e-05, 1.3528000000002233e-05, 1.3541999999998333e-05, 1.352699999999929e-05, 1.3513999999999193e-05, 1.3513999999999193e-05, 1.3513999999999193e-05, 1.3513999999999193e-05, 1.354099999999886e-05, 1.3528000000002233e-05, 1.3527999999998763e-05, 1.3583000000001039e-05, 1.3541999999998333e-05, 1.3513999999999193e-05, 1.3541999999998333e-05, 1.3528000000002233e-05, 1.354099999999886e-05, 1.3528000000002233e-05, 1.3541999999998333e-05, 1.3500000000003093e-05, 1.3541999999998333e-05, 1.351299999999972e-05, 1.3527999999998763e-05, 1.3514000000002663e-05, 1.354099999999886e-05, 1.3528000000002233e-05, 1.352699999999929e-05, 1.3583000000001039e-05, 1.3513999999999193e-05, 1.3528000000002233e-05, 1.3527999999998763e-05, 1.3514000000002663e-05, 1.3541999999998333e-05, 1.3486000000000054e-05, 1.354099999999886e-05, 1.3458000000000914e-05]</msg>
<status status="PASS" starttime="20201030 15:54:53.353" endtime="20201030 15:54:53.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.348" endtime="20201030 15:54:53.365"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:53.369" endtime="20201030 15:54:53.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.367" endtime="20201030 15:54:53.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.366" endtime="20201030 15:54:53.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.006" endtime="20201030 15:54:53.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.006" endtime="20201030 15:54:53.390"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.398" endtime="20201030 15:54:53.407"></status>
</kw>
<msg timestamp="20201030 15:54:53.408" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:53.397" endtime="20201030 15:54:53.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.410" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:53.409" endtime="20201030 15:54:53.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.411" endtime="20201030 15:54:53.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.394" endtime="20201030 15:54:53.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.392" endtime="20201030 15:54:53.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.420" endtime="20201030 15:54:53.707"></status>
</kw>
<msg timestamp="20201030 15:54:53.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018800792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018816181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:53.419" endtime="20201030 15:54:53.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018800792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018816181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:53.711" endtime="20201030 15:54:53.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.720" endtime="20201030 15:54:53.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.416" endtime="20201030 15:54:53.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.415" endtime="20201030 15:54:53.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:53.726" level="INFO">${PHILIP_RES} = [{'diff': 1.538900000000107e-05}, {'diff': 1.5083000000002539e-05}, {'diff': 1.509699999999864e-05}, {'diff': 1.505499999999993e-05}, {'diff': 1.5083000000002539e-05}, {'diff': 1.505499999999993e-05},...</msg>
<status status="PASS" starttime="20201030 15:54:53.723" endtime="20201030 15:54:53.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:53.731" level="INFO">${RESULT} = {'diff': [1.538900000000107e-05, 1.5083000000002539e-05, 1.509699999999864e-05, 1.505499999999993e-05, 1.5083000000002539e-05, 1.505499999999993e-05, 1.5124999999997779e-05, 1.5111000000001679e-05, 1....</msg>
<status status="PASS" starttime="20201030 15:54:53.727" endtime="20201030 15:54:53.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.736" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:53.735" endtime="20201030 15:54:53.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.738" level="INFO">VALUE: [1.538900000000107e-05, 1.5083000000002539e-05, 1.509699999999864e-05, 1.505499999999993e-05, 1.5083000000002539e-05, 1.505499999999993e-05, 1.5124999999997779e-05, 1.5111000000001679e-05, 1.5111000000001679e-05, 1.508299999999907e-05, 1.509699999999864e-05, 1.509699999999864e-05, 1.5125000000001249e-05, 1.5111000000001679e-05, 1.511099999999821e-05, 1.508299999999907e-05, 1.511099999999821e-05, 1.5111000000001679e-05, 1.5097000000002109e-05, 1.511099999999821e-05, 1.5180000000000055e-05, 1.511099999999821e-05, 1.5097000000002109e-05, 1.5180000000000055e-05, 1.509699999999864e-05, 1.5166000000000485e-05, 1.5179999999996585e-05, 1.5097000000002109e-05, 1.5111000000001679e-05, 1.5139000000000818e-05, 1.509699999999864e-05, 1.5137999999997875e-05, 1.5111000000001679e-05, 1.5125000000001249e-05, 1.5028000000000263e-05, 1.511099999999821e-05, 1.5111000000001679e-05, 1.5112000000001152e-05, 1.511099999999821e-05, 1.5111999999997683e-05, 1.5111000000001679e-05, 1.5098000000001582e-05, 1.5098000000001582e-05, 1.5097999999998113e-05, 1.5124999999997779e-05, 1.5112000000001152e-05, 1.5111000000001679e-05, 1.5097999999998113e-05, 1.511099999999821e-05, 1.5111000000001679e-05]</msg>
<status status="PASS" starttime="20201030 15:54:53.737" endtime="20201030 15:54:53.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.732" endtime="20201030 15:54:53.740"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:53.743" endtime="20201030 15:54:53.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.742" endtime="20201030 15:54:53.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.740" endtime="20201030 15:54:53.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.391" endtime="20201030 15:54:53.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.390" endtime="20201030 15:54:53.764"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.772" endtime="20201030 15:54:53.782"></status>
</kw>
<msg timestamp="20201030 15:54:53.782" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:53.771" endtime="20201030 15:54:53.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.785" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:53.783" endtime="20201030 15:54:53.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.786" endtime="20201030 15:54:53.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.768" endtime="20201030 15:54:53.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.766" endtime="20201030 15:54:53.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.795" endtime="20201030 15:54:54.082"></status>
</kw>
<msg timestamp="20201030 15:54:54.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018494681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018511681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:53.793" endtime="20201030 15:54:54.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018494681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018511681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:54.087" endtime="20201030 15:54:54.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.095" endtime="20201030 15:54:54.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.791" endtime="20201030 15:54:54.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.789" endtime="20201030 15:54:54.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:54.102" level="INFO">${PHILIP_RES} = [{'diff': 1.6999999999999654e-05}, {'diff': 1.6722999999999738e-05}, {'diff': 1.6708000000000695e-05}, {'diff': 1.6722000000000264e-05}, {'diff': 1.6708000000000695e-05}, {'diff': 1.6736999999999308e-...</msg>
<status status="PASS" starttime="20201030 15:54:54.099" endtime="20201030 15:54:54.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:54.107" level="INFO">${RESULT} = {'diff': [1.6999999999999654e-05, 1.6722999999999738e-05, 1.6708000000000695e-05, 1.6722000000000264e-05, 1.6708000000000695e-05, 1.6736999999999308e-05, 1.6750000000002874e-05, 1.6735999999999834e-05...</msg>
<status status="PASS" starttime="20201030 15:54:54.103" endtime="20201030 15:54:54.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.111" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:54.110" endtime="20201030 15:54:54.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.113" level="INFO">VALUE: [1.6999999999999654e-05, 1.6722999999999738e-05, 1.6708000000000695e-05, 1.6722000000000264e-05, 1.6708000000000695e-05, 1.6736999999999308e-05, 1.6750000000002874e-05, 1.6735999999999834e-05, 1.6722000000000264e-05, 1.6722000000000264e-05, 1.6735999999999834e-05, 1.6750000000002874e-05, 1.6709000000000168e-05, 1.6735999999999834e-05, 1.6735999999999834e-05, 1.6721999999996795e-05, 1.6735999999999834e-05, 1.6722999999999738e-05, 1.6722000000000264e-05, 1.6735999999999834e-05, 1.6735999999999834e-05, 1.6749999999999404e-05, 1.6722000000000264e-05, 1.6722000000000264e-05, 1.6736999999999308e-05, 1.6749999999999404e-05, 1.6722000000000264e-05, 1.6708000000000695e-05, 1.6722000000000264e-05, 1.6749999999999404e-05, 1.6750000000002874e-05, 1.6722000000000264e-05, 1.6722000000000264e-05, 1.6722000000000264e-05, 1.668099999999756e-05, 1.6736000000003304e-05, 1.6722999999999738e-05, 1.6722000000000264e-05, 1.6735999999999834e-05, 1.6735999999999834e-05, 1.6722000000000264e-05, 1.6722000000000264e-05, 1.6763999999998974e-05, 1.6749999999999404e-05, 1.6721999999996795e-05, 1.6764000000002444e-05, 1.6735999999999834e-05, 1.6735999999999834e-05, 1.6722000000000264e-05, 1.6735999999999834e-05]</msg>
<status status="PASS" starttime="20201030 15:54:54.112" endtime="20201030 15:54:54.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.107" endtime="20201030 15:54:54.115"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:54.118" endtime="20201030 15:54:54.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.117" endtime="20201030 15:54:54.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.116" endtime="20201030 15:54:54.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.765" endtime="20201030 15:54:54.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.764" endtime="20201030 15:54:54.139"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.148" endtime="20201030 15:54:54.159"></status>
</kw>
<msg timestamp="20201030 15:54:54.159" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:54.146" endtime="20201030 15:54:54.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.162" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:54.160" endtime="20201030 15:54:54.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.163" endtime="20201030 15:54:54.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.143" endtime="20201030 15:54:54.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.142" endtime="20201030 15:54:54.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.172" endtime="20201030 15:54:54.458"></status>
</kw>
<msg timestamp="20201030 15:54:54.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019544069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019562736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:54.170" endtime="20201030 15:54:54.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019544069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019562736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:54.462" endtime="20201030 15:54:54.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.471" endtime="20201030 15:54:54.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.168" endtime="20201030 15:54:54.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.166" endtime="20201030 15:54:54.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:54.477" level="INFO">${PHILIP_RES} = [{'diff': 1.866699999999999e-05}, {'diff': 1.836100000000146e-05}, {'diff': 1.837499999999756e-05}, {'diff': 1.8402000000000696e-05}, {'diff': 1.834699999999842e-05}, {'diff': 1.837500000000103e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:54:54.474" endtime="20201030 15:54:54.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:54.482" level="INFO">${RESULT} = {'diff': [1.866699999999999e-05, 1.836100000000146e-05, 1.837499999999756e-05, 1.8402000000000696e-05, 1.834699999999842e-05, 1.837500000000103e-05, 1.8388000000001126e-05, 1.833299999999885e-05, 1.83...</msg>
<status status="PASS" starttime="20201030 15:54:54.478" endtime="20201030 15:54:54.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.486" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:54.485" endtime="20201030 15:54:54.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.488" level="INFO">VALUE: [1.866699999999999e-05, 1.836100000000146e-05, 1.837499999999756e-05, 1.8402000000000696e-05, 1.834699999999842e-05, 1.837500000000103e-05, 1.8388000000001126e-05, 1.833299999999885e-05, 1.83890000000006e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.836100000000146e-05, 1.834700000000189e-05, 1.8362000000000933e-05, 1.837500000000103e-05, 1.8362000000000933e-05, 1.837499999999756e-05, 1.837499999999756e-05, 1.840300000000017e-05, 1.836100000000146e-05, 1.8348000000001363e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.843099999999931e-05, 1.8334000000001793e-05, 1.836099999999799e-05, 1.836099999999799e-05, 1.836099999999799e-05, 1.834699999999842e-05, 1.8347999999997894e-05, 1.834699999999842e-05, 1.8429999999999835e-05, 1.830499999999971e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.8320000000002223e-05, 1.836099999999799e-05, 1.8362000000000933e-05, 1.837499999999756e-05, 1.837499999999756e-05, 1.843100000000278e-05, 1.833299999999885e-05, 1.8348000000001363e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.834700000000189e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.837499999999756e-05]</msg>
<status status="PASS" starttime="20201030 15:54:54.487" endtime="20201030 15:54:54.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.482" endtime="20201030 15:54:54.491"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:54.494" endtime="20201030 15:54:54.514"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.493" endtime="20201030 15:54:54.514"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.492" endtime="20201030 15:54:54.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.140" endtime="20201030 15:54:54.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.140" endtime="20201030 15:54:54.515"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.523" endtime="20201030 15:54:54.533"></status>
</kw>
<msg timestamp="20201030 15:54:54.534" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:54.522" endtime="20201030 15:54:54.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.536" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:54.535" endtime="20201030 15:54:54.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.537" endtime="20201030 15:54:54.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.519" endtime="20201030 15:54:54.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.517" endtime="20201030 15:54:54.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.546" endtime="20201030 15:54:54.832"></status>
</kw>
<msg timestamp="20201030 15:54:54.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018685528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018705847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:54.545" endtime="20201030 15:54:54.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018685528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018705847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:54.836" endtime="20201030 15:54:54.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.844" endtime="20201030 15:54:54.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.542" endtime="20201030 15:54:54.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.540" endtime="20201030 15:54:54.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:54.851" level="INFO">${PHILIP_RES} = [{'diff': 2.031900000000128e-05}, {'diff': 1.9972000000000045e-05}, {'diff': 2.005499999999799e-05}, {'diff': 2.009700000000017e-05}, {'diff': 2.004100000000189e-05}, {'diff': 2.0041999999997895e-05},...</msg>
<status status="PASS" starttime="20201030 15:54:54.848" endtime="20201030 15:54:54.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:54.856" level="INFO">${RESULT} = {'diff': [2.031900000000128e-05, 1.9972000000000045e-05, 2.005499999999799e-05, 2.009700000000017e-05, 2.004100000000189e-05, 2.0041999999997895e-05, 2.004099999999842e-05, 2.0056000000000934e-05, 2.0...</msg>
<status status="PASS" starttime="20201030 15:54:54.852" endtime="20201030 15:54:54.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.860" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:54.859" endtime="20201030 15:54:54.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.863" level="INFO">VALUE: [2.031900000000128e-05, 1.9972000000000045e-05, 2.005499999999799e-05, 2.009700000000017e-05, 2.004100000000189e-05, 2.0041999999997895e-05, 2.004099999999842e-05, 2.0056000000000934e-05, 2.0042000000001364e-05, 2.005500000000146e-05, 2.0027999999998325e-05, 2.004099999999842e-05, 2.0042000000001364e-05, 2.004100000000189e-05, 2.0041999999997895e-05, 2.0056000000000934e-05, 2.0028000000001794e-05, 2.0028000000001794e-05, 2.004099999999842e-05, 2.0041999999997895e-05, 2.004100000000189e-05, 2.0056000000000934e-05, 2.004099999999842e-05, 1.9985999999999615e-05, 2.0042000000001364e-05, 2.0042000000001364e-05, 2.0056000000000934e-05, 2.009700000000017e-05, 2.0028000000001794e-05, 2.0013999999998755e-05, 2.0042000000001364e-05, 2.0055999999997465e-05, 2.004099999999842e-05, 2.001299999999928e-05, 2.004100000000189e-05, 2.002699999999885e-05, 2.004099999999842e-05, 2.0042000000001364e-05, 2.004100000000189e-05, 2.0042000000001364e-05, 2.0055999999997465e-05, 2.009700000000017e-05, 2.0042000000001364e-05, 2.002699999999885e-05, 2.0041999999997895e-05, 2.004099999999842e-05, 2.0042000000001364e-05, 2.006900000000103e-05, 2.004099999999842e-05, 2.0041999999997895e-05]</msg>
<status status="PASS" starttime="20201030 15:54:54.861" endtime="20201030 15:54:54.864"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.857" endtime="20201030 15:54:54.864"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:54.868" endtime="20201030 15:54:54.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.866" endtime="20201030 15:54:54.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.865" endtime="20201030 15:54:54.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.516" endtime="20201030 15:54:54.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.515" endtime="20201030 15:54:54.888"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.897" endtime="20201030 15:54:54.908"></status>
</kw>
<msg timestamp="20201030 15:54:54.908" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:54.895" endtime="20201030 15:54:54.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.910" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:54.909" endtime="20201030 15:54:54.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.912" endtime="20201030 15:54:54.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.893" endtime="20201030 15:54:54.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.891" endtime="20201030 15:54:54.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.921" endtime="20201030 15:54:55.207"></status>
</kw>
<msg timestamp="20201030 15:54:55.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018609306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018631361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:54.919" endtime="20201030 15:54:55.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018609306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018631361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:55.211" endtime="20201030 15:54:55.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.220" endtime="20201030 15:54:55.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.916" endtime="20201030 15:54:55.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.915" endtime="20201030 15:54:55.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:55.227" level="INFO">${PHILIP_RES} = [{'diff': 2.205499999999999e-05}, {'diff': 2.1721999999998326e-05}, {'diff': 2.1750000000000935e-05}, {'diff': 2.1764000000000505e-05}, {'diff': 2.173699999999737e-05}, {'diff': 2.1721999999998326e-05...</msg>
<status status="PASS" starttime="20201030 15:54:55.224" endtime="20201030 15:54:55.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:55.231" level="INFO">${RESULT} = {'diff': [2.205499999999999e-05, 2.1721999999998326e-05, 2.1750000000000935e-05, 2.1764000000000505e-05, 2.173699999999737e-05, 2.1721999999998326e-05, 2.1735999999997896e-05, 2.1721999999998326e-05, ...</msg>
<status status="PASS" starttime="20201030 15:54:55.228" endtime="20201030 15:54:55.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.236" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:55.235" endtime="20201030 15:54:55.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.238" level="INFO">VALUE: [2.205499999999999e-05, 2.1721999999998326e-05, 2.1750000000000935e-05, 2.1764000000000505e-05, 2.173699999999737e-05, 2.1721999999998326e-05, 2.1735999999997896e-05, 2.1721999999998326e-05, 2.172300000000127e-05, 2.1750000000000935e-05, 2.1736000000001365e-05, 2.1819999999998785e-05, 2.1750000000000935e-05, 2.169500000000213e-05, 2.1749999999997466e-05, 2.1735999999997896e-05, 2.1735999999997896e-05, 2.1721999999998326e-05, 2.1736000000001365e-05, 2.17090000000017e-05, 2.1736000000001365e-05, 2.1736000000001365e-05, 2.1750000000000935e-05, 2.1708000000002226e-05, 2.1749999999997466e-05, 2.1735999999997896e-05, 2.1764000000000505e-05, 2.1750000000000935e-05, 2.169499999999866e-05, 2.1750000000000935e-05, 2.1693999999999186e-05, 2.172300000000127e-05, 2.1722000000001795e-05, 2.1721999999998326e-05, 2.173699999999737e-05, 2.1721999999998326e-05, 2.1749999999997466e-05, 2.1693999999999186e-05, 2.1750000000000935e-05, 2.1722000000001795e-05, 2.1722000000001795e-05, 2.1736000000001365e-05, 2.1736000000001365e-05, 2.1721999999998326e-05, 2.1707999999998756e-05, 2.1749999999997466e-05, 2.1735999999997896e-05, 2.1750000000000935e-05, 2.1693999999999186e-05, 2.1750000000000935e-05]</msg>
<status status="PASS" starttime="20201030 15:54:55.237" endtime="20201030 15:54:55.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.232" endtime="20201030 15:54:55.239"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:55.243" endtime="20201030 15:54:55.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.242" endtime="20201030 15:54:55.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.240" endtime="20201030 15:54:55.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.889" endtime="20201030 15:54:55.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.889" endtime="20201030 15:54:55.264"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.280" endtime="20201030 15:54:55.294"></status>
</kw>
<msg timestamp="20201030 15:54:55.295" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:55.277" endtime="20201030 15:54:55.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.300" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:55.297" endtime="20201030 15:54:55.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.302" endtime="20201030 15:54:55.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.272" endtime="20201030 15:54:55.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.268" endtime="20201030 15:54:55.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.321" endtime="20201030 15:54:55.613"></status>
</kw>
<msg timestamp="20201030 15:54:55.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029742069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029765833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:55.318" endtime="20201030 15:54:55.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029742069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029765833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:55.618" endtime="20201030 15:54:55.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.626" endtime="20201030 15:54:55.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.312" endtime="20201030 15:54:55.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.309" endtime="20201030 15:54:55.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:55.632" level="INFO">${PHILIP_RES} = [{'diff': 2.3763999999999036e-05}, {'diff': 2.3485999999999646e-05}, {'diff': 2.3485999999999646e-05}, {'diff': 2.3472000000000076e-05}, {'diff': 2.347299999999955e-05}, {'diff': 2.3458000000000506e-0...</msg>
<status status="PASS" starttime="20201030 15:54:55.629" endtime="20201030 15:54:55.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:55.637" level="INFO">${RESULT} = {'diff': [2.3763999999999036e-05, 2.3485999999999646e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.347299999999955e-05, 2.3458000000000506e-05, 2.3457999999997037e-05, 2.3513999999998786e-05,...</msg>
<status status="PASS" starttime="20201030 15:54:55.633" endtime="20201030 15:54:55.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.641" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:55.640" endtime="20201030 15:54:55.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.643" level="INFO">VALUE: [2.3763999999999036e-05, 2.3485999999999646e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.347299999999955e-05, 2.3458000000000506e-05, 2.3457999999997037e-05, 2.3513999999998786e-05, 2.3458000000000506e-05, 2.3513999999998786e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.3429999999997897e-05, 2.3472000000000076e-05, 2.341700000000127e-05, 2.345899999999998e-05, 2.3472000000000076e-05, 2.3458000000000506e-05, 2.3486000000003115e-05, 2.3472000000000076e-05, 2.347299999999955e-05, 2.3513999999998786e-05, 2.3458000000000506e-05, 2.3444000000000936e-05, 2.3472000000000076e-05, 2.3526999999998882e-05, 2.348699999999912e-05, 2.3458000000003976e-05, 2.3500000000002685e-05, 2.3514000000002255e-05, 2.3486000000003115e-05, 2.345900000000345e-05, 2.347300000000302e-05, 2.3471999999996607e-05, 2.338899999999866e-05, 2.3471999999996607e-05, 2.345899999999651e-05, 2.347299999999608e-05, 2.3471999999996607e-05, 2.3458000000003976e-05, 2.3472000000003546e-05, 2.3486000000003115e-05, 2.3472000000003546e-05, 2.347300000000302e-05, 2.3457999999997037e-05, 2.3457999999997037e-05, 2.3457999999997037e-05, 2.3471999999996607e-05, 2.347299999999608e-05, 2.3486000000003115e-05]</msg>
<status status="PASS" starttime="20201030 15:54:55.642" endtime="20201030 15:54:55.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.637" endtime="20201030 15:54:55.648"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:55.651" endtime="20201030 15:54:55.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.650" endtime="20201030 15:54:55.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.649" endtime="20201030 15:54:55.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.265" endtime="20201030 15:54:55.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.264" endtime="20201030 15:54:55.672"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.680" endtime="20201030 15:54:55.692"></status>
</kw>
<msg timestamp="20201030 15:54:55.692" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:55.679" endtime="20201030 15:54:55.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.694" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:55.693" endtime="20201030 15:54:55.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.696" endtime="20201030 15:54:55.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.676" endtime="20201030 15:54:55.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.674" endtime="20201030 15:54:55.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.705" endtime="20201030 15:54:55.990"></status>
</kw>
<msg timestamp="20201030 15:54:55.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018629417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018654931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:55.703" endtime="20201030 15:54:55.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018629417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018654931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:55.994" endtime="20201030 15:54:56.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.003" endtime="20201030 15:54:56.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.700" endtime="20201030 15:54:56.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.699" endtime="20201030 15:54:56.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:56.009" level="INFO">${PHILIP_RES} = [{'diff': 2.5514000000000786e-05}, {'diff': 2.5221999999998357e-05}, {'diff': 2.522299999999783e-05}, {'diff': 2.522299999999783e-05}, {'diff': 2.5235999999997927e-05}, {'diff': 2.5222000000001826e-05...</msg>
<status status="PASS" starttime="20201030 15:54:56.006" endtime="20201030 15:54:56.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:56.014" level="INFO">${RESULT} = {'diff': [2.5514000000000786e-05, 2.5221999999998357e-05, 2.522299999999783e-05, 2.522299999999783e-05, 2.5235999999997927e-05, 2.5222000000001826e-05, 2.5291000000000202e-05, 2.5221999999998357e-05, ...</msg>
<status status="PASS" starttime="20201030 15:54:56.010" endtime="20201030 15:54:56.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.018" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:56.017" endtime="20201030 15:54:56.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.021" level="INFO">VALUE: [2.5514000000000786e-05, 2.5221999999998357e-05, 2.522299999999783e-05, 2.522299999999783e-05, 2.5235999999997927e-05, 2.5222000000001826e-05, 2.5291000000000202e-05, 2.5221999999998357e-05, 2.5207999999998787e-05, 2.5222000000001826e-05, 2.5221999999998357e-05, 2.5221999999998357e-05, 2.5208000000002256e-05, 2.5208000000002256e-05, 2.522299999999783e-05, 2.519499999999869e-05, 2.52230000000013e-05, 2.5222000000001826e-05, 2.518100000000259e-05, 2.519499999999869e-05, 2.5208000000002256e-05, 2.5221999999998357e-05, 2.5235999999997927e-05, 2.5222000000001826e-05, 2.5222000000001826e-05, 2.5207999999998787e-05, 2.5235999999997927e-05, 2.520900000000173e-05, 2.5207999999998787e-05, 2.52230000000013e-05, 2.522299999999783e-05, 2.5221999999998357e-05, 2.5236000000001396e-05, 2.5221999999998357e-05, 2.5221999999998357e-05, 2.5222000000001826e-05, 2.5208000000002256e-05, 2.5221999999998357e-05, 2.5207999999998787e-05, 2.5222000000001826e-05, 2.515299999999998e-05, 2.520899999999826e-05, 2.5278000000000106e-05, 2.523700000000087e-05, 2.5236000000001396e-05, 2.5221999999998357e-05, 2.5207999999998787e-05, 2.5208000000002256e-05, 2.5291999999999676e-05, 2.5221999999998357e-05]</msg>
<status status="PASS" starttime="20201030 15:54:56.019" endtime="20201030 15:54:56.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.015" endtime="20201030 15:54:56.022"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:56.026" endtime="20201030 15:54:56.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.024" endtime="20201030 15:54:56.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.023" endtime="20201030 15:54:56.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.673" endtime="20201030 15:54:56.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.672" endtime="20201030 15:54:56.046"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.055" endtime="20201030 15:54:56.065"></status>
</kw>
<msg timestamp="20201030 15:54:56.066" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.053" endtime="20201030 15:54:56.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.068" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.067" endtime="20201030 15:54:56.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.069" endtime="20201030 15:54:56.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.051" endtime="20201030 15:54:56.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.049" endtime="20201030 15:54:56.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.078" endtime="20201030 15:54:56.364"></status>
</kw>
<msg timestamp="20201030 15:54:56.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018483153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018510417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:56.077" endtime="20201030 15:54:56.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018483153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018510417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:56.371" endtime="20201030 15:54:56.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.380" endtime="20201030 15:54:56.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.074" endtime="20201030 15:54:56.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.072" endtime="20201030 15:54:56.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:56.387" level="INFO">${PHILIP_RES} = [{'diff': 2.7264000000002536e-05}, {'diff': 2.7028000000001856e-05}, {'diff': 2.6972000000000107e-05}, {'diff': 2.7055999999997526e-05}, {'diff': 2.7013999999998817e-05}, {'diff': 2.6999999999999247e-...</msg>
<status status="PASS" starttime="20201030 15:54:56.384" endtime="20201030 15:54:56.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:56.391" level="INFO">${RESULT} = {'diff': [2.7264000000002536e-05, 2.7028000000001856e-05, 2.6972000000000107e-05, 2.7055999999997526e-05, 2.7013999999998817e-05, 2.6999999999999247e-05, 2.7013999999998817e-05, 2.7014000000002286e-05...</msg>
<status status="PASS" starttime="20201030 15:54:56.388" endtime="20201030 15:54:56.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.396" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:56.395" endtime="20201030 15:54:56.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.398" level="INFO">VALUE: [2.7264000000002536e-05, 2.7028000000001856e-05, 2.6972000000000107e-05, 2.7055999999997526e-05, 2.7013999999998817e-05, 2.6999999999999247e-05, 2.7013999999998817e-05, 2.7014000000002286e-05, 2.6999999999999247e-05, 2.7028000000001856e-05, 2.6999999999999247e-05, 2.7014000000002286e-05, 2.7013999999998817e-05, 2.6985999999999677e-05, 2.7000000000002716e-05, 2.7013999999998817e-05, 2.7013000000002813e-05, 2.7013999999998817e-05, 2.7000000000002716e-05, 2.7027999999998387e-05, 2.6972000000000107e-05, 2.7054999999998053e-05, 2.7055000000001522e-05, 2.7027999999998387e-05, 2.7013999999998817e-05, 2.7000000000002716e-05, 2.7070000000000566e-05, 2.7014000000002286e-05, 2.7013999999998817e-05, 2.7014000000002286e-05, 2.7069999999997096e-05, 2.7013999999998817e-05, 2.7012999999999343e-05, 2.6999999999999247e-05, 2.7014000000002286e-05, 2.7041999999997957e-05, 2.7000000000002716e-05, 2.6985999999999677e-05, 2.7056000000000996e-05, 2.6999999999999247e-05, 2.6957999999997068e-05, 2.6999999999999247e-05, 2.7013999999998817e-05, 2.7026999999998913e-05, 2.6999999999999247e-05, 2.7014000000002286e-05, 2.7013999999998817e-05, 2.7013999999998817e-05, 2.6999999999999247e-05, 2.7026999999998913e-05]</msg>
<status status="PASS" starttime="20201030 15:54:56.397" endtime="20201030 15:54:56.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.392" endtime="20201030 15:54:56.400"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:56.403" endtime="20201030 15:54:56.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.402" endtime="20201030 15:54:56.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.400" endtime="20201030 15:54:56.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.047" endtime="20201030 15:54:56.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.047" endtime="20201030 15:54:56.424"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.438" endtime="20201030 15:54:56.451"></status>
</kw>
<msg timestamp="20201030 15:54:56.452" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.435" endtime="20201030 15:54:56.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.455" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.453" endtime="20201030 15:54:56.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.457" endtime="20201030 15:54:56.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.431" endtime="20201030 15:54:56.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.429" endtime="20201030 15:54:56.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.466" endtime="20201030 15:54:56.751"></status>
</kw>
<msg timestamp="20201030 15:54:56.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026162292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026191389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:56.464" endtime="20201030 15:54:56.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026162292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026191389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:56.755" endtime="20201030 15:54:56.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.764" endtime="20201030 15:54:56.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.462" endtime="20201030 15:54:56.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.460" endtime="20201030 15:54:56.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:56.770" level="INFO">${PHILIP_RES} = [{'diff': 2.9096999999998763e-05}, {'diff': 2.8818999999999373e-05}, {'diff': 2.8819999999998847e-05}, {'diff': 2.8805999999999277e-05}, {'diff': 2.8805999999999277e-05}, {'diff': 2.8805999999999277e-...</msg>
<status status="PASS" starttime="20201030 15:54:56.767" endtime="20201030 15:54:56.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:56.774" level="INFO">${RESULT} = {'diff': [2.9096999999998763e-05, 2.8818999999999373e-05, 2.8819999999998847e-05, 2.8805999999999277e-05, 2.8805999999999277e-05, 2.8805999999999277e-05, 2.8846999999998513e-05, 2.8805999999999277e-05...</msg>
<status status="PASS" starttime="20201030 15:54:56.771" endtime="20201030 15:54:56.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.778" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:56.777" endtime="20201030 15:54:56.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.781" level="INFO">VALUE: [2.9096999999998763e-05, 2.8818999999999373e-05, 2.8819999999998847e-05, 2.8805999999999277e-05, 2.8805999999999277e-05, 2.8805999999999277e-05, 2.8846999999998513e-05, 2.8805999999999277e-05, 2.8820000000002316e-05, 2.8750000000000997e-05, 2.8861000000001552e-05, 2.8805999999999277e-05, 2.8834000000001886e-05, 2.8819999999998847e-05, 2.8819999999998847e-05, 2.8778000000000137e-05, 2.8819999999998847e-05, 2.8791999999999707e-05, 2.8847999999997986e-05, 2.8792000000003176e-05, 2.8819999999998847e-05, 2.8805999999999277e-05, 2.8819999999998847e-05, 2.8819999999998847e-05, 2.8820000000002316e-05, 2.8791999999999707e-05, 2.8806000000002746e-05, 2.8805999999999277e-05, 2.8791999999999707e-05, 2.8791999999999707e-05, 2.8819999999998847e-05, 2.8805999999999277e-05, 2.8819999999998847e-05, 2.8806000000002746e-05, 2.8805999999999277e-05, 2.8791999999999707e-05, 2.8791999999999707e-05, 2.8791999999999707e-05, 2.8805999999999277e-05, 2.8805999999999277e-05, 2.8834000000001886e-05, 2.8805999999999277e-05, 2.8806000000002746e-05, 2.8819999999998847e-05, 2.8791999999999707e-05, 2.8805999999999277e-05, 2.8889000000000692e-05, 2.8819999999998847e-05, 2.8819999999998847e-05, 2.8820000000002316e-05]</msg>
<status status="PASS" starttime="20201030 15:54:56.780" endtime="20201030 15:54:56.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.775" endtime="20201030 15:54:56.783"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:56.787" endtime="20201030 15:54:56.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.785" endtime="20201030 15:54:56.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.784" endtime="20201030 15:54:56.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.425" endtime="20201030 15:54:56.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.425" endtime="20201030 15:54:56.808"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.816" endtime="20201030 15:54:56.827"></status>
</kw>
<msg timestamp="20201030 15:54:56.828" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.814" endtime="20201030 15:54:56.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.830" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.829" endtime="20201030 15:54:56.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.831" endtime="20201030 15:54:56.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.812" endtime="20201030 15:54:56.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.810" endtime="20201030 15:54:56.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.841" endtime="20201030 15:54:57.127"></status>
</kw>
<msg timestamp="20201030 15:54:57.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018486611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018517556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:56.839" endtime="20201030 15:54:57.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018486611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018517556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:57.131" endtime="20201030 15:54:57.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.139" endtime="20201030 15:54:57.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.836" endtime="20201030 15:54:57.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.835" endtime="20201030 15:54:57.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:57.146" level="INFO">${PHILIP_RES} = [{'diff': 3.094500000000097e-05}, {'diff': 3.065300000000201e-05}, {'diff': 3.068100000000115e-05}, {'diff': 3.066599999999864e-05}, {'diff': 3.066700000000158e-05}, {'diff': 3.068100000000115e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:57.142" endtime="20201030 15:54:57.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:57.150" level="INFO">${RESULT} = {'diff': [3.094500000000097e-05, 3.065300000000201e-05, 3.068100000000115e-05, 3.066599999999864e-05, 3.066700000000158e-05, 3.068100000000115e-05, 3.065199999999907e-05, 3.069500000000072e-05, 3.0652...</msg>
<status status="PASS" starttime="20201030 15:54:57.146" endtime="20201030 15:54:57.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.155" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:57.154" endtime="20201030 15:54:57.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.157" level="INFO">VALUE: [3.094500000000097e-05, 3.065300000000201e-05, 3.068100000000115e-05, 3.066599999999864e-05, 3.066700000000158e-05, 3.068100000000115e-05, 3.065199999999907e-05, 3.069500000000072e-05, 3.065299999999854e-05, 3.061099999999983e-05, 3.065299999999854e-05, 3.065300000000201e-05, 3.06379999999995e-05, 3.065299999999854e-05, 3.065300000000201e-05, 3.06249999999994e-05, 3.065300000000201e-05, 3.063899999999897e-05, 3.063899999999897e-05, 3.063899999999897e-05, 3.066699999999811e-05, 3.066600000000211e-05, 3.066699999999811e-05, 3.065300000000201e-05, 3.066599999999864e-05, 3.065299999999854e-05, 3.063900000000244e-05, 3.066699999999811e-05, 3.065300000000201e-05, 3.065299999999854e-05, 3.06249999999994e-05, 3.063899999999897e-05, 3.065300000000201e-05, 3.068000000000168e-05, 3.063899999999897e-05, 3.062500000000287e-05, 3.061099999999983e-05, 3.065300000000201e-05, 3.063899999999897e-05, 3.063899999999897e-05, 3.066700000000158e-05, 3.065299999999854e-05, 3.073599999999996e-05, 3.066699999999811e-05, 3.06379999999995e-05, 3.065299999999854e-05, 3.063899999999897e-05, 3.063900000000244e-05, 3.065299999999854e-05, 3.068100000000115e-05]</msg>
<status status="PASS" starttime="20201030 15:54:57.156" endtime="20201030 15:54:57.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.151" endtime="20201030 15:54:57.159"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:57.162" endtime="20201030 15:54:57.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.161" endtime="20201030 15:54:57.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.160" endtime="20201030 15:54:57.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.808" endtime="20201030 15:54:57.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.808" endtime="20201030 15:54:57.183"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.191" endtime="20201030 15:54:57.202"></status>
</kw>
<msg timestamp="20201030 15:54:57.203" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:57.190" endtime="20201030 15:54:57.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.205" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:57.204" endtime="20201030 15:54:57.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.206" endtime="20201030 15:54:57.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.187" endtime="20201030 15:54:57.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.185" endtime="20201030 15:54:57.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.215" endtime="20201030 15:54:57.500"></status>
</kw>
<msg timestamp="20201030 15:54:57.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018680958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018713833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:57.213" endtime="20201030 15:54:57.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018680958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018713833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:57.504" endtime="20201030 15:54:57.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.512" endtime="20201030 15:54:57.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.211" endtime="20201030 15:54:57.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.209" endtime="20201030 15:54:57.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:57.520" level="INFO">${PHILIP_RES} = [{'diff': 3.2874999999998183e-05}, {'diff': 3.2513000000001374e-05}, {'diff': 3.251400000000085e-05}, {'diff': 3.251400000000085e-05}, {'diff': 3.251400000000085e-05}, {'diff': 3.254199999999999e-05},...</msg>
<status status="PASS" starttime="20201030 15:54:57.517" endtime="20201030 15:54:57.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:57.524" level="INFO">${RESULT} = {'diff': [3.2874999999998183e-05, 3.2513000000001374e-05, 3.251400000000085e-05, 3.251400000000085e-05, 3.251400000000085e-05, 3.254199999999999e-05, 3.250000000000128e-05, 3.244399999999953e-05, 3.25...</msg>
<status status="PASS" starttime="20201030 15:54:57.521" endtime="20201030 15:54:57.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.528" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:57.527" endtime="20201030 15:54:57.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.531" level="INFO">VALUE: [3.2874999999998183e-05, 3.2513000000001374e-05, 3.251400000000085e-05, 3.251400000000085e-05, 3.251400000000085e-05, 3.254199999999999e-05, 3.250000000000128e-05, 3.244399999999953e-05, 3.251400000000085e-05, 3.251400000000085e-05, 3.251400000000085e-05, 3.252800000000042e-05, 3.255599999999956e-05, 3.250000000000128e-05, 3.252800000000042e-05, 3.252800000000042e-05, 3.255599999999956e-05, 3.251400000000085e-05, 3.251400000000085e-05, 3.250000000000128e-05, 3.251400000000085e-05, 3.2512999999997905e-05, 3.2512999999997905e-05, 3.2527000000000944e-05, 3.2527000000000944e-05, 3.251400000000085e-05, 3.250000000000128e-05, 3.2541000000000514e-05, 3.252800000000042e-05, 3.251400000000085e-05, 3.2555000000000084e-05, 3.251400000000085e-05, 3.251399999999738e-05, 3.249999999999781e-05, 3.254199999999999e-05, 3.252800000000042e-05, 3.249999999999781e-05, 3.252800000000042e-05, 3.251400000000085e-05, 3.251399999999738e-05, 3.251399999999738e-05, 3.252800000000042e-05, 3.251399999999738e-05, 3.251399999999738e-05, 3.251399999999738e-05, 3.249999999999781e-05, 3.249999999999781e-05, 3.254199999999999e-05, 3.252799999999695e-05, 3.251399999999738e-05]</msg>
<status status="PASS" starttime="20201030 15:54:57.529" endtime="20201030 15:54:57.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.525" endtime="20201030 15:54:57.532"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:57.536" endtime="20201030 15:54:57.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.534" endtime="20201030 15:54:57.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.533" endtime="20201030 15:54:57.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.184" endtime="20201030 15:54:57.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.183" endtime="20201030 15:54:57.556"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.565" endtime="20201030 15:54:57.578"></status>
</kw>
<msg timestamp="20201030 15:54:57.578" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:57.563" endtime="20201030 15:54:57.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.581" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:57.579" endtime="20201030 15:54:57.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.582" endtime="20201030 15:54:57.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.561" endtime="20201030 15:54:57.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.559" endtime="20201030 15:54:57.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.591" endtime="20201030 15:54:57.876"></status>
</kw>
<msg timestamp="20201030 15:54:57.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019388569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01942325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:57.589" endtime="20201030 15:54:57.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019388569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01942325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:57.880" endtime="20201030 15:54:57.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.889" endtime="20201030 15:54:57.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.587" endtime="20201030 15:54:57.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.585" endtime="20201030 15:54:57.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:57.895" level="INFO">${PHILIP_RES} = [{'diff': 3.468099999999821e-05}, {'diff': 3.441699999999839e-05}, {'diff': 3.441599999999892e-05}, {'diff': 3.440300000000229e-05}, {'diff': 3.4402999999998823e-05}, {'diff': 3.440300000000229e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:54:57.892" endtime="20201030 15:54:57.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:57.899" level="INFO">${RESULT} = {'diff': [3.468099999999821e-05, 3.441699999999839e-05, 3.441599999999892e-05, 3.440300000000229e-05, 3.4402999999998823e-05, 3.440300000000229e-05, 3.447200000000067e-05, 3.448600000000024e-05, 3.443...</msg>
<status status="PASS" starttime="20201030 15:54:57.896" endtime="20201030 15:54:57.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.903" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:57.902" endtime="20201030 15:54:57.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.906" level="INFO">VALUE: [3.468099999999821e-05, 3.441699999999839e-05, 3.441599999999892e-05, 3.440300000000229e-05, 3.4402999999998823e-05, 3.440300000000229e-05, 3.447200000000067e-05, 3.448600000000024e-05, 3.443100000000143e-05, 3.445799999999763e-05, 3.441600000000239e-05, 3.4402999999998823e-05, 3.443100000000143e-05, 3.441599999999892e-05, 3.443000000000196e-05, 3.441699999999839e-05, 3.441700000000186e-05, 3.441700000000186e-05, 3.448600000000024e-05, 3.440300000000229e-05, 3.443099999999796e-05, 3.441600000000239e-05, 3.441599999999892e-05, 3.441700000000186e-05, 3.4402999999998823e-05, 3.441599999999892e-05, 3.441599999999892e-05, 3.4402999999998823e-05, 3.441700000000186e-05, 3.4402999999998823e-05, 3.44719999999972e-05, 3.442999999999849e-05, 3.447200000000067e-05, 3.4374999999999684e-05, 3.440199999999935e-05, 3.441700000000186e-05, 3.4402999999998823e-05, 3.4402999999998823e-05, 3.440199999999935e-05, 3.434800000000002e-05, 3.441699999999839e-05, 3.447200000000067e-05, 3.441599999999892e-05, 3.4402999999998823e-05, 3.4346999999997074e-05, 3.4388999999999253e-05, 3.441599999999892e-05, 3.4388999999999253e-05, 3.440300000000229e-05, 3.441699999999839e-05]</msg>
<status status="PASS" starttime="20201030 15:54:57.905" endtime="20201030 15:54:57.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.900" endtime="20201030 15:54:57.908"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:57.912" endtime="20201030 15:54:57.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.910" endtime="20201030 15:54:57.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.909" endtime="20201030 15:54:57.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.557" endtime="20201030 15:54:57.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.557" endtime="20201030 15:54:57.932"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.941" endtime="20201030 15:54:57.952"></status>
</kw>
<msg timestamp="20201030 15:54:57.953" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:57.939" endtime="20201030 15:54:57.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.955" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:57.954" endtime="20201030 15:54:57.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.956" endtime="20201030 15:54:57.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.937" endtime="20201030 15:54:57.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.935" endtime="20201030 15:54:57.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.966" endtime="20201030 15:54:58.251"></status>
</kw>
<msg timestamp="20201030 15:54:58.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018850958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018887569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:57.964" endtime="20201030 15:54:58.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018850958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018887569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:58.255" endtime="20201030 15:54:58.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.264" endtime="20201030 15:54:58.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.961" endtime="20201030 15:54:58.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.960" endtime="20201030 15:54:58.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:58.270" level="INFO">${PHILIP_RES} = [{'diff': 3.6610999999998894e-05}, {'diff': 3.6332999999999505e-05}, {'diff': 3.633399999999898e-05}, {'diff': 3.6332999999999505e-05}, {'diff': 3.6318999999999935e-05}, {'diff': 3.6346999999999074e-0...</msg>
<status status="PASS" starttime="20201030 15:54:58.267" endtime="20201030 15:54:58.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:58.275" level="INFO">${RESULT} = {'diff': [3.6610999999998894e-05, 3.6332999999999505e-05, 3.633399999999898e-05, 3.6332999999999505e-05, 3.6318999999999935e-05, 3.6346999999999074e-05, 3.6332999999999505e-05, 3.633399999999898e-05, ...</msg>
<status status="PASS" starttime="20201030 15:54:58.271" endtime="20201030 15:54:58.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.279" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:58.278" endtime="20201030 15:54:58.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.282" level="INFO">VALUE: [3.6610999999998894e-05, 3.6332999999999505e-05, 3.633399999999898e-05, 3.6332999999999505e-05, 3.6318999999999935e-05, 3.6346999999999074e-05, 3.6332999999999505e-05, 3.633399999999898e-05, 3.633399999999898e-05, 3.6333000000002974e-05, 3.625000000000156e-05, 3.6346999999999074e-05, 3.630599999999984e-05, 3.6346999999999074e-05, 3.6333000000002974e-05, 3.6332999999999505e-05, 3.6318999999999935e-05, 3.6346999999999074e-05, 3.630599999999984e-05, 3.631999999999941e-05, 3.6332999999999505e-05, 3.6333000000002974e-05, 3.626400000000113e-05, 3.6290999999997325e-05, 3.631999999999941e-05, 3.631999999999941e-05, 3.632000000000288e-05, 3.6332999999999505e-05, 3.6332999999999505e-05, 3.6332999999999505e-05, 3.6417000000000394e-05, 3.62780000000007e-05, 3.6318999999999935e-05, 3.6318999999999935e-05, 3.6389000000001254e-05, 3.6360999999998644e-05, 3.632000000000288e-05, 3.633399999999898e-05, 3.6318999999999935e-05, 3.6332999999999505e-05, 3.6332999999999505e-05, 3.6305000000000365e-05, 3.6360999999998644e-05, 3.636200000000159e-05, 3.6360999999998644e-05, 3.6360999999998644e-05, 3.6347000000002544e-05, 3.6346999999999074e-05, 3.631999999999941e-05, 3.6332999999999505e-05]</msg>
<status status="PASS" starttime="20201030 15:54:58.280" endtime="20201030 15:54:58.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.276" endtime="20201030 15:54:58.283"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:58.287" endtime="20201030 15:54:58.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.286" endtime="20201030 15:54:58.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.284" endtime="20201030 15:54:58.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.933" endtime="20201030 15:54:58.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.933" endtime="20201030 15:54:58.308"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.316" endtime="20201030 15:54:58.328"></status>
</kw>
<msg timestamp="20201030 15:54:58.329" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:58.315" endtime="20201030 15:54:58.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.331" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:58.330" endtime="20201030 15:54:58.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.332" endtime="20201030 15:54:58.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.312" endtime="20201030 15:54:58.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.310" endtime="20201030 15:54:58.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.342" endtime="20201030 15:54:58.628"></status>
</kw>
<msg timestamp="20201030 15:54:58.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018510458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018549042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:58.340" endtime="20201030 15:54:58.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018510458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018549042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:58.632" endtime="20201030 15:54:58.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.640" endtime="20201030 15:54:58.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.337" endtime="20201030 15:54:58.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.336" endtime="20201030 15:54:58.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:58.648" level="INFO">${PHILIP_RES} = [{'diff': 3.858400000000123e-05}, {'diff': 3.826399999999966e-05}, {'diff': 3.827799999999923e-05}, {'diff': 3.8304999999998895e-05}, {'diff': 3.82919999999988e-05}, {'diff': 3.8276999999999756e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:54:58.644" endtime="20201030 15:54:58.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:58.652" level="INFO">${RESULT} = {'diff': [3.858400000000123e-05, 3.826399999999966e-05, 3.827799999999923e-05, 3.8304999999998895e-05, 3.82919999999988e-05, 3.8276999999999756e-05, 3.8291000000002795e-05, 3.8276999999999756e-05, 3.8...</msg>
<status status="PASS" starttime="20201030 15:54:58.649" endtime="20201030 15:54:58.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.656" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:58.655" endtime="20201030 15:54:58.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.658" level="INFO">VALUE: [3.858400000000123e-05, 3.826399999999966e-05, 3.827799999999923e-05, 3.8304999999998895e-05, 3.82919999999988e-05, 3.8276999999999756e-05, 3.8291000000002795e-05, 3.8276999999999756e-05, 3.8304999999998895e-05, 3.8318999999998465e-05, 3.823600000000052e-05, 3.826400000000313e-05, 3.823600000000052e-05, 3.8361000000000645e-05, 3.834800000000055e-05, 3.827799999999923e-05, 3.82780000000027e-05, 3.827799999999923e-05, 3.82919999999988e-05, 3.825000000000009e-05, 3.823699999999999e-05, 3.826400000000313e-05, 3.8347000000001075e-05, 3.8263000000000186e-05, 3.8332999999998035e-05, 3.8290999999999326e-05, 3.8291000000002795e-05, 3.8290999999999326e-05, 3.826399999999966e-05, 3.8305000000002365e-05, 3.827799999999923e-05, 3.825000000000009e-05, 3.826399999999966e-05, 3.827799999999923e-05, 3.82780000000027e-05, 3.822200000000095e-05, 3.824999999999662e-05, 3.826399999999966e-05, 3.8333000000001505e-05, 3.830600000000184e-05, 3.827799999999923e-05, 3.829200000000227e-05, 3.82919999999988e-05, 3.823600000000052e-05, 3.8263000000000186e-05, 3.8276999999999756e-05, 3.8276999999999756e-05, 3.8290999999999326e-05, 3.827799999999923e-05, 3.82780000000027e-05]</msg>
<status status="PASS" starttime="20201030 15:54:58.657" endtime="20201030 15:54:58.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.653" endtime="20201030 15:54:58.665"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:58.669" endtime="20201030 15:54:58.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.668" endtime="20201030 15:54:58.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.666" endtime="20201030 15:54:58.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.309" endtime="20201030 15:54:58.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.308" endtime="20201030 15:54:58.690"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.698" endtime="20201030 15:54:58.711"></status>
</kw>
<msg timestamp="20201030 15:54:58.712" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:58.697" endtime="20201030 15:54:58.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.714" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:58.713" endtime="20201030 15:54:58.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.715" endtime="20201030 15:54:58.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.694" endtime="20201030 15:54:58.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.692" endtime="20201030 15:54:58.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.724" endtime="20201030 15:54:59.010"></status>
</kw>
<msg timestamp="20201030 15:54:59.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019640111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019680653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:58.722" endtime="20201030 15:54:59.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019640111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019680653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:59.014" endtime="20201030 15:54:59.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.022" endtime="20201030 15:54:59.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.720" endtime="20201030 15:54:59.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.718" endtime="20201030 15:54:59.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:59.029" level="INFO">${PHILIP_RES} = [{'diff': 4.054200000000105e-05}, {'diff': 4.024999999999862e-05}, {'diff': 4.024999999999862e-05}, {'diff': 4.026399999999819e-05}, {'diff': 4.0277000000001756e-05}, {'diff': 4.026400000000166e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:54:59.025" endtime="20201030 15:54:59.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:59.033" level="INFO">${RESULT} = {'diff': [4.054200000000105e-05, 4.024999999999862e-05, 4.024999999999862e-05, 4.026399999999819e-05, 4.0277000000001756e-05, 4.026400000000166e-05, 4.024999999999862e-05, 4.025000000000209e-05, 4.033...</msg>
<status status="PASS" starttime="20201030 15:54:59.030" endtime="20201030 15:54:59.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.037" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:59.036" endtime="20201030 15:54:59.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.040" level="INFO">VALUE: [4.054200000000105e-05, 4.024999999999862e-05, 4.024999999999862e-05, 4.026399999999819e-05, 4.0277000000001756e-05, 4.026400000000166e-05, 4.024999999999862e-05, 4.025000000000209e-05, 4.033399999999951e-05, 4.0319000000000466e-05, 4.026400000000166e-05, 4.0262999999998716e-05, 4.026399999999819e-05, 4.025000000000209e-05, 4.026400000000166e-05, 4.022199999999948e-05, 4.0181000000000244e-05, 4.023599999999905e-05, 4.027799999999776e-05, 4.023599999999905e-05, 4.025000000000209e-05, 4.023599999999905e-05, 4.026400000000166e-05, 4.0277000000001756e-05, 4.024999999999862e-05, 4.023600000000252e-05, 4.0305000000000896e-05, 4.029199999999733e-05, 4.024999999999862e-05, 4.027800000000123e-05, 4.0319000000000466e-05, 4.026400000000166e-05, 4.020799999999991e-05, 4.024999999999862e-05, 4.026400000000166e-05, 4.026400000000166e-05, 4.026399999999819e-05, 4.0304999999997426e-05, 4.026400000000166e-05, 4.020799999999991e-05, 4.024999999999862e-05, 4.025000000000209e-05, 4.024999999999862e-05, 4.029199999999733e-05, 4.027800000000123e-05, 4.024999999999862e-05, 4.027800000000123e-05, 4.026400000000166e-05, 4.023599999999905e-05, 4.0236999999998524e-05]</msg>
<status status="PASS" starttime="20201030 15:54:59.038" endtime="20201030 15:54:59.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.034" endtime="20201030 15:54:59.044"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:59.048" endtime="20201030 15:54:59.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.046" endtime="20201030 15:54:59.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.045" endtime="20201030 15:54:59.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.691" endtime="20201030 15:54:59.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.690" endtime="20201030 15:54:59.068"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.077" endtime="20201030 15:54:59.088"></status>
</kw>
<msg timestamp="20201030 15:54:59.089" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:59.075" endtime="20201030 15:54:59.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.091" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:59.090" endtime="20201030 15:54:59.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.093" endtime="20201030 15:54:59.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.072" endtime="20201030 15:54:59.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.071" endtime="20201030 15:54:59.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.101" endtime="20201030 15:54:59.387"></status>
</kw>
<msg timestamp="20201030 15:54:59.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018570708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01861325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:59.100" endtime="20201030 15:54:59.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018570708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01861325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:59.391" endtime="20201030 15:54:59.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.399" endtime="20201030 15:54:59.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.097" endtime="20201030 15:54:59.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.096" endtime="20201030 15:54:59.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:59.406" level="INFO">${PHILIP_RES} = [{'diff': 4.254200000000305e-05}, {'diff': 4.226400000000019e-05}, {'diff': 4.226300000000072e-05}, {'diff': 4.225000000000062e-05}, {'diff': 4.225000000000062e-05}, {'diff': 4.226400000000019e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:59.403" endtime="20201030 15:54:59.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:59.412" level="INFO">${RESULT} = {'diff': [4.254200000000305e-05, 4.226400000000019e-05, 4.226300000000072e-05, 4.225000000000062e-05, 4.225000000000062e-05, 4.226400000000019e-05, 4.2277000000000287e-05, 4.226400000000019e-05, 4.218...</msg>
<status status="PASS" starttime="20201030 15:54:59.407" endtime="20201030 15:54:59.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.416" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:59.415" endtime="20201030 15:54:59.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.419" level="INFO">VALUE: [4.254200000000305e-05, 4.226400000000019e-05, 4.226300000000072e-05, 4.225000000000062e-05, 4.225000000000062e-05, 4.226400000000019e-05, 4.2277000000000287e-05, 4.226400000000019e-05, 4.2180999999998775e-05, 4.224999999999715e-05, 4.2222999999997485e-05, 4.230600000000237e-05, 4.226400000000019e-05, 4.226400000000019e-05, 4.226300000000072e-05, 4.226400000000019e-05, 4.225000000000062e-05, 4.229199999999933e-05, 4.225000000000062e-05, 4.226400000000019e-05, 4.224999999999715e-05, 4.226399999999672e-05, 4.2360999999997706e-05, 4.227799999999976e-05, 4.229199999999933e-05, 4.226400000000019e-05, 4.226400000000019e-05, 4.2277000000000287e-05, 4.229199999999933e-05, 4.225000000000062e-05, 4.226400000000019e-05, 4.226299999999725e-05, 4.226400000000019e-05, 4.220800000000191e-05, 4.225000000000062e-05, 4.226300000000072e-05, 4.226400000000019e-05, 4.227799999999976e-05, 4.2361000000001175e-05, 4.225000000000062e-05, 4.226400000000019e-05, 4.226400000000019e-05, 4.227800000000323e-05, 4.2277000000000287e-05, 4.227799999999976e-05, 4.227799999999976e-05, 4.227799999999976e-05, 4.225000000000062e-05, 4.225000000000062e-05, 4.229199999999933e-05]</msg>
<status status="PASS" starttime="20201030 15:54:59.418" endtime="20201030 15:54:59.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.413" endtime="20201030 15:54:59.420"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:59.424" endtime="20201030 15:54:59.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.423" endtime="20201030 15:54:59.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.421" endtime="20201030 15:54:59.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.069" endtime="20201030 15:54:59.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.069" endtime="20201030 15:54:59.445"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.453" endtime="20201030 15:54:59.465"></status>
</kw>
<msg timestamp="20201030 15:54:59.466" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:59.452" endtime="20201030 15:54:59.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.468" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:59.467" endtime="20201030 15:54:59.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.469" endtime="20201030 15:54:59.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.449" endtime="20201030 15:54:59.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.447" endtime="20201030 15:54:59.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.478" endtime="20201030 15:54:59.764"></status>
</kw>
<msg timestamp="20201030 15:54:59.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018402903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018447472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:59.477" endtime="20201030 15:54:59.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018402903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018447472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:59.768" endtime="20201030 15:54:59.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.777" endtime="20201030 15:54:59.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.474" endtime="20201030 15:54:59.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.472" endtime="20201030 15:54:59.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:59.783" level="INFO">${PHILIP_RES} = [{'diff': 4.456899999999778e-05}, {'diff': 4.431899999999753e-05}, {'diff': 4.429200000000133e-05}, {'diff': 4.43060000000009e-05}, {'diff': 4.429099999999839e-05}, {'diff': 4.423599999999958e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:59.780" endtime="20201030 15:54:59.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:59.787" level="INFO">${RESULT} = {'diff': [4.456899999999778e-05, 4.431899999999753e-05, 4.429200000000133e-05, 4.43060000000009e-05, 4.429099999999839e-05, 4.423599999999958e-05, 4.43060000000009e-05, 4.429200000000133e-05, 4.427799...</msg>
<status status="PASS" starttime="20201030 15:54:59.784" endtime="20201030 15:54:59.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.792" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:59.790" endtime="20201030 15:54:59.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.794" level="INFO">VALUE: [4.456899999999778e-05, 4.431899999999753e-05, 4.429200000000133e-05, 4.43060000000009e-05, 4.429099999999839e-05, 4.423599999999958e-05, 4.43060000000009e-05, 4.429200000000133e-05, 4.427799999999829e-05, 4.427799999999829e-05, 4.429200000000133e-05, 4.43060000000009e-05, 4.4333000000000566e-05, 4.427799999999829e-05, 4.427699999999882e-05, 4.432000000000047e-05, 4.427800000000176e-05, 4.427800000000176e-05, 4.427699999999882e-05, 4.427699999999882e-05, 4.429200000000133e-05, 4.429200000000133e-05, 4.423599999999958e-05, 4.426299999999925e-05, 4.4347000000000136e-05, 4.4319999999997e-05, 4.43060000000009e-05, 4.4319000000000996e-05, 4.423599999999958e-05, 4.429199999999786e-05, 4.424999999999915e-05, 4.43060000000009e-05, 4.4333000000000566e-05, 4.429099999999839e-05, 4.430599999999743e-05, 4.43060000000009e-05, 4.4360999999999706e-05, 4.4305000000001427e-05, 4.430499999999796e-05, 4.429199999999786e-05, 4.429200000000133e-05, 4.423599999999958e-05, 4.426300000000272e-05, 4.4319000000000996e-05, 4.432000000000047e-05, 4.422200000000001e-05, 4.427800000000176e-05, 4.427699999999882e-05, 4.429099999999839e-05, 4.429199999999786e-05]</msg>
<status status="PASS" starttime="20201030 15:54:59.793" endtime="20201030 15:54:59.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.788" endtime="20201030 15:54:59.795"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:59.799" endtime="20201030 15:54:59.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.798" endtime="20201030 15:54:59.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.796" endtime="20201030 15:54:59.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.446" endtime="20201030 15:54:59.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.445" endtime="20201030 15:54:59.820"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.828" endtime="20201030 15:54:59.842"></status>
</kw>
<msg timestamp="20201030 15:54:59.843" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:59.827" endtime="20201030 15:54:59.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.845" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:59.844" endtime="20201030 15:54:59.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.846" endtime="20201030 15:54:59.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.824" endtime="20201030 15:54:59.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.822" endtime="20201030 15:54:59.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.855" endtime="20201030 15:55:00.144"></status>
</kw>
<msg timestamp="20201030 15:55:00.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019374611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019421264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:59.853" endtime="20201030 15:55:00.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019374611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019421264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:00.148" endtime="20201030 15:55:00.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.156" endtime="20201030 15:55:00.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.851" endtime="20201030 15:55:00.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.849" endtime="20201030 15:55:00.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:00.163" level="INFO">${PHILIP_RES} = [{'diff': 4.6653000000000666e-05}, {'diff': 4.6430999999999556e-05}, {'diff': 4.6403000000000416e-05}, {'diff': 4.6375000000001276e-05}, {'diff': 4.636199999999771e-05}, {'diff': 4.6361000000001706e-0...</msg>
<status status="PASS" starttime="20201030 15:55:00.159" endtime="20201030 15:55:00.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:00.167" level="INFO">${RESULT} = {'diff': [4.6653000000000666e-05, 4.6430999999999556e-05, 4.6403000000000416e-05, 4.6375000000001276e-05, 4.636199999999771e-05, 4.6361000000001706e-05, 4.6347000000002136e-05, 4.636199999999771e-05, ...</msg>
<status status="PASS" starttime="20201030 15:55:00.164" endtime="20201030 15:55:00.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.171" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:00.170" endtime="20201030 15:55:00.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.173" level="INFO">VALUE: [4.6653000000000666e-05, 4.6430999999999556e-05, 4.6403000000000416e-05, 4.6375000000001276e-05, 4.636199999999771e-05, 4.6361000000001706e-05, 4.6347000000002136e-05, 4.636199999999771e-05, 4.63329999999991e-05, 4.63060000000029e-05, 4.636099999999824e-05, 4.6375000000001276e-05, 4.636099999999824e-05, 4.636099999999824e-05, 4.6375000000001276e-05, 4.6361000000001706e-05, 4.634799999999814e-05, 4.6347000000002136e-05, 4.634699999999867e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.636099999999824e-05, 4.6361000000001706e-05, 4.6361000000001706e-05, 4.637499999999781e-05, 4.6361000000001706e-05, 4.6361000000001706e-05, 4.636099999999824e-05, 4.6361000000001706e-05, 4.636099999999824e-05, 4.629100000000039e-05, 4.6347000000002136e-05, 4.634799999999814e-05, 4.636099999999824e-05, 4.6347000000002136e-05, 4.636199999999771e-05, 4.6361000000001706e-05, 4.643000000000008e-05, 4.636199999999771e-05, 4.6361000000001706e-05, 4.6375000000001276e-05, 4.636099999999824e-05, 4.6361000000001706e-05, 4.6403000000000416e-05, 4.6319999999999e-05, 4.6347000000002136e-05, 4.6347000000002136e-05, 4.636099999999824e-05, 4.6347000000002136e-05, 4.630499999999996e-05]</msg>
<status status="PASS" starttime="20201030 15:55:00.172" endtime="20201030 15:55:00.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.168" endtime="20201030 15:55:00.176"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:00.179" endtime="20201030 15:55:00.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.178" endtime="20201030 15:55:00.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.177" endtime="20201030 15:55:00.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.821" endtime="20201030 15:55:00.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.820" endtime="20201030 15:55:00.200"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.208" endtime="20201030 15:55:00.221"></status>
</kw>
<msg timestamp="20201030 15:55:00.222" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.207" endtime="20201030 15:55:00.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.224" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.223" endtime="20201030 15:55:00.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.225" endtime="20201030 15:55:00.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.204" endtime="20201030 15:55:00.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.202" endtime="20201030 15:55:00.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.234" endtime="20201030 15:55:00.520"></status>
</kw>
<msg timestamp="20201030 15:55:00.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018521292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018570042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:00.233" endtime="20201030 15:55:00.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018521292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018570042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:00.524" endtime="20201030 15:55:00.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.532" endtime="20201030 15:55:00.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.230" endtime="20201030 15:55:00.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.228" endtime="20201030 15:55:00.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:00.539" level="INFO">${PHILIP_RES} = [{'diff': 4.874999999999671e-05}, {'diff': 4.8445000000001126e-05}, {'diff': 4.843000000000208e-05}, {'diff': 4.843000000000208e-05}, {'diff': 4.8444999999997657e-05}, {'diff': 4.845799999999775e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:00.536" endtime="20201030 15:55:00.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:00.544" level="INFO">${RESULT} = {'diff': [4.874999999999671e-05, 4.8445000000001126e-05, 4.843000000000208e-05, 4.843000000000208e-05, 4.8444999999997657e-05, 4.845799999999775e-05, 4.845800000000122e-05, 4.8445000000001126e-05, 4.8...</msg>
<status status="PASS" starttime="20201030 15:55:00.540" endtime="20201030 15:55:00.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.548" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:00.547" endtime="20201030 15:55:00.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.551" level="INFO">VALUE: [4.874999999999671e-05, 4.8445000000001126e-05, 4.843000000000208e-05, 4.843000000000208e-05, 4.8444999999997657e-05, 4.845799999999775e-05, 4.845800000000122e-05, 4.8445000000001126e-05, 4.841699999999852e-05, 4.844399999999818e-05, 4.842999999999861e-05, 4.8445000000001126e-05, 4.8486999999999836e-05, 4.842999999999861e-05, 4.842999999999861e-05, 4.836100000000024e-05, 4.8445000000001126e-05, 4.844400000000165e-05, 4.843099999999809e-05, 4.843099999999809e-05, 4.837499999999981e-05, 4.847200000000079e-05, 4.844399999999818e-05, 4.849999999999993e-05, 4.842999999999861e-05, 4.845800000000122e-05, 4.8459000000000696e-05, 4.843099999999809e-05, 4.844399999999818e-05, 4.845800000000122e-05, 4.8445000000001126e-05, 4.843099999999809e-05, 4.842999999999861e-05, 4.844399999999818e-05, 4.8417000000001986e-05, 4.845800000000122e-05, 4.847200000000079e-05, 4.845799999999775e-05, 4.8459000000000696e-05, 4.8403000000002416e-05, 4.841599999999904e-05, 4.8444999999997657e-05, 4.8445000000001126e-05, 4.843000000000208e-05, 4.837499999999981e-05, 4.843099999999809e-05, 4.8458999999997227e-05, 4.845800000000122e-05, 4.844400000000165e-05, 4.8431000000001556e-05]</msg>
<status status="PASS" starttime="20201030 15:55:00.549" endtime="20201030 15:55:00.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.545" endtime="20201030 15:55:00.552"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:00.556" endtime="20201030 15:55:00.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.554" endtime="20201030 15:55:00.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.553" endtime="20201030 15:55:00.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.201" endtime="20201030 15:55:00.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.200" endtime="20201030 15:55:00.576"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.585" endtime="20201030 15:55:00.597"></status>
</kw>
<msg timestamp="20201030 15:55:00.598" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.583" endtime="20201030 15:55:00.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.600" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.599" endtime="20201030 15:55:00.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.601" endtime="20201030 15:55:00.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.581" endtime="20201030 15:55:00.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.579" endtime="20201030 15:55:00.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.610" endtime="20201030 15:55:00.896"></status>
</kw>
<msg timestamp="20201030 15:55:00.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018492264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018543111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:00.609" endtime="20201030 15:55:00.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018492264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018543111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:00.901" endtime="20201030 15:55:00.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.909" endtime="20201030 15:55:00.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.606" endtime="20201030 15:55:00.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.604" endtime="20201030 15:55:00.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:00.915" level="INFO">${PHILIP_RES} = [{'diff': 5.08469999999997e-05}, {'diff': 5.063899999999816e-05}, {'diff': 5.056999999999978e-05}, {'diff': 5.048599999999889e-05}, {'diff': 5.055500000000074e-05}, {'diff': 5.056999999999978e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:00.912" endtime="20201030 15:55:00.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:00.919" level="INFO">${RESULT} = {'diff': [5.08469999999997e-05, 5.063899999999816e-05, 5.056999999999978e-05, 5.048599999999889e-05, 5.055500000000074e-05, 5.056999999999978e-05, 5.054200000000064e-05, 5.056900000000031e-05, 5.05560...</msg>
<status status="PASS" starttime="20201030 15:55:00.916" endtime="20201030 15:55:00.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.924" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:00.923" endtime="20201030 15:55:00.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.926" level="INFO">VALUE: [5.08469999999997e-05, 5.063899999999816e-05, 5.056999999999978e-05, 5.048599999999889e-05, 5.055500000000074e-05, 5.056999999999978e-05, 5.054200000000064e-05, 5.056900000000031e-05, 5.055600000000021e-05, 5.056999999999978e-05, 5.059699999999945e-05, 5.055500000000074e-05, 5.056999999999978e-05, 5.0486999999998367e-05, 5.055500000000074e-05, 5.056999999999978e-05, 5.055599999999674e-05, 5.056900000000031e-05, 5.055600000000021e-05, 5.059699999999945e-05, 5.056900000000031e-05, 5.056900000000031e-05, 5.058399999999935e-05, 5.055600000000021e-05, 5.054100000000117e-05, 5.054200000000064e-05, 5.049999999999846e-05, 5.055500000000074e-05, 5.056900000000031e-05, 5.055600000000021e-05, 5.056999999999978e-05, 5.055500000000074e-05, 5.056999999999978e-05, 5.058400000000282e-05, 5.056899999999684e-05, 5.056899999999684e-05, 5.055600000000021e-05, 5.056900000000031e-05, 5.056900000000031e-05, 5.054200000000064e-05, 5.061099999999902e-05, 5.056900000000031e-05, 5.048599999999889e-05, 5.055600000000021e-05, 5.061099999999902e-05, 5.054100000000117e-05, 5.056999999999978e-05, 5.059699999999945e-05, 5.056900000000031e-05, 5.056900000000031e-05]</msg>
<status status="PASS" starttime="20201030 15:55:00.925" endtime="20201030 15:55:00.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.920" endtime="20201030 15:55:00.927"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:00.931" endtime="20201030 15:55:00.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.930" endtime="20201030 15:55:00.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.928" endtime="20201030 15:55:00.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.577" endtime="20201030 15:55:00.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.577" endtime="20201030 15:55:00.952"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.960" endtime="20201030 15:55:00.974"></status>
</kw>
<msg timestamp="20201030 15:55:00.975" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.959" endtime="20201030 15:55:00.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.977" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.976" endtime="20201030 15:55:00.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.978" endtime="20201030 15:55:00.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.956" endtime="20201030 15:55:00.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.954" endtime="20201030 15:55:00.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.987" endtime="20201030 15:55:01.273"></status>
</kw>
<msg timestamp="20201030 15:55:01.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019561014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019614014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:00.986" endtime="20201030 15:55:01.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019561014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019614014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:01.277" endtime="20201030 15:55:01.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.286" endtime="20201030 15:55:01.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.983" endtime="20201030 15:55:01.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.982" endtime="20201030 15:55:01.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:01.292" level="INFO">${PHILIP_RES} = [{'diff': 5.2999999999997494e-05}, {'diff': 5.2693999999998964e-05}, {'diff': 5.269499999999844e-05}, {'diff': 5.268099999999887e-05}, {'diff': 5.2708000000002e-05}, {'diff': 5.2707999999998534e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:01.289" endtime="20201030 15:55:01.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:01.296" level="INFO">${RESULT} = {'diff': [5.2999999999997494e-05, 5.2693999999998964e-05, 5.269499999999844e-05, 5.268099999999887e-05, 5.2708000000002e-05, 5.2707999999998534e-05, 5.268099999999887e-05, 5.2707999999998534e-05, 5.27...</msg>
<status status="PASS" starttime="20201030 15:55:01.293" endtime="20201030 15:55:01.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.300" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:01.299" endtime="20201030 15:55:01.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.303" level="INFO">VALUE: [5.2999999999997494e-05, 5.2693999999998964e-05, 5.269499999999844e-05, 5.268099999999887e-05, 5.2708000000002e-05, 5.2707999999998534e-05, 5.268099999999887e-05, 5.2707999999998534e-05, 5.270900000000148e-05, 5.269500000000191e-05, 5.2707999999998534e-05, 5.273600000000114e-05, 5.262499999999712e-05, 5.265299999999973e-05, 5.273600000000114e-05, 5.270900000000148e-05, 5.268099999999887e-05, 5.272200000000157e-05, 5.2679999999999394e-05, 5.2735999999997674e-05, 5.272200000000157e-05, 5.2707999999998534e-05, 5.265299999999973e-05, 5.269499999999844e-05, 5.275000000000071e-05, 5.277799999999985e-05, 5.2707999999998534e-05, 5.2708000000002e-05, 5.2707999999998534e-05, 5.268099999999887e-05, 5.270900000000148e-05, 5.2665999999999824e-05, 5.2652000000000254e-05, 5.2708000000002e-05, 5.265299999999973e-05, 5.270900000000148e-05, 5.270900000000148e-05, 5.2707999999998534e-05, 5.272200000000157e-05, 5.275000000000071e-05, 5.272200000000157e-05, 5.2708000000002e-05, 5.269499999999844e-05, 5.265299999999973e-05, 5.2721999999998104e-05, 5.2679999999999394e-05, 5.269400000000243e-05, 5.2693999999998964e-05, 5.2708000000002e-05, 5.269500000000191e-05]</msg>
<status status="PASS" starttime="20201030 15:55:01.302" endtime="20201030 15:55:01.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.297" endtime="20201030 15:55:01.305"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:01.309" endtime="20201030 15:55:01.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.307" endtime="20201030 15:55:01.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.306" endtime="20201030 15:55:01.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.953" endtime="20201030 15:55:01.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.952" endtime="20201030 15:55:01.329"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.338" endtime="20201030 15:55:01.351"></status>
</kw>
<msg timestamp="20201030 15:55:01.352" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.336" endtime="20201030 15:55:01.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.354" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.353" endtime="20201030 15:55:01.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.356" endtime="20201030 15:55:01.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.334" endtime="20201030 15:55:01.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.332" endtime="20201030 15:55:01.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.364" endtime="20201030 15:55:01.650"></status>
</kw>
<msg timestamp="20201030 15:55:01.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018613944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018669153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:01.363" endtime="20201030 15:55:01.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018613944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018669153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:01.654" endtime="20201030 15:55:01.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.663" endtime="20201030 15:55:01.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.360" endtime="20201030 15:55:01.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.359" endtime="20201030 15:55:01.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:01.669" level="INFO">${PHILIP_RES} = [{'diff': 5.520900000000051e-05}, {'diff': 5.486199999999927e-05}, {'diff': 5.487499999999937e-05}, {'diff': 5.487499999999937e-05}, {'diff': 5.487500000000284e-05}, {'diff': 5.48609999999998e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:01.666" endtime="20201030 15:55:01.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:01.674" level="INFO">${RESULT} = {'diff': [5.520900000000051e-05, 5.486199999999927e-05, 5.487499999999937e-05, 5.487499999999937e-05, 5.487500000000284e-05, 5.48609999999998e-05, 5.487499999999937e-05, 5.487499999999937e-05, 5.49309...</msg>
<status status="PASS" starttime="20201030 15:55:01.670" endtime="20201030 15:55:01.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.678" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:01.677" endtime="20201030 15:55:01.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.681" level="INFO">VALUE: [5.520900000000051e-05, 5.486199999999927e-05, 5.487499999999937e-05, 5.487499999999937e-05, 5.487500000000284e-05, 5.48609999999998e-05, 5.487499999999937e-05, 5.487499999999937e-05, 5.493099999999765e-05, 5.488899999999894e-05, 5.484700000000023e-05, 5.4887999999999465e-05, 5.487499999999937e-05, 5.48609999999998e-05, 5.487499999999937e-05, 5.487499999999937e-05, 5.48609999999998e-05, 5.488899999999894e-05, 5.4901999999999035e-05, 5.487499999999937e-05, 5.487499999999937e-05, 5.48609999999998e-05, 5.487499999999937e-05, 5.487499999999937e-05, 5.488899999999894e-05, 5.487499999999937e-05, 5.487500000000284e-05, 5.488899999999894e-05, 5.487499999999937e-05, 5.491699999999808e-05, 5.4915999999998605e-05, 5.48479999999997e-05, 5.487500000000284e-05, 5.490299999999851e-05, 5.487499999999937e-05, 5.487500000000284e-05, 5.487499999999937e-05, 5.48609999999998e-05, 5.4887999999999465e-05, 5.490299999999851e-05, 5.487499999999937e-05, 5.487500000000284e-05, 5.490299999999851e-05, 5.482000000000056e-05, 5.488900000000241e-05, 5.4972000000000354e-05, 5.48609999999998e-05, 5.486100000000327e-05, 5.488899999999894e-05, 5.487499999999937e-05]</msg>
<status status="PASS" starttime="20201030 15:55:01.679" endtime="20201030 15:55:01.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.675" endtime="20201030 15:55:01.682"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:01.686" endtime="20201030 15:55:01.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.684" endtime="20201030 15:55:01.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.683" endtime="20201030 15:55:01.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.330" endtime="20201030 15:55:01.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.330" endtime="20201030 15:55:01.706"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.718" endtime="20201030 15:55:01.731"></status>
</kw>
<msg timestamp="20201030 15:55:01.732" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.716" endtime="20201030 15:55:01.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.735" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.733" endtime="20201030 15:55:01.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.736" endtime="20201030 15:55:01.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.712" endtime="20201030 15:55:01.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.709" endtime="20201030 15:55:01.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.751" endtime="20201030 15:55:02.038"></status>
</kw>
<msg timestamp="20201030 15:55:02.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021575528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021632889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:01.749" endtime="20201030 15:55:02.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021575528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021632889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:02.042" endtime="20201030 15:55:02.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.051" endtime="20201030 15:55:02.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.744" endtime="20201030 15:55:02.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.741" endtime="20201030 15:55:02.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:02.057" level="INFO">${PHILIP_RES} = [{'diff': 5.736099999999883e-05}, {'diff': 5.70550000000003e-05}, {'diff': 5.706899999999987e-05}, {'diff': 5.7028000000000634e-05}, {'diff': 5.708299999999944e-05}, {'diff': 5.7069999999999343e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:02.054" endtime="20201030 15:55:02.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:02.061" level="INFO">${RESULT} = {'diff': [5.736099999999883e-05, 5.70550000000003e-05, 5.706899999999987e-05, 5.7028000000000634e-05, 5.708299999999944e-05, 5.7069999999999343e-05, 5.715300000000076e-05, 5.7042000000000204e-05, 5.70...</msg>
<status status="PASS" starttime="20201030 15:55:02.058" endtime="20201030 15:55:02.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.066" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:02.065" endtime="20201030 15:55:02.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.068" level="INFO">VALUE: [5.736099999999883e-05, 5.70550000000003e-05, 5.706899999999987e-05, 5.7028000000000634e-05, 5.708299999999944e-05, 5.7069999999999343e-05, 5.715300000000076e-05, 5.7042000000000204e-05, 5.708300000000291e-05, 5.7055999999999774e-05, 5.708299999999944e-05, 5.7042000000000204e-05, 5.7083999999998913e-05, 5.709699999999901e-05, 5.7055999999999774e-05, 5.712499999999815e-05, 5.7069999999999343e-05, 5.709700000000248e-05, 5.708299999999944e-05, 5.708299999999944e-05, 5.706899999999987e-05, 5.7083999999998913e-05, 5.706899999999987e-05, 5.7069999999999343e-05, 5.7028000000000634e-05, 5.7083999999998913e-05, 5.70550000000003e-05, 5.7069999999999343e-05, 5.706899999999987e-05, 5.706899999999987e-05, 5.7042000000000204e-05, 5.706899999999987e-05, 5.7083999999998913e-05, 5.706899999999987e-05, 5.7083999999998913e-05, 5.70550000000003e-05, 5.708400000000238e-05, 5.709699999999901e-05, 5.7055999999999774e-05, 5.708299999999944e-05, 5.708299999999944e-05, 5.7083999999998913e-05, 5.706899999999987e-05, 5.7083999999998913e-05, 5.70550000000003e-05, 5.7069999999999343e-05, 5.706899999999987e-05, 5.7055999999999774e-05, 5.7042000000000204e-05, 5.7028000000000634e-05]</msg>
<status status="PASS" starttime="20201030 15:55:02.067" endtime="20201030 15:55:02.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.062" endtime="20201030 15:55:02.069"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:02.073" endtime="20201030 15:55:02.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.072" endtime="20201030 15:55:02.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.070" endtime="20201030 15:55:02.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.707" endtime="20201030 15:55:02.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.707" endtime="20201030 15:55:02.094"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.102" endtime="20201030 15:55:02.117"></status>
</kw>
<msg timestamp="20201030 15:55:02.118" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:02.101" endtime="20201030 15:55:02.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.120" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:02.119" endtime="20201030 15:55:02.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.121" endtime="20201030 15:55:02.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.098" endtime="20201030 15:55:02.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.096" endtime="20201030 15:55:02.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.130" endtime="20201030 15:55:02.417"></status>
</kw>
<msg timestamp="20201030 15:55:02.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019570444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019630042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:02.129" endtime="20201030 15:55:02.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019570444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019630042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:02.421" endtime="20201030 15:55:02.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.430" endtime="20201030 15:55:02.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.126" endtime="20201030 15:55:02.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.124" endtime="20201030 15:55:02.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:02.436" level="INFO">${PHILIP_RES} = [{'diff': 5.9598000000000984e-05}, {'diff': 5.9263999999999845e-05}, {'diff': 5.9291999999998984e-05}, {'diff': 5.933299999999822e-05}, {'diff': 5.930499999999908e-05}, {'diff': 5.931900000000212e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:02.433" endtime="20201030 15:55:02.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:02.440" level="INFO">${RESULT} = {'diff': [5.9598000000000984e-05, 5.9263999999999845e-05, 5.9291999999998984e-05, 5.933299999999822e-05, 5.930499999999908e-05, 5.931900000000212e-05, 5.931899999999865e-05, 5.93750000000004e-05, 5.93...</msg>
<status status="PASS" starttime="20201030 15:55:02.437" endtime="20201030 15:55:02.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.445" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:02.443" endtime="20201030 15:55:02.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.448" level="INFO">VALUE: [5.9598000000000984e-05, 5.9263999999999845e-05, 5.9291999999998984e-05, 5.933299999999822e-05, 5.930499999999908e-05, 5.931900000000212e-05, 5.931899999999865e-05, 5.93750000000004e-05, 5.938899999999997e-05, 5.9292000000002454e-05, 5.9291999999998984e-05, 5.9264000000003314e-05, 5.930499999999908e-05, 5.934700000000126e-05, 5.934699999999779e-05, 5.930499999999908e-05, 5.931900000000212e-05, 5.9291999999998984e-05, 5.9306000000002024e-05, 5.9333999999997694e-05, 5.9320000000001594e-05, 5.931899999999865e-05, 5.930499999999908e-05, 5.930499999999908e-05, 5.9263999999999845e-05, 5.931900000000212e-05, 5.9305999999998554e-05, 5.93750000000004e-05, 5.9291999999998984e-05, 5.9306000000002024e-05, 5.931899999999865e-05, 5.930499999999908e-05, 5.929099999999951e-05, 5.929099999999951e-05, 5.930499999999908e-05, 5.930499999999908e-05, 5.934699999999779e-05, 5.9277999999999414e-05, 5.9320000000001594e-05, 5.9305999999998554e-05, 5.930500000000255e-05, 5.930499999999908e-05, 5.930499999999908e-05, 5.930499999999908e-05, 5.9305999999998554e-05, 5.9306000000002024e-05, 5.9291999999998984e-05, 5.9306000000002024e-05, 5.9305999999998554e-05, 5.9278000000002884e-05]</msg>
<status status="PASS" starttime="20201030 15:55:02.446" endtime="20201030 15:55:02.452"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.441" endtime="20201030 15:55:02.452"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:02.457" endtime="20201030 15:55:02.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.455" endtime="20201030 15:55:02.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.453" endtime="20201030 15:55:02.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.095" endtime="20201030 15:55:02.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.094" endtime="20201030 15:55:02.477"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.486" endtime="20201030 15:55:02.500"></status>
</kw>
<msg timestamp="20201030 15:55:02.501" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:02.484" endtime="20201030 15:55:02.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.503" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:02.502" endtime="20201030 15:55:02.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.504" endtime="20201030 15:55:02.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.482" endtime="20201030 15:55:02.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.480" endtime="20201030 15:55:02.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.513" endtime="20201030 15:55:02.799"></status>
</kw>
<msg timestamp="20201030 15:55:02.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018648028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018709875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:02.512" endtime="20201030 15:55:02.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018648028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018709875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:02.803" endtime="20201030 15:55:02.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.811" endtime="20201030 15:55:02.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.509" endtime="20201030 15:55:02.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.508" endtime="20201030 15:55:02.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:02.818" level="INFO">${PHILIP_RES} = [{'diff': 6.184700000000029e-05}, {'diff': 6.154200000000123e-05}, {'diff': 6.154200000000123e-05}, {'diff': 6.158399999999994e-05}, {'diff': 6.155499999999786e-05}, {'diff': 6.154200000000123e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:02.815" endtime="20201030 15:55:02.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:02.822" level="INFO">${RESULT} = {'diff': [6.184700000000029e-05, 6.154200000000123e-05, 6.154200000000123e-05, 6.158399999999994e-05, 6.155499999999786e-05, 6.154200000000123e-05, 6.155500000000133e-05, 6.15690000000009e-05, 6.15559...</msg>
<status status="PASS" starttime="20201030 15:55:02.819" endtime="20201030 15:55:02.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.827" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:02.826" endtime="20201030 15:55:02.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.829" level="INFO">VALUE: [6.184700000000029e-05, 6.154200000000123e-05, 6.154200000000123e-05, 6.158399999999994e-05, 6.155499999999786e-05, 6.154200000000123e-05, 6.155500000000133e-05, 6.15690000000009e-05, 6.155599999999734e-05, 6.152699999999872e-05, 6.151299999999915e-05, 6.158399999999994e-05, 6.15279999999982e-05, 6.15560000000008e-05, 6.148599999999949e-05, 6.15690000000009e-05, 6.161099999999961e-05, 6.163899999999875e-05, 6.155499999999786e-05, 6.15560000000008e-05, 6.155500000000133e-05, 6.147299999999939e-05, 6.15560000000008e-05, 6.155499999999786e-05, 6.155599999999734e-05, 6.155499999999786e-05, 6.155499999999786e-05, 6.154200000000123e-05, 6.155500000000133e-05, 6.159700000000004e-05, 6.15560000000008e-05, 6.155499999999786e-05, 6.15560000000008e-05, 6.155599999999734e-05, 6.156899999999743e-05, 6.15560000000008e-05, 6.155500000000133e-05, 6.155500000000133e-05, 6.154200000000123e-05, 6.155500000000133e-05, 6.155499999999786e-05, 6.15699999999969e-05, 6.15690000000009e-05, 6.15560000000008e-05, 6.15560000000008e-05, 6.161099999999961e-05, 6.15560000000008e-05, 6.158300000000047e-05, 6.158300000000047e-05, 6.157000000000037e-05]</msg>
<status status="PASS" starttime="20201030 15:55:02.828" endtime="20201030 15:55:02.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.823" endtime="20201030 15:55:02.831"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:02.834" endtime="20201030 15:55:02.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.833" endtime="20201030 15:55:02.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.832" endtime="20201030 15:55:02.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.478" endtime="20201030 15:55:02.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.478" endtime="20201030 15:55:02.855"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.863" endtime="20201030 15:55:02.877"></status>
</kw>
<msg timestamp="20201030 15:55:02.878" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:02.862" endtime="20201030 15:55:02.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.880" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:02.879" endtime="20201030 15:55:02.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.881" endtime="20201030 15:55:02.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.859" endtime="20201030 15:55:02.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.857" endtime="20201030 15:55:02.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.890" endtime="20201030 15:55:03.176"></status>
</kw>
<msg timestamp="20201030 15:55:03.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018646125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018710222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:02.889" endtime="20201030 15:55:03.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018646125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018710222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:03.181" endtime="20201030 15:55:03.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.189" endtime="20201030 15:55:03.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.886" endtime="20201030 15:55:03.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.884" endtime="20201030 15:55:03.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:03.195" level="INFO">${PHILIP_RES} = [{'diff': 6.409699999999907e-05}, {'diff': 6.387500000000143e-05}, {'diff': 6.383299999999925e-05}, {'diff': 6.384800000000176e-05}, {'diff': 6.383299999999925e-05}, {'diff': 6.384800000000176e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:03.192" endtime="20201030 15:55:03.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:03.199" level="INFO">${RESULT} = {'diff': [6.409699999999907e-05, 6.387500000000143e-05, 6.383299999999925e-05, 6.384800000000176e-05, 6.383299999999925e-05, 6.384800000000176e-05, 6.384700000000229e-05, 6.38479999999983e-05, 6.38469...</msg>
<status status="PASS" starttime="20201030 15:55:03.196" endtime="20201030 15:55:03.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.204" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:03.203" endtime="20201030 15:55:03.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.206" level="INFO">VALUE: [6.409699999999907e-05, 6.387500000000143e-05, 6.383299999999925e-05, 6.384800000000176e-05, 6.383299999999925e-05, 6.384800000000176e-05, 6.384700000000229e-05, 6.38479999999983e-05, 6.384699999999882e-05, 6.384699999999882e-05, 6.384700000000229e-05, 6.384699999999882e-05, 6.383300000000272e-05, 6.381899999999968e-05, 6.381999999999916e-05, 6.383300000000272e-05, 6.383399999999873e-05, 6.381900000000315e-05, 6.387500000000143e-05, 6.384699999999882e-05, 6.386199999999786e-05, 6.383299999999925e-05, 6.38340000000022e-05, 6.381899999999968e-05, 6.384800000000176e-05, 6.386099999999839e-05, 6.3889000000001e-05, 6.386099999999839e-05, 6.390300000000057e-05, 6.384699999999882e-05, 6.381899999999968e-05, 6.387500000000143e-05, 6.386099999999839e-05, 6.3889000000001e-05, 6.386099999999839e-05, 6.384699999999882e-05, 6.383299999999925e-05, 6.383399999999873e-05, 6.384700000000229e-05, 6.387500000000143e-05, 6.384700000000229e-05, 6.386099999999839e-05, 6.384700000000229e-05, 6.384800000000176e-05, 6.386100000000186e-05, 6.384700000000229e-05, 6.383299999999925e-05, 6.383300000000272e-05, 6.384699999999882e-05, 6.384699999999882e-05]</msg>
<status status="PASS" starttime="20201030 15:55:03.205" endtime="20201030 15:55:03.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.200" endtime="20201030 15:55:03.207"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:03.211" endtime="20201030 15:55:03.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.209" endtime="20201030 15:55:03.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.208" endtime="20201030 15:55:03.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.856" endtime="20201030 15:55:03.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.855" endtime="20201030 15:55:03.232"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.240" endtime="20201030 15:55:03.256"></status>
</kw>
<msg timestamp="20201030 15:55:03.256" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:03.239" endtime="20201030 15:55:03.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.259" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:03.258" endtime="20201030 15:55:03.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.260" endtime="20201030 15:55:03.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.236" endtime="20201030 15:55:03.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.234" endtime="20201030 15:55:03.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.269" endtime="20201030 15:55:03.555"></status>
</kw>
<msg timestamp="20201030 15:55:03.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019408097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019474528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:03.268" endtime="20201030 15:55:03.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019408097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019474528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:03.559" endtime="20201030 15:55:03.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.567" endtime="20201030 15:55:03.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.265" endtime="20201030 15:55:03.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.263" endtime="20201030 15:55:03.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:03.573" level="INFO">${PHILIP_RES} = [{'diff': 6.643100000000221e-05}, {'diff': 6.615299999999935e-05}, {'diff': 6.613899999999978e-05}, {'diff': 6.62220000000012e-05}, {'diff': 6.618099999999849e-05}, {'diff': 6.615299999999935e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:03.570" endtime="20201030 15:55:03.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:03.578" level="INFO">${RESULT} = {'diff': [6.643100000000221e-05, 6.615299999999935e-05, 6.613899999999978e-05, 6.62220000000012e-05, 6.618099999999849e-05, 6.615299999999935e-05, 6.60969999999976e-05, 6.615300000000282e-05, 6.611100...</msg>
<status status="PASS" starttime="20201030 15:55:03.574" endtime="20201030 15:55:03.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.582" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:03.581" endtime="20201030 15:55:03.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.584" level="INFO">VALUE: [6.643100000000221e-05, 6.615299999999935e-05, 6.613899999999978e-05, 6.62220000000012e-05, 6.618099999999849e-05, 6.615299999999935e-05, 6.60969999999976e-05, 6.615300000000282e-05, 6.611100000000064e-05, 6.613899999999978e-05, 6.613800000000031e-05, 6.615300000000282e-05, 6.616699999999892e-05, 6.606899999999846e-05, 6.620800000000163e-05, 6.612500000000021e-05, 6.615299999999935e-05, 6.612500000000021e-05, 6.616700000000239e-05, 6.615299999999935e-05, 6.616599999999945e-05, 6.619400000000206e-05, 6.615299999999935e-05, 6.616699999999892e-05, 6.60839999999975e-05, 6.615300000000282e-05, 6.613899999999978e-05, 6.60830000000015e-05, 6.613899999999978e-05, 6.615299999999935e-05, 6.613899999999978e-05, 6.615199999999988e-05, 6.615300000000282e-05, 6.616699999999892e-05, 6.613899999999978e-05, 6.612500000000021e-05, 6.615300000000282e-05, 6.60830000000015e-05, 6.611100000000064e-05, 6.613899999999978e-05, 6.606900000000193e-05, 6.613899999999978e-05, 6.613899999999978e-05, 6.615300000000282e-05, 6.619499999999806e-05, 6.616599999999945e-05, 6.606999999999794e-05, 6.620899999999763e-05, 6.613899999999978e-05, 6.615299999999935e-05]</msg>
<status status="PASS" starttime="20201030 15:55:03.583" endtime="20201030 15:55:03.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.578" endtime="20201030 15:55:03.586"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:03.590" endtime="20201030 15:55:03.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.589" endtime="20201030 15:55:03.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.587" endtime="20201030 15:55:03.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.233" endtime="20201030 15:55:03.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.232" endtime="20201030 15:55:03.611"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.619" endtime="20201030 15:55:03.634"></status>
</kw>
<msg timestamp="20201030 15:55:03.635" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:03.618" endtime="20201030 15:55:03.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.637" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:03.636" endtime="20201030 15:55:03.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.638" endtime="20201030 15:55:03.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.615" endtime="20201030 15:55:03.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.613" endtime="20201030 15:55:03.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.647" endtime="20201030 15:55:03.933"></status>
</kw>
<msg timestamp="20201030 15:55:03.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018587236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018656, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:03.646" endtime="20201030 15:55:03.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018587236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018656, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:03.937" endtime="20201030 15:55:03.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.945" endtime="20201030 15:55:03.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.643" endtime="20201030 15:55:03.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.641" endtime="20201030 15:55:03.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:03.952" level="INFO">${PHILIP_RES} = [{'diff': 6.876399999999894e-05}, {'diff': 6.847299999999945e-05}, {'diff': 6.848599999999955e-05}, {'diff': 6.849999999999912e-05}, {'diff': 6.848599999999955e-05}, {'diff': 6.847300000000292e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:03.948" endtime="20201030 15:55:03.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:03.957" level="INFO">${RESULT} = {'diff': [6.876399999999894e-05, 6.847299999999945e-05, 6.848599999999955e-05, 6.849999999999912e-05, 6.848599999999955e-05, 6.847300000000292e-05, 6.848599999999955e-05, 6.856900000000096e-05, 6.8486...</msg>
<status status="PASS" starttime="20201030 15:55:03.953" endtime="20201030 15:55:03.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.961" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:03.960" endtime="20201030 15:55:03.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.963" level="INFO">VALUE: [6.876399999999894e-05, 6.847299999999945e-05, 6.848599999999955e-05, 6.849999999999912e-05, 6.848599999999955e-05, 6.847300000000292e-05, 6.848599999999955e-05, 6.856900000000096e-05, 6.848699999999902e-05, 6.850000000000259e-05, 6.848599999999955e-05, 6.845800000000041e-05, 6.847199999999998e-05, 6.848599999999955e-05, 6.847199999999998e-05, 6.848599999999955e-05, 6.848600000000302e-05, 6.849999999999912e-05, 6.849999999999912e-05, 6.849999999999912e-05, 6.848599999999955e-05, 6.847199999999998e-05, 6.849999999999912e-05, 6.851400000000216e-05, 6.848599999999955e-05, 6.848599999999955e-05, 6.849999999999912e-05, 6.848700000000249e-05, 6.849999999999912e-05, 6.848599999999955e-05, 6.849999999999912e-05, 6.847199999999998e-05, 6.849999999999912e-05, 6.847199999999998e-05, 6.849999999999912e-05, 6.848599999999955e-05, 6.844400000000084e-05, 6.848599999999955e-05, 6.848599999999955e-05, 6.847199999999998e-05, 6.848599999999955e-05, 6.848599999999955e-05, 6.848600000000302e-05, 6.856899999999749e-05, 6.848599999999955e-05, 6.850000000000259e-05, 6.848700000000249e-05, 6.847199999999998e-05, 6.848599999999955e-05, 6.850000000000259e-05]</msg>
<status status="PASS" starttime="20201030 15:55:03.962" endtime="20201030 15:55:03.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.957" endtime="20201030 15:55:03.972"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:03.975" endtime="20201030 15:55:03.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.974" endtime="20201030 15:55:03.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.973" endtime="20201030 15:55:03.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.612" endtime="20201030 15:55:03.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.611" endtime="20201030 15:55:03.996"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.005" endtime="20201030 15:55:04.020"></status>
</kw>
<msg timestamp="20201030 15:55:04.020" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.003" endtime="20201030 15:55:04.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.023" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.022" endtime="20201030 15:55:04.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.024" endtime="20201030 15:55:04.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.001" endtime="20201030 15:55:04.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.998" endtime="20201030 15:55:04.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.033" endtime="20201030 15:55:04.319"></status>
</kw>
<msg timestamp="20201030 15:55:04.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018903014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018974139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:04.031" endtime="20201030 15:55:04.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018903014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018974139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:04.323" endtime="20201030 15:55:04.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.331" endtime="20201030 15:55:04.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.029" endtime="20201030 15:55:04.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.027" endtime="20201030 15:55:04.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:04.338" level="INFO">${PHILIP_RES} = [{'diff': 7.112500000000174e-05}, {'diff': 7.084800000000183e-05}, {'diff': 7.087500000000149e-05}, {'diff': 7.084699999999888e-05}, {'diff': 7.086100000000192e-05}, {'diff': 7.086099999999845e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:04.335" endtime="20201030 15:55:04.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:04.342" level="INFO">${RESULT} = {'diff': [7.112500000000174e-05, 7.084800000000183e-05, 7.087500000000149e-05, 7.084699999999888e-05, 7.086100000000192e-05, 7.086099999999845e-05, 7.088799999999812e-05, 7.09300000000003e-05, 7.08329...</msg>
<status status="PASS" starttime="20201030 15:55:04.339" endtime="20201030 15:55:04.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.346" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:04.345" endtime="20201030 15:55:04.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.349" level="INFO">VALUE: [7.112500000000174e-05, 7.084800000000183e-05, 7.087500000000149e-05, 7.084699999999888e-05, 7.086100000000192e-05, 7.086099999999845e-05, 7.088799999999812e-05, 7.09300000000003e-05, 7.083299999999931e-05, 7.083400000000226e-05, 7.083299999999931e-05, 7.084700000000235e-05, 7.088900000000106e-05, 7.086100000000192e-05, 7.084699999999888e-05, 7.086100000000192e-05, 7.083299999999931e-05, 7.086099999999845e-05, 7.086099999999845e-05, 7.084699999999888e-05, 7.084700000000235e-05, 7.084699999999888e-05, 7.084800000000183e-05, 7.086099999999845e-05, 7.084700000000235e-05, 7.084799999999836e-05, 7.081899999999974e-05, 7.084699999999888e-05, 7.086199999999793e-05, 7.086100000000192e-05, 7.087499999999802e-05, 7.083300000000278e-05, 7.080599999999965e-05, 7.087500000000149e-05, 7.084799999999836e-05, 7.086100000000192e-05, 7.084699999999888e-05, 7.088899999999759e-05, 7.084700000000235e-05, 7.084699999999888e-05, 7.086100000000192e-05, 7.088899999999759e-05, 7.091600000000073e-05, 7.086099999999845e-05, 7.084800000000183e-05, 7.084699999999888e-05, 7.083299999999931e-05, 7.084800000000183e-05, 7.086099999999845e-05, 7.084699999999888e-05]</msg>
<status status="PASS" starttime="20201030 15:55:04.347" endtime="20201030 15:55:04.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.343" endtime="20201030 15:55:04.350"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:04.354" endtime="20201030 15:55:04.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.352" endtime="20201030 15:55:04.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.351" endtime="20201030 15:55:04.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.997" endtime="20201030 15:55:04.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.996" endtime="20201030 15:55:04.374"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.383" endtime="20201030 15:55:04.399"></status>
</kw>
<msg timestamp="20201030 15:55:04.399" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.381" endtime="20201030 15:55:04.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.402" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.401" endtime="20201030 15:55:04.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.403" endtime="20201030 15:55:04.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.379" endtime="20201030 15:55:04.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.377" endtime="20201030 15:55:04.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.412" endtime="20201030 15:55:04.698"></status>
</kw>
<msg timestamp="20201030 15:55:04.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019377653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019451181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:04.410" endtime="20201030 15:55:04.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019377653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019451181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:04.702" endtime="20201030 15:55:04.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.710" endtime="20201030 15:55:04.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.408" endtime="20201030 15:55:04.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.406" endtime="20201030 15:55:04.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:04.717" level="INFO">${PHILIP_RES} = [{'diff': 7.352799999999979e-05}, {'diff': 7.32500000000004e-05}, {'diff': 7.326399999999997e-05}, {'diff': 7.32500000000004e-05}, {'diff': 7.326399999999997e-05}, {'diff': 7.326399999999997e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:55:04.713" endtime="20201030 15:55:04.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:04.721" level="INFO">${RESULT} = {'diff': [7.352799999999979e-05, 7.32500000000004e-05, 7.326399999999997e-05, 7.32500000000004e-05, 7.326399999999997e-05, 7.326399999999997e-05, 7.32500000000004e-05, 7.32500000000004e-05, 7.32779999...</msg>
<status status="PASS" starttime="20201030 15:55:04.718" endtime="20201030 15:55:04.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.725" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:04.724" endtime="20201030 15:55:04.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.727" level="INFO">VALUE: [7.352799999999979e-05, 7.32500000000004e-05, 7.326399999999997e-05, 7.32500000000004e-05, 7.326399999999997e-05, 7.326399999999997e-05, 7.32500000000004e-05, 7.32500000000004e-05, 7.327799999999954e-05, 7.327799999999954e-05, 7.323600000000083e-05, 7.32500000000004e-05, 7.32500000000004e-05, 7.32630000000005e-05, 7.323600000000083e-05, 7.323600000000083e-05, 7.32500000000004e-05, 7.323600000000083e-05, 7.327799999999954e-05, 7.323600000000083e-05, 7.32500000000004e-05, 7.323600000000083e-05, 7.324999999999693e-05, 7.320800000000169e-05, 7.326399999999997e-05, 7.326399999999997e-05, 7.32500000000004e-05, 7.32500000000004e-05, 7.319499999999812e-05, 7.32500000000004e-05, 7.326400000000344e-05, 7.326399999999997e-05, 7.326399999999997e-05, 7.329199999999911e-05, 7.326399999999997e-05, 7.32500000000004e-05, 7.323600000000083e-05, 7.32500000000004e-05, 7.326399999999997e-05, 7.323600000000083e-05, 7.32500000000004e-05, 7.32500000000004e-05, 7.32500000000004e-05, 7.32500000000004e-05, 7.32500000000004e-05, 7.32500000000004e-05, 7.329199999999911e-05, 7.32500000000004e-05, 7.329199999999911e-05, 7.32500000000004e-05]</msg>
<status status="PASS" starttime="20201030 15:55:04.726" endtime="20201030 15:55:04.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.722" endtime="20201030 15:55:04.730"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:04.733" endtime="20201030 15:55:04.752"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.732" endtime="20201030 15:55:04.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.730" endtime="20201030 15:55:04.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.375" endtime="20201030 15:55:04.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.375" endtime="20201030 15:55:04.754"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.762" endtime="20201030 15:55:04.778"></status>
</kw>
<msg timestamp="20201030 15:55:04.779" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.761" endtime="20201030 15:55:04.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.781" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.780" endtime="20201030 15:55:04.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.782" endtime="20201030 15:55:04.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.758" endtime="20201030 15:55:04.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.756" endtime="20201030 15:55:04.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.791" endtime="20201030 15:55:05.077"></status>
</kw>
<msg timestamp="20201030 15:55:05.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018663458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018739417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:04.790" endtime="20201030 15:55:05.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018663458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018739417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:05.081" endtime="20201030 15:55:05.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.090" endtime="20201030 15:55:05.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.787" endtime="20201030 15:55:05.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.786" endtime="20201030 15:55:05.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:05.096" level="INFO">${PHILIP_RES} = [{'diff': 7.595900000000044e-05}, {'diff': 7.565300000000191e-05}, {'diff': 7.566700000000148e-05}, {'diff': 7.568100000000105e-05}, {'diff': 7.566699999999801e-05}, {'diff': 7.566700000000148e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:05.093" endtime="20201030 15:55:05.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:05.101" level="INFO">${RESULT} = {'diff': [7.595900000000044e-05, 7.565300000000191e-05, 7.566700000000148e-05, 7.568100000000105e-05, 7.566699999999801e-05, 7.566700000000148e-05, 7.566599999999854e-05, 7.568099999999758e-05, 7.5624...</msg>
<status status="PASS" starttime="20201030 15:55:05.097" endtime="20201030 15:55:05.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.105" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:05.104" endtime="20201030 15:55:05.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.108" level="INFO">VALUE: [7.595900000000044e-05, 7.565300000000191e-05, 7.566700000000148e-05, 7.568100000000105e-05, 7.566699999999801e-05, 7.566700000000148e-05, 7.566599999999854e-05, 7.568099999999758e-05, 7.56249999999993e-05, 7.565300000000191e-05, 7.566599999999854e-05, 7.566700000000148e-05, 7.568100000000105e-05, 7.565300000000191e-05, 7.566700000000148e-05, 7.569400000000115e-05, 7.561099999999973e-05, 7.566600000000201e-05, 7.565300000000191e-05, 7.566599999999854e-05, 7.566699999999801e-05, 7.565300000000191e-05, 7.566699999999801e-05, 7.566600000000201e-05, 7.566700000000148e-05, 7.566699999999801e-05, 7.568000000000158e-05, 7.566700000000148e-05, 7.566599999999854e-05, 7.566700000000148e-05, 7.566599999999854e-05, 7.572200000000029e-05, 7.565199999999897e-05, 7.563900000000234e-05, 7.566700000000148e-05, 7.566700000000148e-05, 7.563900000000234e-05, 7.569400000000115e-05, 7.566700000000148e-05, 7.566700000000148e-05, 7.569500000000062e-05, 7.566599999999854e-05, 7.568100000000105e-05, 7.566599999999854e-05, 7.568099999999758e-05, 7.561099999999973e-05, 7.561099999999973e-05, 7.566699999999801e-05, 7.566700000000148e-05, 7.568099999999758e-05]</msg>
<status status="PASS" starttime="20201030 15:55:05.107" endtime="20201030 15:55:05.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.102" endtime="20201030 15:55:05.110"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:05.115" endtime="20201030 15:55:05.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.113" endtime="20201030 15:55:05.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.112" endtime="20201030 15:55:05.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.755" endtime="20201030 15:55:05.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.754" endtime="20201030 15:55:05.137"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.148" endtime="20201030 15:55:05.164"></status>
</kw>
<msg timestamp="20201030 15:55:05.165" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:05.146" endtime="20201030 15:55:05.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.167" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:05.166" endtime="20201030 15:55:05.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.168" endtime="20201030 15:55:05.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.142" endtime="20201030 15:55:05.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.140" endtime="20201030 15:55:05.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.177" endtime="20201030 15:55:05.464"></status>
</kw>
<msg timestamp="20201030 15:55:05.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022486917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:05.176" endtime="20201030 15:55:05.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022486917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:05.468" endtime="20201030 15:55:05.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.476" endtime="20201030 15:55:05.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.173" endtime="20201030 15:55:05.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.171" endtime="20201030 15:55:05.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:05.483" level="INFO">${PHILIP_RES} = [{'diff': 7.834700000000291e-05}, {'diff': 7.811099999999876e-05}, {'diff': 7.812499999999833e-05}, {'diff': 7.81250000000018e-05}, {'diff': 7.808299999999962e-05}, {'diff': 7.813900000000137e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:05.480" endtime="20201030 15:55:05.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:05.487" level="INFO">${RESULT} = {'diff': [7.834700000000291e-05, 7.811099999999876e-05, 7.812499999999833e-05, 7.81250000000018e-05, 7.808299999999962e-05, 7.813900000000137e-05, 7.811099999999876e-05, 7.806999999999953e-05, 7.81109...</msg>
<status status="PASS" starttime="20201030 15:55:05.484" endtime="20201030 15:55:05.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.491" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:05.490" endtime="20201030 15:55:05.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.494" level="INFO">VALUE: [7.834700000000291e-05, 7.811099999999876e-05, 7.812499999999833e-05, 7.81250000000018e-05, 7.808299999999962e-05, 7.813900000000137e-05, 7.811099999999876e-05, 7.806999999999953e-05, 7.811099999999876e-05, 7.813900000000137e-05, 7.81250000000018e-05, 7.812499999999833e-05, 7.813900000000137e-05, 7.81389999999979e-05, 7.81250000000018e-05, 7.815299999999747e-05, 7.81250000000018e-05, 7.806900000000006e-05, 7.804100000000092e-05, 7.812499999999833e-05, 7.815200000000147e-05, 7.812499999999833e-05, 7.813900000000137e-05, 7.812499999999833e-05, 7.811200000000171e-05, 7.812499999999833e-05, 7.819400000000018e-05, 7.812499999999833e-05, 7.815300000000094e-05, 7.811099999999876e-05, 7.808299999999962e-05, 7.811099999999876e-05, 7.81250000000018e-05, 7.809800000000214e-05, 7.815299999999747e-05, 7.813900000000137e-05, 7.812499999999833e-05, 7.811200000000171e-05, 7.81389999999979e-05, 7.811100000000223e-05, 7.811099999999876e-05, 7.811200000000171e-05, 7.812499999999833e-05, 7.81250000000018e-05, 7.812499999999833e-05, 7.81250000000018e-05, 7.816600000000104e-05, 7.81250000000018e-05, 7.805500000000049e-05, 7.81250000000018e-05]</msg>
<status status="PASS" starttime="20201030 15:55:05.492" endtime="20201030 15:55:05.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.488" endtime="20201030 15:55:05.495"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:05.500" endtime="20201030 15:55:05.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.498" endtime="20201030 15:55:05.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.496" endtime="20201030 15:55:05.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.138" endtime="20201030 15:55:05.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.138" endtime="20201030 15:55:05.521"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.529" endtime="20201030 15:55:05.546"></status>
</kw>
<msg timestamp="20201030 15:55:05.547" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:05.527" endtime="20201030 15:55:05.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.549" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:05.548" endtime="20201030 15:55:05.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.550" endtime="20201030 15:55:05.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.525" endtime="20201030 15:55:05.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.523" endtime="20201030 15:55:05.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.559" endtime="20201030 15:55:05.845"></status>
</kw>
<msg timestamp="20201030 15:55:05.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019752333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019833208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:05.558" endtime="20201030 15:55:05.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019752333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019833208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:05.849" endtime="20201030 15:55:05.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.857" endtime="20201030 15:55:05.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.555" endtime="20201030 15:55:05.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.553" endtime="20201030 15:55:05.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:05.864" level="INFO">${PHILIP_RES} = [{'diff': 8.087500000000108e-05}, {'diff': 8.059800000000117e-05}, {'diff': 8.059800000000117e-05}, {'diff': 8.058299999999866e-05}, {'diff': 8.059699999999823e-05}, {'diff': 8.057000000000203e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:05.861" endtime="20201030 15:55:05.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:05.868" level="INFO">${RESULT} = {'diff': [8.087500000000108e-05, 8.059800000000117e-05, 8.059800000000117e-05, 8.058299999999866e-05, 8.059699999999823e-05, 8.057000000000203e-05, 8.059800000000117e-05, 8.059699999999823e-05, 8.0569...</msg>
<status status="PASS" starttime="20201030 15:55:05.865" endtime="20201030 15:55:05.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.872" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:05.871" endtime="20201030 15:55:05.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.875" level="INFO">VALUE: [8.087500000000108e-05, 8.059800000000117e-05, 8.059800000000117e-05, 8.058299999999866e-05, 8.059699999999823e-05, 8.057000000000203e-05, 8.059800000000117e-05, 8.059699999999823e-05, 8.056900000000256e-05, 8.056999999999856e-05, 8.06109999999978e-05, 8.055599999999899e-05, 8.055599999999899e-05, 8.058399999999813e-05, 8.065299999999997e-05, 8.054199999999942e-05, 8.059800000000117e-05, 8.061100000000126e-05, 8.058299999999866e-05, 8.061100000000126e-05, 8.058300000000213e-05, 8.06109999999978e-05, 8.061100000000126e-05, 8.05970000000017e-05, 8.06109999999978e-05, 8.058299999999866e-05, 8.061100000000126e-05, 8.059699999999823e-05, 8.05970000000017e-05, 8.058300000000213e-05, 8.065299999999997e-05, 8.058300000000213e-05, 8.059699999999823e-05, 8.058399999999813e-05, 8.058300000000213e-05, 8.058299999999866e-05, 8.059699999999823e-05, 8.05840000000016e-05, 8.061100000000126e-05, 8.066600000000007e-05, 8.059800000000117e-05, 8.062499999999737e-05, 8.061100000000126e-05, 8.05840000000016e-05, 8.06109999999978e-05, 8.05970000000017e-05, 8.052799999999985e-05, 8.052799999999985e-05, 8.062500000000083e-05, 8.061100000000126e-05]</msg>
<status status="PASS" starttime="20201030 15:55:05.873" endtime="20201030 15:55:05.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.869" endtime="20201030 15:55:05.879"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:05.883" endtime="20201030 15:55:05.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.881" endtime="20201030 15:55:05.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.880" endtime="20201030 15:55:05.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.521" endtime="20201030 15:55:05.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.521" endtime="20201030 15:55:05.903"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.912" endtime="20201030 15:55:05.928"></status>
</kw>
<msg timestamp="20201030 15:55:05.929" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:05.910" endtime="20201030 15:55:05.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.931" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:05.930" endtime="20201030 15:55:05.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.932" endtime="20201030 15:55:05.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.908" endtime="20201030 15:55:05.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.906" endtime="20201030 15:55:05.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.941" endtime="20201030 15:55:06.226"></status>
</kw>
<msg timestamp="20201030 15:55:06.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018565778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018649153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:05.939" endtime="20201030 15:55:06.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018565778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018649153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:06.231" endtime="20201030 15:55:06.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.239" endtime="20201030 15:55:06.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.937" endtime="20201030 15:55:06.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.935" endtime="20201030 15:55:06.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:06.245" level="INFO">${PHILIP_RES} = [{'diff': 8.337500000000012e-05}, {'diff': 8.3152999999999e-05}, {'diff': 8.31110000000003e-05}, {'diff': 8.31110000000003e-05}, {'diff': 8.31110000000003e-05}, {'diff': 8.309700000000073e-05}, {'diff...</msg>
<status status="PASS" starttime="20201030 15:55:06.242" endtime="20201030 15:55:06.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:06.250" level="INFO">${RESULT} = {'diff': [8.337500000000012e-05, 8.3152999999999e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.309700000000073e-05, 8.31110000000003e-05, 8.309700000000073e-05, 8.3138999999...</msg>
<status status="PASS" starttime="20201030 15:55:06.246" endtime="20201030 15:55:06.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.255" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:06.254" endtime="20201030 15:55:06.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.257" level="INFO">VALUE: [8.337500000000012e-05, 8.3152999999999e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.309700000000073e-05, 8.31110000000003e-05, 8.309700000000073e-05, 8.313899999999944e-05, 8.312499999999987e-05, 8.318099999999815e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.309700000000073e-05, 8.309700000000073e-05, 8.312499999999987e-05, 8.30980000000002e-05, 8.309700000000073e-05, 8.313899999999944e-05, 8.30980000000002e-05, 8.311199999999977e-05, 8.309700000000073e-05, 8.309700000000073e-05, 8.30980000000002e-05, 8.315199999999953e-05, 8.31110000000003e-05, 8.308300000000116e-05, 8.305599999999802e-05, 8.309699999999726e-05, 8.309700000000073e-05, 8.309700000000073e-05, 8.31110000000003e-05, 8.309700000000073e-05, 8.304099999999898e-05, 8.31110000000003e-05, 8.309700000000073e-05, 8.306900000000159e-05, 8.309700000000073e-05, 8.31110000000003e-05, 8.311099999999683e-05, 8.305599999999802e-05, 8.309799999999673e-05, 8.311199999999977e-05, 8.30980000000002e-05, 8.308400000000063e-05, 8.31110000000003e-05, 8.309700000000073e-05, 8.312499999999987e-05, 8.31110000000003e-05, 8.31110000000003e-05]</msg>
<status status="PASS" starttime="20201030 15:55:06.256" endtime="20201030 15:55:06.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.251" endtime="20201030 15:55:06.259"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:06.262" endtime="20201030 15:55:06.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.261" endtime="20201030 15:55:06.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.260" endtime="20201030 15:55:06.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.904" endtime="20201030 15:55:06.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.904" endtime="20201030 15:55:06.283"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.291" endtime="20201030 15:55:06.308"></status>
</kw>
<msg timestamp="20201030 15:55:06.309" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:06.290" endtime="20201030 15:55:06.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.311" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:06.310" endtime="20201030 15:55:06.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.312" endtime="20201030 15:55:06.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.287" endtime="20201030 15:55:06.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.285" endtime="20201030 15:55:06.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.321" endtime="20201030 15:55:06.608"></status>
</kw>
<msg timestamp="20201030 15:55:06.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018686986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018772903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:06.320" endtime="20201030 15:55:06.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018686986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018772903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:06.612" endtime="20201030 15:55:06.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.620" endtime="20201030 15:55:06.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.317" endtime="20201030 15:55:06.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.315" endtime="20201030 15:55:06.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:06.627" level="INFO">${PHILIP_RES} = [{'diff': 8.591700000000133e-05}, {'diff': 8.563900000000194e-05}, {'diff': 8.562500000000237e-05}, {'diff': 8.561099999999933e-05}, {'diff': 8.563900000000194e-05}, {'diff': 8.561099999999933e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:06.623" endtime="20201030 15:55:06.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:06.631" level="INFO">${RESULT} = {'diff': [8.591700000000133e-05, 8.563900000000194e-05, 8.562500000000237e-05, 8.561099999999933e-05, 8.563900000000194e-05, 8.561099999999933e-05, 8.563900000000194e-05, 8.563899999999847e-05, 8.5625...</msg>
<status status="PASS" starttime="20201030 15:55:06.628" endtime="20201030 15:55:06.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.635" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:06.634" endtime="20201030 15:55:06.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.637" level="INFO">VALUE: [8.591700000000133e-05, 8.563900000000194e-05, 8.562500000000237e-05, 8.561099999999933e-05, 8.563900000000194e-05, 8.561099999999933e-05, 8.563900000000194e-05, 8.563899999999847e-05, 8.562500000000237e-05, 8.56249999999989e-05, 8.56110000000028e-05, 8.563799999999899e-05, 8.563900000000194e-05, 8.563899999999847e-05, 8.557000000000009e-05, 8.561099999999933e-05, 8.56110000000028e-05, 8.563899999999847e-05, 8.563900000000194e-05, 8.561099999999933e-05, 8.559699999999976e-05, 8.56249999999989e-05, 8.563900000000194e-05, 8.563799999999899e-05, 8.562500000000237e-05, 8.56249999999989e-05, 8.562500000000237e-05, 8.563899999999847e-05, 8.563900000000194e-05, 8.565299999999804e-05, 8.56249999999989e-05, 8.563899999999847e-05, 8.56530000000015e-05, 8.56249999999989e-05, 8.568100000000065e-05, 8.56249999999989e-05, 8.563899999999847e-05, 8.56119999999988e-05, 8.563799999999899e-05, 8.563899999999847e-05, 8.56530000000015e-05, 8.56249999999989e-05, 8.56249999999989e-05, 8.561099999999933e-05, 8.563899999999847e-05, 8.56249999999989e-05, 8.563899999999847e-05, 8.56530000000015e-05, 8.56249999999989e-05, 8.562500000000237e-05]</msg>
<status status="PASS" starttime="20201030 15:55:06.636" endtime="20201030 15:55:06.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.631" endtime="20201030 15:55:06.639"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:06.642" endtime="20201030 15:55:06.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.641" endtime="20201030 15:55:06.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.640" endtime="20201030 15:55:06.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.284" endtime="20201030 15:55:06.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.283" endtime="20201030 15:55:06.663"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.671" endtime="20201030 15:55:06.689"></status>
</kw>
<msg timestamp="20201030 15:55:06.690" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:06.670" endtime="20201030 15:55:06.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.692" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:06.691" endtime="20201030 15:55:06.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.693" endtime="20201030 15:55:06.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.667" endtime="20201030 15:55:06.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.665" endtime="20201030 15:55:06.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.702" endtime="20201030 15:55:06.988"></status>
</kw>
<msg timestamp="20201030 15:55:06.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019654333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019742833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:06.701" endtime="20201030 15:55:06.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019654333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019742833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:06.992" endtime="20201030 15:55:06.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.000" endtime="20201030 15:55:07.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.698" endtime="20201030 15:55:07.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.696" endtime="20201030 15:55:07.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:07.006" level="INFO">${PHILIP_RES} = [{'diff': 8.850000000000177e-05}, {'diff': 8.819399999999977e-05}, {'diff': 8.815200000000106e-05}, {'diff': 8.815200000000106e-05}, {'diff': 8.81800000000002e-05}, {'diff': 8.820799999999934e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:07.003" endtime="20201030 15:55:07.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:07.011" level="INFO">${RESULT} = {'diff': [8.850000000000177e-05, 8.819399999999977e-05, 8.815200000000106e-05, 8.815200000000106e-05, 8.81800000000002e-05, 8.820799999999934e-05, 8.822200000000238e-05, 8.819399999999977e-05, 8.82079...</msg>
<status status="PASS" starttime="20201030 15:55:07.007" endtime="20201030 15:55:07.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.015" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:07.014" endtime="20201030 15:55:07.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.017" level="INFO">VALUE: [8.850000000000177e-05, 8.819399999999977e-05, 8.815200000000106e-05, 8.815200000000106e-05, 8.81800000000002e-05, 8.820799999999934e-05, 8.822200000000238e-05, 8.819399999999977e-05, 8.820799999999934e-05, 8.819499999999925e-05, 8.827700000000119e-05, 8.817999999999673e-05, 8.818099999999968e-05, 8.819399999999977e-05, 8.819499999999925e-05, 8.819499999999925e-05, 8.819500000000272e-05, 8.820900000000229e-05, 8.819499999999925e-05, 8.819499999999925e-05, 8.818099999999968e-05, 8.819500000000272e-05, 8.818099999999968e-05, 8.820899999999882e-05, 8.822199999999891e-05, 8.818099999999968e-05, 8.822200000000238e-05, 8.819399999999977e-05, 8.820799999999934e-05, 8.819399999999977e-05, 8.819399999999977e-05, 8.820800000000281e-05, 8.820799999999934e-05, 8.819399999999977e-05, 8.81670000000001e-05, 8.820799999999934e-05, 8.819399999999977e-05, 8.819399999999977e-05, 8.820799999999934e-05, 8.819399999999977e-05, 8.822199999999891e-05, 8.820900000000229e-05, 8.813900000000097e-05, 8.820899999999882e-05, 8.818099999999968e-05, 8.819499999999925e-05, 8.819499999999925e-05, 8.819500000000272e-05, 8.819499999999925e-05, 8.819499999999925e-05]</msg>
<status status="PASS" starttime="20201030 15:55:07.016" endtime="20201030 15:55:07.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.011" endtime="20201030 15:55:07.020"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:07.023" endtime="20201030 15:55:07.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.022" endtime="20201030 15:55:07.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.021" endtime="20201030 15:55:07.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.664" endtime="20201030 15:55:07.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.663" endtime="20201030 15:55:07.044"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.052" endtime="20201030 15:55:07.069"></status>
</kw>
<msg timestamp="20201030 15:55:07.069" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.051" endtime="20201030 15:55:07.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.071" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.070" endtime="20201030 15:55:07.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.073" endtime="20201030 15:55:07.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.048" endtime="20201030 15:55:07.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.046" endtime="20201030 15:55:07.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.081" endtime="20201030 15:55:07.367"></status>
</kw>
<msg timestamp="20201030 15:55:07.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01848, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018571056, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:55:07.080" endtime="20201030 15:55:07.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01848, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018571056, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:55:07.372" endtime="20201030 15:55:07.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.379" endtime="20201030 15:55:07.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.077" endtime="20201030 15:55:07.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.076" endtime="20201030 15:55:07.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:07.386" level="INFO">${PHILIP_RES} = [{'diff': 9.105599999999908e-05}, {'diff': 9.079199999999926e-05}, {'diff': 9.077799999999969e-05}, {'diff': 9.077799999999969e-05}, {'diff': 9.080599999999883e-05}, {'diff': 9.077700000000022e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:07.383" endtime="20201030 15:55:07.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:07.391" level="INFO">${RESULT} = {'diff': [9.105599999999908e-05, 9.079199999999926e-05, 9.077799999999969e-05, 9.077799999999969e-05, 9.080599999999883e-05, 9.077700000000022e-05, 9.080599999999883e-05, 9.077700000000022e-05, 9.0791...</msg>
<status status="PASS" starttime="20201030 15:55:07.387" endtime="20201030 15:55:07.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.395" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:07.394" endtime="20201030 15:55:07.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.398" level="INFO">VALUE: [9.105599999999908e-05, 9.079199999999926e-05, 9.077799999999969e-05, 9.077799999999969e-05, 9.080599999999883e-05, 9.077700000000022e-05, 9.080599999999883e-05, 9.077700000000022e-05, 9.079199999999926e-05, 9.077700000000022e-05, 9.077799999999969e-05, 9.079099999999979e-05, 9.077799999999969e-05, 9.076400000000012e-05, 9.08199999999984e-05, 9.073600000000098e-05, 9.077799999999969e-05, 9.077799999999969e-05, 9.077700000000022e-05, 9.070800000000184e-05, 9.079099999999979e-05, 9.077799999999969e-05, 9.076400000000012e-05, 9.077799999999969e-05, 9.079199999999926e-05, 9.076400000000012e-05, 9.076400000000012e-05, 9.077700000000022e-05, 9.076400000000012e-05, 9.080500000000283e-05, 9.077799999999969e-05, 9.079199999999926e-05, 9.080599999999883e-05, 9.079199999999926e-05, 9.077799999999969e-05, 9.076400000000012e-05, 9.079099999999979e-05, 9.079199999999926e-05, 9.077700000000022e-05, 9.076400000000012e-05, 9.079099999999979e-05, 9.077799999999969e-05, 9.079099999999979e-05, 9.079199999999926e-05, 9.079199999999926e-05, 9.076400000000012e-05, 9.077799999999969e-05, 9.079099999999979e-05, 9.076400000000012e-05, 9.079099999999979e-05]</msg>
<status status="PASS" starttime="20201030 15:55:07.396" endtime="20201030 15:55:07.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.392" endtime="20201030 15:55:07.399"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:07.403" endtime="20201030 15:55:07.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.401" endtime="20201030 15:55:07.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.400" endtime="20201030 15:55:07.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.045" endtime="20201030 15:55:07.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.044" endtime="20201030 15:55:07.423"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.432" endtime="20201030 15:55:07.449"></status>
</kw>
<msg timestamp="20201030 15:55:07.450" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.430" endtime="20201030 15:55:07.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.452" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.451" endtime="20201030 15:55:07.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.453" endtime="20201030 15:55:07.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.428" endtime="20201030 15:55:07.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.426" endtime="20201030 15:55:07.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.462" endtime="20201030 15:55:07.750"></status>
</kw>
<msg timestamp="20201030 15:55:07.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018549542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01864325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:07.461" endtime="20201030 15:55:07.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018549542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01864325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:07.754" endtime="20201030 15:55:07.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.762" endtime="20201030 15:55:07.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.458" endtime="20201030 15:55:07.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.457" endtime="20201030 15:55:07.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:07.769" level="INFO">${PHILIP_RES} = [{'diff': 9.370800000000137e-05}, {'diff': 9.338900000000275e-05}, {'diff': 9.341699999999842e-05}, {'diff': 9.341700000000189e-05}, {'diff': 9.341699999999842e-05}, {'diff': 9.340299999999885e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:07.765" endtime="20201030 15:55:07.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:07.773" level="INFO">${RESULT} = {'diff': [9.370800000000137e-05, 9.338900000000275e-05, 9.341699999999842e-05, 9.341700000000189e-05, 9.341699999999842e-05, 9.340299999999885e-05, 9.338900000000275e-05, 9.338899999999928e-05, 9.3402...</msg>
<status status="PASS" starttime="20201030 15:55:07.769" endtime="20201030 15:55:07.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.777" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:07.776" endtime="20201030 15:55:07.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.779" level="INFO">VALUE: [9.370800000000137e-05, 9.338900000000275e-05, 9.341699999999842e-05, 9.341700000000189e-05, 9.341699999999842e-05, 9.340299999999885e-05, 9.338900000000275e-05, 9.338899999999928e-05, 9.340299999999885e-05, 9.338899999999928e-05, 9.344499999999756e-05, 9.340299999999885e-05, 9.340300000000232e-05, 9.340299999999885e-05, 9.338899999999928e-05, 9.340300000000232e-05, 9.340300000000232e-05, 9.340299999999885e-05, 9.338899999999928e-05, 9.34720000000007e-05, 9.338899999999928e-05, 9.338899999999928e-05, 9.338899999999928e-05, 9.344399999999808e-05, 9.340299999999885e-05, 9.340299999999885e-05, 9.338899999999928e-05, 9.340300000000232e-05, 9.338899999999928e-05, 9.338899999999928e-05, 9.340299999999885e-05, 9.340300000000232e-05, 9.340299999999885e-05, 9.340299999999885e-05, 9.34720000000007e-05, 9.338899999999928e-05, 9.338899999999928e-05, 9.338900000000275e-05, 9.340299999999885e-05, 9.340299999999885e-05, 9.338900000000275e-05, 9.340299999999885e-05, 9.340299999999885e-05, 9.340300000000232e-05, 9.338899999999928e-05, 9.338899999999928e-05, 9.340299999999885e-05, 9.340300000000232e-05, 9.337499999999971e-05, 9.343100000000146e-05]</msg>
<status status="PASS" starttime="20201030 15:55:07.778" endtime="20201030 15:55:07.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.773" endtime="20201030 15:55:07.781"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:07.784" endtime="20201030 15:55:07.804"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.783" endtime="20201030 15:55:07.804"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.782" endtime="20201030 15:55:07.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.424" endtime="20201030 15:55:07.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.424" endtime="20201030 15:55:07.805"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.813" endtime="20201030 15:55:07.832"></status>
</kw>
<msg timestamp="20201030 15:55:07.833" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.812" endtime="20201030 15:55:07.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.835" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.834" endtime="20201030 15:55:07.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.836" endtime="20201030 15:55:07.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.809" endtime="20201030 15:55:07.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.807" endtime="20201030 15:55:07.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.845" endtime="20201030 15:55:08.130"></status>
</kw>
<msg timestamp="20201030 15:55:08.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019641486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019737806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:07.843" endtime="20201030 15:55:08.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019641486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019737806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.135" endtime="20201030 15:55:08.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.142" endtime="20201030 15:55:08.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.841" endtime="20201030 15:55:08.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.839" endtime="20201030 15:55:08.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:08.149" level="INFO">${PHILIP_RES} = [{'diff': 9.632000000000043e-05}, {'diff': 9.605500000000114e-05}, {'diff': 9.604199999999757e-05}, {'diff': 9.604200000000104e-05}, {'diff': 9.605600000000061e-05}, {'diff': 9.60409999999981e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:08.146" endtime="20201030 15:55:08.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:08.153" level="INFO">${RESULT} = {'diff': [9.632000000000043e-05, 9.605500000000114e-05, 9.604199999999757e-05, 9.604200000000104e-05, 9.605600000000061e-05, 9.60409999999981e-05, 9.606900000000071e-05, 9.597199999999972e-05, 9.60420...</msg>
<status status="PASS" starttime="20201030 15:55:08.150" endtime="20201030 15:55:08.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.157" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:08.156" endtime="20201030 15:55:08.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.160" level="INFO">VALUE: [9.632000000000043e-05, 9.605500000000114e-05, 9.604199999999757e-05, 9.604200000000104e-05, 9.605600000000061e-05, 9.60409999999981e-05, 9.606900000000071e-05, 9.597199999999972e-05, 9.604200000000104e-05, 9.604200000000104e-05, 9.6027999999998e-05, 9.604200000000104e-05, 9.602800000000147e-05, 9.60409999999981e-05, 9.60409999999981e-05, 9.611099999999942e-05, 9.601299999999896e-05, 9.601399999999843e-05, 9.604200000000104e-05, 9.605600000000061e-05, 9.604100000000157e-05, 9.601299999999896e-05, 9.605500000000114e-05, 9.604200000000104e-05, 9.605600000000061e-05, 9.601399999999843e-05, 9.605600000000061e-05, 9.604100000000157e-05, 9.605500000000114e-05, 9.599999999999886e-05, 9.604200000000104e-05, 9.604200000000104e-05, 9.604200000000104e-05, 9.6027999999998e-05, 9.604100000000157e-05, 9.60140000000019e-05, 9.602699999999853e-05, 9.6027999999998e-05, 9.599999999999886e-05, 9.604200000000104e-05, 9.604199999999757e-05, 9.604200000000104e-05, 9.604100000000157e-05, 9.605500000000114e-05, 9.60409999999981e-05, 9.604199999999757e-05, 9.602800000000147e-05, 9.604200000000104e-05, 9.604199999999757e-05, 9.604200000000104e-05]</msg>
<status status="PASS" starttime="20201030 15:55:08.158" endtime="20201030 15:55:08.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.154" endtime="20201030 15:55:08.162"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:08.166" endtime="20201030 15:55:08.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.164" endtime="20201030 15:55:08.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.163" endtime="20201030 15:55:08.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.806" endtime="20201030 15:55:08.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.805" endtime="20201030 15:55:08.186"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.194" endtime="20201030 15:55:08.212"></status>
</kw>
<msg timestamp="20201030 15:55:08.213" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.193" endtime="20201030 15:55:08.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.215" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.214" endtime="20201030 15:55:08.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.216" endtime="20201030 15:55:08.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.190" endtime="20201030 15:55:08.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.189" endtime="20201030 15:55:08.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.225" endtime="20201030 15:55:08.511"></status>
</kw>
<msg timestamp="20201030 15:55:08.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018442986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018541986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.224" endtime="20201030 15:55:08.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018442986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018541986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.515" endtime="20201030 15:55:08.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.523" endtime="20201030 15:55:08.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.221" endtime="20201030 15:55:08.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.219" endtime="20201030 15:55:08.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:08.529" level="INFO">${PHILIP_RES} = [{'diff': 9.89999999999984e-05}, {'diff': 9.873600000000204e-05}, {'diff': 9.87080000000029e-05}, {'diff': 9.865200000000116e-05}, {'diff': 9.869499999999934e-05}, {'diff': 9.869499999999934e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:55:08.526" endtime="20201030 15:55:08.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:08.534" level="INFO">${RESULT} = {'diff': [9.89999999999984e-05, 9.873600000000204e-05, 9.87080000000029e-05, 9.865200000000116e-05, 9.869499999999934e-05, 9.869499999999934e-05, 9.870799999999944e-05, 9.8721999999999e-05, 9.87219999...</msg>
<status status="PASS" starttime="20201030 15:55:08.530" endtime="20201030 15:55:08.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.539" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:08.538" endtime="20201030 15:55:08.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.541" level="INFO">VALUE: [9.89999999999984e-05, 9.873600000000204e-05, 9.87080000000029e-05, 9.865200000000116e-05, 9.869499999999934e-05, 9.869499999999934e-05, 9.870799999999944e-05, 9.8721999999999e-05, 9.8721999999999e-05, 9.87080000000029e-05, 9.870799999999944e-05, 9.873599999999857e-05, 9.870900000000238e-05, 9.8721999999999e-05, 9.869399999999987e-05, 9.870799999999944e-05, 9.872200000000247e-05, 9.870799999999944e-05, 9.868099999999977e-05, 9.872300000000195e-05, 9.870899999999891e-05, 9.873599999999857e-05, 9.869399999999987e-05, 9.866600000000073e-05, 9.86800000000003e-05, 9.8721999999999e-05, 9.870900000000238e-05, 9.870899999999891e-05, 9.870799999999944e-05, 9.872200000000247e-05, 9.86670000000002e-05, 9.8721999999999e-05, 9.869399999999987e-05, 9.870899999999891e-05, 9.869499999999934e-05, 9.873600000000204e-05, 9.870799999999944e-05, 9.8721999999999e-05, 9.8721999999999e-05, 9.869399999999987e-05, 9.8721999999999e-05, 9.874999999999814e-05, 9.870900000000238e-05, 9.8721999999999e-05, 9.873599999999857e-05, 9.8721999999999e-05, 9.875000000000161e-05, 9.877800000000075e-05, 9.870899999999891e-05, 9.869499999999934e-05]</msg>
<status status="PASS" starttime="20201030 15:55:08.540" endtime="20201030 15:55:08.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.535" endtime="20201030 15:55:08.543"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:08.547" endtime="20201030 15:55:08.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.545" endtime="20201030 15:55:08.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.544" endtime="20201030 15:55:08.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.187" endtime="20201030 15:55:08.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.187" endtime="20201030 15:55:08.568"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.576" endtime="20201030 15:55:08.595"></status>
</kw>
<msg timestamp="20201030 15:55:08.596" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.575" endtime="20201030 15:55:08.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.598" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.597" endtime="20201030 15:55:08.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.599" endtime="20201030 15:55:08.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.572" endtime="20201030 15:55:08.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.570" endtime="20201030 15:55:08.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.609" endtime="20201030 15:55:08.895"></status>
</kw>
<msg timestamp="20201030 15:55:08.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018720597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018822292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.607" endtime="20201030 15:55:08.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018720597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018822292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.899" endtime="20201030 15:55:08.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.906" endtime="20201030 15:55:08.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.604" endtime="20201030 15:55:08.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.603" endtime="20201030 15:55:08.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:08.913" level="INFO">${PHILIP_RES} = [{'diff': 0.00010169500000000234}, {'diff': 0.00010141699999999948}, {'diff': 0.00010138900000000034}, {'diff': 0.00010141699999999948}, {'diff': 0.00010140299999999991}, {'diff': 0.000101375000000000...</msg>
<status status="PASS" starttime="20201030 15:55:08.910" endtime="20201030 15:55:08.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:08.917" level="INFO">${RESULT} = {'diff': [0.00010169500000000234, 0.00010141699999999948, 0.00010138900000000034, 0.00010141699999999948, 0.00010140299999999991, 0.00010137500000000077, 0.00010140299999999991, 0.000101416, 0.0001013...</msg>
<status status="PASS" starttime="20201030 15:55:08.914" endtime="20201030 15:55:08.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.921" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:08.920" endtime="20201030 15:55:08.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.923" level="INFO">VALUE: [0.00010169500000000234, 0.00010141699999999948, 0.00010138900000000034, 0.00010141699999999948, 0.00010140299999999991, 0.00010137500000000077, 0.00010140299999999991, 0.000101416, 0.00010137500000000077, 0.00010141699999999948, 0.00010140299999999991, 0.00010141699999999948, 0.0001013480000000011, 0.00010145800000000219, 0.00010138900000000034, 0.00010141699999999948, 0.00010137500000000077, 0.00010140299999999991, 0.00010141699999999948, 0.000101416, 0.00010140199999999697, 0.00010140299999999991, 0.00010137500000000077, 0.00010140299999999991, 0.00010141699999999948, 0.00010140299999999991, 0.000101416, 0.00010138900000000034, 0.00010141699999999948, 0.00010140299999999991, 0.00010137500000000077, 0.00010140299999999991, 0.00010142999999999958, 0.00010140300000000338, 0.00010140299999999991, 0.00010140299999999991, 0.00010144399999999915, 0.00010140299999999991, 0.000101416, 0.00010141699999999948, 0.00010143099999999905, 0.00010138900000000034, 0.00010147199999999829, 0.00010137500000000077, 0.000101416, 0.00010140299999999991, 0.00010141700000000295, 0.00010140299999999991, 0.00010140299999999991, 0.00010141699999999948]</msg>
<status status="PASS" starttime="20201030 15:55:08.922" endtime="20201030 15:55:08.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.918" endtime="20201030 15:55:08.925"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:08.929" endtime="20201030 15:55:08.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.927" endtime="20201030 15:55:08.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.926" endtime="20201030 15:55:08.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.569" endtime="20201030 15:55:08.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.568" endtime="20201030 15:55:08.949"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.958" endtime="20201030 15:55:08.977"></status>
</kw>
<msg timestamp="20201030 15:55:08.977" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.956" endtime="20201030 15:55:08.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.980" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.978" endtime="20201030 15:55:08.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.981" endtime="20201030 15:55:08.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.953" endtime="20201030 15:55:08.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.952" endtime="20201030 15:55:08.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.990" endtime="20201030 15:55:09.275"></status>
</kw>
<msg timestamp="20201030 15:55:09.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019554014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019658444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.988" endtime="20201030 15:55:09.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019554014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019658444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:09.279" endtime="20201030 15:55:09.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.287" endtime="20201030 15:55:09.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.986" endtime="20201030 15:55:09.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.984" endtime="20201030 15:55:09.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:09.293" level="INFO">${PHILIP_RES} = [{'diff': 0.00010442999999999911}, {'diff': 0.00010415199999999972}, {'diff': 0.00010415300000000266}, {'diff': 0.00010413800000000015}, {'diff': 0.00010415300000000266}, {'diff': 0.000104096999999997...</msg>
<status status="PASS" starttime="20201030 15:55:09.290" endtime="20201030 15:55:09.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:09.297" level="INFO">${RESULT} = {'diff': [0.00010442999999999911, 0.00010415199999999972, 0.00010415300000000266, 0.00010413800000000015, 0.00010415300000000266, 0.00010409699999999744, 0.00010412500000000005, 0.00010406900000000177...</msg>
<status status="PASS" starttime="20201030 15:55:09.294" endtime="20201030 15:55:09.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.302" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:09.301" endtime="20201030 15:55:09.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.304" level="INFO">VALUE: [0.00010442999999999911, 0.00010415199999999972, 0.00010415300000000266, 0.00010413800000000015, 0.00010415300000000266, 0.00010409699999999744, 0.00010412500000000005, 0.00010406900000000177, 0.00010415199999999972, 0.00010413899999999962, 0.00010413899999999962, 0.00010413899999999962, 0.00010413800000000015, 0.00010413800000000015, 0.00010412500000000005, 0.00010413899999999962, 0.00010416699999999876, 0.00010411100000000048, 0.0001041810000000018, 0.00010411199999999995, 0.00010413899999999962, 0.00010412500000000005, 0.00010413899999999962, 0.00010413899999999962, 0.00010413899999999962, 0.00010412500000000005, 0.00010413899999999962, 0.00010413900000000309, 0.00010413899999999962, 0.00010413899999999962, 0.00010413899999999962, 0.00010413800000000015, 0.00010415299999999919, 0.00010409699999999744, 0.00010415200000000319, 0.00010411100000000048, 0.00010413899999999962, 0.00010408400000000081, 0.00010413899999999962, 0.00010412500000000005, 0.00010415299999999919, 0.00010411100000000048, 0.00010412500000000005, 0.00010416699999999876, 0.00010413899999999962, 0.00010413899999999962, 0.00010413899999999962, 0.00010413899999999962, 0.00010408299999999787, 0.00010412500000000005]</msg>
<status status="PASS" starttime="20201030 15:55:09.303" endtime="20201030 15:55:09.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.298" endtime="20201030 15:55:09.313"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:09.317" endtime="20201030 15:55:09.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.315" endtime="20201030 15:55:09.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.314" endtime="20201030 15:55:09.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.950" endtime="20201030 15:55:09.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.950" endtime="20201030 15:55:09.337"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.345" endtime="20201030 15:55:09.364"></status>
</kw>
<msg timestamp="20201030 15:55:09.365" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:09.344" endtime="20201030 15:55:09.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.367" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:09.366" endtime="20201030 15:55:09.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.368" endtime="20201030 15:55:09.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.341" endtime="20201030 15:55:09.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.339" endtime="20201030 15:55:09.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.377" endtime="20201030 15:55:09.662"></status>
</kw>
<msg timestamp="20201030 15:55:09.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018462556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018569736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:09.375" endtime="20201030 15:55:09.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018462556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018569736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:09.666" endtime="20201030 15:55:09.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.674" endtime="20201030 15:55:09.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.373" endtime="20201030 15:55:09.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.371" endtime="20201030 15:55:09.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:09.680" level="INFO">${PHILIP_RES} = [{'diff': 0.00010717999999999839}, {'diff': 0.00010687499999999933}, {'diff': 0.00010691700000000151}, {'diff': 0.00010687499999999933}, {'diff': 0.00010688900000000237}, {'diff': 0.000106944999999997...</msg>
<status status="PASS" starttime="20201030 15:55:09.677" endtime="20201030 15:55:09.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:09.685" level="INFO">${RESULT} = {'diff': [0.00010717999999999839, 0.00010687499999999933, 0.00010691700000000151, 0.00010687499999999933, 0.00010688900000000237, 0.00010694499999999718, 0.00010688900000000237, 0.00010688799999999943...</msg>
<status status="PASS" starttime="20201030 15:55:09.681" endtime="20201030 15:55:09.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.690" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:09.689" endtime="20201030 15:55:09.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.692" level="INFO">VALUE: [0.00010717999999999839, 0.00010687499999999933, 0.00010691700000000151, 0.00010687499999999933, 0.00010688900000000237, 0.00010694499999999718, 0.00010688900000000237, 0.00010688799999999943, 0.0001068889999999989, 0.00010688900000000237, 0.0001068889999999989, 0.00010686100000000323, 0.00010687499999999933, 0.000106901999999999, 0.00010688900000000237, 0.00010690299999999847, 0.00010691600000000204, 0.00010691699999999804, 0.00010690300000000194, 0.00010690300000000194, 0.00010694500000000065, 0.00010695800000000075, 0.00010690299999999847, 0.00010684700000000019, 0.0001068889999999989, 0.0001068889999999989, 0.00010690300000000194, 0.00010688799999999943, 0.00010695900000000022, 0.00010690299999999847, 0.00010687499999999933, 0.00010690300000000194, 0.00010690299999999847, 0.00010690300000000194, 0.0001068889999999989, 0.0001068889999999989, 0.00010686099999999976, 0.00010687499999999933, 0.00010687499999999933, 0.00010687499999999933, 0.00010688900000000237, 0.000106901999999999, 0.00010690299999999847, 0.00010688900000000237, 0.00010687499999999933, 0.00010687499999999933, 0.00010691699999999804, 0.0001068889999999989, 0.00010688900000000237, 0.00010687499999999933]</msg>
<status status="PASS" starttime="20201030 15:55:09.691" endtime="20201030 15:55:09.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.686" endtime="20201030 15:55:09.693"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:09.697" endtime="20201030 15:55:09.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.695" endtime="20201030 15:55:09.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.694" endtime="20201030 15:55:09.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.338" endtime="20201030 15:55:09.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.337" endtime="20201030 15:55:09.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.718" endtime="20201030 15:55:09.718"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:49.395" endtime="20201030 15:55:09.718" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:54:29.773" endtime="20201030 15:55:09.727"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.795" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:55:09.804" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:55:11.024" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:55:09.794" endtime="20201030 15:55:11.026"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.031" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:55:11.028" endtime="20201030 15:55:11.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.793" endtime="20201030 15:55:11.033"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:11.037" endtime="20201030 15:55:11.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.034" endtime="20201030 15:55:11.298"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.310" endtime="20201030 15:55:11.325"></status>
</kw>
<msg timestamp="20201030 15:55:11.325" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.309" endtime="20201030 15:55:11.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.328" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.326" endtime="20201030 15:55:11.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.331" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:11.329" endtime="20201030 15:55:11.331"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:11.306" endtime="20201030 15:55:11.332"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:11.304" endtime="20201030 15:55:11.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.303" endtime="20201030 15:55:11.332"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:11.336" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:11.336" endtime="20201030 15:55:11.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.333" endtime="20201030 15:55:11.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.302" endtime="20201030 15:55:11.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.301" endtime="20201030 15:55:11.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.339" endtime="20201030 15:55:11.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.300" endtime="20201030 15:55:11.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.342" endtime="20201030 15:55:11.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.298" endtime="20201030 15:55:11.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.791" endtime="20201030 15:55:11.344"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:11.350" endtime="20201030 15:55:11.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.349" endtime="20201030 15:55:11.370"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.383" endtime="20201030 15:55:11.398"></status>
</kw>
<msg timestamp="20201030 15:55:11.398" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.382" endtime="20201030 15:55:11.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.402" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.400" endtime="20201030 15:55:11.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.405" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:11.403" endtime="20201030 15:55:11.406"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:11.379" endtime="20201030 15:55:11.406"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:11.377" endtime="20201030 15:55:11.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.376" endtime="20201030 15:55:11.407"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:11.411" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:11.410" endtime="20201030 15:55:11.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.408" endtime="20201030 15:55:11.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.375" endtime="20201030 15:55:11.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.374" endtime="20201030 15:55:11.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.413" endtime="20201030 15:55:11.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.373" endtime="20201030 15:55:11.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.371" endtime="20201030 15:55:11.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.348" endtime="20201030 15:55:11.415"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.426" endtime="20201030 15:55:11.441"></status>
</kw>
<msg timestamp="20201030 15:55:11.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.425" endtime="20201030 15:55:11.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.442" endtime="20201030 15:55:11.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.445" endtime="20201030 15:55:11.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.421" endtime="20201030 15:55:11.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.419" endtime="20201030 15:55:11.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.454" endtime="20201030 15:55:11.744"></status>
</kw>
<msg timestamp="20201030 15:55:11.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068076958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068091097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:11.452" endtime="20201030 15:55:11.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068076958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068091097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:11.748" endtime="20201030 15:55:11.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.757" endtime="20201030 15:55:11.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.450" endtime="20201030 15:55:11.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.448" endtime="20201030 15:55:11.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:11.763" level="INFO">${RESULT} = [{'diff': 1.4138999999996349e-05}, {'diff': 1.356899999999106e-05}, {'diff': 1.3736000000000304e-05}, {'diff': 1.4222999999993768e-05}, {'diff': 1.4306000000005592e-05}, {'diff': 1.3749999999992935e-0...</msg>
<status status="PASS" starttime="20201030 15:55:11.760" endtime="20201030 15:55:11.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:11.768" level="INFO">${ACCURACY} = {'diff': [1.4138999999996349e-05, 1.356899999999106e-05, 1.3736000000000304e-05, 1.4222999999993768e-05, 1.4306000000005592e-05, 1.3749999999992935e-05, 1.3819999999997723e-05, 1.4152000000003384e-05,...</msg>
<status status="PASS" starttime="20201030 15:55:11.764" endtime="20201030 15:55:11.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.773" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 15:55:11.772" endtime="20201030 15:55:11.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.776" level="INFO">VALUE: [1.4138999999996349e-05, 1.356899999999106e-05, 1.3736000000000304e-05, 1.4222999999993768e-05, 1.4306000000005592e-05, 1.3749999999992935e-05, 1.3819999999997723e-05, 1.4152000000003384e-05, 1.4458999999994449e-05, 1.4250000000007312e-05, 1.4389000000003538e-05, 1.434800000001124e-05, 1.4374999999997029e-05, 1.3861000000003898e-05, 1.455499999999943e-05, 1.3625000000003218e-05, 1.3541000000005798e-05, 1.4389000000003538e-05, 1.3901999999996195e-05, 1.4263999999999943e-05, 1.3638999999995849e-05, 1.3736000000000304e-05, 1.4180000000002524e-05, 1.3901999999996195e-05, 1.3957999999994475e-05, 1.431899999999875e-05, 1.3472000000000484e-05, 1.3930000000009213e-05, 1.3666000000009393e-05, 1.4250000000007312e-05, 1.4485999999994115e-05, 1.4193999999995155e-05, 1.3499999999999623e-05, 1.4165999999996015e-05, 1.430499999999224e-05, 1.4138999999996349e-05, 1.3527999999998763e-05, 1.3834000000004232e-05, 1.3694000000008533e-05, 1.4027999999999263e-05, 1.3889000000003038e-05, 1.4180000000002524e-05, 1.4111000000011087e-05, 1.3583999999997043e-05, 1.3929999999995335e-05, 1.3930999999994809e-05, 1.3625000000003218e-05, 1.4472000000001484e-05, 1.4319000000012627e-05, 1.4402999999996169e-05]</msg>
<status status="PASS" starttime="20201030 15:55:11.774" endtime="20201030 15:55:11.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.769" endtime="20201030 15:55:11.777"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:11.780" endtime="20201030 15:55:11.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.779" endtime="20201030 15:55:11.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.777" endtime="20201030 15:55:11.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.417" endtime="20201030 15:55:11.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.417" endtime="20201030 15:55:11.801"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.809" endtime="20201030 15:55:11.823"></status>
</kw>
<msg timestamp="20201030 15:55:11.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.808" endtime="20201030 15:55:11.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.825" endtime="20201030 15:55:11.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.827" endtime="20201030 15:55:11.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.805" endtime="20201030 15:55:11.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.803" endtime="20201030 15:55:11.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.837" endtime="20201030 15:55:12.123"></status>
</kw>
<msg timestamp="20201030 15:55:12.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021506653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021520708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:11.835" endtime="20201030 15:55:12.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021506653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021520708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:12.127" endtime="20201030 15:55:12.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.135" endtime="20201030 15:55:12.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.833" endtime="20201030 15:55:12.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.831" endtime="20201030 15:55:12.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:12.142" level="INFO">${RESULT} = [{'diff': 1.405499999999893e-05}, {'diff': 1.4056000000001873e-05}, {'diff': 1.4180000000002524e-05}, {'diff': 1.3723000000000207e-05}, {'diff': 1.4125000000000248e-05}, {'diff': 1.4179999999999054e-0...</msg>
<status status="PASS" starttime="20201030 15:55:12.139" endtime="20201030 15:55:12.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:12.147" level="INFO">${ACCURACY} = {'diff': [1.405499999999893e-05, 1.4056000000001873e-05, 1.4180000000002524e-05, 1.3723000000000207e-05, 1.4125000000000248e-05, 1.4179999999999054e-05, 1.3764000000002913e-05, 1.4235999999997334e-05,...</msg>
<status status="PASS" starttime="20201030 15:55:12.143" endtime="20201030 15:55:12.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.151" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 15:55:12.150" endtime="20201030 15:55:12.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.154" level="INFO">VALUE: [1.405499999999893e-05, 1.4056000000001873e-05, 1.4180000000002524e-05, 1.3723000000000207e-05, 1.4125000000000248e-05, 1.4179999999999054e-05, 1.3764000000002913e-05, 1.4235999999997334e-05, 1.3513999999999193e-05, 1.4208999999997668e-05, 1.3527999999998763e-05, 1.4236000000000804e-05, 1.4138999999999818e-05, 1.4083999999997543e-05, 1.4722000000001734e-05, 1.4166999999998958e-05, 1.3874999999999998e-05, 1.380499999999868e-05, 1.4375000000000498e-05, 1.408299999999807e-05, 1.3819000000001719e-05, 1.434699999999789e-05, 1.351299999999972e-05, 1.4388000000000595e-05, 1.426300000000047e-05, 1.3861000000000429e-05, 1.3721999999997264e-05, 1.3597000000000609e-05, 1.3708000000001164e-05, 1.4389000000000068e-05, 1.4486000000001054e-05, 1.4361000000000929e-05, 1.3860999999996959e-05, 1.3972000000000984e-05, 1.458299999999857e-05, 1.3736000000000304e-05, 1.3514000000002663e-05, 1.4125000000000248e-05, 1.4431000000002248e-05, 1.4527999999999763e-05, 1.3611000000000179e-05, 1.4443999999998874e-05, 1.4041999999998833e-05, 1.3916999999998708e-05, 1.4208000000001664e-05, 1.3917000000002178e-05, 1.4500000000000624e-05, 1.408299999999807e-05, 1.3611000000000179e-05, 1.4207999999998194e-05]</msg>
<status status="PASS" starttime="20201030 15:55:12.153" endtime="20201030 15:55:12.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.148" endtime="20201030 15:55:12.155"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:12.158" endtime="20201030 15:55:12.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.157" endtime="20201030 15:55:12.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.156" endtime="20201030 15:55:12.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.802" endtime="20201030 15:55:12.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.801" endtime="20201030 15:55:12.179"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.188" endtime="20201030 15:55:12.202"></status>
</kw>
<msg timestamp="20201030 15:55:12.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.186" endtime="20201030 15:55:12.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.204" endtime="20201030 15:55:12.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.207" endtime="20201030 15:55:12.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.183" endtime="20201030 15:55:12.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.181" endtime="20201030 15:55:12.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.216" endtime="20201030 15:55:12.503"></status>
</kw>
<msg timestamp="20201030 15:55:12.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021333681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021347514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:12.214" endtime="20201030 15:55:12.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021333681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021347514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:12.507" endtime="20201030 15:55:12.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.516" endtime="20201030 15:55:12.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.212" endtime="20201030 15:55:12.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.210" endtime="20201030 15:55:12.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:12.522" level="INFO">${RESULT} = [{'diff': 1.3833000000001289e-05}, {'diff': 1.3693999999998124e-05}, {'diff': 1.4457999999998444e-05}, {'diff': 1.3888999999999568e-05}, {'diff': 1.4458000000001914e-05}, {'diff': 1.3888999999999568e-...</msg>
<status status="PASS" starttime="20201030 15:55:12.519" endtime="20201030 15:55:12.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:12.526" level="INFO">${ACCURACY} = {'diff': [1.3833000000001289e-05, 1.3693999999998124e-05, 1.4457999999998444e-05, 1.3888999999999568e-05, 1.4458000000001914e-05, 1.3888999999999568e-05, 1.4457999999998444e-05, 1.3527999999998763e-05...</msg>
<status status="PASS" starttime="20201030 15:55:12.523" endtime="20201030 15:55:12.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.531" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 15:55:12.530" endtime="20201030 15:55:12.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.533" level="INFO">VALUE: [1.3833000000001289e-05, 1.3693999999998124e-05, 1.4457999999998444e-05, 1.3888999999999568e-05, 1.4458000000001914e-05, 1.3888999999999568e-05, 1.4457999999998444e-05, 1.3527999999998763e-05, 1.3499999999999623e-05, 1.4527999999999763e-05, 1.3513999999999193e-05, 1.3777999999999013e-05, 1.4277999999999513e-05, 1.3902999999999138e-05, 1.4778000000000013e-05, 1.3902999999999138e-05, 1.4111000000000679e-05, 1.4263999999999943e-05, 1.3945000000001317e-05, 1.4680999999999028e-05, 1.4291999999999083e-05, 1.3834000000000762e-05, 1.4223000000000707e-05, 1.3568999999998e-05, 1.4722000000001734e-05, 1.3930999999998278e-05, 1.4348000000000832e-05, 1.4112000000000152e-05, 1.3556000000001373e-05, 1.4292000000002553e-05, 1.4250000000000373e-05, 1.3666999999998458e-05, 1.3986000000000554e-05, 1.4486000000001054e-05, 1.4027999999999263e-05, 1.405499999999893e-05, 1.3568999999998e-05, 1.4429999999999304e-05, 1.3861000000000429e-05, 1.405499999999893e-05, 1.402699999999979e-05, 1.4402999999999638e-05, 1.3945000000001317e-05, 1.3583000000001039e-05, 1.427700000000004e-05, 1.433299999999832e-05, 1.4389000000000068e-05, 1.355499999999843e-05, 1.3860999999996959e-05, 1.4625000000000749e-05]</msg>
<status status="PASS" starttime="20201030 15:55:12.532" endtime="20201030 15:55:12.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.527" endtime="20201030 15:55:12.534"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:12.538" endtime="20201030 15:55:12.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.536" endtime="20201030 15:55:12.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.535" endtime="20201030 15:55:12.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.180" endtime="20201030 15:55:12.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.179" endtime="20201030 15:55:12.559"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.573" endtime="20201030 15:55:12.589"></status>
</kw>
<msg timestamp="20201030 15:55:12.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.569" endtime="20201030 15:55:12.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.591" endtime="20201030 15:55:12.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.594" endtime="20201030 15:55:12.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.566" endtime="20201030 15:55:12.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.563" endtime="20201030 15:55:12.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.603" endtime="20201030 15:55:12.890"></status>
</kw>
<msg timestamp="20201030 15:55:12.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027842167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027856611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:12.601" endtime="20201030 15:55:12.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027842167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027856611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:12.896" endtime="20201030 15:55:12.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.906" endtime="20201030 15:55:12.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.599" endtime="20201030 15:55:12.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.597" endtime="20201030 15:55:12.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:12.916" level="INFO">${RESULT} = [{'diff': 1.4443999999998874e-05}, {'diff': 1.429099999999961e-05}, {'diff': 1.376299999999997e-05}, {'diff': 1.3722000000000734e-05}, {'diff': 1.4000000000000123e-05}, {'diff': 1.3569000000001469e-05...</msg>
<status status="PASS" starttime="20201030 15:55:12.912" endtime="20201030 15:55:12.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:12.922" level="INFO">${ACCURACY} = {'diff': [1.4443999999998874e-05, 1.429099999999961e-05, 1.376299999999997e-05, 1.3722000000000734e-05, 1.4000000000000123e-05, 1.3569000000001469e-05, 1.4250000000000373e-05, 1.4458000000001914e-05, ...</msg>
<status status="PASS" starttime="20201030 15:55:12.917" endtime="20201030 15:55:12.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.927" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 15:55:12.926" endtime="20201030 15:55:12.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.930" level="INFO">VALUE: [1.4443999999998874e-05, 1.429099999999961e-05, 1.376299999999997e-05, 1.3722000000000734e-05, 1.4000000000000123e-05, 1.3569000000001469e-05, 1.4250000000000373e-05, 1.4458000000001914e-05, 1.3915999999999235e-05, 1.4665999999999985e-05, 1.3749999999999873e-05, 1.3944000000001844e-05, 1.4415999999999735e-05, 1.433299999999832e-05, 1.4013999999999693e-05, 1.4179999999999054e-05, 1.3569000000001469e-05, 1.3639000000002788e-05, 1.4459000000001387e-05, 1.4764000000000443e-05, 1.3638999999999318e-05, 1.4208000000001664e-05, 1.3665999999998985e-05, 1.3929999999998804e-05, 1.4097000000001109e-05, 1.4277999999999513e-05, 1.4194000000002094e-05, 1.4263999999999943e-05, 1.4111000000000679e-05, 1.4750000000000874e-05, 1.4124999999996779e-05, 1.3638999999999318e-05, 1.4041999999998833e-05, 1.3916999999998708e-05, 1.4707999999998694e-05, 1.3986000000000554e-05, 1.4097000000001109e-05, 1.3916999999998708e-05, 1.3916999999998708e-05, 1.4472000000001484e-05, 1.4152999999999388e-05, 1.4097000000001109e-05, 1.3584000000000512e-05, 1.3722000000000734e-05, 1.3931000000001748e-05, 1.3583999999997043e-05, 1.4333000000001789e-05, 1.3806000000001623e-05, 1.3556000000001373e-05, 1.4111000000000679e-05]</msg>
<status status="PASS" starttime="20201030 15:55:12.928" endtime="20201030 15:55:12.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.923" endtime="20201030 15:55:12.931"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:12.935" endtime="20201030 15:55:12.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.933" endtime="20201030 15:55:12.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.932" endtime="20201030 15:55:12.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.561" endtime="20201030 15:55:12.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.560" endtime="20201030 15:55:12.956"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.965" endtime="20201030 15:55:12.979"></status>
</kw>
<msg timestamp="20201030 15:55:12.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.963" endtime="20201030 15:55:12.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.981" endtime="20201030 15:55:12.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.983" endtime="20201030 15:55:12.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.961" endtime="20201030 15:55:12.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.958" endtime="20201030 15:55:12.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.992" endtime="20201030 15:55:13.276"></status>
</kw>
<msg timestamp="20201030 15:55:13.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021956083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021970361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:12.991" endtime="20201030 15:55:13.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021956083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021970361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:13.280" endtime="20201030 15:55:13.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.289" endtime="20201030 15:55:13.290"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.988" endtime="20201030 15:55:13.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.986" endtime="20201030 15:55:13.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:13.296" level="INFO">${RESULT} = [{'diff': 1.4277999999999513e-05}, {'diff': 1.3624999999999748e-05}, {'diff': 1.4416999999999208e-05}, {'diff': 1.4179999999999054e-05}, {'diff': 1.3749999999999873e-05}, {'diff': 1.352699999999929e-0...</msg>
<status status="PASS" starttime="20201030 15:55:13.292" endtime="20201030 15:55:13.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:13.302" level="INFO">${ACCURACY} = {'diff': [1.4277999999999513e-05, 1.3624999999999748e-05, 1.4416999999999208e-05, 1.4179999999999054e-05, 1.3749999999999873e-05, 1.352699999999929e-05, 1.4457999999998444e-05, 1.3915999999999235e-05,...</msg>
<status status="PASS" starttime="20201030 15:55:13.298" endtime="20201030 15:55:13.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.307" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 15:55:13.306" endtime="20201030 15:55:13.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.309" level="INFO">VALUE: [1.4277999999999513e-05, 1.3624999999999748e-05, 1.4416999999999208e-05, 1.4179999999999054e-05, 1.3749999999999873e-05, 1.352699999999929e-05, 1.4457999999998444e-05, 1.3915999999999235e-05, 1.3915999999999235e-05, 1.405499999999893e-05, 1.3694000000001594e-05, 1.352699999999929e-05, 1.358299999999757e-05, 1.354099999999886e-05, 1.4568999999999e-05, 1.354099999999886e-05, 1.3916999999998708e-05, 1.404099999999936e-05, 1.4402999999999638e-05, 1.427700000000004e-05, 1.4125000000000248e-05, 1.3792000000002053e-05, 1.4125000000000248e-05, 1.354099999999886e-05, 1.4193999999998624e-05, 1.3792000000002053e-05, 1.4402999999999638e-05, 1.3722000000000734e-05, 1.3624999999999748e-05, 1.4347999999997363e-05, 1.4083000000001539e-05, 1.3972999999996988e-05, 1.4041999999998833e-05, 1.4207999999998194e-05, 1.455499999999943e-05, 1.4416999999999208e-05, 1.3555999999997903e-05, 1.4402999999999638e-05, 1.4056000000001873e-05, 1.4583000000002039e-05, 1.3694000000001594e-05, 1.3681000000001498e-05, 1.381899999999825e-05, 1.4250000000000373e-05, 1.4778000000000013e-05, 1.4222000000001234e-05, 1.3583000000001039e-05, 1.3819999999997723e-05, 1.4013999999999693e-05, 1.4486000000001054e-05]</msg>
<status status="PASS" starttime="20201030 15:55:13.308" endtime="20201030 15:55:13.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.303" endtime="20201030 15:55:13.310"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:13.314" endtime="20201030 15:55:13.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.312" endtime="20201030 15:55:13.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.311" endtime="20201030 15:55:13.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.957" endtime="20201030 15:55:13.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.956" endtime="20201030 15:55:13.335"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.346" endtime="20201030 15:55:13.360"></status>
</kw>
<msg timestamp="20201030 15:55:13.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:13.344" endtime="20201030 15:55:13.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:13.362" endtime="20201030 15:55:13.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.364" endtime="20201030 15:55:13.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.342" endtime="20201030 15:55:13.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.339" endtime="20201030 15:55:13.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.373" endtime="20201030 15:55:13.662"></status>
</kw>
<msg timestamp="20201030 15:55:13.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024237583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024251944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:13.372" endtime="20201030 15:55:13.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024237583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024251944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:13.666" endtime="20201030 15:55:13.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.674" endtime="20201030 15:55:13.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.369" endtime="20201030 15:55:13.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.367" endtime="20201030 15:55:13.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:13.681" level="INFO">${RESULT} = [{'diff': 1.4361000000000929e-05}, {'diff': 1.3542000000001803e-05}, {'diff': 1.3792000000002053e-05}, {'diff': 1.4181000000001998e-05}, {'diff': 1.379099999999911e-05}, {'diff': 1.3763999999999443e-0...</msg>
<status status="PASS" starttime="20201030 15:55:13.678" endtime="20201030 15:55:13.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:13.685" level="INFO">${ACCURACY} = {'diff': [1.4361000000000929e-05, 1.3542000000001803e-05, 1.3792000000002053e-05, 1.4181000000001998e-05, 1.379099999999911e-05, 1.3763999999999443e-05, 1.4458000000001914e-05, 1.4514000000000193e-05,...</msg>
<status status="PASS" starttime="20201030 15:55:13.682" endtime="20201030 15:55:13.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.689" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 15:55:13.688" endtime="20201030 15:55:13.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.692" level="INFO">VALUE: [1.4361000000000929e-05, 1.3542000000001803e-05, 1.3792000000002053e-05, 1.4181000000001998e-05, 1.379099999999911e-05, 1.3763999999999443e-05, 1.4458000000001914e-05, 1.4514000000000193e-05, 1.3486000000000054e-05, 1.4764000000000443e-05, 1.3848000000000332e-05, 1.3723000000000207e-05, 1.3874999999999998e-05, 1.3681000000001498e-05, 1.4694999999998598e-05, 1.4152999999999388e-05, 1.3763999999999443e-05, 1.4013999999999693e-05, 1.4138999999999818e-05, 1.4319999999998223e-05, 1.4000000000000123e-05, 1.3499999999999623e-05, 1.4013999999999693e-05, 1.4207999999998194e-05, 1.4722999999997738e-05, 1.3819999999997723e-05, 1.3513999999999193e-05, 1.3763999999999443e-05, 1.3680000000002024e-05, 1.4499999999997154e-05, 1.3624999999999748e-05, 1.3611000000000179e-05, 1.434699999999789e-05, 1.430499999999918e-05, 1.4083000000001539e-05, 1.3611000000000179e-05, 1.4457999999998444e-05, 1.433299999999832e-05, 1.4000000000000123e-05, 1.477699999999707e-05, 1.4179999999999054e-05, 1.430499999999918e-05, 1.3513999999999193e-05, 1.379099999999911e-05, 1.4179999999999054e-05, 1.4208000000001664e-05, 1.3569000000001469e-05, 1.4305000000002649e-05, 1.404099999999936e-05, 1.3874999999999998e-05]</msg>
<status status="PASS" starttime="20201030 15:55:13.690" endtime="20201030 15:55:13.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.686" endtime="20201030 15:55:13.693"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:13.697" endtime="20201030 15:55:13.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.695" endtime="20201030 15:55:13.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.694" endtime="20201030 15:55:13.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.337" endtime="20201030 15:55:13.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.336" endtime="20201030 15:55:13.717"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.726" endtime="20201030 15:55:13.742"></status>
</kw>
<msg timestamp="20201030 15:55:13.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:13.725" endtime="20201030 15:55:13.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:13.744" endtime="20201030 15:55:13.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.746" endtime="20201030 15:55:13.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.722" endtime="20201030 15:55:13.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.720" endtime="20201030 15:55:13.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.755" endtime="20201030 15:55:14.041"></status>
</kw>
<msg timestamp="20201030 15:55:14.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022612111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022625875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:13.754" endtime="20201030 15:55:14.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022612111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022625875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:14.045" endtime="20201030 15:55:14.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.053" endtime="20201030 15:55:14.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.751" endtime="20201030 15:55:14.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.750" endtime="20201030 15:55:14.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:14.060" level="INFO">${RESULT} = [{'diff': 1.3763999999999443e-05}, {'diff': 1.3722000000000734e-05}, {'diff': 1.4069000000001969e-05}, {'diff': 1.3972000000000984e-05}, {'diff': 1.4097000000001109e-05}, {'diff': 1.4055000000002399e-...</msg>
<status status="PASS" starttime="20201030 15:55:14.057" endtime="20201030 15:55:14.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:14.064" level="INFO">${ACCURACY} = {'diff': [1.3763999999999443e-05, 1.3722000000000734e-05, 1.4069000000001969e-05, 1.3972000000000984e-05, 1.4097000000001109e-05, 1.4055000000002399e-05, 1.40689999999985e-05, 1.4207999999998194e-05, ...</msg>
<status status="PASS" starttime="20201030 15:55:14.061" endtime="20201030 15:55:14.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.068" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 15:55:14.067" endtime="20201030 15:55:14.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.071" level="INFO">VALUE: [1.3763999999999443e-05, 1.3722000000000734e-05, 1.4069000000001969e-05, 1.3972000000000984e-05, 1.4097000000001109e-05, 1.4055000000002399e-05, 1.40689999999985e-05, 1.4207999999998194e-05, 1.427700000000004e-05, 1.4708000000002164e-05, 1.3916000000002704e-05, 1.3638999999999318e-05, 1.3805000000002149e-05, 1.3624999999999748e-05, 1.4722000000001734e-05, 1.427700000000004e-05, 1.4513999999996724e-05, 1.3959000000000887e-05, 1.4013999999999693e-05, 1.4443999999998874e-05, 1.4069000000001969e-05, 1.3819000000001719e-05, 1.3916000000002704e-05, 1.3679999999998554e-05, 1.4625000000000749e-05, 1.4500000000000624e-05, 1.4389000000000068e-05, 1.3888999999999568e-05, 1.4291999999999083e-05, 1.4416999999999208e-05, 1.4125000000000248e-05, 1.4222000000001234e-05, 1.3666999999998458e-05, 1.4013999999999693e-05, 1.4166999999998958e-05, 1.4000000000000123e-05, 1.4277999999999513e-05, 1.3888999999999568e-05, 1.4193999999998624e-05, 1.4250000000000373e-05, 1.3486000000000054e-05, 1.4235999999997334e-05, 1.3639000000002788e-05, 1.3638999999999318e-05, 1.4347000000001359e-05, 1.4125000000000248e-05, 1.3736000000000304e-05, 1.3583000000001039e-05, 1.4416999999999208e-05, 1.4056000000001873e-05]</msg>
<status status="PASS" starttime="20201030 15:55:14.070" endtime="20201030 15:55:14.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.065" endtime="20201030 15:55:14.073"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:14.077" endtime="20201030 15:55:14.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.075" endtime="20201030 15:55:14.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.074" endtime="20201030 15:55:14.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.718" endtime="20201030 15:55:14.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.718" endtime="20201030 15:55:14.098"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.106" endtime="20201030 15:55:14.121"></status>
</kw>
<msg timestamp="20201030 15:55:14.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.105" endtime="20201030 15:55:14.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.123" endtime="20201030 15:55:14.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.125" endtime="20201030 15:55:14.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.102" endtime="20201030 15:55:14.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.100" endtime="20201030 15:55:14.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.134" endtime="20201030 15:55:14.422"></status>
</kw>
<msg timestamp="20201030 15:55:14.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021445597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02146, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:55:14.133" endtime="20201030 15:55:14.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021445597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02146, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:55:14.426" endtime="20201030 15:55:14.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.434" endtime="20201030 15:55:14.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.130" endtime="20201030 15:55:14.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.128" endtime="20201030 15:55:14.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:14.441" level="INFO">${RESULT} = [{'diff': 1.4402999999999638e-05}, {'diff': 1.4125000000000248e-05}, {'diff': 1.431899999999875e-05}, {'diff': 1.4334000000001262e-05}, {'diff': 1.3556000000001373e-05}, {'diff': 1.352699999999929e-05...</msg>
<status status="PASS" starttime="20201030 15:55:14.438" endtime="20201030 15:55:14.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:14.446" level="INFO">${ACCURACY} = {'diff': [1.4402999999999638e-05, 1.4125000000000248e-05, 1.431899999999875e-05, 1.4334000000001262e-05, 1.3556000000001373e-05, 1.352699999999929e-05, 1.4389000000000068e-05, 1.354099999999886e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:55:14.442" endtime="20201030 15:55:14.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.450" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 15:55:14.449" endtime="20201030 15:55:14.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.453" level="INFO">VALUE: [1.4402999999999638e-05, 1.4125000000000248e-05, 1.431899999999875e-05, 1.4334000000001262e-05, 1.3556000000001373e-05, 1.352699999999929e-05, 1.4389000000000068e-05, 1.354099999999886e-05, 1.4166999999998958e-05, 1.4722000000001734e-05, 1.4165999999999485e-05, 1.4165999999999485e-05, 1.4083000000001539e-05, 1.3749999999999873e-05, 1.408299999999807e-05, 1.3680000000002024e-05, 1.3679999999998554e-05, 1.3915999999999235e-05, 1.3583000000001039e-05, 1.408299999999807e-05, 1.4333000000001789e-05, 1.3722000000000734e-05, 1.405499999999893e-05, 1.4207999999998194e-05, 1.3847000000000859e-05, 1.3833000000001289e-05, 1.3499999999999623e-05, 1.384699999999739e-05, 1.3541999999998333e-05, 1.3985999999997084e-05, 1.3694000000001594e-05, 1.4361000000000929e-05, 1.4042000000002303e-05, 1.4152999999999388e-05, 1.381899999999825e-05, 1.4236000000000804e-05, 1.4402999999999638e-05, 1.3972000000000984e-05, 1.4042000000002303e-05, 1.4250000000000373e-05, 1.3652999999998888e-05, 1.4055999999998403e-05, 1.4166999999998958e-05, 1.3527999999998763e-05, 1.4763999999996974e-05, 1.3986000000000554e-05, 1.4292000000002553e-05, 1.4195000000001567e-05, 1.3763999999999443e-05, 1.4806000000002623e-05]</msg>
<status status="PASS" starttime="20201030 15:55:14.452" endtime="20201030 15:55:14.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.447" endtime="20201030 15:55:14.454"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:14.458" endtime="20201030 15:55:14.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.456" endtime="20201030 15:55:14.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.455" endtime="20201030 15:55:14.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.099" endtime="20201030 15:55:14.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.098" endtime="20201030 15:55:14.479"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.487" endtime="20201030 15:55:14.502"></status>
</kw>
<msg timestamp="20201030 15:55:14.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.486" endtime="20201030 15:55:14.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.504" endtime="20201030 15:55:14.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.506" endtime="20201030 15:55:14.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.483" endtime="20201030 15:55:14.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.481" endtime="20201030 15:55:14.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.515" endtime="20201030 15:55:14.802"></status>
</kw>
<msg timestamp="20201030 15:55:14.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021619542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021633639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:14.514" endtime="20201030 15:55:14.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021619542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021633639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:14.806" endtime="20201030 15:55:14.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.815" endtime="20201030 15:55:14.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.511" endtime="20201030 15:55:14.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.510" endtime="20201030 15:55:14.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:14.821" level="INFO">${RESULT} = [{'diff': 1.4097000000001109e-05}, {'diff': 1.4165999999999485e-05}, {'diff': 1.4361000000000929e-05}, {'diff': 1.4457999999998444e-05}, {'diff': 1.3972000000000984e-05}, {'diff': 1.4125000000000248e-...</msg>
<status status="PASS" starttime="20201030 15:55:14.818" endtime="20201030 15:55:14.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:14.826" level="INFO">${ACCURACY} = {'diff': [1.4097000000001109e-05, 1.4165999999999485e-05, 1.4361000000000929e-05, 1.4457999999998444e-05, 1.3972000000000984e-05, 1.4125000000000248e-05, 1.4291999999999083e-05, 1.4306000000002123e-05...</msg>
<status status="PASS" starttime="20201030 15:55:14.822" endtime="20201030 15:55:14.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.830" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 15:55:14.829" endtime="20201030 15:55:14.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.832" level="INFO">VALUE: [1.4097000000001109e-05, 1.4165999999999485e-05, 1.4361000000000929e-05, 1.4457999999998444e-05, 1.3972000000000984e-05, 1.4125000000000248e-05, 1.4291999999999083e-05, 1.4306000000002123e-05, 1.3972000000000984e-05, 1.4805999999999153e-05, 1.3667000000001928e-05, 1.4181000000001998e-05, 1.4305000000002649e-05, 1.3903000000002608e-05, 1.4167000000002428e-05, 1.4416999999999208e-05, 1.4125000000000248e-05, 1.3583000000001039e-05, 1.3943999999998374e-05, 1.3833000000001289e-05, 1.4347000000001359e-05, 1.4195000000001567e-05, 1.4193999999998624e-05, 1.3930999999998278e-05, 1.4153000000002858e-05, 1.3931000000001748e-05, 1.4250000000000373e-05, 1.3915999999999235e-05, 1.433299999999832e-05, 1.4305999999998653e-05, 1.4305999999998653e-05, 1.3667000000001928e-05, 1.452700000000029e-05, 1.3653000000002358e-05, 1.4694999999998598e-05, 1.3528000000002233e-05, 1.3666000000002454e-05, 1.4221999999997764e-05, 1.4402999999999638e-05, 1.4500000000000624e-05, 1.4027999999999263e-05, 1.4124999999996779e-05, 1.3902999999999138e-05, 1.3888000000000095e-05, 1.4527999999999763e-05, 1.3486000000000054e-05, 1.4348000000000832e-05, 1.3763999999999443e-05, 1.4320000000001692e-05, 1.4292000000002553e-05]</msg>
<status status="PASS" starttime="20201030 15:55:14.831" endtime="20201030 15:55:14.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.826" endtime="20201030 15:55:14.834"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:14.837" endtime="20201030 15:55:14.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.836" endtime="20201030 15:55:14.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.835" endtime="20201030 15:55:14.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.480" endtime="20201030 15:55:14.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.479" endtime="20201030 15:55:14.858"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.867" endtime="20201030 15:55:14.883"></status>
</kw>
<msg timestamp="20201030 15:55:14.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.865" endtime="20201030 15:55:14.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.884" endtime="20201030 15:55:14.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.887" endtime="20201030 15:55:14.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.863" endtime="20201030 15:55:14.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.860" endtime="20201030 15:55:14.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.896" endtime="20201030 15:55:15.180"></status>
</kw>
<msg timestamp="20201030 15:55:15.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022667069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02268125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:14.894" endtime="20201030 15:55:15.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022667069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02268125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:15.184" endtime="20201030 15:55:15.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.192" endtime="20201030 15:55:15.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.892" endtime="20201030 15:55:15.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.890" endtime="20201030 15:55:15.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:15.199" level="INFO">${RESULT} = [{'diff': 1.4180999999998528e-05}, {'diff': 1.429099999999961e-05}, {'diff': 1.380499999999868e-05}, {'diff': 1.4195000000001567e-05}, {'diff': 1.4070000000001442e-05}, {'diff': 1.4263999999999943e-05...</msg>
<status status="PASS" starttime="20201030 15:55:15.196" endtime="20201030 15:55:15.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:15.203" level="INFO">${ACCURACY} = {'diff': [1.4180999999998528e-05, 1.429099999999961e-05, 1.380499999999868e-05, 1.4195000000001567e-05, 1.4070000000001442e-05, 1.4263999999999943e-05, 1.3915999999999235e-05, 1.4403000000003108e-05, ...</msg>
<status status="PASS" starttime="20201030 15:55:15.200" endtime="20201030 15:55:15.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.207" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 15:55:15.206" endtime="20201030 15:55:15.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.210" level="INFO">VALUE: [1.4180999999998528e-05, 1.429099999999961e-05, 1.380499999999868e-05, 1.4195000000001567e-05, 1.4070000000001442e-05, 1.4263999999999943e-05, 1.3915999999999235e-05, 1.4403000000003108e-05, 1.4263999999999943e-05, 1.379099999999911e-05, 1.3527999999998763e-05, 1.379099999999911e-05, 1.3833000000001289e-05, 1.4415999999999735e-05, 1.4583000000002039e-05, 1.4193999999998624e-05, 1.4055000000002399e-05, 1.3693999999998124e-05, 1.3749999999999873e-05, 1.4207999999998194e-05, 1.3985999999997084e-05, 1.3693999999998124e-05, 1.3986000000000554e-05, 1.3486000000000054e-05, 1.4208000000001664e-05, 1.3542000000001803e-05, 1.3514000000002663e-05, 1.3833000000001289e-05, 1.3680999999998028e-05, 1.3945000000001317e-05, 1.4195000000001567e-05, 1.3694000000001594e-05, 1.4180999999998528e-05, 1.3763999999999443e-05, 1.4570000000001943e-05, 1.3611000000000179e-05, 1.4069999999997973e-05, 1.4111000000000679e-05, 1.3874999999999998e-05, 1.4639000000000318e-05, 1.3749999999999873e-05, 1.3820000000001192e-05, 1.4069999999997973e-05, 1.3847000000000859e-05, 1.4722000000001734e-05, 1.3736000000000304e-05, 1.3763999999999443e-05, 1.4375000000000498e-05, 1.3903000000002608e-05, 1.4639000000000318e-05]</msg>
<status status="PASS" starttime="20201030 15:55:15.208" endtime="20201030 15:55:15.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.204" endtime="20201030 15:55:15.212"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:15.216" endtime="20201030 15:55:15.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.214" endtime="20201030 15:55:15.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.213" endtime="20201030 15:55:15.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.859" endtime="20201030 15:55:15.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.858" endtime="20201030 15:55:15.236"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.245" endtime="20201030 15:55:15.260"></status>
</kw>
<msg timestamp="20201030 15:55:15.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:15.243" endtime="20201030 15:55:15.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:15.261" endtime="20201030 15:55:15.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.264" endtime="20201030 15:55:15.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.241" endtime="20201030 15:55:15.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.239" endtime="20201030 15:55:15.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.273" endtime="20201030 15:55:15.560"></status>
</kw>
<msg timestamp="20201030 15:55:15.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021555583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021570861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:15.271" endtime="20201030 15:55:15.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021555583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021570861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:15.564" endtime="20201030 15:55:15.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.572" endtime="20201030 15:55:15.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.269" endtime="20201030 15:55:15.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.267" endtime="20201030 15:55:15.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:15.578" level="INFO">${RESULT} = [{'diff': 1.5278000000000513e-05}, {'diff': 1.540299999999717e-05}, {'diff': 1.5528000000000763e-05}, {'diff': 1.5472999999998488e-05}, {'diff': 1.5306000000003123e-05}, {'diff': 1.4917000000003178e-0...</msg>
<status status="PASS" starttime="20201030 15:55:15.575" endtime="20201030 15:55:15.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:15.583" level="INFO">${ACCURACY} = {'diff': [1.5278000000000513e-05, 1.540299999999717e-05, 1.5528000000000763e-05, 1.5472999999998488e-05, 1.5306000000003123e-05, 1.4917000000003178e-05, 1.4889000000000568e-05, 1.4500000000000624e-05,...</msg>
<status status="PASS" starttime="20201030 15:55:15.579" endtime="20201030 15:55:15.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.588" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 15:55:15.587" endtime="20201030 15:55:15.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.590" level="INFO">VALUE: [1.5278000000000513e-05, 1.540299999999717e-05, 1.5528000000000763e-05, 1.5472999999998488e-05, 1.5306000000003123e-05, 1.4917000000003178e-05, 1.4889000000000568e-05, 1.4500000000000624e-05, 1.5000000000001124e-05, 1.579100000000111e-05, 1.4693999999999124e-05, 1.5471999999999014e-05, 1.5235999999998334e-05, 1.454099999999986e-05, 1.5569999999999473e-05, 1.4764000000000443e-05, 1.4514000000000193e-05, 1.4694000000002594e-05, 1.5139000000000818e-05, 1.511099999999821e-05, 1.531899999999975e-05, 1.5125000000001249e-05, 1.4652000000000415e-05, 1.5263999999997474e-05, 1.479100000000011e-05, 1.530500000000018e-05, 1.455499999999943e-05, 1.4957999999998944e-05, 1.5221999999998764e-05, 1.5457999999999444e-05, 1.5000000000001124e-05, 1.4708000000002164e-05, 1.5193999999999624e-05, 1.4764000000000443e-05, 1.566700000000046e-05, 1.4611000000001179e-05, 1.530500000000018e-05, 1.4735999999997834e-05, 1.5166999999999958e-05, 1.5278000000000513e-05, 1.5443999999999874e-05, 1.4527999999999763e-05, 1.534700000000236e-05, 1.5250000000001374e-05, 1.565300000000089e-05, 1.5055999999999403e-05, 1.5431000000003248e-05, 1.5180999999999528e-05, 1.4764000000000443e-05, 1.5778000000001013e-05]</msg>
<status status="PASS" starttime="20201030 15:55:15.589" endtime="20201030 15:55:15.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.584" endtime="20201030 15:55:15.592"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:15.595" endtime="20201030 15:55:15.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.594" endtime="20201030 15:55:15.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.593" endtime="20201030 15:55:15.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.237" endtime="20201030 15:55:15.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.237" endtime="20201030 15:55:15.616"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.625" endtime="20201030 15:55:15.640"></status>
</kw>
<msg timestamp="20201030 15:55:15.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:15.623" endtime="20201030 15:55:15.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:15.642" endtime="20201030 15:55:15.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.644" endtime="20201030 15:55:15.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.620" endtime="20201030 15:55:15.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.618" endtime="20201030 15:55:15.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.654" endtime="20201030 15:55:15.940"></status>
</kw>
<msg timestamp="20201030 15:55:15.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021844208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021860903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:15.652" endtime="20201030 15:55:15.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021844208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021860903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:15.944" endtime="20201030 15:55:15.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.952" endtime="20201030 15:55:15.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.650" endtime="20201030 15:55:15.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.648" endtime="20201030 15:55:15.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:15.959" level="INFO">${RESULT} = [{'diff': 1.6695000000000598e-05}, {'diff': 1.584699999999939e-05}, {'diff': 1.6028000000001263e-05}, {'diff': 1.581900000000025e-05}, {'diff': 1.586100000000243e-05}, {'diff': 1.554100000000086e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:15.956" endtime="20201030 15:55:15.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:15.963" level="INFO">${ACCURACY} = {'diff': [1.6695000000000598e-05, 1.584699999999939e-05, 1.6028000000001263e-05, 1.581900000000025e-05, 1.586100000000243e-05, 1.554100000000086e-05, 1.612500000000225e-05, 1.6165999999998015e-05, 1.5...</msg>
<status status="PASS" starttime="20201030 15:55:15.960" endtime="20201030 15:55:15.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.967" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 15:55:15.966" endtime="20201030 15:55:15.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.970" level="INFO">VALUE: [1.6695000000000598e-05, 1.584699999999939e-05, 1.6028000000001263e-05, 1.581900000000025e-05, 1.586100000000243e-05, 1.554100000000086e-05, 1.612500000000225e-05, 1.6165999999998015e-05, 1.583299999999982e-05, 1.633300000000032e-05, 1.5694000000000125e-05, 1.5986000000002554e-05, 1.591700000000071e-05, 1.612500000000225e-05, 1.6542000000001333e-05, 1.5514000000001194e-05, 1.611099999999921e-05, 1.6264000000001944e-05, 1.5749999999998404e-05, 1.583299999999982e-05, 1.641699999999774e-05, 1.6472000000000014e-05, 1.63889999999986e-05, 1.612499999999878e-05, 1.5931000000000278e-05, 1.5514000000001194e-05, 1.587499999999853e-05, 1.5735999999998834e-05, 1.559699999999914e-05, 1.663900000000232e-05, 1.612499999999878e-05, 1.6473000000002957e-05, 1.6235999999999334e-05, 1.6458999999999918e-05, 1.6041999999997364e-05, 1.5694999999999598e-05, 1.6056000000000403e-05, 1.5792000000000583e-05, 1.6348000000002832e-05, 1.6208999999999668e-05, 1.6416000000001735e-05, 1.60690000000005e-05, 1.5695000000003068e-05, 1.5861999999998433e-05, 1.661099999999971e-05, 1.588900000000157e-05, 1.5707999999999694e-05, 1.6333999999999793e-05, 1.616700000000096e-05, 1.6221999999999764e-05]</msg>
<status status="PASS" starttime="20201030 15:55:15.968" endtime="20201030 15:55:15.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.964" endtime="20201030 15:55:15.971"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:15.975" endtime="20201030 15:55:15.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.973" endtime="20201030 15:55:15.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.972" endtime="20201030 15:55:15.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.617" endtime="20201030 15:55:15.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.616" endtime="20201030 15:55:15.996"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.004" endtime="20201030 15:55:16.020"></status>
</kw>
<msg timestamp="20201030 15:55:16.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.003" endtime="20201030 15:55:16.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.022" endtime="20201030 15:55:16.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.024" endtime="20201030 15:55:16.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.000" endtime="20201030 15:55:16.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.998" endtime="20201030 15:55:16.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.033" endtime="20201030 15:55:16.318"></status>
</kw>
<msg timestamp="20201030 15:55:16.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0225805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598028, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:16.032" endtime="20201030 15:55:16.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0225805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598028, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:16.322" endtime="20201030 15:55:16.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.330" endtime="20201030 15:55:16.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.029" endtime="20201030 15:55:16.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.028" endtime="20201030 15:55:16.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:16.337" level="INFO">${RESULT} = [{'diff': 1.7527999999999294e-05}, {'diff': 1.702699999999932e-05}, {'diff': 1.681900000000125e-05}, {'diff': 1.677699999999907e-05}, {'diff': 1.6570000000000473e-05}, {'diff': 1.686099999999996e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:16.333" endtime="20201030 15:55:16.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:16.341" level="INFO">${ACCURACY} = {'diff': [1.7527999999999294e-05, 1.702699999999932e-05, 1.681900000000125e-05, 1.677699999999907e-05, 1.6570000000000473e-05, 1.686099999999996e-05, 1.734699999999742e-05, 1.6972000000000514e-05, 1.7...</msg>
<status status="PASS" starttime="20201030 15:55:16.338" endtime="20201030 15:55:16.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.345" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 15:55:16.344" endtime="20201030 15:55:16.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.348" level="INFO">VALUE: [1.7527999999999294e-05, 1.702699999999932e-05, 1.681900000000125e-05, 1.677699999999907e-05, 1.6570000000000473e-05, 1.686099999999996e-05, 1.734699999999742e-05, 1.6972000000000514e-05, 1.715300000000239e-05, 1.713899999999935e-05, 1.741700000000221e-05, 1.6499999999999154e-05, 1.7194000000001625e-05, 1.681899999999778e-05, 1.705500000000193e-05, 1.6513999999998724e-05, 1.6694000000001125e-05, 1.712499999999978e-05, 1.683300000000082e-05, 1.755499999999896e-05, 1.659700000000014e-05, 1.736100000000046e-05, 1.665300000000189e-05, 1.7208000000001195e-05, 1.715299999999892e-05, 1.6958000000000945e-05, 1.711100000000021e-05, 1.736100000000046e-05, 1.73889999999996e-05, 1.7278000000002514e-05, 1.6749999999999404e-05, 1.7443999999998405e-05, 1.7320000000001223e-05, 1.659700000000014e-05, 1.693099999999781e-05, 1.6763999999998974e-05, 1.7070000000000973e-05, 1.712499999999978e-05, 1.6735999999999834e-05, 1.737500000000003e-05, 1.6972000000000514e-05, 1.7209000000000668e-05, 1.7319999999997754e-05, 1.6792000000001583e-05, 1.7263999999999474e-05, 1.7500000000000154e-05, 1.7292000000002083e-05, 1.6777999999998544e-05, 1.6847999999999863e-05, 1.7500000000000154e-05]</msg>
<status status="PASS" starttime="20201030 15:55:16.346" endtime="20201030 15:55:16.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.342" endtime="20201030 15:55:16.350"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:16.353" endtime="20201030 15:55:16.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.352" endtime="20201030 15:55:16.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.351" endtime="20201030 15:55:16.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.997" endtime="20201030 15:55:16.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.996" endtime="20201030 15:55:16.374"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.383" endtime="20201030 15:55:16.399"></status>
</kw>
<msg timestamp="20201030 15:55:16.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.381" endtime="20201030 15:55:16.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.400" endtime="20201030 15:55:16.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.402" endtime="20201030 15:55:16.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.379" endtime="20201030 15:55:16.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.377" endtime="20201030 15:55:16.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.411" endtime="20201030 15:55:16.697"></status>
</kw>
<msg timestamp="20201030 15:55:16.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021594361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021612583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:16.410" endtime="20201030 15:55:16.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021594361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021612583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:16.701" endtime="20201030 15:55:16.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.709" endtime="20201030 15:55:16.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.407" endtime="20201030 15:55:16.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.406" endtime="20201030 15:55:16.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:16.716" level="INFO">${RESULT} = [{'diff': 1.8222000000001765e-05}, {'diff': 1.7541999999998864e-05}, {'diff': 1.818099999999906e-05}, {'diff': 1.78890000000001e-05}, {'diff': 1.840300000000017e-05}, {'diff': 1.784700000000139e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:16.713" endtime="20201030 15:55:16.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:16.721" level="INFO">${ACCURACY} = {'diff': [1.8222000000001765e-05, 1.7541999999998864e-05, 1.818099999999906e-05, 1.78890000000001e-05, 1.840300000000017e-05, 1.784700000000139e-05, 1.836099999999799e-05, 1.759699999999767e-05, 1.837...</msg>
<status status="PASS" starttime="20201030 15:55:16.717" endtime="20201030 15:55:16.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.726" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 15:55:16.724" endtime="20201030 15:55:16.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.729" level="INFO">VALUE: [1.8222000000001765e-05, 1.7541999999998864e-05, 1.818099999999906e-05, 1.78890000000001e-05, 1.840300000000017e-05, 1.784700000000139e-05, 1.836099999999799e-05, 1.759699999999767e-05, 1.837499999999756e-05, 1.868099999999956e-05, 1.8500000000001154e-05, 1.7819999999998254e-05, 1.769499999999813e-05, 1.780499999999921e-05, 1.781899999999878e-05, 1.7834000000001293e-05, 1.7638000000000376e-05, 1.84029999999967e-05, 1.7763999999999974e-05, 1.869499999999913e-05, 1.7902000000000196e-05, 1.756899999999853e-05, 1.7929999999999335e-05, 1.8207999999998725e-05, 1.784699999999792e-05, 1.786100000000096e-05, 1.762500000000028e-05, 1.7665999999999515e-05, 1.787500000000053e-05, 1.780499999999921e-05, 1.762500000000028e-05, 1.809700000000164e-05, 1.780499999999921e-05, 1.7944000000002375e-05, 1.78890000000001e-05, 1.811099999999774e-05, 1.7915999999999765e-05, 1.837499999999756e-05, 1.7513999999999724e-05, 1.78890000000001e-05, 1.8250000000000904e-05, 1.8236000000001334e-05, 1.8014000000000224e-05, 1.8000000000000654e-05, 1.8500000000001154e-05, 1.83890000000006e-05, 1.8291999999999614e-05, 1.809699999999817e-05, 1.768100000000203e-05, 1.8749999999997935e-05]</msg>
<status status="PASS" starttime="20201030 15:55:16.727" endtime="20201030 15:55:16.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.722" endtime="20201030 15:55:16.731"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:16.735" endtime="20201030 15:55:16.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.734" endtime="20201030 15:55:16.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.732" endtime="20201030 15:55:16.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.375" endtime="20201030 15:55:16.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.375" endtime="20201030 15:55:16.757"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.770" endtime="20201030 15:55:16.786"></status>
</kw>
<msg timestamp="20201030 15:55:16.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.767" endtime="20201030 15:55:16.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.787" endtime="20201030 15:55:16.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.790" endtime="20201030 15:55:16.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.764" endtime="20201030 15:55:16.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.761" endtime="20201030 15:55:16.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.799" endtime="20201030 15:55:17.090"></status>
</kw>
<msg timestamp="20201030 15:55:17.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027017958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027037542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:16.797" endtime="20201030 15:55:17.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027017958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027037542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:17.095" endtime="20201030 15:55:17.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.103" endtime="20201030 15:55:17.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.795" endtime="20201030 15:55:17.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.793" endtime="20201030 15:55:17.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:17.110" level="INFO">${RESULT} = [{'diff': 1.9583999999999574e-05}, {'diff': 1.943100000000031e-05}, {'diff': 1.9333999999999324e-05}, {'diff': 1.8555999999999434e-05}, {'diff': 1.9207999999999725e-05}, {'diff': 1.9207999999999725e-0...</msg>
<status status="PASS" starttime="20201030 15:55:17.107" endtime="20201030 15:55:17.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:17.114" level="INFO">${ACCURACY} = {'diff': [1.9583999999999574e-05, 1.943100000000031e-05, 1.9333999999999324e-05, 1.8555999999999434e-05, 1.9207999999999725e-05, 1.9207999999999725e-05, 1.8985999999998615e-05, 1.9042000000000364e-05,...</msg>
<status status="PASS" starttime="20201030 15:55:17.111" endtime="20201030 15:55:17.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.119" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 15:55:17.118" endtime="20201030 15:55:17.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.121" level="INFO">VALUE: [1.9583999999999574e-05, 1.943100000000031e-05, 1.9333999999999324e-05, 1.8555999999999434e-05, 1.9207999999999725e-05, 1.9207999999999725e-05, 1.8985999999998615e-05, 1.9042000000000364e-05, 1.92089999999992e-05, 1.9514000000001724e-05, 1.916700000000049e-05, 1.9027999999997325e-05, 1.9486000000002585e-05, 1.938899999999813e-05, 1.9028000000000794e-05, 1.9152000000001446e-05, 1.8778000000000544e-05, 1.9347999999998894e-05, 1.8556000000002904e-05, 1.9542000000000864e-05, 1.8986000000002085e-05, 1.944499999999988e-05, 1.859699999999867e-05, 1.938899999999813e-05, 1.92089999999992e-05, 1.895900000000242e-05, 1.8819999999999254e-05, 1.944499999999988e-05, 1.8499999999997685e-05, 1.911099999999874e-05, 1.8637999999997906e-05, 1.901299999999828e-05, 1.862499999999781e-05, 1.862500000000128e-05, 1.9542000000000864e-05, 1.9319999999999754e-05, 1.9014000000001224e-05, 1.943100000000031e-05, 1.859700000000214e-05, 1.9637999999998906e-05, 1.884699999999892e-05, 1.884699999999892e-05, 1.92769999999981e-05, 1.9166000000001016e-05, 1.904100000000089e-05, 1.9402000000001696e-05, 1.85829999999991e-05, 1.862500000000128e-05, 1.9401999999998226e-05, 1.9207999999999725e-05]</msg>
<status status="PASS" starttime="20201030 15:55:17.120" endtime="20201030 15:55:17.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.115" endtime="20201030 15:55:17.123"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:17.127" endtime="20201030 15:55:17.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.125" endtime="20201030 15:55:17.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.124" endtime="20201030 15:55:17.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.758" endtime="20201030 15:55:17.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.757" endtime="20201030 15:55:17.147"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.156" endtime="20201030 15:55:17.172"></status>
</kw>
<msg timestamp="20201030 15:55:17.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.154" endtime="20201030 15:55:17.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.173" endtime="20201030 15:55:17.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.176" endtime="20201030 15:55:17.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.152" endtime="20201030 15:55:17.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.150" endtime="20201030 15:55:17.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.185" endtime="20201030 15:55:17.470"></status>
</kw>
<msg timestamp="20201030 15:55:17.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022363944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022383903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:17.183" endtime="20201030 15:55:17.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022363944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022383903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:17.475" endtime="20201030 15:55:17.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.483" endtime="20201030 15:55:17.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.181" endtime="20201030 15:55:17.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.179" endtime="20201030 15:55:17.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:17.489" level="INFO">${RESULT} = [{'diff': 1.995899999999995e-05}, {'diff': 1.9999999999999185e-05}, {'diff': 1.990300000000167e-05}, {'diff': 2.031899999999781e-05}, {'diff': 2.0235999999999865e-05}, {'diff': 1.9763999999998505e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:17.486" endtime="20201030 15:55:17.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:17.493" level="INFO">${ACCURACY} = {'diff': [1.995899999999995e-05, 1.9999999999999185e-05, 1.990300000000167e-05, 2.031899999999781e-05, 2.0235999999999865e-05, 1.9763999999998505e-05, 2.040300000000217e-05, 2.03890000000026e-05, 2.03...</msg>
<status status="PASS" starttime="20201030 15:55:17.490" endtime="20201030 15:55:17.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.498" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 15:55:17.497" endtime="20201030 15:55:17.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.500" level="INFO">VALUE: [1.995899999999995e-05, 1.9999999999999185e-05, 1.990300000000167e-05, 2.031899999999781e-05, 2.0235999999999865e-05, 1.9763999999998505e-05, 2.040300000000217e-05, 2.03890000000026e-05, 2.031900000000128e-05, 2.016700000000149e-05, 2.012499999999931e-05, 2.0499999999999685e-05, 1.991700000000124e-05, 2.033300000000085e-05, 2.0028000000001794e-05, 1.986099999999949e-05, 2.038899999999913e-05, 2.0334000000000324e-05, 2.0235999999999865e-05, 2.0249999999999435e-05, 2.044499999999741e-05, 2.012499999999931e-05, 1.9749999999998935e-05, 2.0486000000000115e-05, 2.012499999999931e-05, 1.9764000000001974e-05, 2.018100000000106e-05, 2.012500000000278e-05, 1.9499999999998685e-05, 2.0347999999999894e-05, 1.9985999999999615e-05, 1.9556000000000434e-05, 1.97089999999997e-05, 2.0320000000000754e-05, 2.0222000000000295e-05, 1.981900000000078e-05, 1.9707999999996756e-05, 2.0208000000000725e-05, 2.0361999999999464e-05, 2.069500000000113e-05, 1.952699999999835e-05, 2.0193999999997686e-05, 2.005500000000146e-05, 1.959699999999967e-05, 1.981900000000078e-05, 2.029099999999867e-05, 2.0166000000002016e-05, 2.0443999999997936e-05, 2.0277999999998575e-05, 1.9915999999998296e-05]</msg>
<status status="PASS" starttime="20201030 15:55:17.499" endtime="20201030 15:55:17.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.494" endtime="20201030 15:55:17.502"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:17.506" endtime="20201030 15:55:17.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.505" endtime="20201030 15:55:17.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.503" endtime="20201030 15:55:17.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.148" endtime="20201030 15:55:17.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.148" endtime="20201030 15:55:17.527"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.535" endtime="20201030 15:55:17.550"></status>
</kw>
<msg timestamp="20201030 15:55:17.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.534" endtime="20201030 15:55:17.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.552" endtime="20201030 15:55:17.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.554" endtime="20201030 15:55:17.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.531" endtime="20201030 15:55:17.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.529" endtime="20201030 15:55:17.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.563" endtime="20201030 15:55:17.847"></status>
</kw>
<msg timestamp="20201030 15:55:17.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021651, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021672, 'source': 'DUT_IC', 'event': 'FALLING',...</msg>
<status status="PASS" starttime="20201030 15:55:17.562" endtime="20201030 15:55:17.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021651, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021672, 'source': 'DUT_IC', 'event': 'FALLING',...</msg>
<status status="PASS" starttime="20201030 15:55:17.852" endtime="20201030 15:55:17.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.862" endtime="20201030 15:55:17.864"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.559" endtime="20201030 15:55:17.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.558" endtime="20201030 15:55:17.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:17.870" level="INFO">${RESULT} = [{'diff': 2.1000000000000185e-05}, {'diff': 2.086100000000049e-05}, {'diff': 2.1429999999999366e-05}, {'diff': 2.080499999999874e-05}, {'diff': 2.0665999999999046e-05}, {'diff': 2.1429999999999366e-05...</msg>
<status status="PASS" starttime="20201030 15:55:17.866" endtime="20201030 15:55:17.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:17.877" level="INFO">${ACCURACY} = {'diff': [2.1000000000000185e-05, 2.086100000000049e-05, 2.1429999999999366e-05, 2.080499999999874e-05, 2.0665999999999046e-05, 2.1429999999999366e-05, 2.0736000000000365e-05, 2.10830000000016e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:55:17.871" endtime="20201030 15:55:17.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.882" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 15:55:17.881" endtime="20201030 15:55:17.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.885" level="INFO">VALUE: [2.1000000000000185e-05, 2.086100000000049e-05, 2.1429999999999366e-05, 2.080499999999874e-05, 2.0665999999999046e-05, 2.1429999999999366e-05, 2.0736000000000365e-05, 2.10830000000016e-05, 2.0499999999999685e-05, 2.1235999999997396e-05, 2.0763999999999505e-05, 2.131900000000228e-05, 2.0986000000000615e-05, 2.0527999999998825e-05, 2.106899999999856e-05, 2.106899999999856e-05, 2.112500000000031e-05, 2.0541999999998395e-05, 2.1277999999999575e-05, 2.108299999999813e-05, 2.0887999999996687e-05, 2.116699999999902e-05, 2.0763999999999505e-05, 2.119499999999816e-05, 2.1207999999998256e-05, 2.0541999999998395e-05, 2.1041999999998895e-05, 2.1221999999997826e-05, 2.118099999999859e-05, 2.141700000000274e-05, 2.065299999999895e-05, 2.111100000000074e-05, 2.0834000000000824e-05, 2.093100000000181e-05, 2.1722000000001795e-05, 2.116699999999902e-05, 2.0542000000001864e-05, 2.093100000000181e-05, 2.138900000000013e-05, 2.1555999999998965e-05, 2.112500000000031e-05, 2.0584000000000574e-05, 2.144499999999841e-05, 2.138899999999666e-05, 2.162499999999734e-05, 2.094500000000138e-05, 2.1415999999999796e-05, 2.102699999999985e-05, 2.144499999999841e-05, 2.169499999999866e-05]</msg>
<status status="PASS" starttime="20201030 15:55:17.883" endtime="20201030 15:55:17.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.878" endtime="20201030 15:55:17.886"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:17.890" endtime="20201030 15:55:17.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.888" endtime="20201030 15:55:17.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.887" endtime="20201030 15:55:17.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.528" endtime="20201030 15:55:17.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.527" endtime="20201030 15:55:17.910"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.919" endtime="20201030 15:55:17.934"></status>
</kw>
<msg timestamp="20201030 15:55:17.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.918" endtime="20201030 15:55:17.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.936" endtime="20201030 15:55:17.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.938" endtime="20201030 15:55:17.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.915" endtime="20201030 15:55:17.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.913" endtime="20201030 15:55:17.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.947" endtime="20201030 15:55:18.234"></status>
</kw>
<msg timestamp="20201030 15:55:18.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021948917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021971111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:17.946" endtime="20201030 15:55:18.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021948917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021971111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:18.238" endtime="20201030 15:55:18.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.246" endtime="20201030 15:55:18.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.943" endtime="20201030 15:55:18.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.941" endtime="20201030 15:55:18.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:18.253" level="INFO">${RESULT} = [{'diff': 2.2194000000003156e-05}, {'diff': 2.1791999999999645e-05}, {'diff': 2.2472000000002545e-05}, {'diff': 2.2471999999999076e-05}, {'diff': 2.1735999999997896e-05}, {'diff': 2.187500000000106e-0...</msg>
<status status="PASS" starttime="20201030 15:55:18.250" endtime="20201030 15:55:18.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:18.257" level="INFO">${ACCURACY} = {'diff': [2.2194000000003156e-05, 2.1791999999999645e-05, 2.2472000000002545e-05, 2.2471999999999076e-05, 2.1735999999997896e-05, 2.187500000000106e-05, 2.188900000000063e-05, 2.156899999999906e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:55:18.254" endtime="20201030 15:55:18.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.261" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 15:55:18.260" endtime="20201030 15:55:18.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.264" level="INFO">VALUE: [2.2194000000003156e-05, 2.1791999999999645e-05, 2.2472000000002545e-05, 2.2471999999999076e-05, 2.1735999999997896e-05, 2.187500000000106e-05, 2.188900000000063e-05, 2.156899999999906e-05, 2.204100000000042e-05, 2.2180000000000116e-05, 2.1735999999997896e-05, 2.1901999999997257e-05, 2.2166000000000546e-05, 2.1943999999999436e-05, 2.2457999999999506e-05, 2.2014000000000755e-05, 2.2443999999999936e-05, 2.184699999999845e-05, 2.238900000000113e-05, 2.183300000000235e-05, 2.204100000000042e-05, 2.1735999999997896e-05, 2.180499999999974e-05, 2.1916000000000296e-05, 2.2278000000000575e-05, 2.234700000000242e-05, 2.161100000000124e-05, 2.2000000000001185e-05, 2.238900000000113e-05, 2.183300000000235e-05, 2.1584000000001574e-05, 2.1514000000000255e-05, 2.2457999999999506e-05, 2.184700000000192e-05, 2.2471999999999076e-05, 2.212500000000131e-05, 2.2471999999999076e-05, 2.219499999999916e-05, 2.2278000000000575e-05, 2.2500000000001685e-05, 2.195900000000195e-05, 2.2305999999999715e-05, 2.236099999999852e-05, 2.1527999999999825e-05, 2.243099999999984e-05, 2.2334000000002324e-05, 2.194499999999891e-05, 2.2249999999997966e-05, 2.2263999999997536e-05, 2.247300000000202e-05]</msg>
<status status="PASS" starttime="20201030 15:55:18.262" endtime="20201030 15:55:18.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.258" endtime="20201030 15:55:18.265"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:18.269" endtime="20201030 15:55:18.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.267" endtime="20201030 15:55:18.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.266" endtime="20201030 15:55:18.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.911" endtime="20201030 15:55:18.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.911" endtime="20201030 15:55:18.289"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.298" endtime="20201030 15:55:18.314"></status>
</kw>
<msg timestamp="20201030 15:55:18.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.297" endtime="20201030 15:55:18.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.316" endtime="20201030 15:55:18.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.318" endtime="20201030 15:55:18.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.294" endtime="20201030 15:55:18.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.292" endtime="20201030 15:55:18.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.327" endtime="20201030 15:55:18.612"></status>
</kw>
<msg timestamp="20201030 15:55:18.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022644375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022667972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:18.326" endtime="20201030 15:55:18.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022644375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022667972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:18.616" endtime="20201030 15:55:18.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.624" endtime="20201030 15:55:18.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.323" endtime="20201030 15:55:18.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.321" endtime="20201030 15:55:18.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:18.631" level="INFO">${RESULT} = [{'diff': 2.35970000000002e-05}, {'diff': 2.323699999999887e-05}, {'diff': 2.3042000000000895e-05}, {'diff': 2.287499999999859e-05}, {'diff': 2.2971999999999576e-05}, {'diff': 2.30969999999997e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:18.627" endtime="20201030 15:55:18.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:18.635" level="INFO">${ACCURACY} = {'diff': [2.35970000000002e-05, 2.323699999999887e-05, 2.3042000000000895e-05, 2.287499999999859e-05, 2.2971999999999576e-05, 2.30969999999997e-05, 2.284699999999945e-05, 2.284699999999945e-05, 2.2985...</msg>
<status status="PASS" starttime="20201030 15:55:18.632" endtime="20201030 15:55:18.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.639" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 15:55:18.638" endtime="20201030 15:55:18.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.642" level="INFO">VALUE: [2.35970000000002e-05, 2.323699999999887e-05, 2.3042000000000895e-05, 2.287499999999859e-05, 2.2971999999999576e-05, 2.30969999999997e-05, 2.284699999999945e-05, 2.284699999999945e-05, 2.2985999999999146e-05, 2.3000000000002185e-05, 2.2972000000003046e-05, 2.2735999999998896e-05, 2.312500000000231e-05, 2.3000000000002185e-05, 2.287499999999859e-05, 2.2750000000001935e-05, 2.2694000000000186e-05, 2.3042000000000895e-05, 2.3499999999999216e-05, 2.3054999999997522e-05, 2.2806000000000215e-05, 2.338900000000213e-05, 2.315299999999798e-05, 2.333300000000038e-05, 2.287500000000206e-05, 2.3277999999998106e-05, 2.3194000000000686e-05, 2.255500000000049e-05, 2.2485999999998646e-05, 2.2804999999997272e-05, 2.2958000000000006e-05, 2.3042000000000895e-05, 2.340299999999823e-05, 2.3249999999998966e-05, 2.3028000000001325e-05, 2.315300000000145e-05, 2.2806000000000215e-05, 2.2707999999999756e-05, 2.341700000000127e-05, 2.3485999999999646e-05, 2.2584000000002574e-05, 2.313899999999841e-05, 2.295899999999948e-05, 2.344500000000041e-05, 2.336099999999952e-05, 2.3194000000000686e-05, 2.288900000000163e-05, 2.336099999999952e-05, 2.2985999999999146e-05, 2.3499999999999216e-05]</msg>
<status status="PASS" starttime="20201030 15:55:18.640" endtime="20201030 15:55:18.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.636" endtime="20201030 15:55:18.644"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:18.647" endtime="20201030 15:55:18.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.646" endtime="20201030 15:55:18.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.645" endtime="20201030 15:55:18.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.290" endtime="20201030 15:55:18.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.290" endtime="20201030 15:55:18.668"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.677" endtime="20201030 15:55:18.692"></status>
</kw>
<msg timestamp="20201030 15:55:18.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.675" endtime="20201030 15:55:18.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.694" endtime="20201030 15:55:18.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.697" endtime="20201030 15:55:18.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.672" endtime="20201030 15:55:18.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.670" endtime="20201030 15:55:18.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.707" endtime="20201030 15:55:18.992"></status>
</kw>
<msg timestamp="20201030 15:55:18.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021525361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0215495, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:18.705" endtime="20201030 15:55:18.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021525361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0215495, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:18.997" endtime="20201030 15:55:19.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.005" endtime="20201030 15:55:19.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.702" endtime="20201030 15:55:19.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.700" endtime="20201030 15:55:19.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:19.011" level="INFO">${RESULT} = [{'diff': 2.413899999999941e-05}, {'diff': 2.437500000000009e-05}, {'diff': 2.3832999999997412e-05}, {'diff': 2.4152000000002977e-05}, {'diff': 2.4083999999997135e-05}, {'diff': 2.386100000000002e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:19.008" endtime="20201030 15:55:19.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:19.016" level="INFO">${ACCURACY} = {'diff': [2.413899999999941e-05, 2.437500000000009e-05, 2.3832999999997412e-05, 2.4152000000002977e-05, 2.4083999999997135e-05, 2.386100000000002e-05, 2.4040999999998952e-05, 2.436100000000052e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:55:19.012" endtime="20201030 15:55:19.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.021" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 15:55:19.020" endtime="20201030 15:55:19.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.023" level="INFO">VALUE: [2.413899999999941e-05, 2.437500000000009e-05, 2.3832999999997412e-05, 2.4152000000002977e-05, 2.4083999999997135e-05, 2.386100000000002e-05, 2.4040999999998952e-05, 2.436100000000052e-05, 2.3680000000001616e-05, 2.4193999999998217e-05, 2.386099999999655e-05, 2.358300000000063e-05, 2.437500000000009e-05, 2.405500000000199e-05, 2.4500000000000216e-05, 2.4500000000000216e-05, 2.383300000000088e-05, 2.3986000000000146e-05, 2.415299999999898e-05, 2.4263999999999536e-05, 2.3943999999997967e-05, 2.3528000000001825e-05, 2.4068999999998092e-05, 2.3542000000001395e-05, 2.4236000000000396e-05, 2.436100000000052e-05, 2.3485999999999646e-05, 2.363899999999891e-05, 2.386100000000002e-05, 2.4665999999999577e-05, 2.440299999999923e-05, 2.3999999999999716e-05, 2.4458000000001506e-05, 2.4027999999998856e-05, 2.466699999999905e-05, 2.39169999999983e-05, 2.4292000000002145e-05, 2.369500000000066e-05, 2.3791999999998176e-05, 2.4556000000001965e-05, 2.415300000000245e-05, 2.347299999999955e-05, 2.363899999999891e-05, 2.361099999999977e-05, 2.462500000000034e-05, 2.423699999999987e-05, 2.4457999999998037e-05, 2.412499999999984e-05, 2.4027999999998856e-05, 2.4763000000000562e-05]</msg>
<status status="PASS" starttime="20201030 15:55:19.022" endtime="20201030 15:55:19.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.017" endtime="20201030 15:55:19.025"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:19.028" endtime="20201030 15:55:19.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.027" endtime="20201030 15:55:19.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.026" endtime="20201030 15:55:19.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.669" endtime="20201030 15:55:19.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.668" endtime="20201030 15:55:19.049"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.057" endtime="20201030 15:55:19.073"></status>
</kw>
<msg timestamp="20201030 15:55:19.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.056" endtime="20201030 15:55:19.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.075" endtime="20201030 15:55:19.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.077" endtime="20201030 15:55:19.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.053" endtime="20201030 15:55:19.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.051" endtime="20201030 15:55:19.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.087" endtime="20201030 15:55:19.373"></status>
</kw>
<msg timestamp="20201030 15:55:19.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021727722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021752736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.085" endtime="20201030 15:55:19.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021727722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021752736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.377" endtime="20201030 15:55:19.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.385" endtime="20201030 15:55:19.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.082" endtime="20201030 15:55:19.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.081" endtime="20201030 15:55:19.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:19.391" level="INFO">${RESULT} = [{'diff': 2.5014000000000286e-05}, {'diff': 2.4541999999998926e-05}, {'diff': 2.4971999999998107e-05}, {'diff': 2.531900000000281e-05}, {'diff': 2.4542000000002395e-05}, {'diff': 2.5138000000000937e-0...</msg>
<status status="PASS" starttime="20201030 15:55:19.388" endtime="20201030 15:55:19.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:19.396" level="INFO">${ACCURACY} = {'diff': [2.5014000000000286e-05, 2.4541999999998926e-05, 2.4971999999998107e-05, 2.531900000000281e-05, 2.4542000000002395e-05, 2.5138000000000937e-05, 2.4818999999998842e-05, 2.512500000000084e-05, ...</msg>
<status status="PASS" starttime="20201030 15:55:19.392" endtime="20201030 15:55:19.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.400" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 15:55:19.399" endtime="20201030 15:55:19.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.402" level="INFO">VALUE: [2.5014000000000286e-05, 2.4541999999998926e-05, 2.4971999999998107e-05, 2.531900000000281e-05, 2.4542000000002395e-05, 2.5138000000000937e-05, 2.4818999999998842e-05, 2.512500000000084e-05, 2.4943999999998967e-05, 2.4818999999998842e-05, 2.5416000000000327e-05, 2.5027000000000382e-05, 2.5207999999998787e-05, 2.4971999999998107e-05, 2.54169999999998e-05, 2.4736000000000896e-05, 2.5082999999998662e-05, 2.468100000000209e-05, 2.4500000000000216e-05, 2.5528000000000356e-05, 2.5443999999999467e-05, 2.5304999999999772e-05, 2.5096999999998232e-05, 2.465299999999948e-05, 2.493100000000234e-05, 2.4555999999998496e-05, 2.493099999999887e-05, 2.522299999999783e-05, 2.4972000000001576e-05, 2.5221999999998357e-05, 2.5332999999998912e-05, 2.541700000000327e-05, 2.4735999999997427e-05, 2.5277999999996636e-05, 2.569499999999919e-05, 2.545900000000198e-05, 2.511100000000127e-05, 2.4542000000002395e-05, 2.538899999999719e-05, 2.5749999999997997e-05, 2.469499999999819e-05, 2.495899999999801e-05, 2.487499999999712e-05, 2.5069999999998566e-05, 2.566700000000005e-05, 2.487500000000059e-05, 2.538899999999719e-05, 2.4680000000002617e-05, 2.495900000000148e-05, 2.5193999999999217e-05]</msg>
<status status="PASS" starttime="20201030 15:55:19.401" endtime="20201030 15:55:19.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.396" endtime="20201030 15:55:19.404"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:19.407" endtime="20201030 15:55:19.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.406" endtime="20201030 15:55:19.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.405" endtime="20201030 15:55:19.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.050" endtime="20201030 15:55:19.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.049" endtime="20201030 15:55:19.428"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.437" endtime="20201030 15:55:19.453"></status>
</kw>
<msg timestamp="20201030 15:55:19.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.435" endtime="20201030 15:55:19.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.455" endtime="20201030 15:55:19.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.457" endtime="20201030 15:55:19.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.433" endtime="20201030 15:55:19.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.431" endtime="20201030 15:55:19.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.466" endtime="20201030 15:55:19.751"></status>
</kw>
<msg timestamp="20201030 15:55:19.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023076222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023102014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.465" endtime="20201030 15:55:19.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023076222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023102014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.755" endtime="20201030 15:55:19.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.764" endtime="20201030 15:55:19.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.462" endtime="20201030 15:55:19.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.460" endtime="20201030 15:55:19.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:19.770" level="INFO">${RESULT} = [{'diff': 2.5792000000000176e-05}, {'diff': 2.584700000000245e-05}, {'diff': 2.6082999999999662e-05}, {'diff': 2.6291000000001202e-05}, {'diff': 2.638900000000166e-05}, {'diff': 2.5986000000002146e-05...</msg>
<status status="PASS" starttime="20201030 15:55:19.767" endtime="20201030 15:55:19.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:19.774" level="INFO">${ACCURACY} = {'diff': [2.5792000000000176e-05, 2.584700000000245e-05, 2.6082999999999662e-05, 2.6291000000001202e-05, 2.638900000000166e-05, 2.5986000000002146e-05, 2.6069000000000092e-05, 2.644499999999994e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:55:19.771" endtime="20201030 15:55:19.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.779" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 15:55:19.778" endtime="20201030 15:55:19.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.781" level="INFO">VALUE: [2.5792000000000176e-05, 2.584700000000245e-05, 2.6082999999999662e-05, 2.6291000000001202e-05, 2.638900000000166e-05, 2.5986000000002146e-05, 2.6069000000000092e-05, 2.644499999999994e-05, 2.6069000000000092e-05, 2.6069000000000092e-05, 2.5527000000000882e-05, 2.587500000000159e-05, 2.565300000000048e-05, 2.5707999999999287e-05, 2.638900000000166e-05, 2.6207999999999787e-05, 2.5750000000001466e-05, 2.5707999999999287e-05, 2.615300000000098e-05, 2.619499999999969e-05, 2.6069000000000092e-05, 2.6458000000000037e-05, 2.5805999999999746e-05, 2.618100000000012e-05, 2.6096999999999232e-05, 2.6278000000001106e-05, 2.6014000000001286e-05, 2.563900000000091e-05, 2.6332999999999912e-05, 2.5860999999998552e-05, 2.566700000000005e-05, 2.5569999999999066e-05, 2.6374999999998622e-05, 2.6306000000000246e-05, 2.6097999999998706e-05, 2.5805999999999746e-05, 2.6471999999999607e-05, 2.643100000000037e-05, 2.6250000000001966e-05, 2.613900000000141e-05, 2.5611999999997775e-05, 2.622299999999883e-05, 2.6110999999998802e-05, 2.6346999999999482e-05, 2.640300000000123e-05, 2.6069999999999566e-05, 2.5819999999999316e-05, 2.563899999999744e-05, 2.5555000000000022e-05, 2.6013999999997817e-05]</msg>
<status status="PASS" starttime="20201030 15:55:19.780" endtime="20201030 15:55:19.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.775" endtime="20201030 15:55:19.788"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:19.791" endtime="20201030 15:55:19.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.790" endtime="20201030 15:55:19.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.789" endtime="20201030 15:55:19.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.429" endtime="20201030 15:55:19.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.428" endtime="20201030 15:55:19.812"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.821" endtime="20201030 15:55:19.837"></status>
</kw>
<msg timestamp="20201030 15:55:19.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.819" endtime="20201030 15:55:19.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.838" endtime="20201030 15:55:19.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.840" endtime="20201030 15:55:19.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.817" endtime="20201030 15:55:19.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.814" endtime="20201030 15:55:19.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.849" endtime="20201030 15:55:20.135"></status>
</kw>
<msg timestamp="20201030 15:55:20.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021688694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021716097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.848" endtime="20201030 15:55:20.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021688694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021716097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.139" endtime="20201030 15:55:20.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.147" endtime="20201030 15:55:20.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.845" endtime="20201030 15:55:20.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.844" endtime="20201030 15:55:20.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:20.154" level="INFO">${RESULT} = [{'diff': 2.740299999999876e-05}, {'diff': 2.7347999999999956e-05}, {'diff': 2.6583999999999636e-05}, {'diff': 2.722299999999983e-05}, {'diff': 2.665300000000148e-05}, {'diff': 2.7124999999999372e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:20.150" endtime="20201030 15:55:20.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:20.159" level="INFO">${ACCURACY} = {'diff': [2.740299999999876e-05, 2.7347999999999956e-05, 2.6583999999999636e-05, 2.722299999999983e-05, 2.665300000000148e-05, 2.7124999999999372e-05, 2.6652000000002007e-05, 2.7097000000000232e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:55:20.155" endtime="20201030 15:55:20.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.163" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 15:55:20.162" endtime="20201030 15:55:20.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.166" level="INFO">VALUE: [2.740299999999876e-05, 2.7347999999999956e-05, 2.6583999999999636e-05, 2.722299999999983e-05, 2.665300000000148e-05, 2.7124999999999372e-05, 2.6652000000002007e-05, 2.7097000000000232e-05, 2.6999999999999247e-05, 2.7541999999998457e-05, 2.6749999999998997e-05, 2.6833000000000412e-05, 2.712500000000284e-05, 2.7333000000000912e-05, 2.7165999999998608e-05, 2.6929999999997928e-05, 2.6569000000000592e-05, 2.7249999999999497e-05, 2.6596999999999732e-05, 2.7819999999997846e-05, 2.6596999999999732e-05, 2.6943999999997498e-05, 2.6930000000001397e-05, 2.6666000000001577e-05, 2.6888999999998692e-05, 2.74170000000018e-05, 2.7249999999999497e-05, 2.7263999999999067e-05, 2.7235999999999927e-05, 2.715300000000198e-05, 2.6860999999999552e-05, 2.7013999999998817e-05, 2.7291999999998207e-05, 2.6764000000002036e-05, 2.7222000000000357e-05, 2.6792000000001176e-05, 2.7263000000003063e-05, 2.7027999999998387e-05, 2.7374999999999622e-05, 2.7277999999998637e-05, 2.6597999999999206e-05, 2.690299999999826e-05, 2.713900000000241e-05, 2.6735999999999427e-05, 2.74309999999979e-05, 2.7249999999999497e-05, 2.7042000000001426e-05, 2.691699999999783e-05, 2.6985999999999677e-05, 2.7611000000000302e-05]</msg>
<status status="PASS" starttime="20201030 15:55:20.164" endtime="20201030 15:55:20.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.159" endtime="20201030 15:55:20.167"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:20.170" endtime="20201030 15:55:20.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.169" endtime="20201030 15:55:20.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.168" endtime="20201030 15:55:20.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.813" endtime="20201030 15:55:20.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.812" endtime="20201030 15:55:20.191"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.200" endtime="20201030 15:55:20.215"></status>
</kw>
<msg timestamp="20201030 15:55:20.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.198" endtime="20201030 15:55:20.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.217" endtime="20201030 15:55:20.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.219" endtime="20201030 15:55:20.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.196" endtime="20201030 15:55:20.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.194" endtime="20201030 15:55:20.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.228" endtime="20201030 15:55:20.516"></status>
</kw>
<msg timestamp="20201030 15:55:20.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021906611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021934306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.227" endtime="20201030 15:55:20.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021906611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021934306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.521" endtime="20201030 15:55:20.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.529" endtime="20201030 15:55:20.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.224" endtime="20201030 15:55:20.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.222" endtime="20201030 15:55:20.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:20.535" level="INFO">${RESULT} = [{'diff': 2.769500000000119e-05}, {'diff': 2.841699999999933e-05}, {'diff': 2.7513999999999317e-05}, {'diff': 2.8041999999998957e-05}, {'diff': 2.7554999999998553e-05}, {'diff': 2.8138999999999942e-05...</msg>
<status status="PASS" starttime="20201030 15:55:20.532" endtime="20201030 15:55:20.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:20.539" level="INFO">${ACCURACY} = {'diff': [2.769500000000119e-05, 2.841699999999933e-05, 2.7513999999999317e-05, 2.8041999999998957e-05, 2.7554999999998553e-05, 2.8138999999999942e-05, 2.847299999999761e-05, 2.8486000000001177e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:55:20.536" endtime="20201030 15:55:20.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.544" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 15:55:20.543" endtime="20201030 15:55:20.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.546" level="INFO">VALUE: [2.769500000000119e-05, 2.841699999999933e-05, 2.7513999999999317e-05, 2.8041999999998957e-05, 2.7554999999998553e-05, 2.8138999999999942e-05, 2.847299999999761e-05, 2.8486000000001177e-05, 2.7820000000001316e-05, 2.7986000000000677e-05, 2.820900000000126e-05, 2.8069999999998096e-05, 2.841699999999933e-05, 2.820900000000126e-05, 2.8750000000000997e-05, 2.8306000000002246e-05, 2.8152999999999512e-05, 2.7570000000001066e-05, 2.7499999999999747e-05, 2.8026999999999913e-05, 2.82370000000004e-05, 2.798700000000015e-05, 2.816699999999908e-05, 2.7972000000001107e-05, 2.8207999999998318e-05, 2.7763999999999567e-05, 2.7819000000001842e-05, 2.7555000000002022e-05, 2.7568999999998123e-05, 2.8527000000000413e-05, 2.7985999999997208e-05, 2.7943999999998498e-05, 2.7736000000000427e-05, 2.8026999999999913e-05, 2.8610999999997833e-05, 2.7540999999998983e-05, 2.8152999999999512e-05, 2.7736000000000427e-05, 2.7832999999997943e-05, 2.8165999999999608e-05, 2.818099999999865e-05, 2.7763999999999567e-05, 2.8082999999998193e-05, 2.8194000000002217e-05, 2.844500000000194e-05, 2.7791999999998707e-05, 2.8485999999997708e-05, 2.8110999999997333e-05, 2.766699999999858e-05, 2.8735999999997958e-05]</msg>
<status status="PASS" starttime="20201030 15:55:20.545" endtime="20201030 15:55:20.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.540" endtime="20201030 15:55:20.548"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:20.551" endtime="20201030 15:55:20.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.550" endtime="20201030 15:55:20.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.549" endtime="20201030 15:55:20.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.192" endtime="20201030 15:55:20.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.191" endtime="20201030 15:55:20.572"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.580" endtime="20201030 15:55:20.596"></status>
</kw>
<msg timestamp="20201030 15:55:20.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.579" endtime="20201030 15:55:20.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.598" endtime="20201030 15:55:20.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.600" endtime="20201030 15:55:20.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.576" endtime="20201030 15:55:20.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.574" endtime="20201030 15:55:20.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.609" endtime="20201030 15:55:20.896"></status>
</kw>
<msg timestamp="20201030 15:55:20.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022420014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02244875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:20.608" endtime="20201030 15:55:20.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022420014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02244875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:20.900" endtime="20201030 15:55:20.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.908" endtime="20201030 15:55:20.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.605" endtime="20201030 15:55:20.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.603" endtime="20201030 15:55:20.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:20.915" level="INFO">${RESULT} = [{'diff': 2.8736000000001427e-05}, {'diff': 2.8985999999998208e-05}, {'diff': 2.9346999999999013e-05}, {'diff': 2.8556000000002496e-05}, {'diff': 2.9028000000000387e-05}, {'diff': 2.9416000000000858e-...</msg>
<status status="PASS" starttime="20201030 15:55:20.912" endtime="20201030 15:55:20.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:20.919" level="INFO">${ACCURACY} = {'diff': [2.8736000000001427e-05, 2.8985999999998208e-05, 2.9346999999999013e-05, 2.8556000000002496e-05, 2.9028000000000387e-05, 2.9416000000000858e-05, 2.8778000000000137e-05, 2.9083999999998666e-05...</msg>
<status status="PASS" starttime="20201030 15:55:20.916" endtime="20201030 15:55:20.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.923" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 15:55:20.922" endtime="20201030 15:55:20.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.926" level="INFO">VALUE: [2.8736000000001427e-05, 2.8985999999998208e-05, 2.9346999999999013e-05, 2.8556000000002496e-05, 2.9028000000000387e-05, 2.9416000000000858e-05, 2.8778000000000137e-05, 2.9083999999998666e-05, 2.8556000000002496e-05, 2.9653000000001012e-05, 2.945899999999904e-05, 2.8903000000000262e-05, 2.9403000000000762e-05, 2.8736000000001427e-05, 2.9542000000000457e-05, 2.8846999999998513e-05, 2.8625000000000872e-05, 2.9318999999999873e-05, 2.8818999999999373e-05, 2.8862000000001026e-05, 2.8597000000001732e-05, 2.8611000000001302e-05, 2.9388000000001718e-05, 2.8597000000001732e-05, 2.9666000000001108e-05, 2.89309999999994e-05, 2.8764000000000567e-05, 2.8818999999999373e-05, 2.8929999999999928e-05, 2.9360999999998583e-05, 2.9236000000001927e-05, 2.9069999999999097e-05, 2.8957999999999068e-05, 2.9235999999998458e-05, 2.8846999999998513e-05, 2.9360999999998583e-05, 2.9221999999998888e-05, 2.8861000000001552e-05, 2.8916999999999832e-05, 2.969499999999972e-05, 2.8625000000000872e-05, 2.9471999999999138e-05, 2.8819999999998847e-05, 2.8639000000000442e-05, 2.9139000000000942e-05, 2.9499999999998278e-05, 2.9403000000000762e-05, 2.918099999999965e-05, 2.9457999999999568e-05, 2.9402999999997292e-05]</msg>
<status status="PASS" starttime="20201030 15:55:20.925" endtime="20201030 15:55:20.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.920" endtime="20201030 15:55:20.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:20.932" endtime="20201030 15:55:20.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.930" endtime="20201030 15:55:20.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.929" endtime="20201030 15:55:20.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.573" endtime="20201030 15:55:20.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.572" endtime="20201030 15:55:20.952"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.961" endtime="20201030 15:55:20.976"></status>
</kw>
<msg timestamp="20201030 15:55:20.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.959" endtime="20201030 15:55:20.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.978" endtime="20201030 15:55:20.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.980" endtime="20201030 15:55:20.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.957" endtime="20201030 15:55:20.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.955" endtime="20201030 15:55:20.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.989" endtime="20201030 15:55:21.274"></status>
</kw>
<msg timestamp="20201030 15:55:21.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021513889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021544583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.988" endtime="20201030 15:55:21.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021513889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021544583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.279" endtime="20201030 15:55:21.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.287" endtime="20201030 15:55:21.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.985" endtime="20201030 15:55:21.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.984" endtime="20201030 15:55:21.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:21.293" level="INFO">${RESULT} = [{'diff': 3.069399999999778e-05}, {'diff': 3.0526999999998944e-05}, {'diff': 3.0320000000000347e-05}, {'diff': 3.0139000000001942e-05}, {'diff': 3.019500000000022e-05}, {'diff': 2.9777999999997667e-05...</msg>
<status status="PASS" starttime="20201030 15:55:21.290" endtime="20201030 15:55:21.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:21.298" level="INFO">${ACCURACY} = {'diff': [3.069399999999778e-05, 3.0526999999998944e-05, 3.0320000000000347e-05, 3.0139000000001942e-05, 3.019500000000022e-05, 2.9777999999997667e-05, 3.0083999999999667e-05, 2.9638999999997973e-05, ...</msg>
<status status="PASS" starttime="20201030 15:55:21.294" endtime="20201030 15:55:21.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.303" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 15:55:21.302" endtime="20201030 15:55:21.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.305" level="INFO">VALUE: [3.069399999999778e-05, 3.0526999999998944e-05, 3.0320000000000347e-05, 3.0139000000001942e-05, 3.019500000000022e-05, 2.9777999999997667e-05, 3.0083999999999667e-05, 2.9638999999997973e-05, 3.0070000000000097e-05, 3.0167000000001082e-05, 2.9499999999998278e-05, 3.0139000000001942e-05, 2.9610999999998833e-05, 3.0027999999997917e-05, 3.0584000000000167e-05, 2.9833999999999417e-05, 3.0374999999999153e-05, 2.9694000000000248e-05, 3.0277000000002163e-05, 3.0458000000000568e-05, 3.0054999999997584e-05, 2.9874999999998653e-05, 2.9597000000002732e-05, 3.0360999999999583e-05, 3.0208000000000318e-05, 3.020799999999685e-05, 2.9596999999999263e-05, 2.9805000000000803e-05, 3.0027999999997917e-05, 3.0458000000000568e-05, 3.0388999999998723e-05, 3.0013999999998348e-05, 2.9624999999998403e-05, 3.0069000000000623e-05, 3.058300000000069e-05, 2.9917000000000832e-05, 2.9694000000000248e-05, 3.019500000000022e-05, 3.0333000000000443e-05, 3.058300000000069e-05, 3.0485999999999708e-05, 2.9763999999998098e-05, 3.0416999999997862e-05, 2.9638999999997973e-05, 3.0070000000000097e-05, 2.9667000000000582e-05, 3.0513999999998848e-05, 2.9875000000002122e-05, 2.9652999999997542e-05, 3.0278000000001637e-05]</msg>
<status status="PASS" starttime="20201030 15:55:21.304" endtime="20201030 15:55:21.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.299" endtime="20201030 15:55:21.306"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:21.310" endtime="20201030 15:55:21.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.309" endtime="20201030 15:55:21.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.307" endtime="20201030 15:55:21.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.953" endtime="20201030 15:55:21.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.953" endtime="20201030 15:55:21.331"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.339" endtime="20201030 15:55:21.355"></status>
</kw>
<msg timestamp="20201030 15:55:21.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.338" endtime="20201030 15:55:21.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.357" endtime="20201030 15:55:21.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.359" endtime="20201030 15:55:21.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.335" endtime="20201030 15:55:21.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.333" endtime="20201030 15:55:21.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.368" endtime="20201030 15:55:21.654"></status>
</kw>
<msg timestamp="20201030 15:55:21.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021809931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021840736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.367" endtime="20201030 15:55:21.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021809931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021840736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.659" endtime="20201030 15:55:21.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.667" endtime="20201030 15:55:21.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.364" endtime="20201030 15:55:21.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.363" endtime="20201030 15:55:21.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:21.673" level="INFO">${RESULT} = [{'diff': 3.0804999999998334e-05}, {'diff': 3.123599999999699e-05}, {'diff': 3.088799999999975e-05}, {'diff': 3.066699999999811e-05}, {'diff': 3.123600000000046e-05}, {'diff': 3.088799999999975e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:21.670" endtime="20201030 15:55:21.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:21.677" level="INFO">${ACCURACY} = {'diff': [3.0804999999998334e-05, 3.123599999999699e-05, 3.088799999999975e-05, 3.066699999999811e-05, 3.123600000000046e-05, 3.088799999999975e-05, 3.109700000000076e-05, 3.070800000000082e-05, 3.055...</msg>
<status status="PASS" starttime="20201030 15:55:21.674" endtime="20201030 15:55:21.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.682" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 15:55:21.681" endtime="20201030 15:55:21.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.684" level="INFO">VALUE: [3.0804999999998334e-05, 3.123599999999699e-05, 3.088799999999975e-05, 3.066699999999811e-05, 3.123600000000046e-05, 3.088799999999975e-05, 3.109700000000076e-05, 3.070800000000082e-05, 3.055500000000155e-05, 3.173600000000096e-05, 3.145800000000157e-05, 3.0554999999998084e-05, 3.072200000000039e-05, 3.12639999999996e-05, 3.122200000000089e-05, 3.06249999999994e-05, 3.119500000000122e-05, 3.0568999999997654e-05, 3.0832999999997474e-05, 3.094399999999803e-05, 3.088900000000269e-05, 3.0513999999998848e-05, 3.098600000000021e-05, 3.127799999999917e-05, 3.142999999999896e-05, 3.145800000000157e-05, 3.059700000000026e-05, 3.138899999999972e-05, 3.150000000000028e-05, 3.123699999999993e-05, 3.095800000000107e-05, 3.115299999999904e-05, 3.12639999999996e-05, 3.108300000000119e-05, 3.1332999999997974e-05, 3.087499999999965e-05, 3.094399999999803e-05, 3.118100000000165e-05, 3.134700000000101e-05, 3.148600000000071e-05, 3.150000000000028e-05, 3.099999999999978e-05, 3.120799999999785e-05, 3.069500000000072e-05, 3.163899999999997e-05, 3.097200000000064e-05, 3.137500000000015e-05, 3.148700000000018e-05, 3.1026999999999444e-05, 3.1138e-05]</msg>
<status status="PASS" starttime="20201030 15:55:21.683" endtime="20201030 15:55:21.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.678" endtime="20201030 15:55:21.686"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:21.689" endtime="20201030 15:55:21.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.688" endtime="20201030 15:55:21.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.687" endtime="20201030 15:55:21.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.332" endtime="20201030 15:55:21.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.331" endtime="20201030 15:55:21.710"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.719" endtime="20201030 15:55:21.736"></status>
</kw>
<msg timestamp="20201030 15:55:21.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.717" endtime="20201030 15:55:21.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.737" endtime="20201030 15:55:21.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.740" endtime="20201030 15:55:21.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.715" endtime="20201030 15:55:21.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.712" endtime="20201030 15:55:21.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.750" endtime="20201030 15:55:22.037"></status>
</kw>
<msg timestamp="20201030 15:55:22.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022531875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022563944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.749" endtime="20201030 15:55:22.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022531875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022563944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.041" endtime="20201030 15:55:22.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.049" endtime="20201030 15:55:22.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.746" endtime="20201030 15:55:22.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.744" endtime="20201030 15:55:22.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:22.056" level="INFO">${RESULT} = [{'diff': 3.2068999999999154e-05}, {'diff': 3.216600000000014e-05}, {'diff': 3.230599999999931e-05}, {'diff': 3.172300000000086e-05}, {'diff': 3.204199999999949e-05}, {'diff': 3.191699999999936e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:22.053" endtime="20201030 15:55:22.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:22.060" level="INFO">${ACCURACY} = {'diff': [3.2068999999999154e-05, 3.216600000000014e-05, 3.230599999999931e-05, 3.172300000000086e-05, 3.204199999999949e-05, 3.191699999999936e-05, 3.238900000000072e-05, 3.186100000000108e-05, 3.161...</msg>
<status status="PASS" starttime="20201030 15:55:22.057" endtime="20201030 15:55:22.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.064" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 15:55:22.063" endtime="20201030 15:55:22.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.067" level="INFO">VALUE: [3.2068999999999154e-05, 3.216600000000014e-05, 3.230599999999931e-05, 3.172300000000086e-05, 3.204199999999949e-05, 3.191699999999936e-05, 3.238900000000072e-05, 3.186100000000108e-05, 3.1610999999997363e-05, 3.197300000000111e-05, 3.198599999999774e-05, 3.223599999999799e-05, 3.2041000000000014e-05, 3.170900000000129e-05, 3.213900000000047e-05, 3.2068999999999154e-05, 3.215200000000057e-05, 3.208300000000219e-05, 3.2276999999997225e-05, 3.234700000000201e-05, 3.2110999999997863e-05, 3.1777000000000194e-05, 3.150000000000028e-05, 3.17640000000001e-05, 3.209700000000176e-05, 3.205500000000305e-05, 3.222199999999842e-05, 3.2082999999998724e-05, 3.161100000000083e-05, 3.261100000000183e-05, 3.172199999999792e-05, 3.248599999999824e-05, 3.190299999999979e-05, 3.237500000000115e-05, 3.187499999999718e-05, 3.230599999999931e-05, 3.202799999999992e-05, 3.187500000000065e-05, 3.220799999999885e-05, 3.200000000000078e-05, 3.2054999999999584e-05, 3.240300000000029e-05, 3.197199999999817e-05, 3.198600000000121e-05, 3.265200000000107e-05, 3.150000000000028e-05, 3.173600000000096e-05, 3.233399999999845e-05, 3.186199999999709e-05, 3.251400000000085e-05]</msg>
<status status="PASS" starttime="20201030 15:55:22.065" endtime="20201030 15:55:22.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.061" endtime="20201030 15:55:22.069"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:22.073" endtime="20201030 15:55:22.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.071" endtime="20201030 15:55:22.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.070" endtime="20201030 15:55:22.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.711" endtime="20201030 15:55:22.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.710" endtime="20201030 15:55:22.093"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.102" endtime="20201030 15:55:22.117"></status>
</kw>
<msg timestamp="20201030 15:55:22.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.100" endtime="20201030 15:55:22.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.119" endtime="20201030 15:55:22.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.121" endtime="20201030 15:55:22.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.098" endtime="20201030 15:55:22.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.096" endtime="20201030 15:55:22.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.130" endtime="20201030 15:55:22.415"></status>
</kw>
<msg timestamp="20201030 15:55:22.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021504292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021537111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.129" endtime="20201030 15:55:22.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021504292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021537111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.419" endtime="20201030 15:55:22.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.428" endtime="20201030 15:55:22.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.126" endtime="20201030 15:55:22.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.125" endtime="20201030 15:55:22.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:22.434" level="INFO">${RESULT} = [{'diff': 3.2818999999999904e-05}, {'diff': 3.340299999999782e-05}, {'diff': 3.315300000000104e-05}, {'diff': 3.265300000000054e-05}, {'diff': 3.3445e-05}, {'diff': 3.2555000000000084e-05}, {'diff': 3...</msg>
<status status="PASS" starttime="20201030 15:55:22.431" endtime="20201030 15:55:22.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:22.439" level="INFO">${ACCURACY} = {'diff': [3.2818999999999904e-05, 3.340299999999782e-05, 3.315300000000104e-05, 3.265300000000054e-05, 3.3445e-05, 3.2555000000000084e-05, 3.29579999999996e-05, 3.325000000000203e-05, 3.26519999999976...</msg>
<status status="PASS" starttime="20201030 15:55:22.435" endtime="20201030 15:55:22.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.444" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 15:55:22.443" endtime="20201030 15:55:22.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.446" level="INFO">VALUE: [3.2818999999999904e-05, 3.340299999999782e-05, 3.315300000000104e-05, 3.265300000000054e-05, 3.3445e-05, 3.2555000000000084e-05, 3.29579999999996e-05, 3.325000000000203e-05, 3.26519999999976e-05, 3.368000000000121e-05, 3.340199999999835e-05, 3.320799999999985e-05, 3.26519999999976e-05, 3.2610999999998364e-05, 3.377800000000167e-05, 3.2805000000000334e-05, 3.288900000000122e-05, 3.316700000000061e-05, 3.2832999999999474e-05, 3.352799999999795e-05, 3.322199999999942e-05, 3.31250000000019e-05, 3.272199999999892e-05, 3.315299999999757e-05, 3.354200000000099e-05, 3.284700000000251e-05, 3.283399999999895e-05, 3.3332999999999974e-05, 3.341700000000086e-05, 3.300000000000178e-05, 3.280599999999981e-05, 3.302799999999745e-05, 3.279200000000024e-05, 3.3445e-05, 3.306999999999963e-05, 3.329200000000074e-05, 3.350000000000228e-05, 3.297300000000211e-05, 3.268100000000315e-05, 3.34580000000001e-05, 3.26250000000014e-05, 3.294400000000003e-05, 3.3096999999999294e-05, 3.251400000000085e-05, 3.311100000000233e-05, 3.301400000000135e-05, 3.29579999999996e-05, 3.322199999999942e-05, 3.3388999999998253e-05, 3.3583000000000224e-05]</msg>
<status status="PASS" starttime="20201030 15:55:22.445" endtime="20201030 15:55:22.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.440" endtime="20201030 15:55:22.447"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:22.451" endtime="20201030 15:55:22.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.450" endtime="20201030 15:55:22.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.448" endtime="20201030 15:55:22.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.094" endtime="20201030 15:55:22.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.094" endtime="20201030 15:55:22.472"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.480" endtime="20201030 15:55:22.496"></status>
</kw>
<msg timestamp="20201030 15:55:22.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.479" endtime="20201030 15:55:22.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.498" endtime="20201030 15:55:22.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.500" endtime="20201030 15:55:22.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.476" endtime="20201030 15:55:22.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.474" endtime="20201030 15:55:22.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.509" endtime="20201030 15:55:22.796"></status>
</kw>
<msg timestamp="20201030 15:55:22.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021485403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021519347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.507" endtime="20201030 15:55:22.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021485403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021519347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.800" endtime="20201030 15:55:22.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.809" endtime="20201030 15:55:22.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.505" endtime="20201030 15:55:22.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.503" endtime="20201030 15:55:22.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:22.815" level="INFO">${RESULT} = [{'diff': 3.394400000000103e-05}, {'diff': 3.351399999999838e-05}, {'diff': 3.4361000000000114e-05}, {'diff': 3.393100000000093e-05}, {'diff': 3.416599999999867e-05}, {'diff': 3.391699999999789e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:22.812" endtime="20201030 15:55:22.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:22.819" level="INFO">${ACCURACY} = {'diff': [3.394400000000103e-05, 3.351399999999838e-05, 3.4361000000000114e-05, 3.393100000000093e-05, 3.416599999999867e-05, 3.391699999999789e-05, 3.3624999999998934e-05, 3.4526999999999475e-05, 3.4...</msg>
<status status="PASS" starttime="20201030 15:55:22.816" endtime="20201030 15:55:22.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.824" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 15:55:22.823" endtime="20201030 15:55:22.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.826" level="INFO">VALUE: [3.394400000000103e-05, 3.351399999999838e-05, 3.4361000000000114e-05, 3.393100000000093e-05, 3.416599999999867e-05, 3.391699999999789e-05, 3.3624999999998934e-05, 3.4526999999999475e-05, 3.4055000000001584e-05, 3.416599999999867e-05, 3.420800000000085e-05, 3.357000000000013e-05, 3.3610999999999364e-05, 3.4347000000000544e-05, 3.392999999999799e-05, 3.3624999999998934e-05, 3.3610999999999364e-05, 3.3555000000001084e-05, 3.3805000000001334e-05, 3.4040999999998545e-05, 3.3805000000001334e-05, 3.399999999999931e-05, 3.4152999999998573e-05, 3.3804999999997865e-05, 3.44580000000011e-05, 3.398599999999974e-05, 3.3819000000000904e-05, 3.42779999999987e-05, 3.4388999999999253e-05, 3.3860999999999614e-05, 3.372199999999992e-05, 3.363900000000197e-05, 3.3596999999999794e-05, 3.3610999999999364e-05, 3.466700000000211e-05, 3.351399999999838e-05, 3.426399999999913e-05, 3.438900000000272e-05, 3.4347000000000544e-05, 3.424999999999956e-05, 3.447200000000067e-05, 3.372199999999992e-05, 3.397200000000017e-05, 3.4374999999999684e-05, 3.459800000000027e-05, 3.44589999999971e-05, 3.370899999999982e-05, 3.416700000000161e-05, 3.4361000000000114e-05, 3.4291000000002264e-05]</msg>
<status status="PASS" starttime="20201030 15:55:22.825" endtime="20201030 15:55:22.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.820" endtime="20201030 15:55:22.828"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:22.831" endtime="20201030 15:55:22.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.830" endtime="20201030 15:55:22.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.829" endtime="20201030 15:55:22.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.473" endtime="20201030 15:55:22.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.472" endtime="20201030 15:55:22.852"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.860" endtime="20201030 15:55:22.877"></status>
</kw>
<msg timestamp="20201030 15:55:22.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.859" endtime="20201030 15:55:22.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.879" endtime="20201030 15:55:22.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.881" endtime="20201030 15:55:22.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.856" endtime="20201030 15:55:22.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.854" endtime="20201030 15:55:22.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.890" endtime="20201030 15:55:23.175"></status>
</kw>
<msg timestamp="20201030 15:55:23.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022456472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022491528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.889" endtime="20201030 15:55:23.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022456472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022491528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.179" endtime="20201030 15:55:23.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.187" endtime="20201030 15:55:23.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.886" endtime="20201030 15:55:23.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.885" endtime="20201030 15:55:23.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:23.194" level="INFO">${RESULT} = [{'diff': 3.505599999999859e-05}, {'diff': 3.5026999999999975e-05}, {'diff': 3.501399999999988e-05}, {'diff': 3.49589999999976e-05}, {'diff': 3.51520000000001e-05}, {'diff': 3.452799999999895e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:23.191" endtime="20201030 15:55:23.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:23.198" level="INFO">${ACCURACY} = {'diff': [3.505599999999859e-05, 3.5026999999999975e-05, 3.501399999999988e-05, 3.49589999999976e-05, 3.51520000000001e-05, 3.452799999999895e-05, 3.469400000000178e-05, 3.454200000000199e-05, 3.51529...</msg>
<status status="PASS" starttime="20201030 15:55:23.195" endtime="20201030 15:55:23.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.202" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 15:55:23.201" endtime="20201030 15:55:23.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.205" level="INFO">VALUE: [3.505599999999859e-05, 3.5026999999999975e-05, 3.501399999999988e-05, 3.49589999999976e-05, 3.51520000000001e-05, 3.452799999999895e-05, 3.469400000000178e-05, 3.454200000000199e-05, 3.5152999999999573e-05, 3.577799999999673e-05, 3.4554999999998615e-05, 3.522200000000142e-05, 3.4583000000001224e-05, 3.4596999999997324e-05, 3.523599999999752e-05, 3.5361000000001114e-05, 3.5097000000001294e-05, 3.454200000000199e-05, 3.455599999999809e-05, 3.5666999999999643e-05, 3.468099999999821e-05, 3.4902999999999323e-05, 3.455600000000156e-05, 3.520900000000132e-05, 3.531999999999841e-05, 3.5361000000001114e-05, 3.507000000000163e-05, 3.479199999999877e-05, 3.5541000000000045e-05, 3.5026999999999975e-05, 3.522299999999742e-05, 3.469400000000178e-05, 3.495900000000107e-05, 3.5111000000000864e-05, 3.524999999999709e-05, 3.5083000000001724e-05, 3.5346999999998074e-05, 3.475000000000006e-05, 3.501399999999988e-05, 3.5402999999999823e-05, 3.5361000000001114e-05, 3.480599999999834e-05, 3.517999999999924e-05, 3.548600000000124e-05, 3.49719999999977e-05, 3.4818999999998435e-05, 3.495799999999813e-05, 3.449999999999981e-05, 3.5346999999998074e-05, 3.523600000000099e-05]</msg>
<status status="PASS" starttime="20201030 15:55:23.203" endtime="20201030 15:55:23.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.199" endtime="20201030 15:55:23.207"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:23.210" endtime="20201030 15:55:23.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.209" endtime="20201030 15:55:23.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.208" endtime="20201030 15:55:23.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.853" endtime="20201030 15:55:23.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.852" endtime="20201030 15:55:23.231"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.240" endtime="20201030 15:55:23.256"></status>
</kw>
<msg timestamp="20201030 15:55:23.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.238" endtime="20201030 15:55:23.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.258" endtime="20201030 15:55:23.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.260" endtime="20201030 15:55:23.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.236" endtime="20201030 15:55:23.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.234" endtime="20201030 15:55:23.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.269" endtime="20201030 15:55:23.555"></status>
</kw>
<msg timestamp="20201030 15:55:23.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021650556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021687056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.268" endtime="20201030 15:55:23.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021650556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021687056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.559" endtime="20201030 15:55:23.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.567" endtime="20201030 15:55:23.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.265" endtime="20201030 15:55:23.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.263" endtime="20201030 15:55:23.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:23.574" level="INFO">${RESULT} = [{'diff': 3.649999999999834e-05}, {'diff': 3.605599999999959e-05}, {'diff': 3.604200000000002e-05}, {'diff': 3.6138999999997534e-05}, {'diff': 3.6068999999999685e-05}, {'diff': 3.57780000000002e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:23.571" endtime="20201030 15:55:23.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:23.579" level="INFO">${ACCURACY} = {'diff': [3.649999999999834e-05, 3.605599999999959e-05, 3.604200000000002e-05, 3.6138999999997534e-05, 3.6068999999999685e-05, 3.57780000000002e-05, 3.605599999999959e-05, 3.641600000000092e-05, 3.602...</msg>
<status status="PASS" starttime="20201030 15:55:23.575" endtime="20201030 15:55:23.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.583" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 15:55:23.582" endtime="20201030 15:55:23.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.586" level="INFO">VALUE: [3.649999999999834e-05, 3.605599999999959e-05, 3.604200000000002e-05, 3.6138999999997534e-05, 3.6068999999999685e-05, 3.57780000000002e-05, 3.605599999999959e-05, 3.641600000000092e-05, 3.602800000000045e-05, 3.602800000000045e-05, 3.5861000000001614e-05, 3.620899999999885e-05, 3.551400000000038e-05, 3.62780000000007e-05, 3.6389000000001254e-05, 3.5874999999997714e-05, 3.594499999999903e-05, 3.6374999999998214e-05, 3.583400000000195e-05, 3.657000000000313e-05, 3.601400000000088e-05, 3.550000000000081e-05, 3.570800000000235e-05, 3.638800000000178e-05, 3.669400000000031e-05, 3.6277000000001225e-05, 3.56659999999967e-05, 3.6055000000000115e-05, 3.590200000000085e-05, 3.6375000000001684e-05, 3.552799999999995e-05, 3.5554999999999615e-05, 3.618000000000024e-05, 3.6083000000002724e-05, 3.643000000000049e-05, 3.5568999999999185e-05, 3.5624999999997464e-05, 3.6346999999999074e-05, 3.643000000000049e-05, 3.6653000000001074e-05, 3.594399999999956e-05, 3.605599999999959e-05, 3.630599999999984e-05, 3.5610999999997894e-05, 3.59589999999986e-05, 3.5666999999999643e-05, 3.602800000000045e-05, 3.568099999999921e-05, 3.552799999999995e-05, 3.654200000000052e-05]</msg>
<status status="PASS" starttime="20201030 15:55:23.584" endtime="20201030 15:55:23.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.580" endtime="20201030 15:55:23.587"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:23.591" endtime="20201030 15:55:23.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.589" endtime="20201030 15:55:23.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.588" endtime="20201030 15:55:23.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.232" endtime="20201030 15:55:23.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.231" endtime="20201030 15:55:23.611"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.620" endtime="20201030 15:55:23.637"></status>
</kw>
<msg timestamp="20201030 15:55:23.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.618" endtime="20201030 15:55:23.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.638" endtime="20201030 15:55:23.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.640" endtime="20201030 15:55:23.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.616" endtime="20201030 15:55:23.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.614" endtime="20201030 15:55:23.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.649" endtime="20201030 15:55:23.938"></status>
</kw>
<msg timestamp="20201030 15:55:23.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021795778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.648" endtime="20201030 15:55:23.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021795778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.942" endtime="20201030 15:55:23.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.950" endtime="20201030 15:55:23.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.645" endtime="20201030 15:55:23.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.644" endtime="20201030 15:55:23.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:23.957" level="INFO">${RESULT} = [{'diff': 3.681999999999991e-05}, {'diff': 3.6875000000002184e-05}, {'diff': 3.705600000000059e-05}, {'diff': 3.651400000000138e-05}, {'diff': 3.7195000000000283e-05}, {'diff': 3.736199999999912e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:23.953" endtime="20201030 15:55:23.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:23.961" level="INFO">${ACCURACY} = {'diff': [3.681999999999991e-05, 3.6875000000002184e-05, 3.705600000000059e-05, 3.651400000000138e-05, 3.7195000000000283e-05, 3.736199999999912e-05, 3.723599999999952e-05, 3.719400000000081e-05, 3.67...</msg>
<status status="PASS" starttime="20201030 15:55:23.958" endtime="20201030 15:55:23.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.965" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 15:55:23.964" endtime="20201030 15:55:23.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.968" level="INFO">VALUE: [3.681999999999991e-05, 3.6875000000002184e-05, 3.705600000000059e-05, 3.651400000000138e-05, 3.7195000000000283e-05, 3.736199999999912e-05, 3.723599999999952e-05, 3.719400000000081e-05, 3.675000000000206e-05, 3.765199999999913e-05, 3.649999999999834e-05, 3.694399999999709e-05, 3.6833000000000005e-05, 3.698600000000274e-05, 3.699999999999884e-05, 3.6861000000002614e-05, 3.717999999999777e-05, 3.6527000000001475e-05, 3.693000000000099e-05, 3.7597000000000325e-05, 3.720800000000038e-05, 3.649999999999834e-05, 3.6569000000000185e-05, 3.6846999999999575e-05, 3.7569000000001185e-05, 3.6667000000000644e-05, 3.6917000000000894e-05, 3.694500000000003e-05, 3.707000000000016e-05, 3.702800000000145e-05, 3.7083000000000255e-05, 3.6681000000000213e-05, 3.6846999999999575e-05, 3.657000000000313e-05, 3.758400000000023e-05, 3.720899999999985e-05, 3.648599999999877e-05, 3.748599999999977e-05, 3.6610999999998894e-05, 3.726399999999866e-05, 3.7361000000003114e-05, 3.7375000000002684e-05, 3.6888999999998284e-05, 3.694500000000003e-05, 3.7167000000001144e-05, 3.669499999999978e-05, 3.6526999999998006e-05, 3.738799999999931e-05, 3.7124999999998964e-05, 3.7638999999999034e-05]</msg>
<status status="PASS" starttime="20201030 15:55:23.966" endtime="20201030 15:55:23.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.962" endtime="20201030 15:55:23.969"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:23.973" endtime="20201030 15:55:23.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.971" endtime="20201030 15:55:23.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.970" endtime="20201030 15:55:23.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.612" endtime="20201030 15:55:23.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.612" endtime="20201030 15:55:23.993"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.002" endtime="20201030 15:55:24.018"></status>
</kw>
<msg timestamp="20201030 15:55:24.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.000" endtime="20201030 15:55:24.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.020" endtime="20201030 15:55:24.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.022" endtime="20201030 15:55:24.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.998" endtime="20201030 15:55:24.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.996" endtime="20201030 15:55:24.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.031" endtime="20201030 15:55:24.316"></status>
</kw>
<msg timestamp="20201030 15:55:24.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022484944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.030" endtime="20201030 15:55:24.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022484944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.320" endtime="20201030 15:55:24.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.328" endtime="20201030 15:55:24.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.027" endtime="20201030 15:55:24.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.025" endtime="20201030 15:55:24.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:24.335" level="INFO">${RESULT} = [{'diff': 3.847300000000067e-05}, {'diff': 3.8138999999999534e-05}, {'diff': 3.820800000000138e-05}, {'diff': 3.7597000000000325e-05}, {'diff': 3.795800000000113e-05}, {'diff': 3.804199999999855e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:24.331" endtime="20201030 15:55:24.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:24.339" level="INFO">${ACCURACY} = {'diff': [3.847300000000067e-05, 3.8138999999999534e-05, 3.820800000000138e-05, 3.7597000000000325e-05, 3.795800000000113e-05, 3.804199999999855e-05, 3.7597000000000325e-05, 3.7583000000000755e-05, 3....</msg>
<status status="PASS" starttime="20201030 15:55:24.336" endtime="20201030 15:55:24.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.343" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 15:55:24.342" endtime="20201030 15:55:24.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.346" level="INFO">VALUE: [3.847300000000067e-05, 3.8138999999999534e-05, 3.820800000000138e-05, 3.7597000000000325e-05, 3.795800000000113e-05, 3.804199999999855e-05, 3.7597000000000325e-05, 3.7583000000000755e-05, 3.776400000000263e-05, 3.848600000000077e-05, 3.823600000000052e-05, 3.754199999999805e-05, 3.8375000000000214e-05, 3.82780000000027e-05, 3.8611000000000895e-05, 3.826399999999966e-05, 3.8012999999999936e-05, 3.8375000000000214e-05, 3.827799999999923e-05, 3.8709000000001353e-05, 3.7875000000003184e-05, 3.7610999999999895e-05, 3.793000000000199e-05, 3.774999999999959e-05, 3.8332999999998035e-05, 3.7597000000000325e-05, 3.7610999999999895e-05, 3.792999999999852e-05, 3.816600000000267e-05, 3.826399999999966e-05, 3.827799999999923e-05, 3.822300000000042e-05, 3.7624999999999464e-05, 3.844400000000206e-05, 3.8666999999999174e-05, 3.7902999999998854e-05, 3.773699999999949e-05, 3.7667000000001644e-05, 3.848600000000077e-05, 3.830599999999837e-05, 3.772200000000045e-05, 3.8124999999999964e-05, 3.7694999999997314e-05, 3.749999999999934e-05, 3.7958999999997134e-05, 3.757000000000066e-05, 3.8388999999999784e-05, 3.777799999999873e-05, 3.822300000000042e-05, 3.856999999999819e-05]</msg>
<status status="PASS" starttime="20201030 15:55:24.344" endtime="20201030 15:55:24.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.340" endtime="20201030 15:55:24.348"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:24.351" endtime="20201030 15:55:24.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.350" endtime="20201030 15:55:24.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.349" endtime="20201030 15:55:24.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.994" endtime="20201030 15:55:24.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.993" endtime="20201030 15:55:24.372"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.381" endtime="20201030 15:55:24.397"></status>
</kw>
<msg timestamp="20201030 15:55:24.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.379" endtime="20201030 15:55:24.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.399" endtime="20201030 15:55:24.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.401" endtime="20201030 15:55:24.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.377" endtime="20201030 15:55:24.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.374" endtime="20201030 15:55:24.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.410" endtime="20201030 15:55:24.695"></status>
</kw>
<msg timestamp="20201030 15:55:24.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021636167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021675778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.408" endtime="20201030 15:55:24.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021636167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021675778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.699" endtime="20201030 15:55:24.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.707" endtime="20201030 15:55:24.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.406" endtime="20201030 15:55:24.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.404" endtime="20201030 15:55:24.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:24.713" level="INFO">${RESULT} = [{'diff': 3.9610999999998425e-05}, {'diff': 3.9389000000000784e-05}, {'diff': 3.9389000000000784e-05}, {'diff': 3.8583000000001755e-05}, {'diff': 3.924999999999762e-05}, {'diff': 3.8666999999999174e-0...</msg>
<status status="PASS" starttime="20201030 15:55:24.710" endtime="20201030 15:55:24.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:24.718" level="INFO">${ACCURACY} = {'diff': [3.9610999999998425e-05, 3.9389000000000784e-05, 3.9389000000000784e-05, 3.8583000000001755e-05, 3.924999999999762e-05, 3.8666999999999174e-05, 3.875000000000059e-05, 3.925000000000109e-05, 3...</msg>
<status status="PASS" starttime="20201030 15:55:24.714" endtime="20201030 15:55:24.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.723" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 15:55:24.722" endtime="20201030 15:55:24.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.725" level="INFO">VALUE: [3.9610999999998425e-05, 3.9389000000000784e-05, 3.9389000000000784e-05, 3.8583000000001755e-05, 3.924999999999762e-05, 3.8666999999999174e-05, 3.875000000000059e-05, 3.925000000000109e-05, 3.86659999999997e-05, 3.9111000000001395e-05, 3.894399999999909e-05, 3.880599999999887e-05, 3.931999999999894e-05, 3.8875000000000715e-05, 3.9430999999999494e-05, 3.850000000000034e-05, 3.8652999999999604e-05, 3.90980000000013e-05, 3.9473000000001673e-05, 3.952799999999701e-05, 3.873600000000102e-05, 3.8930999999998994e-05, 3.933400000000198e-05, 3.861200000000037e-05, 3.970800000000288e-05, 3.8625000000000465e-05, 3.855599999999862e-05, 3.8860999999997675e-05, 3.922199999999848e-05, 3.8818999999998965e-05, 3.8554999999999146e-05, 3.892999999999952e-05, 3.8639000000000034e-05, 3.8875000000000715e-05, 3.919400000000281e-05, 3.890199999999691e-05, 3.8568999999998715e-05, 3.89859999999978e-05, 3.922199999999848e-05, 3.976400000000116e-05, 3.9097000000001825e-05, 3.8639000000000034e-05, 3.898600000000127e-05, 3.902799999999998e-05, 3.9667000000000174e-05, 3.934799999999808e-05, 3.9125000000000965e-05, 3.923600000000152e-05, 3.9166999999999674e-05, 3.9694999999999314e-05]</msg>
<status status="PASS" starttime="20201030 15:55:24.724" endtime="20201030 15:55:24.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.719" endtime="20201030 15:55:24.727"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:24.730" endtime="20201030 15:55:24.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.729" endtime="20201030 15:55:24.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.728" endtime="20201030 15:55:24.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.373" endtime="20201030 15:55:24.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.372" endtime="20201030 15:55:24.751"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.760" endtime="20201030 15:55:24.776"></status>
</kw>
<msg timestamp="20201030 15:55:24.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.758" endtime="20201030 15:55:24.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.777" endtime="20201030 15:55:24.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.780" endtime="20201030 15:55:24.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.756" endtime="20201030 15:55:24.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.753" endtime="20201030 15:55:24.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.790" endtime="20201030 15:55:25.076"></status>
</kw>
<msg timestamp="20201030 15:55:25.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021796139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021836278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.788" endtime="20201030 15:55:25.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021796139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021836278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:25.080" endtime="20201030 15:55:25.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.089" endtime="20201030 15:55:25.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.785" endtime="20201030 15:55:25.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.783" endtime="20201030 15:55:25.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:25.095" level="INFO">${RESULT} = [{'diff': 4.0139000000001535e-05}, {'diff': 4.001400000000141e-05}, {'diff': 4.027800000000123e-05}, {'diff': 4.002799999999751e-05}, {'diff': 4.049999999999887e-05}, {'diff': 4.0403000000001354e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:25.092" endtime="20201030 15:55:25.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:25.099" level="INFO">${ACCURACY} = {'diff': [4.0139000000001535e-05, 4.001400000000141e-05, 4.027800000000123e-05, 4.002799999999751e-05, 4.049999999999887e-05, 4.0403000000001354e-05, 3.9582999999999285e-05, 4.022199999999948e-05, 3.9...</msg>
<status status="PASS" starttime="20201030 15:55:25.096" endtime="20201030 15:55:25.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.104" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 15:55:25.102" endtime="20201030 15:55:25.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.106" level="INFO">VALUE: [4.0139000000001535e-05, 4.001400000000141e-05, 4.027800000000123e-05, 4.002799999999751e-05, 4.049999999999887e-05, 4.0403000000001354e-05, 3.9582999999999285e-05, 4.022199999999948e-05, 3.9694999999999314e-05, 4.0208999999999384e-05, 4.0153000000001104e-05, 4.0208999999999384e-05, 4.008399999999926e-05, 3.973599999999855e-05, 4.076400000000216e-05, 4.0153000000001104e-05, 4.0360999999999175e-05, 4.026400000000166e-05, 4.0194999999999814e-05, 4.008399999999926e-05, 3.9875000000001715e-05, 3.965199999999766e-05, 3.956999999999919e-05, 4.041599999999798e-05, 4.043000000000102e-05, 3.99859999999988e-05, 3.9832999999999535e-05, 3.993000000000052e-05, 4.027799999999776e-05, 4.0596999999999855e-05, 4.0138999999998065e-05, 3.995799999999966e-05, 4.0083000000003255e-05, 3.9653000000000604e-05, 4.0333000000000035e-05, 3.9582999999999285e-05, 4.022199999999948e-05, 4.0124999999998495e-05, 3.969399999999984e-05, 4.0695000000000314e-05, 4.0096999999999355e-05, 3.9875000000001715e-05, 3.954200000000005e-05, 3.952800000000048e-05, 4.005600000000012e-05, 3.9874999999998245e-05, 4.023599999999905e-05, 4.033399999999951e-05, 4.0417000000000924e-05, 4.052800000000148e-05]</msg>
<status status="PASS" starttime="20201030 15:55:25.105" endtime="20201030 15:55:25.110"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.100" endtime="20201030 15:55:25.111"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:25.115" endtime="20201030 15:55:25.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.113" endtime="20201030 15:55:25.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.112" endtime="20201030 15:55:25.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.752" endtime="20201030 15:55:25.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.751" endtime="20201030 15:55:25.135"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.144" endtime="20201030 15:55:25.161"></status>
</kw>
<msg timestamp="20201030 15:55:25.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.142" endtime="20201030 15:55:25.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.163" endtime="20201030 15:55:25.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.166" endtime="20201030 15:55:25.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.140" endtime="20201030 15:55:25.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.138" endtime="20201030 15:55:25.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.174" endtime="20201030 15:55:25.459"></status>
</kw>
<msg timestamp="20201030 15:55:25.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02257325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:25.173" endtime="20201030 15:55:25.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02257325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:25.463" endtime="20201030 15:55:25.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.472" endtime="20201030 15:55:25.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.170" endtime="20201030 15:55:25.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.169" endtime="20201030 15:55:25.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:25.478" level="INFO">${RESULT} = [{'diff': 4.1153000000002105e-05}, {'diff': 4.148599999999683e-05}, {'diff': 4.126399999999919e-05}, {'diff': 4.145800000000116e-05}, {'diff': 4.099999999999937e-05}, {'diff': 4.077800000000173e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:25.475" endtime="20201030 15:55:25.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:25.482" level="INFO">${ACCURACY} = {'diff': [4.1153000000002105e-05, 4.148599999999683e-05, 4.126399999999919e-05, 4.145800000000116e-05, 4.099999999999937e-05, 4.077800000000173e-05, 4.12920000000018e-05, 4.1333000000001036e-05, 4.073...</msg>
<status status="PASS" starttime="20201030 15:55:25.479" endtime="20201030 15:55:25.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.487" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 15:55:25.486" endtime="20201030 15:55:25.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.489" level="INFO">VALUE: [4.1153000000002105e-05, 4.148599999999683e-05, 4.126399999999919e-05, 4.145800000000116e-05, 4.099999999999937e-05, 4.077800000000173e-05, 4.12920000000018e-05, 4.1333000000001036e-05, 4.073599999999955e-05, 4.124999999999962e-05, 4.127799999999876e-05, 4.127800000000223e-05, 4.1262999999999717e-05, 4.070799999999694e-05, 4.130600000000137e-05, 4.1153000000002105e-05, 4.123600000000005e-05, 4.0624999999998995e-05, 4.0874999999999245e-05, 4.0972999999999704e-05, 4.105600000000112e-05, 4.1388999999999315e-05, 4.1124999999999495e-05, 4.132000000000094e-05, 4.1403000000002355e-05, 4.10980000000033e-05, 4.063800000000256e-05, 4.111200000000287e-05, 4.1388999999999315e-05, 4.122200000000048e-05, 4.1333000000001036e-05, 4.073599999999955e-05, 4.122200000000048e-05, 4.119400000000134e-05, 4.1097000000000355e-05, 4.0610999999999425e-05, 4.095800000000066e-05, 4.097200000000023e-05, 4.122200000000048e-05, 4.104199999999808e-05, 4.1110999999999925e-05, 4.1389000000002785e-05, 4.0889000000002285e-05, 4.0888999999998815e-05, 4.172200000000098e-05, 4.123600000000005e-05, 4.0624999999998995e-05, 4.1111000000003395e-05, 4.0610999999999425e-05, 4.104199999999808e-05]</msg>
<status status="PASS" starttime="20201030 15:55:25.488" endtime="20201030 15:55:25.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.483" endtime="20201030 15:55:25.491"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:25.495" endtime="20201030 15:55:25.514"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.493" endtime="20201030 15:55:25.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.492" endtime="20201030 15:55:25.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.136" endtime="20201030 15:55:25.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.136" endtime="20201030 15:55:25.516"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.524" endtime="20201030 15:55:25.540"></status>
</kw>
<msg timestamp="20201030 15:55:25.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.523" endtime="20201030 15:55:25.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.542" endtime="20201030 15:55:25.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.544" endtime="20201030 15:55:25.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.520" endtime="20201030 15:55:25.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.518" endtime="20201030 15:55:25.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.553" endtime="20201030 15:55:25.838"></status>
</kw>
<msg timestamp="20201030 15:55:25.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021695056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021737042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:25.552" endtime="20201030 15:55:25.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021695056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021737042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:25.842" endtime="20201030 15:55:25.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.851" endtime="20201030 15:55:25.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.549" endtime="20201030 15:55:25.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.548" endtime="20201030 15:55:25.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:25.857" level="INFO">${RESULT} = [{'diff': 4.19860000000008e-05}, {'diff': 4.1818999999998496e-05}, {'diff': 4.1583000000001286e-05}, {'diff': 4.1819000000001966e-05}, {'diff': 4.2180999999998775e-05}, {'diff': 4.170800000000141e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:25.854" endtime="20201030 15:55:25.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:25.862" level="INFO">${ACCURACY} = {'diff': [4.19860000000008e-05, 4.1818999999998496e-05, 4.1583000000001286e-05, 4.1819000000001966e-05, 4.2180999999998775e-05, 4.170800000000141e-05, 4.229199999999933e-05, 4.1903000000002855e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:55:25.858" endtime="20201030 15:55:25.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.867" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 15:55:25.866" endtime="20201030 15:55:25.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.869" level="INFO">VALUE: [4.19860000000008e-05, 4.1818999999998496e-05, 4.1583000000001286e-05, 4.1819000000001966e-05, 4.2180999999998775e-05, 4.170800000000141e-05, 4.229199999999933e-05, 4.1903000000002855e-05, 4.225000000000062e-05, 4.225000000000062e-05, 4.182000000000144e-05, 4.2223000000000954e-05, 4.1652999999999135e-05, 4.1944999999998095e-05, 4.279199999999983e-05, 4.202799999999951e-05, 4.1776999999999787e-05, 4.1917000000002425e-05, 4.2375000000000745e-05, 4.2068999999998746e-05, 4.198599999999733e-05, 4.250000000000087e-05, 4.166599999999923e-05, 4.179199999999883e-05, 4.275000000000112e-05, 4.175000000000012e-05, 4.1596999999997386e-05, 4.1555000000002146e-05, 4.201399999999994e-05, 4.2554999999999676e-05, 4.245800000000216e-05, 4.1902999999999385e-05, 4.2181000000002244e-05, 4.2125000000000495e-05, 4.1930999999998525e-05, 4.1832999999998066e-05, 4.200000000000037e-05, 4.1833000000001536e-05, 4.19999999999969e-05, 4.238800000000084e-05, 4.175000000000012e-05, 4.22920000000028e-05, 4.2194999999998345e-05, 4.175000000000012e-05, 4.2389000000000315e-05, 4.1819000000001966e-05, 4.1624999999999995e-05, 4.2374999999997276e-05, 4.170799999999794e-05, 4.274999999999765e-05]</msg>
<status status="PASS" starttime="20201030 15:55:25.868" endtime="20201030 15:55:25.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.863" endtime="20201030 15:55:25.870"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:25.874" endtime="20201030 15:55:25.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.873" endtime="20201030 15:55:25.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.871" endtime="20201030 15:55:25.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.517" endtime="20201030 15:55:25.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.516" endtime="20201030 15:55:25.895"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.903" endtime="20201030 15:55:25.920"></status>
</kw>
<msg timestamp="20201030 15:55:25.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.902" endtime="20201030 15:55:25.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.921" endtime="20201030 15:55:25.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.924" endtime="20201030 15:55:25.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.899" endtime="20201030 15:55:25.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.897" endtime="20201030 15:55:25.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.933" endtime="20201030 15:55:26.221"></status>
</kw>
<msg timestamp="20201030 15:55:26.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021880681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021923819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:25.931" endtime="20201030 15:55:26.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021880681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021923819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:26.226" endtime="20201030 15:55:26.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.235" endtime="20201030 15:55:26.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.929" endtime="20201030 15:55:26.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.927" endtime="20201030 15:55:26.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:26.243" level="INFO">${RESULT} = [{'diff': 4.313800000000159e-05}, {'diff': 4.2653000000000135e-05}, {'diff': 4.33059999999999e-05}, {'diff': 4.302800000000051e-05}, {'diff': 4.269399999999937e-05}, {'diff': 4.2680999999999275e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:26.239" endtime="20201030 15:55:26.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:26.249" level="INFO">${ACCURACY} = {'diff': [4.313800000000159e-05, 4.2653000000000135e-05, 4.33059999999999e-05, 4.302800000000051e-05, 4.269399999999937e-05, 4.2680999999999275e-05, 4.309800000000183e-05, 4.2722999999997985e-05, 4.34...</msg>
<status status="PASS" starttime="20201030 15:55:26.245" endtime="20201030 15:55:26.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.253" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 15:55:26.252" endtime="20201030 15:55:26.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.256" level="INFO">VALUE: [4.313800000000159e-05, 4.2653000000000135e-05, 4.33059999999999e-05, 4.302800000000051e-05, 4.269399999999937e-05, 4.2680999999999275e-05, 4.309800000000183e-05, 4.2722999999997985e-05, 4.3417000000000455e-05, 4.3125000000001495e-05, 4.2695000000002314e-05, 4.265200000000066e-05, 4.352799999999754e-05, 4.276399999999722e-05, 4.344400000000012e-05, 4.325000000000162e-05, 4.2846999999998636e-05, 4.341599999999751e-05, 4.250000000000087e-05, 4.347199999999926e-05, 4.2875000000001245e-05, 4.3389000000001315e-05, 4.2916999999999955e-05, 4.31800000000003e-05, 4.3110999999998456e-05, 4.276400000000069e-05, 4.2903000000000385e-05, 4.326400000000119e-05, 4.297200000000223e-05, 4.345799999999969e-05, 4.34860000000023e-05, 4.2944999999999095e-05, 4.2596999999998386e-05, 4.326400000000119e-05, 4.355600000000015e-05, 4.273600000000155e-05, 4.3375000000001745e-05, 4.327800000000076e-05, 4.3403000000000885e-05, 4.348599999999883e-05, 4.3375000000001745e-05, 4.3458999999999165e-05, 4.327699999999782e-05, 4.251400000000044e-05, 4.352700000000154e-05, 4.291600000000048e-05, 4.322199999999901e-05, 4.34860000000023e-05, 4.293000000000005e-05, 4.3374999999998276e-05]</msg>
<status status="PASS" starttime="20201030 15:55:26.255" endtime="20201030 15:55:26.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.250" endtime="20201030 15:55:26.258"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:26.261" endtime="20201030 15:55:26.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.260" endtime="20201030 15:55:26.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.259" endtime="20201030 15:55:26.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.896" endtime="20201030 15:55:26.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.895" endtime="20201030 15:55:26.282"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.291" endtime="20201030 15:55:26.309"></status>
</kw>
<msg timestamp="20201030 15:55:26.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.290" endtime="20201030 15:55:26.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.311" endtime="20201030 15:55:26.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.313" endtime="20201030 15:55:26.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.287" endtime="20201030 15:55:26.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.285" endtime="20201030 15:55:26.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.324" endtime="20201030 15:55:26.610"></status>
</kw>
<msg timestamp="20201030 15:55:26.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023333764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023377958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:26.322" endtime="20201030 15:55:26.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023333764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023377958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:26.615" endtime="20201030 15:55:26.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.623" endtime="20201030 15:55:26.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.319" endtime="20201030 15:55:26.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.317" endtime="20201030 15:55:26.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:26.629" level="INFO">${RESULT} = [{'diff': 4.419400000000087e-05}, {'diff': 4.3888999999998346e-05}, {'diff': 4.429200000000133e-05}, {'diff': 4.4167000000001205e-05}, {'diff': 4.4195000000000345e-05}, {'diff': 4.441599999999851e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:26.626" endtime="20201030 15:55:26.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:26.633" level="INFO">${ACCURACY} = {'diff': [4.419400000000087e-05, 4.3888999999998346e-05, 4.429200000000133e-05, 4.4167000000001205e-05, 4.4195000000000345e-05, 4.441599999999851e-05, 4.3875000000002246e-05, 4.352800000000101e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:55:26.630" endtime="20201030 15:55:26.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.638" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 15:55:26.637" endtime="20201030 15:55:26.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.640" level="INFO">VALUE: [4.419400000000087e-05, 4.3888999999998346e-05, 4.429200000000133e-05, 4.4167000000001205e-05, 4.4195000000000345e-05, 4.441599999999851e-05, 4.3875000000002246e-05, 4.352800000000101e-05, 4.370799999999994e-05, 4.394400000000062e-05, 4.4069000000000746e-05, 4.420800000000044e-05, 4.452800000000201e-05, 4.393000000000105e-05, 4.474999999999965e-05, 4.4083000000000316e-05, 4.404099999999814e-05, 4.429100000000186e-05, 4.427800000000176e-05, 4.4569000000001247e-05, 4.38060000000004e-05, 4.401400000000194e-05, 4.4459000000000165e-05, 4.4374999999999276e-05, 4.394400000000062e-05, 4.424999999999915e-05, 4.427799999999829e-05, 4.404199999999761e-05, 4.4152999999998166e-05, 4.4569000000001247e-05, 4.4152999999998166e-05, 4.43060000000009e-05, 4.44860000000033e-05, 4.4139000000002065e-05, 4.381999999999997e-05, 4.424999999999915e-05, 4.3639000000001565e-05, 4.358399999999929e-05, 4.397199999999976e-05, 4.391600000000148e-05, 4.445800000000069e-05, 4.375000000000212e-05, 4.3846999999999636e-05, 4.444400000000112e-05, 4.4110999999999456e-05, 4.372199999999951e-05, 4.448599999999983e-05, 4.3874999999998776e-05, 4.3555000000000677e-05, 4.4333000000000566e-05]</msg>
<status status="PASS" starttime="20201030 15:55:26.639" endtime="20201030 15:55:26.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.634" endtime="20201030 15:55:26.643"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:26.646" endtime="20201030 15:55:26.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.645" endtime="20201030 15:55:26.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.644" endtime="20201030 15:55:26.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.283" endtime="20201030 15:55:26.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.283" endtime="20201030 15:55:26.667"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.676" endtime="20201030 15:55:26.693"></status>
</kw>
<msg timestamp="20201030 15:55:26.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.674" endtime="20201030 15:55:26.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.694" endtime="20201030 15:55:26.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.697" endtime="20201030 15:55:26.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.672" endtime="20201030 15:55:26.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.669" endtime="20201030 15:55:26.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.705" endtime="20201030 15:55:27.006"></status>
</kw>
<msg timestamp="20201030 15:55:27.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021750056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021795722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:26.704" endtime="20201030 15:55:27.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021750056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021795722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:27.010" endtime="20201030 15:55:27.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.019" endtime="20201030 15:55:27.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.701" endtime="20201030 15:55:27.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.700" endtime="20201030 15:55:27.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:27.026" level="INFO">${RESULT} = [{'diff': 4.566599999999976e-05}, {'diff': 4.506999999999775e-05}, {'diff': 4.4709000000000415e-05}, {'diff': 4.5416999999998986e-05}, {'diff': 4.5319000000001997e-05}, {'diff': 4.5237000000000055e-05...</msg>
<status status="PASS" starttime="20201030 15:55:27.022" endtime="20201030 15:55:27.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:27.031" level="INFO">${ACCURACY} = {'diff': [4.566599999999976e-05, 4.506999999999775e-05, 4.4709000000000415e-05, 4.5416999999998986e-05, 4.5319000000001997e-05, 4.5237000000000055e-05, 4.506899999999828e-05, 4.5069000000001747e-05, 4...</msg>
<status status="PASS" starttime="20201030 15:55:27.027" endtime="20201030 15:55:27.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.036" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 15:55:27.035" endtime="20201030 15:55:27.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.038" level="INFO">VALUE: [4.566599999999976e-05, 4.506999999999775e-05, 4.4709000000000415e-05, 4.5416999999998986e-05, 4.5319000000001997e-05, 4.5237000000000055e-05, 4.506899999999828e-05, 4.5069000000001747e-05, 4.45129999999995e-05, 4.4874999999999776e-05, 4.49999999999999e-05, 4.520800000000144e-05, 4.525000000000015e-05, 4.473600000000008e-05, 4.544399999999865e-05, 4.5195000000001345e-05, 4.4874999999999776e-05, 4.4916999999998486e-05, 4.5167000000002205e-05, 4.547199999999779e-05, 4.525000000000015e-05, 4.479199999999836e-05, 4.555499999999921e-05, 4.4874999999999776e-05, 4.554199999999911e-05, 4.520800000000144e-05, 4.4973000000000235e-05, 4.504200000000208e-05, 4.522200000000101e-05, 4.5166999999998736e-05, 4.5223000000000485e-05, 4.5445000000001595e-05, 4.5473000000000735e-05, 4.450000000000287e-05, 4.5431000000002025e-05, 4.5208999999997446e-05, 4.5152999999999166e-05, 4.473600000000008e-05, 4.5069000000001747e-05, 4.5069000000001747e-05, 4.534699999999767e-05, 4.497200000000076e-05, 4.529099999999939e-05, 4.5375000000000276e-05, 4.547200000000126e-05, 4.481899999999803e-05, 4.5402999999999416e-05, 4.5416999999998986e-05, 4.548600000000083e-05, 4.495799999999772e-05]</msg>
<status status="PASS" starttime="20201030 15:55:27.037" endtime="20201030 15:55:27.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.032" endtime="20201030 15:55:27.039"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:27.043" endtime="20201030 15:55:27.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.042" endtime="20201030 15:55:27.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.040" endtime="20201030 15:55:27.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.668" endtime="20201030 15:55:27.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.667" endtime="20201030 15:55:27.064"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.072" endtime="20201030 15:55:27.089"></status>
</kw>
<msg timestamp="20201030 15:55:27.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.071" endtime="20201030 15:55:27.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.090" endtime="20201030 15:55:27.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.093" endtime="20201030 15:55:27.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.068" endtime="20201030 15:55:27.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.066" endtime="20201030 15:55:27.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.102" endtime="20201030 15:55:27.392"></status>
</kw>
<msg timestamp="20201030 15:55:27.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021591917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021637778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:27.100" endtime="20201030 15:55:27.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021591917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021637778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:27.396" endtime="20201030 15:55:27.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.405" endtime="20201030 15:55:27.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.098" endtime="20201030 15:55:27.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.096" endtime="20201030 15:55:27.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:27.411" level="INFO">${RESULT} = [{'diff': 4.5861000000001206e-05}, {'diff': 4.627800000000029e-05}, {'diff': 4.581899999999903e-05}, {'diff': 4.629199999999986e-05}, {'diff': 4.61939999999994e-05}, {'diff': 4.620800000000244e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:27.408" endtime="20201030 15:55:27.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:27.415" level="INFO">${ACCURACY} = {'diff': [4.5861000000001206e-05, 4.627800000000029e-05, 4.581899999999903e-05, 4.629199999999986e-05, 4.61939999999994e-05, 4.620800000000244e-05, 4.5916999999999486e-05, 4.647200000000226e-05, 4.577...</msg>
<status status="PASS" starttime="20201030 15:55:27.412" endtime="20201030 15:55:27.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.420" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 15:55:27.419" endtime="20201030 15:55:27.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.422" level="INFO">VALUE: [4.5861000000001206e-05, 4.627800000000029e-05, 4.581899999999903e-05, 4.629199999999986e-05, 4.61939999999994e-05, 4.620800000000244e-05, 4.5916999999999486e-05, 4.647200000000226e-05, 4.577799999999979e-05, 4.5875000000000776e-05, 4.558299999999835e-05, 4.6375000000001276e-05, 4.555599999999868e-05, 4.581899999999903e-05, 4.6403000000000416e-05, 4.5972999999997766e-05, 4.5709000000001415e-05, 4.6125000000001026e-05, 4.6416999999999986e-05, 4.602800000000004e-05, 4.606999999999875e-05, 4.575000000000065e-05, 4.6139000000000596e-05, 4.637499999999781e-05, 4.580499999999946e-05, 4.580499999999946e-05, 4.595799999999872e-05, 4.6347000000002136e-05, 4.573600000000108e-05, 4.5889000000000346e-05, 4.623600000000158e-05, 4.570800000000194e-05, 4.5666999999999236e-05, 4.56939999999989e-05, 4.6625000000001526e-05, 4.6139000000000596e-05, 4.602800000000004e-05, 4.5666999999999236e-05, 4.634699999999867e-05, 4.674999999999818e-05, 4.6153000000000166e-05, 4.6472999999998266e-05, 4.5861000000001206e-05, 4.5930999999999056e-05, 4.626400000000072e-05, 4.627800000000029e-05, 4.5694999999998376e-05, 4.5973000000001235e-05, 4.5639000000000096e-05, 4.636099999999824e-05]</msg>
<status status="PASS" starttime="20201030 15:55:27.421" endtime="20201030 15:55:27.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.416" endtime="20201030 15:55:27.423"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:27.428" endtime="20201030 15:55:27.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.427" endtime="20201030 15:55:27.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.425" endtime="20201030 15:55:27.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.065" endtime="20201030 15:55:27.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.064" endtime="20201030 15:55:27.449"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.457" endtime="20201030 15:55:27.474"></status>
</kw>
<msg timestamp="20201030 15:55:27.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.456" endtime="20201030 15:55:27.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.476" endtime="20201030 15:55:27.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.478" endtime="20201030 15:55:27.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.453" endtime="20201030 15:55:27.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.451" endtime="20201030 15:55:27.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.487" endtime="20201030 15:55:27.773"></status>
</kw>
<msg timestamp="20201030 15:55:27.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022879361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022926806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:27.486" endtime="20201030 15:55:27.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022879361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022926806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:27.777" endtime="20201030 15:55:27.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.785" endtime="20201030 15:55:27.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.483" endtime="20201030 15:55:27.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.482" endtime="20201030 15:55:27.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:27.792" level="INFO">${RESULT} = [{'diff': 4.7445000000000126e-05}, {'diff': 4.6639000000001096e-05}, {'diff': 4.652700000000107e-05}, {'diff': 4.727799999999782e-05}, {'diff': 4.687499999999831e-05}, {'diff': 4.73330000000001e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:27.789" endtime="20201030 15:55:27.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:27.796" level="INFO">${ACCURACY} = {'diff': [4.7445000000000126e-05, 4.6639000000001096e-05, 4.652700000000107e-05, 4.727799999999782e-05, 4.687499999999831e-05, 4.73330000000001e-05, 4.71940000000004e-05, 4.712499999999856e-05, 4.7152...</msg>
<status status="PASS" starttime="20201030 15:55:27.793" endtime="20201030 15:55:27.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.800" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 15:55:27.799" endtime="20201030 15:55:27.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.803" level="INFO">VALUE: [4.7445000000000126e-05, 4.6639000000001096e-05, 4.652700000000107e-05, 4.727799999999782e-05, 4.687499999999831e-05, 4.73330000000001e-05, 4.71940000000004e-05, 4.712499999999856e-05, 4.71529999999977e-05, 4.770800000000047e-05, 4.6903000000000916e-05, 4.732e-05, 4.655599999999968e-05, 4.656999999999925e-05, 4.780600000000093e-05, 4.7417000000000986e-05, 4.662499999999806e-05, 4.680599999999993e-05, 4.732e-05, 4.6931000000000056e-05, 4.683399999999907e-05, 4.7153000000001166e-05, 4.673599999999861e-05, 4.663800000000162e-05, 4.729200000000086e-05, 4.744399999999718e-05, 4.7167000000000736e-05, 4.651299999999803e-05, 4.652700000000107e-05, 4.722199999999954e-05, 4.652700000000107e-05, 4.720799999999997e-05, 4.673600000000208e-05, 4.71940000000004e-05, 4.777800000000179e-05, 4.736099999999924e-05, 4.734699999999967e-05, 4.7389000000001846e-05, 4.7125000000002026e-05, 4.776399999999875e-05, 4.705600000000018e-05, 4.71940000000004e-05, 4.708399999999932e-05, 4.7375000000002276e-05, 4.7209000000002915e-05, 4.711099999999899e-05, 4.7458999999999696e-05, 4.65139999999975e-05, 4.726299999999878e-05, 4.690299999999745e-05]</msg>
<status status="PASS" starttime="20201030 15:55:27.801" endtime="20201030 15:55:27.804"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.797" endtime="20201030 15:55:27.805"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:27.809" endtime="20201030 15:55:27.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.807" endtime="20201030 15:55:27.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.806" endtime="20201030 15:55:27.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.450" endtime="20201030 15:55:27.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.449" endtime="20201030 15:55:27.829"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.839" endtime="20201030 15:55:27.856"></status>
</kw>
<msg timestamp="20201030 15:55:27.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.837" endtime="20201030 15:55:27.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.857" endtime="20201030 15:55:27.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.860" endtime="20201030 15:55:27.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.834" endtime="20201030 15:55:27.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.832" endtime="20201030 15:55:27.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.870" endtime="20201030 15:55:28.155"></status>
</kw>
<msg timestamp="20201030 15:55:28.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022575194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022623236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:27.868" endtime="20201030 15:55:28.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022575194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022623236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:28.159" endtime="20201030 15:55:28.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.168" endtime="20201030 15:55:28.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.866" endtime="20201030 15:55:28.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.864" endtime="20201030 15:55:28.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:28.174" level="INFO">${RESULT} = [{'diff': 4.804200000000161e-05}, {'diff': 4.773599999999961e-05}, {'diff': 4.7458999999999696e-05}, {'diff': 4.757000000000025e-05}, {'diff': 4.8195000000000876e-05}, {'diff': 4.822200000000054e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:28.171" endtime="20201030 15:55:28.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:28.179" level="INFO">${ACCURACY} = {'diff': [4.804200000000161e-05, 4.773599999999961e-05, 4.7458999999999696e-05, 4.757000000000025e-05, 4.8195000000000876e-05, 4.822200000000054e-05, 4.801299999999953e-05, 4.795800000000072e-05, 4.78...</msg>
<status status="PASS" starttime="20201030 15:55:28.175" endtime="20201030 15:55:28.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.184" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 15:55:28.183" endtime="20201030 15:55:28.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.186" level="INFO">VALUE: [4.804200000000161e-05, 4.773599999999961e-05, 4.7458999999999696e-05, 4.757000000000025e-05, 4.8195000000000876e-05, 4.822200000000054e-05, 4.801299999999953e-05, 4.795800000000072e-05, 4.78330000000006e-05, 4.834700000000067e-05, 4.7889000000002346e-05, 4.845800000000122e-05, 4.824999999999968e-05, 4.780500000000146e-05, 4.868000000000233e-05, 4.752799999999807e-05, 4.7931000000001056e-05, 4.754200000000111e-05, 4.827799999999882e-05, 4.840299999999895e-05, 4.773599999999961e-05, 4.808300000000085e-05, 4.8320000000001e-05, 4.754200000000111e-05, 4.824999999999968e-05, 4.78200000000005e-05, 4.7681000000000806e-05, 4.773599999999961e-05, 4.81529999999987e-05, 4.7944999999997157e-05, 4.758299999999688e-05, 4.786200000000268e-05, 4.7959000000000196e-05, 4.805600000000118e-05, 4.8459000000000696e-05, 4.779100000000189e-05, 4.813899999999913e-05, 4.756900000000078e-05, 4.7861000000003207e-05, 4.868000000000233e-05, 4.847200000000079e-05, 4.762499999999906e-05, 4.811099999999999e-05, 4.824999999999968e-05, 4.852799999999907e-05, 4.808300000000085e-05, 4.819399999999793e-05, 4.848600000000036e-05, 4.816699999999827e-05, 4.783299999999713e-05]</msg>
<status status="PASS" starttime="20201030 15:55:28.185" endtime="20201030 15:55:28.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.180" endtime="20201030 15:55:28.188"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:28.191" endtime="20201030 15:55:28.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.190" endtime="20201030 15:55:28.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.189" endtime="20201030 15:55:28.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.830" endtime="20201030 15:55:28.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.830" endtime="20201030 15:55:28.212"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.221" endtime="20201030 15:55:28.238"></status>
</kw>
<msg timestamp="20201030 15:55:28.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:28.219" endtime="20201030 15:55:28.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:28.239" endtime="20201030 15:55:28.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.242" endtime="20201030 15:55:28.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.217" endtime="20201030 15:55:28.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.214" endtime="20201030 15:55:28.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.251" endtime="20201030 15:55:28.555"></status>
</kw>
<msg timestamp="20201030 15:55:28.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021782, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021830958, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:28.249" endtime="20201030 15:55:28.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021782, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021830958, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:28.560" endtime="20201030 15:55:28.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.568" endtime="20201030 15:55:28.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.247" endtime="20201030 15:55:28.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.245" endtime="20201030 15:55:28.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:28.574" level="INFO">${RESULT} = [{'diff': 4.895800000000172e-05}, {'diff': 4.937500000000081e-05}, {'diff': 4.855600000000168e-05}, {'diff': 4.933400000000157e-05}, {'diff': 4.949999999999746e-05}, {'diff': 4.859700000000092e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:28.571" endtime="20201030 15:55:28.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:28.579" level="INFO">${ACCURACY} = {'diff': [4.895800000000172e-05, 4.937500000000081e-05, 4.855600000000168e-05, 4.933400000000157e-05, 4.949999999999746e-05, 4.859700000000092e-05, 4.879199999999889e-05, 4.927799999999982e-05, 4.8902...</msg>
<status status="PASS" starttime="20201030 15:55:28.575" endtime="20201030 15:55:28.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.583" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 15:55:28.582" endtime="20201030 15:55:28.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.586" level="INFO">VALUE: [4.895800000000172e-05, 4.937500000000081e-05, 4.855600000000168e-05, 4.933400000000157e-05, 4.949999999999746e-05, 4.859700000000092e-05, 4.879199999999889e-05, 4.927799999999982e-05, 4.890299999999945e-05, 4.927700000000035e-05, 4.88469999999977e-05, 4.849999999999993e-05, 4.897199999999782e-05, 4.879099999999942e-05, 4.904100000000314e-05, 4.900000000000043e-05, 4.881900000000203e-05, 4.909700000000142e-05, 4.91529999999997e-05, 4.902799999999957e-05, 4.92079999999985e-05, 4.929199999999939e-05, 4.916699999999927e-05, 4.8707999999998e-05, 4.949999999999746e-05, 4.855600000000168e-05, 4.926400000000025e-05, 4.938900000000038e-05, 4.930600000000243e-05, 4.91529999999997e-05, 4.919499999999841e-05, 4.930599999999896e-05, 4.86529999999992e-05, 4.93339999999981e-05, 4.912500000000056e-05, 4.880499999999899e-05, 4.917999999999936e-05, 4.919399999999893e-05, 4.93469999999982e-05, 4.945799999999875e-05, 4.938900000000038e-05, 4.858299999999788e-05, 4.913900000000013e-05, 4.912499999999709e-05, 4.902799999999957e-05, 4.912500000000056e-05, 4.911099999999752e-05, 4.884700000000117e-05, 4.875000000000018e-05, 4.96530000000002e-05]</msg>
<status status="PASS" starttime="20201030 15:55:28.584" endtime="20201030 15:55:28.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.579" endtime="20201030 15:55:28.587"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:28.591" endtime="20201030 15:55:28.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.589" endtime="20201030 15:55:28.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.588" endtime="20201030 15:55:28.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.213" endtime="20201030 15:55:28.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.212" endtime="20201030 15:55:28.611"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.620" endtime="20201030 15:55:28.638"></status>
</kw>
<msg timestamp="20201030 15:55:28.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:28.618" endtime="20201030 15:55:28.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:28.639" endtime="20201030 15:55:28.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.642" endtime="20201030 15:55:28.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.616" endtime="20201030 15:55:28.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.614" endtime="20201030 15:55:28.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.651" endtime="20201030 15:55:28.937"></status>
</kw>
<msg timestamp="20201030 15:55:28.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022702014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022752236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:28.649" endtime="20201030 15:55:28.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022702014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022752236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:28.941" endtime="20201030 15:55:28.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.949" endtime="20201030 15:55:28.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.647" endtime="20201030 15:55:28.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.645" endtime="20201030 15:55:28.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:28.956" level="INFO">${RESULT} = [{'diff': 5.022199999999907e-05}, {'diff': 4.96530000000002e-05}, {'diff': 4.9473000000001266e-05}, {'diff': 4.956899999999931e-05}, {'diff': 5.029199999999692e-05}, {'diff': 4.995799999999925e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:28.953" endtime="20201030 15:55:28.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:28.960" level="INFO">${ACCURACY} = {'diff': [5.022199999999907e-05, 4.96530000000002e-05, 4.9473000000001266e-05, 4.956899999999931e-05, 5.029199999999692e-05, 4.995799999999925e-05, 5.045799999999975e-05, 4.967999999999986e-05, 5.0389...</msg>
<status status="PASS" starttime="20201030 15:55:28.957" endtime="20201030 15:55:28.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.965" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 15:55:28.964" endtime="20201030 15:55:28.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.967" level="INFO">VALUE: [5.022199999999907e-05, 4.96530000000002e-05, 4.9473000000001266e-05, 4.956899999999931e-05, 5.029199999999692e-05, 4.995799999999925e-05, 5.045799999999975e-05, 4.967999999999986e-05, 5.038900000000138e-05, 5.013899999999766e-05, 4.969399999999943e-05, 4.973600000000161e-05, 5.029099999999745e-05, 4.990299999999698e-05, 5.041700000000052e-05, 5.004200000000014e-05, 5.008299999999938e-05, 4.976400000000075e-05, 4.970800000000247e-05, 4.9945000000002626e-05, 4.976400000000075e-05, 4.988900000000088e-05, 4.994499999999916e-05, 5.012499999999809e-05, 5.037500000000181e-05, 4.9959000000002196e-05, 5.036099999999877e-05, 5.006899999999981e-05, 4.95270000000006e-05, 5.005500000000024e-05, 5.0486999999998367e-05, 4.96940000000029e-05, 4.972199999999857e-05, 5.02079999999995e-05, 5.049999999999846e-05, 4.986099999999827e-05, 4.958299999999888e-05, 4.9707999999999e-05, 4.962500000000106e-05, 5.023599999999864e-05, 5.026400000000125e-05, 5.00279999999971e-05, 5.03469999999992e-05, 4.955599999999921e-05, 4.98469999999987e-05, 5.013900000000113e-05, 4.981899999999956e-05, 5.03339999999991e-05, 5.018099999999984e-05, 5.023600000000211e-05]</msg>
<status status="PASS" starttime="20201030 15:55:28.966" endtime="20201030 15:55:28.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.961" endtime="20201030 15:55:28.969"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:28.973" endtime="20201030 15:55:28.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.972" endtime="20201030 15:55:28.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.970" endtime="20201030 15:55:28.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.612" endtime="20201030 15:55:28.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.612" endtime="20201030 15:55:28.994"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.003" endtime="20201030 15:55:29.019"></status>
</kw>
<msg timestamp="20201030 15:55:29.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.001" endtime="20201030 15:55:29.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.020" endtime="20201030 15:55:29.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.023" endtime="20201030 15:55:29.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.998" endtime="20201030 15:55:29.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.996" endtime="20201030 15:55:29.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.032" endtime="20201030 15:55:29.316"></status>
</kw>
<msg timestamp="20201030 15:55:29.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021903694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021954986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:29.031" endtime="20201030 15:55:29.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021903694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021954986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:29.320" endtime="20201030 15:55:29.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.328" endtime="20201030 15:55:29.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.028" endtime="20201030 15:55:29.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.026" endtime="20201030 15:55:29.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:29.335" level="INFO">${RESULT} = [{'diff': 5.129199999999792e-05}, {'diff': 5.095899999999973e-05}, {'diff': 5.11669999999978e-05}, {'diff': 5.126300000000278e-05}, {'diff': 5.080600000000046e-05}, {'diff': 5.051399999999803e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:29.332" endtime="20201030 15:55:29.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:29.340" level="INFO">${ACCURACY} = {'diff': [5.129199999999792e-05, 5.095899999999973e-05, 5.11669999999978e-05, 5.126300000000278e-05, 5.080600000000046e-05, 5.051399999999803e-05, 5.098600000000286e-05, 5.112499999999909e-05, 5.12769...</msg>
<status status="PASS" starttime="20201030 15:55:29.336" endtime="20201030 15:55:29.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.345" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 15:55:29.344" endtime="20201030 15:55:29.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.347" level="INFO">VALUE: [5.129199999999792e-05, 5.095899999999973e-05, 5.11669999999978e-05, 5.126300000000278e-05, 5.080600000000046e-05, 5.051399999999803e-05, 5.098600000000286e-05, 5.112499999999909e-05, 5.127699999999888e-05, 5.155500000000174e-05, 5.06669999999973e-05, 5.098599999999939e-05, 5.093000000000111e-05, 5.149999999999946e-05, 5.1014000000002e-05, 5.093000000000111e-05, 5.055500000000074e-05, 5.122200000000007e-05, 5.059699999999945e-05, 5.154200000000164e-05, 5.091700000000102e-05, 5.109699999999995e-05, 5.101399999999853e-05, 5.137500000000281e-05, 5.177799999999885e-05, 5.063900000000163e-05, 5.058400000000282e-05, 5.120899999999998e-05, 5.127700000000235e-05, 5.119500000000041e-05, 5.137499999999934e-05, 5.123599999999964e-05, 5.141699999999805e-05, 5.106900000000081e-05, 5.08469999999997e-05, 5.094400000000068e-05, 5.086099999999927e-05, 5.109699999999995e-05, 5.05409999999977e-05, 5.159700000000045e-05, 5.097199999999982e-05, 5.124999999999921e-05, 5.124999999999921e-05, 5.073599999999914e-05, 5.172200000000057e-05, 5.090300000000145e-05, 5.051399999999803e-05, 5.054199999999717e-05, 5.140299999999848e-05, 5.098599999999939e-05]</msg>
<status status="PASS" starttime="20201030 15:55:29.346" endtime="20201030 15:55:29.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.341" endtime="20201030 15:55:29.349"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:29.352" endtime="20201030 15:55:29.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.351" endtime="20201030 15:55:29.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.349" endtime="20201030 15:55:29.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.995" endtime="20201030 15:55:29.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.994" endtime="20201030 15:55:29.373"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.382" endtime="20201030 15:55:29.398"></status>
</kw>
<msg timestamp="20201030 15:55:29.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.380" endtime="20201030 15:55:29.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.400" endtime="20201030 15:55:29.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.402" endtime="20201030 15:55:29.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.377" endtime="20201030 15:55:29.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.375" endtime="20201030 15:55:29.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.411" endtime="20201030 15:55:29.699"></status>
</kw>
<msg timestamp="20201030 15:55:29.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021685847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021738347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:29.410" endtime="20201030 15:55:29.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021685847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021738347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:29.703" endtime="20201030 15:55:29.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.711" endtime="20201030 15:55:29.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.407" endtime="20201030 15:55:29.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.406" endtime="20201030 15:55:29.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:29.718" level="INFO">${RESULT} = [{'diff': 5.250000000000046e-05}, {'diff': 5.191699999999855e-05}, {'diff': 5.227800000000282e-05}, {'diff': 5.208400000000085e-05}, {'diff': 5.180599999999799e-05}, {'diff': 5.1651999999999254e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:29.715" endtime="20201030 15:55:29.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:29.722" level="INFO">${ACCURACY} = {'diff': [5.250000000000046e-05, 5.191699999999855e-05, 5.227800000000282e-05, 5.208400000000085e-05, 5.180599999999799e-05, 5.1651999999999254e-05, 5.168099999999787e-05, 5.220900000000098e-05, 5.177...</msg>
<status status="PASS" starttime="20201030 15:55:29.719" endtime="20201030 15:55:29.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.727" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 15:55:29.726" endtime="20201030 15:55:29.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.730" level="INFO">VALUE: [5.250000000000046e-05, 5.191699999999855e-05, 5.227800000000282e-05, 5.208400000000085e-05, 5.180599999999799e-05, 5.1651999999999254e-05, 5.168099999999787e-05, 5.220900000000098e-05, 5.177799999999885e-05, 5.2415999999999574e-05, 5.226300000000031e-05, 5.234699999999773e-05, 5.1666000000002293e-05, 5.1901999999999504e-05, 5.248600000000089e-05, 5.243100000000209e-05, 5.172200000000057e-05, 5.154199999999817e-05, 5.234699999999773e-05, 5.205500000000224e-05, 5.155499999999827e-05, 5.172200000000057e-05, 5.216700000000227e-05, 5.161100000000002e-05, 5.280599999999899e-05, 5.233299999999816e-05, 5.213899999999966e-05, 5.23340000000011e-05, 5.208399999999738e-05, 5.191700000000202e-05, 5.208399999999738e-05, 5.225000000000021e-05, 5.225000000000021e-05, 5.155600000000121e-05, 5.240299999999948e-05, 5.238899999999991e-05, 5.236100000000077e-05, 5.199999999999996e-05, 5.152699999999913e-05, 5.225000000000021e-05, 5.231899999999859e-05, 5.23609999999973e-05, 5.154199999999817e-05, 5.2429999999999144e-05, 5.231899999999859e-05, 5.173600000000014e-05, 5.218099999999837e-05, 5.241700000000252e-05, 5.161100000000002e-05, 5.262500000000059e-05]</msg>
<status status="PASS" starttime="20201030 15:55:29.728" endtime="20201030 15:55:29.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.723" endtime="20201030 15:55:29.731"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:29.735" endtime="20201030 15:55:29.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.733" endtime="20201030 15:55:29.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.732" endtime="20201030 15:55:29.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.374" endtime="20201030 15:55:29.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.373" endtime="20201030 15:55:29.756"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.765" endtime="20201030 15:55:29.782"></status>
</kw>
<msg timestamp="20201030 15:55:29.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.763" endtime="20201030 15:55:29.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.784" endtime="20201030 15:55:29.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.786" endtime="20201030 15:55:29.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.760" endtime="20201030 15:55:29.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.758" endtime="20201030 15:55:29.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.795" endtime="20201030 15:55:30.082"></status>
</kw>
<msg timestamp="20201030 15:55:30.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022843319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022896083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:29.794" endtime="20201030 15:55:30.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022843319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022896083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:30.086" endtime="20201030 15:55:30.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.094" endtime="20201030 15:55:30.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.791" endtime="20201030 15:55:30.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.789" endtime="20201030 15:55:30.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:30.101" level="INFO">${RESULT} = [{'diff': 5.276400000000028e-05}, {'diff': 5.265299999999973e-05}, {'diff': 5.279199999999942e-05}, {'diff': 5.338900000000091e-05}, {'diff': 5.269499999999844e-05}, {'diff': 5.251400000000003e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:30.098" endtime="20201030 15:55:30.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:30.105" level="INFO">${ACCURACY} = {'diff': [5.276400000000028e-05, 5.265299999999973e-05, 5.279199999999942e-05, 5.338900000000091e-05, 5.269499999999844e-05, 5.251400000000003e-05, 5.286100000000127e-05, 5.265299999999973e-05, 5.2929...</msg>
<status status="PASS" starttime="20201030 15:55:30.102" endtime="20201030 15:55:30.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.110" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 15:55:30.109" endtime="20201030 15:55:30.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.112" level="INFO">VALUE: [5.276400000000028e-05, 5.265299999999973e-05, 5.279199999999942e-05, 5.338900000000091e-05, 5.269499999999844e-05, 5.251400000000003e-05, 5.286100000000127e-05, 5.265299999999973e-05, 5.2929999999999644e-05, 5.3666000000000824e-05, 5.301400000000053e-05, 5.297200000000182e-05, 5.258300000000188e-05, 5.312499999999762e-05, 5.358299999999941e-05, 5.2707999999998534e-05, 5.340300000000048e-05, 5.2943999999999214e-05, 5.337500000000134e-05, 5.354200000000017e-05, 5.3221999999998604e-05, 5.323600000000164e-05, 5.3263999999997313e-05, 5.315300000000023e-05, 5.305599999999924e-05, 5.300000000000096e-05, 5.3249999999997744e-05, 5.337499999999787e-05, 5.2902000000000504e-05, 5.3527999999997133e-05, 5.305599999999924e-05, 5.3402000000001004e-05, 5.300000000000096e-05, 5.351300000000156e-05, 5.305599999999924e-05, 5.312500000000109e-05, 5.312499999999762e-05, 5.3152000000000754e-05, 5.286100000000127e-05, 5.308299999999891e-05, 5.250000000000046e-05, 5.262500000000059e-05, 5.33470000000022e-05, 5.2721999999998104e-05, 5.3430000000000144e-05, 5.291699999999955e-05, 5.276400000000028e-05, 5.312500000000109e-05, 5.350000000000146e-05, 5.375000000000171e-05]</msg>
<status status="PASS" starttime="20201030 15:55:30.111" endtime="20201030 15:55:30.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.106" endtime="20201030 15:55:30.118"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:30.122" endtime="20201030 15:55:30.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.121" endtime="20201030 15:55:30.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.119" endtime="20201030 15:55:30.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.757" endtime="20201030 15:55:30.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.756" endtime="20201030 15:55:30.143"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.152" endtime="20201030 15:55:30.169"></status>
</kw>
<msg timestamp="20201030 15:55:30.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.150" endtime="20201030 15:55:30.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.171" endtime="20201030 15:55:30.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.173" endtime="20201030 15:55:30.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.147" endtime="20201030 15:55:30.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.145" endtime="20201030 15:55:30.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.182" endtime="20201030 15:55:30.468"></status>
</kw>
<msg timestamp="20201030 15:55:30.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021814778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021868597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:30.181" endtime="20201030 15:55:30.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021814778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021868597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:30.472" endtime="20201030 15:55:30.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.480" endtime="20201030 15:55:30.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.178" endtime="20201030 15:55:30.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.177" endtime="20201030 15:55:30.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:30.487" level="INFO">${RESULT} = [{'diff': 5.381900000000009e-05}, {'diff': 5.359800000000192e-05}, {'diff': 5.4485999999999424e-05}, {'diff': 5.373699999999815e-05}, {'diff': 5.444500000000019e-05}, {'diff': 5.447299999999933e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:30.484" endtime="20201030 15:55:30.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:30.492" level="INFO">${ACCURACY} = {'diff': [5.381900000000009e-05, 5.359800000000192e-05, 5.4485999999999424e-05, 5.373699999999815e-05, 5.444500000000019e-05, 5.447299999999933e-05, 5.376299999999834e-05, 5.4249999999998744e-05, 5.40...</msg>
<status status="PASS" starttime="20201030 15:55:30.488" endtime="20201030 15:55:30.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.497" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 15:55:30.496" endtime="20201030 15:55:30.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.499" level="INFO">VALUE: [5.381900000000009e-05, 5.359800000000192e-05, 5.4485999999999424e-05, 5.373699999999815e-05, 5.444500000000019e-05, 5.447299999999933e-05, 5.376299999999834e-05, 5.4249999999998744e-05, 5.402700000000163e-05, 5.4735999999999674e-05, 5.35410000000007e-05, 5.347200000000232e-05, 5.381900000000009e-05, 5.429100000000145e-05, 5.400000000000196e-05, 5.400000000000196e-05, 5.391700000000055e-05, 5.358299999999941e-05, 5.368099999999987e-05, 5.408299999999991e-05, 5.413899999999819e-05, 5.3721999999999104e-05, 5.363900000000116e-05, 5.437499999999887e-05, 5.394499999999969e-05, 5.359800000000192e-05, 5.358400000000235e-05, 5.35410000000007e-05, 5.413899999999819e-05, 5.461100000000302e-05, 5.356999999999931e-05, 5.388900000000141e-05, 5.38479999999987e-05, 5.4430000000001144e-05, 5.4221999999999604e-05, 5.387499999999837e-05, 5.408299999999991e-05, 5.390300000000098e-05, 5.433300000000016e-05, 5.3944000000000214e-05, 5.4221999999999604e-05, 5.4013999999998064e-05, 5.412499999999862e-05, 5.358300000000288e-05, 5.468100000000087e-05, 5.384699999999923e-05, 5.443100000000062e-05, 5.380599999999999e-05, 5.411100000000252e-05, 5.443100000000062e-05]</msg>
<status status="PASS" starttime="20201030 15:55:30.498" endtime="20201030 15:55:30.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.493" endtime="20201030 15:55:30.501"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:30.504" endtime="20201030 15:55:30.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.503" endtime="20201030 15:55:30.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.502" endtime="20201030 15:55:30.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.144" endtime="20201030 15:55:30.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.143" endtime="20201030 15:55:30.525"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.534" endtime="20201030 15:55:30.551"></status>
</kw>
<msg timestamp="20201030 15:55:30.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.532" endtime="20201030 15:55:30.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.553" endtime="20201030 15:55:30.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.555" endtime="20201030 15:55:30.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.530" endtime="20201030 15:55:30.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.528" endtime="20201030 15:55:30.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.564" endtime="20201030 15:55:30.853"></status>
</kw>
<msg timestamp="20201030 15:55:30.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022075333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02213075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:30.563" endtime="20201030 15:55:30.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022075333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02213075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:30.858" endtime="20201030 15:55:30.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.866" endtime="20201030 15:55:30.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.560" endtime="20201030 15:55:30.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.558" endtime="20201030 15:55:30.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:30.872" level="INFO">${RESULT} = [{'diff': 5.541700000000205e-05}, {'diff': 5.455500000000127e-05}, {'diff': 5.48609999999998e-05}, {'diff': 5.508300000000091e-05}, {'diff': 5.532000000000106e-05}, {'diff': 5.5263999999999314e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:30.869" endtime="20201030 15:55:30.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:30.877" level="INFO">${ACCURACY} = {'diff': [5.541700000000205e-05, 5.455500000000127e-05, 5.48609999999998e-05, 5.508300000000091e-05, 5.532000000000106e-05, 5.5263999999999314e-05, 5.5041999999998203e-05, 5.48609999999998e-05, 5.5417...</msg>
<status status="PASS" starttime="20201030 15:55:30.873" endtime="20201030 15:55:30.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.881" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 15:55:30.880" endtime="20201030 15:55:30.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.883" level="INFO">VALUE: [5.541700000000205e-05, 5.455500000000127e-05, 5.48609999999998e-05, 5.508300000000091e-05, 5.532000000000106e-05, 5.5263999999999314e-05, 5.5041999999998203e-05, 5.48609999999998e-05, 5.541700000000205e-05, 5.544500000000119e-05, 5.462499999999912e-05, 5.512499999999962e-05, 5.534699999999726e-05, 5.459699999999998e-05, 5.507000000000081e-05, 5.4722000000000104e-05, 5.523699999999965e-05, 5.511100000000005e-05, 5.45280000000016e-05, 5.529200000000192e-05, 5.51809999999979e-05, 5.455600000000074e-05, 5.507000000000081e-05, 5.4637999999999215e-05, 5.50280000000021e-05, 5.509799999999995e-05, 5.511100000000005e-05, 5.459699999999998e-05, 5.4887999999999465e-05, 5.5443999999998245e-05, 5.538899999999944e-05, 5.4749999999999244e-05, 5.5193999999997995e-05, 5.5429999999998675e-05, 5.500000000000296e-05, 5.491700000000155e-05, 5.516699999999833e-05, 5.5429999999998675e-05, 5.482000000000056e-05, 5.537499999999987e-05, 5.4972000000000354e-05, 5.4749999999999244e-05, 5.46670000000013e-05, 5.5277999999998884e-05, 5.565299999999926e-05, 5.511100000000005e-05, 5.504200000000167e-05, 5.487499999999937e-05, 5.470900000000001e-05, 5.487499999999937e-05]</msg>
<status status="PASS" starttime="20201030 15:55:30.882" endtime="20201030 15:55:30.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.877" endtime="20201030 15:55:30.885"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:30.889" endtime="20201030 15:55:30.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.887" endtime="20201030 15:55:30.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.886" endtime="20201030 15:55:30.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.526" endtime="20201030 15:55:30.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.525" endtime="20201030 15:55:30.910"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.919" endtime="20201030 15:55:30.936"></status>
</kw>
<msg timestamp="20201030 15:55:30.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.917" endtime="20201030 15:55:30.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.938" endtime="20201030 15:55:30.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.941" endtime="20201030 15:55:30.942"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.915" endtime="20201030 15:55:30.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.912" endtime="20201030 15:55:30.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.950" endtime="20201030 15:55:31.244"></status>
</kw>
<msg timestamp="20201030 15:55:31.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023390417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023446708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:30.948" endtime="20201030 15:55:31.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023390417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023446708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.254" endtime="20201030 15:55:31.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.273" endtime="20201030 15:55:31.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.946" endtime="20201030 15:55:31.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.944" endtime="20201030 15:55:31.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:31.288" level="INFO">${RESULT} = [{'diff': 5.629099999999998e-05}, {'diff': 5.569500000000144e-05}, {'diff': 5.632000000000206e-05}, {'diff': 5.568100000000187e-05}, {'diff': 5.6458000000002284e-05}, {'diff': 5.6485999999997955e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:31.281" endtime="20201030 15:55:31.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:31.297" level="INFO">${ACCURACY} = {'diff': [5.629099999999998e-05, 5.569500000000144e-05, 5.632000000000206e-05, 5.568100000000187e-05, 5.6458000000002284e-05, 5.6485999999997955e-05, 5.616699999999933e-05, 5.562500000000012e-05, 5.63...</msg>
<status status="PASS" starttime="20201030 15:55:31.290" endtime="20201030 15:55:31.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.307" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 15:55:31.305" endtime="20201030 15:55:31.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.313" level="INFO">VALUE: [5.629099999999998e-05, 5.569500000000144e-05, 5.632000000000206e-05, 5.568100000000187e-05, 5.6458000000002284e-05, 5.6485999999997955e-05, 5.616699999999933e-05, 5.562500000000012e-05, 5.63480000000012e-05, 5.657000000000231e-05, 5.562500000000012e-05, 5.6179999999999425e-05, 5.562500000000012e-05, 5.5777999999999384e-05, 5.663899999999722e-05, 5.587500000000037e-05, 5.5944000000002214e-05, 5.604099999999973e-05, 5.643100000000262e-05, 5.6430000000003144e-05, 5.6041999999999204e-05, 5.5736000000000674e-05, 5.633299999999869e-05, 5.566699999999883e-05, 5.6277999999999884e-05, 5.632000000000206e-05, 5.609699999999801e-05, 5.561100000000055e-05, 5.556999999999784e-05, 5.6555999999999274e-05, 5.568100000000187e-05, 5.559800000000045e-05, 5.58749999999969e-05, 5.6000000000000494e-05, 5.6652000000000785e-05, 5.5736000000000674e-05, 5.556900000000184e-05, 5.5943999999998745e-05, 5.627700000000041e-05, 5.613900000000019e-05, 5.5750000000000244e-05, 5.5541999999998704e-05, 5.6207999999998565e-05, 5.609700000000148e-05, 5.6528000000000134e-05, 5.6014000000000064e-05, 5.634700000000173e-05, 5.5763999999999814e-05, 5.638900000000044e-05, 5.593099999999865e-05]</msg>
<status status="PASS" starttime="20201030 15:55:31.310" endtime="20201030 15:55:31.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.299" endtime="20201030 15:55:31.317"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:31.321" endtime="20201030 15:55:31.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.319" endtime="20201030 15:55:31.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.318" endtime="20201030 15:55:31.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.911" endtime="20201030 15:55:31.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.910" endtime="20201030 15:55:31.342"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.351" endtime="20201030 15:55:31.368"></status>
</kw>
<msg timestamp="20201030 15:55:31.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.349" endtime="20201030 15:55:31.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.370" endtime="20201030 15:55:31.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.372" endtime="20201030 15:55:31.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.347" endtime="20201030 15:55:31.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.344" endtime="20201030 15:55:31.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.382" endtime="20201030 15:55:31.668"></status>
</kw>
<msg timestamp="20201030 15:55:31.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022387708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022445083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.380" endtime="20201030 15:55:31.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022387708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022445083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.672" endtime="20201030 15:55:31.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.681" endtime="20201030 15:55:31.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.378" endtime="20201030 15:55:31.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.376" endtime="20201030 15:55:31.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:31.688" level="INFO">${RESULT} = [{'diff': 5.737500000000187e-05}, {'diff': 5.669499999999897e-05}, {'diff': 5.711099999999858e-05}, {'diff': 5.7249999999998274e-05}, {'diff': 5.7014000000001064e-05}, {'diff': 5.7528000000001134e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:31.684" endtime="20201030 15:55:31.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:31.693" level="INFO">${ACCURACY} = {'diff': [5.737500000000187e-05, 5.669499999999897e-05, 5.711099999999858e-05, 5.7249999999998274e-05, 5.7014000000001064e-05, 5.7528000000001134e-05, 5.7292000000000454e-05, 5.7485999999998955e-05, 5...</msg>
<status status="PASS" starttime="20201030 15:55:31.689" endtime="20201030 15:55:31.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.697" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 15:55:31.696" endtime="20201030 15:55:31.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.700" level="INFO">VALUE: [5.737500000000187e-05, 5.669499999999897e-05, 5.711099999999858e-05, 5.7249999999998274e-05, 5.7014000000001064e-05, 5.7528000000001134e-05, 5.7292000000000454e-05, 5.7485999999998955e-05, 5.7485999999998955e-05, 5.730500000000055e-05, 5.7472000000002854e-05, 5.7250000000001744e-05, 5.6778000000000384e-05, 5.687500000000137e-05, 5.730500000000055e-05, 5.715300000000076e-05, 5.687500000000137e-05, 5.71809999999999e-05, 5.691700000000008e-05, 5.706899999999987e-05, 5.6707999999999065e-05, 5.669500000000244e-05, 5.71809999999999e-05, 5.743100000000015e-05, 5.7388000000001965e-05, 5.6514000000000564e-05, 5.6985999999998455e-05, 5.6500000000000994e-05, 5.715299999999729e-05, 5.709800000000195e-05, 5.66809999999994e-05, 5.701300000000159e-05, 5.652700000000066e-05, 5.651300000000109e-05, 5.7235999999998705e-05, 5.7207999999999565e-05, 5.733299999999969e-05, 5.711099999999858e-05, 5.7416000000001105e-05, 5.6930000000000175e-05, 5.6693999999999495e-05, 5.661100000000155e-05, 5.687500000000137e-05, 5.6986000000001924e-05, 5.7485999999998955e-05, 5.7500000000001994e-05, 5.666699999999983e-05, 5.7306000000000024e-05, 5.7278000000000884e-05, 5.76810000000004e-05]</msg>
<status status="PASS" starttime="20201030 15:55:31.699" endtime="20201030 15:55:31.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.694" endtime="20201030 15:55:31.701"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:31.705" endtime="20201030 15:55:31.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.704" endtime="20201030 15:55:31.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.702" endtime="20201030 15:55:31.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.343" endtime="20201030 15:55:31.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.342" endtime="20201030 15:55:31.726"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.735" endtime="20201030 15:55:31.752"></status>
</kw>
<msg timestamp="20201030 15:55:31.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.734" endtime="20201030 15:55:31.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.753" endtime="20201030 15:55:31.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.756" endtime="20201030 15:55:31.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.731" endtime="20201030 15:55:31.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.729" endtime="20201030 15:55:31.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.765" endtime="20201030 15:55:32.061"></status>
</kw>
<msg timestamp="20201030 15:55:32.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022300194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022358194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.764" endtime="20201030 15:55:32.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022300194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022358194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:32.070" endtime="20201030 15:55:32.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.089" endtime="20201030 15:55:32.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.761" endtime="20201030 15:55:32.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.759" endtime="20201030 15:55:32.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:32.103" level="INFO">${RESULT} = [{'diff': 5.8000000000002494e-05}, {'diff': 5.806900000000087e-05}, {'diff': 5.83749999999994e-05}, {'diff': 5.7792000000000954e-05}, {'diff': 5.7750000000002244e-05}, {'diff': 5.8263999999998844e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:32.096" endtime="20201030 15:55:32.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:32.112" level="INFO">${ACCURACY} = {'diff': [5.8000000000002494e-05, 5.806900000000087e-05, 5.83749999999994e-05, 5.7792000000000954e-05, 5.7750000000002244e-05, 5.8263999999998844e-05, 5.761099999999908e-05, 5.8513999999999095e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:55:32.105" endtime="20201030 15:55:32.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.121" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 15:55:32.119" endtime="20201030 15:55:32.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.126" level="INFO">VALUE: [5.8000000000002494e-05, 5.806900000000087e-05, 5.83749999999994e-05, 5.7792000000000954e-05, 5.7750000000002244e-05, 5.8263999999998844e-05, 5.761099999999908e-05, 5.8513999999999095e-05, 5.766700000000083e-05, 5.7806000000000524e-05, 5.761099999999908e-05, 5.790300000000151e-05, 5.808300000000044e-05, 5.773700000000215e-05, 5.811100000000305e-05, 5.811099999999958e-05, 5.7666000000001355e-05, 5.812500000000262e-05, 5.7958000000000315e-05, 5.8222000000000135e-05, 5.8166000000001855e-05, 5.7778000000001384e-05, 5.786099999999933e-05, 5.8055999999997304e-05, 5.8235999999999705e-05, 5.816700000000133e-05, 5.815299999999829e-05, 5.834700000000026e-05, 5.7556000000000274e-05, 5.8222000000000135e-05, 5.820900000000004e-05, 5.7971999999999885e-05, 5.7556000000000274e-05, 5.7528000000001134e-05, 5.8042000000001204e-05, 5.8070000000000344e-05, 5.7569999999999844e-05, 5.809700000000001e-05, 5.8347999999999733e-05, 5.8472000000000385e-05, 5.7708000000000065e-05, 5.7958000000000315e-05, 5.7958000000000315e-05, 5.763900000000169e-05, 5.8444000000001245e-05, 5.8430000000001675e-05, 5.790300000000151e-05, 5.804100000000173e-05, 5.761099999999908e-05, 5.8749999999999775e-05]</msg>
<status status="PASS" starttime="20201030 15:55:32.123" endtime="20201030 15:55:32.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.114" endtime="20201030 15:55:32.128"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:32.131" endtime="20201030 15:55:32.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.130" endtime="20201030 15:55:32.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.129" endtime="20201030 15:55:32.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.727" endtime="20201030 15:55:32.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.726" endtime="20201030 15:55:32.152"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.161" endtime="20201030 15:55:32.179"></status>
</kw>
<msg timestamp="20201030 15:55:32.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.159" endtime="20201030 15:55:32.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.180" endtime="20201030 15:55:32.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.183" endtime="20201030 15:55:32.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.157" endtime="20201030 15:55:32.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.155" endtime="20201030 15:55:32.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.192" endtime="20201030 15:55:32.478"></status>
</kw>
<msg timestamp="20201030 15:55:32.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023240389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023299764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:32.190" endtime="20201030 15:55:32.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023240389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023299764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:32.482" endtime="20201030 15:55:32.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.491" endtime="20201030 15:55:32.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.188" endtime="20201030 15:55:32.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.186" endtime="20201030 15:55:32.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:32.497" level="INFO">${RESULT} = [{'diff': 5.93750000000004e-05}, {'diff': 5.930499999999908e-05}, {'diff': 5.927699999999994e-05}, {'diff': 5.936100000000083e-05}, {'diff': 5.936100000000083e-05}, {'diff': 5.9457999999998346e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:32.494" endtime="20201030 15:55:32.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:32.501" level="INFO">${ACCURACY} = {'diff': [5.93750000000004e-05, 5.930499999999908e-05, 5.927699999999994e-05, 5.936100000000083e-05, 5.936100000000083e-05, 5.9457999999998346e-05, 5.9500000000000525e-05, 5.886100000000033e-05, 5.918...</msg>
<status status="PASS" starttime="20201030 15:55:32.498" endtime="20201030 15:55:32.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.506" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 15:55:32.505" endtime="20201030 15:55:32.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.508" level="INFO">VALUE: [5.93750000000004e-05, 5.930499999999908e-05, 5.927699999999994e-05, 5.936100000000083e-05, 5.936100000000083e-05, 5.9457999999998346e-05, 5.9500000000000525e-05, 5.886100000000033e-05, 5.918099999999843e-05, 5.9277999999999414e-05, 5.9056000000001774e-05, 5.8958000000001315e-05, 5.8805999999998054e-05, 5.9056000000001774e-05, 5.9319999999998124e-05, 5.8583999999996944e-05, 5.9291999999998984e-05, 5.9291999999998984e-05, 5.9097999999997014e-05, 5.881899999999815e-05, 5.920900000000104e-05, 5.948700000000043e-05, 5.9179999999998956e-05, 5.9193999999998526e-05, 5.9471999999997915e-05, 5.9500000000000525e-05, 5.9486000000000955e-05, 5.8736000000000205e-05, 5.8735999999996735e-05, 5.955499999999933e-05, 5.933300000000169e-05, 5.8833999999997194e-05, 5.883299999999772e-05, 5.9000000000000025e-05, 5.8791999999998484e-05, 5.940299999999954e-05, 5.93750000000004e-05, 5.9222000000001135e-05, 5.863899999999922e-05, 5.886100000000033e-05, 5.8791999999998484e-05, 5.91810000000019e-05, 5.862499999999965e-05, 5.866700000000183e-05, 5.979100000000001e-05, 5.8763999999999345e-05, 5.9429999999999206e-05, 5.9500000000000525e-05, 5.912500000000015e-05, 5.879099999999901e-05]</msg>
<status status="PASS" starttime="20201030 15:55:32.507" endtime="20201030 15:55:32.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.502" endtime="20201030 15:55:32.511"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:32.514" endtime="20201030 15:55:32.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.513" endtime="20201030 15:55:32.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.512" endtime="20201030 15:55:32.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.153" endtime="20201030 15:55:32.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.153" endtime="20201030 15:55:32.535"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.544" endtime="20201030 15:55:32.561"></status>
</kw>
<msg timestamp="20201030 15:55:32.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.542" endtime="20201030 15:55:32.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.563" endtime="20201030 15:55:32.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.565" endtime="20201030 15:55:32.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.540" endtime="20201030 15:55:32.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.538" endtime="20201030 15:55:32.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.574" endtime="20201030 15:55:32.859"></status>
</kw>
<msg timestamp="20201030 15:55:32.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021766986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021827333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:32.573" endtime="20201030 15:55:32.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021766986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021827333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:32.863" endtime="20201030 15:55:32.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.872" endtime="20201030 15:55:32.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.570" endtime="20201030 15:55:32.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.568" endtime="20201030 15:55:32.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:32.878" level="INFO">${RESULT} = [{'diff': 6.034700000000226e-05}, {'diff': 5.988900000000047e-05}, {'diff': 5.9805999999999054e-05}, {'diff': 6.0097999999998014e-05}, {'diff': 6.0235999999998235e-05}, {'diff': 6.0278000000000415e-05...</msg>
<status status="PASS" starttime="20201030 15:55:32.875" endtime="20201030 15:55:32.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:32.883" level="INFO">${ACCURACY} = {'diff': [6.034700000000226e-05, 5.988900000000047e-05, 5.9805999999999054e-05, 6.0097999999998014e-05, 6.0235999999998235e-05, 6.0278000000000415e-05, 5.9750000000000775e-05, 5.95689999999989e-05, 6....</msg>
<status status="PASS" starttime="20201030 15:55:32.879" endtime="20201030 15:55:32.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.888" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 15:55:32.887" endtime="20201030 15:55:32.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.890" level="INFO">VALUE: [6.034700000000226e-05, 5.988900000000047e-05, 5.9805999999999054e-05, 6.0097999999998014e-05, 6.0235999999998235e-05, 6.0278000000000415e-05, 5.9750000000000775e-05, 5.95689999999989e-05, 6.030500000000008e-05, 5.979100000000001e-05, 6.0221999999998665e-05, 5.9985999999997985e-05, 5.981899999999915e-05, 6.03750000000014e-05, 6.00689999999994e-05, 6.015300000000029e-05, 6.0207999999999096e-05, 6.0250000000001275e-05, 5.9486000000000955e-05, 6.0235999999998235e-05, 6.0207999999999096e-05, 6.008300000000244e-05, 6.0305999999999554e-05, 6.03750000000014e-05, 5.991700000000308e-05, 5.9569999999998374e-05, 6.045899999999882e-05, 5.9597999999997514e-05, 5.965299999999979e-05, 6.0443999999999776e-05, 6.0084000000001914e-05, 5.9888000000000996e-05, 5.981900000000262e-05, 5.9679999999999456e-05, 6.059699999999904e-05, 5.991699999999961e-05, 6.00689999999994e-05, 6.0179999999999956e-05, 5.956900000000237e-05, 5.9972000000001885e-05, 6.0041999999999734e-05, 5.9791999999999484e-05, 5.991699999999961e-05, 5.9958000000002315e-05, 6.008299999999897e-05, 6.0236000000001705e-05, 6.0305999999999554e-05, 6.040300000000054e-05, 6.016699999999986e-05, 5.986100000000133e-05]</msg>
<status status="PASS" starttime="20201030 15:55:32.889" endtime="20201030 15:55:32.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.884" endtime="20201030 15:55:32.892"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:32.895" endtime="20201030 15:55:32.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.894" endtime="20201030 15:55:32.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.893" endtime="20201030 15:55:32.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.536" endtime="20201030 15:55:32.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.535" endtime="20201030 15:55:32.916"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.925" endtime="20201030 15:55:32.943"></status>
</kw>
<msg timestamp="20201030 15:55:32.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.923" endtime="20201030 15:55:32.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.944" endtime="20201030 15:55:32.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.947" endtime="20201030 15:55:32.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.921" endtime="20201030 15:55:32.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.919" endtime="20201030 15:55:32.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.956" endtime="20201030 15:55:33.243"></status>
</kw>
<msg timestamp="20201030 15:55:33.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022125847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022187056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:32.954" endtime="20201030 15:55:33.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022125847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022187056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:33.247" endtime="20201030 15:55:33.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.255" endtime="20201030 15:55:33.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.952" endtime="20201030 15:55:33.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.950" endtime="20201030 15:55:33.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:33.262" level="INFO">${RESULT} = [{'diff': 6.120899999999957e-05}, {'diff': 6.138900000000197e-05}, {'diff': 6.0721999999999166e-05}, {'diff': 6.0555999999999804e-05}, {'diff': 6.136099999999936e-05}, {'diff': 6.0444000000003245e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:33.259" endtime="20201030 15:55:33.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:33.266" level="INFO">${ACCURACY} = {'diff': [6.120899999999957e-05, 6.138900000000197e-05, 6.0721999999999166e-05, 6.0555999999999804e-05, 6.136099999999936e-05, 6.0444000000003245e-05, 6.111100000000258e-05, 6.116700000000086e-05, 6.0...</msg>
<status status="PASS" starttime="20201030 15:55:33.263" endtime="20201030 15:55:33.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.271" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 15:55:33.270" endtime="20201030 15:55:33.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.273" level="INFO">VALUE: [6.120899999999957e-05, 6.138900000000197e-05, 6.0721999999999166e-05, 6.0555999999999804e-05, 6.136099999999936e-05, 6.0444000000003245e-05, 6.111100000000258e-05, 6.116700000000086e-05, 6.0569999999999374e-05, 6.13339999999997e-05, 6.0888999999998e-05, 6.115299999999782e-05, 6.1013999999998125e-05, 6.145899999999982e-05, 6.111099999999911e-05, 6.0542000000000235e-05, 6.088900000000147e-05, 6.14439999999973e-05, 6.119400000000053e-05, 6.173599999999974e-05, 6.122199999999967e-05, 6.0735999999998735e-05, 6.129099999999804e-05, 6.083299999999972e-05, 6.137499999999893e-05, 6.0792000000000485e-05, 6.140300000000154e-05, 6.108299999999997e-05, 6.108299999999997e-05, 6.158300000000047e-05, 6.140299999999807e-05, 6.059699999999904e-05, 6.108400000000291e-05, 6.136099999999936e-05, 6.0820000000003094e-05, 6.0749999999998305e-05, 6.130600000000055e-05, 6.144500000000025e-05, 6.0708000000003065e-05, 6.084699999999929e-05, 6.129099999999804e-05, 6.113799999999878e-05, 6.0915999999997666e-05, 6.0901999999998097e-05, 6.084699999999929e-05, 6.083299999999972e-05, 6.090299999999757e-05, 6.127800000000141e-05, 6.116700000000086e-05, 6.17499999999993e-05]</msg>
<status status="PASS" starttime="20201030 15:55:33.272" endtime="20201030 15:55:33.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.267" endtime="20201030 15:55:33.275"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:33.278" endtime="20201030 15:55:33.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.277" endtime="20201030 15:55:33.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.276" endtime="20201030 15:55:33.299"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.917" endtime="20201030 15:55:33.299"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.917" endtime="20201030 15:55:33.299"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.308" endtime="20201030 15:55:33.326"></status>
</kw>
<msg timestamp="20201030 15:55:33.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.306" endtime="20201030 15:55:33.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.328" endtime="20201030 15:55:33.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.330" endtime="20201030 15:55:33.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.304" endtime="20201030 15:55:33.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.301" endtime="20201030 15:55:33.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.339" endtime="20201030 15:55:33.624"></status>
</kw>
<msg timestamp="20201030 15:55:33.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02278125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022843764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:33.338" endtime="20201030 15:55:33.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02278125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022843764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:33.629" endtime="20201030 15:55:33.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.637" endtime="20201030 15:55:33.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.335" endtime="20201030 15:55:33.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.333" endtime="20201030 15:55:33.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:33.643" level="INFO">${RESULT} = [{'diff': 6.251399999999963e-05}, {'diff': 6.237499999999993e-05}, {'diff': 6.245900000000082e-05}, {'diff': 6.177800000000191e-05}, {'diff': 6.180600000000105e-05}, {'diff': 6.173700000000268e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:33.640" endtime="20201030 15:55:33.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:33.648" level="INFO">${ACCURACY} = {'diff': [6.251399999999963e-05, 6.237499999999993e-05, 6.245900000000082e-05, 6.177800000000191e-05, 6.180600000000105e-05, 6.173700000000268e-05, 6.22629999999999e-05, 6.2195000000001e-05, 6.1736000...</msg>
<status status="PASS" starttime="20201030 15:55:33.645" endtime="20201030 15:55:33.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.652" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 15:55:33.651" endtime="20201030 15:55:33.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.655" level="INFO">VALUE: [6.251399999999963e-05, 6.237499999999993e-05, 6.245900000000082e-05, 6.177800000000191e-05, 6.180600000000105e-05, 6.173700000000268e-05, 6.22629999999999e-05, 6.2195000000001e-05, 6.17360000000032e-05, 6.222200000000067e-05, 6.161100000000308e-05, 6.169399999999756e-05, 6.166600000000189e-05, 6.229199999999852e-05, 6.208300000000097e-05, 6.17080000000006e-05, 6.172200000000017e-05, 6.159700000000004e-05, 6.233300000000122e-05, 6.237499999999993e-05, 6.17080000000006e-05, 6.202800000000216e-05, 6.15560000000008e-05, 6.190300000000204e-05, 6.277699999999997e-05, 6.170900000000007e-05, 6.223600000000024e-05, 6.154100000000176e-05, 6.229199999999852e-05, 6.188799999999953e-05, 6.209700000000054e-05, 6.234800000000026e-05, 6.159700000000004e-05, 6.162499999999918e-05, 6.227800000000241e-05, 6.17080000000006e-05, 6.162499999999918e-05, 6.169400000000103e-05, 6.219399999999806e-05, 6.23889999999995e-05, 6.22499999999998e-05, 6.22080000000011e-05, 6.165300000000179e-05, 6.204200000000173e-05, 6.205599999999784e-05, 6.197200000000042e-05, 6.243099999999821e-05, 6.194500000000075e-05, 6.159700000000004e-05, 6.222300000000014e-05]</msg>
<status status="PASS" starttime="20201030 15:55:33.653" endtime="20201030 15:55:33.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.649" endtime="20201030 15:55:33.657"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:33.661" endtime="20201030 15:55:33.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.659" endtime="20201030 15:55:33.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.658" endtime="20201030 15:55:33.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.300" endtime="20201030 15:55:33.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.299" endtime="20201030 15:55:33.681"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.690" endtime="20201030 15:55:33.708"></status>
</kw>
<msg timestamp="20201030 15:55:33.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.689" endtime="20201030 15:55:33.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.709" endtime="20201030 15:55:33.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.712" endtime="20201030 15:55:33.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.686" endtime="20201030 15:55:33.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.684" endtime="20201030 15:55:33.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.721" endtime="20201030 15:55:34.007"></status>
</kw>
<msg timestamp="20201030 15:55:34.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022144931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022208111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:33.719" endtime="20201030 15:55:34.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022144931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022208111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.011" endtime="20201030 15:55:34.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.019" endtime="20201030 15:55:34.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.717" endtime="20201030 15:55:34.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.715" endtime="20201030 15:55:34.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:34.026" level="INFO">${RESULT} = [{'diff': 6.317999999999949e-05}, {'diff': 6.298600000000099e-05}, {'diff': 6.281899999999868e-05}, {'diff': 6.287500000000043e-05}, {'diff': 6.333299999999875e-05}, {'diff': 6.281899999999868e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:34.023" endtime="20201030 15:55:34.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:34.031" level="INFO">${ACCURACY} = {'diff': [6.317999999999949e-05, 6.298600000000099e-05, 6.281899999999868e-05, 6.287500000000043e-05, 6.333299999999875e-05, 6.281899999999868e-05, 6.295799999999838e-05, 6.318000000000296e-05, 6.2597...</msg>
<status status="PASS" starttime="20201030 15:55:34.027" endtime="20201030 15:55:34.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.035" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 15:55:34.034" endtime="20201030 15:55:34.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.038" level="INFO">VALUE: [6.317999999999949e-05, 6.298600000000099e-05, 6.281899999999868e-05, 6.287500000000043e-05, 6.333299999999875e-05, 6.281899999999868e-05, 6.295799999999838e-05, 6.318000000000296e-05, 6.259700000000104e-05, 6.350000000000106e-05, 6.30829999999985e-05, 6.336100000000136e-05, 6.27500000000003e-05, 6.248600000000049e-05, 6.295799999999838e-05, 6.298600000000099e-05, 6.318099999999896e-05, 6.352700000000072e-05, 6.25699999999979e-05, 6.36950000000025e-05, 6.295900000000132e-05, 6.343100000000268e-05, 6.28340000000012e-05, 6.283300000000172e-05, 6.309700000000154e-05, 6.286100000000086e-05, 6.267999999999899e-05, 6.256899999999843e-05, 6.336099999999789e-05, 6.373600000000174e-05, 6.32500000000008e-05, 6.342999999999974e-05, 6.297200000000142e-05, 6.327799999999995e-05, 6.342999999999974e-05, 6.291699999999914e-05, 6.290299999999957e-05, 6.272200000000117e-05, 6.348600000000149e-05, 6.330599999999909e-05, 6.32500000000008e-05, 6.344499999999878e-05, 6.318100000000243e-05, 6.286100000000086e-05, 6.287500000000043e-05, 6.251399999999963e-05, 6.327799999999995e-05, 6.308399999999798e-05, 6.272200000000117e-05, 6.34439999999993e-05]</msg>
<status status="PASS" starttime="20201030 15:55:34.037" endtime="20201030 15:55:34.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.032" endtime="20201030 15:55:34.039"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:34.043" endtime="20201030 15:55:34.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.042" endtime="20201030 15:55:34.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.040" endtime="20201030 15:55:34.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.682" endtime="20201030 15:55:34.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.682" endtime="20201030 15:55:34.064"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.072" endtime="20201030 15:55:34.090"></status>
</kw>
<msg timestamp="20201030 15:55:34.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.071" endtime="20201030 15:55:34.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.092" endtime="20201030 15:55:34.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.094" endtime="20201030 15:55:34.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.068" endtime="20201030 15:55:34.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.066" endtime="20201030 15:55:34.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.103" endtime="20201030 15:55:34.391"></status>
</kw>
<msg timestamp="20201030 15:55:34.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021908278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021972028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.102" endtime="20201030 15:55:34.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021908278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021972028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.395" endtime="20201030 15:55:34.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.403" endtime="20201030 15:55:34.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.099" endtime="20201030 15:55:34.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.097" endtime="20201030 15:55:34.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:34.410" level="INFO">${RESULT} = [{'diff': 6.37500000000013e-05}, {'diff': 6.345800000000235e-05}, {'diff': 6.369400000000303e-05}, {'diff': 6.383300000000272e-05}, {'diff': 6.393000000000024e-05}, {'diff': 6.362500000000118e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:34.407" endtime="20201030 15:55:34.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:34.414" level="INFO">${ACCURACY} = {'diff': [6.37500000000013e-05, 6.345800000000235e-05, 6.369400000000303e-05, 6.383300000000272e-05, 6.393000000000024e-05, 6.362500000000118e-05, 6.383299999999925e-05, 6.424999999999834e-05, 6.42360...</msg>
<status status="PASS" starttime="20201030 15:55:34.411" endtime="20201030 15:55:34.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.419" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 15:55:34.418" endtime="20201030 15:55:34.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.421" level="INFO">VALUE: [6.37500000000013e-05, 6.345800000000235e-05, 6.369400000000303e-05, 6.383300000000272e-05, 6.393000000000024e-05, 6.362500000000118e-05, 6.383299999999925e-05, 6.424999999999834e-05, 6.423600000000224e-05, 6.473599999999927e-05, 6.376400000000088e-05, 6.412499999999821e-05, 6.36950000000025e-05, 6.366699999999989e-05, 6.47089999999996e-05, 6.42089999999991e-05, 6.412500000000168e-05, 6.38340000000022e-05, 6.391700000000014e-05, 6.447299999999892e-05, 6.384699999999882e-05, 6.412500000000168e-05, 6.44159999999977e-05, 6.411100000000211e-05, 6.469400000000056e-05, 6.401400000000113e-05, 6.441600000000117e-05, 6.423599999999877e-05, 6.3889000000001e-05, 6.441700000000064e-05, 6.434700000000279e-05, 6.42080000000031e-05, 6.418099999999996e-05, 6.367999999999999e-05, 6.399999999999809e-05, 6.37500000000013e-05, 6.408399999999898e-05, 6.361200000000108e-05, 6.415299999999735e-05, 6.404200000000027e-05, 6.447299999999892e-05, 6.37500000000013e-05, 6.441700000000064e-05, 6.361100000000161e-05, 6.473599999999927e-05, 6.447199999999945e-05, 6.350000000000106e-05, 6.406899999999993e-05, 6.419400000000006e-05, 6.434699999999932e-05]</msg>
<status status="PASS" starttime="20201030 15:55:34.420" endtime="20201030 15:55:34.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.415" endtime="20201030 15:55:34.422"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:34.426" endtime="20201030 15:55:34.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.425" endtime="20201030 15:55:34.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.423" endtime="20201030 15:55:34.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.065" endtime="20201030 15:55:34.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.064" endtime="20201030 15:55:34.447"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.456" endtime="20201030 15:55:34.474"></status>
</kw>
<msg timestamp="20201030 15:55:34.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.454" endtime="20201030 15:55:34.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.476" endtime="20201030 15:55:34.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.478" endtime="20201030 15:55:34.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.451" endtime="20201030 15:55:34.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.449" endtime="20201030 15:55:34.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.487" endtime="20201030 15:55:34.773"></status>
</kw>
<msg timestamp="20201030 15:55:34.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0231235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023188681, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:34.486" endtime="20201030 15:55:34.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0231235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023188681, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:34.778" endtime="20201030 15:55:34.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.786" endtime="20201030 15:55:34.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.483" endtime="20201030 15:55:34.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.481" endtime="20201030 15:55:34.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:34.792" level="INFO">${RESULT} = [{'diff': 6.518099999999749e-05}, {'diff': 6.470800000000013e-05}, {'diff': 6.541700000000164e-05}, {'diff': 6.487499999999896e-05}, {'diff': 6.468000000000099e-05}, {'diff': 6.527799999999848e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:34.789" endtime="20201030 15:55:34.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:34.796" level="INFO">${ACCURACY} = {'diff': [6.518099999999749e-05, 6.470800000000013e-05, 6.541700000000164e-05, 6.487499999999896e-05, 6.468000000000099e-05, 6.527799999999848e-05, 6.519400000000106e-05, 6.54159999999987e-05, 6.52090...</msg>
<status status="PASS" starttime="20201030 15:55:34.793" endtime="20201030 15:55:34.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.801" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 15:55:34.800" endtime="20201030 15:55:34.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.803" level="INFO">VALUE: [6.518099999999749e-05, 6.470800000000013e-05, 6.541700000000164e-05, 6.487499999999896e-05, 6.468000000000099e-05, 6.527799999999848e-05, 6.519400000000106e-05, 6.54159999999987e-05, 6.52090000000001e-05, 6.554099999999882e-05, 6.52500000000028e-05, 6.538799999999956e-05, 6.501299999999918e-05, 6.487500000000243e-05, 6.47639999999984e-05, 6.545800000000088e-05, 6.52500000000028e-05, 6.4583e-05, 6.538899999999903e-05, 6.495800000000038e-05, 6.518000000000149e-05, 6.461100000000261e-05, 6.530599999999762e-05, 6.515299999999835e-05, 6.550000000000306e-05, 6.54029999999986e-05, 6.463900000000175e-05, 6.548600000000002e-05, 6.490300000000157e-05, 6.579099999999907e-05, 6.538899999999903e-05, 6.451300000000215e-05, 6.497199999999995e-05, 6.473599999999927e-05, 6.495800000000038e-05, 6.52639999999989e-05, 6.520800000000063e-05, 6.504100000000179e-05, 6.461100000000261e-05, 6.50280000000017e-05, 6.495800000000038e-05, 6.501400000000213e-05, 6.499999999999909e-05, 6.45280000000012e-05, 6.487499999999896e-05, 6.534700000000032e-05, 6.504200000000127e-05, 6.473599999999927e-05, 6.518100000000096e-05, 6.52090000000001e-05]</msg>
<status status="PASS" starttime="20201030 15:55:34.802" endtime="20201030 15:55:34.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.797" endtime="20201030 15:55:34.806"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:34.809" endtime="20201030 15:55:34.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.808" endtime="20201030 15:55:34.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.807" endtime="20201030 15:55:34.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.448" endtime="20201030 15:55:34.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.447" endtime="20201030 15:55:34.830"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.839" endtime="20201030 15:55:34.855"></status>
</kw>
<msg timestamp="20201030 15:55:34.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.837" endtime="20201030 15:55:34.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.857" endtime="20201030 15:55:34.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.860" endtime="20201030 15:55:34.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.835" endtime="20201030 15:55:34.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.832" endtime="20201030 15:55:34.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.869" endtime="20201030 15:55:35.156"></status>
</kw>
<msg timestamp="20201030 15:55:35.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021820611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218865, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:34.867" endtime="20201030 15:55:35.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021820611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218865, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:35.160" endtime="20201030 15:55:35.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.169" endtime="20201030 15:55:35.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.865" endtime="20201030 15:55:35.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.863" endtime="20201030 15:55:35.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:35.175" level="INFO">${RESULT} = [{'diff': 6.588899999999953e-05}, {'diff': 6.5583000000001e-05}, {'diff': 6.57220000000007e-05}, {'diff': 6.579099999999907e-05}, {'diff': 6.584699999999735e-05}, {'diff': 6.627799999999948e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:55:35.172" endtime="20201030 15:55:35.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:35.181" level="INFO">${ACCURACY} = {'diff': [6.588899999999953e-05, 6.5583000000001e-05, 6.57220000000007e-05, 6.579099999999907e-05, 6.584699999999735e-05, 6.627799999999948e-05, 6.630599999999862e-05, 6.581900000000168e-05, 6.5499999...</msg>
<status status="PASS" starttime="20201030 15:55:35.176" endtime="20201030 15:55:35.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.185" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 15:55:35.184" endtime="20201030 15:55:35.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.188" level="INFO">VALUE: [6.588899999999953e-05, 6.5583000000001e-05, 6.57220000000007e-05, 6.579099999999907e-05, 6.584699999999735e-05, 6.627799999999948e-05, 6.630599999999862e-05, 6.581900000000168e-05, 6.549999999999959e-05, 6.658299999999853e-05, 6.608299999999803e-05, 6.650000000000059e-05, 6.59029999999991e-05, 6.64029999999996e-05, 6.636100000000089e-05, 6.600000000000009e-05, 6.650000000000059e-05, 6.625000000000034e-05, 6.591699999999867e-05, 6.651400000000016e-05, 6.625000000000034e-05, 6.619399999999859e-05, 6.625000000000034e-05, 6.640200000000013e-05, 6.594399999999834e-05, 6.630500000000261e-05, 6.62220000000012e-05, 6.615299999999935e-05, 6.636100000000089e-05, 6.613899999999978e-05, 6.551399999999916e-05, 6.551399999999916e-05, 6.561100000000014e-05, 6.587499999999996e-05, 6.668099999999899e-05, 6.602799999999923e-05, 6.582000000000116e-05, 6.583399999999726e-05, 6.622199999999773e-05, 6.613899999999978e-05, 6.605599999999837e-05, 6.562499999999971e-05, 6.609800000000055e-05, 6.62220000000012e-05, 6.62639999999999e-05, 6.554099999999882e-05, 6.636100000000089e-05, 6.549999999999959e-05, 6.62639999999999e-05, 6.590300000000257e-05]</msg>
<status status="PASS" starttime="20201030 15:55:35.186" endtime="20201030 15:55:35.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.181" endtime="20201030 15:55:35.202"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:35.206" endtime="20201030 15:55:35.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.205" endtime="20201030 15:55:35.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.204" endtime="20201030 15:55:35.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.831" endtime="20201030 15:55:35.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.830" endtime="20201030 15:55:35.227"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.236" endtime="20201030 15:55:35.253"></status>
</kw>
<msg timestamp="20201030 15:55:35.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.235" endtime="20201030 15:55:35.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.255" endtime="20201030 15:55:35.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.258" endtime="20201030 15:55:35.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.232" endtime="20201030 15:55:35.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.230" endtime="20201030 15:55:35.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.267" endtime="20201030 15:55:35.555"></status>
</kw>
<msg timestamp="20201030 15:55:35.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022188694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022255861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.265" endtime="20201030 15:55:35.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022188694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022255861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.559" endtime="20201030 15:55:35.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.568" endtime="20201030 15:55:35.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.263" endtime="20201030 15:55:35.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.261" endtime="20201030 15:55:35.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:35.575" level="INFO">${RESULT} = [{'diff': 6.716699999999992e-05}, {'diff': 6.688800000000106e-05}, {'diff': 6.688799999999759e-05}, {'diff': 6.675000000000084e-05}, {'diff': 6.694500000000228e-05}, {'diff': 6.680499999999964e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:35.571" endtime="20201030 15:55:35.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:35.579" level="INFO">${ACCURACY} = {'diff': [6.716699999999992e-05, 6.688800000000106e-05, 6.688799999999759e-05, 6.675000000000084e-05, 6.694500000000228e-05, 6.680499999999964e-05, 6.745799999999941e-05, 6.65280000000032e-05, 6.65409...</msg>
<status status="PASS" starttime="20201030 15:55:35.576" endtime="20201030 15:55:35.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.583" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 15:55:35.582" endtime="20201030 15:55:35.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.586" level="INFO">VALUE: [6.716699999999992e-05, 6.688800000000106e-05, 6.688799999999759e-05, 6.675000000000084e-05, 6.694500000000228e-05, 6.680499999999964e-05, 6.745799999999941e-05, 6.65280000000032e-05, 6.654099999999982e-05, 6.72220000000022e-05, 6.65419999999993e-05, 6.652799999999973e-05, 6.722199999999873e-05, 6.74030000000006e-05, 6.761100000000214e-05, 6.700000000000109e-05, 6.679199999999955e-05, 6.654200000000277e-05, 6.682000000000216e-05, 6.701400000000066e-05, 6.654200000000277e-05, 6.665299999999985e-05, 6.649999999999712e-05, 6.659700000000157e-05, 6.772199999999923e-05, 6.715200000000088e-05, 6.674999999999737e-05, 6.712500000000121e-05, 6.662500000000071e-05, 6.762500000000171e-05, 6.686099999999792e-05, 6.715300000000035e-05, 6.748600000000202e-05, 6.688900000000053e-05, 6.737500000000146e-05, 6.681899999999921e-05, 6.716699999999992e-05, 6.695799999999891e-05, 6.659800000000105e-05, 6.733400000000223e-05, 6.712499999999774e-05, 6.748599999999855e-05, 6.713900000000078e-05, 6.711099999999817e-05, 6.745899999999888e-05, 6.748599999999855e-05, 6.72640000000009e-05, 6.683300000000225e-05, 6.661100000000114e-05, 6.69160000000002e-05]</msg>
<status status="PASS" starttime="20201030 15:55:35.585" endtime="20201030 15:55:35.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.580" endtime="20201030 15:55:35.587"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:35.591" endtime="20201030 15:55:35.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.590" endtime="20201030 15:55:35.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.588" endtime="20201030 15:55:35.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.228" endtime="20201030 15:55:35.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.228" endtime="20201030 15:55:35.612"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.621" endtime="20201030 15:55:35.640"></status>
</kw>
<msg timestamp="20201030 15:55:35.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.620" endtime="20201030 15:55:35.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.641" endtime="20201030 15:55:35.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.644" endtime="20201030 15:55:35.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.617" endtime="20201030 15:55:35.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.615" endtime="20201030 15:55:35.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.653" endtime="20201030 15:55:35.939"></status>
</kw>
<msg timestamp="20201030 15:55:35.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023141972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0232105, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:35.652" endtime="20201030 15:55:35.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023141972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0232105, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:35.943" endtime="20201030 15:55:35.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.952" endtime="20201030 15:55:35.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.649" endtime="20201030 15:55:35.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.647" endtime="20201030 15:55:35.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:35.959" level="INFO">${RESULT} = [{'diff': 6.852799999999826e-05}, {'diff': 6.847199999999998e-05}, {'diff': 6.805500000000089e-05}, {'diff': 6.845800000000041e-05}, {'diff': 6.79299999999973e-05}, {'diff': 6.830499999999767e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:35.955" endtime="20201030 15:55:35.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:35.963" level="INFO">${ACCURACY} = {'diff': [6.852799999999826e-05, 6.847199999999998e-05, 6.805500000000089e-05, 6.845800000000041e-05, 6.79299999999973e-05, 6.830499999999767e-05, 6.827800000000148e-05, 6.75420000000003e-05, 6.808300...</msg>
<status status="PASS" starttime="20201030 15:55:35.960" endtime="20201030 15:55:35.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.968" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 15:55:35.967" endtime="20201030 15:55:35.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.970" level="INFO">VALUE: [6.852799999999826e-05, 6.847199999999998e-05, 6.805500000000089e-05, 6.845800000000041e-05, 6.79299999999973e-05, 6.830499999999767e-05, 6.827800000000148e-05, 6.75420000000003e-05, 6.808300000000003e-05, 6.794400000000034e-05, 6.811099999999917e-05, 6.754199999999683e-05, 6.82359999999993e-05, 6.773600000000227e-05, 6.85420000000013e-05, 6.82909999999981e-05, 6.794499999999981e-05, 6.819500000000006e-05, 6.766700000000042e-05, 6.781999999999969e-05, 6.759799999999858e-05, 6.775000000000184e-05, 6.820800000000016e-05, 6.765200000000138e-05, 6.830500000000114e-05, 6.847199999999998e-05, 6.845800000000041e-05, 6.761100000000214e-05, 6.751400000000116e-05, 6.831900000000071e-05, 6.802800000000123e-05, 6.761099999999867e-05, 6.801399999999819e-05, 6.761100000000214e-05, 6.840299999999813e-05, 6.845800000000041e-05, 6.818000000000102e-05, 6.806999999999994e-05, 6.83619999999989e-05, 6.847299999999945e-05, 6.783399999999926e-05, 6.762499999999824e-05, 6.763899999999781e-05, 6.812499999999874e-05, 6.819400000000059e-05, 6.762499999999824e-05, 6.777800000000098e-05, 6.82640000000019e-05, 6.755500000000039e-05, 6.85970000000001e-05]</msg>
<status status="PASS" starttime="20201030 15:55:35.969" endtime="20201030 15:55:35.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.964" endtime="20201030 15:55:35.975"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:35.979" endtime="20201030 15:55:35.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.977" endtime="20201030 15:55:35.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.976" endtime="20201030 15:55:36.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.613" endtime="20201030 15:55:36.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.612" endtime="20201030 15:55:36.000"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.009" endtime="20201030 15:55:36.026"></status>
</kw>
<msg timestamp="20201030 15:55:36.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.007" endtime="20201030 15:55:36.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.028" endtime="20201030 15:55:36.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.030" endtime="20201030 15:55:36.032"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.005" endtime="20201030 15:55:36.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.003" endtime="20201030 15:55:36.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.039" endtime="20201030 15:55:36.325"></status>
</kw>
<msg timestamp="20201030 15:55:36.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022039375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022108125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.038" endtime="20201030 15:55:36.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022039375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022108125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.329" endtime="20201030 15:55:36.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.337" endtime="20201030 15:55:36.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.035" endtime="20201030 15:55:36.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.034" endtime="20201030 15:55:36.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:36.344" level="INFO">${RESULT} = [{'diff': 6.874999999999937e-05}, {'diff': 6.880599999999765e-05}, {'diff': 6.948600000000055e-05}, {'diff': 6.852699999999878e-05}, {'diff': 6.937499999999999e-05}, {'diff': 6.945800000000141e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:36.340" endtime="20201030 15:55:36.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:36.349" level="INFO">${ACCURACY} = {'diff': [6.874999999999937e-05, 6.880599999999765e-05, 6.948600000000055e-05, 6.852699999999878e-05, 6.937499999999999e-05, 6.945800000000141e-05, 6.922200000000073e-05, 6.890200000000263e-05, 6.9319...</msg>
<status status="PASS" starttime="20201030 15:55:36.345" endtime="20201030 15:55:36.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.353" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 15:55:36.352" endtime="20201030 15:55:36.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.356" level="INFO">VALUE: [6.874999999999937e-05, 6.880599999999765e-05, 6.948600000000055e-05, 6.852699999999878e-05, 6.937499999999999e-05, 6.945800000000141e-05, 6.922200000000073e-05, 6.890200000000263e-05, 6.931900000000171e-05, 6.962500000000024e-05, 6.877800000000198e-05, 6.92909999999991e-05, 6.898600000000005e-05, 6.897200000000048e-05, 6.883300000000078e-05, 6.85970000000001e-05, 6.899999999999962e-05, 6.87359999999998e-05, 6.918100000000149e-05, 6.966699999999895e-05, 6.85420000000013e-05, 6.8584e-05, 6.870900000000013e-05, 6.868100000000099e-05, 6.944399999999837e-05, 6.880600000000112e-05, 6.883300000000078e-05, 6.865199999999891e-05, 6.945800000000141e-05, 6.965300000000285e-05, 6.930500000000214e-05, 6.908299999999756e-05, 6.858299999999706e-05, 6.930499999999867e-05, 6.908300000000103e-05, 6.911100000000017e-05, 6.924999999999987e-05, 6.870799999999719e-05, 6.950000000000012e-05, 6.912499999999974e-05, 6.929199999999858e-05, 6.938900000000303e-05, 6.932000000000119e-05, 6.948700000000002e-05, 6.936100000000042e-05, 6.884700000000035e-05, 6.897299999999995e-05, 6.863899999999881e-05, 6.894400000000134e-05, 6.918000000000202e-05]</msg>
<status status="PASS" starttime="20201030 15:55:36.354" endtime="20201030 15:55:36.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.350" endtime="20201030 15:55:36.357"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:36.360" endtime="20201030 15:55:36.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.359" endtime="20201030 15:55:36.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.358" endtime="20201030 15:55:36.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.001" endtime="20201030 15:55:36.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.000" endtime="20201030 15:55:36.384"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.402" endtime="20201030 15:55:36.422"></status>
</kw>
<msg timestamp="20201030 15:55:36.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.399" endtime="20201030 15:55:36.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.425" endtime="20201030 15:55:36.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.430" endtime="20201030 15:55:36.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.393" endtime="20201030 15:55:36.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.389" endtime="20201030 15:55:36.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.449" endtime="20201030 15:55:36.738"></status>
</kw>
<msg timestamp="20201030 15:55:36.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035097042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035167681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.446" endtime="20201030 15:55:36.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035097042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035167681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.742" endtime="20201030 15:55:36.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.751" endtime="20201030 15:55:36.752"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.440" endtime="20201030 15:55:36.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.437" endtime="20201030 15:55:36.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:36.757" level="INFO">${RESULT} = [{'diff': 7.063899999999734e-05}, {'diff': 6.962500000000371e-05}, {'diff': 7.029199999999958e-05}, {'diff': 6.99030000000031e-05}, {'diff': 7.008399999999804e-05}, {'diff': 6.991699999999573e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:36.754" endtime="20201030 15:55:36.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:36.761" level="INFO">${ACCURACY} = {'diff': [7.063899999999734e-05, 6.962500000000371e-05, 7.029199999999958e-05, 6.99030000000031e-05, 7.008399999999804e-05, 6.991699999999573e-05, 7.034699999999838e-05, 6.963899999999634e-05, 6.99450...</msg>
<status status="PASS" starttime="20201030 15:55:36.758" endtime="20201030 15:55:36.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.766" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 15:55:36.765" endtime="20201030 15:55:36.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.768" level="INFO">VALUE: [7.063899999999734e-05, 6.962500000000371e-05, 7.029199999999958e-05, 6.99030000000031e-05, 7.008399999999804e-05, 6.991699999999573e-05, 7.034699999999838e-05, 6.963899999999634e-05, 6.994500000000181e-05, 7.036099999999795e-05, 6.979199999999908e-05, 6.955499999999892e-05, 7.015200000000388e-05, 6.993000000000277e-05, 7.041599999999676e-05, 6.97360000000008e-05, 6.955499999999892e-05, 7.009699999999813e-05, 7.011100000000464e-05, 6.994400000000234e-05, 7.052700000000078e-05, 6.983299999999831e-05, 6.997200000000148e-05, 6.987499999999702e-05, 7.051400000000069e-05, 6.962499999999677e-05, 7.020899999999469e-05, 6.983299999999831e-05, 7.009800000000455e-05, 6.986200000000387e-05, 6.998700000000052e-05, 7.026400000000044e-05, 6.962500000000371e-05, 7.051399999999375e-05, 7.02360000000013e-05, 7.050000000000112e-05, 6.987499999999702e-05, 6.977799999999951e-05, 6.970900000000113e-05, 7.033299999999881e-05, 6.95280000000062e-05, 7.019500000000206e-05, 7.025000000000087e-05, 7.050000000000112e-05, 7.02360000000013e-05, 6.990299999999616e-05, 7.004200000000627e-05, 6.975000000000037e-05, 7.006999999999847e-05, 7.004199999999933e-05]</msg>
<status status="PASS" starttime="20201030 15:55:36.767" endtime="20201030 15:55:36.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.762" endtime="20201030 15:55:36.769"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:36.773" endtime="20201030 15:55:36.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.772" endtime="20201030 15:55:36.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.770" endtime="20201030 15:55:36.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.386" endtime="20201030 15:55:36.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.385" endtime="20201030 15:55:36.794"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.802" endtime="20201030 15:55:36.821"></status>
</kw>
<msg timestamp="20201030 15:55:36.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.801" endtime="20201030 15:55:36.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.822" endtime="20201030 15:55:36.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.825" endtime="20201030 15:55:36.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.798" endtime="20201030 15:55:36.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.796" endtime="20201030 15:55:36.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.834" endtime="20201030 15:55:37.119"></status>
</kw>
<msg timestamp="20201030 15:55:37.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022580944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022652319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.832" endtime="20201030 15:55:37.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022580944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022652319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.124" endtime="20201030 15:55:37.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.132" endtime="20201030 15:55:37.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.830" endtime="20201030 15:55:37.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.828" endtime="20201030 15:55:37.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:37.138" level="INFO">${RESULT} = [{'diff': 7.137500000000199e-05}, {'diff': 7.134699999999938e-05}, {'diff': 7.113899999999784e-05}, {'diff': 7.145899999999941e-05}, {'diff': 7.111100000000217e-05}, {'diff': 7.118100000000002e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:37.135" endtime="20201030 15:55:37.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:37.142" level="INFO">${ACCURACY} = {'diff': [7.137500000000199e-05, 7.134699999999938e-05, 7.113899999999784e-05, 7.145899999999941e-05, 7.111100000000217e-05, 7.118100000000002e-05, 7.088899999999759e-05, 7.052700000000078e-05, 7.1263...</msg>
<status status="PASS" starttime="20201030 15:55:37.139" endtime="20201030 15:55:37.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.147" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 15:55:37.146" endtime="20201030 15:55:37.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.149" level="INFO">VALUE: [7.137500000000199e-05, 7.134699999999938e-05, 7.113899999999784e-05, 7.145899999999941e-05, 7.111100000000217e-05, 7.118100000000002e-05, 7.088899999999759e-05, 7.052700000000078e-05, 7.126300000000196e-05, 7.155499999999745e-05, 7.055499999999992e-05, 7.061100000000167e-05, 7.095799999999944e-05, 7.090200000000116e-05, 7.080500000000017e-05, 7.127800000000101e-05, 7.083299999999931e-05, 7.149999999999865e-05, 7.095799999999944e-05, 7.127800000000101e-05, 7.136099999999895e-05, 7.106999999999947e-05, 7.145799999999994e-05, 7.115300000000088e-05, 7.087500000000149e-05, 7.120899999999916e-05, 7.059800000000158e-05, 7.084699999999888e-05, 7.118100000000002e-05, 7.159799999999911e-05, 7.092999999999683e-05, 7.062499999999777e-05, 7.119400000000012e-05, 7.097199999999901e-05, 7.17499999999989e-05, 7.101400000000119e-05, 7.143100000000027e-05, 7.118000000000055e-05, 7.098600000000205e-05, 7.088900000000106e-05, 7.113899999999784e-05, 7.10559999999999e-05, 7.081999999999922e-05, 7.066699999999995e-05, 7.120899999999916e-05, 7.063900000000081e-05, 7.083399999999879e-05, 7.052800000000026e-05, 7.080599999999965e-05, 7.163900000000181e-05]</msg>
<status status="PASS" starttime="20201030 15:55:37.148" endtime="20201030 15:55:37.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.143" endtime="20201030 15:55:37.151"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:37.155" endtime="20201030 15:55:37.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.154" endtime="20201030 15:55:37.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.152" endtime="20201030 15:55:37.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.795" endtime="20201030 15:55:37.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.794" endtime="20201030 15:55:37.176"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.184" endtime="20201030 15:55:37.201"></status>
</kw>
<msg timestamp="20201030 15:55:37.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.183" endtime="20201030 15:55:37.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.203" endtime="20201030 15:55:37.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.205" endtime="20201030 15:55:37.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.180" endtime="20201030 15:55:37.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.178" endtime="20201030 15:55:37.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.214" endtime="20201030 15:55:37.499"></status>
</kw>
<msg timestamp="20201030 15:55:37.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021681611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021753681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.213" endtime="20201030 15:55:37.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021681611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021753681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.503" endtime="20201030 15:55:37.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.511" endtime="20201030 15:55:37.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.210" endtime="20201030 15:55:37.514"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.209" endtime="20201030 15:55:37.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:37.518" level="INFO">${RESULT} = [{'diff': 7.207000000000047e-05}, {'diff': 7.241699999999823e-05}, {'diff': 7.165299999999791e-05}, {'diff': 7.187499999999902e-05}, {'diff': 7.183300000000031e-05}, {'diff': 7.159699999999963e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:37.515" endtime="20201030 15:55:37.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:37.523" level="INFO">${ACCURACY} = {'diff': [7.207000000000047e-05, 7.241699999999823e-05, 7.165299999999791e-05, 7.187499999999902e-05, 7.183300000000031e-05, 7.159699999999963e-05, 7.219499999999712e-05, 7.197299999999948e-05, 7.1527...</msg>
<status status="PASS" starttime="20201030 15:55:37.519" endtime="20201030 15:55:37.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.527" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 15:55:37.526" endtime="20201030 15:55:37.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.530" level="INFO">VALUE: [7.207000000000047e-05, 7.241699999999823e-05, 7.165299999999791e-05, 7.187499999999902e-05, 7.183300000000031e-05, 7.159699999999963e-05, 7.219499999999712e-05, 7.197299999999948e-05, 7.152799999999779e-05, 7.202699999999881e-05, 7.168000000000105e-05, 7.227699999999906e-05, 7.23049999999982e-05, 7.166599999999801e-05, 7.268000000000205e-05, 7.152799999999779e-05, 7.155500000000092e-05, 7.202799999999829e-05, 7.16109999999992e-05, 7.252799999999879e-05, 7.209699999999666e-05, 7.19170000000012e-05, 7.229200000000158e-05, 7.169500000000009e-05, 7.258300000000106e-05, 7.212499999999927e-05, 7.165300000000138e-05, 7.24309999999978e-05, 7.161199999999868e-05, 7.220799999999722e-05, 7.238899999999909e-05, 7.216599999999851e-05, 7.176300000000246e-05, 7.154199999999736e-05, 7.197200000000001e-05, 7.225000000000287e-05, 7.24439999999979e-05, 7.245800000000094e-05, 7.148599999999908e-05, 7.229200000000158e-05, 7.219400000000112e-05, 7.159799999999911e-05, 7.198599999999958e-05, 7.226400000000244e-05, 7.229199999999811e-05, 7.198599999999958e-05, 7.163899999999834e-05, 7.16109999999992e-05, 7.202700000000228e-05, 7.263899999999934e-05]</msg>
<status status="PASS" starttime="20201030 15:55:37.528" endtime="20201030 15:55:37.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.524" endtime="20201030 15:55:37.531"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:37.535" endtime="20201030 15:55:37.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.533" endtime="20201030 15:55:37.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.532" endtime="20201030 15:55:37.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.177" endtime="20201030 15:55:37.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.176" endtime="20201030 15:55:37.556"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.564" endtime="20201030 15:55:37.581"></status>
</kw>
<msg timestamp="20201030 15:55:37.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.563" endtime="20201030 15:55:37.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.583" endtime="20201030 15:55:37.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.585" endtime="20201030 15:55:37.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.560" endtime="20201030 15:55:37.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.558" endtime="20201030 15:55:37.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.594" endtime="20201030 15:55:37.883"></status>
</kw>
<msg timestamp="20201030 15:55:37.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021732389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021805639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.593" endtime="20201030 15:55:37.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021732389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021805639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.888" endtime="20201030 15:55:37.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.896" endtime="20201030 15:55:37.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.590" endtime="20201030 15:55:37.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.589" endtime="20201030 15:55:37.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:37.902" level="INFO">${RESULT} = [{'diff': 7.32500000000004e-05}, {'diff': 7.312500000000027e-05}, {'diff': 7.295800000000144e-05}, {'diff': 7.327799999999954e-05}, {'diff': 7.32500000000004e-05}, {'diff': 7.315300000000288e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:55:37.899" endtime="20201030 15:55:37.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:37.906" level="INFO">${ACCURACY} = {'diff': [7.32500000000004e-05, 7.312500000000027e-05, 7.295800000000144e-05, 7.327799999999954e-05, 7.32500000000004e-05, 7.315300000000288e-05, 7.342999999999933e-05, 7.347200000000151e-05, 7.316700...</msg>
<status status="PASS" starttime="20201030 15:55:37.903" endtime="20201030 15:55:37.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.911" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 15:55:37.910" endtime="20201030 15:55:37.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.913" level="INFO">VALUE: [7.32500000000004e-05, 7.312500000000027e-05, 7.295800000000144e-05, 7.327799999999954e-05, 7.32500000000004e-05, 7.315300000000288e-05, 7.342999999999933e-05, 7.347200000000151e-05, 7.316700000000245e-05, 7.34309999999988e-05, 7.272200000000076e-05, 7.298599999999711e-05, 7.3069999999998e-05, 7.283399999999732e-05, 7.312500000000027e-05, 7.337500000000052e-05, 7.30829999999981e-05, 7.26110000000002e-05, 7.268099999999805e-05, 7.309800000000061e-05, 7.27499999999999e-05, 7.33049999999992e-05, 7.283300000000131e-05, 7.336099999999748e-05, 7.350000000000065e-05, 7.345800000000194e-05, 7.312500000000027e-05, 7.342999999999933e-05, 7.279199999999861e-05, 7.305499999999895e-05, 7.318100000000202e-05, 7.323600000000083e-05, 7.288899999999959e-05, 7.32370000000003e-05, 7.284700000000088e-05, 7.332000000000172e-05, 7.313899999999984e-05, 7.286100000000045e-05, 7.33049999999992e-05, 7.377700000000056e-05, 7.276399999999947e-05, 7.258300000000106e-05, 7.32630000000005e-05, 7.34439999999989e-05, 7.290299999999916e-05, 7.294400000000187e-05, 7.319400000000212e-05, 7.26110000000002e-05, 7.273600000000033e-05, 7.323600000000083e-05]</msg>
<status status="PASS" starttime="20201030 15:55:37.912" endtime="20201030 15:55:37.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.907" endtime="20201030 15:55:37.914"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:37.918" endtime="20201030 15:55:37.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.917" endtime="20201030 15:55:37.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.915" endtime="20201030 15:55:37.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.556" endtime="20201030 15:55:37.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.556" endtime="20201030 15:55:37.939"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.947" endtime="20201030 15:55:37.965"></status>
</kw>
<msg timestamp="20201030 15:55:37.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.946" endtime="20201030 15:55:37.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.967" endtime="20201030 15:55:37.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.969" endtime="20201030 15:55:37.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.943" endtime="20201030 15:55:37.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.941" endtime="20201030 15:55:37.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.978" endtime="20201030 15:55:38.264"></status>
</kw>
<msg timestamp="20201030 15:55:38.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022363625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022437681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.977" endtime="20201030 15:55:38.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022363625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022437681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:38.268" endtime="20201030 15:55:38.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.277" endtime="20201030 15:55:38.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.974" endtime="20201030 15:55:38.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.972" endtime="20201030 15:55:38.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:38.283" level="INFO">${RESULT} = [{'diff': 7.405599999999943e-05}, {'diff': 7.384699999999841e-05}, {'diff': 7.398599999999811e-05}, {'diff': 7.401399999999725e-05}, {'diff': 7.42639999999975e-05}, {'diff': 7.398600000000158e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:38.280" endtime="20201030 15:55:38.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:38.287" level="INFO">${ACCURACY} = {'diff': [7.405599999999943e-05, 7.384699999999841e-05, 7.398599999999811e-05, 7.401399999999725e-05, 7.42639999999975e-05, 7.398600000000158e-05, 7.426400000000097e-05, 7.438900000000109e-05, 7.36109...</msg>
<status status="PASS" starttime="20201030 15:55:38.284" endtime="20201030 15:55:38.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.292" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 15:55:38.291" endtime="20201030 15:55:38.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.294" level="INFO">VALUE: [7.405599999999943e-05, 7.384699999999841e-05, 7.398599999999811e-05, 7.401399999999725e-05, 7.42639999999975e-05, 7.398600000000158e-05, 7.426400000000097e-05, 7.438900000000109e-05, 7.361099999999773e-05, 7.39309999999993e-05, 7.377800000000004e-05, 7.42500000000014e-05, 7.370899999999819e-05, 7.429100000000063e-05, 7.42500000000014e-05, 7.402700000000081e-05, 7.352799999999979e-05, 7.398600000000158e-05, 7.352799999999979e-05, 7.38049999999997e-05, 7.386099999999798e-05, 7.352799999999979e-05, 7.387500000000102e-05, 7.44309999999998e-05, 7.409700000000213e-05, 7.370800000000219e-05, 7.419499999999912e-05, 7.394499999999887e-05, 7.415300000000041e-05, 7.450000000000165e-05, 7.376400000000047e-05, 7.424999999999793e-05, 7.352799999999979e-05, 7.366699999999948e-05, 7.386100000000145e-05, 7.398600000000158e-05, 7.419400000000312e-05, 7.355499999999945e-05, 7.41110000000017e-05, 7.434699999999891e-05, 7.413900000000084e-05, 7.363900000000034e-05, 7.373599999999786e-05, 7.426400000000097e-05, 7.42500000000014e-05, 7.448599999999861e-05, 7.380599999999918e-05, 7.434799999999839e-05, 7.395899999999844e-05, 7.44439999999999e-05]</msg>
<status status="PASS" starttime="20201030 15:55:38.293" endtime="20201030 15:55:38.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.288" endtime="20201030 15:55:38.296"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:38.300" endtime="20201030 15:55:38.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.298" endtime="20201030 15:55:38.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.297" endtime="20201030 15:55:38.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.940" endtime="20201030 15:55:38.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.939" endtime="20201030 15:55:38.321"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.329" endtime="20201030 15:55:38.347"></status>
</kw>
<msg timestamp="20201030 15:55:38.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.328" endtime="20201030 15:55:38.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.349" endtime="20201030 15:55:38.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.351" endtime="20201030 15:55:38.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.325" endtime="20201030 15:55:38.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.323" endtime="20201030 15:55:38.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.360" endtime="20201030 15:55:38.646"></status>
</kw>
<msg timestamp="20201030 15:55:38.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021993042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022067736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:38.358" endtime="20201030 15:55:38.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021993042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022067736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:38.650" endtime="20201030 15:55:38.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.658" endtime="20201030 15:55:38.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.356" endtime="20201030 15:55:38.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.354" endtime="20201030 15:55:38.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:38.665" level="INFO">${RESULT} = [{'diff': 7.469400000000015e-05}, {'diff': 7.518099999999708e-05}, {'diff': 7.548699999999908e-05}, {'diff': 7.47500000000019e-05}, {'diff': 7.541700000000123e-05}, {'diff': 7.519399999999718e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:38.662" endtime="20201030 15:55:38.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:38.670" level="INFO">${ACCURACY} = {'diff': [7.469400000000015e-05, 7.518099999999708e-05, 7.548699999999908e-05, 7.47500000000019e-05, 7.541700000000123e-05, 7.519399999999718e-05, 7.548599999999961e-05, 7.51110000000027e-05, 7.473600...</msg>
<status status="PASS" starttime="20201030 15:55:38.666" endtime="20201030 15:55:38.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.674" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 15:55:38.673" endtime="20201030 15:55:38.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.677" level="INFO">VALUE: [7.469400000000015e-05, 7.518099999999708e-05, 7.548699999999908e-05, 7.47500000000019e-05, 7.541700000000123e-05, 7.519399999999718e-05, 7.548599999999961e-05, 7.51110000000027e-05, 7.473600000000233e-05, 7.5763999999999e-05, 7.524999999999893e-05, 7.459699999999916e-05, 7.511099999999923e-05, 7.483300000000331e-05, 7.515300000000141e-05, 7.515300000000141e-05, 7.501399999999825e-05, 7.508399999999957e-05, 7.484700000000288e-05, 7.551399999999875e-05, 7.45699999999995e-05, 7.45829999999996e-05, 7.466599999999754e-05, 7.484699999999941e-05, 7.491600000000126e-05, 7.477800000000104e-05, 7.454099999999741e-05, 7.484699999999941e-05, 7.449999999999818e-05, 7.516599999999804e-05, 7.523599999999936e-05, 7.522199999999979e-05, 7.548600000000308e-05, 7.45829999999996e-05, 7.530600000000068e-05, 7.474999999999843e-05, 7.490300000000116e-05, 7.477800000000104e-05, 7.513900000000184e-05, 7.555599999999746e-05, 7.459800000000211e-05, 7.534800000000286e-05, 7.531900000000077e-05, 7.53050000000012e-05, 7.554099999999841e-05, 7.542999999999786e-05, 7.519500000000012e-05, 7.536099999999948e-05, 7.472199999999929e-05, 7.491600000000126e-05]</msg>
<status status="PASS" starttime="20201030 15:55:38.675" endtime="20201030 15:55:38.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.671" endtime="20201030 15:55:38.678"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:38.682" endtime="20201030 15:55:38.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.680" endtime="20201030 15:55:38.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.679" endtime="20201030 15:55:38.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.322" endtime="20201030 15:55:38.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.321" endtime="20201030 15:55:38.702"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.711" endtime="20201030 15:55:38.728"></status>
</kw>
<msg timestamp="20201030 15:55:38.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.709" endtime="20201030 15:55:38.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.729" endtime="20201030 15:55:38.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.732" endtime="20201030 15:55:38.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.707" endtime="20201030 15:55:38.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.705" endtime="20201030 15:55:38.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.741" endtime="20201030 15:55:39.028"></status>
</kw>
<msg timestamp="20201030 15:55:39.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021449403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021525611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:38.739" endtime="20201030 15:55:39.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021449403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021525611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.032" endtime="20201030 15:55:39.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.040" endtime="20201030 15:55:39.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.737" endtime="20201030 15:55:39.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.735" endtime="20201030 15:55:39.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:39.047" level="INFO">${RESULT} = [{'diff': 7.620800000000122e-05}, {'diff': 7.637500000000005e-05}, {'diff': 7.609700000000066e-05}, {'diff': 7.577800000000204e-05}, {'diff': 7.588899999999912e-05}, {'diff': 7.604099999999892e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:39.044" endtime="20201030 15:55:39.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:39.051" level="INFO">${ACCURACY} = {'diff': [7.620800000000122e-05, 7.637500000000005e-05, 7.609700000000066e-05, 7.577800000000204e-05, 7.588899999999912e-05, 7.604099999999892e-05, 7.555500000000145e-05, 7.591599999999879e-05, 7.6222...</msg>
<status status="PASS" starttime="20201030 15:55:39.048" endtime="20201030 15:55:39.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.056" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 15:55:39.055" endtime="20201030 15:55:39.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.058" level="INFO">VALUE: [7.620800000000122e-05, 7.637500000000005e-05, 7.609700000000066e-05, 7.577800000000204e-05, 7.588899999999912e-05, 7.604099999999892e-05, 7.555500000000145e-05, 7.591599999999879e-05, 7.622200000000079e-05, 7.65969999999977e-05, 7.601399999999925e-05, 7.549999999999918e-05, 7.570900000000019e-05, 7.551400000000222e-05, 7.583400000000032e-05, 7.554200000000136e-05, 7.59029999999987e-05, 7.561199999999921e-05, 7.554200000000136e-05, 7.636199999999996e-05, 7.64310000000018e-05, 7.573599999999986e-05, 7.555500000000145e-05, 7.584700000000041e-05, 7.647200000000104e-05, 7.599999999999968e-05, 7.613899999999937e-05, 7.630599999999821e-05, 7.63189999999983e-05, 7.630600000000168e-05, 7.572200000000029e-05, 7.556900000000102e-05, 7.59029999999987e-05, 7.551400000000222e-05, 7.673600000000086e-05, 7.599999999999968e-05, 7.588899999999912e-05, 7.552800000000179e-05, 7.615299999999894e-05, 7.58890000000026e-05, 7.558400000000007e-05, 7.552799999999832e-05, 7.563899999999887e-05, 7.641599999999929e-05, 7.648600000000061e-05, 7.584700000000041e-05, 7.597200000000054e-05, 7.555600000000093e-05, 7.605600000000143e-05, 7.637500000000005e-05]</msg>
<status status="PASS" starttime="20201030 15:55:39.057" endtime="20201030 15:55:39.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.052" endtime="20201030 15:55:39.059"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:39.063" endtime="20201030 15:55:39.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.061" endtime="20201030 15:55:39.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.060" endtime="20201030 15:55:39.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.703" endtime="20201030 15:55:39.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.703" endtime="20201030 15:55:39.084"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.092" endtime="20201030 15:55:39.111"></status>
</kw>
<msg timestamp="20201030 15:55:39.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.091" endtime="20201030 15:55:39.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.113" endtime="20201030 15:55:39.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.115" endtime="20201030 15:55:39.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.088" endtime="20201030 15:55:39.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.086" endtime="20201030 15:55:39.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.124" endtime="20201030 15:55:39.409"></status>
</kw>
<msg timestamp="20201030 15:55:39.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02276175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022839264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:39.122" endtime="20201030 15:55:39.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02276175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022839264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:39.414" endtime="20201030 15:55:39.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.422" endtime="20201030 15:55:39.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.120" endtime="20201030 15:55:39.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.118" endtime="20201030 15:55:39.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:39.428" level="INFO">${RESULT} = [{'diff': 7.751400000000075e-05}, {'diff': 7.705499999999949e-05}, {'diff': 7.698600000000111e-05}, {'diff': 7.673600000000086e-05}, {'diff': 7.706900000000252e-05}, {'diff': 7.656899999999855e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:39.425" endtime="20201030 15:55:39.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:39.432" level="INFO">${ACCURACY} = {'diff': [7.751400000000075e-05, 7.705499999999949e-05, 7.698600000000111e-05, 7.673600000000086e-05, 7.706900000000252e-05, 7.656899999999855e-05, 7.704199999999939e-05, 7.706999999999853e-05, 7.6722...</msg>
<status status="PASS" starttime="20201030 15:55:39.429" endtime="20201030 15:55:39.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.437" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 15:55:39.436" endtime="20201030 15:55:39.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.439" level="INFO">VALUE: [7.751400000000075e-05, 7.705499999999949e-05, 7.698600000000111e-05, 7.673600000000086e-05, 7.706900000000252e-05, 7.656899999999855e-05, 7.704199999999939e-05, 7.706999999999853e-05, 7.672200000000129e-05, 7.761099999999826e-05, 7.656999999999803e-05, 7.659700000000116e-05, 7.680600000000218e-05, 7.697300000000101e-05, 7.75839999999986e-05, 7.711200000000071e-05, 7.686200000000046e-05, 7.748600000000161e-05, 7.680499999999923e-05, 7.748599999999814e-05, 7.716600000000004e-05, 7.683299999999837e-05, 7.709700000000166e-05, 7.73189999999993e-05, 7.736099999999801e-05, 7.723600000000136e-05, 7.749999999999771e-05, 7.748600000000161e-05, 7.71389999999969e-05, 7.691699999999926e-05, 7.654199999999889e-05, 7.651399999999975e-05, 7.69029999999997e-05, 7.672200000000129e-05, 7.750000000000118e-05, 7.661200000000021e-05, 7.745899999999847e-05, 7.658299999999812e-05, 7.723599999999789e-05, 7.754100000000042e-05, 7.697199999999807e-05, 7.675000000000043e-05, 7.701400000000025e-05, 7.670800000000172e-05, 7.737499999999758e-05, 7.658299999999812e-05, 7.652799999999932e-05, 7.720799999999875e-05, 7.734699999999844e-05, 7.72640000000005e-05]</msg>
<status status="PASS" starttime="20201030 15:55:39.438" endtime="20201030 15:55:39.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.433" endtime="20201030 15:55:39.441"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:39.445" endtime="20201030 15:55:39.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.444" endtime="20201030 15:55:39.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.442" endtime="20201030 15:55:39.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.085" endtime="20201030 15:55:39.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.084" endtime="20201030 15:55:39.466"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.474" endtime="20201030 15:55:39.492"></status>
</kw>
<msg timestamp="20201030 15:55:39.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.473" endtime="20201030 15:55:39.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.493" endtime="20201030 15:55:39.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.496" endtime="20201030 15:55:39.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.470" endtime="20201030 15:55:39.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.468" endtime="20201030 15:55:39.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.505" endtime="20201030 15:55:39.790"></status>
</kw>
<msg timestamp="20201030 15:55:39.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021682847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021760694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.503" endtime="20201030 15:55:39.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021682847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021760694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.795" endtime="20201030 15:55:39.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.803" endtime="20201030 15:55:39.804"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.501" endtime="20201030 15:55:39.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.499" endtime="20201030 15:55:39.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:39.809" level="INFO">${RESULT} = [{'diff': 7.784699999999894e-05}, {'diff': 7.76389999999974e-05}, {'diff': 7.843100000000033e-05}, {'diff': 7.772199999999882e-05}, {'diff': 7.755599999999946e-05}, {'diff': 7.837500000000205e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:39.806" endtime="20201030 15:55:39.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:39.814" level="INFO">${ACCURACY} = {'diff': [7.784699999999894e-05, 7.76389999999974e-05, 7.843100000000033e-05, 7.772199999999882e-05, 7.755599999999946e-05, 7.837500000000205e-05, 7.802799999999735e-05, 7.786199999999799e-05, 7.77359...</msg>
<status status="PASS" starttime="20201030 15:55:39.810" endtime="20201030 15:55:39.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.819" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 15:55:39.818" endtime="20201030 15:55:39.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.821" level="INFO">VALUE: [7.784699999999894e-05, 7.76389999999974e-05, 7.843100000000033e-05, 7.772199999999882e-05, 7.755599999999946e-05, 7.837500000000205e-05, 7.802799999999735e-05, 7.786199999999799e-05, 7.773599999999839e-05, 7.843000000000086e-05, 7.770800000000272e-05, 7.844400000000043e-05, 7.8151999999998e-05, 7.787499999999808e-05, 7.79579999999995e-05, 7.848599999999914e-05, 7.772200000000229e-05, 7.833299999999987e-05, 7.823600000000236e-05, 7.852799999999785e-05, 7.830600000000021e-05, 7.797199999999907e-05, 7.81389999999979e-05, 7.82909999999977e-05, 7.829200000000064e-05, 7.761100000000173e-05, 7.77770000000011e-05, 7.830500000000074e-05, 7.780500000000024e-05, 7.818000000000061e-05, 7.794399999999993e-05, 7.751400000000075e-05, 7.812499999999833e-05, 7.79030000000007e-05, 7.873599999999939e-05, 7.765300000000044e-05, 7.763900000000087e-05, 7.787500000000155e-05, 7.81389999999979e-05, 7.79030000000007e-05, 7.811100000000223e-05, 7.780599999999971e-05, 7.847199999999957e-05, 7.817999999999714e-05, 7.827800000000107e-05, 7.7764000000001e-05, 7.772300000000176e-05, 7.805500000000049e-05, 7.749999999999771e-05, 7.85969999999997e-05]</msg>
<status status="PASS" starttime="20201030 15:55:39.820" endtime="20201030 15:55:39.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.815" endtime="20201030 15:55:39.822"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:39.826" endtime="20201030 15:55:39.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.825" endtime="20201030 15:55:39.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.823" endtime="20201030 15:55:39.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.467" endtime="20201030 15:55:39.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.466" endtime="20201030 15:55:39.847"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.855" endtime="20201030 15:55:39.874"></status>
</kw>
<msg timestamp="20201030 15:55:39.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.854" endtime="20201030 15:55:39.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.875" endtime="20201030 15:55:39.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.878" endtime="20201030 15:55:39.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.851" endtime="20201030 15:55:39.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.849" endtime="20201030 15:55:39.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.887" endtime="20201030 15:55:40.175"></status>
</kw>
<msg timestamp="20201030 15:55:40.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021813944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021892806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.885" endtime="20201030 15:55:40.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021813944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021892806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.179" endtime="20201030 15:55:40.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.187" endtime="20201030 15:55:40.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.883" endtime="20201030 15:55:40.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.881" endtime="20201030 15:55:40.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:40.193" level="INFO">${RESULT} = [{'diff': 7.886200000000246e-05}, {'diff': 7.879200000000114e-05}, {'diff': 7.930600000000121e-05}, {'diff': 7.857000000000003e-05}, {'diff': 7.872199999999982e-05}, {'diff': 7.869500000000015e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:40.190" endtime="20201030 15:55:40.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:40.198" level="INFO">${ACCURACY} = {'diff': [7.886200000000246e-05, 7.879200000000114e-05, 7.930600000000121e-05, 7.857000000000003e-05, 7.872199999999982e-05, 7.869500000000015e-05, 7.920900000000022e-05, 7.880600000000071e-05, 7.8583...</msg>
<status status="PASS" starttime="20201030 15:55:40.194" endtime="20201030 15:55:40.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.202" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 15:55:40.201" endtime="20201030 15:55:40.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.204" level="INFO">VALUE: [7.886200000000246e-05, 7.879200000000114e-05, 7.930600000000121e-05, 7.857000000000003e-05, 7.872199999999982e-05, 7.869500000000015e-05, 7.920900000000022e-05, 7.880600000000071e-05, 7.858300000000012e-05, 7.948699999999961e-05, 7.916599999999857e-05, 7.911099999999976e-05, 7.911099999999976e-05, 7.874999999999896e-05, 7.908300000000063e-05, 7.855500000000099e-05, 7.862499999999883e-05, 7.937499999999958e-05, 7.950000000000318e-05, 7.902800000000182e-05, 7.923599999999989e-05, 7.94030000000022e-05, 7.882000000000028e-05, 7.866699999999754e-05, 7.92779999999986e-05, 7.934799999999992e-05, 7.85969999999997e-05, 7.887500000000255e-05, 7.904200000000139e-05, 7.922200000000032e-05, 7.947200000000057e-05, 7.890299999999822e-05, 7.867999999999764e-05, 7.861099999999926e-05, 7.915300000000194e-05, 7.937499999999958e-05, 7.940299999999872e-05, 7.934700000000044e-05, 7.948600000000014e-05, 7.95840000000006e-05, 7.926399999999903e-05, 7.904199999999792e-05, 7.907000000000053e-05, 7.938899999999915e-05, 7.886099999999951e-05, 7.868100000000058e-05, 7.861099999999926e-05, 7.94169999999983e-05, 7.94719999999971e-05, 7.922200000000032e-05]</msg>
<status status="PASS" starttime="20201030 15:55:40.203" endtime="20201030 15:55:40.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.198" endtime="20201030 15:55:40.212"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:40.216" endtime="20201030 15:55:40.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.214" endtime="20201030 15:55:40.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.213" endtime="20201030 15:55:40.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.848" endtime="20201030 15:55:40.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.847" endtime="20201030 15:55:40.236"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.245" endtime="20201030 15:55:40.263"></status>
</kw>
<msg timestamp="20201030 15:55:40.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.243" endtime="20201030 15:55:40.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.265" endtime="20201030 15:55:40.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.267" endtime="20201030 15:55:40.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.241" endtime="20201030 15:55:40.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.239" endtime="20201030 15:55:40.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.276" endtime="20201030 15:55:40.561"></status>
</kw>
<msg timestamp="20201030 15:55:40.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022534111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.275" endtime="20201030 15:55:40.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022534111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.565" endtime="20201030 15:55:40.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.574" endtime="20201030 15:55:40.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.272" endtime="20201030 15:55:40.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.271" endtime="20201030 15:55:40.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:40.580" level="INFO">${RESULT} = [{'diff': 8.00970000000012e-05}, {'diff': 8.016699999999904e-05}, {'diff': 7.976399999999953e-05}, {'diff': 7.99589999999975e-05}, {'diff': 7.99450000000014e-05}, {'diff': 7.98329999999979e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 15:55:40.577" endtime="20201030 15:55:40.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:40.584" level="INFO">${ACCURACY} = {'diff': [8.00970000000012e-05, 8.016699999999904e-05, 7.976399999999953e-05, 7.99589999999975e-05, 7.99450000000014e-05, 7.98329999999979e-05, 8.016700000000251e-05, 7.970800000000125e-05, 7.95829999...</msg>
<status status="PASS" starttime="20201030 15:55:40.581" endtime="20201030 15:55:40.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.589" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 15:55:40.588" endtime="20201030 15:55:40.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.591" level="INFO">VALUE: [8.00970000000012e-05, 8.016699999999904e-05, 7.976399999999953e-05, 7.99589999999975e-05, 7.99450000000014e-05, 7.98329999999979e-05, 8.016700000000251e-05, 7.970800000000125e-05, 7.958299999999766e-05, 8.027700000000013e-05, 8.01109999999973e-05, 7.99719999999976e-05, 8.052799999999985e-05, 7.976399999999953e-05, 8.005500000000249e-05, 7.965300000000244e-05, 7.962499999999983e-05, 8.038800000000068e-05, 7.979199999999867e-05, 8.061100000000126e-05, 7.998599999999717e-05, 8.026400000000003e-05, 8.012499999999687e-05, 8.026400000000003e-05, 7.99450000000014e-05, 7.97230000000003e-05, 8.036100000000101e-05, 8.031899999999884e-05, 7.952699999999938e-05, 8.036099999999755e-05, 8.019399999999871e-05, 7.99450000000014e-05, 8.048600000000114e-05, 8.029199999999917e-05, 8.075000000000096e-05, 7.990299999999922e-05, 7.988899999999965e-05, 8.0458999999998e-05, 8.020899999999775e-05, 8.061100000000126e-05, 7.965299999999897e-05, 8.000000000000021e-05, 8.002799999999935e-05, 8.012499999999687e-05, 8.076400000000053e-05, 7.965300000000244e-05, 8.023600000000089e-05, 8.00970000000012e-05, 8.008299999999816e-05, 7.990299999999922e-05]</msg>
<status status="PASS" starttime="20201030 15:55:40.590" endtime="20201030 15:55:40.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.585" endtime="20201030 15:55:40.593"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:40.597" endtime="20201030 15:55:40.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.595" endtime="20201030 15:55:40.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.594" endtime="20201030 15:55:40.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.237" endtime="20201030 15:55:40.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.237" endtime="20201030 15:55:40.617"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.626" endtime="20201030 15:55:40.645"></status>
</kw>
<msg timestamp="20201030 15:55:40.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.624" endtime="20201030 15:55:40.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.646" endtime="20201030 15:55:40.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.649" endtime="20201030 15:55:40.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.622" endtime="20201030 15:55:40.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.620" endtime="20201030 15:55:40.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.658" endtime="20201030 15:55:40.944"></status>
</kw>
<msg timestamp="20201030 15:55:40.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022025528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022106722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.656" endtime="20201030 15:55:40.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022025528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022106722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.948" endtime="20201030 15:55:40.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.956" endtime="20201030 15:55:40.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.654" endtime="20201030 15:55:40.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.652" endtime="20201030 15:55:40.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:40.962" level="INFO">${RESULT} = [{'diff': 8.119399999999971e-05}, {'diff': 8.131999999999931e-05}, {'diff': 8.140299999999726e-05}, {'diff': 8.118099999999961e-05}, {'diff': 8.14170000000003e-05}, {'diff': 8.088900000000065e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:40.959" endtime="20201030 15:55:40.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:40.967" level="INFO">${ACCURACY} = {'diff': [8.119399999999971e-05, 8.131999999999931e-05, 8.140299999999726e-05, 8.118099999999961e-05, 8.14170000000003e-05, 8.088900000000065e-05, 8.101400000000078e-05, 8.052799999999985e-05, 8.07500...</msg>
<status status="PASS" starttime="20201030 15:55:40.963" endtime="20201030 15:55:40.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.972" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 15:55:40.971" endtime="20201030 15:55:40.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.975" level="INFO">VALUE: [8.119399999999971e-05, 8.131999999999931e-05, 8.140299999999726e-05, 8.118099999999961e-05, 8.14170000000003e-05, 8.088900000000065e-05, 8.101400000000078e-05, 8.052799999999985e-05, 8.075000000000096e-05, 8.130599999999974e-05, 8.095799999999903e-05, 8.084699999999848e-05, 8.109800000000167e-05, 8.109699999999873e-05, 8.154200000000042e-05, 8.055600000000246e-05, 8.129200000000017e-05, 8.05840000000016e-05, 8.109699999999873e-05, 8.083399999999838e-05, 8.087499999999762e-05, 8.09589999999985e-05, 8.100000000000121e-05, 8.062500000000083e-05, 8.092999999999989e-05, 8.100000000000121e-05, 8.1152000000001e-05, 8.12780000000006e-05, 8.073600000000139e-05, 8.101400000000078e-05, 8.094399999999946e-05, 8.051400000000028e-05, 8.112500000000133e-05, 8.081999999999881e-05, 8.172199999999935e-05, 8.126400000000103e-05, 8.072199999999835e-05, 8.062500000000083e-05, 8.054199999999942e-05, 8.151400000000128e-05, 8.119500000000265e-05, 8.119399999999971e-05, 8.150000000000171e-05, 8.101399999999731e-05, 8.16390000000014e-05, 8.134699999999898e-05, 8.052799999999985e-05, 8.120799999999928e-05, 8.098599999999817e-05, 8.13329999999994e-05]</msg>
<status status="PASS" starttime="20201030 15:55:40.973" endtime="20201030 15:55:40.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.968" endtime="20201030 15:55:40.976"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:40.979" endtime="20201030 15:55:40.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.978" endtime="20201030 15:55:40.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.977" endtime="20201030 15:55:41.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.618" endtime="20201030 15:55:41.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.618" endtime="20201030 15:55:41.000"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.009" endtime="20201030 15:55:41.028"></status>
</kw>
<msg timestamp="20201030 15:55:41.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.007" endtime="20201030 15:55:41.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.029" endtime="20201030 15:55:41.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.031" endtime="20201030 15:55:41.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.005" endtime="20201030 15:55:41.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.003" endtime="20201030 15:55:41.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.040" endtime="20201030 15:55:41.328"></status>
</kw>
<msg timestamp="20201030 15:55:41.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021675333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021757361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.039" endtime="20201030 15:55:41.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021675333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021757361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.332" endtime="20201030 15:55:41.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.341" endtime="20201030 15:55:41.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.036" endtime="20201030 15:55:41.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.035" endtime="20201030 15:55:41.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:41.347" level="INFO">${RESULT} = [{'diff': 8.202799999999788e-05}, {'diff': 8.176300000000206e-05}, {'diff': 8.250000000000271e-05}, {'diff': 8.206900000000059e-05}, {'diff': 8.194399999999699e-05}, {'diff': 8.207000000000006e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:41.344" endtime="20201030 15:55:41.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:41.351" level="INFO">${ACCURACY} = {'diff': [8.202799999999788e-05, 8.176300000000206e-05, 8.250000000000271e-05, 8.206900000000059e-05, 8.194399999999699e-05, 8.207000000000006e-05, 8.187499999999862e-05, 8.22780000000016e-05, 8.19440...</msg>
<status status="PASS" starttime="20201030 15:55:41.348" endtime="20201030 15:55:41.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.356" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 15:55:41.355" endtime="20201030 15:55:41.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.358" level="INFO">VALUE: [8.202799999999788e-05, 8.176300000000206e-05, 8.250000000000271e-05, 8.206900000000059e-05, 8.194399999999699e-05, 8.207000000000006e-05, 8.187499999999862e-05, 8.22780000000016e-05, 8.194400000000046e-05, 8.201400000000178e-05, 8.158299999999966e-05, 8.204200000000092e-05, 8.17780000000011e-05, 8.222199999999985e-05, 8.27780000000021e-05, 8.165300000000097e-05, 8.176400000000153e-05, 8.240299999999826e-05, 8.197299999999907e-05, 8.243000000000139e-05, 8.240200000000225e-05, 8.161100000000227e-05, 8.159800000000217e-05, 8.22780000000016e-05, 8.237500000000259e-05, 8.163899999999794e-05, 8.168000000000064e-05, 8.212500000000234e-05, 8.202799999999788e-05, 8.249999999999924e-05, 8.190300000000122e-05, 8.199999999999874e-05, 8.15970000000027e-05, 8.162499999999837e-05, 8.280600000000124e-05, 8.208399999999963e-05, 8.186100000000252e-05, 8.236199999999902e-05, 8.155500000000052e-05, 8.222199999999985e-05, 8.151399999999781e-05, 8.201399999999831e-05, 8.176400000000153e-05, 8.24170000000013e-05, 8.245800000000053e-05, 8.213899999999844e-05, 8.181900000000034e-05, 8.159699999999923e-05, 8.216600000000157e-05, 8.279200000000167e-05]</msg>
<status status="PASS" starttime="20201030 15:55:41.357" endtime="20201030 15:55:41.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.352" endtime="20201030 15:55:41.359"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:41.363" endtime="20201030 15:55:41.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.361" endtime="20201030 15:55:41.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.360" endtime="20201030 15:55:41.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.001" endtime="20201030 15:55:41.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.001" endtime="20201030 15:55:41.384"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.392" endtime="20201030 15:55:41.412"></status>
</kw>
<msg timestamp="20201030 15:55:41.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.391" endtime="20201030 15:55:41.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.413" endtime="20201030 15:55:41.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.416" endtime="20201030 15:55:41.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.388" endtime="20201030 15:55:41.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.386" endtime="20201030 15:55:41.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.425" endtime="20201030 15:55:41.711"></status>
</kw>
<msg timestamp="20201030 15:55:41.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022867764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022951306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.423" endtime="20201030 15:55:41.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022867764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022951306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.715" endtime="20201030 15:55:41.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.723" endtime="20201030 15:55:41.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.421" endtime="20201030 15:55:41.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.419" endtime="20201030 15:55:41.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:41.730" level="INFO">${RESULT} = [{'diff': 8.354200000000242e-05}, {'diff': 8.26390000000024e-05}, {'diff': 8.281899999999787e-05}, {'diff': 8.320900000000075e-05}, {'diff': 8.304200000000192e-05}, {'diff': 8.334700000000098e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:41.727" endtime="20201030 15:55:41.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:41.734" level="INFO">${ACCURACY} = {'diff': [8.354200000000242e-05, 8.26390000000024e-05, 8.281899999999787e-05, 8.320900000000075e-05, 8.304200000000192e-05, 8.334700000000098e-05, 8.32369999999999e-05, 8.337500000000012e-05, 8.302800...</msg>
<status status="PASS" starttime="20201030 15:55:41.731" endtime="20201030 15:55:41.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.738" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 15:55:41.737" endtime="20201030 15:55:41.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.741" level="INFO">VALUE: [8.354200000000242e-05, 8.26390000000024e-05, 8.281899999999787e-05, 8.320900000000075e-05, 8.304200000000192e-05, 8.334700000000098e-05, 8.32369999999999e-05, 8.337500000000012e-05, 8.302800000000235e-05, 8.327799999999913e-05, 8.288899999999919e-05, 8.294399999999799e-05, 8.324999999999999e-05, 8.322199999999738e-05, 8.309700000000073e-05, 8.348600000000067e-05, 8.302799999999888e-05, 8.337500000000012e-05, 8.266699999999808e-05, 8.369500000000168e-05, 8.318099999999815e-05, 8.309700000000073e-05, 8.348600000000067e-05, 8.283299999999744e-05, 8.352799999999938e-05, 8.294500000000093e-05, 8.25979999999997e-05, 8.294500000000093e-05, 8.319400000000171e-05, 8.322200000000085e-05, 8.256900000000109e-05, 8.292999999999842e-05, 8.280600000000124e-05, 8.298600000000017e-05, 8.294400000000146e-05, 8.272200000000035e-05, 8.295800000000103e-05, 8.320800000000128e-05, 8.288899999999919e-05, 8.29170000000018e-05, 8.305599999999802e-05, 8.262499999999937e-05, 8.252799999999838e-05, 8.301399999999931e-05, 8.312499999999987e-05, 8.294499999999747e-05, 8.291600000000232e-05, 8.309699999999726e-05, 8.291599999999885e-05, 8.341600000000282e-05]</msg>
<status status="PASS" starttime="20201030 15:55:41.739" endtime="20201030 15:55:41.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.735" endtime="20201030 15:55:41.743"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:41.747" endtime="20201030 15:55:41.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.745" endtime="20201030 15:55:41.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.744" endtime="20201030 15:55:41.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.385" endtime="20201030 15:55:41.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.384" endtime="20201030 15:55:41.767"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.776" endtime="20201030 15:55:41.795"></status>
</kw>
<msg timestamp="20201030 15:55:41.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.774" endtime="20201030 15:55:41.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.796" endtime="20201030 15:55:41.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.798" endtime="20201030 15:55:41.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.772" endtime="20201030 15:55:41.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.770" endtime="20201030 15:55:41.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.808" endtime="20201030 15:55:42.093"></status>
</kw>
<msg timestamp="20201030 15:55:42.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021576347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021660667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.806" endtime="20201030 15:55:42.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021576347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021660667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.097" endtime="20201030 15:55:42.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.105" endtime="20201030 15:55:42.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.803" endtime="20201030 15:55:42.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.802" endtime="20201030 15:55:42.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:42.112" level="INFO">${RESULT} = [{'diff': 8.432000000000231e-05}, {'diff': 8.384700000000148e-05}, {'diff': 8.386099999999758e-05}, {'diff': 8.419499999999872e-05}, {'diff': 8.431899999999937e-05}, {'diff': 8.359700000000123e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:42.109" endtime="20201030 15:55:42.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:42.117" level="INFO">${ACCURACY} = {'diff': [8.432000000000231e-05, 8.384700000000148e-05, 8.386099999999758e-05, 8.419499999999872e-05, 8.431899999999937e-05, 8.359700000000123e-05, 8.423600000000142e-05, 8.402799999999988e-05, 8.4375...</msg>
<status status="PASS" starttime="20201030 15:55:42.113" endtime="20201030 15:55:42.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.121" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 15:55:42.120" endtime="20201030 15:55:42.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.124" level="INFO">VALUE: [8.432000000000231e-05, 8.384700000000148e-05, 8.386099999999758e-05, 8.419499999999872e-05, 8.431899999999937e-05, 8.359700000000123e-05, 8.423600000000142e-05, 8.402799999999988e-05, 8.437500000000112e-05, 8.417999999999967e-05, 8.390299999999976e-05, 8.4153e-05, 8.377699999999669e-05, 8.386100000000105e-05, 8.42919999999997e-05, 8.36110000000008e-05, 8.362500000000037e-05, 8.361099999999733e-05, 8.384700000000148e-05, 8.401399999999684e-05, 8.394499999999847e-05, 8.438899999999722e-05, 8.358400000000113e-05, 8.420800000000228e-05, 8.46110000000018e-05, 8.416700000000304e-05, 8.406999999999859e-05, 8.372199999999788e-05, 8.418099999999915e-05, 8.420799999999881e-05, 8.423600000000142e-05, 8.43049999999998e-05, 8.355499999999905e-05, 8.423600000000142e-05, 8.402799999999988e-05, 8.436100000000155e-05, 8.39859999999977e-05, 8.398600000000117e-05, 8.402799999999988e-05, 8.42919999999997e-05, 8.380599999999877e-05, 8.450000000000124e-05, 8.441600000000035e-05, 8.368100000000211e-05, 8.402799999999988e-05, 8.423600000000142e-05, 8.436100000000155e-05, 8.43049999999998e-05, 8.354099999999948e-05, 8.401300000000084e-05]</msg>
<status status="PASS" starttime="20201030 15:55:42.122" endtime="20201030 15:55:42.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.118" endtime="20201030 15:55:42.125"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:42.129" endtime="20201030 15:55:42.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.127" endtime="20201030 15:55:42.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.126" endtime="20201030 15:55:42.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.768" endtime="20201030 15:55:42.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.768" endtime="20201030 15:55:42.149"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.158" endtime="20201030 15:55:42.176"></status>
</kw>
<msg timestamp="20201030 15:55:42.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.156" endtime="20201030 15:55:42.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.178" endtime="20201030 15:55:42.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.180" endtime="20201030 15:55:42.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.154" endtime="20201030 15:55:42.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.152" endtime="20201030 15:55:42.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.189" endtime="20201030 15:55:42.476"></status>
</kw>
<msg timestamp="20201030 15:55:42.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021617167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021702222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.187" endtime="20201030 15:55:42.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021617167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021702222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.480" endtime="20201030 15:55:42.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.488" endtime="20201030 15:55:42.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.185" endtime="20201030 15:55:42.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.183" endtime="20201030 15:55:42.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:42.495" level="INFO">${RESULT} = [{'diff': 8.505500000000055e-05}, {'diff': 8.5153000000001e-05}, {'diff': 8.480599999999977e-05}, {'diff': 8.508399999999916e-05}, {'diff': 8.524999999999852e-05}, {'diff': 8.520799999999981e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:55:42.492" endtime="20201030 15:55:42.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:42.499" level="INFO">${ACCURACY} = {'diff': [8.505500000000055e-05, 8.5153000000001e-05, 8.480599999999977e-05, 8.508399999999916e-05, 8.524999999999852e-05, 8.520799999999981e-05, 8.522199999999938e-05, 8.449999999999777e-05, 8.488900...</msg>
<status status="PASS" starttime="20201030 15:55:42.496" endtime="20201030 15:55:42.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.503" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 15:55:42.502" endtime="20201030 15:55:42.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.506" level="INFO">VALUE: [8.505500000000055e-05, 8.5153000000001e-05, 8.480599999999977e-05, 8.508399999999916e-05, 8.524999999999852e-05, 8.520799999999981e-05, 8.522199999999938e-05, 8.449999999999777e-05, 8.488900000000119e-05, 8.548600000000267e-05, 8.490300000000076e-05, 8.531900000000037e-05, 8.512500000000187e-05, 8.466700000000008e-05, 8.569399999999727e-05, 8.53469999999995e-05, 8.534799999999898e-05, 8.520899999999929e-05, 8.538899999999822e-05, 8.519499999999972e-05, 8.488899999999772e-05, 8.537500000000212e-05, 8.498700000000164e-05, 8.526300000000209e-05, 8.49859999999987e-05, 8.451399999999734e-05, 8.456899999999962e-05, 8.46660000000006e-05, 8.481899999999987e-05, 8.500000000000174e-05, 8.530499999999733e-05, 8.538899999999822e-05, 8.473600000000192e-05, 8.526399999999809e-05, 8.536099999999908e-05, 8.524999999999852e-05, 8.463900000000094e-05, 8.545899999999954e-05, 8.504200000000045e-05, 8.490299999999729e-05, 8.458300000000266e-05, 8.524999999999852e-05, 8.549999999999877e-05, 8.505500000000055e-05, 8.559699999999976e-05, 8.488899999999772e-05, 8.468000000000017e-05, 8.53469999999995e-05, 8.481999999999934e-05, 8.523600000000242e-05]</msg>
<status status="PASS" starttime="20201030 15:55:42.504" endtime="20201030 15:55:42.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.500" endtime="20201030 15:55:42.507"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:42.511" endtime="20201030 15:55:42.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.509" endtime="20201030 15:55:42.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.508" endtime="20201030 15:55:42.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.150" endtime="20201030 15:55:42.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.150" endtime="20201030 15:55:42.531"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.540" endtime="20201030 15:55:42.559"></status>
</kw>
<msg timestamp="20201030 15:55:42.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.538" endtime="20201030 15:55:42.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.561" endtime="20201030 15:55:42.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.563" endtime="20201030 15:55:42.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.536" endtime="20201030 15:55:42.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.534" endtime="20201030 15:55:42.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.572" endtime="20201030 15:55:42.857"></status>
</kw>
<msg timestamp="20201030 15:55:42.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022586944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022672972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.571" endtime="20201030 15:55:42.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022586944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022672972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.862" endtime="20201030 15:55:42.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.870" endtime="20201030 15:55:42.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.568" endtime="20201030 15:55:42.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.566" endtime="20201030 15:55:42.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:42.876" level="INFO">${RESULT} = [{'diff': 8.602799999999841e-05}, {'diff': 8.62920000000017e-05}, {'diff': 8.583399999999991e-05}, {'diff': 8.61249999999994e-05}, {'diff': 8.620900000000029e-05}, {'diff': 8.569400000000074e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:55:42.873" endtime="20201030 15:55:42.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:42.880" level="INFO">${ACCURACY} = {'diff': [8.602799999999841e-05, 8.62920000000017e-05, 8.583399999999991e-05, 8.61249999999994e-05, 8.620900000000029e-05, 8.569400000000074e-05, 8.651399999999934e-05, 8.559699999999976e-05, 8.573599...</msg>
<status status="PASS" starttime="20201030 15:55:42.877" endtime="20201030 15:55:42.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.885" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 15:55:42.884" endtime="20201030 15:55:42.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.887" level="INFO">VALUE: [8.602799999999841e-05, 8.62920000000017e-05, 8.583399999999991e-05, 8.61249999999994e-05, 8.620900000000029e-05, 8.569400000000074e-05, 8.651399999999934e-05, 8.559699999999976e-05, 8.573599999999945e-05, 8.613899999999897e-05, 8.574999999999902e-05, 8.563899999999847e-05, 8.576399999999859e-05, 8.624999999999952e-05, 8.601399999999884e-05, 8.605600000000102e-05, 8.601400000000231e-05, 8.64310000000014e-05, 8.555600000000052e-05, 8.613900000000244e-05, 8.576399999999859e-05, 8.616599999999863e-05, 8.615199999999906e-05, 8.577699999999869e-05, 8.655499999999858e-05, 8.562500000000237e-05, 8.561099999999933e-05, 8.588899999999872e-05, 8.63470000000005e-05, 8.583399999999991e-05, 8.62920000000017e-05, 8.647200000000063e-05, 8.61669999999981e-05, 8.554200000000095e-05, 8.63059999999978e-05, 8.554199999999748e-05, 8.64730000000001e-05, 8.557000000000009e-05, 8.640199999999931e-05, 8.663899999999947e-05, 8.576399999999859e-05, 8.642999999999845e-05, 8.592999999999795e-05, 8.552800000000138e-05, 8.677800000000263e-05, 8.626399999999909e-05, 8.619400000000124e-05, 8.607000000000059e-05, 8.568099999999718e-05, 8.597199999999666e-05]</msg>
<status status="PASS" starttime="20201030 15:55:42.886" endtime="20201030 15:55:42.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.881" endtime="20201030 15:55:42.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:42.893" endtime="20201030 15:55:42.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.891" endtime="20201030 15:55:42.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.890" endtime="20201030 15:55:42.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.532" endtime="20201030 15:55:42.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.532" endtime="20201030 15:55:42.914"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.922" endtime="20201030 15:55:42.940"></status>
</kw>
<msg timestamp="20201030 15:55:42.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.921" endtime="20201030 15:55:42.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.942" endtime="20201030 15:55:42.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.944" endtime="20201030 15:55:42.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.918" endtime="20201030 15:55:42.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.916" endtime="20201030 15:55:42.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.953" endtime="20201030 15:55:43.238"></status>
</kw>
<msg timestamp="20201030 15:55:43.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021601667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021688819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.952" endtime="20201030 15:55:43.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021601667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021688819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:43.243" endtime="20201030 15:55:43.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.251" endtime="20201030 15:55:43.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.949" endtime="20201030 15:55:43.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.947" endtime="20201030 15:55:43.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:43.257" level="INFO">${RESULT} = [{'diff': 8.715200000000006e-05}, {'diff': 8.677799999999916e-05}, {'diff': 8.697199999999766e-05}, {'diff': 8.649999999999977e-05}, {'diff': 8.726400000000009e-05}, {'diff': 8.656900000000162e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:43.254" endtime="20201030 15:55:43.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:43.262" level="INFO">${ACCURACY} = {'diff': [8.715200000000006e-05, 8.677799999999916e-05, 8.697199999999766e-05, 8.649999999999977e-05, 8.726400000000009e-05, 8.656900000000162e-05, 8.66669999999986e-05, 8.738900000000022e-05, 8.71250...</msg>
<status status="PASS" starttime="20201030 15:55:43.258" endtime="20201030 15:55:43.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.267" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 15:55:43.266" endtime="20201030 15:55:43.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.269" level="INFO">VALUE: [8.715200000000006e-05, 8.677799999999916e-05, 8.697199999999766e-05, 8.649999999999977e-05, 8.726400000000009e-05, 8.656900000000162e-05, 8.66669999999986e-05, 8.738900000000022e-05, 8.71250000000004e-05, 8.701399999999984e-05, 8.727799999999966e-05, 8.718000000000267e-05, 8.729199999999923e-05, 8.715299999999954e-05, 8.752799999999991e-05, 8.708300000000169e-05, 8.649999999999977e-05, 8.743099999999893e-05, 8.754100000000001e-05, 8.708399999999769e-05, 8.708399999999769e-05, 8.679099999999926e-05, 8.657000000000109e-05, 8.719500000000172e-05, 8.750000000000077e-05, 8.713899999999997e-05, 8.726300000000062e-05, 8.687500000000015e-05, 8.715299999999954e-05, 8.688899999999972e-05, 8.729099999999976e-05, 8.730499999999933e-05, 8.726400000000009e-05, 8.655599999999805e-05, 8.73059999999988e-05, 8.66249999999999e-05, 8.705599999999855e-05, 8.654199999999848e-05, 8.729199999999923e-05, 8.762499999999743e-05, 8.675000000000002e-05, 8.656899999999815e-05, 8.730499999999933e-05, 8.690199999999981e-05, 8.71799999999992e-05, 8.698599999999723e-05, 8.690299999999929e-05, 8.747199999999816e-05, 8.69310000000019e-05, 8.681900000000187e-05]</msg>
<status status="PASS" starttime="20201030 15:55:43.268" endtime="20201030 15:55:43.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.263" endtime="20201030 15:55:43.271"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:43.274" endtime="20201030 15:55:43.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.273" endtime="20201030 15:55:43.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.272" endtime="20201030 15:55:43.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.915" endtime="20201030 15:55:43.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.914" endtime="20201030 15:55:43.295"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.304" endtime="20201030 15:55:43.321"></status>
</kw>
<msg timestamp="20201030 15:55:43.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.302" endtime="20201030 15:55:43.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.323" endtime="20201030 15:55:43.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.326" endtime="20201030 15:55:43.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.300" endtime="20201030 15:55:43.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.297" endtime="20201030 15:55:43.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.334" endtime="20201030 15:55:43.621"></status>
</kw>
<msg timestamp="20201030 15:55:43.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021749931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021837764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:43.333" endtime="20201030 15:55:43.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021749931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021837764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:43.625" endtime="20201030 15:55:43.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.633" endtime="20201030 15:55:43.635"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.330" endtime="20201030 15:55:43.635"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.329" endtime="20201030 15:55:43.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:43.639" level="INFO">${RESULT} = [{'diff': 8.783299999999897e-05}, {'diff': 8.791600000000038e-05}, {'diff': 8.83189999999999e-05}, {'diff': 8.797199999999866e-05}, {'diff': 8.834700000000251e-05}, {'diff': 8.838900000000122e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:43.636" endtime="20201030 15:55:43.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:43.643" level="INFO">${ACCURACY} = {'diff': [8.783299999999897e-05, 8.791600000000038e-05, 8.83189999999999e-05, 8.797199999999866e-05, 8.834700000000251e-05, 8.838900000000122e-05, 8.765300000000004e-05, 8.786099999999811e-05, 8.84309...</msg>
<status status="PASS" starttime="20201030 15:55:43.640" endtime="20201030 15:55:43.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.648" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 15:55:43.647" endtime="20201030 15:55:43.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.650" level="INFO">VALUE: [8.783299999999897e-05, 8.791600000000038e-05, 8.83189999999999e-05, 8.797199999999866e-05, 8.834700000000251e-05, 8.838900000000122e-05, 8.765300000000004e-05, 8.786099999999811e-05, 8.843099999999993e-05, 8.854200000000048e-05, 8.826400000000109e-05, 8.801400000000084e-05, 8.770900000000179e-05, 8.801400000000084e-05, 8.806999999999912e-05, 8.827700000000119e-05, 8.752700000000044e-05, 8.837500000000165e-05, 8.806899999999965e-05, 8.844400000000002e-05, 8.758299999999872e-05, 8.823600000000195e-05, 8.815299999999707e-05, 8.838900000000122e-05, 8.79860000000017e-05, 8.775000000000102e-05, 8.820799999999934e-05, 8.797199999999866e-05, 8.818099999999968e-05, 8.83059999999998e-05, 8.755599999999905e-05, 8.775000000000102e-05, 8.786200000000105e-05, 8.843099999999993e-05, 8.834700000000251e-05, 8.773599999999798e-05, 8.756899999999915e-05, 8.769399999999927e-05, 8.779100000000026e-05, 8.792999999999995e-05, 8.826400000000109e-05, 8.841700000000036e-05, 8.790300000000029e-05, 8.84449999999995e-05, 8.873599999999898e-05, 8.840299999999732e-05, 8.790300000000029e-05, 8.819499999999925e-05, 8.809800000000173e-05, 8.874999999999855e-05]</msg>
<status status="PASS" starttime="20201030 15:55:43.649" endtime="20201030 15:55:43.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.644" endtime="20201030 15:55:43.652"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:43.655" endtime="20201030 15:55:43.675"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.654" endtime="20201030 15:55:43.675"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.653" endtime="20201030 15:55:43.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.296" endtime="20201030 15:55:43.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.295" endtime="20201030 15:55:43.676"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.685" endtime="20201030 15:55:43.704"></status>
</kw>
<msg timestamp="20201030 15:55:43.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.683" endtime="20201030 15:55:43.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.706" endtime="20201030 15:55:43.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.708" endtime="20201030 15:55:43.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.680" endtime="20201030 15:55:43.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.678" endtime="20201030 15:55:43.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.717" endtime="20201030 15:55:44.003"></status>
</kw>
<msg timestamp="20201030 15:55:44.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022767361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022856917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:43.716" endtime="20201030 15:55:44.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022767361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022856917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.007" endtime="20201030 15:55:44.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.015" endtime="20201030 15:55:44.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.713" endtime="20201030 15:55:44.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.712" endtime="20201030 15:55:44.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:44.022" level="INFO">${RESULT} = [{'diff': 8.955600000000105e-05}, {'diff': 8.86800000000007e-05}, {'diff': 8.933300000000047e-05}, {'diff': 8.887499999999868e-05}, {'diff': 8.888900000000172e-05}, {'diff': 8.86670000000006e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:55:44.018" endtime="20201030 15:55:44.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:44.026" level="INFO">${ACCURACY} = {'diff': [8.955600000000105e-05, 8.86800000000007e-05, 8.933300000000047e-05, 8.887499999999868e-05, 8.888900000000172e-05, 8.86670000000006e-05, 8.908300000000022e-05, 8.933400000000341e-05, 8.930599...</msg>
<status status="PASS" starttime="20201030 15:55:44.023" endtime="20201030 15:55:44.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.030" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 15:55:44.029" endtime="20201030 15:55:44.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.033" level="INFO">VALUE: [8.955600000000105e-05, 8.86800000000007e-05, 8.933300000000047e-05, 8.887499999999868e-05, 8.888900000000172e-05, 8.86670000000006e-05, 8.908300000000022e-05, 8.933400000000341e-05, 8.930599999999733e-05, 8.909799999999926e-05, 8.881999999999987e-05, 8.851399999999787e-05, 8.947200000000016e-05, 8.954200000000148e-05, 8.929100000000176e-05, 8.941700000000136e-05, 8.942999999999798e-05, 8.886099999999911e-05, 8.938899999999875e-05, 8.937499999999918e-05, 8.911099999999936e-05, 8.91389999999985e-05, 8.872199999999941e-05, 8.904200000000098e-05, 8.905600000000055e-05, 8.915300000000154e-05, 8.895899999999957e-05, 8.911100000000283e-05, 8.895899999999957e-05, 8.941600000000188e-05, 8.852700000000144e-05, 8.911099999999936e-05, 8.943000000000145e-05, 8.872199999999941e-05, 8.940299999999832e-05, 8.898599999999923e-05, 8.934700000000004e-05, 8.940299999999832e-05, 8.940300000000179e-05, 8.920899999999982e-05, 8.948599999999973e-05, 8.897199999999966e-05, 8.913900000000197e-05, 8.870899999999932e-05, 8.918100000000068e-05, 8.951400000000234e-05, 8.916699999999764e-05, 8.943099999999746e-05, 8.936099999999961e-05, 8.911099999999936e-05]</msg>
<status status="PASS" starttime="20201030 15:55:44.031" endtime="20201030 15:55:44.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.027" endtime="20201030 15:55:44.035"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:44.038" endtime="20201030 15:55:44.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.037" endtime="20201030 15:55:44.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.036" endtime="20201030 15:55:44.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.677" endtime="20201030 15:55:44.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.676" endtime="20201030 15:55:44.059"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.068" endtime="20201030 15:55:44.086"></status>
</kw>
<msg timestamp="20201030 15:55:44.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.066" endtime="20201030 15:55:44.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.088" endtime="20201030 15:55:44.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.090" endtime="20201030 15:55:44.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.064" endtime="20201030 15:55:44.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.061" endtime="20201030 15:55:44.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.100" endtime="20201030 15:55:44.386"></status>
</kw>
<msg timestamp="20201030 15:55:44.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021647889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021737806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.098" endtime="20201030 15:55:44.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021647889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021737806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.390" endtime="20201030 15:55:44.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.398" endtime="20201030 15:55:44.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.095" endtime="20201030 15:55:44.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.093" endtime="20201030 15:55:44.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:44.405" level="INFO">${RESULT} = [{'diff': 8.991699999999839e-05}, {'diff': 9.020800000000134e-05}, {'diff': 8.991700000000186e-05}, {'diff': 9.043099999999846e-05}, {'diff': 8.955600000000105e-05}, {'diff': 9.018100000000168e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:44.401" endtime="20201030 15:55:44.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:44.410" level="INFO">${ACCURACY} = {'diff': [8.991699999999839e-05, 9.020800000000134e-05, 8.991700000000186e-05, 9.043099999999846e-05, 8.955600000000105e-05, 9.018100000000168e-05, 8.976400000000259e-05, 8.968100000000118e-05, 8.9695...</msg>
<status status="PASS" starttime="20201030 15:55:44.406" endtime="20201030 15:55:44.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.414" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 15:55:44.413" endtime="20201030 15:55:44.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.417" level="INFO">VALUE: [8.991699999999839e-05, 9.020800000000134e-05, 8.991700000000186e-05, 9.043099999999846e-05, 8.955600000000105e-05, 9.018100000000168e-05, 8.976400000000259e-05, 8.968100000000118e-05, 8.969500000000075e-05, 9.023600000000048e-05, 8.988899999999925e-05, 9.030500000000233e-05, 8.987499999999968e-05, 9.037500000000018e-05, 9.073600000000098e-05, 9.020800000000134e-05, 9.036100000000061e-05, 9.033400000000094e-05, 8.968100000000118e-05, 8.988899999999925e-05, 8.952799999999844e-05, 9.047200000000116e-05, 8.96670000000016e-05, 8.979099999999879e-05, 9.008299999999775e-05, 8.961099999999986e-05, 8.952700000000244e-05, 9.038800000000027e-05, 9.01939999999983e-05, 9.042999999999898e-05, 9.012499999999993e-05, 8.961099999999986e-05, 8.969500000000075e-05, 8.994400000000152e-05, 8.987499999999968e-05, 8.997200000000066e-05, 9.011099999999689e-05, 9.020799999999787e-05, 9.043100000000193e-05, 9.058400000000119e-05, 8.982000000000087e-05, 8.990300000000229e-05, 8.96519999999991e-05, 9.051399999999987e-05, 9.040299999999932e-05, 9.004100000000251e-05, 8.959700000000029e-05, 9.006900000000165e-05, 9.041699999999889e-05, 9.01800000000022e-05]</msg>
<status status="PASS" starttime="20201030 15:55:44.415" endtime="20201030 15:55:44.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.411" endtime="20201030 15:55:44.418"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:44.422" endtime="20201030 15:55:44.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.420" endtime="20201030 15:55:44.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.419" endtime="20201030 15:55:44.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.060" endtime="20201030 15:55:44.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.059" endtime="20201030 15:55:44.442"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.451" endtime="20201030 15:55:44.470"></status>
</kw>
<msg timestamp="20201030 15:55:44.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.449" endtime="20201030 15:55:44.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.471" endtime="20201030 15:55:44.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.474" endtime="20201030 15:55:44.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.447" endtime="20201030 15:55:44.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.445" endtime="20201030 15:55:44.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.483" endtime="20201030 15:55:44.771"></status>
</kw>
<msg timestamp="20201030 15:55:44.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021621653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021712375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.481" endtime="20201030 15:55:44.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021621653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021712375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.775" endtime="20201030 15:55:44.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.783" endtime="20201030 15:55:44.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.479" endtime="20201030 15:55:44.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.477" endtime="20201030 15:55:44.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:44.790" level="INFO">${RESULT} = [{'diff': 9.072199999999794e-05}, {'diff': 9.076300000000065e-05}, {'diff': 9.127699999999725e-05}, {'diff': 9.077700000000022e-05}, {'diff': 9.073600000000098e-05}, {'diff': 9.091699999999939e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:44.787" endtime="20201030 15:55:44.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:44.794" level="INFO">${ACCURACY} = {'diff': [9.072199999999794e-05, 9.076300000000065e-05, 9.127699999999725e-05, 9.077700000000022e-05, 9.073600000000098e-05, 9.091699999999939e-05, 9.106899999999918e-05, 9.088900000000025e-05, 9.0958...</msg>
<status status="PASS" starttime="20201030 15:55:44.791" endtime="20201030 15:55:44.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.798" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 15:55:44.797" endtime="20201030 15:55:44.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.801" level="INFO">VALUE: [9.072199999999794e-05, 9.076300000000065e-05, 9.127699999999725e-05, 9.077700000000022e-05, 9.073600000000098e-05, 9.091699999999939e-05, 9.106899999999918e-05, 9.088900000000025e-05, 9.095800000000209e-05, 9.088900000000025e-05, 9.054199999999901e-05, 9.098600000000123e-05, 9.130599999999933e-05, 9.151400000000087e-05, 9.129199999999976e-05, 9.073599999999751e-05, 9.11390000000005e-05, 9.137500000000118e-05, 9.104100000000004e-05, 9.106900000000265e-05, 9.130499999999986e-05, 9.097199999999819e-05, 9.115300000000007e-05, 9.144399999999955e-05, 9.095800000000209e-05, 9.113899999999703e-05, 9.097200000000166e-05, 9.112500000000093e-05, 9.118099999999921e-05, 9.122299999999792e-05, 9.062500000000043e-05, 9.098699999999724e-05, 9.111100000000136e-05, 9.09589999999981e-05, 9.088900000000025e-05, 9.142999999999998e-05, 9.090200000000034e-05, 9.080499999999936e-05, 9.1332999999999e-05, 9.161100000000186e-05, 9.080599999999883e-05, 9.112500000000093e-05, 9.132000000000237e-05, 9.115300000000007e-05, 9.093100000000243e-05, 9.111100000000136e-05, 9.0639e-05, 9.055599999999858e-05, 9.098599999999776e-05, 9.111199999999736e-05]</msg>
<status status="PASS" starttime="20201030 15:55:44.799" endtime="20201030 15:55:44.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.795" endtime="20201030 15:55:44.802"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:44.806" endtime="20201030 15:55:44.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.804" endtime="20201030 15:55:44.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.803" endtime="20201030 15:55:44.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.443" endtime="20201030 15:55:44.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.443" endtime="20201030 15:55:44.826"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.835" endtime="20201030 15:55:44.854"></status>
</kw>
<msg timestamp="20201030 15:55:44.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.833" endtime="20201030 15:55:44.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.855" endtime="20201030 15:55:44.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.858" endtime="20201030 15:55:44.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.831" endtime="20201030 15:55:44.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.829" endtime="20201030 15:55:44.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.866" endtime="20201030 15:55:45.151"></status>
</kw>
<msg timestamp="20201030 15:55:45.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022357931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02245025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:44.865" endtime="20201030 15:55:45.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022357931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02245025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:45.156" endtime="20201030 15:55:45.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.164" endtime="20201030 15:55:45.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.862" endtime="20201030 15:55:45.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.861" endtime="20201030 15:55:45.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:45.170" level="INFO">${RESULT} = [{'diff': 9.231900000000043e-05}, {'diff': 9.244400000000055e-05}, {'diff': 9.194400000000005e-05}, {'diff': 9.20000000000018e-05}, {'diff': 9.176400000000112e-05}, {'diff': 9.241700000000089e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:45.167" endtime="20201030 15:55:45.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:45.174" level="INFO">${ACCURACY} = {'diff': [9.231900000000043e-05, 9.244400000000055e-05, 9.194400000000005e-05, 9.20000000000018e-05, 9.176400000000112e-05, 9.241700000000089e-05, 9.202800000000094e-05, 9.187499999999821e-05, 9.23060...</msg>
<status status="PASS" starttime="20201030 15:55:45.171" endtime="20201030 15:55:45.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.179" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 15:55:45.178" endtime="20201030 15:55:45.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.181" level="INFO">VALUE: [9.231900000000043e-05, 9.244400000000055e-05, 9.194400000000005e-05, 9.20000000000018e-05, 9.176400000000112e-05, 9.241700000000089e-05, 9.202800000000094e-05, 9.187499999999821e-05, 9.230600000000033e-05, 9.197299999999867e-05, 9.208400000000269e-05, 9.234699999999957e-05, 9.241699999999742e-05, 9.236099999999914e-05, 9.268099999999724e-05, 9.222200000000291e-05, 9.224999999999858e-05, 9.227799999999772e-05, 9.24719999999997e-05, 9.193000000000048e-05, 9.187499999999821e-05, 9.205500000000061e-05, 9.161099999999839e-05, 9.218099999999674e-05, 9.204200000000051e-05, 9.237499999999871e-05, 9.24589999999996e-05, 9.216700000000064e-05, 9.194499999999953e-05, 9.188900000000125e-05, 9.154200000000001e-05, 9.151400000000087e-05, 9.240200000000184e-05, 9.162500000000143e-05, 9.186099999999864e-05, 9.241700000000089e-05, 9.175000000000155e-05, 9.151400000000087e-05, 9.195799999999962e-05, 9.273599999999951e-05, 9.187500000000168e-05, 9.154200000000001e-05, 9.168099999999971e-05, 9.166700000000014e-05, 9.183399999999897e-05, 9.227799999999772e-05, 9.226400000000162e-05, 9.234700000000304e-05, 9.162500000000143e-05, 9.208299999999975e-05]</msg>
<status status="PASS" starttime="20201030 15:55:45.180" endtime="20201030 15:55:45.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.175" endtime="20201030 15:55:45.183"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:45.187" endtime="20201030 15:55:45.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.186" endtime="20201030 15:55:45.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.184" endtime="20201030 15:55:45.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.827" endtime="20201030 15:55:45.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.827" endtime="20201030 15:55:45.208"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.216" endtime="20201030 15:55:45.235"></status>
</kw>
<msg timestamp="20201030 15:55:45.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:45.215" endtime="20201030 15:55:45.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:45.236" endtime="20201030 15:55:45.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.239" endtime="20201030 15:55:45.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.212" endtime="20201030 15:55:45.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.210" endtime="20201030 15:55:45.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.248" endtime="20201030 15:55:45.533"></status>
</kw>
<msg timestamp="20201030 15:55:45.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021542208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021635722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:45.246" endtime="20201030 15:55:45.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021542208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021635722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:45.538" endtime="20201030 15:55:45.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.546" endtime="20201030 15:55:45.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.244" endtime="20201030 15:55:45.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.242" endtime="20201030 15:55:45.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:45.552" level="INFO">${RESULT} = [{'diff': 9.35139999999994e-05}, {'diff': 9.248699999999874e-05}, {'diff': 9.286099999999964e-05}, {'diff': 9.337500000000318e-05}, {'diff': 9.266700000000114e-05}, {'diff': 9.281900000000093e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:45.549" endtime="20201030 15:55:45.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:45.557" level="INFO">${ACCURACY} = {'diff': [9.35139999999994e-05, 9.248699999999874e-05, 9.286099999999964e-05, 9.337500000000318e-05, 9.266700000000114e-05, 9.281900000000093e-05, 9.323600000000001e-05, 9.323600000000001e-05, 9.25550...</msg>
<status status="PASS" starttime="20201030 15:55:45.553" endtime="20201030 15:55:45.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.562" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 15:55:45.561" endtime="20201030 15:55:45.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.564" level="INFO">VALUE: [9.35139999999994e-05, 9.248699999999874e-05, 9.286099999999964e-05, 9.337500000000318e-05, 9.266700000000114e-05, 9.281900000000093e-05, 9.323600000000001e-05, 9.323600000000001e-05, 9.255500000000111e-05, 9.290300000000182e-05, 9.331900000000143e-05, 9.322200000000044e-05, 9.327800000000219e-05, 9.319399999999783e-05, 9.333400000000047e-05, 9.311099999999989e-05, 9.251299999999893e-05, 9.258300000000025e-05, 9.291599999999844e-05, 9.30000000000028e-05, 9.258300000000025e-05, 9.319399999999783e-05, 9.252800000000144e-05, 9.301400000000237e-05, 9.280500000000136e-05, 9.320800000000087e-05, 9.277800000000169e-05, 9.288900000000225e-05, 9.345800000000112e-05, 9.308300000000075e-05, 9.307000000000065e-05, 9.290299999999835e-05, 9.287499999999921e-05, 9.315300000000207e-05, 9.354199999999854e-05, 9.293100000000096e-05, 9.341599999999894e-05, 9.272199999999994e-05, 9.31520000000026e-05, 9.354100000000254e-05, 9.31390000000025e-05, 9.336100000000014e-05, 9.268100000000071e-05, 9.262499999999896e-05, 9.31940000000013e-05, 9.326399999999915e-05, 9.34590000000006e-05, 9.270899999999985e-05, 9.262499999999896e-05, 9.302800000000194e-05]</msg>
<status status="PASS" starttime="20201030 15:55:45.563" endtime="20201030 15:55:45.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.558" endtime="20201030 15:55:45.569"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:45.573" endtime="20201030 15:55:45.592"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.571" endtime="20201030 15:55:45.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.570" endtime="20201030 15:55:45.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.209" endtime="20201030 15:55:45.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.208" endtime="20201030 15:55:45.594"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.602" endtime="20201030 15:55:45.621"></status>
</kw>
<msg timestamp="20201030 15:55:45.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:45.601" endtime="20201030 15:55:45.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:45.623" endtime="20201030 15:55:45.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.625" endtime="20201030 15:55:45.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.598" endtime="20201030 15:55:45.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.596" endtime="20201030 15:55:45.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.634" endtime="20201030 15:55:45.920"></status>
</kw>
<msg timestamp="20201030 15:55:45.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021610222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021704083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:45.632" endtime="20201030 15:55:45.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021610222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021704083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:45.924" endtime="20201030 15:55:45.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.932" endtime="20201030 15:55:45.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.630" endtime="20201030 15:55:45.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.628" endtime="20201030 15:55:45.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:45.939" level="INFO">${RESULT} = [{'diff': 9.386100000000064e-05}, {'diff': 9.398600000000076e-05}, {'diff': 9.419499999999831e-05}, {'diff': 9.430499999999939e-05}, {'diff': 9.416699999999917e-05}, {'diff': 9.393000000000248e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:45.936" endtime="20201030 15:55:45.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:45.943" level="INFO">${ACCURACY} = {'diff': [9.386100000000064e-05, 9.398600000000076e-05, 9.419499999999831e-05, 9.430499999999939e-05, 9.416699999999917e-05, 9.393000000000248e-05, 9.450000000000083e-05, 9.404100000000304e-05, 9.3875...</msg>
<status status="PASS" starttime="20201030 15:55:45.940" endtime="20201030 15:55:45.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.947" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 15:55:45.946" endtime="20201030 15:55:45.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.950" level="INFO">VALUE: [9.386100000000064e-05, 9.398600000000076e-05, 9.419499999999831e-05, 9.430499999999939e-05, 9.416699999999917e-05, 9.393000000000248e-05, 9.450000000000083e-05, 9.404100000000304e-05, 9.387500000000021e-05, 9.429099999999982e-05, 9.395799999999815e-05, 9.41529999999996e-05, 9.431899999999896e-05, 9.381999999999793e-05, 9.469499999999881e-05, 9.43469999999981e-05, 9.372200000000094e-05, 9.397300000000067e-05, 9.41940000000023e-05, 9.388899999999978e-05, 9.44859999999978e-05, 9.384800000000054e-05, 9.38880000000003e-05, 9.426300000000068e-05, 9.38330000000015e-05, 9.362499999999996e-05, 9.379099999999932e-05, 9.376399999999965e-05, 9.362499999999996e-05, 9.38330000000015e-05, 9.408299999999828e-05, 9.415300000000307e-05, 9.368100000000171e-05, 9.377799999999922e-05, 9.436200000000061e-05, 9.387500000000021e-05, 9.39859999999973e-05, 9.362499999999996e-05, 9.450000000000083e-05, 9.431899999999896e-05, 9.377799999999922e-05, 9.411100000000089e-05, 9.427799999999972e-05, 9.422200000000144e-05, 9.456899999999921e-05, 9.377799999999922e-05, 9.411100000000089e-05, 9.433400000000147e-05, 9.443099999999899e-05, 9.447199999999822e-05]</msg>
<status status="PASS" starttime="20201030 15:55:45.948" endtime="20201030 15:55:45.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.944" endtime="20201030 15:55:45.951"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:45.955" endtime="20201030 15:55:45.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.953" endtime="20201030 15:55:45.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.952" endtime="20201030 15:55:45.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.595" endtime="20201030 15:55:45.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.594" endtime="20201030 15:55:45.975"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.984" endtime="20201030 15:55:46.004"></status>
</kw>
<msg timestamp="20201030 15:55:46.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:45.982" endtime="20201030 15:55:46.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.006" endtime="20201030 15:55:46.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.008" endtime="20201030 15:55:46.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.980" endtime="20201030 15:55:46.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.978" endtime="20201030 15:55:46.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.017" endtime="20201030 15:55:46.303"></status>
</kw>
<msg timestamp="20201030 15:55:46.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022583361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022678792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:46.016" endtime="20201030 15:55:46.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022583361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022678792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:46.308" endtime="20201030 15:55:46.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.316" endtime="20201030 15:55:46.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.013" endtime="20201030 15:55:46.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.011" endtime="20201030 15:55:46.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:46.323" level="INFO">${RESULT} = [{'diff': 9.543099999999999e-05}, {'diff': 9.540300000000085e-05}, {'diff': 9.516700000000017e-05}, {'diff': 9.452799999999997e-05}, {'diff': 9.52079999999994e-05}, {'diff': 9.490300000000035e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:46.320" endtime="20201030 15:55:46.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:46.328" level="INFO">${ACCURACY} = {'diff': [9.543099999999999e-05, 9.540300000000085e-05, 9.516700000000017e-05, 9.452799999999997e-05, 9.52079999999994e-05, 9.490300000000035e-05, 9.499999999999786e-05, 9.484799999999807e-05, 9.52920...</msg>
<status status="PASS" starttime="20201030 15:55:46.324" endtime="20201030 15:55:46.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.332" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 15:55:46.331" endtime="20201030 15:55:46.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.335" level="INFO">VALUE: [9.543099999999999e-05, 9.540300000000085e-05, 9.516700000000017e-05, 9.452799999999997e-05, 9.52079999999994e-05, 9.490300000000035e-05, 9.499999999999786e-05, 9.484799999999807e-05, 9.529200000000029e-05, 9.556999999999968e-05, 9.48200000000024e-05, 9.526300000000168e-05, 9.480499999999989e-05, 9.479100000000032e-05, 9.495799999999915e-05, 9.46660000000002e-05, 9.526399999999768e-05, 9.54720000000027e-05, 9.537500000000171e-05, 9.55279999999975e-05, 9.491699999999992e-05, 9.456999999999868e-05, 9.54590000000026e-05, 9.548699999999827e-05, 9.543099999999999e-05, 9.456999999999868e-05, 9.46530000000001e-05, 9.486099999999817e-05, 9.48469999999986e-05, 9.530599999999986e-05, 9.536099999999867e-05, 9.497199999999872e-05, 9.524999999999811e-05, 9.469399999999933e-05, 9.53469999999991e-05, 9.511100000000189e-05, 9.477800000000022e-05, 9.515299999999713e-05, 9.513899999999756e-05, 9.537499999999824e-05, 9.549999999999836e-05, 9.527800000000072e-05, 9.466699999999967e-05, 9.54859999999988e-05, 9.573600000000251e-05, 9.481899999999946e-05, 9.46530000000001e-05, 9.541700000000042e-05, 9.548600000000226e-05, 9.520800000000287e-05]</msg>
<status status="PASS" starttime="20201030 15:55:46.333" endtime="20201030 15:55:46.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.328" endtime="20201030 15:55:46.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:46.342" endtime="20201030 15:55:46.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.340" endtime="20201030 15:55:46.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.338" endtime="20201030 15:55:46.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.976" endtime="20201030 15:55:46.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.976" endtime="20201030 15:55:46.367"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.388" endtime="20201030 15:55:46.410"></status>
</kw>
<msg timestamp="20201030 15:55:46.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.384" endtime="20201030 15:55:46.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.414" endtime="20201030 15:55:46.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.419" endtime="20201030 15:55:46.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.378" endtime="20201030 15:55:46.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.373" endtime="20201030 15:55:46.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.440" endtime="20201030 15:55:46.731"></status>
</kw>
<msg timestamp="20201030 15:55:46.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039853292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039949833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:46.436" endtime="20201030 15:55:46.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039853292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039949833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:46.735" endtime="20201030 15:55:46.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.743" endtime="20201030 15:55:46.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.430" endtime="20201030 15:55:46.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.426" endtime="20201030 15:55:46.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:46.750" level="INFO">${RESULT} = [{'diff': 9.65409999999986e-05}, {'diff': 9.595899999999963e-05}, {'diff': 9.59859999999993e-05}, {'diff': 9.594500000000006e-05}, {'diff': 9.602699999999853e-05}, {'diff': 9.559800000000229e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:55:46.747" endtime="20201030 15:55:46.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:46.756" level="INFO">${ACCURACY} = {'diff': [9.65409999999986e-05, 9.595899999999963e-05, 9.59859999999993e-05, 9.594500000000006e-05, 9.602699999999853e-05, 9.559800000000229e-05, 9.636100000000314e-05, 9.594400000000058e-05, 9.570799...</msg>
<status status="PASS" starttime="20201030 15:55:46.751" endtime="20201030 15:55:46.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.760" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 15:55:46.759" endtime="20201030 15:55:46.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.763" level="INFO">VALUE: [9.65409999999986e-05, 9.595899999999963e-05, 9.59859999999993e-05, 9.594500000000006e-05, 9.602699999999853e-05, 9.559800000000229e-05, 9.636100000000314e-05, 9.594400000000058e-05, 9.57079999999999e-05, 9.656900000000468e-05, 9.593000000000101e-05, 9.624999999999911e-05, 9.633299999999706e-05, 9.599999999999886e-05, 9.680499999999842e-05, 9.634700000000357e-05, 9.61530000000016e-05, 9.587500000000221e-05, 9.573599999999904e-05, 9.63200000000039e-05, 9.629200000000476e-05, 9.615200000000212e-05, 9.637500000000271e-05, 9.577699999999828e-05, 9.65409999999986e-05, 9.638900000000228e-05, 9.64859999999998e-05, 9.624999999999911e-05, 9.643000000000151e-05, 9.634700000000357e-05, 9.63609999999962e-05, 9.572199999999947e-05, 9.649999999999936e-05, 9.570899999999938e-05, 9.655599999999764e-05, 9.572299999999895e-05, 9.587500000000221e-05, 9.6333000000004e-05, 9.556999999999621e-05, 9.608299999999681e-05, 9.622199999999997e-05, 9.54859999999988e-05, 9.616700000000117e-05, 9.627799999999825e-05, 9.615299999999466e-05, 9.566700000000067e-05, 9.636100000000314e-05, 9.636100000000314e-05, 9.568100000000024e-05, 9.658399999999678e-05]</msg>
<status status="PASS" starttime="20201030 15:55:46.761" endtime="20201030 15:55:46.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.756" endtime="20201030 15:55:46.764"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:46.768" endtime="20201030 15:55:46.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.766" endtime="20201030 15:55:46.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.765" endtime="20201030 15:55:46.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.369" endtime="20201030 15:55:46.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.368" endtime="20201030 15:55:46.789"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.799" endtime="20201030 15:55:46.818"></status>
</kw>
<msg timestamp="20201030 15:55:46.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.797" endtime="20201030 15:55:46.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.820" endtime="20201030 15:55:46.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.822" endtime="20201030 15:55:46.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.794" endtime="20201030 15:55:46.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.792" endtime="20201030 15:55:46.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.832" endtime="20201030 15:55:47.119"></status>
</kw>
<msg timestamp="20201030 15:55:47.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023178542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023275903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:46.830" endtime="20201030 15:55:47.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023178542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023275903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.123" endtime="20201030 15:55:47.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.132" endtime="20201030 15:55:47.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.827" endtime="20201030 15:55:47.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.826" endtime="20201030 15:55:47.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:47.139" level="INFO">${RESULT} = [{'diff': 9.736100000000067e-05}, {'diff': 9.7027999999999e-05}, {'diff': 9.72219999999975e-05}, {'diff': 9.694400000000158e-05}, {'diff': 9.668100000000124e-05}, {'diff': 9.67080000000009e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 15:55:47.135" endtime="20201030 15:55:47.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:47.146" level="INFO">${ACCURACY} = {'diff': [9.736100000000067e-05, 9.7027999999999e-05, 9.72219999999975e-05, 9.694400000000158e-05, 9.668100000000124e-05, 9.67080000000009e-05, 9.686100000000017e-05, 9.658400000000025e-05, 9.70980000...</msg>
<status status="PASS" starttime="20201030 15:55:47.140" endtime="20201030 15:55:47.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.151" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 15:55:47.150" endtime="20201030 15:55:47.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.154" level="INFO">VALUE: [9.736100000000067e-05, 9.7027999999999e-05, 9.72219999999975e-05, 9.694400000000158e-05, 9.668100000000124e-05, 9.67080000000009e-05, 9.686100000000017e-05, 9.658400000000025e-05, 9.709800000000032e-05, 9.686100000000017e-05, 9.663899999999906e-05, 9.738899999999981e-05, 9.702800000000247e-05, 9.74019999999999e-05, 9.780499999999942e-05, 9.669399999999786e-05, 9.712499999999999e-05, 9.680500000000189e-05, 9.693099999999802e-05, 9.731899999999849e-05, 9.7027999999999e-05, 9.7027999999999e-05, 9.65279999999985e-05, 9.708400000000075e-05, 9.719500000000131e-05, 9.750000000000036e-05, 9.7027999999999e-05, 9.745900000000113e-05, 9.669399999999786e-05, 9.759699999999788e-05, 9.73609999999972e-05, 9.723599999999707e-05, 9.681899999999799e-05, 9.693000000000201e-05, 9.750000000000036e-05, 9.6721999999997e-05, 9.72080000000014e-05, 9.745900000000113e-05, 9.687499999999974e-05, 9.718100000000174e-05, 9.657000000000068e-05, 9.687499999999974e-05, 9.730600000000186e-05, 9.713800000000009e-05, 9.74019999999999e-05, 9.654100000000207e-05, 9.692999999999855e-05, 9.750000000000036e-05, 9.69860000000003e-05, 9.743000000000251e-05]</msg>
<status status="PASS" starttime="20201030 15:55:47.152" endtime="20201030 15:55:47.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.147" endtime="20201030 15:55:47.155"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:47.159" endtime="20201030 15:55:47.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.158" endtime="20201030 15:55:47.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.156" endtime="20201030 15:55:47.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.790" endtime="20201030 15:55:47.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.789" endtime="20201030 15:55:47.180"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.189" endtime="20201030 15:55:47.209"></status>
</kw>
<msg timestamp="20201030 15:55:47.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.187" endtime="20201030 15:55:47.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.210" endtime="20201030 15:55:47.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.213" endtime="20201030 15:55:47.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.185" endtime="20201030 15:55:47.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.182" endtime="20201030 15:55:47.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.222" endtime="20201030 15:55:47.507"></status>
</kw>
<msg timestamp="20201030 15:55:47.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022758542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022857, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:47.220" endtime="20201030 15:55:47.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022758542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022857, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:47.511" endtime="20201030 15:55:47.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.520" endtime="20201030 15:55:47.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.218" endtime="20201030 15:55:47.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.216" endtime="20201030 15:55:47.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:47.526" level="INFO">${RESULT} = [{'diff': 9.845799999999919e-05}, {'diff': 9.84020000000009e-05}, {'diff': 9.763900000000006e-05}, {'diff': 9.786100000000117e-05}, {'diff': 9.759700000000135e-05}, {'diff': 9.83470000000021e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:55:47.523" endtime="20201030 15:55:47.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:47.530" level="INFO">${ACCURACY} = {'diff': [9.845799999999919e-05, 9.84020000000009e-05, 9.763900000000006e-05, 9.786100000000117e-05, 9.759700000000135e-05, 9.83470000000021e-05, 9.826400000000068e-05, 9.787499999999727e-05, 9.808299...</msg>
<status status="PASS" starttime="20201030 15:55:47.527" endtime="20201030 15:55:47.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.535" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 15:55:47.534" endtime="20201030 15:55:47.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.537" level="INFO">VALUE: [9.845799999999919e-05, 9.84020000000009e-05, 9.763900000000006e-05, 9.786100000000117e-05, 9.759700000000135e-05, 9.83470000000021e-05, 9.826400000000068e-05, 9.787499999999727e-05, 9.808299999999881e-05, 9.791699999999945e-05, 9.804199999999957e-05, 9.757000000000168e-05, 9.768100000000224e-05, 9.815300000000013e-05, 9.858399999999878e-05, 9.775000000000061e-05, 9.777700000000028e-05, 9.819399999999937e-05, 9.780499999999942e-05, 9.863900000000106e-05, 9.838900000000081e-05, 9.838900000000081e-05, 9.763900000000006e-05, 9.762500000000049e-05, 9.841699999999995e-05, 9.804199999999957e-05, 9.829199999999982e-05, 9.769499999999834e-05, 9.82920000000033e-05, 9.78340000000015e-05, 9.84999999999979e-05, 9.786200000000064e-05, 9.827699999999731e-05, 9.815199999999719e-05, 9.809699999999838e-05, 9.800000000000086e-05, 9.807000000000218e-05, 9.844399999999962e-05, 9.822200000000197e-05, 9.833299999999906e-05, 9.755600000000211e-05, 9.781999999999846e-05, 9.773600000000104e-05, 9.811100000000142e-05, 9.812499999999752e-05, 9.775000000000061e-05, 9.772300000000095e-05, 9.800000000000086e-05, 9.812499999999752e-05, 9.866600000000073e-05]</msg>
<status status="PASS" starttime="20201030 15:55:47.536" endtime="20201030 15:55:47.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.531" endtime="20201030 15:55:47.539"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:47.543" endtime="20201030 15:55:47.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.541" endtime="20201030 15:55:47.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.540" endtime="20201030 15:55:47.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.181" endtime="20201030 15:55:47.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.180" endtime="20201030 15:55:47.564"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.572" endtime="20201030 15:55:47.591"></status>
</kw>
<msg timestamp="20201030 15:55:47.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.571" endtime="20201030 15:55:47.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.593" endtime="20201030 15:55:47.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.596" endtime="20201030 15:55:47.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.568" endtime="20201030 15:55:47.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.566" endtime="20201030 15:55:47.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.604" endtime="20201030 15:55:47.895"></status>
</kw>
<msg timestamp="20201030 15:55:47.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021769764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021868778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.603" endtime="20201030 15:55:47.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021769764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021868778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.904" endtime="20201030 15:55:47.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.922" endtime="20201030 15:55:47.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.600" endtime="20201030 15:55:47.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.599" endtime="20201030 15:55:47.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:47.936" level="INFO">${RESULT} = [{'diff': 9.901399999999796e-05}, {'diff': 9.856899999999974e-05}, {'diff': 9.909699999999938e-05}, {'diff': 9.888900000000131e-05}, {'diff': 9.902799999999753e-05}, {'diff': 9.934699999999963e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:47.929" endtime="20201030 15:55:47.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:47.946" level="INFO">${ACCURACY} = {'diff': [9.901399999999796e-05, 9.856899999999974e-05, 9.909699999999938e-05, 9.888900000000131e-05, 9.902799999999753e-05, 9.934699999999963e-05, 9.918100000000027e-05, 9.873599999999857e-05, 9.9458...</msg>
<status status="PASS" starttime="20201030 15:55:47.938" endtime="20201030 15:55:47.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.955" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 15:55:47.953" endtime="20201030 15:55:47.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.960" level="INFO">VALUE: [9.901399999999796e-05, 9.856899999999974e-05, 9.909699999999938e-05, 9.888900000000131e-05, 9.902799999999753e-05, 9.934699999999963e-05, 9.918100000000027e-05, 9.873599999999857e-05, 9.945899999999966e-05, 9.933399999999953e-05, 9.93479999999991e-05, 9.94869999999988e-05, 9.877700000000128e-05, 9.912499999999852e-05, 9.951400000000193e-05, 9.895799999999969e-05, 9.8721999999999e-05, 9.866600000000073e-05, 9.892999999999708e-05, 9.919400000000037e-05, 9.948599999999932e-05, 9.919499999999984e-05, 9.881899999999999e-05, 9.89869999999983e-05, 9.927800000000125e-05, 9.887500000000174e-05, 9.876400000000118e-05, 9.895899999999916e-05, 9.926300000000221e-05, 9.963799999999912e-05, 9.924999999999864e-05, 9.858299999999931e-05, 9.887499999999827e-05, 9.865300000000063e-05, 9.904200000000057e-05, 9.933300000000006e-05, 9.901400000000143e-05, 9.94869999999988e-05, 9.916699999999723e-05, 9.919500000000331e-05, 9.913900000000156e-05, 9.93609999999992e-05, 9.948700000000227e-05, 9.870900000000238e-05, 9.897199999999926e-05, 9.909699999999938e-05, 9.866600000000073e-05, 9.929100000000135e-05, 9.906999999999971e-05, 9.937499999999877e-05]</msg>
<status status="PASS" starttime="20201030 15:55:47.957" endtime="20201030 15:55:47.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.948" endtime="20201030 15:55:47.963"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:47.971" endtime="20201030 15:55:47.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.967" endtime="20201030 15:55:47.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.965" endtime="20201030 15:55:47.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.565" endtime="20201030 15:55:47.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.564" endtime="20201030 15:55:47.992"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.001" endtime="20201030 15:55:48.020"></status>
</kw>
<msg timestamp="20201030 15:55:48.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.999" endtime="20201030 15:55:48.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.022" endtime="20201030 15:55:48.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.024" endtime="20201030 15:55:48.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.996" endtime="20201030 15:55:48.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.994" endtime="20201030 15:55:48.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.033" endtime="20201030 15:55:48.323"></status>
</kw>
<msg timestamp="20201030 15:55:48.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021916583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022016361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.032" endtime="20201030 15:55:48.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021916583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022016361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.327" endtime="20201030 15:55:48.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.335" endtime="20201030 15:55:48.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.029" endtime="20201030 15:55:48.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.027" endtime="20201030 15:55:48.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:48.341" level="INFO">${RESULT} = [{'diff': 9.977800000000175e-05}, {'diff': 0.0001000419999999981}, {'diff': 0.00010020799999999747}, {'diff': 0.00010051399999999946}, {'diff': 9.982000000000046e-05}, {'diff': 0.0001003610000000002},...</msg>
<status status="PASS" starttime="20201030 15:55:48.338" endtime="20201030 15:55:48.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:48.345" level="INFO">${ACCURACY} = {'diff': [9.977800000000175e-05, 0.0001000419999999981, 0.00010020799999999747, 0.00010051399999999946, 9.982000000000046e-05, 0.0001003610000000002, 0.0001003610000000002, 9.988900000000231e-05, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:48.342" endtime="20201030 15:55:48.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.350" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 15:55:48.349" endtime="20201030 15:55:48.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.352" level="INFO">VALUE: [9.977800000000175e-05, 0.0001000419999999981, 0.00010020799999999747, 0.00010051399999999946, 9.982000000000046e-05, 0.0001003610000000002, 0.0001003610000000002, 9.988900000000231e-05, 0.00010015299999999866, 0.00010075000000000014, 9.99999999999994e-05, 0.0001003060000000014, 0.00010020800000000094, 0.00010043100000000152, 0.0001005419999999986, 0.00010018100000000127, 0.00010020900000000041, 9.968100000000077e-05, 9.957000000000021e-05, 9.992999999999808e-05, 0.00010037499999999977, 9.966600000000173e-05, 0.00010027800000000225, 0.0001001939999999979, 9.993000000000155e-05, 0.00010051399999999946, 0.00010047300000000023, 0.00010032000000000096, 0.0001001809999999978, 0.00010047200000000076, 9.993000000000155e-05, 9.99999999999994e-05, 9.957000000000021e-05, 9.957000000000021e-05, 9.994500000000059e-05, 0.00010045800000000119, 0.00010038899999999934, 0.00010042999999999858, 0.00010001400000000243, 0.00010024999999999964, 0.0001003060000000014, 0.00010001399999999896, 9.965299999999816e-05, 9.961100000000292e-05, 9.991699999999798e-05, 0.00010015199999999919, 0.00010005599999999767, 0.00010038899999999934, 9.997299999999973e-05, 9.997299999999973e-05]</msg>
<status status="PASS" starttime="20201030 15:55:48.351" endtime="20201030 15:55:48.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.346" endtime="20201030 15:55:48.353"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:48.357" endtime="20201030 15:55:48.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.355" endtime="20201030 15:55:48.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.354" endtime="20201030 15:55:48.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.993" endtime="20201030 15:55:48.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.992" endtime="20201030 15:55:48.378"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.386" endtime="20201030 15:55:48.406"></status>
</kw>
<msg timestamp="20201030 15:55:48.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.385" endtime="20201030 15:55:48.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.408" endtime="20201030 15:55:48.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.410" endtime="20201030 15:55:48.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.382" endtime="20201030 15:55:48.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.380" endtime="20201030 15:55:48.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.419" endtime="20201030 15:55:48.710"></status>
</kw>
<msg timestamp="20201030 15:55:48.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022738056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022838986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.418" endtime="20201030 15:55:48.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022738056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022838986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.719" endtime="20201030 15:55:48.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.737" endtime="20201030 15:55:48.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.415" endtime="20201030 15:55:48.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.413" endtime="20201030 15:55:48.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:48.751" level="INFO">${RESULT} = [{'diff': 0.00010092999999999908}, {'diff': 0.00010108299999999834}, {'diff': 0.00010131899999999902}, {'diff': 0.00010142999999999958}, {'diff': 0.0001008610000000007}, {'diff': 0.0001005829999999978...</msg>
<status status="PASS" starttime="20201030 15:55:48.744" endtime="20201030 15:55:48.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:48.759" level="INFO">${ACCURACY} = {'diff': [0.00010092999999999908, 0.00010108299999999834, 0.00010131899999999902, 0.00010142999999999958, 0.0001008610000000007, 0.00010058299999999784, 0.00010057000000000121, 0.00010052799999999903,...</msg>
<status status="PASS" starttime="20201030 15:55:48.753" endtime="20201030 15:55:48.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.768" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 15:55:48.766" endtime="20201030 15:55:48.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.773" level="INFO">VALUE: [0.00010092999999999908, 0.00010108299999999834, 0.00010131899999999902, 0.00010142999999999958, 0.0001008610000000007, 0.00010058299999999784, 0.00010057000000000121, 0.00010052799999999903, 0.00010102799999999953, 0.00010122299999999751, 0.00010138900000000034, 0.00010097300000000073, 0.00010070800000000144, 0.00010109699999999791, 0.00010115200000000019, 0.00010061100000000045, 0.00010079199999999885, 0.00010051399999999946, 0.00010147200000000176, 0.00010143100000000252, 0.00010058300000000131, 0.00010148600000000133, 0.00010112500000000052, 0.00010088900000000331, 0.00010141699999999948, 0.00010101399999999996, 0.00010133399999999806, 0.00010127700000000031, 0.00010147200000000176, 0.00010134699999999816, 0.000101416, 0.00010066599999999926, 0.00010137500000000077, 0.0001015000000000009, 0.00010108300000000181, 0.00010097200000000126, 0.0001008060000000019, 0.00010112500000000052, 0.0001006670000000022, 0.00010169500000000234, 0.00010052799999999903, 0.0001011670000000027, 0.00010061100000000045, 0.00010109700000000138, 0.00010156899999999927, 0.00010151400000000046, 0.00010136099999999773, 0.00010134700000000163, 0.00010125000000000065, 0.00010173600000000158]</msg>
<status status="PASS" starttime="20201030 15:55:48.770" endtime="20201030 15:55:48.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.761" endtime="20201030 15:55:48.777"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:48.783" endtime="20201030 15:55:48.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.782" endtime="20201030 15:55:48.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.779" endtime="20201030 15:55:48.804"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.378" endtime="20201030 15:55:48.804"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.378" endtime="20201030 15:55:48.804"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.813" endtime="20201030 15:55:48.831"></status>
</kw>
<msg timestamp="20201030 15:55:48.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.811" endtime="20201030 15:55:48.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.833" endtime="20201030 15:55:48.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.835" endtime="20201030 15:55:48.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.809" endtime="20201030 15:55:48.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.807" endtime="20201030 15:55:48.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.844" endtime="20201030 15:55:49.129"></status>
</kw>
<msg timestamp="20201030 15:55:49.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021936653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022039139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.843" endtime="20201030 15:55:49.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021936653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022039139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.133" endtime="20201030 15:55:49.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.141" endtime="20201030 15:55:49.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.840" endtime="20201030 15:55:49.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.839" endtime="20201030 15:55:49.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:49.148" level="INFO">${RESULT} = [{'diff': 0.00010248599999999886}, {'diff': 0.00010227800000000078}, {'diff': 0.00010195799999999922}, {'diff': 0.00010208299999999934}, {'diff': 0.00010162500000000102}, {'diff': 0.000102167000000000...</msg>
<status status="PASS" starttime="20201030 15:55:49.145" endtime="20201030 15:55:49.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:49.153" level="INFO">${ACCURACY} = {'diff': [0.00010248599999999886, 0.00010227800000000078, 0.00010195799999999922, 0.00010208299999999934, 0.00010162500000000102, 0.00010216700000000023, 0.00010238899999999787, 0.00010213900000000109...</msg>
<status status="PASS" starttime="20201030 15:55:49.149" endtime="20201030 15:55:49.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.157" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 15:55:49.156" endtime="20201030 15:55:49.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.159" level="INFO">VALUE: [0.00010248599999999886, 0.00010227800000000078, 0.00010195799999999922, 0.00010208299999999934, 0.00010162500000000102, 0.00010216700000000023, 0.00010238899999999787, 0.00010213900000000109, 0.00010240300000000091, 0.00010266700000000073, 0.00010226400000000122, 0.00010191699999999998, 0.00010179199999999985, 0.00010247199999999929, 0.00010254099999999766, 0.00010170799999999897, 0.00010199999999999793, 0.00010225000000000165, 0.00010209700000000238, 0.00010277800000000128, 0.00010205599999999967, 0.00010237500000000177, 0.00010204100000000063, 0.00010198599999999836, 0.00010222300000000198, 0.00010205600000000314, 0.00010157000000000221, 0.0001016670000000032, 0.00010229200000000035, 0.00010226299999999827, 0.0001020000000000014, 0.00010147200000000176, 0.00010229100000000088, 0.00010201400000000097, 0.00010280600000000042, 0.00010222199999999904, 0.00010162499999999755, 0.00010209699999999891, 0.00010187500000000127, 0.0001020139999999975, 0.00010202699999999759, 0.0001022359999999986, 0.00010166699999999973, 0.00010161200000000092, 0.00010248599999999886, 0.00010193000000000008, 0.00010193000000000008, 0.00010206899999999977, 0.00010183299999999909, 0.0001025550000000007]</msg>
<status status="PASS" starttime="20201030 15:55:49.158" endtime="20201030 15:55:49.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.153" endtime="20201030 15:55:49.161"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:49.164" endtime="20201030 15:55:49.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.163" endtime="20201030 15:55:49.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.162" endtime="20201030 15:55:49.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.805" endtime="20201030 15:55:49.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.804" endtime="20201030 15:55:49.185"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.194" endtime="20201030 15:55:49.214"></status>
</kw>
<msg timestamp="20201030 15:55:49.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.193" endtime="20201030 15:55:49.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.216" endtime="20201030 15:55:49.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.218" endtime="20201030 15:55:49.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.190" endtime="20201030 15:55:49.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.188" endtime="20201030 15:55:49.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.227" endtime="20201030 15:55:49.514"></status>
</kw>
<msg timestamp="20201030 15:55:49.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022486778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022589847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.225" endtime="20201030 15:55:49.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022486778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022589847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.518" endtime="20201030 15:55:49.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.526" endtime="20201030 15:55:49.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.223" endtime="20201030 15:55:49.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.221" endtime="20201030 15:55:49.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:49.532" level="INFO">${RESULT} = [{'diff': 0.00010306900000000077}, {'diff': 0.00010272299999999901}, {'diff': 0.00010258299999999984}, {'diff': 0.00010316600000000176}, {'diff': 0.00010322299999999951}, {'diff': 0.000102582999999999...</msg>
<status status="PASS" starttime="20201030 15:55:49.529" endtime="20201030 15:55:49.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:49.536" level="INFO">${ACCURACY} = {'diff': [0.00010306900000000077, 0.00010272299999999901, 0.00010258299999999984, 0.00010316600000000176, 0.00010322299999999951, 0.00010258299999999984, 0.0001030139999999985, 0.00010347199999999682,...</msg>
<status status="PASS" starttime="20201030 15:55:49.533" endtime="20201030 15:55:49.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.541" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 15:55:49.540" endtime="20201030 15:55:49.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.543" level="INFO">VALUE: [0.00010306900000000077, 0.00010272299999999901, 0.00010258299999999984, 0.00010316600000000176, 0.00010322299999999951, 0.00010258299999999984, 0.0001030139999999985, 0.00010347199999999682, 0.00010258299999999984, 0.00010329200000000135, 0.00010348599999999986, 0.00010277800000000128, 0.00010322200000000004, 0.0001026810000000003, 0.00010315299999999819, 0.00010286099999999923, 0.00010336099999999973, 0.0001030559999999972, 0.00010349999999999943, 0.00010334700000000016, 0.00010334700000000016, 0.0001027359999999991, 0.00010331900000000102, 0.00010276400000000172, 0.00010377799999999882, 0.00010345800000000072, 0.00010312499999999905, 0.00010334700000000016, 0.00010283399999999956, 0.00010290299999999794, 0.00010297199999999979, 0.00010263900000000159, 0.00010302799999999807, 0.00010320899999999994, 0.00010340199999999897, 0.00010280499999999748, 0.00010290299999999794, 0.00010315199999999872, 0.00010320800000000047, 0.00010281900000000052, 0.0001026810000000003, 0.00010274999999999868, 0.00010307000000000024, 0.00010288900000000184, 0.00010295899999999969, 0.00010315300000000166, 0.00010288900000000184, 0.00010286099999999923, 0.00010327799999999832, 0.00010324999999999918]</msg>
<status status="PASS" starttime="20201030 15:55:49.542" endtime="20201030 15:55:49.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.537" endtime="20201030 15:55:49.544"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:49.548" endtime="20201030 15:55:49.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.546" endtime="20201030 15:55:49.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.545" endtime="20201030 15:55:49.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.186" endtime="20201030 15:55:49.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.186" endtime="20201030 15:55:49.569"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.577" endtime="20201030 15:55:49.598"></status>
</kw>
<msg timestamp="20201030 15:55:49.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.576" endtime="20201030 15:55:49.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.600" endtime="20201030 15:55:49.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.602" endtime="20201030 15:55:49.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.573" endtime="20201030 15:55:49.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.571" endtime="20201030 15:55:49.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.611" endtime="20201030 15:55:49.895"></status>
</kw>
<msg timestamp="20201030 15:55:49.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022878792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02298325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:49.609" endtime="20201030 15:55:49.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022878792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02298325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:49.899" endtime="20201030 15:55:49.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.907" endtime="20201030 15:55:49.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.607" endtime="20201030 15:55:49.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.605" endtime="20201030 15:55:49.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:49.913" level="INFO">${RESULT} = [{'diff': 0.00010445800000000172}, {'diff': 0.00010443100000000205}, {'diff': 0.00010395799999999775}, {'diff': 0.00010391599999999904}, {'diff': 0.0001041940000000019}, {'diff': 0.0001037639999999992...</msg>
<status status="PASS" starttime="20201030 15:55:49.910" endtime="20201030 15:55:49.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:49.917" level="INFO">${ACCURACY} = {'diff': [0.00010445800000000172, 0.00010443100000000205, 0.00010395799999999775, 0.00010391599999999904, 0.0001041940000000019, 0.00010376399999999925, 0.00010441699999999901, 0.00010413900000000309,...</msg>
<status status="PASS" starttime="20201030 15:55:49.914" endtime="20201030 15:55:49.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.922" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 15:55:49.921" endtime="20201030 15:55:49.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.924" level="INFO">VALUE: [0.00010445800000000172, 0.00010443100000000205, 0.00010395799999999775, 0.00010391599999999904, 0.0001041940000000019, 0.00010376399999999925, 0.00010441699999999901, 0.00010413900000000309, 0.00010436100000000073, 0.0001040420000000021, 0.00010448599999999739, 0.0001040139999999995, 0.0001037360000000001, 0.0001045689999999988, 0.00010408400000000081, 0.00010361199999999945, 0.00010408300000000134, 0.00010390199999999947, 0.00010369399999999793, 0.00010418099999999833, 0.00010376400000000272, 0.00010354199999999814, 0.00010415299999999919, 0.00010399999999999993, 0.00010395800000000122, 0.0001037360000000001, 0.00010427799999999932, 0.00010401400000000297, 0.00010372300000000001, 0.00010479099999999991, 0.00010379100000000238, 0.00010397199999999732, 0.0001036940000000014, 0.00010387500000000327, 0.00010469399999999893, 0.00010408300000000134, 0.00010409699999999744, 0.00010388900000000284, 0.00010429200000000236, 0.00010427799999999932, 0.0001043750000000003, 0.0001041810000000018, 0.00010402799999999907, 0.00010398600000000036, 0.0001039160000000025, 0.00010355499999999823, 0.00010363799999999965, 0.00010363899999999912, 0.00010394399999999818, 0.00010412500000000005]</msg>
<status status="PASS" starttime="20201030 15:55:49.923" endtime="20201030 15:55:49.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.918" endtime="20201030 15:55:49.926"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:49.930" endtime="20201030 15:55:49.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.928" endtime="20201030 15:55:49.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.927" endtime="20201030 15:55:49.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.569" endtime="20201030 15:55:49.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.569" endtime="20201030 15:55:49.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.416" endtime="20201030 15:55:49.951"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:11.345" endtime="20201030 15:55:49.951" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:49.958" endtime="20201030 15:55:49.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.956" endtime="20201030 15:55:49.978"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.991" endtime="20201030 15:55:50.005"></status>
</kw>
<msg timestamp="20201030 15:55:50.005" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.989" endtime="20201030 15:55:50.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.008" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.006" endtime="20201030 15:55:50.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.011" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:50.009" endtime="20201030 15:55:50.011"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:49.987" endtime="20201030 15:55:50.012"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:49.984" endtime="20201030 15:55:50.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.983" endtime="20201030 15:55:50.012"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:50.016" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:50.016" endtime="20201030 15:55:50.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.013" endtime="20201030 15:55:50.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.982" endtime="20201030 15:55:50.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.981" endtime="20201030 15:55:50.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.018" endtime="20201030 15:55:50.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.980" endtime="20201030 15:55:50.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.979" endtime="20201030 15:55:50.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.955" endtime="20201030 15:55:50.021"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.031" endtime="20201030 15:55:50.047"></status>
</kw>
<msg timestamp="20201030 15:55:50.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.030" endtime="20201030 15:55:50.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.049" endtime="20201030 15:55:50.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.052" endtime="20201030 15:55:50.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.026" endtime="20201030 15:55:50.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.024" endtime="20201030 15:55:50.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.061" endtime="20201030 15:55:50.347"></status>
</kw>
<msg timestamp="20201030 15:55:50.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066091681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066113444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.059" endtime="20201030 15:55:50.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066091681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066113444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.351" endtime="20201030 15:55:50.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.359" endtime="20201030 15:55:50.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.056" endtime="20201030 15:55:50.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.055" endtime="20201030 15:55:50.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:50.366" level="INFO">${RESULT} = [{'diff': 2.1762999999994093e-05}, {'diff': 2.236099999999852e-05}, {'diff': 2.1679999999996147e-05}, {'diff': 2.205500000000693e-05}, {'diff': 2.1694000000002656e-05}, {'diff': 2.1443999999995467e-05...</msg>
<status status="PASS" starttime="20201030 15:55:50.363" endtime="20201030 15:55:50.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:50.370" level="INFO">${ACCURACY} = {'diff': [2.1762999999994093e-05, 2.236099999999852e-05, 2.1679999999996147e-05, 2.205500000000693e-05, 2.1694000000002656e-05, 2.1443999999995467e-05, 2.1887999999997687e-05, 2.229100000000761e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:55:50.367" endtime="20201030 15:55:50.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.375" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 15:55:50.374" endtime="20201030 15:55:50.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.378" level="INFO">VALUE: [2.1762999999994093e-05, 2.236099999999852e-05, 2.1679999999996147e-05, 2.205500000000693e-05, 2.1694000000002656e-05, 2.1443999999995467e-05, 2.1887999999997687e-05, 2.229100000000761e-05, 2.212499999999784e-05, 2.2166000000004016e-05, 2.158300000000557e-05, 2.2013999999986877e-05, 2.2082999999992192e-05, 2.1958000000002476e-05, 2.183299999999888e-05, 2.138899999999666e-05, 2.20969999999987e-05, 2.2250000000001435e-05, 2.211100000000521e-05, 2.2166000000004016e-05, 2.1999999999994246e-05, 2.1514000000000255e-05, 2.1514000000000255e-05, 2.209700000001258e-05, 2.1430000000002836e-05, 2.1472000000008484e-05, 2.1402999999989292e-05, 2.2235999999994926e-05, 2.2012999999987404e-05, 2.190300000000367e-05, 2.186099999999802e-05, 2.1791999999992706e-05, 2.1681000000009498e-05, 2.2292000000007084e-05, 2.211100000000521e-05, 2.1681000000009498e-05, 2.1986000000001615e-05, 2.14169999999958e-05, 2.2138999999990472e-05, 2.1986000000001615e-05, 2.170899999999476e-05, 2.1819999999991846e-05, 2.166700000000299e-05, 2.2181000000009998e-05, 2.215299999999698e-05, 2.2221999999988418e-05, 2.188899999999716e-05, 2.2291999999993206e-05, 2.166700000000299e-05, 2.2055999999992526e-05]</msg>
<status status="PASS" starttime="20201030 15:55:50.376" endtime="20201030 15:55:50.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.371" endtime="20201030 15:55:50.379"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:50.382" endtime="20201030 15:55:50.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.381" endtime="20201030 15:55:50.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.380" endtime="20201030 15:55:50.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.022" endtime="20201030 15:55:50.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.022" endtime="20201030 15:55:50.403"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.411" endtime="20201030 15:55:50.428"></status>
</kw>
<msg timestamp="20201030 15:55:50.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.410" endtime="20201030 15:55:50.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.429" endtime="20201030 15:55:50.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.432" endtime="20201030 15:55:50.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.407" endtime="20201030 15:55:50.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.405" endtime="20201030 15:55:50.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.440" endtime="20201030 15:55:50.727"></status>
</kw>
<msg timestamp="20201030 15:55:50.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022170667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022192847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.439" endtime="20201030 15:55:50.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022170667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022192847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.732" endtime="20201030 15:55:50.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.740" endtime="20201030 15:55:50.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.436" endtime="20201030 15:55:50.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.435" endtime="20201030 15:55:50.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:50.747" level="INFO">${RESULT} = [{'diff': 2.2180000000000116e-05}, {'diff': 2.1666000000000046e-05}, {'diff': 2.2014000000000755e-05}, {'diff': 2.1514000000000255e-05}, {'diff': 2.1429999999999366e-05}, {'diff': 2.2014000000000755e-...</msg>
<status status="PASS" starttime="20201030 15:55:50.743" endtime="20201030 15:55:50.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:50.752" level="INFO">${ACCURACY} = {'diff': [2.2180000000000116e-05, 2.1666000000000046e-05, 2.2014000000000755e-05, 2.1514000000000255e-05, 2.1429999999999366e-05, 2.2014000000000755e-05, 2.191699999999977e-05, 2.193100000000281e-05, ...</msg>
<status status="PASS" starttime="20201030 15:55:50.748" endtime="20201030 15:55:50.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.756" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 15:55:50.755" endtime="20201030 15:55:50.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.759" level="INFO">VALUE: [2.2180000000000116e-05, 2.1666000000000046e-05, 2.2014000000000755e-05, 2.1514000000000255e-05, 2.1429999999999366e-05, 2.2014000000000755e-05, 2.191699999999977e-05, 2.193100000000281e-05, 2.184700000000192e-05, 2.1583999999998105e-05, 2.165299999999995e-05, 2.1429999999999366e-05, 2.166699999999952e-05, 2.166699999999952e-05, 2.2249999999997966e-05, 2.2221999999998826e-05, 2.20969999999987e-05, 2.1764000000000505e-05, 2.1916000000000296e-05, 2.161099999999777e-05, 2.1749999999997466e-05, 2.1833999999998355e-05, 2.2347999999998425e-05, 2.216700000000002e-05, 2.2278000000000575e-05, 2.165299999999995e-05, 2.144500000000188e-05, 2.1971999999998576e-05, 2.233299999999938e-05, 2.233300000000285e-05, 2.1513999999996786e-05, 2.2083999999998605e-05, 2.2305999999999715e-05, 2.161099999999777e-05, 2.144500000000188e-05, 2.1985999999998146e-05, 2.188900000000063e-05, 2.2249999999997966e-05, 2.2069999999999035e-05, 2.165299999999995e-05, 2.2264000000001005e-05, 2.147300000000102e-05, 2.1584000000001574e-05, 2.2041999999999895e-05, 2.136099999999752e-05, 2.1778000000000075e-05, 2.2264000000001005e-05, 2.187500000000106e-05, 2.1791999999999645e-05, 2.148700000000059e-05]</msg>
<status status="PASS" starttime="20201030 15:55:50.757" endtime="20201030 15:55:50.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.753" endtime="20201030 15:55:50.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:50.763" endtime="20201030 15:55:50.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.762" endtime="20201030 15:55:50.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.760" endtime="20201030 15:55:50.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.404" endtime="20201030 15:55:50.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.403" endtime="20201030 15:55:50.784"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.797" endtime="20201030 15:55:50.812"></status>
</kw>
<msg timestamp="20201030 15:55:50.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.795" endtime="20201030 15:55:50.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.814" endtime="20201030 15:55:50.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.816" endtime="20201030 15:55:50.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.793" endtime="20201030 15:55:50.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.786" endtime="20201030 15:55:50.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.825" endtime="20201030 15:55:51.112"></status>
</kw>
<msg timestamp="20201030 15:55:51.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026652556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026675042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.823" endtime="20201030 15:55:51.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026652556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026675042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.116" endtime="20201030 15:55:51.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.124" endtime="20201030 15:55:51.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.821" endtime="20201030 15:55:51.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.819" endtime="20201030 15:55:51.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:51.131" level="INFO">${RESULT} = [{'diff': 2.2485999999998646e-05}, {'diff': 2.2319999999999285e-05}, {'diff': 2.136100000000099e-05}, {'diff': 2.2292000000000145e-05}, {'diff': 2.2028000000000325e-05}, {'diff': 2.1443999999998936e-0...</msg>
<status status="PASS" starttime="20201030 15:55:51.128" endtime="20201030 15:55:51.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:51.135" level="INFO">${ACCURACY} = {'diff': [2.2485999999998646e-05, 2.2319999999999285e-05, 2.136100000000099e-05, 2.2292000000000145e-05, 2.2028000000000325e-05, 2.1443999999998936e-05, 2.187500000000106e-05, 2.191699999999977e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:55:51.132" endtime="20201030 15:55:51.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.139" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 15:55:51.138" endtime="20201030 15:55:51.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.142" level="INFO">VALUE: [2.2485999999998646e-05, 2.2319999999999285e-05, 2.136100000000099e-05, 2.2292000000000145e-05, 2.2028000000000325e-05, 2.1443999999998936e-05, 2.187500000000106e-05, 2.191699999999977e-05, 2.147300000000102e-05, 2.2041999999999895e-05, 2.1833999999998355e-05, 2.161100000000124e-05, 2.1485999999997646e-05, 2.159700000000167e-05, 2.184699999999845e-05, 2.162500000000081e-05, 2.2166000000000546e-05, 2.2235999999998396e-05, 2.156900000000253e-05, 2.1693999999999186e-05, 2.1485999999997646e-05, 2.1750000000000935e-05, 2.165299999999995e-05, 2.1666000000000046e-05, 2.205499999999999e-05, 2.209700000000217e-05, 2.191699999999977e-05, 2.184699999999845e-05, 2.2264000000001005e-05, 2.19030000000002e-05, 2.1415999999999796e-05, 2.206899999999956e-05, 2.218099999999959e-05, 2.1486000000001115e-05, 2.186100000000149e-05, 2.1958000000002476e-05, 2.2013999999997286e-05, 2.2235999999998396e-05, 2.1527999999999825e-05, 2.191699999999977e-05, 2.1514000000000255e-05, 2.141699999999927e-05, 2.163900000000038e-05, 2.140300000000317e-05, 2.143099999999884e-05, 2.236100000000199e-05, 2.1527999999999825e-05, 2.159700000000167e-05, 2.1569999999998535e-05, 2.211099999999827e-05]</msg>
<status status="PASS" starttime="20201030 15:55:51.140" endtime="20201030 15:55:51.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.136" endtime="20201030 15:55:51.143"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:51.146" endtime="20201030 15:55:51.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.145" endtime="20201030 15:55:51.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.144" endtime="20201030 15:55:51.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.785" endtime="20201030 15:55:51.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.784" endtime="20201030 15:55:51.167"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.177" endtime="20201030 15:55:51.192"></status>
</kw>
<msg timestamp="20201030 15:55:51.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.175" endtime="20201030 15:55:51.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.193" endtime="20201030 15:55:51.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.196" endtime="20201030 15:55:51.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.172" endtime="20201030 15:55:51.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.170" endtime="20201030 15:55:51.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.205" endtime="20201030 15:55:51.493"></status>
</kw>
<msg timestamp="20201030 15:55:51.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023033528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023055639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.204" endtime="20201030 15:55:51.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023033528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023055639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.497" endtime="20201030 15:55:51.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.505" endtime="20201030 15:55:51.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.201" endtime="20201030 15:55:51.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.199" endtime="20201030 15:55:51.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:51.511" level="INFO">${RESULT} = [{'diff': 2.211099999999827e-05}, {'diff': 2.1514000000000255e-05}, {'diff': 2.219499999999916e-05}, {'diff': 2.168099999999909e-05}, {'diff': 2.215300000000045e-05}, {'diff': 2.1541999999999395e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:51.508" endtime="20201030 15:55:51.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:51.516" level="INFO">${ACCURACY} = {'diff': [2.211099999999827e-05, 2.1514000000000255e-05, 2.219499999999916e-05, 2.168099999999909e-05, 2.215300000000045e-05, 2.1541999999999395e-05, 2.1583999999998105e-05, 2.181899999999931e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 15:55:51.512" endtime="20201030 15:55:51.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.520" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 15:55:51.519" endtime="20201030 15:55:51.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.522" level="INFO">VALUE: [2.211099999999827e-05, 2.1514000000000255e-05, 2.219499999999916e-05, 2.168099999999909e-05, 2.215300000000045e-05, 2.1541999999999395e-05, 2.1583999999998105e-05, 2.181899999999931e-05, 2.2263999999997536e-05, 2.2319999999999285e-05, 2.137500000000056e-05, 2.170899999999823e-05, 2.212500000000131e-05, 2.1750000000000935e-05, 2.219499999999916e-05, 2.2236000000001865e-05, 2.1778000000000075e-05, 2.2333999999998855e-05, 2.1820000000002254e-05, 2.195899999999848e-05, 2.141699999999927e-05, 2.151300000000078e-05, 2.1888000000001157e-05, 2.194499999999891e-05, 2.223700000000134e-05, 2.1583999999998105e-05, 2.2292000000000145e-05, 2.147299999999755e-05, 2.162499999999734e-05, 2.2028000000000325e-05, 2.1708000000002226e-05, 2.181899999999931e-05, 2.2221999999998826e-05, 2.2235999999998396e-05, 2.1429999999999366e-05, 2.202700000000085e-05, 2.137500000000056e-05, 2.156900000000253e-05, 2.1749999999997466e-05, 2.1666000000000046e-05, 2.162500000000081e-05, 2.191699999999977e-05, 2.1943999999999436e-05, 2.1500000000000685e-05, 2.136100000000099e-05, 2.184700000000192e-05, 2.1415999999999796e-05, 2.204100000000042e-05, 2.184700000000192e-05, 2.212500000000131e-05]</msg>
<status status="PASS" starttime="20201030 15:55:51.521" endtime="20201030 15:55:51.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.516" endtime="20201030 15:55:51.527"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:51.531" endtime="20201030 15:55:51.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.529" endtime="20201030 15:55:51.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.528" endtime="20201030 15:55:51.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.168" endtime="20201030 15:55:51.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.168" endtime="20201030 15:55:51.551"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.560" endtime="20201030 15:55:51.575"></status>
</kw>
<msg timestamp="20201030 15:55:51.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.558" endtime="20201030 15:55:51.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.576" endtime="20201030 15:55:51.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.579" endtime="20201030 15:55:51.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.556" endtime="20201030 15:55:51.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.554" endtime="20201030 15:55:51.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.588" endtime="20201030 15:55:51.873"></status>
</kw>
<msg timestamp="20201030 15:55:51.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021654486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021676486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.586" endtime="20201030 15:55:51.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021654486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021676486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.877" endtime="20201030 15:55:51.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.885" endtime="20201030 15:55:51.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.584" endtime="20201030 15:55:51.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.582" endtime="20201030 15:55:51.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:51.891" level="INFO">${RESULT} = [{'diff': 2.1999999999997716e-05}, {'diff': 2.1763999999997036e-05}, {'diff': 2.166699999999952e-05}, {'diff': 2.169500000000213e-05}, {'diff': 2.2292000000000145e-05}, {'diff': 2.15830000000021e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:51.888" endtime="20201030 15:55:51.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:51.896" level="INFO">${ACCURACY} = {'diff': [2.1999999999997716e-05, 2.1763999999997036e-05, 2.166699999999952e-05, 2.169500000000213e-05, 2.2292000000000145e-05, 2.15830000000021e-05, 2.163900000000038e-05, 2.165299999999995e-05, 2.13...</msg>
<status status="PASS" starttime="20201030 15:55:51.892" endtime="20201030 15:55:51.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.901" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 15:55:51.900" endtime="20201030 15:55:51.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.903" level="INFO">VALUE: [2.1999999999997716e-05, 2.1763999999997036e-05, 2.166699999999952e-05, 2.169500000000213e-05, 2.2292000000000145e-05, 2.15830000000021e-05, 2.163900000000038e-05, 2.165299999999995e-05, 2.138900000000013e-05, 2.2222000000002295e-05, 2.216700000000002e-05, 2.19030000000002e-05, 2.1749999999997466e-05, 2.166699999999952e-05, 2.1443999999998936e-05, 2.162500000000081e-05, 2.2193999999999686e-05, 2.22229999999983e-05, 2.2097999999998175e-05, 2.2112000000001214e-05, 2.223699999999787e-05, 2.202700000000085e-05, 2.1471999999998076e-05, 2.1707999999998756e-05, 2.208299999999913e-05, 2.15830000000021e-05, 2.1458000000001975e-05, 2.1693999999999186e-05, 2.205499999999999e-05, 2.186099999999802e-05, 2.154099999999992e-05, 2.1500000000000685e-05, 2.1527999999999825e-05, 2.1764000000000505e-05, 2.2250000000001435e-05, 2.2028000000000325e-05, 2.229100000000067e-05, 2.229100000000067e-05, 2.159700000000167e-05, 2.181900000000278e-05, 2.1750000000000935e-05, 2.187500000000106e-05, 2.2041999999999895e-05, 2.209700000000217e-05, 2.2292000000000145e-05, 2.215300000000045e-05, 2.136100000000099e-05, 2.1485999999997646e-05, 2.165299999999995e-05, 2.168099999999909e-05]</msg>
<status status="PASS" starttime="20201030 15:55:51.902" endtime="20201030 15:55:51.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.897" endtime="20201030 15:55:51.905"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:51.908" endtime="20201030 15:55:51.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.907" endtime="20201030 15:55:51.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.906" endtime="20201030 15:55:51.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.552" endtime="20201030 15:55:51.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.552" endtime="20201030 15:55:51.929"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.938" endtime="20201030 15:55:51.953"></status>
</kw>
<msg timestamp="20201030 15:55:51.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.936" endtime="20201030 15:55:51.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.954" endtime="20201030 15:55:51.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.957" endtime="20201030 15:55:51.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.933" endtime="20201030 15:55:51.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.931" endtime="20201030 15:55:51.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.966" endtime="20201030 15:55:52.253"></status>
</kw>
<msg timestamp="20201030 15:55:52.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022025889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022047583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.964" endtime="20201030 15:55:52.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022025889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022047583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.258" endtime="20201030 15:55:52.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.266" endtime="20201030 15:55:52.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.962" endtime="20201030 15:55:52.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.960" endtime="20201030 15:55:52.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:52.272" level="INFO">${RESULT} = [{'diff': 2.1693999999999186e-05}, {'diff': 2.152700000000035e-05}, {'diff': 2.1750000000000935e-05}, {'diff': 2.136100000000099e-05}, {'diff': 2.188899999999716e-05}, {'diff': 2.1943999999999436e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:52.269" endtime="20201030 15:55:52.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:52.277" level="INFO">${ACCURACY} = {'diff': [2.1693999999999186e-05, 2.152700000000035e-05, 2.1750000000000935e-05, 2.136100000000099e-05, 2.188899999999716e-05, 2.1943999999999436e-05, 2.237500000000156e-05, 2.1499999999997216e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:55:52.273" endtime="20201030 15:55:52.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.281" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 15:55:52.280" endtime="20201030 15:55:52.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.283" level="INFO">VALUE: [2.1693999999999186e-05, 2.152700000000035e-05, 2.1750000000000935e-05, 2.136100000000099e-05, 2.188899999999716e-05, 2.1943999999999436e-05, 2.237500000000156e-05, 2.1499999999997216e-05, 2.2249999999997966e-05, 2.2180000000000116e-05, 2.137499999999709e-05, 2.15830000000021e-05, 2.155499999999949e-05, 2.1778000000000075e-05, 2.215300000000045e-05, 2.1527999999999825e-05, 2.2028000000000325e-05, 2.143100000000231e-05, 2.216700000000002e-05, 2.1500000000000685e-05, 2.211100000000174e-05, 2.213900000000088e-05, 2.2305999999999715e-05, 2.2277999999997106e-05, 2.2292000000000145e-05, 2.2041999999999895e-05, 2.162500000000081e-05, 2.211099999999827e-05, 2.219500000000263e-05, 2.1500000000000685e-05, 2.193099999999934e-05, 2.1986000000001615e-05, 2.1999999999997716e-05, 2.212500000000131e-05, 2.1805999999999215e-05, 2.187500000000106e-05, 2.137500000000056e-05, 2.137499999999709e-05, 2.188900000000063e-05, 2.1805999999999215e-05, 2.163900000000038e-05, 2.1820000000002254e-05, 2.17090000000017e-05, 2.2084000000002074e-05, 2.1764000000000505e-05, 2.197300000000152e-05, 2.2069999999999035e-05, 2.198700000000109e-05, 2.165299999999995e-05, 2.218099999999959e-05]</msg>
<status status="PASS" starttime="20201030 15:55:52.282" endtime="20201030 15:55:52.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.277" endtime="20201030 15:55:52.285"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:52.289" endtime="20201030 15:55:52.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.287" endtime="20201030 15:55:52.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.286" endtime="20201030 15:55:52.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.930" endtime="20201030 15:55:52.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.929" endtime="20201030 15:55:52.309"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.321" endtime="20201030 15:55:52.341"></status>
</kw>
<msg timestamp="20201030 15:55:52.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.318" endtime="20201030 15:55:52.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.344" endtime="20201030 15:55:52.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.349" endtime="20201030 15:55:52.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.314" endtime="20201030 15:55:52.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.312" endtime="20201030 15:55:52.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.369" endtime="20201030 15:55:52.667"></status>
</kw>
<msg timestamp="20201030 15:55:52.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028496028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028518056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.365" endtime="20201030 15:55:52.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028496028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028518056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.677" endtime="20201030 15:55:52.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.692" endtime="20201030 15:55:52.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.360" endtime="20201030 15:55:52.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.356" endtime="20201030 15:55:52.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:52.707" level="INFO">${RESULT} = [{'diff': 2.2028000000000325e-05}, {'diff': 2.1569999999998535e-05}, {'diff': 2.147300000000102e-05}, {'diff': 2.226300000000153e-05}, {'diff': 2.141699999999927e-05}, {'diff': 2.1887999999997687e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:52.701" endtime="20201030 15:55:52.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:52.715" level="INFO">${ACCURACY} = {'diff': [2.2028000000000325e-05, 2.1569999999998535e-05, 2.147300000000102e-05, 2.226300000000153e-05, 2.141699999999927e-05, 2.1887999999997687e-05, 2.2069999999999035e-05, 2.1708000000002226e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:55:52.709" endtime="20201030 15:55:52.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.722" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 15:55:52.720" endtime="20201030 15:55:52.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.728" level="INFO">VALUE: [2.2028000000000325e-05, 2.1569999999998535e-05, 2.147300000000102e-05, 2.226300000000153e-05, 2.141699999999927e-05, 2.1887999999997687e-05, 2.2069999999999035e-05, 2.1708000000002226e-05, 2.1679999999999616e-05, 2.209700000000217e-05, 2.158299999999863e-05, 2.138900000000013e-05, 2.158299999999863e-05, 2.208299999999913e-05, 2.1750000000000935e-05, 2.204100000000042e-05, 2.136099999999752e-05, 2.155499999999949e-05, 2.1486000000001115e-05, 2.1957999999999006e-05, 2.188899999999716e-05, 2.186100000000149e-05, 2.1929999999999866e-05, 2.179100000000017e-05, 2.231899999999981e-05, 2.1722000000001795e-05, 2.1458000000001975e-05, 2.2193999999999686e-05, 2.2180000000000116e-05, 2.20969999999987e-05, 2.205499999999999e-05, 2.231899999999981e-05, 2.188899999999716e-05, 2.187500000000106e-05, 2.138900000000013e-05, 2.211100000000174e-05, 2.2292000000000145e-05, 2.1541999999999395e-05, 2.2056000000002934e-05, 2.2028000000000325e-05, 2.2333999999998855e-05, 2.1750000000000935e-05, 2.2236000000001865e-05, 2.1708000000002226e-05, 2.15830000000021e-05, 2.187500000000106e-05, 2.14029999999997e-05, 2.233299999999938e-05, 2.1833999999998355e-05, 2.136100000000099e-05]</msg>
<status status="PASS" starttime="20201030 15:55:52.725" endtime="20201030 15:55:52.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.716" endtime="20201030 15:55:52.733"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:52.739" endtime="20201030 15:55:52.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.737" endtime="20201030 15:55:52.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.735" endtime="20201030 15:55:52.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.310" endtime="20201030 15:55:52.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.310" endtime="20201030 15:55:52.760"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.769" endtime="20201030 15:55:52.785"></status>
</kw>
<msg timestamp="20201030 15:55:52.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.768" endtime="20201030 15:55:52.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.786" endtime="20201030 15:55:52.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.789" endtime="20201030 15:55:52.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.765" endtime="20201030 15:55:52.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.763" endtime="20201030 15:55:52.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.798" endtime="20201030 15:55:53.085"></status>
</kw>
<msg timestamp="20201030 15:55:53.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022370708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022392431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.797" endtime="20201030 15:55:53.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022370708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022392431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.089" endtime="20201030 15:55:53.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.097" endtime="20201030 15:55:53.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.794" endtime="20201030 15:55:53.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.792" endtime="20201030 15:55:53.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:53.104" level="INFO">${RESULT} = [{'diff': 2.172300000000127e-05}, {'diff': 2.1708000000002226e-05}, {'diff': 2.1834000000001824e-05}, {'diff': 2.223699999999787e-05}, {'diff': 2.2013999999997286e-05}, {'diff': 2.2264000000001005e-05...</msg>
<status status="PASS" starttime="20201030 15:55:53.101" endtime="20201030 15:55:53.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:53.109" level="INFO">${ACCURACY} = {'diff': [2.172300000000127e-05, 2.1708000000002226e-05, 2.1834000000001824e-05, 2.223699999999787e-05, 2.2013999999997286e-05, 2.2264000000001005e-05, 2.158299999999863e-05, 2.183300000000235e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:55:53.105" endtime="20201030 15:55:53.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.114" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 15:55:53.113" endtime="20201030 15:55:53.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.116" level="INFO">VALUE: [2.172300000000127e-05, 2.1708000000002226e-05, 2.1834000000001824e-05, 2.223699999999787e-05, 2.2013999999997286e-05, 2.2264000000001005e-05, 2.158299999999863e-05, 2.183300000000235e-05, 2.1972000000002045e-05, 2.1971999999998576e-05, 2.1693999999999186e-05, 2.204100000000042e-05, 2.1679999999999616e-05, 2.2151999999997507e-05, 2.183300000000235e-05, 2.1735999999997896e-05, 2.159700000000167e-05, 2.2221999999998826e-05, 2.238900000000113e-05, 2.204100000000042e-05, 2.154099999999992e-05, 2.1957999999999006e-05, 2.1666000000000046e-05, 2.1527999999999825e-05, 2.216700000000002e-05, 2.14029999999997e-05, 2.1778000000000075e-05, 2.2250000000001435e-05, 2.1541999999999395e-05, 2.2291999999996676e-05, 2.215300000000045e-05, 2.2222000000002295e-05, 2.1500000000000685e-05, 2.19030000000002e-05, 2.1778000000000075e-05, 2.193099999999934e-05, 2.1971999999998576e-05, 2.2041999999999895e-05, 2.193099999999934e-05, 2.1556000000002434e-05, 2.1971999999998576e-05, 2.1985999999998146e-05, 2.1999999999997716e-05, 2.2235999999998396e-05, 2.144499999999841e-05, 2.218099999999959e-05, 2.2041999999999895e-05, 2.1791999999999645e-05, 2.2069999999999035e-05, 2.163900000000038e-05]</msg>
<status status="PASS" starttime="20201030 15:55:53.115" endtime="20201030 15:55:53.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.110" endtime="20201030 15:55:53.117"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:53.122" endtime="20201030 15:55:53.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.120" endtime="20201030 15:55:53.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.118" endtime="20201030 15:55:53.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.761" endtime="20201030 15:55:53.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.761" endtime="20201030 15:55:53.147"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.165" endtime="20201030 15:55:53.183"></status>
</kw>
<msg timestamp="20201030 15:55:53.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.161" endtime="20201030 15:55:53.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.187" endtime="20201030 15:55:53.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.192" endtime="20201030 15:55:53.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.156" endtime="20201030 15:55:53.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.152" endtime="20201030 15:55:53.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.211" endtime="20201030 15:55:53.498"></status>
</kw>
<msg timestamp="20201030 15:55:53.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036256097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036278347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.208" endtime="20201030 15:55:53.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036256097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036278347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.502" endtime="20201030 15:55:53.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.510" endtime="20201030 15:55:53.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.202" endtime="20201030 15:55:53.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.199" endtime="20201030 15:55:53.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:53.516" level="INFO">${RESULT} = [{'diff': 2.2250000000001435e-05}, {'diff': 2.17770000000006e-05}, {'diff': 2.159700000000514e-05}, {'diff': 2.205499999999999e-05}, {'diff': 2.2264000000001005e-05}, {'diff': 2.15969999999982e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:53.513" endtime="20201030 15:55:53.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:53.521" level="INFO">${ACCURACY} = {'diff': [2.2250000000001435e-05, 2.17770000000006e-05, 2.159700000000514e-05, 2.205499999999999e-05, 2.2264000000001005e-05, 2.15969999999982e-05, 2.211099999999827e-05, 2.2249999999994496e-05, 2.168...</msg>
<status status="PASS" starttime="20201030 15:55:53.518" endtime="20201030 15:55:53.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.525" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 15:55:53.524" endtime="20201030 15:55:53.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.528" level="INFO">VALUE: [2.2250000000001435e-05, 2.17770000000006e-05, 2.159700000000514e-05, 2.205499999999999e-05, 2.2264000000001005e-05, 2.15969999999982e-05, 2.211099999999827e-05, 2.2249999999994496e-05, 2.1680000000003086e-05, 2.161099999999777e-05, 2.2028000000000325e-05, 2.2000000000001185e-05, 2.1778000000000075e-05, 2.208299999999913e-05, 2.19169999999963e-05, 2.138899999999666e-05, 2.1778000000000075e-05, 2.15969999999982e-05, 2.1541999999999395e-05, 2.1819999999998785e-05, 2.208299999999913e-05, 2.1514000000000255e-05, 2.2236000000001865e-05, 2.169499999999519e-05, 2.188899999999716e-05, 2.212499999999784e-05, 2.2041999999999895e-05, 2.159700000000514e-05, 2.1527999999999825e-05, 2.193100000000281e-05, 2.1986000000001615e-05, 2.2000000000001185e-05, 2.1514000000000255e-05, 2.186099999999802e-05, 2.170899999999476e-05, 2.170899999999476e-05, 2.1985999999994676e-05, 2.1500000000000685e-05, 2.1805999999999215e-05, 2.1833999999998355e-05, 2.205499999999999e-05, 2.2208000000002726e-05, 2.2111999999997745e-05, 2.204100000000042e-05, 2.1584000000005044e-05, 2.1708000000002226e-05, 2.147300000000102e-05, 2.193099999999587e-05, 2.1569999999998535e-05, 2.162499999999734e-05]</msg>
<status status="PASS" starttime="20201030 15:55:53.526" endtime="20201030 15:55:53.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.522" endtime="20201030 15:55:53.529"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:53.533" endtime="20201030 15:55:53.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.531" endtime="20201030 15:55:53.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.530" endtime="20201030 15:55:53.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.148" endtime="20201030 15:55:53.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.147" endtime="20201030 15:55:53.553"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.562" endtime="20201030 15:55:53.578"></status>
</kw>
<msg timestamp="20201030 15:55:53.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.560" endtime="20201030 15:55:53.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.580" endtime="20201030 15:55:53.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.582" endtime="20201030 15:55:53.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.558" endtime="20201030 15:55:53.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.556" endtime="20201030 15:55:53.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.591" endtime="20201030 15:55:53.878"></status>
</kw>
<msg timestamp="20201030 15:55:53.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023187458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023209903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.589" endtime="20201030 15:55:53.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023187458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023209903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.882" endtime="20201030 15:55:53.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.891" endtime="20201030 15:55:53.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.587" endtime="20201030 15:55:53.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.585" endtime="20201030 15:55:53.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:53.897" level="INFO">${RESULT} = [{'diff': 2.244499999999941e-05}, {'diff': 2.186099999999802e-05}, {'diff': 2.187499999999759e-05}, {'diff': 2.2249999999997966e-05}, {'diff': 2.162500000000081e-05}, {'diff': 2.2278000000000575e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:53.894" endtime="20201030 15:55:53.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:53.901" level="INFO">${ACCURACY} = {'diff': [2.244499999999941e-05, 2.186099999999802e-05, 2.187499999999759e-05, 2.2249999999997966e-05, 2.162500000000081e-05, 2.2278000000000575e-05, 2.2319999999999285e-05, 2.1513999999996786e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:55:53.898" endtime="20201030 15:55:53.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.906" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 15:55:53.905" endtime="20201030 15:55:53.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.908" level="INFO">VALUE: [2.244499999999941e-05, 2.186099999999802e-05, 2.187499999999759e-05, 2.2249999999997966e-05, 2.162500000000081e-05, 2.2278000000000575e-05, 2.2319999999999285e-05, 2.1513999999996786e-05, 2.1679999999999616e-05, 2.1500000000000685e-05, 2.219499999999916e-05, 2.215300000000045e-05, 2.195899999999848e-05, 2.1402000000000226e-05, 2.2236000000001865e-05, 2.1693999999999186e-05, 2.183299999999888e-05, 2.1819999999998785e-05, 2.1443999999998936e-05, 2.188899999999716e-05, 2.1971999999998576e-05, 2.181899999999931e-05, 2.2236000000001865e-05, 2.1707999999998756e-05, 2.1514000000000255e-05, 2.143099999999884e-05, 2.231899999999981e-05, 2.1750000000000935e-05, 2.231899999999981e-05, 2.1763999999997036e-05, 2.169499999999866e-05, 2.205499999999999e-05, 2.186099999999802e-05, 2.1750000000000935e-05, 2.2264000000001005e-05, 2.208299999999913e-05, 2.2236000000001865e-05, 2.1679999999999616e-05, 2.1971999999998576e-05, 2.1778000000000075e-05, 2.212500000000131e-05, 2.1556000000002434e-05, 2.191699999999977e-05, 2.218099999999959e-05, 2.1985999999998146e-05, 2.162500000000081e-05, 2.1707999999998756e-05, 2.1764000000000505e-05, 2.209700000000217e-05, 2.2221999999998826e-05]</msg>
<status status="PASS" starttime="20201030 15:55:53.907" endtime="20201030 15:55:53.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.902" endtime="20201030 15:55:53.910"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:53.914" endtime="20201030 15:55:53.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.912" endtime="20201030 15:55:53.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.911" endtime="20201030 15:55:53.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.554" endtime="20201030 15:55:53.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.554" endtime="20201030 15:55:53.935"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.943" endtime="20201030 15:55:53.959"></status>
</kw>
<msg timestamp="20201030 15:55:53.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.942" endtime="20201030 15:55:53.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.961" endtime="20201030 15:55:53.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.963" endtime="20201030 15:55:53.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.939" endtime="20201030 15:55:53.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.937" endtime="20201030 15:55:53.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.972" endtime="20201030 15:55:54.258"></status>
</kw>
<msg timestamp="20201030 15:55:54.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021988236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022011347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.971" endtime="20201030 15:55:54.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021988236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022011347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.263" endtime="20201030 15:55:54.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.275" endtime="20201030 15:55:54.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.968" endtime="20201030 15:55:54.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.966" endtime="20201030 15:55:54.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:54.284" level="INFO">${RESULT} = [{'diff': 2.311099999999927e-05}, {'diff': 2.2443999999999936e-05}, {'diff': 2.290299999999773e-05}, {'diff': 2.338899999999866e-05}, {'diff': 2.2694000000000186e-05}, {'diff': 2.2541999999996926e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:54.279" endtime="20201030 15:55:54.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:54.291" level="INFO">${ACCURACY} = {'diff': [2.311099999999927e-05, 2.2443999999999936e-05, 2.290299999999773e-05, 2.338899999999866e-05, 2.2694000000000186e-05, 2.2541999999996926e-05, 2.3000000000002185e-05, 2.306900000000056e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:55:54.285" endtime="20201030 15:55:54.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.297" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 15:55:54.296" endtime="20201030 15:55:54.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.299" level="INFO">VALUE: [2.311099999999927e-05, 2.2443999999999936e-05, 2.290299999999773e-05, 2.338899999999866e-05, 2.2694000000000186e-05, 2.2541999999996926e-05, 2.3000000000002185e-05, 2.306900000000056e-05, 2.336099999999952e-05, 2.3332999999996912e-05, 2.29169999999973e-05, 2.3221999999999826e-05, 2.286099999999902e-05, 2.288900000000163e-05, 2.287499999999859e-05, 2.243099999999984e-05, 2.301300000000228e-05, 2.286099999999902e-05, 2.268100000000009e-05, 2.2971999999999576e-05, 2.290299999999773e-05, 2.2500000000001685e-05, 2.2457999999999506e-05, 2.269499999999966e-05, 2.27090000000027e-05, 2.238899999999766e-05, 2.2569999999999535e-05, 2.305500000000099e-05, 2.2707999999999756e-05, 2.3000000000002185e-05, 2.2736000000002365e-05, 2.3111999999998745e-05, 2.243099999999984e-05, 2.245899999999898e-05, 2.237500000000156e-05, 2.2542000000000395e-05, 2.2833999999999355e-05, 2.3250000000002435e-05, 2.269499999999966e-05, 2.291700000000077e-05, 2.247299999999855e-05, 2.298700000000209e-05, 2.268100000000009e-05, 2.3306000000000715e-05, 2.2652000000001477e-05, 2.2540999999997452e-05, 2.311099999999927e-05, 2.306900000000056e-05, 2.2416000000000796e-05, 2.25830000000031e-05]</msg>
<status status="PASS" starttime="20201030 15:55:54.298" endtime="20201030 15:55:54.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.292" endtime="20201030 15:55:54.301"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:54.304" endtime="20201030 15:55:54.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.303" endtime="20201030 15:55:54.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.302" endtime="20201030 15:55:54.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.936" endtime="20201030 15:55:54.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.935" endtime="20201030 15:55:54.325"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.334" endtime="20201030 15:55:54.349"></status>
</kw>
<msg timestamp="20201030 15:55:54.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.332" endtime="20201030 15:55:54.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.351" endtime="20201030 15:55:54.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.353" endtime="20201030 15:55:54.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.330" endtime="20201030 15:55:54.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.328" endtime="20201030 15:55:54.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.362" endtime="20201030 15:55:54.650"></status>
</kw>
<msg timestamp="20201030 15:55:54.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022201292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022225653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.361" endtime="20201030 15:55:54.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022201292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022225653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.654" endtime="20201030 15:55:54.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.663" endtime="20201030 15:55:54.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.358" endtime="20201030 15:55:54.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.357" endtime="20201030 15:55:54.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:54.669" level="INFO">${RESULT} = [{'diff': 2.436100000000052e-05}, {'diff': 2.4264000000003005e-05}, {'diff': 2.3958000000001006e-05}, {'diff': 2.40970000000007e-05}, {'diff': 2.420900000000073e-05}, {'diff': 2.3513999999998786e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:54.666" endtime="20201030 15:55:54.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:54.673" level="INFO">${ACCURACY} = {'diff': [2.436100000000052e-05, 2.4264000000003005e-05, 2.3958000000001006e-05, 2.40970000000007e-05, 2.420900000000073e-05, 2.3513999999998786e-05, 2.384700000000045e-05, 2.42230000000003e-05, 2.388...</msg>
<status status="PASS" starttime="20201030 15:55:54.670" endtime="20201030 15:55:54.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.678" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 15:55:54.677" endtime="20201030 15:55:54.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.680" level="INFO">VALUE: [2.436100000000052e-05, 2.4264000000003005e-05, 2.3958000000001006e-05, 2.40970000000007e-05, 2.420900000000073e-05, 2.3513999999998786e-05, 2.384700000000045e-05, 2.42230000000003e-05, 2.388899999999916e-05, 2.390299999999873e-05, 2.4084000000000605e-05, 2.3999999999999716e-05, 2.344500000000041e-05, 2.418099999999812e-05, 2.415299999999898e-05, 2.366700000000152e-05, 2.3500000000002685e-05, 2.3485999999999646e-05, 2.3443999999997467e-05, 2.4263000000000062e-05, 2.4305999999998246e-05, 2.4305999999998246e-05, 2.4027999999998856e-05, 2.387499999999959e-05, 2.408300000000113e-05, 2.3986000000000146e-05, 2.411100000000027e-05, 2.3486000000003115e-05, 2.4290999999999202e-05, 2.4221999999997357e-05, 2.3735999999999896e-05, 2.356900000000106e-05, 2.3805999999997746e-05, 2.430500000000224e-05, 2.4068999999998092e-05, 2.3514000000002255e-05, 2.3472000000000076e-05, 2.4193999999998217e-05, 2.429100000000267e-05, 2.3708000000000756e-05, 2.383300000000088e-05, 2.397300000000005e-05, 2.4179999999998647e-05, 2.3763999999999036e-05, 2.411100000000027e-05, 2.3722000000000326e-05, 2.4013999999999286e-05, 2.3846999999996982e-05, 2.338899999999866e-05, 2.3513999999998786e-05]</msg>
<status status="PASS" starttime="20201030 15:55:54.679" endtime="20201030 15:55:54.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.674" endtime="20201030 15:55:54.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:54.685" endtime="20201030 15:55:54.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.683" endtime="20201030 15:55:54.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.682" endtime="20201030 15:55:54.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.326" endtime="20201030 15:55:54.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.326" endtime="20201030 15:55:54.706"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.714" endtime="20201030 15:55:54.731"></status>
</kw>
<msg timestamp="20201030 15:55:54.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.713" endtime="20201030 15:55:54.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.733" endtime="20201030 15:55:54.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.735" endtime="20201030 15:55:54.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.710" endtime="20201030 15:55:54.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.708" endtime="20201030 15:55:54.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.744" endtime="20201030 15:55:55.030"></status>
</kw>
<msg timestamp="20201030 15:55:55.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022676417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022701542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.743" endtime="20201030 15:55:55.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022676417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022701542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.034" endtime="20201030 15:55:55.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.042" endtime="20201030 15:55:55.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.740" endtime="20201030 15:55:55.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.739" endtime="20201030 15:55:55.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:55.049" level="INFO">${RESULT} = [{'diff': 2.512500000000084e-05}, {'diff': 2.4820000000001785e-05}, {'diff': 2.515299999999998e-05}, {'diff': 2.5042000000002895e-05}, {'diff': 2.512500000000084e-05}, {'diff': 2.437500000000009e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:55.046" endtime="20201030 15:55:55.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:55.053" level="INFO">${ACCURACY} = {'diff': [2.512500000000084e-05, 2.4820000000001785e-05, 2.515299999999998e-05, 2.5042000000002895e-05, 2.512500000000084e-05, 2.437500000000009e-05, 2.4846999999997982e-05, 2.490299999999973e-05, 2.5...</msg>
<status status="PASS" starttime="20201030 15:55:55.050" endtime="20201030 15:55:55.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.058" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 15:55:55.057" endtime="20201030 15:55:55.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.063" level="INFO">VALUE: [2.512500000000084e-05, 2.4820000000001785e-05, 2.515299999999998e-05, 2.5042000000002895e-05, 2.512500000000084e-05, 2.437500000000009e-05, 2.4846999999997982e-05, 2.490299999999973e-05, 2.5070000000002035e-05, 2.52230000000013e-05, 2.49169999999993e-05, 2.5040999999999952e-05, 2.5041999999999426e-05, 2.4985999999997677e-05, 2.50970000000017e-05, 2.4804999999999272e-05, 2.4887999999997218e-05, 2.5291000000000202e-05, 2.5304999999999772e-05, 2.5040999999999952e-05, 2.4764000000000036e-05, 2.4458000000001506e-05, 2.463899999999991e-05, 2.4736000000000896e-05, 2.4610999999997302e-05, 2.5193999999999217e-05, 2.5346999999998482e-05, 2.4707999999998287e-05, 2.4680000000002617e-05, 2.5040999999999952e-05, 2.487500000000059e-05, 2.4679999999999147e-05, 2.490299999999973e-05, 2.506900000000256e-05, 2.512500000000084e-05, 2.4972000000001576e-05, 2.4541999999998926e-05, 2.4568999999998592e-05, 2.4943999999998967e-05, 2.4708000000001756e-05, 2.518099999999912e-05, 2.5041999999999426e-05, 2.4820000000001785e-05, 2.5000000000000716e-05, 2.4792000000002645e-05, 2.4569999999998066e-05, 2.484700000000145e-05, 2.5208000000002256e-05, 2.4777999999999606e-05, 2.5098000000001175e-05]</msg>
<status status="PASS" starttime="20201030 15:55:55.059" endtime="20201030 15:55:55.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.054" endtime="20201030 15:55:55.065"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:55.068" endtime="20201030 15:55:55.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.067" endtime="20201030 15:55:55.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.066" endtime="20201030 15:55:55.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.707" endtime="20201030 15:55:55.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.706" endtime="20201030 15:55:55.089"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.098" endtime="20201030 15:55:55.113"></status>
</kw>
<msg timestamp="20201030 15:55:55.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.096" endtime="20201030 15:55:55.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.115" endtime="20201030 15:55:55.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.117" endtime="20201030 15:55:55.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.094" endtime="20201030 15:55:55.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.091" endtime="20201030 15:55:55.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.126" endtime="20201030 15:55:55.411"></status>
</kw>
<msg timestamp="20201030 15:55:55.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021867958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.125" endtime="20201030 15:55:55.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021867958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.416" endtime="20201030 15:55:55.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.424" endtime="20201030 15:55:55.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.122" endtime="20201030 15:55:55.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.120" endtime="20201030 15:55:55.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:55.430" level="INFO">${RESULT} = [{'diff': 2.64170000000008e-05}, {'diff': 2.569500000000266e-05}, {'diff': 2.5722000000002326e-05}, {'diff': 2.5943999999999967e-05}, {'diff': 2.533300000000238e-05}, {'diff': 2.6207999999999787e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:55.427" endtime="20201030 15:55:55.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:55.435" level="INFO">${ACCURACY} = {'diff': [2.64170000000008e-05, 2.569500000000266e-05, 2.5722000000002326e-05, 2.5943999999999967e-05, 2.533300000000238e-05, 2.6207999999999787e-05, 2.5792000000000176e-05, 2.612500000000184e-05, 2.6...</msg>
<status status="PASS" starttime="20201030 15:55:55.431" endtime="20201030 15:55:55.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.440" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 15:55:55.439" endtime="20201030 15:55:55.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.442" level="INFO">VALUE: [2.64170000000008e-05, 2.569500000000266e-05, 2.5722000000002326e-05, 2.5943999999999967e-05, 2.533300000000238e-05, 2.6207999999999787e-05, 2.5792000000000176e-05, 2.612500000000184e-05, 2.6278000000001106e-05, 2.5971999999999107e-05, 2.5777999999997137e-05, 2.612500000000184e-05, 2.5792000000000176e-05, 2.5778000000000606e-05, 2.5528000000000356e-05, 2.5777999999997137e-05, 2.6250000000001966e-05, 2.5514000000000786e-05, 2.544499999999894e-05, 2.5499999999997747e-05, 2.565300000000048e-05, 2.586100000000202e-05, 2.6319999999999816e-05, 2.5485999999998177e-05, 2.5596999999998732e-05, 2.6346999999999482e-05, 2.5736000000001896e-05, 2.5514000000000786e-05, 2.5848000000001925e-05, 2.537499999999762e-05, 2.5651999999997538e-05, 2.6110999999998802e-05, 2.565300000000048e-05, 2.5597999999998206e-05, 2.538900000000066e-05, 2.6291000000001202e-05, 2.588899999999769e-05, 2.5457999999999037e-05, 2.5471999999998607e-05, 2.5805000000000272e-05, 2.6250000000001966e-05, 2.6055000000000522e-05, 2.6319000000000342e-05, 2.5749999999997997e-05, 2.618100000000012e-05, 2.6276999999998163e-05, 2.537500000000109e-05, 2.5596999999998732e-05, 2.6249999999998497e-05, 2.5957999999999537e-05]</msg>
<status status="PASS" starttime="20201030 15:55:55.441" endtime="20201030 15:55:55.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.436" endtime="20201030 15:55:55.443"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:55.447" endtime="20201030 15:55:55.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.445" endtime="20201030 15:55:55.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.444" endtime="20201030 15:55:55.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.090" endtime="20201030 15:55:55.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.089" endtime="20201030 15:55:55.468"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.476" endtime="20201030 15:55:55.492"></status>
</kw>
<msg timestamp="20201030 15:55:55.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.475" endtime="20201030 15:55:55.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.494" endtime="20201030 15:55:55.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.496" endtime="20201030 15:55:55.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.472" endtime="20201030 15:55:55.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.470" endtime="20201030 15:55:55.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.506" endtime="20201030 15:55:55.795"></status>
</kw>
<msg timestamp="20201030 15:55:55.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0221735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022200403, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:55.505" endtime="20201030 15:55:55.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0221735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022200403, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:55.799" endtime="20201030 15:55:55.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.807" endtime="20201030 15:55:55.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.502" endtime="20201030 15:55:55.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.500" endtime="20201030 15:55:55.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:55.813" level="INFO">${RESULT} = [{'diff': 2.690300000000173e-05}, {'diff': 2.6500000000002216e-05}, {'diff': 2.6763999999998567e-05}, {'diff': 2.7249999999999497e-05}, {'diff': 2.7374999999999622e-05}, {'diff': 2.6570000000000066e-0...</msg>
<status status="PASS" starttime="20201030 15:55:55.810" endtime="20201030 15:55:55.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:55.818" level="INFO">${ACCURACY} = {'diff': [2.690300000000173e-05, 2.6500000000002216e-05, 2.6763999999998567e-05, 2.7249999999999497e-05, 2.7374999999999622e-05, 2.6570000000000066e-05, 2.7138999999998942e-05, 2.6610999999999302e-05,...</msg>
<status status="PASS" starttime="20201030 15:55:55.814" endtime="20201030 15:55:55.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.822" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 15:55:55.821" endtime="20201030 15:55:55.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.824" level="INFO">VALUE: [2.690300000000173e-05, 2.6500000000002216e-05, 2.6763999999998567e-05, 2.7249999999999497e-05, 2.7374999999999622e-05, 2.6570000000000066e-05, 2.7138999999998942e-05, 2.6610999999999302e-05, 2.7235999999999927e-05, 2.6694000000000717e-05, 2.6556000000000496e-05, 2.6749999999998997e-05, 2.6555000000001022e-05, 2.638899999999819e-05, 2.7263999999999067e-05, 2.7070000000000566e-05, 2.6583999999999636e-05, 2.663900000000191e-05, 2.638900000000166e-05, 2.7110999999999802e-05, 2.7333000000000912e-05, 2.6986000000003146e-05, 2.6916000000001827e-05, 2.7137999999999468e-05, 2.7305000000001772e-05, 2.6374999999998622e-05, 2.6777000000002132e-05, 2.69170000000013e-05, 2.6790999999998233e-05, 2.6763999999998567e-05, 2.7056000000000996e-05, 2.6513999999998317e-05, 2.6486000000002646e-05, 2.7028000000001856e-05, 2.7208000000000787e-05, 2.7194000000001217e-05, 2.7124999999999372e-05, 2.7083000000000662e-05, 2.7110999999999802e-05, 2.6721999999999857e-05, 2.6958000000000537e-05, 2.690299999999826e-05, 2.6471999999999607e-05, 2.6972000000000107e-05, 2.6444000000000467e-05, 2.6860999999999552e-05, 2.7083000000000662e-05, 2.6860999999999552e-05, 2.6972000000000107e-05, 2.7042000000001426e-05]</msg>
<status status="PASS" starttime="20201030 15:55:55.823" endtime="20201030 15:55:55.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.818" endtime="20201030 15:55:55.830"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:55.833" endtime="20201030 15:55:55.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.832" endtime="20201030 15:55:55.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.831" endtime="20201030 15:55:55.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.469" endtime="20201030 15:55:55.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.468" endtime="20201030 15:55:55.854"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.863" endtime="20201030 15:55:55.879"></status>
</kw>
<msg timestamp="20201030 15:55:55.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.861" endtime="20201030 15:55:55.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.881" endtime="20201030 15:55:55.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.883" endtime="20201030 15:55:55.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.859" endtime="20201030 15:55:55.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.857" endtime="20201030 15:55:55.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.892" endtime="20201030 15:55:56.178"></status>
</kw>
<msg timestamp="20201030 15:55:56.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022789389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022817014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.891" endtime="20201030 15:55:56.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022789389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022817014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.182" endtime="20201030 15:55:56.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.190" endtime="20201030 15:55:56.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.888" endtime="20201030 15:55:56.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.886" endtime="20201030 15:55:56.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:56.197" level="INFO">${RESULT} = [{'diff': 2.7624999999999872e-05}, {'diff': 2.7736000000000427e-05}, {'diff': 2.8236000000000927e-05}, {'diff': 2.7792000000002176e-05}, {'diff': 2.7486000000000177e-05}, {'diff': 2.769500000000119e-0...</msg>
<status status="PASS" starttime="20201030 15:55:56.194" endtime="20201030 15:55:56.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:56.201" level="INFO">${ACCURACY} = {'diff': [2.7624999999999872e-05, 2.7736000000000427e-05, 2.8236000000000927e-05, 2.7792000000002176e-05, 2.7486000000000177e-05, 2.769500000000119e-05, 2.7624999999999872e-05, 2.7569999999997596e-05,...</msg>
<status status="PASS" starttime="20201030 15:55:56.198" endtime="20201030 15:55:56.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.206" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 15:55:56.204" endtime="20201030 15:55:56.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.208" level="INFO">VALUE: [2.7624999999999872e-05, 2.7736000000000427e-05, 2.8236000000000927e-05, 2.7792000000002176e-05, 2.7486000000000177e-05, 2.769500000000119e-05, 2.7624999999999872e-05, 2.7569999999997596e-05, 2.765300000000248e-05, 2.7749999999999997e-05, 2.7624999999999872e-05, 2.8333999999997916e-05, 2.768099999999815e-05, 2.7624999999999872e-05, 2.8027999999999387e-05, 2.740299999999876e-05, 2.7820000000001316e-05, 2.7374999999999622e-05, 2.8236000000000927e-05, 2.7679999999998678e-05, 2.8097000000001232e-05, 2.7374999999999622e-05, 2.7804999999998803e-05, 2.8013999999999817e-05, 2.7679999999998678e-05, 2.7458000000001037e-05, 2.8319000000002342e-05, 2.8290999999999733e-05, 2.8193999999998748e-05, 2.7499999999999747e-05, 2.8013999999999817e-05, 2.7791999999998707e-05, 2.7499999999999747e-05, 2.7847000000000982e-05, 2.766699999999858e-05, 2.8041999999998957e-05, 2.7804999999998803e-05, 2.7374999999999622e-05, 2.7847000000000982e-05, 2.8013999999999817e-05, 2.7902999999999262e-05, 2.7763999999999567e-05, 2.7472000000000607e-05, 2.8068999999998623e-05, 2.7374999999999622e-05, 2.7957999999998068e-05, 2.768099999999815e-05, 2.7388999999999192e-05, 2.7638999999999442e-05, 2.7457999999997568e-05]</msg>
<status status="PASS" starttime="20201030 15:55:56.207" endtime="20201030 15:55:56.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.202" endtime="20201030 15:55:56.210"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:56.214" endtime="20201030 15:55:56.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.212" endtime="20201030 15:55:56.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.211" endtime="20201030 15:55:56.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.855" endtime="20201030 15:55:56.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.855" endtime="20201030 15:55:56.234"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.243" endtime="20201030 15:55:56.258"></status>
</kw>
<msg timestamp="20201030 15:55:56.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.241" endtime="20201030 15:55:56.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.260" endtime="20201030 15:55:56.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.262" endtime="20201030 15:55:56.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.239" endtime="20201030 15:55:56.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.237" endtime="20201030 15:55:56.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.271" endtime="20201030 15:55:56.557"></status>
</kw>
<msg timestamp="20201030 15:55:56.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021968403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021997542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.270" endtime="20201030 15:55:56.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021968403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021997542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.561" endtime="20201030 15:55:56.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.569" endtime="20201030 15:55:56.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.267" endtime="20201030 15:55:56.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.265" endtime="20201030 15:55:56.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:56.576" level="INFO">${RESULT} = [{'diff': 2.9138999999997472e-05}, {'diff': 2.8972000000002107e-05}, {'diff': 2.9111000000001802e-05}, {'diff': 2.893100000000287e-05}, {'diff': 2.8625000000000872e-05}, {'diff': 2.918099999999965e-05...</msg>
<status status="PASS" starttime="20201030 15:55:56.573" endtime="20201030 15:55:56.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:56.581" level="INFO">${ACCURACY} = {'diff': [2.9138999999997472e-05, 2.8972000000002107e-05, 2.9111000000001802e-05, 2.893100000000287e-05, 2.8625000000000872e-05, 2.918099999999965e-05, 2.9041999999999957e-05, 2.9069999999999097e-05, ...</msg>
<status status="PASS" starttime="20201030 15:55:56.577" endtime="20201030 15:55:56.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.586" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 15:55:56.584" endtime="20201030 15:55:56.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.588" level="INFO">VALUE: [2.9138999999997472e-05, 2.8972000000002107e-05, 2.9111000000001802e-05, 2.893100000000287e-05, 2.8625000000000872e-05, 2.918099999999965e-05, 2.9041999999999957e-05, 2.9069999999999097e-05, 2.894499999999897e-05, 2.8375000000000622e-05, 2.8806000000002746e-05, 2.9263000000001593e-05, 2.869499999999872e-05, 2.922299999999836e-05, 2.9055000000000053e-05, 2.8513999999996847e-05, 2.8500000000000747e-05, 2.898700000000115e-05, 2.8778000000000137e-05, 2.8694000000002717e-05, 2.8694000000002717e-05, 2.8429999999999428e-05, 2.9041000000000483e-05, 2.9222000000002357e-05, 2.9083000000002662e-05, 2.8679999999999678e-05, 2.8596999999998263e-05, 2.8597000000001732e-05, 2.9068999999999623e-05, 2.8625000000000872e-05, 2.8860999999998083e-05, 2.9318999999999873e-05, 2.8540999999999983e-05, 2.922299999999836e-05, 2.9318999999999873e-05, 2.8778000000000137e-05, 2.8889000000000692e-05, 2.9097999999998236e-05, 2.9166000000000608e-05, 2.868099999999915e-05, 2.8847000000001982e-05, 2.8972000000002107e-05, 2.9250000000001497e-05, 2.8832999999998943e-05, 2.8818999999999373e-05, 2.9319999999999347e-05, 2.894500000000244e-05, 2.9014000000000817e-05, 2.919499999999922e-05, 2.8597000000001732e-05]</msg>
<status status="PASS" starttime="20201030 15:55:56.587" endtime="20201030 15:55:56.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.582" endtime="20201030 15:55:56.589"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:56.593" endtime="20201030 15:55:56.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.591" endtime="20201030 15:55:56.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.590" endtime="20201030 15:55:56.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.235" endtime="20201030 15:55:56.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.235" endtime="20201030 15:55:56.613"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.622" endtime="20201030 15:55:56.639"></status>
</kw>
<msg timestamp="20201030 15:55:56.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.621" endtime="20201030 15:55:56.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.641" endtime="20201030 15:55:56.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.645" endtime="20201030 15:55:56.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.618" endtime="20201030 15:55:56.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.616" endtime="20201030 15:55:56.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.660" endtime="20201030 15:55:56.947"></status>
</kw>
<msg timestamp="20201030 15:55:56.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022095431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022125431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.657" endtime="20201030 15:55:56.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022095431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022125431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.951" endtime="20201030 15:55:56.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.960" endtime="20201030 15:55:56.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.653" endtime="20201030 15:55:56.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.651" endtime="20201030 15:55:56.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:56.966" level="INFO">${RESULT} = [{'diff': 3.0000000000002247e-05}, {'diff': 2.9958000000000068e-05}, {'diff': 2.9596999999999263e-05}, {'diff': 2.9667000000000582e-05}, {'diff': 2.9777999999997667e-05}, {'diff': 3.0249999999999028e-...</msg>
<status status="PASS" starttime="20201030 15:55:56.963" endtime="20201030 15:55:56.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:56.970" level="INFO">${ACCURACY} = {'diff': [3.0000000000002247e-05, 2.9958000000000068e-05, 2.9596999999999263e-05, 2.9667000000000582e-05, 2.9777999999997667e-05, 3.0249999999999028e-05, 2.9569999999999597e-05, 3.0096999999999763e-05...</msg>
<status status="PASS" starttime="20201030 15:55:56.967" endtime="20201030 15:55:56.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.975" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 15:55:56.974" endtime="20201030 15:55:56.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.977" level="INFO">VALUE: [3.0000000000002247e-05, 2.9958000000000068e-05, 2.9596999999999263e-05, 2.9667000000000582e-05, 2.9777999999997667e-05, 3.0249999999999028e-05, 2.9569999999999597e-05, 3.0096999999999763e-05, 3.0360999999999583e-05, 2.9999999999998778e-05, 2.9917000000000832e-05, 2.9374999999998153e-05, 3.019500000000022e-05, 2.9485999999998708e-05, 2.9596999999999263e-05, 2.9611000000002302e-05, 3.019500000000022e-05, 2.9917000000000832e-05, 2.969499999999972e-05, 2.9819000000000373e-05, 2.970899999999929e-05, 2.995900000000301e-05, 3.0360999999999583e-05, 2.9763000000002093e-05, 3.0041000000001483e-05, 2.9471999999999138e-05, 3.0012999999998874e-05, 2.9750000000001997e-05, 2.9749999999998528e-05, 2.9888999999998223e-05, 3.0333000000000443e-05, 2.967999999999721e-05, 2.9541000000000983e-05, 2.9443999999999998e-05, 2.9971999999999638e-05, 2.9985999999999208e-05, 2.9486000000002177e-05, 3.0013999999998348e-05, 2.9721999999999388e-05, 2.9721999999999388e-05, 2.9332999999999443e-05, 2.9707999999999818e-05, 2.9721999999999388e-05, 3.0277999999998167e-05, 3.0180000000001178e-05, 2.9944000000000498e-05, 2.9471999999999138e-05, 2.9721999999999388e-05, 3.0124999999998903e-05, 2.9971999999999638e-05]</msg>
<status status="PASS" starttime="20201030 15:55:56.976" endtime="20201030 15:55:56.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.971" endtime="20201030 15:55:56.979"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:56.982" endtime="20201030 15:55:57.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.981" endtime="20201030 15:55:57.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.979" endtime="20201030 15:55:57.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.614" endtime="20201030 15:55:57.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.614" endtime="20201030 15:55:57.003"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.011" endtime="20201030 15:55:57.028"></status>
</kw>
<msg timestamp="20201030 15:55:57.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.010" endtime="20201030 15:55:57.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.030" endtime="20201030 15:55:57.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.032" endtime="20201030 15:55:57.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.007" endtime="20201030 15:55:57.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.005" endtime="20201030 15:55:57.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.041" endtime="20201030 15:55:57.327"></status>
</kw>
<msg timestamp="20201030 15:55:57.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022779028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022810417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:57.040" endtime="20201030 15:55:57.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022779028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022810417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:57.331" endtime="20201030 15:55:57.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.340" endtime="20201030 15:55:57.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.037" endtime="20201030 15:55:57.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.036" endtime="20201030 15:55:57.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:57.346" level="INFO">${RESULT} = [{'diff': 3.138899999999972e-05}, {'diff': 3.0611999999999306e-05}, {'diff': 3.102799999999892e-05}, {'diff': 3.068100000000115e-05}, {'diff': 3.079100000000223e-05}, {'diff': 3.068000000000168e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:57.343" endtime="20201030 15:55:57.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:57.350" level="INFO">${ACCURACY} = {'diff': [3.138899999999972e-05, 3.0611999999999306e-05, 3.102799999999892e-05, 3.068100000000115e-05, 3.079100000000223e-05, 3.068000000000168e-05, 3.118100000000165e-05, 3.095900000000054e-05, 3.045...</msg>
<status status="PASS" starttime="20201030 15:55:57.347" endtime="20201030 15:55:57.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.355" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 15:55:57.354" endtime="20201030 15:55:57.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.357" level="INFO">VALUE: [3.138899999999972e-05, 3.0611999999999306e-05, 3.102799999999892e-05, 3.068100000000115e-05, 3.079100000000223e-05, 3.068000000000168e-05, 3.118100000000165e-05, 3.095900000000054e-05, 3.045900000000004e-05, 3.066600000000211e-05, 3.0444000000000998e-05, 3.0554999999998084e-05, 3.066599999999864e-05, 3.074999999999953e-05, 3.109700000000076e-05, 3.063899999999897e-05, 3.115299999999904e-05, 3.125000000000003e-05, 3.067999999999821e-05, 3.086100000000008e-05, 3.115299999999904e-05, 3.094399999999803e-05, 3.116599999999914e-05, 3.115299999999904e-05, 3.0554999999998084e-05, 3.0499999999999278e-05, 3.12639999999996e-05, 3.0499999999999278e-05, 3.123600000000046e-05, 3.05700000000006e-05, 3.125000000000003e-05, 3.058300000000069e-05, 3.0485999999999708e-05, 3.082000000000085e-05, 3.130600000000178e-05, 3.073599999999996e-05, 3.097300000000011e-05, 3.058300000000069e-05, 3.0514000000002317e-05, 3.052800000000189e-05, 3.061099999999983e-05, 3.113900000000294e-05, 3.070899999999682e-05, 3.130600000000178e-05, 3.102800000000239e-05, 3.0847999999999987e-05, 3.055600000000103e-05, 3.086100000000008e-05, 3.070900000000029e-05, 3.069499999999725e-05]</msg>
<status status="PASS" starttime="20201030 15:55:57.356" endtime="20201030 15:55:57.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.351" endtime="20201030 15:55:57.359"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:57.363" endtime="20201030 15:55:57.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.362" endtime="20201030 15:55:57.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.360" endtime="20201030 15:55:57.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.004" endtime="20201030 15:55:57.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.003" endtime="20201030 15:55:57.384"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.392" endtime="20201030 15:55:57.407"></status>
</kw>
<msg timestamp="20201030 15:55:57.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.391" endtime="20201030 15:55:57.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.409" endtime="20201030 15:55:57.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.411" endtime="20201030 15:55:57.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.388" endtime="20201030 15:55:57.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.386" endtime="20201030 15:55:57.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.420" endtime="20201030 15:55:57.705"></status>
</kw>
<msg timestamp="20201030 15:55:57.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021848986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021880625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:57.419" endtime="20201030 15:55:57.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021848986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021880625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:57.709" endtime="20201030 15:55:57.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.718" endtime="20201030 15:55:57.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.416" endtime="20201030 15:55:57.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.414" endtime="20201030 15:55:57.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:57.724" level="INFO">${RESULT} = [{'diff': 3.163899999999997e-05}, {'diff': 3.215300000000004e-05}, {'diff': 3.181999999999838e-05}, {'diff': 3.168099999999868e-05}, {'diff': 3.1846999999998044e-05}, {'diff': 3.218099999999918e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:57.721" endtime="20201030 15:55:57.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:57.729" level="INFO">${ACCURACY} = {'diff': [3.163899999999997e-05, 3.215300000000004e-05, 3.181999999999838e-05, 3.168099999999868e-05, 3.1846999999998044e-05, 3.218099999999918e-05, 3.205500000000305e-05, 3.177799999999967e-05, 3.187...</msg>
<status status="PASS" starttime="20201030 15:55:57.725" endtime="20201030 15:55:57.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.733" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 15:55:57.732" endtime="20201030 15:55:57.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.737" level="INFO">VALUE: [3.163899999999997e-05, 3.215300000000004e-05, 3.181999999999838e-05, 3.168099999999868e-05, 3.1846999999998044e-05, 3.218099999999918e-05, 3.205500000000305e-05, 3.177799999999967e-05, 3.187500000000065e-05, 3.190299999999979e-05, 3.231999999999888e-05, 3.150000000000028e-05, 3.155599999999856e-05, 3.147200000000114e-05, 3.213900000000047e-05, 3.233400000000192e-05, 3.169500000000172e-05, 3.240300000000029e-05, 3.222300000000136e-05, 3.180599999999881e-05, 3.1513000000000374e-05, 3.136199999999659e-05, 3.184800000000099e-05, 3.20700000000021e-05, 3.165200000000007e-05, 3.142999999999896e-05, 3.2082999999998724e-05, 3.169399999999878e-05, 3.151399999999985e-05, 3.2304999999999834e-05, 3.216699999999961e-05, 3.223599999999799e-05, 3.165200000000007e-05, 3.200000000000078e-05, 3.225000000000103e-05, 3.17640000000001e-05, 3.144399999999853e-05, 3.156900000000212e-05, 3.173600000000096e-05, 3.169400000000225e-05, 3.147200000000114e-05, 3.22640000000006e-05, 3.16250000000004e-05, 3.15700000000016e-05, 3.152799999999942e-05, 3.177799999999967e-05, 3.1568999999998654e-05, 3.158300000000169e-05, 3.234700000000201e-05, 3.218100000000265e-05]</msg>
<status status="PASS" starttime="20201030 15:55:57.735" endtime="20201030 15:55:57.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.730" endtime="20201030 15:55:57.739"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:57.745" endtime="20201030 15:55:57.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.743" endtime="20201030 15:55:57.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.740" endtime="20201030 15:55:57.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.385" endtime="20201030 15:55:57.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.384" endtime="20201030 15:55:57.768"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.777" endtime="20201030 15:55:57.794"></status>
</kw>
<msg timestamp="20201030 15:55:57.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.775" endtime="20201030 15:55:57.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.795" endtime="20201030 15:55:57.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.798" endtime="20201030 15:55:57.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.773" endtime="20201030 15:55:57.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.771" endtime="20201030 15:55:57.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.807" endtime="20201030 15:55:58.094"></status>
</kw>
<msg timestamp="20201030 15:55:58.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023987222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024020625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:57.805" endtime="20201030 15:55:58.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023987222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024020625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:58.098" endtime="20201030 15:55:58.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.106" endtime="20201030 15:55:58.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.802" endtime="20201030 15:55:58.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.801" endtime="20201030 15:55:58.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:58.113" level="INFO">${RESULT} = [{'diff': 3.340300000000129e-05}, {'diff': 3.322199999999942e-05}, {'diff': 3.286100000000208e-05}, {'diff': 3.263900000000097e-05}, {'diff': 3.299999999999831e-05}, {'diff': 3.283399999999895e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:58.110" endtime="20201030 15:55:58.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:58.117" level="INFO">${ACCURACY} = {'diff': [3.340300000000129e-05, 3.322199999999942e-05, 3.286100000000208e-05, 3.263900000000097e-05, 3.299999999999831e-05, 3.283399999999895e-05, 3.281999999999938e-05, 3.330600000000031e-05, 3.3292...</msg>
<status status="PASS" starttime="20201030 15:55:58.114" endtime="20201030 15:55:58.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.121" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 15:55:58.120" endtime="20201030 15:55:58.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.124" level="INFO">VALUE: [3.340300000000129e-05, 3.322199999999942e-05, 3.286100000000208e-05, 3.263900000000097e-05, 3.299999999999831e-05, 3.283399999999895e-05, 3.281999999999938e-05, 3.330600000000031e-05, 3.329200000000074e-05, 3.2596999999998794e-05, 3.323599999999899e-05, 3.265299999999707e-05, 3.272200000000239e-05, 3.26250000000014e-05, 3.3305000000000834e-05, 3.268099999999968e-05, 3.273599999999849e-05, 3.329200000000074e-05, 3.245900000000204e-05, 3.29579999999996e-05, 3.247199999999867e-05, 3.3360999999999114e-05, 3.319499999999975e-05, 3.316600000000114e-05, 3.3263000000002124e-05, 3.261100000000183e-05, 3.319400000000028e-05, 3.2568999999999654e-05, 3.269399999999978e-05, 3.2555000000000084e-05, 3.3332999999999974e-05, 3.251399999999738e-05, 3.2582999999999224e-05, 3.249999999999781e-05, 3.318000000000071e-05, 3.29579999999996e-05, 3.259700000000226e-05, 3.309799999999877e-05, 3.240300000000029e-05, 3.287500000000165e-05, 3.247200000000214e-05, 3.319400000000028e-05, 3.265299999999707e-05, 3.2832999999999474e-05, 3.252800000000042e-05, 3.279199999999677e-05, 3.304199999999702e-05, 3.3082999999999724e-05, 3.281999999999938e-05, 3.2860999999998614e-05]</msg>
<status status="PASS" starttime="20201030 15:55:58.122" endtime="20201030 15:55:58.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.118" endtime="20201030 15:55:58.125"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:58.129" endtime="20201030 15:55:58.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.127" endtime="20201030 15:55:58.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.126" endtime="20201030 15:55:58.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.769" endtime="20201030 15:55:58.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.768" endtime="20201030 15:55:58.149"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.158" endtime="20201030 15:55:58.175"></status>
</kw>
<msg timestamp="20201030 15:55:58.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:58.156" endtime="20201030 15:55:58.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:58.176" endtime="20201030 15:55:58.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.179" endtime="20201030 15:55:58.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.154" endtime="20201030 15:55:58.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.152" endtime="20201030 15:55:58.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.188" endtime="20201030 15:55:58.473"></status>
</kw>
<msg timestamp="20201030 15:55:58.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022778847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022812972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:58.186" endtime="20201030 15:55:58.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022778847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022812972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:58.477" endtime="20201030 15:55:58.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.485" endtime="20201030 15:55:58.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.184" endtime="20201030 15:55:58.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.182" endtime="20201030 15:55:58.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:58.492" level="INFO">${RESULT} = [{'diff': 3.4124999999999434e-05}, {'diff': 3.399999999999931e-05}, {'diff': 3.3583000000000224e-05}, {'diff': 3.416599999999867e-05}, {'diff': 3.395799999999713e-05}, {'diff': 3.402800000000192e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:58.489" endtime="20201030 15:55:58.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:58.496" level="INFO">${ACCURACY} = {'diff': [3.4124999999999434e-05, 3.399999999999931e-05, 3.3583000000000224e-05, 3.416599999999867e-05, 3.395799999999713e-05, 3.402800000000192e-05, 3.397200000000017e-05, 3.42779999999987e-05, 3.397...</msg>
<status status="PASS" starttime="20201030 15:55:58.493" endtime="20201030 15:55:58.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.500" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 15:55:58.499" endtime="20201030 15:55:58.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.506" level="INFO">VALUE: [3.4124999999999434e-05, 3.399999999999931e-05, 3.3583000000000224e-05, 3.416599999999867e-05, 3.395799999999713e-05, 3.402800000000192e-05, 3.397200000000017e-05, 3.42779999999987e-05, 3.397299999999964e-05, 3.3832999999997004e-05, 3.373599999999949e-05, 3.366700000000111e-05, 3.3638999999998503e-05, 3.341700000000086e-05, 3.374999999999906e-05, 3.348599999999924e-05, 3.372199999999992e-05, 3.430600000000131e-05, 3.375000000000253e-05, 3.37779999999982e-05, 3.37640000000021e-05, 3.3624999999998934e-05, 3.377800000000167e-05, 3.383399999999995e-05, 3.393100000000093e-05, 3.434800000000002e-05, 3.408399999999673e-05, 3.3874999999999184e-05, 3.432000000000088e-05, 3.420899999999685e-05, 3.3569000000000654e-05, 3.4040999999998545e-05, 3.4304999999998365e-05, 3.341599999999792e-05, 3.3541000000001514e-05, 3.365300000000154e-05, 3.3819000000000904e-05, 3.3638999999998503e-05, 3.4097000000000294e-05, 3.388900000000222e-05, 3.377800000000167e-05, 3.365300000000154e-05, 3.417999999999824e-05, 3.370800000000035e-05, 3.344400000000053e-05, 3.349999999999881e-05, 3.430600000000131e-05, 3.388900000000222e-05, 3.420800000000085e-05, 3.347199999999967e-05]</msg>
<status status="PASS" starttime="20201030 15:55:58.501" endtime="20201030 15:55:58.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.497" endtime="20201030 15:55:58.507"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:58.511" endtime="20201030 15:55:58.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.510" endtime="20201030 15:55:58.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.508" endtime="20201030 15:55:58.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.150" endtime="20201030 15:55:58.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.150" endtime="20201030 15:55:58.532"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.540" endtime="20201030 15:55:58.555"></status>
</kw>
<msg timestamp="20201030 15:55:58.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:58.539" endtime="20201030 15:55:58.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:58.557" endtime="20201030 15:55:58.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.559" endtime="20201030 15:55:58.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.536" endtime="20201030 15:55:58.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.534" endtime="20201030 15:55:58.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.568" endtime="20201030 15:55:58.853"></status>
</kw>
<msg timestamp="20201030 15:55:58.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021951986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021987306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:58.567" endtime="20201030 15:55:58.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021951986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021987306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:58.858" endtime="20201030 15:55:58.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.866" endtime="20201030 15:55:58.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.564" endtime="20201030 15:55:58.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.563" endtime="20201030 15:55:58.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:58.872" level="INFO">${RESULT} = [{'diff': 3.532000000000188e-05}, {'diff': 3.529199999999927e-05}, {'diff': 3.452799999999895e-05}, {'diff': 3.522300000000089e-05}, {'diff': 3.509800000000077e-05}, {'diff': 3.451400000000285e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:58.869" endtime="20201030 15:55:58.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:58.877" level="INFO">${ACCURACY} = {'diff': [3.532000000000188e-05, 3.529199999999927e-05, 3.452799999999895e-05, 3.522300000000089e-05, 3.509800000000077e-05, 3.451400000000285e-05, 3.468100000000168e-05, 3.505599999999859e-05, 3.4695...</msg>
<status status="PASS" starttime="20201030 15:55:58.873" endtime="20201030 15:55:58.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.882" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 15:55:58.881" endtime="20201030 15:55:58.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.884" level="INFO">VALUE: [3.532000000000188e-05, 3.529199999999927e-05, 3.452799999999895e-05, 3.522300000000089e-05, 3.509800000000077e-05, 3.451400000000285e-05, 3.468100000000168e-05, 3.505599999999859e-05, 3.469500000000125e-05, 3.447300000000014e-05, 3.4638999999999504e-05, 3.472200000000092e-05, 3.491600000000289e-05, 3.475000000000006e-05, 3.4652999999999073e-05, 3.526400000000013e-05, 3.4554999999998615e-05, 3.4388999999999253e-05, 3.525000000000056e-05, 3.449999999999981e-05, 3.519399999999881e-05, 3.444400000000153e-05, 3.5054999999999115e-05, 3.44580000000011e-05, 3.526400000000013e-05, 3.5097000000001294e-05, 3.497299999999717e-05, 3.4388999999999253e-05, 3.475000000000006e-05, 3.520800000000185e-05, 3.475000000000006e-05, 3.4624999999999934e-05, 3.46250000000034e-05, 3.497200000000117e-05, 3.4388999999999253e-05, 3.455600000000156e-05, 3.5166999999999143e-05, 3.4638999999999504e-05, 3.475000000000006e-05, 3.507000000000163e-05, 3.504200000000249e-05, 3.454200000000199e-05, 3.4611000000000364e-05, 3.49450000000015e-05, 3.4611000000000364e-05, 3.481999999999791e-05, 3.4652999999999073e-05, 3.4819000000001904e-05, 3.523700000000046e-05, 3.443100000000143e-05]</msg>
<status status="PASS" starttime="20201030 15:55:58.883" endtime="20201030 15:55:58.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.878" endtime="20201030 15:55:58.886"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:58.889" endtime="20201030 15:55:58.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.888" endtime="20201030 15:55:58.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.887" endtime="20201030 15:55:58.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.533" endtime="20201030 15:55:58.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.532" endtime="20201030 15:55:58.910"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.918" endtime="20201030 15:55:58.935"></status>
</kw>
<msg timestamp="20201030 15:55:58.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:58.917" endtime="20201030 15:55:58.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:58.936" endtime="20201030 15:55:58.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.939" endtime="20201030 15:55:58.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.914" endtime="20201030 15:55:58.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.912" endtime="20201030 15:55:58.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.948" endtime="20201030 15:55:59.237"></status>
</kw>
<msg timestamp="20201030 15:55:59.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022184403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022220653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:58.946" endtime="20201030 15:55:59.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022184403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022220653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:59.241" endtime="20201030 15:55:59.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.249" endtime="20201030 15:55:59.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.943" endtime="20201030 15:55:59.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.942" endtime="20201030 15:55:59.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:59.256" level="INFO">${RESULT} = [{'diff': 3.625000000000156e-05}, {'diff': 3.606999999999916e-05}, {'diff': 3.6125000000001434e-05}, {'diff': 3.623599999999852e-05}, {'diff': 3.570900000000182e-05}, {'diff': 3.573600000000149e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:59.253" endtime="20201030 15:55:59.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:59.260" level="INFO">${ACCURACY} = {'diff': [3.625000000000156e-05, 3.606999999999916e-05, 3.6125000000001434e-05, 3.623599999999852e-05, 3.570900000000182e-05, 3.573600000000149e-05, 3.626400000000113e-05, 3.54589999999981e-05, 3.6084...</msg>
<status status="PASS" starttime="20201030 15:55:59.257" endtime="20201030 15:55:59.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.264" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 15:55:59.263" endtime="20201030 15:55:59.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.267" level="INFO">VALUE: [3.625000000000156e-05, 3.606999999999916e-05, 3.6125000000001434e-05, 3.623599999999852e-05, 3.570900000000182e-05, 3.573600000000149e-05, 3.626400000000113e-05, 3.54589999999981e-05, 3.60840000000022e-05, 3.619500000000275e-05, 3.600000000000131e-05, 3.605599999999959e-05, 3.574999999999759e-05, 3.5582999999998755e-05, 3.5610999999997894e-05, 3.592999999999999e-05, 3.6318999999999935e-05, 3.594399999999956e-05, 3.563800000000103e-05, 3.5375000000000684e-05, 3.6125000000001434e-05, 3.592999999999999e-05, 3.569399999999931e-05, 3.602800000000045e-05, 3.5861000000001614e-05, 3.575000000000106e-05, 3.594399999999956e-05, 3.6152999999997104e-05, 3.5596999999998324e-05, 3.5625000000000934e-05, 3.567999999999974e-05, 3.5569000000002654e-05, 3.572199999999845e-05, 3.5832999999999005e-05, 3.569500000000225e-05, 3.62780000000007e-05, 3.5611000000001364e-05, 3.6180999999999713e-05, 3.561200000000084e-05, 3.573600000000149e-05, 3.5596999999998324e-05, 3.55979999999978e-05, 3.597299999999817e-05, 3.5860999999998144e-05, 3.5596999999998324e-05, 3.549999999999734e-05, 3.5625000000000934e-05, 3.5445000000002e-05, 3.548600000000124e-05, 3.6124999999997964e-05]</msg>
<status status="PASS" starttime="20201030 15:55:59.265" endtime="20201030 15:55:59.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.261" endtime="20201030 15:55:59.268"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:59.272" endtime="20201030 15:55:59.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.270" endtime="20201030 15:55:59.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.269" endtime="20201030 15:55:59.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.911" endtime="20201030 15:55:59.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.910" endtime="20201030 15:55:59.292"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.301" endtime="20201030 15:55:59.317"></status>
</kw>
<msg timestamp="20201030 15:55:59.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:59.300" endtime="20201030 15:55:59.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:59.319" endtime="20201030 15:55:59.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.321" endtime="20201030 15:55:59.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.297" endtime="20201030 15:55:59.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.295" endtime="20201030 15:55:59.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.331" endtime="20201030 15:55:59.628"></status>
</kw>
<msg timestamp="20201030 15:55:59.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022827153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022864458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:59.329" endtime="20201030 15:55:59.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022827153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022864458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:59.638" endtime="20201030 15:55:59.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.657" endtime="20201030 15:55:59.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.326" endtime="20201030 15:55:59.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.325" endtime="20201030 15:55:59.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:59.672" level="INFO">${RESULT} = [{'diff': 3.7305000000001365e-05}, {'diff': 3.7069000000000685e-05}, {'diff': 3.66520000000016e-05}, {'diff': 3.679200000000077e-05}, {'diff': 3.6819000000000435e-05}, {'diff': 3.71659999999982e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:59.665" endtime="20201030 15:55:59.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:59.682" level="INFO">${ACCURACY} = {'diff': [3.7305000000001365e-05, 3.7069000000000685e-05, 3.66520000000016e-05, 3.679200000000077e-05, 3.6819000000000435e-05, 3.71659999999982e-05, 3.6819000000000435e-05, 3.7139000000002004e-05, 3.7...</msg>
<status status="PASS" starttime="20201030 15:55:59.675" endtime="20201030 15:55:59.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.689" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 15:55:59.688" endtime="20201030 15:55:59.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.692" level="INFO">VALUE: [3.7305000000001365e-05, 3.7069000000000685e-05, 3.66520000000016e-05, 3.679200000000077e-05, 3.6819000000000435e-05, 3.71659999999982e-05, 3.6819000000000435e-05, 3.7139000000002004e-05, 3.7347000000000075e-05, 3.695800000000013e-05, 3.6888999999998284e-05, 3.720800000000038e-05, 3.7069000000000685e-05, 3.705600000000059e-05, 3.7096999999999825e-05, 3.7319000000000935e-05, 3.6903000000001324e-05, 3.6819000000000435e-05, 3.651399999999791e-05, 3.730599999999737e-05, 3.6930999999996994e-05, 3.722199999999995e-05, 3.704200000000102e-05, 3.649999999999834e-05, 3.654200000000052e-05, 3.7319000000000935e-05, 3.650000000000181e-05, 3.652800000000095e-05, 3.6639000000001504e-05, 3.7181000000000713e-05, 3.6931000000000463e-05, 3.7153000000001574e-05, 3.669400000000031e-05, 3.675000000000206e-05, 3.729200000000127e-05, 3.6569000000000185e-05, 3.6526999999998006e-05, 3.6624999999998464e-05, 3.6860999999999144e-05, 3.69719999999997e-05, 3.672199999999945e-05, 3.6777000000001725e-05, 3.6526999999998006e-05, 3.729200000000127e-05, 3.720800000000038e-05, 3.698599999999927e-05, 3.727799999999823e-05, 3.683399999999948e-05, 3.7041000000001545e-05, 3.7153000000001574e-05]</msg>
<status status="PASS" starttime="20201030 15:55:59.690" endtime="20201030 15:55:59.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.684" endtime="20201030 15:55:59.694"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:59.698" endtime="20201030 15:55:59.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.696" endtime="20201030 15:55:59.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.695" endtime="20201030 15:55:59.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.293" endtime="20201030 15:55:59.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.293" endtime="20201030 15:55:59.719"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.728" endtime="20201030 15:55:59.744"></status>
</kw>
<msg timestamp="20201030 15:55:59.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:59.726" endtime="20201030 15:55:59.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:59.745" endtime="20201030 15:55:59.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.748" endtime="20201030 15:55:59.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.723" endtime="20201030 15:55:59.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.721" endtime="20201030 15:55:59.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.757" endtime="20201030 15:56:00.044"></status>
</kw>
<msg timestamp="20201030 15:56:00.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022516264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022553931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:59.756" endtime="20201030 15:56:00.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022516264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022553931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:00.048" endtime="20201030 15:56:00.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.057" endtime="20201030 15:56:00.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.753" endtime="20201030 15:56:00.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.751" endtime="20201030 15:56:00.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:00.063" level="INFO">${RESULT} = [{'diff': 3.7666999999998174e-05}, {'diff': 3.74590000000001e-05}, {'diff': 3.7917000000001894e-05}, {'diff': 3.833400000000098e-05}, {'diff': 3.79720000000007e-05}, {'diff': 3.834799999999708e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:00.060" endtime="20201030 15:56:00.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:00.069" level="INFO">${ACCURACY} = {'diff': [3.7666999999998174e-05, 3.74590000000001e-05, 3.7917000000001894e-05, 3.833400000000098e-05, 3.79720000000007e-05, 3.834799999999708e-05, 3.8040999999999076e-05, 3.7762999999999686e-05, 3.83...</msg>
<status status="PASS" starttime="20201030 15:56:00.064" endtime="20201030 15:56:00.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.073" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 15:56:00.072" endtime="20201030 15:56:00.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.076" level="INFO">VALUE: [3.7666999999998174e-05, 3.74590000000001e-05, 3.7917000000001894e-05, 3.833400000000098e-05, 3.79720000000007e-05, 3.834799999999708e-05, 3.8040999999999076e-05, 3.7762999999999686e-05, 3.8361000000000645e-05, 3.8319000000001935e-05, 3.765199999999913e-05, 3.7805000000001865e-05, 3.8111000000000395e-05, 3.752800000000195e-05, 3.751399999999891e-05, 3.791599999999895e-05, 3.769400000000131e-05, 3.826399999999966e-05, 3.7819000000001435e-05, 3.8055000000002115e-05, 3.8333000000001505e-05, 3.7639000000002504e-05, 3.74720000000002e-05, 3.7389000000002254e-05, 3.7833000000001005e-05, 3.79720000000007e-05, 3.823600000000052e-05, 3.825000000000009e-05, 3.7403000000001824e-05, 3.7861000000000145e-05, 3.827799999999923e-05, 3.826399999999966e-05, 3.834800000000055e-05, 3.82919999999988e-05, 3.7554999999998145e-05, 3.79720000000007e-05, 3.773600000000002e-05, 3.8304999999998895e-05, 3.752800000000195e-05, 3.7667000000001644e-05, 3.750000000000281e-05, 3.749999999999934e-05, 3.80980000000003e-05, 3.7638999999999034e-05, 3.820799999999791e-05, 3.8276999999999756e-05, 3.776400000000263e-05, 3.792999999999852e-05, 3.7568999999997715e-05, 3.795800000000113e-05]</msg>
<status status="PASS" starttime="20201030 15:56:00.074" endtime="20201030 15:56:00.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.069" endtime="20201030 15:56:00.077"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:00.081" endtime="20201030 15:56:00.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.080" endtime="20201030 15:56:00.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.078" endtime="20201030 15:56:00.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.719" endtime="20201030 15:56:00.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.719" endtime="20201030 15:56:00.102"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.111" endtime="20201030 15:56:00.127"></status>
</kw>
<msg timestamp="20201030 15:56:00.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:00.109" endtime="20201030 15:56:00.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:00.129" endtime="20201030 15:56:00.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.132" endtime="20201030 15:56:00.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.107" endtime="20201030 15:56:00.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.105" endtime="20201030 15:56:00.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.141" endtime="20201030 15:56:00.429"></status>
</kw>
<msg timestamp="20201030 15:56:00.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022406236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022445819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:00.140" endtime="20201030 15:56:00.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022406236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022445819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:00.433" endtime="20201030 15:56:00.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.441" endtime="20201030 15:56:00.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.137" endtime="20201030 15:56:00.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.135" endtime="20201030 15:56:00.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:00.448" level="INFO">${RESULT} = [{'diff': 3.9582999999999285e-05}, {'diff': 3.8972999999997704e-05}, {'diff': 3.8416999999998924e-05}, {'diff': 3.852799999999948e-05}, {'diff': 3.9181000000002714e-05}, {'diff': 3.9096999999998355e-0...</msg>
<status status="PASS" starttime="20201030 15:56:00.445" endtime="20201030 15:56:00.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:00.453" level="INFO">${ACCURACY} = {'diff': [3.9582999999999285e-05, 3.8972999999997704e-05, 3.8416999999998924e-05, 3.852799999999948e-05, 3.9181000000002714e-05, 3.9096999999998355e-05, 3.890200000000038e-05, 3.875000000000059e-05, 3...</msg>
<status status="PASS" starttime="20201030 15:56:00.449" endtime="20201030 15:56:00.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.457" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 15:56:00.456" endtime="20201030 15:56:00.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.460" level="INFO">VALUE: [3.9582999999999285e-05, 3.8972999999997704e-05, 3.8416999999998924e-05, 3.852799999999948e-05, 3.9181000000002714e-05, 3.9096999999998355e-05, 3.890200000000038e-05, 3.875000000000059e-05, 3.898600000000127e-05, 3.8346999999997605e-05, 3.873600000000102e-05, 3.849999999999687e-05, 3.917999999999977e-05, 3.86659999999997e-05, 3.9068999999999215e-05, 3.844400000000206e-05, 3.9110999999997925e-05, 3.8875000000000715e-05, 3.89720000000017e-05, 3.8611000000000895e-05, 3.8417000000002394e-05, 3.8625000000000465e-05, 3.8889000000000284e-05, 3.9068999999999215e-05, 3.8930999999998994e-05, 3.8818999999998965e-05, 3.876400000000016e-05, 3.877799999999973e-05, 3.8459000000001103e-05, 3.8416999999998924e-05, 3.902799999999998e-05, 3.842999999999902e-05, 3.8681000000002214e-05, 3.9125000000000965e-05, 3.877799999999973e-05, 3.848600000000077e-05, 3.8568999999998715e-05, 3.8695000000001784e-05, 3.9125000000000965e-05, 3.902799999999998e-05, 3.875000000000059e-05, 3.8833000000002005e-05, 3.847300000000067e-05, 3.923600000000152e-05, 3.8860999999997675e-05, 3.922199999999848e-05, 3.84720000000012e-05, 3.9082999999998785e-05, 3.926400000000066e-05, 3.8889000000000284e-05]</msg>
<status status="PASS" starttime="20201030 15:56:00.459" endtime="20201030 15:56:00.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.454" endtime="20201030 15:56:00.461"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:00.465" endtime="20201030 15:56:00.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.464" endtime="20201030 15:56:00.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.462" endtime="20201030 15:56:00.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.103" endtime="20201030 15:56:00.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.102" endtime="20201030 15:56:00.486"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.495" endtime="20201030 15:56:00.511"></status>
</kw>
<msg timestamp="20201030 15:56:00.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:00.493" endtime="20201030 15:56:00.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:00.513" endtime="20201030 15:56:00.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.516" endtime="20201030 15:56:00.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.491" endtime="20201030 15:56:00.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.489" endtime="20201030 15:56:00.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.525" endtime="20201030 15:56:00.811"></status>
</kw>
<msg timestamp="20201030 15:56:00.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023426097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023466361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:00.524" endtime="20201030 15:56:00.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023426097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023466361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:00.815" endtime="20201030 15:56:00.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.824" endtime="20201030 15:56:00.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.521" endtime="20201030 15:56:00.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.519" endtime="20201030 15:56:00.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:00.830" level="INFO">${RESULT} = [{'diff': 4.026400000000166e-05}, {'diff': 3.9416999999999924e-05}, {'diff': 4.026400000000166e-05}, {'diff': 4.0333000000000035e-05}, {'diff': 3.9403000000000354e-05}, {'diff': 3.977800000000073e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:00.827" endtime="20201030 15:56:00.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:00.835" level="INFO">${ACCURACY} = {'diff': [4.026400000000166e-05, 3.9416999999999924e-05, 4.026400000000166e-05, 4.0333000000000035e-05, 3.9403000000000354e-05, 3.977800000000073e-05, 3.9680999999999744e-05, 4.022199999999948e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:56:00.831" endtime="20201030 15:56:00.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.839" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 15:56:00.838" endtime="20201030 15:56:00.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.842" level="INFO">VALUE: [4.026400000000166e-05, 3.9416999999999924e-05, 4.026400000000166e-05, 4.0333000000000035e-05, 3.9403000000000354e-05, 3.977800000000073e-05, 3.9680999999999744e-05, 4.022199999999948e-05, 4.0111000000002395e-05, 3.9389000000000784e-05, 3.973599999999855e-05, 4.0180999999996775e-05, 4.02920000000008e-05, 3.9944999999999564e-05, 3.9652999999997135e-05, 3.9403000000000354e-05, 3.983399999999901e-05, 3.973599999999855e-05, 4.000000000000184e-05, 3.9944999999999564e-05, 3.958399999999876e-05, 3.973599999999855e-05, 4.018000000000077e-05, 3.9597000000002325e-05, 4.0319000000000466e-05, 4.0027000000001506e-05, 4.0290999999997856e-05, 3.9903000000000854e-05, 3.973600000000202e-05, 4.0305000000000896e-05, 3.9804999999996926e-05, 3.9596999999998855e-05, 3.991600000000095e-05, 4.0040999999997606e-05, 3.974999999999812e-05, 3.945800000000263e-05, 3.9903000000000854e-05, 4.0333000000000035e-05, 4.004200000000055e-05, 4.025000000000209e-05, 4.029199999999733e-05, 3.995799999999966e-05, 4.030600000000037e-05, 3.94859999999983e-05, 3.9680999999999744e-05, 4.006999999999969e-05, 4.0333000000000035e-05, 3.9375000000001215e-05, 3.9860999999998675e-05, 3.955600000000309e-05]</msg>
<status status="PASS" starttime="20201030 15:56:00.840" endtime="20201030 15:56:00.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.836" endtime="20201030 15:56:00.848"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:00.852" endtime="20201030 15:56:00.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.850" endtime="20201030 15:56:00.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.849" endtime="20201030 15:56:00.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.487" endtime="20201030 15:56:00.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.486" endtime="20201030 15:56:00.873"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.882" endtime="20201030 15:56:00.898"></status>
</kw>
<msg timestamp="20201030 15:56:00.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:00.880" endtime="20201030 15:56:00.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:00.899" endtime="20201030 15:56:00.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.902" endtime="20201030 15:56:00.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.877" endtime="20201030 15:56:00.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.875" endtime="20201030 15:56:00.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.911" endtime="20201030 15:56:01.198"></status>
</kw>
<msg timestamp="20201030 15:56:01.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022411181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022452681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:00.910" endtime="20201030 15:56:01.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022411181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022452681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:01.202" endtime="20201030 15:56:01.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.210" endtime="20201030 15:56:01.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.907" endtime="20201030 15:56:01.213"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.905" endtime="20201030 15:56:01.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:01.217" level="INFO">${RESULT} = [{'diff': 4.149999999999987e-05}, {'diff': 4.1124999999999495e-05}, {'diff': 4.04859999999993e-05}, {'diff': 4.1068999999997746e-05}, {'diff': 4.1069000000001216e-05}, {'diff': 4.0555000000001146e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:01.214" endtime="20201030 15:56:01.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:01.222" level="INFO">${ACCURACY} = {'diff': [4.149999999999987e-05, 4.1124999999999495e-05, 4.04859999999993e-05, 4.1068999999997746e-05, 4.1069000000001216e-05, 4.0555000000001146e-05, 4.043000000000102e-05, 4.1209000000000384e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:56:01.218" endtime="20201030 15:56:01.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.227" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 15:56:01.226" endtime="20201030 15:56:01.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.230" level="INFO">VALUE: [4.149999999999987e-05, 4.1124999999999495e-05, 4.04859999999993e-05, 4.1068999999997746e-05, 4.1069000000001216e-05, 4.0555000000001146e-05, 4.043000000000102e-05, 4.1209000000000384e-05, 4.065199999999866e-05, 4.120799999999744e-05, 4.047199999999973e-05, 4.0569000000000716e-05, 4.099999999999937e-05, 4.0639000000002035e-05, 4.0625000000002465e-05, 4.11660000000022e-05, 4.0583000000000286e-05, 4.123600000000005e-05, 4.122200000000048e-05, 4.095800000000066e-05, 4.04859999999993e-05, 4.124999999999962e-05, 4.097200000000023e-05, 4.1152999999998635e-05, 4.094400000000109e-05, 4.0596999999999855e-05, 4.1180999999997775e-05, 4.0833000000000536e-05, 4.047199999999973e-05, 4.1083000000000786e-05, 4.1139000000002535e-05, 4.108400000000026e-05, 4.057000000000019e-05, 4.049999999999887e-05, 4.1209000000000384e-05, 4.097200000000023e-05, 4.074999999999912e-05, 4.0667000000001174e-05, 4.0917000000001424e-05, 4.109799999999983e-05, 4.069399999999737e-05, 4.0695000000000314e-05, 4.041600000000145e-05, 4.0805000000001396e-05, 4.0874999999999245e-05, 4.101399999999894e-05, 4.045800000000016e-05, 4.0833000000000536e-05, 4.0583000000000286e-05, 4.072199999999998e-05]</msg>
<status status="PASS" starttime="20201030 15:56:01.228" endtime="20201030 15:56:01.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.223" endtime="20201030 15:56:01.231"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:01.235" endtime="20201030 15:56:01.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.233" endtime="20201030 15:56:01.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.232" endtime="20201030 15:56:01.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.874" endtime="20201030 15:56:01.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.873" endtime="20201030 15:56:01.256"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.265" endtime="20201030 15:56:01.281"></status>
</kw>
<msg timestamp="20201030 15:56:01.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:01.263" endtime="20201030 15:56:01.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:01.283" endtime="20201030 15:56:01.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.286" endtime="20201030 15:56:01.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.260" endtime="20201030 15:56:01.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.258" endtime="20201030 15:56:01.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.295" endtime="20201030 15:56:01.582"></status>
</kw>
<msg timestamp="20201030 15:56:01.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02254175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022583694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:01.294" endtime="20201030 15:56:01.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02254175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022583694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:01.587" endtime="20201030 15:56:01.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.595" endtime="20201030 15:56:01.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.291" endtime="20201030 15:56:01.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.289" endtime="20201030 15:56:01.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:01.602" level="INFO">${RESULT} = [{'diff': 4.194400000000209e-05}, {'diff': 4.1402999999998885e-05}, {'diff': 4.190199999999991e-05}, {'diff': 4.170800000000141e-05}, {'diff': 4.2082999999998316e-05}, {'diff': 4.220799999999844e-05},...</msg>
<status status="PASS" starttime="20201030 15:56:01.599" endtime="20201030 15:56:01.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:01.606" level="INFO">${ACCURACY} = {'diff': [4.194400000000209e-05, 4.1402999999998885e-05, 4.190199999999991e-05, 4.170800000000141e-05, 4.2082999999998316e-05, 4.220799999999844e-05, 4.1569000000001716e-05, 4.144399999999812e-05, 4.2...</msg>
<status status="PASS" starttime="20201030 15:56:01.603" endtime="20201030 15:56:01.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.611" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 15:56:01.610" endtime="20201030 15:56:01.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.614" level="INFO">VALUE: [4.194400000000209e-05, 4.1402999999998885e-05, 4.190199999999991e-05, 4.170800000000141e-05, 4.2082999999998316e-05, 4.220799999999844e-05, 4.1569000000001716e-05, 4.144399999999812e-05, 4.2277000000000287e-05, 4.2111000000000925e-05, 4.147200000000073e-05, 4.16799999999988e-05, 4.157000000000119e-05, 4.194400000000209e-05, 4.222200000000148e-05, 4.223599999999758e-05, 4.1833000000001536e-05, 4.1361000000000175e-05, 4.225000000000062e-05, 4.1846999999997636e-05, 4.1416999999998455e-05, 4.1430999999998025e-05, 4.229199999999933e-05, 4.240200000000041e-05, 4.1945000000001564e-05, 4.208400000000126e-05, 4.1681000000001744e-05, 4.226400000000019e-05, 4.1361000000000175e-05, 4.179199999999883e-05, 4.1638999999999565e-05, 4.1638999999999565e-05, 4.134800000000008e-05, 4.1916999999998955e-05, 4.2027000000000037e-05, 4.200000000000037e-05, 4.159800000000033e-05, 4.220799999999844e-05, 4.215199999999669e-05, 4.1526999999999537e-05, 4.1540999999999106e-05, 4.2040999999999606e-05, 4.226400000000019e-05, 4.176399999999969e-05, 4.22920000000028e-05, 4.1624999999999995e-05, 4.2097000000001356e-05, 4.220800000000191e-05, 4.219399999999887e-05, 4.1347000000000605e-05]</msg>
<status status="PASS" starttime="20201030 15:56:01.612" endtime="20201030 15:56:01.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.607" endtime="20201030 15:56:01.615"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:01.619" endtime="20201030 15:56:01.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.617" endtime="20201030 15:56:01.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.616" endtime="20201030 15:56:01.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.257" endtime="20201030 15:56:01.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.256" endtime="20201030 15:56:01.640"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.649" endtime="20201030 15:56:01.667"></status>
</kw>
<msg timestamp="20201030 15:56:01.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:01.647" endtime="20201030 15:56:01.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:01.668" endtime="20201030 15:56:01.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.671" endtime="20201030 15:56:01.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.645" endtime="20201030 15:56:01.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.642" endtime="20201030 15:56:01.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.680" endtime="20201030 15:56:01.966"></status>
</kw>
<msg timestamp="20201030 15:56:01.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023356236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023399708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:01.679" endtime="20201030 15:56:01.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023356236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023399708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:01.970" endtime="20201030 15:56:01.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.979" endtime="20201030 15:56:01.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.676" endtime="20201030 15:56:01.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.674" endtime="20201030 15:56:01.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:01.985" level="INFO">${RESULT} = [{'diff': 4.347200000000273e-05}, {'diff': 4.325000000000162e-05}, {'diff': 4.266600000000023e-05}, {'diff': 4.2625000000000995e-05}, {'diff': 4.327800000000076e-05}, {'diff': 4.247199999999826e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:56:01.982" endtime="20201030 15:56:01.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:01.989" level="INFO">${ACCURACY} = {'diff': [4.347200000000273e-05, 4.325000000000162e-05, 4.266600000000023e-05, 4.2625000000000995e-05, 4.327800000000076e-05, 4.247199999999826e-05, 4.2874999999997776e-05, 4.302800000000051e-05, 4.30...</msg>
<status status="PASS" starttime="20201030 15:56:01.986" endtime="20201030 15:56:01.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.994" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 15:56:01.993" endtime="20201030 15:56:01.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.999" level="INFO">VALUE: [4.347200000000273e-05, 4.325000000000162e-05, 4.266600000000023e-05, 4.2625000000000995e-05, 4.327800000000076e-05, 4.247199999999826e-05, 4.2874999999997776e-05, 4.302800000000051e-05, 4.302800000000051e-05, 4.2889000000000815e-05, 4.252800000000001e-05, 4.2416999999999455e-05, 4.2680999999999275e-05, 4.3139000000001065e-05, 4.2889000000000815e-05, 4.248599999999783e-05, 4.2666999999999705e-05, 4.273599999999808e-05, 4.329200000000033e-05, 4.294399999999962e-05, 4.2930999999999525e-05, 4.250000000000087e-05, 4.2860999999998206e-05, 4.2430999999999025e-05, 4.284800000000158e-05, 4.274999999999765e-05, 4.2639000000000565e-05, 4.2709000000001884e-05, 4.316599999999726e-05, 4.2958999999998665e-05, 4.28059999999994e-05, 4.2653000000000135e-05, 4.26799999999998e-05, 4.2624999999997526e-05, 4.2638999999997096e-05, 4.2930999999999525e-05, 4.2374999999997276e-05, 4.269400000000284e-05, 4.2554999999999676e-05, 4.247199999999826e-05, 4.265200000000066e-05, 4.3068999999999746e-05, 4.24999999999974e-05, 4.3318999999999996e-05, 4.2375000000000745e-05, 4.295800000000266e-05, 4.300000000000137e-05, 4.295800000000266e-05, 4.3139000000001065e-05, 4.306999999999922e-05]</msg>
<status status="PASS" starttime="20201030 15:56:01.995" endtime="20201030 15:56:02.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.990" endtime="20201030 15:56:02.001"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:02.005" endtime="20201030 15:56:02.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.003" endtime="20201030 15:56:02.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.002" endtime="20201030 15:56:02.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.641" endtime="20201030 15:56:02.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.640" endtime="20201030 15:56:02.025"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.034" endtime="20201030 15:56:02.051"></status>
</kw>
<msg timestamp="20201030 15:56:02.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.032" endtime="20201030 15:56:02.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.052" endtime="20201030 15:56:02.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.055" endtime="20201030 15:56:02.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.030" endtime="20201030 15:56:02.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.028" endtime="20201030 15:56:02.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.063" endtime="20201030 15:56:02.348"></status>
</kw>
<msg timestamp="20201030 15:56:02.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021668681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021713028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:02.062" endtime="20201030 15:56:02.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021668681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021713028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:02.352" endtime="20201030 15:56:02.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.360" endtime="20201030 15:56:02.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.059" endtime="20201030 15:56:02.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.058" endtime="20201030 15:56:02.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:02.367" level="INFO">${RESULT} = [{'diff': 4.4347000000000136e-05}, {'diff': 4.3582999999999816e-05}, {'diff': 4.376400000000169e-05}, {'diff': 4.3681000000000275e-05}, {'diff': 4.348599999999883e-05}, {'diff': 4.3945000000000095e-05...</msg>
<status status="PASS" starttime="20201030 15:56:02.364" endtime="20201030 15:56:02.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:02.375" level="INFO">${ACCURACY} = {'diff': [4.4347000000000136e-05, 4.3582999999999816e-05, 4.376400000000169e-05, 4.3681000000000275e-05, 4.348599999999883e-05, 4.3945000000000095e-05, 4.429200000000133e-05, 4.3903000000001385e-05, 4...</msg>
<status status="PASS" starttime="20201030 15:56:02.368" endtime="20201030 15:56:02.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.380" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 15:56:02.379" endtime="20201030 15:56:02.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.383" level="INFO">VALUE: [4.4347000000000136e-05, 4.3582999999999816e-05, 4.376400000000169e-05, 4.3681000000000275e-05, 4.348599999999883e-05, 4.3945000000000095e-05, 4.429200000000133e-05, 4.3903000000001385e-05, 4.356999999999972e-05, 4.404199999999761e-05, 4.398599999999933e-05, 4.4347000000000136e-05, 4.41800000000013e-05, 4.397199999999976e-05, 4.427699999999882e-05, 4.379199999999736e-05, 4.342999999999708e-05, 4.3541000000001107e-05, 4.4125000000002496e-05, 4.3888999999998346e-05, 4.343000000000055e-05, 4.4055000000001177e-05, 4.395800000000019e-05, 4.401399999999847e-05, 4.4096999999999886e-05, 4.347199999999926e-05, 4.379200000000083e-05, 4.3611000000002426e-05, 4.3931000000000525e-05, 4.3888999999998346e-05, 4.377800000000126e-05, 4.404199999999761e-05, 4.401399999999847e-05, 4.402800000000151e-05, 4.429200000000133e-05, 4.3681000000000275e-05, 4.4180999999997306e-05, 4.3431000000000025e-05, 4.4347000000000136e-05, 4.407000000000022e-05, 4.394399999999715e-05, 4.38060000000004e-05, 4.3639000000001565e-05, 4.3360999999998706e-05, 4.355600000000015e-05, 4.3737000000002024e-05, 4.383399999999954e-05, 4.3445000000003064e-05, 4.4096999999999886e-05, 4.354099999999764e-05]</msg>
<status status="PASS" starttime="20201030 15:56:02.381" endtime="20201030 15:56:02.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.376" endtime="20201030 15:56:02.384"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:02.388" endtime="20201030 15:56:02.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.387" endtime="20201030 15:56:02.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.385" endtime="20201030 15:56:02.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.026" endtime="20201030 15:56:02.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.026" endtime="20201030 15:56:02.409"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.418" endtime="20201030 15:56:02.434"></status>
</kw>
<msg timestamp="20201030 15:56:02.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.416" endtime="20201030 15:56:02.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.436" endtime="20201030 15:56:02.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.438" endtime="20201030 15:56:02.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.414" endtime="20201030 15:56:02.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.412" endtime="20201030 15:56:02.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.448" endtime="20201030 15:56:02.781"></status>
</kw>
<msg timestamp="20201030 15:56:02.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022151375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022196306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:02.446" endtime="20201030 15:56:02.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022151375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022196306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:02.786" endtime="20201030 15:56:02.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.794" endtime="20201030 15:56:02.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.443" endtime="20201030 15:56:02.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.442" endtime="20201030 15:56:02.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:02.801" level="INFO">${RESULT} = [{'diff': 4.4930999999998056e-05}, {'diff': 4.455600000000115e-05}, {'diff': 4.5152999999999166e-05}, {'diff': 4.473600000000008e-05}, {'diff': 4.477799999999879e-05}, {'diff': 4.470800000000094e-05},...</msg>
<status status="PASS" starttime="20201030 15:56:02.797" endtime="20201030 15:56:02.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:02.805" level="INFO">${ACCURACY} = {'diff': [4.4930999999998056e-05, 4.455600000000115e-05, 4.5152999999999166e-05, 4.473600000000008e-05, 4.477799999999879e-05, 4.470800000000094e-05, 4.4695000000000845e-05, 4.4431000000001025e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:56:02.802" endtime="20201030 15:56:02.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.810" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 15:56:02.809" endtime="20201030 15:56:02.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.812" level="INFO">VALUE: [4.4930999999998056e-05, 4.455600000000115e-05, 4.5152999999999166e-05, 4.473600000000008e-05, 4.477799999999879e-05, 4.470800000000094e-05, 4.4695000000000845e-05, 4.4431000000001025e-05, 4.504199999999861e-05, 4.504199999999861e-05, 4.525000000000015e-05, 4.484800000000011e-05, 4.4874999999999776e-05, 4.48060000000014e-05, 4.4652999999998666e-05, 4.498600000000033e-05, 4.483399999999707e-05, 4.451300000000297e-05, 4.509800000000036e-05, 4.4861000000000206e-05, 4.4597000000000386e-05, 4.531899999999853e-05, 4.515199999999969e-05, 4.4597000000000386e-05, 4.44999999999994e-05, 4.476399999999922e-05, 4.495800000000119e-05, 4.454100000000211e-05, 4.472200000000051e-05, 4.522199999999754e-05, 4.4653000000002135e-05, 4.517999999999883e-05, 4.4722999999999985e-05, 4.46939999999979e-05, 4.445800000000069e-05, 4.534800000000061e-05, 4.5125000000000026e-05, 4.476399999999922e-05, 4.4624999999999526e-05, 4.527800000000276e-05, 4.4888999999999346e-05, 4.457000000000072e-05, 4.5069000000001747e-05, 4.4472999999999735e-05, 4.4638999999999096e-05, 4.522199999999754e-05, 4.4417000000001455e-05, 4.5237000000000055e-05, 4.4944999999997626e-05, 4.474999999999965e-05]</msg>
<status status="PASS" starttime="20201030 15:56:02.811" endtime="20201030 15:56:02.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.806" endtime="20201030 15:56:02.814"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:02.818" endtime="20201030 15:56:02.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.816" endtime="20201030 15:56:02.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.815" endtime="20201030 15:56:02.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.410" endtime="20201030 15:56:02.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.409" endtime="20201030 15:56:02.838"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.847" endtime="20201030 15:56:02.865"></status>
</kw>
<msg timestamp="20201030 15:56:02.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.846" endtime="20201030 15:56:02.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.867" endtime="20201030 15:56:02.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.869" endtime="20201030 15:56:02.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.843" endtime="20201030 15:56:02.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.841" endtime="20201030 15:56:02.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.879" endtime="20201030 15:56:03.165"></status>
</kw>
<msg timestamp="20201030 15:56:03.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023353819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023399986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:02.877" endtime="20201030 15:56:03.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023353819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023399986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:03.169" endtime="20201030 15:56:03.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.178" endtime="20201030 15:56:03.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.874" endtime="20201030 15:56:03.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.872" endtime="20201030 15:56:03.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:03.185" level="INFO">${RESULT} = [{'diff': 4.6166999999999736e-05}, {'diff': 4.577800000000326e-05}, {'diff': 4.5847000000001636e-05}, {'diff': 4.6166999999999736e-05}, {'diff': 4.6125000000001026e-05}, {'diff': 4.629199999999986e-05...</msg>
<status status="PASS" starttime="20201030 15:56:03.181" endtime="20201030 15:56:03.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:03.189" level="INFO">${ACCURACY} = {'diff': [4.6166999999999736e-05, 4.577800000000326e-05, 4.5847000000001636e-05, 4.6166999999999736e-05, 4.6125000000001026e-05, 4.629199999999986e-05, 4.545800000000169e-05, 4.624999999999768e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:56:03.186" endtime="20201030 15:56:03.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.194" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 15:56:03.192" endtime="20201030 15:56:03.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.196" level="INFO">VALUE: [4.6166999999999736e-05, 4.577800000000326e-05, 4.5847000000001636e-05, 4.6166999999999736e-05, 4.6125000000001026e-05, 4.629199999999986e-05, 4.545800000000169e-05, 4.624999999999768e-05, 4.5875000000000776e-05, 4.608299999999885e-05, 4.5723000000000985e-05, 4.5666999999999236e-05, 4.580599999999893e-05, 4.6139000000000596e-05, 4.575000000000065e-05, 4.604199999999961e-05, 4.605600000000265e-05, 4.5666999999999236e-05, 4.6180999999999306e-05, 4.555600000000215e-05, 4.583400000000154e-05, 4.5737000000000555e-05, 4.58060000000024e-05, 4.579099999999989e-05, 4.598600000000133e-05, 4.588800000000087e-05, 4.584699999999817e-05, 4.616600000000026e-05, 4.58329999999986e-05, 4.544399999999865e-05, 4.580599999999893e-05, 4.625000000000115e-05, 4.5639000000000096e-05, 4.623600000000158e-05, 4.601400000000047e-05, 4.594400000000262e-05, 4.5430999999998556e-05, 4.60000000000009e-05, 4.606999999999875e-05, 4.558299999999835e-05, 4.5625000000000526e-05, 4.5695000000001845e-05, 4.5388999999999846e-05, 4.557000000000172e-05, 4.5694999999998376e-05, 4.6125000000001026e-05, 4.5959000000001665e-05, 4.5916999999999486e-05, 4.558399999999782e-05, 4.5652999999999666e-05]</msg>
<status status="PASS" starttime="20201030 15:56:03.195" endtime="20201030 15:56:03.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.190" endtime="20201030 15:56:03.198"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:03.202" endtime="20201030 15:56:03.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.201" endtime="20201030 15:56:03.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.199" endtime="20201030 15:56:03.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.839" endtime="20201030 15:56:03.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.839" endtime="20201030 15:56:03.223"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.232" endtime="20201030 15:56:03.249"></status>
</kw>
<msg timestamp="20201030 15:56:03.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:03.230" endtime="20201030 15:56:03.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:03.250" endtime="20201030 15:56:03.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.253" endtime="20201030 15:56:03.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.228" endtime="20201030 15:56:03.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.226" endtime="20201030 15:56:03.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.262" endtime="20201030 15:56:03.548"></status>
</kw>
<msg timestamp="20201030 15:56:03.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022393819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022441097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:03.261" endtime="20201030 15:56:03.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022393819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022441097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:03.552" endtime="20201030 15:56:03.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.561" endtime="20201030 15:56:03.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.258" endtime="20201030 15:56:03.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.256" endtime="20201030 15:56:03.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:03.568" level="INFO">${RESULT} = [{'diff': 4.727800000000129e-05}, {'diff': 4.729100000000139e-05}, {'diff': 4.722199999999954e-05}, {'diff': 4.670799999999947e-05}, {'diff': 4.677800000000079e-05}, {'diff': 4.70000000000019e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:03.564" endtime="20201030 15:56:03.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:03.573" level="INFO">${ACCURACY} = {'diff': [4.727800000000129e-05, 4.729100000000139e-05, 4.722199999999954e-05, 4.670799999999947e-05, 4.677800000000079e-05, 4.70000000000019e-05, 4.706900000000028e-05, 4.672199999999904e-05, 4.67779...</msg>
<status status="PASS" starttime="20201030 15:56:03.569" endtime="20201030 15:56:03.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.577" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 15:56:03.576" endtime="20201030 15:56:03.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.580" level="INFO">VALUE: [4.727800000000129e-05, 4.729100000000139e-05, 4.722199999999954e-05, 4.670799999999947e-05, 4.677800000000079e-05, 4.70000000000019e-05, 4.706900000000028e-05, 4.672199999999904e-05, 4.677799999999732e-05, 4.726399999999825e-05, 4.713899999999813e-05, 4.7181000000000306e-05, 4.705600000000018e-05, 4.6403000000000416e-05, 4.6917000000000486e-05, 4.706999999999975e-05, 4.6917000000000486e-05, 4.651400000000097e-05, 4.6361000000001706e-05, 4.68199999999995e-05, 4.6667000000000236e-05, 4.6430999999999556e-05, 4.706900000000028e-05, 4.6889000000001346e-05, 4.7111000000002456e-05, 4.711099999999899e-05, 4.665200000000119e-05, 4.645799999999922e-05, 4.715199999999822e-05, 4.66939999999999e-05, 4.705500000000071e-05, 4.712499999999856e-05, 4.73330000000001e-05, 4.658299999999935e-05, 4.674999999999818e-05, 4.697200000000276e-05, 4.677800000000079e-05, 4.680500000000046e-05, 4.6931000000000056e-05, 4.66939999999999e-05, 4.71529999999977e-05, 4.7125000000002026e-05, 4.686099999999874e-05, 4.670799999999947e-05, 4.7181000000000306e-05, 4.6472999999998266e-05, 4.6653000000000666e-05, 4.676400000000122e-05, 4.705500000000071e-05, 4.6987000000001805e-05]</msg>
<status status="PASS" starttime="20201030 15:56:03.579" endtime="20201030 15:56:03.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.574" endtime="20201030 15:56:03.581"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:03.585" endtime="20201030 15:56:03.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.584" endtime="20201030 15:56:03.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.582" endtime="20201030 15:56:03.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.224" endtime="20201030 15:56:03.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.223" endtime="20201030 15:56:03.606"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.615" endtime="20201030 15:56:03.632"></status>
</kw>
<msg timestamp="20201030 15:56:03.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:03.614" endtime="20201030 15:56:03.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:03.634" endtime="20201030 15:56:03.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.636" endtime="20201030 15:56:03.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.611" endtime="20201030 15:56:03.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.609" endtime="20201030 15:56:03.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.646" endtime="20201030 15:56:03.933"></status>
</kw>
<msg timestamp="20201030 15:56:03.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022773194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022821097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:03.644" endtime="20201030 15:56:03.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022773194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022821097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:03.938" endtime="20201030 15:56:03.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.946" endtime="20201030 15:56:03.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.641" endtime="20201030 15:56:03.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.640" endtime="20201030 15:56:03.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:03.953" level="INFO">${RESULT} = [{'diff': 4.790299999999845e-05}, {'diff': 4.824999999999968e-05}, {'diff': 4.774999999999918e-05}, {'diff': 4.791699999999802e-05}, {'diff': 4.824999999999968e-05}, {'diff': 4.798599999999986e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:03.950" endtime="20201030 15:56:03.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:03.957" level="INFO">${ACCURACY} = {'diff': [4.790299999999845e-05, 4.824999999999968e-05, 4.774999999999918e-05, 4.791699999999802e-05, 4.824999999999968e-05, 4.798599999999986e-05, 4.790299999999845e-05, 4.758300000000035e-05, 4.7847...</msg>
<status status="PASS" starttime="20201030 15:56:03.954" endtime="20201030 15:56:03.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.962" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 15:56:03.961" endtime="20201030 15:56:03.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.965" level="INFO">VALUE: [4.790299999999845e-05, 4.824999999999968e-05, 4.774999999999918e-05, 4.791699999999802e-05, 4.824999999999968e-05, 4.798599999999986e-05, 4.790299999999845e-05, 4.758300000000035e-05, 4.784700000000017e-05, 4.744400000000065e-05, 4.815199999999922e-05, 4.8209000000000446e-05, 4.762499999999906e-05, 4.836100000000024e-05, 4.8181000000001306e-05, 4.784799999999964e-05, 4.829200000000186e-05, 4.787499999999931e-05, 4.802799999999857e-05, 4.777799999999832e-05, 4.75139999999985e-05, 4.7889000000002346e-05, 4.755500000000121e-05, 4.768099999999734e-05, 4.773599999999961e-05, 4.824999999999968e-05, 4.741600000000151e-05, 4.788899999999888e-05, 4.819399999999793e-05, 4.813899999999913e-05, 4.81940000000014e-05, 4.759699999999992e-05, 4.751400000000197e-05, 4.772200000000004e-05, 4.780499999999799e-05, 4.75139999999985e-05, 4.829200000000186e-05, 4.820800000000097e-05, 4.748600000000283e-05, 4.761099999999949e-05, 4.747199999999979e-05, 4.829199999999839e-05, 4.8181000000001306e-05, 4.772200000000004e-05, 4.7431000000000556e-05, 4.827799999999882e-05, 4.748599999999936e-05, 4.7459000000003165e-05, 4.7459000000003165e-05, 4.808399999999685e-05]</msg>
<status status="PASS" starttime="20201030 15:56:03.963" endtime="20201030 15:56:03.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.958" endtime="20201030 15:56:03.966"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:03.970" endtime="20201030 15:56:03.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.968" endtime="20201030 15:56:03.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.967" endtime="20201030 15:56:03.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.607" endtime="20201030 15:56:03.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.606" endtime="20201030 15:56:03.990"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.999" endtime="20201030 15:56:04.017"></status>
</kw>
<msg timestamp="20201030 15:56:04.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:03.998" endtime="20201030 15:56:04.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:04.019" endtime="20201030 15:56:04.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.021" endtime="20201030 15:56:04.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.995" endtime="20201030 15:56:04.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.993" endtime="20201030 15:56:04.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.031" endtime="20201030 15:56:04.317"></status>
</kw>
<msg timestamp="20201030 15:56:04.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023651333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023699986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:04.029" endtime="20201030 15:56:04.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023651333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023699986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:04.321" endtime="20201030 15:56:04.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.330" endtime="20201030 15:56:04.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.026" endtime="20201030 15:56:04.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.024" endtime="20201030 15:56:04.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:04.336" level="INFO">${RESULT} = [{'diff': 4.86529999999992e-05}, {'diff': 4.880600000000193e-05}, {'diff': 4.847200000000079e-05}, {'diff': 4.829199999999839e-05}, {'diff': 4.8653000000002666e-05}, {'diff': 4.909699999999795e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:04.333" endtime="20201030 15:56:04.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:04.341" level="INFO">${ACCURACY} = {'diff': [4.86529999999992e-05, 4.880600000000193e-05, 4.847200000000079e-05, 4.829199999999839e-05, 4.8653000000002666e-05, 4.909699999999795e-05, 4.906999999999828e-05, 4.9320000000002e-05, 4.894500...</msg>
<status status="PASS" starttime="20201030 15:56:04.337" endtime="20201030 15:56:04.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.345" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 15:56:04.344" endtime="20201030 15:56:04.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.348" level="INFO">VALUE: [4.86529999999992e-05, 4.880600000000193e-05, 4.847200000000079e-05, 4.829199999999839e-05, 4.8653000000002666e-05, 4.909699999999795e-05, 4.906999999999828e-05, 4.9320000000002e-05, 4.8945000000001626e-05, 4.8459000000000696e-05, 4.859699999999745e-05, 4.85139999999995e-05, 4.854199999999864e-05, 4.881999999999803e-05, 4.898600000000086e-05, 4.8444999999997657e-05, 4.898600000000086e-05, 4.92079999999985e-05, 4.922199999999807e-05, 4.907000000000175e-05, 4.917999999999936e-05, 4.872199999999757e-05, 4.883299999999813e-05, 4.858300000000135e-05, 4.877699999999985e-05, 4.930599999999896e-05, 4.92079999999985e-05, 4.859700000000092e-05, 4.848600000000036e-05, 4.895799999999825e-05, 4.85139999999995e-05, 4.8681000000001806e-05, 4.890299999999945e-05, 4.936100000000124e-05, 4.834700000000067e-05, 4.855599999999821e-05, 4.890299999999945e-05, 4.88339999999976e-05, 4.843099999999809e-05, 4.857000000000125e-05, 4.857000000000125e-05, 4.859700000000092e-05, 4.848600000000036e-05, 4.905599999999871e-05, 4.881999999999803e-05, 4.898600000000086e-05, 4.8472999999996796e-05, 4.9209000000001446e-05, 4.90270000000001e-05, 4.859800000000039e-05]</msg>
<status status="PASS" starttime="20201030 15:56:04.347" endtime="20201030 15:56:04.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.342" endtime="20201030 15:56:04.350"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:04.354" endtime="20201030 15:56:04.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.352" endtime="20201030 15:56:04.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.351" endtime="20201030 15:56:04.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.991" endtime="20201030 15:56:04.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.991" endtime="20201030 15:56:04.375"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.384" endtime="20201030 15:56:04.401"></status>
</kw>
<msg timestamp="20201030 15:56:04.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:04.382" endtime="20201030 15:56:04.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:04.402" endtime="20201030 15:56:04.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.405" endtime="20201030 15:56:04.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.380" endtime="20201030 15:56:04.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.378" endtime="20201030 15:56:04.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.416" endtime="20201030 15:56:04.701"></status>
</kw>
<msg timestamp="20201030 15:56:04.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022495653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022546069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:04.414" endtime="20201030 15:56:04.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022495653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022546069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:04.705" endtime="20201030 15:56:04.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.714" endtime="20201030 15:56:04.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.411" endtime="20201030 15:56:04.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.409" endtime="20201030 15:56:04.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:04.720" level="INFO">${RESULT} = [{'diff': 5.0415999999997574e-05}, {'diff': 4.979100000000042e-05}, {'diff': 5.018000000000036e-05}, {'diff': 4.975000000000118e-05}, {'diff': 4.958299999999888e-05}, {'diff': 4.966699999999977e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:56:04.717" endtime="20201030 15:56:04.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:04.726" level="INFO">${ACCURACY} = {'diff': [5.0415999999997574e-05, 4.979100000000042e-05, 5.018000000000036e-05, 4.975000000000118e-05, 4.958299999999888e-05, 4.966699999999977e-05, 5.02079999999995e-05, 4.945800000000222e-05, 4.9653...</msg>
<status status="PASS" starttime="20201030 15:56:04.721" endtime="20201030 15:56:04.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.730" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 15:56:04.729" endtime="20201030 15:56:04.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.733" level="INFO">VALUE: [5.0415999999997574e-05, 4.979100000000042e-05, 5.018000000000036e-05, 4.975000000000118e-05, 4.958299999999888e-05, 4.966699999999977e-05, 5.02079999999995e-05, 4.945800000000222e-05, 4.96530000000002e-05, 5.031999999999953e-05, 4.983299999999913e-05, 4.959699999999845e-05, 4.993099999999959e-05, 4.9707999999999e-05, 4.950000000000093e-05, 4.979199999999989e-05, 4.962500000000106e-05, 5.027800000000082e-05, 4.961100000000149e-05, 4.954100000000017e-05, 4.9681000000002806e-05, 4.976400000000075e-05, 4.9707999999999e-05, 4.980600000000293e-05, 4.959800000000139e-05, 4.957000000000225e-05, 5.029200000000039e-05, 5.011200000000146e-05, 4.940200000000047e-05, 5.009800000000189e-05, 4.962500000000106e-05, 5.008299999999938e-05, 4.970800000000247e-05, 4.947200000000179e-05, 5.0014000000001e-05, 4.963900000000063e-05, 4.961100000000149e-05, 4.977800000000032e-05, 5.030500000000049e-05, 4.942999999999961e-05, 4.947199999999832e-05, 4.983299999999913e-05, 4.976400000000075e-05, 4.973600000000161e-05, 5.024999999999821e-05, 4.945799999999875e-05, 4.981899999999956e-05, 4.987500000000131e-05, 4.961099999999802e-05, 5.019499999999941e-05]</msg>
<status status="PASS" starttime="20201030 15:56:04.731" endtime="20201030 15:56:04.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.727" endtime="20201030 15:56:04.734"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:04.738" endtime="20201030 15:56:04.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.737" endtime="20201030 15:56:04.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.735" endtime="20201030 15:56:04.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.376" endtime="20201030 15:56:04.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.375" endtime="20201030 15:56:04.759"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.768" endtime="20201030 15:56:04.785"></status>
</kw>
<msg timestamp="20201030 15:56:04.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:04.767" endtime="20201030 15:56:04.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:04.787" endtime="20201030 15:56:04.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.789" endtime="20201030 15:56:04.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.764" endtime="20201030 15:56:04.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.762" endtime="20201030 15:56:04.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.799" endtime="20201030 15:56:05.087"></status>
</kw>
<msg timestamp="20201030 15:56:05.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022485153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022536042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:04.797" endtime="20201030 15:56:05.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022485153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022536042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:05.092" endtime="20201030 15:56:05.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.100" endtime="20201030 15:56:05.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.794" endtime="20201030 15:56:05.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.792" endtime="20201030 15:56:05.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:05.107" level="INFO">${RESULT} = [{'diff': 5.088899999999841e-05}, {'diff': 5.051299999999856e-05}, {'diff': 5.06530000000012e-05}, {'diff': 5.040300000000095e-05}, {'diff': 5.130600000000096e-05}, {'diff': 5.119500000000041e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:05.104" endtime="20201030 15:56:05.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:05.111" level="INFO">${ACCURACY} = {'diff': [5.088899999999841e-05, 5.051299999999856e-05, 5.06530000000012e-05, 5.040300000000095e-05, 5.130600000000096e-05, 5.119500000000041e-05, 5.13340000000001e-05, 5.097199999999982e-05, 5.118000...</msg>
<status status="PASS" starttime="20201030 15:56:05.108" endtime="20201030 15:56:05.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.116" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 15:56:05.115" endtime="20201030 15:56:05.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.119" level="INFO">VALUE: [5.088899999999841e-05, 5.051299999999856e-05, 5.06530000000012e-05, 5.040300000000095e-05, 5.130600000000096e-05, 5.119500000000041e-05, 5.13340000000001e-05, 5.097199999999982e-05, 5.118000000000136e-05, 5.133300000000063e-05, 5.045799999999975e-05, 5.097199999999982e-05, 5.111100000000299e-05, 5.08469999999997e-05, 5.066700000000077e-05, 5.093100000000059e-05, 5.087500000000231e-05, 5.048600000000236e-05, 5.091699999999755e-05, 5.129200000000139e-05, 5.076400000000175e-05, 5.08469999999997e-05, 5.074999999999871e-05, 5.127799999999835e-05, 5.083300000000013e-05, 5.094500000000016e-05, 5.124999999999921e-05, 5.063899999999816e-05, 5.113899999999866e-05, 5.037499999999834e-05, 5.055600000000021e-05, 5.124999999999921e-05, 5.077800000000132e-05, 5.056999999999978e-05, 5.079200000000089e-05, 5.132000000000053e-05, 5.079100000000142e-05, 5.079100000000142e-05, 5.079100000000142e-05, 5.059699999999945e-05, 5.0679999999997394e-05, 5.13470000000002e-05, 5.098599999999939e-05, 5.044400000000018e-05, 5.123599999999964e-05, 5.118000000000136e-05, 5.095800000000025e-05, 5.087499999999884e-05, 5.054200000000064e-05, 5.116700000000127e-05]</msg>
<status status="PASS" starttime="20201030 15:56:05.117" endtime="20201030 15:56:05.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.112" endtime="20201030 15:56:05.120"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:05.124" endtime="20201030 15:56:05.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.122" endtime="20201030 15:56:05.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.121" endtime="20201030 15:56:05.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.760" endtime="20201030 15:56:05.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.759" endtime="20201030 15:56:05.146"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.162" endtime="20201030 15:56:05.181"></status>
</kw>
<msg timestamp="20201030 15:56:05.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.159" endtime="20201030 15:56:05.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.184" endtime="20201030 15:56:05.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.188" endtime="20201030 15:56:05.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.154" endtime="20201030 15:56:05.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.151" endtime="20201030 15:56:05.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.204" endtime="20201030 15:56:05.494"></status>
</kw>
<msg timestamp="20201030 15:56:05.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033000542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033052292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:05.202" endtime="20201030 15:56:05.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033000542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033052292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:05.499" endtime="20201030 15:56:05.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.508" endtime="20201030 15:56:05.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.197" endtime="20201030 15:56:05.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.194" endtime="20201030 15:56:05.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:05.515" level="INFO">${RESULT} = [{'diff': 5.1749999999996243e-05}, {'diff': 5.138899999999891e-05}, {'diff': 5.2209000000004446e-05}, {'diff': 5.161100000000002e-05}, {'diff': 5.191699999999855e-05}, {'diff': 5.134799999999967e-05},...</msg>
<status status="PASS" starttime="20201030 15:56:05.511" endtime="20201030 15:56:05.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:05.519" level="INFO">${ACCURACY} = {'diff': [5.1749999999996243e-05, 5.138899999999891e-05, 5.2209000000004446e-05, 5.161100000000002e-05, 5.191699999999855e-05, 5.134799999999967e-05, 5.205600000000171e-05, 5.208300000000138e-05, 5.19...</msg>
<status status="PASS" starttime="20201030 15:56:05.516" endtime="20201030 15:56:05.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.524" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 15:56:05.523" endtime="20201030 15:56:05.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.530" level="INFO">VALUE: [5.1749999999996243e-05, 5.138899999999891e-05, 5.2209000000004446e-05, 5.161100000000002e-05, 5.191699999999855e-05, 5.134799999999967e-05, 5.205600000000171e-05, 5.208300000000138e-05, 5.1957999999997784e-05, 5.201399999999606e-05, 5.230500000000249e-05, 5.1985999999996924e-05, 5.205500000000224e-05, 5.2014000000003e-05, 5.1957999999997784e-05, 5.158300000000088e-05, 5.204100000000267e-05, 5.205599999999477e-05, 5.191699999999855e-05, 5.165299999999873e-05, 5.236100000000077e-05, 5.1443999999997714e-05, 5.237500000000034e-05, 5.138899999999891e-05, 5.1499999999995993e-05, 5.222200000000454e-05, 5.21669999999988e-05, 5.2235999999997174e-05, 5.205600000000171e-05, 5.1973000000003766e-05, 5.186199999999974e-05, 5.158399999999341e-05, 5.162499999999959e-05, 5.197299999999683e-05, 5.158300000000088e-05, 5.182000000000103e-05, 5.172200000000404e-05, 5.1443999999997714e-05, 5.208300000000138e-05, 5.172200000000404e-05, 5.1443999999997714e-05, 5.2165999999999324e-05, 5.225000000000368e-05, 5.1929999999998644e-05, 5.187499999999984e-05, 5.168000000000533e-05, 5.1693999999997964e-05, 5.2014000000003e-05, 5.161100000000002e-05, 5.183300000000113e-05]</msg>
<status status="PASS" starttime="20201030 15:56:05.525" endtime="20201030 15:56:05.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.520" endtime="20201030 15:56:05.531"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:05.535" endtime="20201030 15:56:05.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.534" endtime="20201030 15:56:05.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.532" endtime="20201030 15:56:05.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.148" endtime="20201030 15:56:05.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.147" endtime="20201030 15:56:05.556"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.565" endtime="20201030 15:56:05.582"></status>
</kw>
<msg timestamp="20201030 15:56:05.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.564" endtime="20201030 15:56:05.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.584" endtime="20201030 15:56:05.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.587" endtime="20201030 15:56:05.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.561" endtime="20201030 15:56:05.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.559" endtime="20201030 15:56:05.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.596" endtime="20201030 15:56:05.883"></status>
</kw>
<msg timestamp="20201030 15:56:05.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02252525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022578625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:05.595" endtime="20201030 15:56:05.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02252525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022578625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:05.887" endtime="20201030 15:56:05.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.896" endtime="20201030 15:56:05.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.592" endtime="20201030 15:56:05.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.590" endtime="20201030 15:56:05.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:05.903" level="INFO">${RESULT} = [{'diff': 5.337500000000134e-05}, {'diff': 5.2999999999997494e-05}, {'diff': 5.255499999999927e-05}, {'diff': 5.2957999999998784e-05}, {'diff': 5.2721999999998104e-05}, {'diff': 5.276400000000028e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:05.899" endtime="20201030 15:56:05.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:05.954" level="INFO">${ACCURACY} = {'diff': [5.337500000000134e-05, 5.2999999999997494e-05, 5.255499999999927e-05, 5.2957999999998784e-05, 5.2721999999998104e-05, 5.276400000000028e-05, 5.262500000000059e-05, 5.3249999999997744e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:56:05.904" endtime="20201030 15:56:05.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.959" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 15:56:05.958" endtime="20201030 15:56:05.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.961" level="INFO">VALUE: [5.337500000000134e-05, 5.2999999999997494e-05, 5.255499999999927e-05, 5.2957999999998784e-05, 5.2721999999998104e-05, 5.276400000000028e-05, 5.262500000000059e-05, 5.3249999999997744e-05, 5.3221999999998604e-05, 5.2971999999998354e-05, 5.23470000000012e-05, 5.2735999999997674e-05, 5.256999999999831e-05, 5.298600000000139e-05, 5.311100000000152e-05, 5.282000000000203e-05, 5.245900000000123e-05, 5.30280000000001e-05, 5.243100000000209e-05, 5.281999999999856e-05, 5.291699999999955e-05, 5.237500000000034e-05, 5.238899999999991e-05, 5.243100000000209e-05, 5.276400000000028e-05, 5.243100000000209e-05, 5.329199999999992e-05, 5.288900000000041e-05, 5.280499999999952e-05, 5.273600000000114e-05, 5.323600000000164e-05, 5.305499999999977e-05, 5.2707999999998534e-05, 5.3165999999996855e-05, 5.301400000000053e-05, 5.287500000000084e-05, 5.287500000000084e-05, 5.333299999999916e-05, 5.287500000000084e-05, 5.3193999999999464e-05, 5.331899999999959e-05, 5.309699999999848e-05, 5.288900000000041e-05, 5.262500000000059e-05, 5.288900000000041e-05, 5.258300000000188e-05, 5.276400000000028e-05, 5.295800000000225e-05, 5.263900000000016e-05, 5.236100000000077e-05]</msg>
<status status="PASS" starttime="20201030 15:56:05.960" endtime="20201030 15:56:05.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.955" endtime="20201030 15:56:05.969"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:05.972" endtime="20201030 15:56:05.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.971" endtime="20201030 15:56:05.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.970" endtime="20201030 15:56:05.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.557" endtime="20201030 15:56:05.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.557" endtime="20201030 15:56:05.993"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.002" endtime="20201030 15:56:06.019"></status>
</kw>
<msg timestamp="20201030 15:56:06.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:06.001" endtime="20201030 15:56:06.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:06.020" endtime="20201030 15:56:06.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.023" endtime="20201030 15:56:06.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.998" endtime="20201030 15:56:06.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.996" endtime="20201030 15:56:06.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.032" endtime="20201030 15:56:06.320"></status>
</kw>
<msg timestamp="20201030 15:56:06.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022440597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022494222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:06.031" endtime="20201030 15:56:06.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022440597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022494222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:06.324" endtime="20201030 15:56:06.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.332" endtime="20201030 15:56:06.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.028" endtime="20201030 15:56:06.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.026" endtime="20201030 15:56:06.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:06.338" level="INFO">${RESULT} = [{'diff': 5.362500000000159e-05}, {'diff': 5.406900000000034e-05}, {'diff': 5.3708000000003e-05}, {'diff': 5.404200000000067e-05}, {'diff': 5.3457999999999284e-05}, {'diff': 5.4208000000000034e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:06.335" endtime="20201030 15:56:06.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:06.343" level="INFO">${ACCURACY} = {'diff': [5.362500000000159e-05, 5.406900000000034e-05, 5.3708000000003e-05, 5.404200000000067e-05, 5.3457999999999284e-05, 5.4208000000000034e-05, 5.379200000000042e-05, 5.3444000000003183e-05, 5.382...</msg>
<status status="PASS" starttime="20201030 15:56:06.339" endtime="20201030 15:56:06.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.348" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 15:56:06.346" endtime="20201030 15:56:06.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.351" level="INFO">VALUE: [5.362500000000159e-05, 5.406900000000034e-05, 5.3708000000003e-05, 5.404200000000067e-05, 5.3457999999999284e-05, 5.4208000000000034e-05, 5.379200000000042e-05, 5.3444000000003183e-05, 5.382000000000303e-05, 5.356999999999931e-05, 5.338900000000091e-05, 5.341700000000005e-05, 5.406999999999981e-05, 5.433399999999963e-05, 5.404200000000067e-05, 5.409799999999895e-05, 5.386100000000227e-05, 5.4208000000000034e-05, 5.4013999999998064e-05, 5.400000000000196e-05, 5.3971999999999354e-05, 5.384699999999923e-05, 5.373600000000214e-05, 5.429100000000145e-05, 5.386100000000227e-05, 5.3666000000000824e-05, 5.38609999999988e-05, 5.383299999999966e-05, 5.3499999999997994e-05, 5.341700000000005e-05, 5.4221999999999604e-05, 5.363899999999769e-05, 5.354200000000017e-05, 5.430599999999702e-05, 5.431900000000059e-05, 5.36670000000003e-05, 5.394499999999969e-05, 5.40280000000011e-05, 5.420899999999951e-05, 5.391700000000055e-05, 5.361099999999855e-05, 5.365300000000073e-05, 5.40280000000011e-05, 5.390300000000098e-05, 5.4027999999997633e-05, 5.351400000000103e-05, 5.386100000000227e-05, 5.358399999999888e-05, 5.3471999999998854e-05, 5.3666000000000824e-05]</msg>
<status status="PASS" starttime="20201030 15:56:06.349" endtime="20201030 15:56:06.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.344" endtime="20201030 15:56:06.352"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:06.356" endtime="20201030 15:56:06.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.355" endtime="20201030 15:56:06.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.353" endtime="20201030 15:56:06.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.994" endtime="20201030 15:56:06.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.994" endtime="20201030 15:56:06.377"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.386" endtime="20201030 15:56:06.403"></status>
</kw>
<msg timestamp="20201030 15:56:06.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:06.384" endtime="20201030 15:56:06.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:06.405" endtime="20201030 15:56:06.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.407" endtime="20201030 15:56:06.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.382" endtime="20201030 15:56:06.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.379" endtime="20201030 15:56:06.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.416" endtime="20201030 15:56:06.707"></status>
</kw>
<msg timestamp="20201030 15:56:06.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022359208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022414264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:06.415" endtime="20201030 15:56:06.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022359208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022414264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:06.711" endtime="20201030 15:56:06.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.719" endtime="20201030 15:56:06.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.412" endtime="20201030 15:56:06.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.410" endtime="20201030 15:56:06.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:06.726" level="INFO">${RESULT} = [{'diff': 5.505600000000124e-05}, {'diff': 5.529200000000192e-05}, {'diff': 5.508299999999744e-05}, {'diff': 5.468100000000087e-05}, {'diff': 5.462499999999912e-05}, {'diff': 5.51670000000018e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:06.723" endtime="20201030 15:56:06.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:06.731" level="INFO">${ACCURACY} = {'diff': [5.505600000000124e-05, 5.529200000000192e-05, 5.508299999999744e-05, 5.468100000000087e-05, 5.462499999999912e-05, 5.51670000000018e-05, 5.479200000000142e-05, 5.457000000000031e-05, 5.47919...</msg>
<status status="PASS" starttime="20201030 15:56:06.727" endtime="20201030 15:56:06.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.735" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 15:56:06.734" endtime="20201030 15:56:06.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.738" level="INFO">VALUE: [5.505600000000124e-05, 5.529200000000192e-05, 5.508299999999744e-05, 5.468100000000087e-05, 5.462499999999912e-05, 5.51670000000018e-05, 5.479200000000142e-05, 5.457000000000031e-05, 5.4791999999997953e-05, 5.469500000000044e-05, 5.459799999999945e-05, 5.4499999999998994e-05, 5.513899999999919e-05, 5.483300000000066e-05, 5.511100000000005e-05, 5.481899999999762e-05, 5.4722000000000104e-05, 5.5179999999998425e-05, 5.459699999999998e-05, 5.4902000000002504e-05, 5.463900000000216e-05, 5.465300000000173e-05, 5.4957999999997315e-05, 5.4708000000000534e-05, 5.5013999999999064e-05, 5.4513999999998564e-05, 5.5194000000001464e-05, 5.488899999999894e-05, 5.4999999999999494e-05, 5.468100000000087e-05, 5.454099999999823e-05, 5.533299999999769e-05, 5.451400000000203e-05, 5.4722000000000104e-05, 5.4749999999999244e-05, 5.491699999999808e-05, 5.50280000000021e-05, 5.461099999999955e-05, 5.497299999999983e-05, 5.4791999999997953e-05, 5.465299999999826e-05, 5.493100000000112e-05, 5.462499999999912e-05, 5.5249999999999744e-05, 5.451299999999909e-05, 5.50280000000021e-05, 5.5277999999998884e-05, 5.488899999999894e-05, 5.4444000000000714e-05, 5.4665999999998355e-05]</msg>
<status status="PASS" starttime="20201030 15:56:06.736" endtime="20201030 15:56:06.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.731" endtime="20201030 15:56:06.739"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:06.742" endtime="20201030 15:56:06.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.741" endtime="20201030 15:56:06.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.740" endtime="20201030 15:56:06.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.378" endtime="20201030 15:56:06.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.377" endtime="20201030 15:56:06.763"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.772" endtime="20201030 15:56:06.789"></status>
</kw>
<msg timestamp="20201030 15:56:06.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:06.770" endtime="20201030 15:56:06.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:06.790" endtime="20201030 15:56:06.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.793" endtime="20201030 15:56:06.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.768" endtime="20201030 15:56:06.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.766" endtime="20201030 15:56:06.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.801" endtime="20201030 15:56:07.106"></status>
</kw>
<msg timestamp="20201030 15:56:07.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021690722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021746542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:06.800" endtime="20201030 15:56:07.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021690722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021746542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:07.111" endtime="20201030 15:56:07.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.119" endtime="20201030 15:56:07.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.797" endtime="20201030 15:56:07.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.796" endtime="20201030 15:56:07.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:07.125" level="INFO">${RESULT} = [{'diff': 5.582000000000156e-05}, {'diff': 5.583400000000113e-05}, {'diff': 5.5763999999999814e-05}, {'diff': 5.5750000000000244e-05}, {'diff': 5.5472000000000854e-05}, {'diff': 5.591700000000255e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:07.122" endtime="20201030 15:56:07.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:07.129" level="INFO">${ACCURACY} = {'diff': [5.582000000000156e-05, 5.583400000000113e-05, 5.5763999999999814e-05, 5.5750000000000244e-05, 5.5472000000000854e-05, 5.591700000000255e-05, 5.563899999999969e-05, 5.595900000000126e-05, 5.5...</msg>
<status status="PASS" starttime="20201030 15:56:07.126" endtime="20201030 15:56:07.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.134" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 15:56:07.133" endtime="20201030 15:56:07.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.136" level="INFO">VALUE: [5.582000000000156e-05, 5.583400000000113e-05, 5.5763999999999814e-05, 5.5750000000000244e-05, 5.5472000000000854e-05, 5.591700000000255e-05, 5.563899999999969e-05, 5.595900000000126e-05, 5.583400000000113e-05, 5.605600000000224e-05, 5.536099999999683e-05, 5.595899999999779e-05, 5.618100000000237e-05, 5.556899999999837e-05, 5.6221999999998135e-05, 5.5736000000000674e-05, 5.577699999999991e-05, 5.58610000000008e-05, 5.5513999999999564e-05, 5.630499999999955e-05, 5.6000000000000494e-05, 5.5499999999999994e-05, 5.55549999999988e-05, 5.5513999999999564e-05, 5.562499999999665e-05, 5.5444000000001714e-05, 5.568100000000187e-05, 5.591699999999908e-05, 5.593100000000212e-05, 5.619500000000194e-05, 5.540299999999901e-05, 5.6194000000002464e-05, 5.6000000000000494e-05, 5.619499999999847e-05, 5.615300000000323e-05, 5.5750000000000244e-05, 5.56809999999984e-05, 5.572300000000058e-05, 5.5499999999999994e-05, 5.6027999999999634e-05, 5.581999999999809e-05, 5.613900000000019e-05, 5.583300000000166e-05, 5.6264000000000314e-05, 5.5736000000000674e-05, 5.6027999999999634e-05, 5.5486000000000424e-05, 5.604200000000267e-05, 5.579100000000295e-05, 5.6179999999999425e-05]</msg>
<status status="PASS" starttime="20201030 15:56:07.135" endtime="20201030 15:56:07.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.130" endtime="20201030 15:56:07.138"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:07.141" endtime="20201030 15:56:07.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.140" endtime="20201030 15:56:07.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.138" endtime="20201030 15:56:07.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.764" endtime="20201030 15:56:07.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.763" endtime="20201030 15:56:07.162"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.170" endtime="20201030 15:56:07.188"></status>
</kw>
<msg timestamp="20201030 15:56:07.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.169" endtime="20201030 15:56:07.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.190" endtime="20201030 15:56:07.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.192" endtime="20201030 15:56:07.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.166" endtime="20201030 15:56:07.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.164" endtime="20201030 15:56:07.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.201" endtime="20201030 15:56:07.487"></status>
</kw>
<msg timestamp="20201030 15:56:07.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022692083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022749458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:07.200" endtime="20201030 15:56:07.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022692083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022749458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:07.492" endtime="20201030 15:56:07.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.500" endtime="20201030 15:56:07.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.197" endtime="20201030 15:56:07.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.195" endtime="20201030 15:56:07.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:07.507" level="INFO">${RESULT} = [{'diff': 5.737500000000187e-05}, {'diff': 5.704100000000073e-05}, {'diff': 5.6985999999998455e-05}, {'diff': 5.6749999999997774e-05}, {'diff': 5.663900000000069e-05}, {'diff': 5.7014000000001064e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:07.503" endtime="20201030 15:56:07.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:07.511" level="INFO">${ACCURACY} = {'diff': [5.737500000000187e-05, 5.704100000000073e-05, 5.6985999999998455e-05, 5.6749999999997774e-05, 5.663900000000069e-05, 5.7014000000001064e-05, 5.659700000000198e-05, 5.65549999999998e-05, 5.72...</msg>
<status status="PASS" starttime="20201030 15:56:07.508" endtime="20201030 15:56:07.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.515" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 15:56:07.514" endtime="20201030 15:56:07.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.519" level="INFO">VALUE: [5.737500000000187e-05, 5.704100000000073e-05, 5.6985999999998455e-05, 5.6749999999997774e-05, 5.663900000000069e-05, 5.7014000000001064e-05, 5.659700000000198e-05, 5.65549999999998e-05, 5.7235999999998705e-05, 5.7292000000000454e-05, 5.6791999999999954e-05, 5.6778000000000384e-05, 5.6791999999999954e-05, 5.7014000000001064e-05, 5.684699999999876e-05, 5.708400000000238e-05, 5.6736000000001674e-05, 5.687500000000137e-05, 5.712500000000162e-05, 5.6943999999999745e-05, 5.7278000000000884e-05, 5.7235999999998705e-05, 5.687500000000137e-05, 5.6693999999999495e-05, 5.6457999999998815e-05, 5.7221999999999135e-05, 5.662500000000112e-05, 5.68610000000018e-05, 5.7014000000001064e-05, 5.6958000000002784e-05, 5.6764000000000814e-05, 5.638900000000044e-05, 5.683299999999919e-05, 5.683299999999919e-05, 5.7306000000000024e-05, 5.683299999999919e-05, 5.715299999999729e-05, 5.6514000000000564e-05, 5.659700000000198e-05, 5.634699999999826e-05, 5.7292000000000454e-05, 5.6819999999999093e-05, 5.662500000000112e-05, 5.6819999999999093e-05, 5.645899999999829e-05, 5.7055999999999774e-05, 5.715300000000076e-05, 5.6486000000001424e-05, 5.63749999999974e-05, 5.683300000000266e-05]</msg>
<status status="PASS" starttime="20201030 15:56:07.517" endtime="20201030 15:56:07.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.511" endtime="20201030 15:56:07.520"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:07.524" endtime="20201030 15:56:07.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.522" endtime="20201030 15:56:07.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.521" endtime="20201030 15:56:07.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.163" endtime="20201030 15:56:07.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.162" endtime="20201030 15:56:07.544"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.553" endtime="20201030 15:56:07.570"></status>
</kw>
<msg timestamp="20201030 15:56:07.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.551" endtime="20201030 15:56:07.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.571" endtime="20201030 15:56:07.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.574" endtime="20201030 15:56:07.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.549" endtime="20201030 15:56:07.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.547" endtime="20201030 15:56:07.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.583" endtime="20201030 15:56:07.868"></status>
</kw>
<msg timestamp="20201030 15:56:07.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021812792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021870625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:07.581" endtime="20201030 15:56:07.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021812792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021870625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:07.872" endtime="20201030 15:56:07.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.880" endtime="20201030 15:56:07.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.578" endtime="20201030 15:56:07.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.577" endtime="20201030 15:56:07.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:07.887" level="INFO">${RESULT} = [{'diff': 5.783300000000019e-05}, {'diff': 5.813899999999872e-05}, {'diff': 5.831900000000112e-05}, {'diff': 5.790300000000151e-05}, {'diff': 5.811099999999958e-05}, {'diff': 5.811099999999958e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:07.884" endtime="20201030 15:56:07.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:07.892" level="INFO">${ACCURACY} = {'diff': [5.783300000000019e-05, 5.813899999999872e-05, 5.831900000000112e-05, 5.790300000000151e-05, 5.811099999999958e-05, 5.811099999999958e-05, 5.766700000000083e-05, 5.8194999999997e-05, 5.745899...</msg>
<status status="PASS" starttime="20201030 15:56:07.888" endtime="20201030 15:56:07.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.896" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 15:56:07.895" endtime="20201030 15:56:07.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.899" level="INFO">VALUE: [5.783300000000019e-05, 5.813899999999872e-05, 5.831900000000112e-05, 5.790300000000151e-05, 5.811099999999958e-05, 5.811099999999958e-05, 5.766700000000083e-05, 5.8194999999997e-05, 5.745899999999929e-05, 5.788899999999847e-05, 5.834700000000026e-05, 5.791700000000108e-05, 5.788899999999847e-05, 5.7401999999998066e-05, 5.781900000000062e-05, 5.823699999999918e-05, 5.784699999999976e-05, 5.7638000000002215e-05, 5.752699999999819e-05, 5.781900000000062e-05, 5.777699999999844e-05, 5.7471999999999385e-05, 5.783300000000019e-05, 5.768099999999693e-05, 5.737500000000187e-05, 5.762499999999865e-05, 5.788900000000194e-05, 5.7764000000001814e-05, 5.7778000000001384e-05, 5.8263999999998844e-05, 5.7721999999999635e-05, 5.820900000000004e-05, 5.786099999999933e-05, 5.7485999999998955e-05, 5.812500000000262e-05, 5.7985999999999455e-05, 5.8028000000001634e-05, 5.769499999999997e-05, 5.818099999999743e-05, 5.8306000000001024e-05, 5.8235999999999705e-05, 5.7778000000001384e-05, 5.783300000000019e-05, 5.805499999999783e-05, 5.8277999999998414e-05, 5.7430000000000675e-05, 5.804099999999826e-05, 5.7985999999999455e-05, 5.8263999999998844e-05, 5.831900000000112e-05]</msg>
<status status="PASS" starttime="20201030 15:56:07.897" endtime="20201030 15:56:07.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.893" endtime="20201030 15:56:07.900"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:07.904" endtime="20201030 15:56:07.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.902" endtime="20201030 15:56:07.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.901" endtime="20201030 15:56:07.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.545" endtime="20201030 15:56:07.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.545" endtime="20201030 15:56:07.924"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.933" endtime="20201030 15:56:07.949"></status>
</kw>
<msg timestamp="20201030 15:56:07.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.931" endtime="20201030 15:56:07.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.951" endtime="20201030 15:56:07.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.953" endtime="20201030 15:56:07.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.929" endtime="20201030 15:56:07.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.927" endtime="20201030 15:56:07.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.962" endtime="20201030 15:56:08.248"></status>
</kw>
<msg timestamp="20201030 15:56:08.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021911417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:07.961" endtime="20201030 15:56:08.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021911417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:08.252" endtime="20201030 15:56:08.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.261" endtime="20201030 15:56:08.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.958" endtime="20201030 15:56:08.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.956" endtime="20201030 15:56:08.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:08.267" level="INFO">${RESULT} = [{'diff': 5.8791999999998484e-05}, {'diff': 5.895900000000079e-05}, {'diff': 5.916699999999886e-05}, {'diff': 5.8736000000000205e-05}, {'diff': 5.8416000000002105e-05}, {'diff': 5.8902000000003035e-05...</msg>
<status status="PASS" starttime="20201030 15:56:08.264" endtime="20201030 15:56:08.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:08.271" level="INFO">${ACCURACY} = {'diff': [5.8791999999998484e-05, 5.895900000000079e-05, 5.916699999999886e-05, 5.8736000000000205e-05, 5.8416000000002105e-05, 5.8902000000003035e-05, 5.929099999999951e-05, 5.8708000000001065e-05, 5...</msg>
<status status="PASS" starttime="20201030 15:56:08.268" endtime="20201030 15:56:08.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.276" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 15:56:08.275" endtime="20201030 15:56:08.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.278" level="INFO">VALUE: [5.8791999999998484e-05, 5.895900000000079e-05, 5.916699999999886e-05, 5.8736000000000205e-05, 5.8416000000002105e-05, 5.8902000000003035e-05, 5.929099999999951e-05, 5.8708000000001065e-05, 5.886100000000033e-05, 5.929099999999951e-05, 5.90689999999984e-05, 5.858299999999747e-05, 5.8527999999998664e-05, 5.863900000000269e-05, 5.8763999999999345e-05, 5.8458000000000815e-05, 5.8971999999997415e-05, 5.8542000000001704e-05, 5.858300000000094e-05, 5.9041999999998734e-05, 5.9319999999998124e-05, 5.836099999999983e-05, 5.9084000000000914e-05, 5.9334000000001164e-05, 5.861100000000008e-05, 5.8569999999997374e-05, 5.8556000000001274e-05, 5.9236000000000705e-05, 5.872300000000011e-05, 5.913899999999972e-05, 5.8555999999997804e-05, 5.85550000000018e-05, 5.893100000000165e-05, 5.883300000000119e-05, 5.9179999999998956e-05, 5.8665999999998886e-05, 5.862499999999965e-05, 5.8943999999998276e-05, 5.880499999999858e-05, 5.911100000000058e-05, 5.888899999999947e-05, 5.90550000000023e-05, 5.9027999999999164e-05, 5.9193999999998526e-05, 5.911100000000058e-05, 5.83749999999994e-05, 5.8527999999998664e-05, 5.8834000000000664e-05, 5.8597999999999983e-05, 5.9070000000001344e-05]</msg>
<status status="PASS" starttime="20201030 15:56:08.277" endtime="20201030 15:56:08.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.272" endtime="20201030 15:56:08.280"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:08.283" endtime="20201030 15:56:08.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.282" endtime="20201030 15:56:08.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.281" endtime="20201030 15:56:08.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.925" endtime="20201030 15:56:08.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.925" endtime="20201030 15:56:08.304"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.312" endtime="20201030 15:56:08.330"></status>
</kw>
<msg timestamp="20201030 15:56:08.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:08.311" endtime="20201030 15:56:08.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:08.332" endtime="20201030 15:56:08.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.334" endtime="20201030 15:56:08.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.308" endtime="20201030 15:56:08.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.306" endtime="20201030 15:56:08.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.343" endtime="20201030 15:56:08.628"></status>
</kw>
<msg timestamp="20201030 15:56:08.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022681431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022741903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:08.342" endtime="20201030 15:56:08.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022681431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022741903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:08.632" endtime="20201030 15:56:08.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.640" endtime="20201030 15:56:08.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.339" endtime="20201030 15:56:08.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.337" endtime="20201030 15:56:08.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:08.647" level="INFO">${RESULT} = [{'diff': 6.0472000000002385e-05}, {'diff': 5.9736000000001205e-05}, {'diff': 6.0305999999999554e-05}, {'diff': 6.008299999999897e-05}, {'diff': 5.9693999999999026e-05}, {'diff': 5.9916000000000136e-0...</msg>
<status status="PASS" starttime="20201030 15:56:08.644" endtime="20201030 15:56:08.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:08.651" level="INFO">${ACCURACY} = {'diff': [6.0472000000002385e-05, 5.9736000000001205e-05, 6.0305999999999554e-05, 6.008299999999897e-05, 5.9693999999999026e-05, 5.9916000000000136e-05, 6.011100000000158e-05, 5.980499999999958e-05, 6...</msg>
<status status="PASS" starttime="20201030 15:56:08.648" endtime="20201030 15:56:08.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.655" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 15:56:08.654" endtime="20201030 15:56:08.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.659" level="INFO">VALUE: [6.0472000000002385e-05, 5.9736000000001205e-05, 6.0305999999999554e-05, 6.008299999999897e-05, 5.9693999999999026e-05, 5.9916000000000136e-05, 6.011100000000158e-05, 5.980499999999958e-05, 6.008299999999897e-05, 6.0000000000001025e-05, 5.961099999999761e-05, 5.9750000000000775e-05, 6.005499999999983e-05, 6.030500000000008e-05, 6.0042000000003204e-05, 6.008299999999897e-05, 5.9986000000001455e-05, 5.95689999999989e-05, 6.016699999999986e-05, 5.938899999999997e-05, 5.968099999999893e-05, 6.0028000000000165e-05, 5.9971999999998415e-05, 5.9514000000000095e-05, 5.962500000000065e-05, 5.9736000000001205e-05, 6.0222000000002135e-05, 6.004100000000026e-05, 5.9986000000001455e-05, 5.9583999999997944e-05, 5.987499999999743e-05, 5.9583999999997944e-05, 5.991699999999961e-05, 6.00689999999994e-05, 5.9638000000000746e-05, 6.002700000000069e-05, 6.029100000000051e-05, 5.9429999999999206e-05, 6.031899999999965e-05, 5.9777999999999915e-05, 5.988900000000047e-05, 5.983299999999872e-05, 5.9679999999999456e-05, 5.9471999999997915e-05, 5.958299999999847e-05, 6.0028000000000165e-05, 6.0221999999998665e-05, 5.9707999999998596e-05, 5.9541999999999234e-05, 6.0056000000002774e-05]</msg>
<status status="PASS" starttime="20201030 15:56:08.657" endtime="20201030 15:56:08.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.652" endtime="20201030 15:56:08.660"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:08.664" endtime="20201030 15:56:08.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.662" endtime="20201030 15:56:08.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.661" endtime="20201030 15:56:08.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.305" endtime="20201030 15:56:08.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.304" endtime="20201030 15:56:08.684"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.693" endtime="20201030 15:56:08.710"></status>
</kw>
<msg timestamp="20201030 15:56:08.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:08.691" endtime="20201030 15:56:08.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:08.711" endtime="20201030 15:56:08.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.714" endtime="20201030 15:56:08.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.689" endtime="20201030 15:56:08.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.687" endtime="20201030 15:56:08.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.723" endtime="20201030 15:56:09.008"></status>
</kw>
<msg timestamp="20201030 15:56:09.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021775486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021836875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:08.721" endtime="20201030 15:56:09.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021775486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021836875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.012" endtime="20201030 15:56:09.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.020" endtime="20201030 15:56:09.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.719" endtime="20201030 15:56:09.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.717" endtime="20201030 15:56:09.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:09.027" level="INFO">${RESULT} = [{'diff': 6.13889999999985e-05}, {'diff': 6.0944000000000276e-05}, {'diff': 6.061099999999861e-05}, {'diff': 6.113900000000172e-05}, {'diff': 6.094499999999975e-05}, {'diff': 6.087499999999843e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:09.023" endtime="20201030 15:56:09.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:09.031" level="INFO">${ACCURACY} = {'diff': [6.13889999999985e-05, 6.0944000000000276e-05, 6.061099999999861e-05, 6.113900000000172e-05, 6.094499999999975e-05, 6.087499999999843e-05, 6.0569999999999374e-05, 6.104199999999727e-05, 6.041...</msg>
<status status="PASS" starttime="20201030 15:56:09.028" endtime="20201030 15:56:09.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.036" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 15:56:09.035" endtime="20201030 15:56:09.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.038" level="INFO">VALUE: [6.13889999999985e-05, 6.0944000000000276e-05, 6.061099999999861e-05, 6.113900000000172e-05, 6.094499999999975e-05, 6.087499999999843e-05, 6.0569999999999374e-05, 6.104199999999727e-05, 6.041700000000011e-05, 6.0847999999998764e-05, 6.086099999999886e-05, 6.118100000000043e-05, 6.108299999999997e-05, 6.073699999999821e-05, 6.0999999999998555e-05, 6.0721999999999166e-05, 6.0694000000000026e-05, 6.129100000000151e-05, 6.136099999999936e-05, 6.119400000000053e-05, 6.0764000000001345e-05, 6.131900000000065e-05, 6.054100000000076e-05, 6.0791999999997015e-05, 6.122200000000314e-05, 6.0500000000001525e-05, 6.104200000000073e-05, 6.104200000000073e-05, 6.0792000000000485e-05, 6.102699999999822e-05, 6.045899999999882e-05, 6.091700000000061e-05, 6.0721999999999166e-05, 6.063900000000122e-05, 6.126399999999838e-05, 6.0957999999999846e-05, 6.1195e-05, 6.040300000000054e-05, 6.072299999999864e-05, 6.113899999999825e-05, 6.062499999999818e-05, 6.0402000000001066e-05, 6.079100000000101e-05, 6.0735999999998735e-05, 6.0971999999999416e-05, 6.052700000000119e-05, 6.055500000000033e-05, 6.116700000000086e-05, 6.038900000000097e-05, 6.055499999999686e-05]</msg>
<status status="PASS" starttime="20201030 15:56:09.037" endtime="20201030 15:56:09.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.032" endtime="20201030 15:56:09.040"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:09.043" endtime="20201030 15:56:09.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.042" endtime="20201030 15:56:09.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.041" endtime="20201030 15:56:09.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.685" endtime="20201030 15:56:09.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.685" endtime="20201030 15:56:09.064"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.073" endtime="20201030 15:56:09.090"></status>
</kw>
<msg timestamp="20201030 15:56:09.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.071" endtime="20201030 15:56:09.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.091" endtime="20201030 15:56:09.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.094" endtime="20201030 15:56:09.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.069" endtime="20201030 15:56:09.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.066" endtime="20201030 15:56:09.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.103" endtime="20201030 15:56:09.391"></status>
</kw>
<msg timestamp="20201030 15:56:09.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022014236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022076694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.101" endtime="20201030 15:56:09.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022014236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022076694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.396" endtime="20201030 15:56:09.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.404" endtime="20201030 15:56:09.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.099" endtime="20201030 15:56:09.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.097" endtime="20201030 15:56:09.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:09.410" level="INFO">${RESULT} = [{'diff': 6.245800000000135e-05}, {'diff': 6.222200000000067e-05}, {'diff': 6.212500000000315e-05}, {'diff': 6.227799999999895e-05}, {'diff': 6.230499999999861e-05}, {'diff': 6.218000000000196e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:09.407" endtime="20201030 15:56:09.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:09.414" level="INFO">${ACCURACY} = {'diff': [6.245800000000135e-05, 6.222200000000067e-05, 6.212500000000315e-05, 6.227799999999895e-05, 6.230499999999861e-05, 6.218000000000196e-05, 6.187499999999943e-05, 6.195800000000085e-05, 6.2222...</msg>
<status status="PASS" starttime="20201030 15:56:09.411" endtime="20201030 15:56:09.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.419" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 15:56:09.418" endtime="20201030 15:56:09.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.421" level="INFO">VALUE: [6.245800000000135e-05, 6.222200000000067e-05, 6.212500000000315e-05, 6.227799999999895e-05, 6.230499999999861e-05, 6.218000000000196e-05, 6.187499999999943e-05, 6.195800000000085e-05, 6.222200000000067e-05, 6.177799999999845e-05, 6.216699999999839e-05, 6.17219999999967e-05, 6.215299999999882e-05, 6.159700000000004e-05, 6.232000000000112e-05, 6.145800000000035e-05, 6.162499999999918e-05, 6.155500000000133e-05, 6.209700000000054e-05, 6.212499999999968e-05, 6.155599999999734e-05, 6.223600000000024e-05, 6.208400000000044e-05, 6.162499999999918e-05, 6.158399999999994e-05, 6.166599999999842e-05, 6.155500000000133e-05, 6.141600000000164e-05, 6.22499999999998e-05, 6.181899999999768e-05, 6.234700000000079e-05, 6.147199999999992e-05, 6.204200000000173e-05, 6.140300000000154e-05, 6.187499999999943e-05, 6.20829999999975e-05, 6.158300000000047e-05, 6.179199999999802e-05, 6.161100000000308e-05, 6.136099999999936e-05, 6.141700000000111e-05, 6.180600000000105e-05, 6.161199999999908e-05, 6.198599999999999e-05, 6.143100000000068e-05, 6.145899999999982e-05, 6.140300000000154e-05, 6.186199999999933e-05, 6.141700000000111e-05, 6.223699999999971e-05]</msg>
<status status="PASS" starttime="20201030 15:56:09.420" endtime="20201030 15:56:09.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.415" endtime="20201030 15:56:09.422"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:09.426" endtime="20201030 15:56:09.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.424" endtime="20201030 15:56:09.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.423" endtime="20201030 15:56:09.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.065" endtime="20201030 15:56:09.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.064" endtime="20201030 15:56:09.447"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.455" endtime="20201030 15:56:09.474"></status>
</kw>
<msg timestamp="20201030 15:56:09.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.454" endtime="20201030 15:56:09.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.476" endtime="20201030 15:56:09.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.478" endtime="20201030 15:56:09.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.451" endtime="20201030 15:56:09.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.449" endtime="20201030 15:56:09.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.488" endtime="20201030 15:56:09.773"></status>
</kw>
<msg timestamp="20201030 15:56:09.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022721042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022784528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.487" endtime="20201030 15:56:09.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022721042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022784528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.777" endtime="20201030 15:56:09.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.785" endtime="20201030 15:56:09.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.484" endtime="20201030 15:56:09.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.482" endtime="20201030 15:56:09.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:09.791" level="INFO">${RESULT} = [{'diff': 6.348599999999802e-05}, {'diff': 6.25560000000018e-05}, {'diff': 6.269499999999803e-05}, {'diff': 6.257000000000137e-05}, {'diff': 6.326400000000038e-05}, {'diff': 6.304199999999927e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:09.788" endtime="20201030 15:56:09.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:09.796" level="INFO">${ACCURACY} = {'diff': [6.348599999999802e-05, 6.25560000000018e-05, 6.269499999999803e-05, 6.257000000000137e-05, 6.326400000000038e-05, 6.304199999999927e-05, 6.280500000000258e-05, 6.298600000000099e-05, 6.26389...</msg>
<status status="PASS" starttime="20201030 15:56:09.792" endtime="20201030 15:56:09.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.800" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 15:56:09.799" endtime="20201030 15:56:09.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.802" level="INFO">VALUE: [6.348599999999802e-05, 6.25560000000018e-05, 6.269499999999803e-05, 6.257000000000137e-05, 6.326400000000038e-05, 6.304199999999927e-05, 6.280500000000258e-05, 6.298600000000099e-05, 6.263899999999975e-05, 6.280599999999859e-05, 6.311200000000058e-05, 6.2889e-05, 6.30829999999985e-05, 6.317999999999949e-05, 6.30829999999985e-05, 6.334699999999832e-05, 6.29020000000001e-05, 6.30279999999997e-05, 6.240299999999907e-05, 6.23889999999995e-05, 6.24300000000022e-05, 6.290299999999957e-05, 6.32219999999982e-05, 6.295800000000185e-05, 6.265299999999932e-05, 6.304199999999927e-05, 6.25279999999992e-05, 6.293100000000218e-05, 6.265199999999985e-05, 6.336100000000136e-05, 6.2889e-05, 6.294500000000175e-05, 6.269499999999803e-05, 6.309799999999754e-05, 6.32500000000008e-05, 6.244500000000125e-05, 6.313800000000078e-05, 6.242999999999874e-05, 6.284700000000129e-05, 6.317999999999949e-05, 6.295900000000132e-05, 6.259700000000104e-05, 6.297200000000142e-05, 6.280499999999911e-05, 6.320900000000157e-05, 6.258300000000147e-05, 6.297200000000142e-05, 6.333300000000222e-05, 6.25560000000018e-05, 6.323600000000124e-05]</msg>
<status status="PASS" starttime="20201030 15:56:09.801" endtime="20201030 15:56:09.804"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.796" endtime="20201030 15:56:09.804"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:09.808" endtime="20201030 15:56:09.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.807" endtime="20201030 15:56:09.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.805" endtime="20201030 15:56:09.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.448" endtime="20201030 15:56:09.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.447" endtime="20201030 15:56:09.829"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.837" endtime="20201030 15:56:09.855"></status>
</kw>
<msg timestamp="20201030 15:56:09.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.836" endtime="20201030 15:56:09.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.857" endtime="20201030 15:56:09.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.859" endtime="20201030 15:56:09.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.833" endtime="20201030 15:56:09.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.831" endtime="20201030 15:56:09.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.868" endtime="20201030 15:56:10.154"></status>
</kw>
<msg timestamp="20201030 15:56:10.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021923042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021987417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.867" endtime="20201030 15:56:10.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021923042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021987417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:10.158" endtime="20201030 15:56:10.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.166" endtime="20201030 15:56:10.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.864" endtime="20201030 15:56:10.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.862" endtime="20201030 15:56:10.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:10.173" level="INFO">${RESULT} = [{'diff': 6.437499999999846e-05}, {'diff': 6.373600000000174e-05}, {'diff': 6.418099999999996e-05}, {'diff': 6.431999999999966e-05}, {'diff': 6.37500000000013e-05}, {'diff': 6.372299999999817e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:10.170" endtime="20201030 15:56:10.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:10.178" level="INFO">${ACCURACY} = {'diff': [6.437499999999846e-05, 6.373600000000174e-05, 6.418099999999996e-05, 6.431999999999966e-05, 6.37500000000013e-05, 6.372299999999817e-05, 6.37500000000013e-05, 6.35280000000002e-05, 6.3568999...</msg>
<status status="PASS" starttime="20201030 15:56:10.174" endtime="20201030 15:56:10.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.182" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 15:56:10.181" endtime="20201030 15:56:10.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.185" level="INFO">VALUE: [6.437499999999846e-05, 6.373600000000174e-05, 6.418099999999996e-05, 6.431999999999966e-05, 6.37500000000013e-05, 6.372299999999817e-05, 6.37500000000013e-05, 6.35280000000002e-05, 6.356899999999943e-05, 6.430500000000061e-05, 6.33890000000005e-05, 6.373600000000174e-05, 6.416599999999745e-05, 6.3582999999999e-05, 6.400000000000156e-05, 6.386100000000186e-05, 6.426400000000138e-05, 6.42080000000031e-05, 6.35560000000028e-05, 6.404200000000027e-05, 6.42219999999992e-05, 6.405599999999984e-05, 6.391700000000014e-05, 6.42639999999979e-05, 6.394499999999928e-05, 6.401400000000113e-05, 6.337499999999746e-05, 6.387499999999796e-05, 6.426400000000138e-05, 6.358399999999848e-05, 6.386199999999786e-05, 6.362500000000118e-05, 6.373600000000174e-05, 6.418000000000049e-05, 6.37500000000013e-05, 6.418000000000049e-05, 6.344400000000278e-05, 6.437499999999846e-05, 6.380500000000011e-05, 6.376400000000088e-05, 6.340300000000007e-05, 6.383299999999925e-05, 6.416700000000039e-05, 6.390300000000057e-05, 6.393099999999971e-05, 6.341699999999964e-05, 6.362499999999771e-05, 6.337500000000093e-05, 6.386099999999839e-05, 6.372200000000217e-05]</msg>
<status status="PASS" starttime="20201030 15:56:10.183" endtime="20201030 15:56:10.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.178" endtime="20201030 15:56:10.186"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:10.189" endtime="20201030 15:56:10.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.188" endtime="20201030 15:56:10.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.187" endtime="20201030 15:56:10.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.830" endtime="20201030 15:56:10.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.829" endtime="20201030 15:56:10.210"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.219" endtime="20201030 15:56:10.235"></status>
</kw>
<msg timestamp="20201030 15:56:10.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:10.217" endtime="20201030 15:56:10.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:10.237" endtime="20201030 15:56:10.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.239" endtime="20201030 15:56:10.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.215" endtime="20201030 15:56:10.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.213" endtime="20201030 15:56:10.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.248" endtime="20201030 15:56:10.535"></status>
</kw>
<msg timestamp="20201030 15:56:10.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021875361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021940333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:10.247" endtime="20201030 15:56:10.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021875361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021940333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:10.539" endtime="20201030 15:56:10.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.547" endtime="20201030 15:56:10.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.244" endtime="20201030 15:56:10.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.242" endtime="20201030 15:56:10.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:10.553" level="INFO">${RESULT} = [{'diff': 6.497199999999995e-05}, {'diff': 6.495800000000038e-05}, {'diff': 6.501399999999866e-05}, {'diff': 6.518000000000149e-05}, {'diff': 6.479099999999807e-05}, {'diff': 6.492999999999777e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:10.550" endtime="20201030 15:56:10.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:10.557" level="INFO">${ACCURACY} = {'diff': [6.497199999999995e-05, 6.495800000000038e-05, 6.501399999999866e-05, 6.518000000000149e-05, 6.479099999999807e-05, 6.492999999999777e-05, 6.483300000000025e-05, 6.495799999999691e-05, 6.4861...</msg>
<status status="PASS" starttime="20201030 15:56:10.554" endtime="20201030 15:56:10.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.562" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 15:56:10.561" endtime="20201030 15:56:10.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.564" level="INFO">VALUE: [6.497199999999995e-05, 6.495800000000038e-05, 6.501399999999866e-05, 6.518000000000149e-05, 6.479099999999807e-05, 6.492999999999777e-05, 6.483300000000025e-05, 6.495799999999691e-05, 6.486100000000286e-05, 6.47639999999984e-05, 6.52220000000002e-05, 6.530600000000109e-05, 6.518000000000149e-05, 6.480600000000059e-05, 6.50419999999978e-05, 6.523600000000324e-05, 6.443099999999674e-05, 6.519500000000053e-05, 6.530600000000109e-05, 6.52090000000001e-05, 6.530599999999762e-05, 6.482000000000016e-05, 6.461099999999914e-05, 6.506900000000093e-05, 6.465199999999838e-05, 6.497200000000342e-05, 6.502699999999875e-05, 6.463899999999828e-05, 6.452799999999773e-05, 6.52220000000002e-05, 6.463899999999828e-05, 6.483300000000025e-05, 6.450000000000206e-05, 6.43890000000015e-05, 6.43890000000015e-05, 6.448599999999902e-05, 6.532000000000066e-05, 6.448599999999902e-05, 6.437500000000193e-05, 6.459699999999957e-05, 6.499999999999909e-05, 6.50419999999978e-05, 6.482000000000016e-05, 6.519500000000053e-05, 6.481899999999721e-05, 6.527700000000247e-05, 6.455600000000034e-05, 6.499999999999909e-05, 6.467999999999752e-05, 6.462500000000218e-05]</msg>
<status status="PASS" starttime="20201030 15:56:10.563" endtime="20201030 15:56:10.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.558" endtime="20201030 15:56:10.566"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:10.569" endtime="20201030 15:56:10.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.568" endtime="20201030 15:56:10.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.567" endtime="20201030 15:56:10.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.211" endtime="20201030 15:56:10.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.210" endtime="20201030 15:56:10.590"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.599" endtime="20201030 15:56:10.617"></status>
</kw>
<msg timestamp="20201030 15:56:10.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:10.597" endtime="20201030 15:56:10.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:10.618" endtime="20201030 15:56:10.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.621" endtime="20201030 15:56:10.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.594" endtime="20201030 15:56:10.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.592" endtime="20201030 15:56:10.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.630" endtime="20201030 15:56:10.916"></status>
</kw>
<msg timestamp="20201030 15:56:10.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022930347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022996306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:10.628" endtime="20201030 15:56:10.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022930347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022996306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:10.920" endtime="20201030 15:56:10.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.928" endtime="20201030 15:56:10.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.626" endtime="20201030 15:56:10.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.624" endtime="20201030 15:56:10.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:10.934" level="INFO">${RESULT} = [{'diff': 6.595900000000085e-05}, {'diff': 6.588899999999953e-05}, {'diff': 6.637500000000046e-05}, {'diff': 6.538799999999956e-05}, {'diff': 6.625000000000034e-05}, {'diff': 6.54159999999987e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:10.931" endtime="20201030 15:56:10.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:10.939" level="INFO">${ACCURACY} = {'diff': [6.595900000000085e-05, 6.588899999999953e-05, 6.637500000000046e-05, 6.538799999999956e-05, 6.625000000000034e-05, 6.54159999999987e-05, 6.547200000000045e-05, 6.594399999999834e-05, 6.60689...</msg>
<status status="PASS" starttime="20201030 15:56:10.935" endtime="20201030 15:56:10.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.943" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 15:56:10.942" endtime="20201030 15:56:10.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.946" level="INFO">VALUE: [6.595900000000085e-05, 6.588899999999953e-05, 6.637500000000046e-05, 6.538799999999956e-05, 6.625000000000034e-05, 6.54159999999987e-05, 6.547200000000045e-05, 6.594399999999834e-05, 6.606899999999846e-05, 6.583299999999778e-05, 6.630499999999914e-05, 6.633300000000175e-05, 6.59440000000018e-05, 6.591699999999867e-05, 6.601399999999966e-05, 6.580599999999812e-05, 6.561099999999667e-05, 6.582000000000116e-05, 6.570799999999766e-05, 6.566700000000189e-05, 6.563900000000275e-05, 6.587499999999996e-05, 6.543100000000121e-05, 6.60419999999988e-05, 6.616599999999945e-05, 6.586100000000039e-05, 6.581900000000168e-05, 6.579099999999907e-05, 6.563899999999928e-05, 6.592999999999877e-05, 6.595800000000138e-05, 6.602799999999923e-05, 6.59029999999991e-05, 6.547200000000045e-05, 6.620799999999816e-05, 6.548600000000002e-05, 6.562499999999971e-05, 6.632000000000166e-05, 6.595799999999791e-05, 6.624999999999687e-05, 6.579199999999855e-05, 6.630599999999862e-05, 6.559700000000057e-05, 6.618099999999849e-05, 6.566699999999842e-05, 6.60419999999988e-05, 6.605600000000184e-05, 6.554099999999882e-05, 6.563799999999981e-05, 6.620799999999816e-05]</msg>
<status status="PASS" starttime="20201030 15:56:10.944" endtime="20201030 15:56:10.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.940" endtime="20201030 15:56:10.948"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:10.951" endtime="20201030 15:56:10.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.950" endtime="20201030 15:56:10.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.949" endtime="20201030 15:56:10.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.591" endtime="20201030 15:56:10.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.590" endtime="20201030 15:56:10.972"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.981" endtime="20201030 15:56:10.997"></status>
</kw>
<msg timestamp="20201030 15:56:10.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:10.979" endtime="20201030 15:56:10.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:10.999" endtime="20201030 15:56:11.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.001" endtime="20201030 15:56:11.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.976" endtime="20201030 15:56:11.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.974" endtime="20201030 15:56:11.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.010" endtime="20201030 15:56:11.296"></status>
</kw>
<msg timestamp="20201030 15:56:11.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021779056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021845847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:11.009" endtime="20201030 15:56:11.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021779056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021845847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:11.300" endtime="20201030 15:56:11.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.308" endtime="20201030 15:56:11.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.006" endtime="20201030 15:56:11.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.005" endtime="20201030 15:56:11.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:11.315" level="INFO">${RESULT} = [{'diff': 6.679100000000007e-05}, {'diff': 6.651400000000016e-05}, {'diff': 6.731899999999971e-05}, {'diff': 6.65419999999993e-05}, {'diff': 6.715300000000035e-05}, {'diff': 6.70419999999998e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:11.312" endtime="20201030 15:56:11.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:11.320" level="INFO">${ACCURACY} = {'diff': [6.679100000000007e-05, 6.651400000000016e-05, 6.731899999999971e-05, 6.65419999999993e-05, 6.715300000000035e-05, 6.70419999999998e-05, 6.679199999999955e-05, 6.686100000000139e-05, 6.723600...</msg>
<status status="PASS" starttime="20201030 15:56:11.316" endtime="20201030 15:56:11.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.324" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 15:56:11.323" endtime="20201030 15:56:11.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.327" level="INFO">VALUE: [6.679100000000007e-05, 6.651400000000016e-05, 6.731899999999971e-05, 6.65419999999993e-05, 6.715300000000035e-05, 6.70419999999998e-05, 6.679199999999955e-05, 6.686100000000139e-05, 6.723600000000177e-05, 6.729200000000005e-05, 6.694500000000228e-05, 6.679199999999955e-05, 6.706999999999894e-05, 6.733399999999876e-05, 6.637500000000046e-05, 6.715299999999688e-05, 6.701400000000066e-05, 6.637500000000046e-05, 6.665200000000038e-05, 6.704100000000032e-05, 6.702700000000075e-05, 6.67640000000004e-05, 6.669399999999909e-05, 6.673600000000127e-05, 6.723600000000177e-05, 6.700000000000109e-05, 6.730500000000014e-05, 6.701400000000066e-05, 6.650000000000059e-05, 6.643099999999874e-05, 6.641699999999917e-05, 6.677799999999998e-05, 6.705600000000284e-05, 6.699999999999762e-05, 6.716699999999992e-05, 6.663900000000028e-05, 6.63480000000008e-05, 6.712500000000121e-05, 6.716699999999992e-05, 6.72229999999982e-05, 6.722300000000167e-05, 6.726299999999796e-05, 6.712500000000121e-05, 6.680499999999964e-05, 6.733300000000275e-05, 6.648600000000102e-05, 6.661100000000114e-05, 6.661100000000114e-05, 6.654100000000329e-05, 6.684699999999835e-05]</msg>
<status status="PASS" starttime="20201030 15:56:11.325" endtime="20201030 15:56:11.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.320" endtime="20201030 15:56:11.338"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:11.341" endtime="20201030 15:56:11.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.340" endtime="20201030 15:56:11.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.339" endtime="20201030 15:56:11.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.973" endtime="20201030 15:56:11.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.972" endtime="20201030 15:56:11.362"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.371" endtime="20201030 15:56:11.388"></status>
</kw>
<msg timestamp="20201030 15:56:11.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:11.369" endtime="20201030 15:56:11.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:11.390" endtime="20201030 15:56:11.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.392" endtime="20201030 15:56:11.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.366" endtime="20201030 15:56:11.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.364" endtime="20201030 15:56:11.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.401" endtime="20201030 15:56:11.689"></status>
</kw>
<msg timestamp="20201030 15:56:11.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021845764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021914236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:11.400" endtime="20201030 15:56:11.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021845764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021914236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:11.693" endtime="20201030 15:56:11.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.701" endtime="20201030 15:56:11.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.397" endtime="20201030 15:56:11.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.395" endtime="20201030 15:56:11.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:11.708" level="INFO">${RESULT} = [{'diff': 6.847199999999998e-05}, {'diff': 6.824999999999887e-05}, {'diff': 6.804100000000132e-05}, {'diff': 6.75420000000003e-05}, {'diff': 6.759700000000257e-05}, {'diff': 6.74030000000006e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:11.705" endtime="20201030 15:56:11.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:11.712" level="INFO">${ACCURACY} = {'diff': [6.847199999999998e-05, 6.824999999999887e-05, 6.804100000000132e-05, 6.75420000000003e-05, 6.759700000000257e-05, 6.74030000000006e-05, 6.824999999999887e-05, 6.77220000000027e-05, 6.7764000...</msg>
<status status="PASS" starttime="20201030 15:56:11.709" endtime="20201030 15:56:11.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.716" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 15:56:11.715" endtime="20201030 15:56:11.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.719" level="INFO">VALUE: [6.847199999999998e-05, 6.824999999999887e-05, 6.804100000000132e-05, 6.75420000000003e-05, 6.759700000000257e-05, 6.74030000000006e-05, 6.824999999999887e-05, 6.77220000000027e-05, 6.77640000000014e-05, 6.737500000000146e-05, 6.74030000000006e-05, 6.824999999999887e-05, 6.769499999999956e-05, 6.802800000000123e-05, 6.825000000000234e-05, 6.769499999999956e-05, 6.806999999999994e-05, 6.820899999999963e-05, 6.806900000000046e-05, 6.820800000000016e-05, 6.823600000000277e-05, 6.783400000000273e-05, 6.77640000000014e-05, 6.802800000000123e-05, 6.813900000000178e-05, 6.795799999999991e-05, 6.733299999999928e-05, 6.82640000000019e-05, 6.741700000000017e-05, 6.786099999999892e-05, 6.769499999999956e-05, 6.811099999999917e-05, 6.816699999999745e-05, 6.791700000000067e-05, 6.784700000000282e-05, 6.811199999999865e-05, 6.820899999999963e-05, 6.795899999999938e-05, 6.820899999999963e-05, 6.738799999999809e-05, 6.768000000000052e-05, 6.79160000000012e-05, 6.762499999999824e-05, 6.830499999999767e-05, 6.745799999999941e-05, 6.756999999999944e-05, 6.75420000000003e-05, 6.805500000000089e-05, 6.772199999999923e-05, 6.741700000000017e-05]</msg>
<status status="PASS" starttime="20201030 15:56:11.717" endtime="20201030 15:56:11.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.713" endtime="20201030 15:56:11.720"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:11.724" endtime="20201030 15:56:11.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.722" endtime="20201030 15:56:11.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.721" endtime="20201030 15:56:11.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.363" endtime="20201030 15:56:11.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.362" endtime="20201030 15:56:11.744"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.753" endtime="20201030 15:56:11.772"></status>
</kw>
<msg timestamp="20201030 15:56:11.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:11.751" endtime="20201030 15:56:11.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:11.773" endtime="20201030 15:56:11.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.776" endtime="20201030 15:56:11.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.749" endtime="20201030 15:56:11.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.747" endtime="20201030 15:56:11.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.785" endtime="20201030 15:56:12.071"></status>
</kw>
<msg timestamp="20201030 15:56:12.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023121694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023191139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:11.783" endtime="20201030 15:56:12.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023121694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023191139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:12.075" endtime="20201030 15:56:12.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.083" endtime="20201030 15:56:12.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.781" endtime="20201030 15:56:12.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.779" endtime="20201030 15:56:12.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:12.090" level="INFO">${RESULT} = [{'diff': 6.944499999999784e-05}, {'diff': 6.865300000000185e-05}, {'diff': 6.884700000000035e-05}, {'diff': 6.852799999999826e-05}, {'diff': 6.848699999999902e-05}, {'diff': 6.886099999999992e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:12.087" endtime="20201030 15:56:12.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:12.094" level="INFO">${ACCURACY} = {'diff': [6.944499999999784e-05, 6.865300000000185e-05, 6.884700000000035e-05, 6.852799999999826e-05, 6.848699999999902e-05, 6.886099999999992e-05, 6.886099999999992e-05, 6.883400000000026e-05, 6.9166...</msg>
<status status="PASS" starttime="20201030 15:56:12.091" endtime="20201030 15:56:12.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.098" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 15:56:12.097" endtime="20201030 15:56:12.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.102" level="INFO">VALUE: [6.944499999999784e-05, 6.865300000000185e-05, 6.884700000000035e-05, 6.852799999999826e-05, 6.848699999999902e-05, 6.886099999999992e-05, 6.886099999999992e-05, 6.883400000000026e-05, 6.916699999999845e-05, 6.87909999999986e-05, 6.854099999999835e-05, 6.916599999999898e-05, 6.84160000000017e-05, 6.877699999999903e-05, 6.861099999999967e-05, 6.874999999999937e-05, 6.894400000000134e-05, 6.930600000000162e-05, 6.916700000000192e-05, 6.868100000000099e-05, 6.933299999999781e-05, 6.862499999999924e-05, 6.863899999999881e-05, 6.890299999999863e-05, 6.876399999999894e-05, 6.894499999999734e-05, 6.934700000000085e-05, 6.936100000000042e-05, 6.856999999999697e-05, 6.865299999999838e-05, 6.932000000000119e-05, 6.916599999999898e-05, 6.92360000000003e-05, 6.887499999999949e-05, 6.920800000000116e-05, 6.849999999999912e-05, 6.876399999999894e-05, 6.847199999999998e-05, 6.91109999999967e-05, 6.905600000000137e-05, 6.875000000000284e-05, 6.911100000000017e-05, 6.895800000000091e-05, 6.934700000000085e-05, 6.849999999999912e-05, 6.926399999999944e-05, 6.837499999999899e-05, 6.838899999999856e-05, 6.90970000000006e-05, 6.911100000000017e-05]</msg>
<status status="PASS" starttime="20201030 15:56:12.099" endtime="20201030 15:56:12.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.095" endtime="20201030 15:56:12.103"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:12.107" endtime="20201030 15:56:12.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.105" endtime="20201030 15:56:12.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.104" endtime="20201030 15:56:12.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.745" endtime="20201030 15:56:12.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.745" endtime="20201030 15:56:12.127"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.136" endtime="20201030 15:56:12.153"></status>
</kw>
<msg timestamp="20201030 15:56:12.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.134" endtime="20201030 15:56:12.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.155" endtime="20201030 15:56:12.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.157" endtime="20201030 15:56:12.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.132" endtime="20201030 15:56:12.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.130" endtime="20201030 15:56:12.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.166" endtime="20201030 15:56:12.452"></status>
</kw>
<msg timestamp="20201030 15:56:12.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021969597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022039681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:12.165" endtime="20201030 15:56:12.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021969597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022039681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:12.456" endtime="20201030 15:56:12.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.464" endtime="20201030 15:56:12.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.162" endtime="20201030 15:56:12.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.160" endtime="20201030 15:56:12.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:12.471" level="INFO">${RESULT} = [{'diff': 7.008399999999804e-05}, {'diff': 6.944399999999837e-05}, {'diff': 6.991599999999973e-05}, {'diff': 7.017999999999955e-05}, {'diff': 6.945800000000141e-05}, {'diff': 6.950000000000012e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:12.468" endtime="20201030 15:56:12.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:12.476" level="INFO">${ACCURACY} = {'diff': [7.008399999999804e-05, 6.944399999999837e-05, 6.991599999999973e-05, 7.017999999999955e-05, 6.945800000000141e-05, 6.950000000000012e-05, 6.952799999999926e-05, 7.023599999999783e-05, 6.9415...</msg>
<status status="PASS" starttime="20201030 15:56:12.472" endtime="20201030 15:56:12.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.480" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 15:56:12.479" endtime="20201030 15:56:12.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.483" level="INFO">VALUE: [7.008399999999804e-05, 6.944399999999837e-05, 6.991599999999973e-05, 7.017999999999955e-05, 6.945800000000141e-05, 6.950000000000012e-05, 6.952799999999926e-05, 7.023599999999783e-05, 6.941599999999923e-05, 6.966699999999895e-05, 6.952799999999926e-05, 6.987500000000049e-05, 6.983300000000178e-05, 7.019499999999859e-05, 6.959699999999763e-05, 6.943100000000174e-05, 6.940299999999913e-05, 6.975000000000037e-05, 6.988900000000006e-05, 7.001400000000019e-05, 6.955600000000187e-05, 7.016599999999998e-05, 7.012500000000074e-05, 6.943099999999827e-05, 7.02910000000001e-05, 6.990200000000016e-05, 6.945799999999794e-05, 7.005499999999942e-05, 7.018000000000302e-05, 7.033300000000228e-05, 6.968000000000252e-05, 7.033300000000228e-05, 7.031899999999924e-05, 6.977799999999951e-05, 6.938899999999956e-05, 6.990299999999963e-05, 6.952799999999926e-05, 6.976399999999994e-05, 7.007000000000194e-05, 6.937499999999999e-05, 7.004199999999933e-05, 7.018100000000249e-05, 7.030599999999915e-05, 6.994499999999834e-05, 6.979199999999908e-05, 6.991700000000267e-05, 6.965199999999991e-05, 7.025000000000087e-05, 7.020799999999869e-05, 6.984700000000135e-05]</msg>
<status status="PASS" starttime="20201030 15:56:12.481" endtime="20201030 15:56:12.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.477" endtime="20201030 15:56:12.484"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:12.488" endtime="20201030 15:56:12.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.486" endtime="20201030 15:56:12.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.485" endtime="20201030 15:56:12.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.128" endtime="20201030 15:56:12.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.128" endtime="20201030 15:56:12.508"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.517" endtime="20201030 15:56:12.535"></status>
</kw>
<msg timestamp="20201030 15:56:12.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.515" endtime="20201030 15:56:12.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.537" endtime="20201030 15:56:12.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.539" endtime="20201030 15:56:12.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.513" endtime="20201030 15:56:12.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.511" endtime="20201030 15:56:12.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.548" endtime="20201030 15:56:12.837"></status>
</kw>
<msg timestamp="20201030 15:56:12.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022049181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022119819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:12.547" endtime="20201030 15:56:12.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022049181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022119819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:12.841" endtime="20201030 15:56:12.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.849" endtime="20201030 15:56:12.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.544" endtime="20201030 15:56:12.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.542" endtime="20201030 15:56:12.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:12.855" level="INFO">${RESULT} = [{'diff': 7.063799999999787e-05}, {'diff': 7.06109999999982e-05}, {'diff': 7.134699999999938e-05}, {'diff': 7.094399999999987e-05}, {'diff': 7.130500000000067e-05}, {'diff': 7.122199999999926e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:12.852" endtime="20201030 15:56:12.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:12.859" level="INFO">${ACCURACY} = {'diff': [7.063799999999787e-05, 7.06109999999982e-05, 7.134699999999938e-05, 7.094399999999987e-05, 7.130500000000067e-05, 7.122199999999926e-05, 7.045799999999894e-05, 7.058299999999906e-05, 7.03749...</msg>
<status status="PASS" starttime="20201030 15:56:12.856" endtime="20201030 15:56:12.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.864" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 15:56:12.863" endtime="20201030 15:56:12.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.866" level="INFO">VALUE: [7.063799999999787e-05, 7.06109999999982e-05, 7.134699999999938e-05, 7.094399999999987e-05, 7.130500000000067e-05, 7.122199999999926e-05, 7.045799999999894e-05, 7.058299999999906e-05, 7.037499999999752e-05, 7.098599999999858e-05, 7.036100000000142e-05, 7.07499999999979e-05, 7.066699999999995e-05, 7.040300000000013e-05, 7.065300000000038e-05, 7.087500000000149e-05, 7.054199999999983e-05, 7.106999999999947e-05, 7.037500000000099e-05, 7.086099999999845e-05, 7.094499999999934e-05, 7.040300000000013e-05, 7.066599999999701e-05, 7.125000000000187e-05, 7.081899999999974e-05, 7.133299999999981e-05, 7.102799999999729e-05, 7.07499999999979e-05, 7.031899999999924e-05, 7.038900000000056e-05, 7.048599999999808e-05, 7.11109999999987e-05, 7.115300000000088e-05, 7.051399999999722e-05, 7.097199999999901e-05, 7.12360000000023e-05, 7.119499999999959e-05, 7.063899999999734e-05, 7.087499999999802e-05, 7.115300000000088e-05, 7.068099999999952e-05, 7.094499999999934e-05, 7.070900000000213e-05, 7.077800000000051e-05, 7.084800000000183e-05, 7.104100000000085e-05, 7.137499999999852e-05, 7.069399999999962e-05, 7.131900000000024e-05, 7.05970000000021e-05]</msg>
<status status="PASS" starttime="20201030 15:56:12.865" endtime="20201030 15:56:12.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.860" endtime="20201030 15:56:12.868"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:12.871" endtime="20201030 15:56:12.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.870" endtime="20201030 15:56:12.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.869" endtime="20201030 15:56:12.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.509" endtime="20201030 15:56:12.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.509" endtime="20201030 15:56:12.892"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.900" endtime="20201030 15:56:12.919"></status>
</kw>
<msg timestamp="20201030 15:56:12.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.899" endtime="20201030 15:56:12.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.921" endtime="20201030 15:56:12.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.923" endtime="20201030 15:56:12.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.896" endtime="20201030 15:56:12.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.894" endtime="20201030 15:56:12.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.932" endtime="20201030 15:56:13.218"></status>
</kw>
<msg timestamp="20201030 15:56:13.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023017333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023089264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:12.930" endtime="20201030 15:56:13.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023017333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023089264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:13.222" endtime="20201030 15:56:13.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.230" endtime="20201030 15:56:13.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.928" endtime="20201030 15:56:13.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.926" endtime="20201030 15:56:13.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:13.236" level="INFO">${RESULT} = [{'diff': 7.193100000000077e-05}, {'diff': 7.183300000000031e-05}, {'diff': 7.1762999999999e-05}, {'diff': 7.163899999999834e-05}, {'diff': 7.156999999999997e-05}, {'diff': 7.136099999999895e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:13.233" endtime="20201030 15:56:13.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:13.241" level="INFO">${ACCURACY} = {'diff': [7.193100000000077e-05, 7.183300000000031e-05, 7.1762999999999e-05, 7.163899999999834e-05, 7.156999999999997e-05, 7.136099999999895e-05, 7.212499999999927e-05, 7.152799999999779e-05, 7.213899...</msg>
<status status="PASS" starttime="20201030 15:56:13.237" endtime="20201030 15:56:13.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.245" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 15:56:13.244" endtime="20201030 15:56:13.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.247" level="INFO">VALUE: [7.193100000000077e-05, 7.183300000000031e-05, 7.1762999999999e-05, 7.163899999999834e-05, 7.156999999999997e-05, 7.136099999999895e-05, 7.212499999999927e-05, 7.152799999999779e-05, 7.213899999999884e-05, 7.158300000000006e-05, 7.201299999999924e-05, 7.176400000000194e-05, 7.194400000000087e-05, 7.234699999999691e-05, 7.209700000000013e-05, 7.195800000000044e-05, 7.227800000000201e-05, 7.169399999999715e-05, 7.213899999999884e-05, 7.149999999999865e-05, 7.188900000000206e-05, 7.151400000000169e-05, 7.163899999999834e-05, 7.17499999999989e-05, 7.208400000000004e-05, 7.215300000000188e-05, 7.137500000000199e-05, 7.15690000000005e-05, 7.170899999999966e-05, 7.187500000000249e-05, 7.201399999999872e-05, 7.234700000000038e-05, 7.218099999999755e-05, 7.183300000000031e-05, 7.137500000000199e-05, 7.222200000000026e-05, 7.155500000000092e-05, 7.209700000000013e-05, 7.148599999999908e-05, 7.216599999999851e-05, 7.154200000000083e-05, 7.218100000000102e-05, 7.212499999999927e-05, 7.201399999999872e-05, 7.197200000000001e-05, 7.177700000000203e-05, 7.233400000000029e-05, 7.15560000000004e-05, 7.159699999999963e-05, 7.177800000000151e-05]</msg>
<status status="PASS" starttime="20201030 15:56:13.246" endtime="20201030 15:56:13.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.241" endtime="20201030 15:56:13.250"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:13.253" endtime="20201030 15:56:13.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.252" endtime="20201030 15:56:13.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.250" endtime="20201030 15:56:13.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.893" endtime="20201030 15:56:13.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.892" endtime="20201030 15:56:13.274"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.282" endtime="20201030 15:56:13.300"></status>
</kw>
<msg timestamp="20201030 15:56:13.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:13.281" endtime="20201030 15:56:13.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:13.302" endtime="20201030 15:56:13.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.304" endtime="20201030 15:56:13.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.278" endtime="20201030 15:56:13.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.276" endtime="20201030 15:56:13.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.313" endtime="20201030 15:56:13.599"></status>
</kw>
<msg timestamp="20201030 15:56:13.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021804681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021878, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:56:13.312" endtime="20201030 15:56:13.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021804681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021878, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:56:13.603" endtime="20201030 15:56:13.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.611" endtime="20201030 15:56:13.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.309" endtime="20201030 15:56:13.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.308" endtime="20201030 15:56:13.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:13.618" level="INFO">${RESULT} = [{'diff': 7.331900000000224e-05}, {'diff': 7.268099999999805e-05}, {'diff': 7.320899999999769e-05}, {'diff': 7.305500000000242e-05}, {'diff': 7.242999999999833e-05}, {'diff': 7.28049999999987e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:13.615" endtime="20201030 15:56:13.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:13.623" level="INFO">${ACCURACY} = {'diff': [7.331900000000224e-05, 7.268099999999805e-05, 7.320899999999769e-05, 7.305500000000242e-05, 7.242999999999833e-05, 7.28049999999987e-05, 7.327799999999954e-05, 7.301399999999972e-05, 7.31250...</msg>
<status status="PASS" starttime="20201030 15:56:13.619" endtime="20201030 15:56:13.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.627" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 15:56:13.626" endtime="20201030 15:56:13.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.630" level="INFO">VALUE: [7.331900000000224e-05, 7.268099999999805e-05, 7.320899999999769e-05, 7.305500000000242e-05, 7.242999999999833e-05, 7.28049999999987e-05, 7.327799999999954e-05, 7.301399999999972e-05, 7.312500000000027e-05, 7.287500000000002e-05, 7.29309999999983e-05, 7.259699999999716e-05, 7.279199999999861e-05, 7.30829999999981e-05, 7.288899999999959e-05, 7.302799999999929e-05, 7.249999999999965e-05, 7.270900000000066e-05, 7.251399999999922e-05, 7.326399999999997e-05, 7.324999999999693e-05, 7.248600000000008e-05, 7.331999999999825e-05, 7.313800000000037e-05, 7.32630000000005e-05, 7.24170000000017e-05, 7.304099999999938e-05, 7.326399999999997e-05, 7.272200000000076e-05, 7.302799999999929e-05, 7.302799999999929e-05, 7.288899999999959e-05, 7.292999999999883e-05, 7.308300000000156e-05, 7.327800000000301e-05, 7.334699999999791e-05, 7.248600000000008e-05, 7.308400000000104e-05, 7.26110000000002e-05, 7.27499999999999e-05, 7.290299999999916e-05, 7.337500000000052e-05, 7.266700000000195e-05, 7.251399999999922e-05, 7.248600000000008e-05, 7.251399999999922e-05, 7.247200000000051e-05, 7.262499999999977e-05, 7.255500000000192e-05, 7.273600000000033e-05]</msg>
<status status="PASS" starttime="20201030 15:56:13.628" endtime="20201030 15:56:13.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.623" endtime="20201030 15:56:13.631"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:13.634" endtime="20201030 15:56:13.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.633" endtime="20201030 15:56:13.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.632" endtime="20201030 15:56:13.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.275" endtime="20201030 15:56:13.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.274" endtime="20201030 15:56:13.655"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.664" endtime="20201030 15:56:13.681"></status>
</kw>
<msg timestamp="20201030 15:56:13.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:13.662" endtime="20201030 15:56:13.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:13.683" endtime="20201030 15:56:13.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.686" endtime="20201030 15:56:13.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.660" endtime="20201030 15:56:13.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.658" endtime="20201030 15:56:13.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.694" endtime="20201030 15:56:13.980"></status>
</kw>
<msg timestamp="20201030 15:56:13.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021802292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021876472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:13.693" endtime="20201030 15:56:13.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021802292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021876472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:13.984" endtime="20201030 15:56:13.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.992" endtime="20201030 15:56:13.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.690" endtime="20201030 15:56:13.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.689" endtime="20201030 15:56:13.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:13.999" level="INFO">${RESULT} = [{'diff': 7.418000000000008e-05}, {'diff': 7.350000000000065e-05}, {'diff': 7.383299999999884e-05}, {'diff': 7.352799999999979e-05}, {'diff': 7.42500000000014e-05}, {'diff': 7.334700000000138e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:13.996" endtime="20201030 15:56:13.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:14.003" level="INFO">${ACCURACY} = {'diff': [7.418000000000008e-05, 7.350000000000065e-05, 7.383299999999884e-05, 7.352799999999979e-05, 7.42500000000014e-05, 7.334700000000138e-05, 7.416699999999998e-05, 7.39439999999994e-05, 7.418099...</msg>
<status status="PASS" starttime="20201030 15:56:14.000" endtime="20201030 15:56:14.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.007" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 15:56:14.006" endtime="20201030 15:56:14.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.010" level="INFO">VALUE: [7.418000000000008e-05, 7.350000000000065e-05, 7.383299999999884e-05, 7.352799999999979e-05, 7.42500000000014e-05, 7.334700000000138e-05, 7.416699999999998e-05, 7.39439999999994e-05, 7.418099999999955e-05, 7.351400000000022e-05, 7.350000000000065e-05, 7.393100000000277e-05, 7.352799999999979e-05, 7.379199999999961e-05, 7.358400000000154e-05, 7.366600000000001e-05, 7.376400000000047e-05, 7.348700000000055e-05, 7.42769999999976e-05, 7.416599999999704e-05, 7.404100000000038e-05, 7.39439999999994e-05, 7.342999999999933e-05, 7.355499999999945e-05, 7.359700000000163e-05, 7.401400000000072e-05, 7.423599999999836e-05, 7.387500000000102e-05, 7.359800000000111e-05, 7.35699999999985e-05, 7.348600000000108e-05, 7.383300000000231e-05, 7.340299999999966e-05, 7.404100000000038e-05, 7.418099999999955e-05, 7.350000000000065e-05, 7.369399999999915e-05, 7.354199999999936e-05, 7.392999999999983e-05, 7.359700000000163e-05, 7.437500000000152e-05, 7.436099999999848e-05, 7.338899999999662e-05, 7.405499999999995e-05, 7.363899999999687e-05, 7.362500000000077e-05, 7.337500000000052e-05, 7.372200000000176e-05, 7.402800000000029e-05, 7.42639999999975e-05]</msg>
<status status="PASS" starttime="20201030 15:56:14.008" endtime="20201030 15:56:14.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.004" endtime="20201030 15:56:14.011"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:14.015" endtime="20201030 15:56:14.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.013" endtime="20201030 15:56:14.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.012" endtime="20201030 15:56:14.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.656" endtime="20201030 15:56:14.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.656" endtime="20201030 15:56:14.035"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.044" endtime="20201030 15:56:14.062"></status>
</kw>
<msg timestamp="20201030 15:56:14.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.042" endtime="20201030 15:56:14.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.064" endtime="20201030 15:56:14.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.066" endtime="20201030 15:56:14.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.040" endtime="20201030 15:56:14.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.038" endtime="20201030 15:56:14.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.075" endtime="20201030 15:56:14.360"></status>
</kw>
<msg timestamp="20201030 15:56:14.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022735222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022810167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:14.074" endtime="20201030 15:56:14.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022735222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022810167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:14.364" endtime="20201030 15:56:14.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.373" endtime="20201030 15:56:14.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.071" endtime="20201030 15:56:14.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.069" endtime="20201030 15:56:14.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:14.379" level="INFO">${RESULT} = [{'diff': 7.494499999999987e-05}, {'diff': 7.459699999999916e-05}, {'diff': 7.473599999999886e-05}, {'diff': 7.434699999999891e-05}, {'diff': 7.452800000000079e-05}, {'diff': 7.486099999999898e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:14.376" endtime="20201030 15:56:14.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:14.383" level="INFO">${ACCURACY} = {'diff': [7.494499999999987e-05, 7.459699999999916e-05, 7.473599999999886e-05, 7.434699999999891e-05, 7.452800000000079e-05, 7.486099999999898e-05, 7.494499999999987e-05, 7.457000000000297e-05, 7.4375...</msg>
<status status="PASS" starttime="20201030 15:56:14.380" endtime="20201030 15:56:14.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.388" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 15:56:14.387" endtime="20201030 15:56:14.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.390" level="INFO">VALUE: [7.494499999999987e-05, 7.459699999999916e-05, 7.473599999999886e-05, 7.434699999999891e-05, 7.452800000000079e-05, 7.486099999999898e-05, 7.494499999999987e-05, 7.457000000000297e-05, 7.437500000000152e-05, 7.437499999999805e-05, 7.498600000000258e-05, 7.450000000000165e-05, 7.520800000000022e-05, 7.515200000000194e-05, 7.481900000000027e-05, 7.437499999999805e-05, 7.502799999999782e-05, 7.504199999999739e-05, 7.51110000000027e-05, 7.452799999999732e-05, 7.452799999999732e-05, 7.473599999999886e-05, 7.459699999999916e-05, 7.484700000000288e-05, 7.470899999999919e-05, 7.477700000000156e-05, 7.508399999999957e-05, 7.45699999999995e-05, 7.455500000000045e-05, 7.462500000000177e-05, 7.522299999999926e-05, 7.487500000000202e-05, 7.468000000000058e-05, 7.437499999999805e-05, 7.518000000000108e-05, 7.497199999999954e-05, 7.491599999999779e-05, 7.501399999999825e-05, 7.524999999999893e-05, 7.509699999999966e-05, 7.533300000000034e-05, 7.488899999999812e-05, 7.444499999999937e-05, 7.512500000000227e-05, 7.501399999999825e-05, 7.505600000000043e-05, 7.470899999999919e-05, 7.449999999999818e-05, 7.494499999999987e-05, 7.468000000000058e-05]</msg>
<status status="PASS" starttime="20201030 15:56:14.389" endtime="20201030 15:56:14.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.384" endtime="20201030 15:56:14.392"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:14.396" endtime="20201030 15:56:14.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.395" endtime="20201030 15:56:14.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.393" endtime="20201030 15:56:14.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.036" endtime="20201030 15:56:14.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.036" endtime="20201030 15:56:14.417"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.425" endtime="20201030 15:56:14.443"></status>
</kw>
<msg timestamp="20201030 15:56:14.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.424" endtime="20201030 15:56:14.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.445" endtime="20201030 15:56:14.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.448" endtime="20201030 15:56:14.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.421" endtime="20201030 15:56:14.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.419" endtime="20201030 15:56:14.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.457" endtime="20201030 15:56:14.741"></status>
</kw>
<msg timestamp="20201030 15:56:14.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021884847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021961208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:14.455" endtime="20201030 15:56:14.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021884847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021961208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:14.745" endtime="20201030 15:56:14.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.753" endtime="20201030 15:56:14.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.452" endtime="20201030 15:56:14.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.451" endtime="20201030 15:56:14.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:14.760" level="INFO">${RESULT} = [{'diff': 7.636100000000048e-05}, {'diff': 7.586099999999998e-05}, {'diff': 7.591599999999879e-05}, {'diff': 7.583400000000032e-05}, {'diff': 7.620799999999775e-05}, {'diff': 7.545899999999994e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:14.757" endtime="20201030 15:56:14.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:14.765" level="INFO">${ACCURACY} = {'diff': [7.636100000000048e-05, 7.586099999999998e-05, 7.591599999999879e-05, 7.583400000000032e-05, 7.620799999999775e-05, 7.545899999999994e-05, 7.597200000000054e-05, 7.633300000000134e-05, 7.5360...</msg>
<status status="PASS" starttime="20201030 15:56:14.761" endtime="20201030 15:56:14.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.769" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 15:56:14.768" endtime="20201030 15:56:14.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.772" level="INFO">VALUE: [7.636100000000048e-05, 7.586099999999998e-05, 7.591599999999879e-05, 7.583400000000032e-05, 7.620799999999775e-05, 7.545899999999994e-05, 7.597200000000054e-05, 7.633300000000134e-05, 7.536099999999948e-05, 7.552799999999832e-05, 7.556999999999703e-05, 7.570900000000019e-05, 7.606999999999753e-05, 7.552800000000179e-05, 7.586099999999998e-05, 7.551399999999875e-05, 7.552800000000179e-05, 7.602799999999882e-05, 7.549999999999918e-05, 7.541600000000176e-05, 7.540199999999872e-05, 7.590300000000216e-05, 7.602799999999882e-05, 7.612500000000327e-05, 7.570800000000072e-05, 7.616699999999851e-05, 7.622200000000079e-05, 7.604200000000186e-05, 7.619499999999765e-05, 7.62639999999995e-05, 7.590300000000216e-05, 7.609700000000066e-05, 7.569499999999715e-05, 7.566700000000148e-05, 7.591699999999826e-05, 7.632000000000125e-05, 7.604100000000238e-05, 7.566700000000148e-05, 7.593000000000183e-05, 7.592999999999836e-05, 7.581900000000127e-05, 7.55830000000006e-05, 7.567999999999811e-05, 7.59029999999987e-05, 7.591699999999826e-05, 7.597199999999707e-05, 7.542999999999786e-05, 7.624999999999993e-05, 7.583299999999737e-05, 7.570900000000019e-05]</msg>
<status status="PASS" starttime="20201030 15:56:14.770" endtime="20201030 15:56:14.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.766" endtime="20201030 15:56:14.773"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:14.777" endtime="20201030 15:56:14.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.775" endtime="20201030 15:56:14.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.774" endtime="20201030 15:56:14.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.418" endtime="20201030 15:56:14.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.417" endtime="20201030 15:56:14.797"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.806" endtime="20201030 15:56:14.823"></status>
</kw>
<msg timestamp="20201030 15:56:14.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.804" endtime="20201030 15:56:14.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.825" endtime="20201030 15:56:14.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.827" endtime="20201030 15:56:14.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.802" endtime="20201030 15:56:14.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.800" endtime="20201030 15:56:14.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.836" endtime="20201030 15:56:15.124"></status>
</kw>
<msg timestamp="20201030 15:56:15.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021875486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021952694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:14.835" endtime="20201030 15:56:15.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021875486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021952694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:15.128" endtime="20201030 15:56:15.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.136" endtime="20201030 15:56:15.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.832" endtime="20201030 15:56:15.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.831" endtime="20201030 15:56:15.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:15.143" level="INFO">${RESULT} = [{'diff': 7.720799999999875e-05}, {'diff': 7.704099999999992e-05}, {'diff': 7.711100000000123e-05}, {'diff': 7.711100000000123e-05}, {'diff': 7.663899999999987e-05}, {'diff': 7.725000000000093e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:15.139" endtime="20201030 15:56:15.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:15.149" level="INFO">${ACCURACY} = {'diff': [7.720799999999875e-05, 7.704099999999992e-05, 7.711100000000123e-05, 7.711100000000123e-05, 7.663899999999987e-05, 7.725000000000093e-05, 7.655499999999898e-05, 7.656899999999855e-05, 7.6679...</msg>
<status status="PASS" starttime="20201030 15:56:15.145" endtime="20201030 15:56:15.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.156" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 15:56:15.154" endtime="20201030 15:56:15.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.160" level="INFO">VALUE: [7.720799999999875e-05, 7.704099999999992e-05, 7.711100000000123e-05, 7.711100000000123e-05, 7.663899999999987e-05, 7.725000000000093e-05, 7.655499999999898e-05, 7.656899999999855e-05, 7.667999999999911e-05, 7.733300000000234e-05, 7.668099999999858e-05, 7.704199999999939e-05, 7.727800000000007e-05, 7.729199999999964e-05, 7.733400000000182e-05, 7.661100000000073e-05, 7.651399999999975e-05, 7.697300000000101e-05, 7.66250000000003e-05, 7.700000000000068e-05, 7.670900000000119e-05, 7.698600000000111e-05, 7.701400000000025e-05, 7.650000000000018e-05, 7.723599999999789e-05, 7.720800000000222e-05, 7.688900000000012e-05, 7.708299999999862e-05, 7.702799999999982e-05, 7.644399999999843e-05, 7.659700000000116e-05, 7.680600000000218e-05, 7.656999999999803e-05, 7.647200000000104e-05, 7.669499999999815e-05, 7.715299999999994e-05, 7.643099999999833e-05, 7.64310000000018e-05, 7.702799999999982e-05, 7.697199999999807e-05, 7.697200000000154e-05, 7.679099999999967e-05, 7.716600000000004e-05, 7.670799999999825e-05, 7.68050000000027e-05, 7.644399999999843e-05, 7.672200000000129e-05, 7.648600000000061e-05, 7.698600000000111e-05, 7.725000000000093e-05]</msg>
<status status="PASS" starttime="20201030 15:56:15.158" endtime="20201030 15:56:15.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.150" endtime="20201030 15:56:15.162"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:15.168" endtime="20201030 15:56:15.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.166" endtime="20201030 15:56:15.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.164" endtime="20201030 15:56:15.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.798" endtime="20201030 15:56:15.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.798" endtime="20201030 15:56:15.189"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.198" endtime="20201030 15:56:15.216"></status>
</kw>
<msg timestamp="20201030 15:56:15.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:15.197" endtime="20201030 15:56:15.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:15.218" endtime="20201030 15:56:15.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.220" endtime="20201030 15:56:15.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.194" endtime="20201030 15:56:15.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.192" endtime="20201030 15:56:15.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.229" endtime="20201030 15:56:15.515"></status>
</kw>
<msg timestamp="20201030 15:56:15.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022948042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023026139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:15.228" endtime="20201030 15:56:15.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022948042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023026139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:15.519" endtime="20201030 15:56:15.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.527" endtime="20201030 15:56:15.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.225" endtime="20201030 15:56:15.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.223" endtime="20201030 15:56:15.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:15.534" level="INFO">${RESULT} = [{'diff': 7.809700000000266e-05}, {'diff': 7.829200000000064e-05}, {'diff': 7.818100000000008e-05}, {'diff': 7.802799999999735e-05}, {'diff': 7.780599999999971e-05}, {'diff': 7.781999999999928e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:15.530" endtime="20201030 15:56:15.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:15.538" level="INFO">${ACCURACY} = {'diff': [7.809700000000266e-05, 7.829200000000064e-05, 7.818100000000008e-05, 7.802799999999735e-05, 7.780599999999971e-05, 7.781999999999928e-05, 7.819499999999965e-05, 7.808400000000257e-05, 7.7653...</msg>
<status status="PASS" starttime="20201030 15:56:15.535" endtime="20201030 15:56:15.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.542" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 15:56:15.541" endtime="20201030 15:56:15.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.545" level="INFO">VALUE: [7.809700000000266e-05, 7.829200000000064e-05, 7.818100000000008e-05, 7.802799999999735e-05, 7.780599999999971e-05, 7.781999999999928e-05, 7.819499999999965e-05, 7.808400000000257e-05, 7.765300000000044e-05, 7.769400000000315e-05, 7.736099999999801e-05, 7.76250000000013e-05, 7.834699999999944e-05, 7.82640000000015e-05, 7.794399999999993e-05, 7.783300000000284e-05, 7.777800000000057e-05, 7.786099999999851e-05, 7.820899999999922e-05, 7.754199999999989e-05, 7.79449999999994e-05, 7.734699999999844e-05, 7.808299999999962e-05, 7.802800000000082e-05, 7.745900000000194e-05, 7.775000000000143e-05, 7.788900000000112e-05, 7.834799999999892e-05, 7.809800000000214e-05, 7.772199999999882e-05, 7.818000000000061e-05, 7.779100000000067e-05, 7.779100000000067e-05, 7.798599999999864e-05, 7.775000000000143e-05, 7.762499999999783e-05, 7.824999999999846e-05, 7.740299999999672e-05, 7.836099999999901e-05, 7.798599999999864e-05, 7.773600000000186e-05, 7.772199999999882e-05, 7.834700000000291e-05, 7.768099999999958e-05, 7.76250000000013e-05, 7.801400000000125e-05, 7.766700000000001e-05, 7.75839999999986e-05, 7.737500000000105e-05, 7.804100000000092e-05]</msg>
<status status="PASS" starttime="20201030 15:56:15.543" endtime="20201030 15:56:15.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.539" endtime="20201030 15:56:15.547"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:15.550" endtime="20201030 15:56:15.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.549" endtime="20201030 15:56:15.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.548" endtime="20201030 15:56:15.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.190" endtime="20201030 15:56:15.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.190" endtime="20201030 15:56:15.571"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.581" endtime="20201030 15:56:15.599"></status>
</kw>
<msg timestamp="20201030 15:56:15.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:15.579" endtime="20201030 15:56:15.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:15.600" endtime="20201030 15:56:15.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.603" endtime="20201030 15:56:15.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.576" endtime="20201030 15:56:15.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.574" endtime="20201030 15:56:15.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.612" endtime="20201030 15:56:15.897"></status>
</kw>
<msg timestamp="20201030 15:56:15.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022908194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022986944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:15.610" endtime="20201030 15:56:15.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022908194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022986944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:15.901" endtime="20201030 15:56:15.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.910" endtime="20201030 15:56:15.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.608" endtime="20201030 15:56:15.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.606" endtime="20201030 15:56:15.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:15.916" level="INFO">${RESULT} = [{'diff': 7.874999999999896e-05}, {'diff': 7.852699999999838e-05}, {'diff': 7.911199999999924e-05}, {'diff': 7.88190000000008e-05}, {'diff': 7.891599999999832e-05}, {'diff': 7.866600000000154e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:15.913" endtime="20201030 15:56:15.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:15.921" level="INFO">${ACCURACY} = {'diff': [7.874999999999896e-05, 7.852699999999838e-05, 7.911199999999924e-05, 7.88190000000008e-05, 7.891599999999832e-05, 7.866600000000154e-05, 7.90970000000002e-05, 7.920800000000075e-05, 7.866700...</msg>
<status status="PASS" starttime="20201030 15:56:15.917" endtime="20201030 15:56:15.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.925" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 15:56:15.924" endtime="20201030 15:56:15.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.928" level="INFO">VALUE: [7.874999999999896e-05, 7.852699999999838e-05, 7.911199999999924e-05, 7.88190000000008e-05, 7.891599999999832e-05, 7.866600000000154e-05, 7.90970000000002e-05, 7.920800000000075e-05, 7.866700000000101e-05, 7.88190000000008e-05, 7.920800000000075e-05, 7.901399999999878e-05, 7.94169999999983e-05, 7.868099999999711e-05, 7.90970000000002e-05, 7.85839999999996e-05, 7.845900000000294e-05, 7.84449999999999e-05, 7.89030000000017e-05, 7.887499999999908e-05, 7.927699999999913e-05, 7.927699999999913e-05, 7.874999999999896e-05, 7.927699999999913e-05, 7.908300000000063e-05, 7.872199999999982e-05, 7.905500000000149e-05, 7.920800000000075e-05, 7.847199999999957e-05, 7.852800000000132e-05, 7.844400000000043e-05, 7.865300000000144e-05, 7.884699999999994e-05, 7.880599999999724e-05, 7.886099999999951e-05, 7.893100000000083e-05, 7.918100000000108e-05, 7.887499999999908e-05, 7.91389999999989e-05, 7.919500000000065e-05, 7.887499999999908e-05, 7.904200000000139e-05, 7.856900000000056e-05, 7.918000000000161e-05, 7.916599999999857e-05, 7.838900000000162e-05, 7.852799999999785e-05, 7.89030000000017e-05, 7.888899999999865e-05, 7.855500000000099e-05]</msg>
<status status="PASS" starttime="20201030 15:56:15.927" endtime="20201030 15:56:15.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.922" endtime="20201030 15:56:15.929"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:15.933" endtime="20201030 15:56:15.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.931" endtime="20201030 15:56:15.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.930" endtime="20201030 15:56:15.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.572" endtime="20201030 15:56:15.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.572" endtime="20201030 15:56:15.953"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.962" endtime="20201030 15:56:15.980"></status>
</kw>
<msg timestamp="20201030 15:56:15.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:15.961" endtime="20201030 15:56:15.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:15.981" endtime="20201030 15:56:15.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.984" endtime="20201030 15:56:15.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.958" endtime="20201030 15:56:15.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.956" endtime="20201030 15:56:15.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.993" endtime="20201030 15:56:16.281"></status>
</kw>
<msg timestamp="20201030 15:56:16.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021770972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021851208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:15.991" endtime="20201030 15:56:16.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021770972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021851208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:16.285" endtime="20201030 15:56:16.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.293" endtime="20201030 15:56:16.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.989" endtime="20201030 15:56:16.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.987" endtime="20201030 15:56:16.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:16.300" level="INFO">${RESULT} = [{'diff': 8.023600000000089e-05}, {'diff': 8.03329999999984e-05}, {'diff': 7.995799999999803e-05}, {'diff': 8.026400000000003e-05}, {'diff': 7.988899999999965e-05}, {'diff': 7.948600000000014e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:16.296" endtime="20201030 15:56:16.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:16.304" level="INFO">${ACCURACY} = {'diff': [8.023600000000089e-05, 8.03329999999984e-05, 7.995799999999803e-05, 8.026400000000003e-05, 7.988899999999965e-05, 7.948600000000014e-05, 7.9458000000001e-05, 7.937499999999958e-05, 7.9527999...</msg>
<status status="PASS" starttime="20201030 15:56:16.301" endtime="20201030 15:56:16.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.308" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 15:56:16.307" endtime="20201030 15:56:16.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.310" level="INFO">VALUE: [8.023600000000089e-05, 8.03329999999984e-05, 7.995799999999803e-05, 8.026400000000003e-05, 7.988899999999965e-05, 7.948600000000014e-05, 7.9458000000001e-05, 7.937499999999958e-05, 7.952799999999885e-05, 8.007000000000153e-05, 7.990299999999922e-05, 7.945900000000047e-05, 7.991599999999932e-05, 7.966699999999854e-05, 7.998600000000064e-05, 7.987500000000008e-05, 8.031999999999831e-05, 8.000000000000021e-05, 8.00970000000012e-05, 7.936100000000001e-05, 8.006900000000206e-05, 8.027700000000013e-05, 7.959699999999723e-05, 7.947200000000057e-05, 7.940299999999872e-05, 8.033399999999788e-05, 8.000000000000021e-05, 7.965300000000244e-05, 8.015299999999947e-05, 7.981999999999781e-05, 7.9764000000003e-05, 7.983399999999738e-05, 8.001399999999978e-05, 7.947300000000004e-05, 7.973699999999986e-05, 7.948600000000014e-05, 7.963799999999993e-05, 8.006899999999859e-05, 8.01109999999973e-05, 8.002699999999988e-05, 8.000000000000021e-05, 7.988899999999965e-05, 7.96389999999994e-05, 7.938899999999915e-05, 7.984699999999748e-05, 7.972199999999735e-05, 7.997200000000107e-05, 8.025000000000046e-05, 7.966699999999854e-05, 8.023599999999742e-05]</msg>
<status status="PASS" starttime="20201030 15:56:16.309" endtime="20201030 15:56:16.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.305" endtime="20201030 15:56:16.312"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:16.315" endtime="20201030 15:56:16.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.314" endtime="20201030 15:56:16.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.313" endtime="20201030 15:56:16.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.954" endtime="20201030 15:56:16.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.954" endtime="20201030 15:56:16.336"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.345" endtime="20201030 15:56:16.364"></status>
</kw>
<msg timestamp="20201030 15:56:16.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:16.343" endtime="20201030 15:56:16.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:16.365" endtime="20201030 15:56:16.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.368" endtime="20201030 15:56:16.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.341" endtime="20201030 15:56:16.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.339" endtime="20201030 15:56:16.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.377" endtime="20201030 15:56:16.662"></status>
</kw>
<msg timestamp="20201030 15:56:16.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022611611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022693167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:16.375" endtime="20201030 15:56:16.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022611611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022693167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:16.666" endtime="20201030 15:56:16.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.674" endtime="20201030 15:56:16.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.372" endtime="20201030 15:56:16.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.371" endtime="20201030 15:56:16.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:16.681" level="INFO">${RESULT} = [{'diff': 8.155599999999999e-05}, {'diff': 8.131899999999984e-05}, {'diff': 8.112500000000133e-05}, {'diff': 8.045799999999853e-05}, {'diff': 8.058300000000213e-05}, {'diff': 8.09719999999986e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:16.677" endtime="20201030 15:56:16.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:16.685" level="INFO">${ACCURACY} = {'diff': [8.155599999999999e-05, 8.131899999999984e-05, 8.112500000000133e-05, 8.045799999999853e-05, 8.058300000000213e-05, 8.09719999999986e-05, 8.116700000000004e-05, 8.102800000000035e-05, 8.12920...</msg>
<status status="PASS" starttime="20201030 15:56:16.682" endtime="20201030 15:56:16.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.689" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 15:56:16.688" endtime="20201030 15:56:16.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.692" level="INFO">VALUE: [8.155599999999999e-05, 8.131899999999984e-05, 8.112500000000133e-05, 8.045799999999853e-05, 8.058300000000213e-05, 8.09719999999986e-05, 8.116700000000004e-05, 8.102800000000035e-05, 8.129200000000017e-05, 8.061100000000126e-05, 8.073600000000139e-05, 8.088900000000065e-05, 8.088900000000065e-05, 8.063800000000093e-05, 8.087499999999762e-05, 8.12910000000007e-05, 8.101400000000078e-05, 8.059699999999823e-05, 8.086100000000151e-05, 8.055600000000246e-05, 8.059699999999823e-05, 8.065299999999997e-05, 8.136100000000202e-05, 8.061100000000126e-05, 8.080600000000271e-05, 8.048699999999714e-05, 8.070900000000172e-05, 8.07780000000001e-05, 8.116700000000004e-05, 8.130599999999974e-05, 8.097299999999807e-05, 8.069500000000215e-05, 8.097300000000154e-05, 8.052700000000038e-05, 8.063800000000093e-05, 8.058299999999866e-05, 8.07910000000002e-05, 8.07910000000002e-05, 8.048599999999767e-05, 8.123600000000189e-05, 8.124999999999799e-05, 8.043099999999886e-05, 8.116700000000004e-05, 8.115300000000047e-05, 8.058399999999813e-05, 8.048599999999767e-05, 8.129200000000017e-05, 8.123599999999842e-05, 8.063899999999694e-05, 8.0458999999998e-05]</msg>
<status status="PASS" starttime="20201030 15:56:16.690" endtime="20201030 15:56:16.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.686" endtime="20201030 15:56:16.697"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:16.701" endtime="20201030 15:56:16.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.699" endtime="20201030 15:56:16.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.698" endtime="20201030 15:56:16.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.337" endtime="20201030 15:56:16.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.336" endtime="20201030 15:56:16.721"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.730" endtime="20201030 15:56:16.748"></status>
</kw>
<msg timestamp="20201030 15:56:16.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:16.728" endtime="20201030 15:56:16.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:16.749" endtime="20201030 15:56:16.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.752" endtime="20201030 15:56:16.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.726" endtime="20201030 15:56:16.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.724" endtime="20201030 15:56:16.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.761" endtime="20201030 15:56:17.046"></status>
</kw>
<msg timestamp="20201030 15:56:17.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021850722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021932722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:16.759" endtime="20201030 15:56:17.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021850722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021932722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:17.050" endtime="20201030 15:56:17.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.058" endtime="20201030 15:56:17.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.757" endtime="20201030 15:56:17.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.755" endtime="20201030 15:56:17.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:17.065" level="INFO">${RESULT} = [{'diff': 8.200000000000221e-05}, {'diff': 8.140300000000072e-05}, {'diff': 8.181900000000034e-05}, {'diff': 8.216700000000104e-05}, {'diff': 8.193000000000089e-05}, {'diff': 8.224999999999899e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:17.061" endtime="20201030 15:56:17.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:17.070" level="INFO">${ACCURACY} = {'diff': [8.200000000000221e-05, 8.140300000000072e-05, 8.181900000000034e-05, 8.216700000000104e-05, 8.193000000000089e-05, 8.224999999999899e-05, 8.215300000000147e-05, 8.143099999999986e-05, 8.1860...</msg>
<status status="PASS" starttime="20201030 15:56:17.066" endtime="20201030 15:56:17.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.074" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 15:56:17.073" endtime="20201030 15:56:17.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.076" level="INFO">VALUE: [8.200000000000221e-05, 8.140300000000072e-05, 8.181900000000034e-05, 8.216700000000104e-05, 8.193000000000089e-05, 8.224999999999899e-05, 8.215300000000147e-05, 8.143099999999986e-05, 8.186099999999905e-05, 8.172199999999935e-05, 8.17780000000011e-05, 8.183400000000285e-05, 8.194499999999993e-05, 8.188799999999871e-05, 8.218100000000061e-05, 8.195800000000003e-05, 8.218000000000114e-05, 8.16520000000015e-05, 8.168000000000064e-05, 8.236099999999955e-05, 8.202799999999788e-05, 8.176400000000153e-05, 8.198599999999917e-05, 8.156900000000009e-05, 8.181999999999981e-05, 8.206899999999712e-05, 8.181999999999981e-05, 8.152800000000085e-05, 8.19170000000008e-05, 8.230600000000074e-05, 8.19450000000034e-05, 8.222199999999985e-05, 8.184799999999895e-05, 8.165300000000097e-05, 8.209699999999973e-05, 8.17910000000012e-05, 8.167999999999717e-05, 8.226400000000203e-05, 8.141599999999735e-05, 8.154100000000095e-05, 8.205499999999755e-05, 8.145799999999953e-05, 8.148599999999867e-05, 8.236100000000302e-05, 8.176400000000153e-05, 8.236099999999955e-05, 8.155599999999999e-05, 8.233399999999988e-05, 8.177799999999763e-05, 8.175000000000196e-05]</msg>
<status status="PASS" starttime="20201030 15:56:17.075" endtime="20201030 15:56:17.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.070" endtime="20201030 15:56:17.078"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:17.081" endtime="20201030 15:56:17.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.080" endtime="20201030 15:56:17.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.079" endtime="20201030 15:56:17.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.722" endtime="20201030 15:56:17.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.722" endtime="20201030 15:56:17.102"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.111" endtime="20201030 15:56:17.129"></status>
</kw>
<msg timestamp="20201030 15:56:17.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:17.109" endtime="20201030 15:56:17.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:17.131" endtime="20201030 15:56:17.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.133" endtime="20201030 15:56:17.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.107" endtime="20201030 15:56:17.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.105" endtime="20201030 15:56:17.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.142" endtime="20201030 15:56:17.429"></status>
</kw>
<msg timestamp="20201030 15:56:17.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022051486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022134181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:17.141" endtime="20201030 15:56:17.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022051486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022134181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:17.433" endtime="20201030 15:56:17.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.442" endtime="20201030 15:56:17.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.138" endtime="20201030 15:56:17.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.137" endtime="20201030 15:56:17.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:17.448" level="INFO">${RESULT} = [{'diff': 8.269500000000068e-05}, {'diff': 8.247300000000304e-05}, {'diff': 8.272299999999982e-05}, {'diff': 8.282000000000081e-05}, {'diff': 8.31110000000003e-05}, {'diff': 8.331900000000184e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:17.445" endtime="20201030 15:56:17.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:17.452" level="INFO">${ACCURACY} = {'diff': [8.269500000000068e-05, 8.247300000000304e-05, 8.272299999999982e-05, 8.282000000000081e-05, 8.31110000000003e-05, 8.331900000000184e-05, 8.288899999999919e-05, 8.287499999999962e-05, 8.31800...</msg>
<status status="PASS" starttime="20201030 15:56:17.449" endtime="20201030 15:56:17.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.457" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 15:56:17.456" endtime="20201030 15:56:17.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.459" level="INFO">VALUE: [8.269500000000068e-05, 8.247300000000304e-05, 8.272299999999982e-05, 8.282000000000081e-05, 8.31110000000003e-05, 8.331900000000184e-05, 8.288899999999919e-05, 8.287499999999962e-05, 8.318000000000214e-05, 8.334700000000098e-05, 8.3152999999999e-05, 8.308299999999769e-05, 8.324999999999999e-05, 8.312499999999987e-05, 8.243100000000086e-05, 8.254200000000142e-05, 8.269500000000068e-05, 8.254200000000142e-05, 8.280599999999777e-05, 8.315300000000247e-05, 8.320900000000075e-05, 8.30980000000002e-05, 8.29720000000006e-05, 8.288899999999919e-05, 8.266600000000207e-05, 8.290200000000275e-05, 8.286100000000005e-05, 8.236099999999955e-05, 8.263899999999894e-05, 8.248599999999967e-05, 8.320799999999781e-05, 8.28330000000009e-05, 8.256900000000109e-05, 8.318100000000161e-05, 8.302800000000235e-05, 8.302799999999888e-05, 8.258300000000066e-05, 8.324999999999999e-05, 8.29590000000005e-05, 8.286100000000005e-05, 8.24170000000013e-05, 8.24720000000001e-05, 8.236200000000249e-05, 8.274999999999949e-05, 8.245800000000053e-05, 8.336100000000055e-05, 8.252800000000185e-05, 8.28049999999983e-05, 8.291599999999885e-05, 8.265300000000197e-05]</msg>
<status status="PASS" starttime="20201030 15:56:17.458" endtime="20201030 15:56:17.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.453" endtime="20201030 15:56:17.460"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:17.464" endtime="20201030 15:56:17.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.463" endtime="20201030 15:56:17.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.461" endtime="20201030 15:56:17.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.103" endtime="20201030 15:56:17.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.102" endtime="20201030 15:56:17.485"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.493" endtime="20201030 15:56:17.512"></status>
</kw>
<msg timestamp="20201030 15:56:17.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:17.492" endtime="20201030 15:56:17.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:17.514" endtime="20201030 15:56:17.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.517" endtime="20201030 15:56:17.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.489" endtime="20201030 15:56:17.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.487" endtime="20201030 15:56:17.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.527" endtime="20201030 15:56:17.812"></status>
</kw>
<msg timestamp="20201030 15:56:17.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022727611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022811444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:17.525" endtime="20201030 15:56:17.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022727611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022811444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:17.816" endtime="20201030 15:56:17.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.824" endtime="20201030 15:56:17.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.523" endtime="20201030 15:56:17.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.521" endtime="20201030 15:56:17.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:17.831" level="INFO">${RESULT} = [{'diff': 8.383299999999844e-05}, {'diff': 8.423599999999795e-05}, {'diff': 8.359699999999776e-05}, {'diff': 8.39720000000016e-05}, {'diff': 8.390300000000323e-05}, {'diff': 8.340300000000272e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:17.828" endtime="20201030 15:56:17.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:17.835" level="INFO">${ACCURACY} = {'diff': [8.383299999999844e-05, 8.423599999999795e-05, 8.359699999999776e-05, 8.39720000000016e-05, 8.390300000000323e-05, 8.340300000000272e-05, 8.391699999999933e-05, 8.356899999999862e-05, 8.41669...</msg>
<status status="PASS" starttime="20201030 15:56:17.832" endtime="20201030 15:56:17.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.840" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 15:56:17.839" endtime="20201030 15:56:17.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.842" level="INFO">VALUE: [8.383299999999844e-05, 8.423599999999795e-05, 8.359699999999776e-05, 8.39720000000016e-05, 8.390300000000323e-05, 8.340300000000272e-05, 8.391699999999933e-05, 8.356899999999862e-05, 8.416699999999958e-05, 8.405599999999902e-05, 8.383299999999844e-05, 8.420799999999881e-05, 8.401400000000031e-05, 8.347300000000057e-05, 8.366699999999908e-05, 8.382000000000181e-05, 8.370800000000178e-05, 8.397300000000107e-05, 8.388800000000071e-05, 8.387499999999715e-05, 8.404200000000292e-05, 8.359699999999776e-05, 8.37919999999992e-05, 8.388900000000019e-05, 8.337500000000012e-05, 8.406899999999912e-05, 8.436100000000155e-05, 8.405599999999902e-05, 8.43469999999985e-05, 8.359700000000123e-05, 8.418099999999915e-05, 8.382000000000181e-05, 8.398700000000064e-05, 8.423600000000142e-05, 8.40980000000012e-05, 8.386200000000052e-05, 8.437499999999765e-05, 8.362500000000037e-05, 8.417999999999967e-05, 8.358300000000166e-05, 8.425000000000099e-05, 8.358300000000166e-05, 8.41660000000001e-05, 8.356899999999862e-05, 8.363899999999994e-05, 8.423599999999795e-05, 8.391699999999933e-05, 8.423600000000142e-05, 8.43330000000024e-05, 8.419499999999872e-05]</msg>
<status status="PASS" starttime="20201030 15:56:17.841" endtime="20201030 15:56:17.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.836" endtime="20201030 15:56:17.844"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:17.848" endtime="20201030 15:56:17.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.846" endtime="20201030 15:56:17.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.845" endtime="20201030 15:56:17.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.486" endtime="20201030 15:56:17.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.485" endtime="20201030 15:56:17.868"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.877" endtime="20201030 15:56:17.895"></status>
</kw>
<msg timestamp="20201030 15:56:17.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:17.875" endtime="20201030 15:56:17.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:17.896" endtime="20201030 15:56:17.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.899" endtime="20201030 15:56:17.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.873" endtime="20201030 15:56:17.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.871" endtime="20201030 15:56:17.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.908" endtime="20201030 15:56:18.195"></status>
</kw>
<msg timestamp="20201030 15:56:18.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021802875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021888139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:17.906" endtime="20201030 15:56:18.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021802875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021888139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.199" endtime="20201030 15:56:18.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.207" endtime="20201030 15:56:18.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.904" endtime="20201030 15:56:18.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.902" endtime="20201030 15:56:18.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:18.213" level="INFO">${RESULT} = [{'diff': 8.526400000000156e-05}, {'diff': 8.482000000000281e-05}, {'diff': 8.455599999999952e-05}, {'diff': 8.473599999999845e-05}, {'diff': 8.523599999999895e-05}, {'diff': 8.476400000000106e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:18.210" endtime="20201030 15:56:18.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:18.218" level="INFO">${ACCURACY} = {'diff': [8.526400000000156e-05, 8.482000000000281e-05, 8.455599999999952e-05, 8.473599999999845e-05, 8.523599999999895e-05, 8.476400000000106e-05, 8.469499999999922e-05, 8.431899999999937e-05, 8.5014...</msg>
<status status="PASS" starttime="20201030 15:56:18.214" endtime="20201030 15:56:18.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.223" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 15:56:18.222" endtime="20201030 15:56:18.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.225" level="INFO">VALUE: [8.526400000000156e-05, 8.482000000000281e-05, 8.455599999999952e-05, 8.473599999999845e-05, 8.523599999999895e-05, 8.476400000000106e-05, 8.469499999999922e-05, 8.431899999999937e-05, 8.501400000000131e-05, 8.468000000000017e-05, 8.466599999999713e-05, 8.44720000000021e-05, 8.526399999999809e-05, 8.494399999999999e-05, 8.483299999999944e-05, 8.533299999999994e-05, 8.476400000000106e-05, 8.480599999999977e-05, 8.459699999999876e-05, 8.472199999999888e-05, 8.469499999999922e-05, 8.49309999999999e-05, 8.487499999999815e-05, 8.448600000000167e-05, 8.501299999999837e-05, 8.52920000000007e-05, 8.476399999999759e-05, 8.504199999999698e-05, 8.494399999999999e-05, 8.476299999999812e-05, 8.472200000000235e-05, 8.522200000000285e-05, 8.488899999999772e-05, 8.513899999999797e-05, 8.516700000000058e-05, 8.452800000000038e-05, 8.490300000000076e-05, 8.505600000000002e-05, 8.459699999999876e-05, 8.487499999999815e-05, 8.47920000000002e-05, 8.502800000000088e-05, 8.526400000000156e-05, 8.501400000000131e-05, 8.487499999999815e-05, 8.494499999999947e-05, 8.520799999999981e-05, 8.451400000000081e-05, 8.4846999999999e-05, 8.469399999999974e-05]</msg>
<status status="PASS" starttime="20201030 15:56:18.224" endtime="20201030 15:56:18.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.219" endtime="20201030 15:56:18.226"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:18.230" endtime="20201030 15:56:18.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.229" endtime="20201030 15:56:18.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.227" endtime="20201030 15:56:18.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.869" endtime="20201030 15:56:18.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.869" endtime="20201030 15:56:18.251"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.259" endtime="20201030 15:56:18.278"></status>
</kw>
<msg timestamp="20201030 15:56:18.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.258" endtime="20201030 15:56:18.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.279" endtime="20201030 15:56:18.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.282" endtime="20201030 15:56:18.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.255" endtime="20201030 15:56:18.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.253" endtime="20201030 15:56:18.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.291" endtime="20201030 15:56:18.577"></status>
</kw>
<msg timestamp="20201030 15:56:18.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021938542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.289" endtime="20201030 15:56:18.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021938542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.581" endtime="20201030 15:56:18.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.589" endtime="20201030 15:56:18.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.287" endtime="20201030 15:56:18.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.285" endtime="20201030 15:56:18.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:18.596" level="INFO">${RESULT} = [{'diff': 8.590299999999829e-05}, {'diff': 8.629199999999823e-05}, {'diff': 8.629199999999823e-05}, {'diff': 8.615299999999854e-05}, {'diff': 8.554099999999801e-05}, {'diff': 8.565200000000203e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:18.592" endtime="20201030 15:56:18.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:18.600" level="INFO">${ACCURACY} = {'diff': [8.590299999999829e-05, 8.629199999999823e-05, 8.629199999999823e-05, 8.615299999999854e-05, 8.554099999999801e-05, 8.565200000000203e-05, 8.586099999999958e-05, 8.606899999999765e-05, 8.6347...</msg>
<status status="PASS" starttime="20201030 15:56:18.597" endtime="20201030 15:56:18.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.604" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 15:56:18.603" endtime="20201030 15:56:18.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.607" level="INFO">VALUE: [8.590299999999829e-05, 8.629199999999823e-05, 8.629199999999823e-05, 8.615299999999854e-05, 8.554099999999801e-05, 8.565200000000203e-05, 8.586099999999958e-05, 8.606899999999765e-05, 8.63470000000005e-05, 8.626399999999909e-05, 8.545800000000006e-05, 8.599999999999927e-05, 8.598699999999918e-05, 8.597200000000013e-05, 8.61249999999994e-05, 8.620900000000029e-05, 8.572299999999936e-05, 8.613899999999897e-05, 8.632000000000084e-05, 8.582000000000034e-05, 8.555600000000052e-05, 8.576299999999912e-05, 8.545800000000006e-05, 8.597200000000013e-05, 8.593000000000142e-05, 8.556899999999715e-05, 8.605499999999808e-05, 8.541600000000135e-05, 8.56530000000015e-05, 8.626400000000256e-05, 8.588899999999872e-05, 8.602799999999841e-05, 8.609700000000026e-05, 8.607000000000059e-05, 8.608400000000016e-05, 8.584799999999948e-05, 8.569500000000022e-05, 8.618100000000115e-05, 8.602799999999841e-05, 8.579099999999826e-05, 8.597200000000013e-05, 8.561099999999933e-05, 8.597200000000013e-05, 8.536099999999908e-05, 8.577799999999816e-05, 8.545899999999954e-05, 8.5847e-05, 8.561099999999933e-05, 8.576400000000206e-05, 8.569500000000022e-05]</msg>
<status status="PASS" starttime="20201030 15:56:18.605" endtime="20201030 15:56:18.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.600" endtime="20201030 15:56:18.608"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:18.612" endtime="20201030 15:56:18.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.611" endtime="20201030 15:56:18.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.609" endtime="20201030 15:56:18.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.252" endtime="20201030 15:56:18.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.251" endtime="20201030 15:56:18.633"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.642" endtime="20201030 15:56:18.661"></status>
</kw>
<msg timestamp="20201030 15:56:18.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.640" endtime="20201030 15:56:18.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.663" endtime="20201030 15:56:18.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.666" endtime="20201030 15:56:18.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.638" endtime="20201030 15:56:18.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.636" endtime="20201030 15:56:18.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.674" endtime="20201030 15:56:18.960"></status>
</kw>
<msg timestamp="20201030 15:56:18.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022925264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023012736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.673" endtime="20201030 15:56:18.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022925264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023012736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.964" endtime="20201030 15:56:18.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.972" endtime="20201030 15:56:18.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.670" endtime="20201030 15:56:18.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.669" endtime="20201030 15:56:18.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:18.979" level="INFO">${RESULT} = [{'diff': 8.747199999999816e-05}, {'diff': 8.636100000000008e-05}, {'diff': 8.644400000000149e-05}, {'diff': 8.652800000000238e-05}, {'diff': 8.702799999999941e-05}, {'diff': 8.651299999999987e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:18.976" endtime="20201030 15:56:18.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:18.983" level="INFO">${ACCURACY} = {'diff': [8.747199999999816e-05, 8.636100000000008e-05, 8.644400000000149e-05, 8.652800000000238e-05, 8.702799999999941e-05, 8.651299999999987e-05, 8.690299999999929e-05, 8.649999999999977e-05, 8.6806...</msg>
<status status="PASS" starttime="20201030 15:56:18.980" endtime="20201030 15:56:18.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.988" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 15:56:18.987" endtime="20201030 15:56:18.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.991" level="INFO">VALUE: [8.747199999999816e-05, 8.636100000000008e-05, 8.644400000000149e-05, 8.652800000000238e-05, 8.702799999999941e-05, 8.651299999999987e-05, 8.690299999999929e-05, 8.649999999999977e-05, 8.680600000000177e-05, 8.73189999999989e-05, 8.729199999999923e-05, 8.645799999999759e-05, 8.729099999999976e-05, 8.669399999999827e-05, 8.659699999999729e-05, 8.651399999999934e-05, 8.644399999999802e-05, 8.638899999999922e-05, 8.644400000000149e-05, 8.733399999999794e-05, 8.676399999999959e-05, 8.676399999999959e-05, 8.725000000000052e-05, 8.68059999999983e-05, 8.661099999999686e-05, 8.709699999999779e-05, 8.654199999999848e-05, 8.636100000000008e-05, 8.691700000000233e-05, 8.680499999999883e-05, 8.673699999999993e-05, 8.651299999999987e-05, 8.675000000000002e-05, 8.720799999999834e-05, 8.670799999999784e-05, 8.637500000000312e-05, 8.725000000000052e-05, 8.68050000000023e-05, 8.720800000000181e-05, 8.649999999999977e-05, 8.702799999999941e-05, 8.672199999999741e-05, 8.658299999999772e-05, 8.698700000000018e-05, 8.637499999999965e-05, 8.638900000000269e-05, 8.722300000000086e-05, 8.654099999999901e-05, 8.672300000000036e-05, 8.670799999999784e-05]</msg>
<status status="PASS" starttime="20201030 15:56:18.989" endtime="20201030 15:56:18.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.984" endtime="20201030 15:56:18.992"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:18.996" endtime="20201030 15:56:19.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.994" endtime="20201030 15:56:19.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.993" endtime="20201030 15:56:19.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.634" endtime="20201030 15:56:19.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.633" endtime="20201030 15:56:19.016"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.025" endtime="20201030 15:56:19.044"></status>
</kw>
<msg timestamp="20201030 15:56:19.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.023" endtime="20201030 15:56:19.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.045" endtime="20201030 15:56:19.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.048" endtime="20201030 15:56:19.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.021" endtime="20201030 15:56:19.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.019" endtime="20201030 15:56:19.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.057" endtime="20201030 15:56:19.343"></status>
</kw>
<msg timestamp="20201030 15:56:19.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021904833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021992931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:19.055" endtime="20201030 15:56:19.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021904833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021992931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:19.347" endtime="20201030 15:56:19.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.355" endtime="20201030 15:56:19.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.053" endtime="20201030 15:56:19.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.051" endtime="20201030 15:56:19.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:19.361" level="INFO">${RESULT} = [{'diff': 8.809800000000173e-05}, {'diff': 8.819399999999977e-05}, {'diff': 8.773600000000145e-05}, {'diff': 8.745799999999859e-05}, {'diff': 8.805500000000008e-05}, {'diff': 8.81800000000002e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:19.358" endtime="20201030 15:56:19.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:19.366" level="INFO">${ACCURACY} = {'diff': [8.809800000000173e-05, 8.819399999999977e-05, 8.773600000000145e-05, 8.745799999999859e-05, 8.805500000000008e-05, 8.81800000000002e-05, 8.758399999999819e-05, 8.74449999999985e-05, 8.787500...</msg>
<status status="PASS" starttime="20201030 15:56:19.362" endtime="20201030 15:56:19.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.371" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 15:56:19.370" endtime="20201030 15:56:19.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.373" level="INFO">VALUE: [8.809800000000173e-05, 8.819399999999977e-05, 8.773600000000145e-05, 8.745799999999859e-05, 8.805500000000008e-05, 8.81800000000002e-05, 8.758399999999819e-05, 8.74449999999985e-05, 8.787500000000115e-05, 8.765300000000004e-05, 8.758299999999872e-05, 8.787499999999768e-05, 8.825000000000152e-05, 8.822199999999891e-05, 8.813900000000097e-05, 8.811100000000183e-05, 8.83059999999998e-05, 8.822300000000186e-05, 8.752799999999991e-05, 8.834799999999851e-05, 8.809700000000226e-05, 8.741599999999988e-05, 8.81519999999976e-05, 8.826399999999762e-05, 8.736099999999761e-05, 8.819400000000324e-05, 8.773600000000145e-05, 8.78189999999994e-05, 8.791699999999986e-05, 8.791699999999986e-05, 8.788900000000072e-05, 8.776400000000059e-05, 8.818099999999968e-05, 8.820799999999934e-05, 8.788900000000072e-05, 8.751400000000034e-05, 8.763900000000047e-05, 8.777800000000016e-05, 8.776300000000112e-05, 8.751400000000034e-05, 8.766600000000013e-05, 8.791699999999986e-05, 8.765300000000004e-05, 8.772200000000188e-05, 8.741699999999936e-05, 8.780600000000277e-05, 8.793099999999943e-05, 8.74999999999973e-05, 8.790300000000029e-05, 8.836100000000208e-05]</msg>
<status status="PASS" starttime="20201030 15:56:19.372" endtime="20201030 15:56:19.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.367" endtime="20201030 15:56:19.375"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:19.378" endtime="20201030 15:56:19.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.377" endtime="20201030 15:56:19.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.376" endtime="20201030 15:56:19.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.017" endtime="20201030 15:56:19.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.017" endtime="20201030 15:56:19.399"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.408" endtime="20201030 15:56:19.425"></status>
</kw>
<msg timestamp="20201030 15:56:19.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.406" endtime="20201030 15:56:19.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.427" endtime="20201030 15:56:19.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.429" endtime="20201030 15:56:19.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.403" endtime="20201030 15:56:19.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.401" endtime="20201030 15:56:19.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.438" endtime="20201030 15:56:19.727"></status>
</kw>
<msg timestamp="20201030 15:56:19.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021991361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02208075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:19.437" endtime="20201030 15:56:19.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021991361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02208075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:19.732" endtime="20201030 15:56:19.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.740" endtime="20201030 15:56:19.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.434" endtime="20201030 15:56:19.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.433" endtime="20201030 15:56:19.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:19.746" level="INFO">${RESULT} = [{'diff': 8.938899999999875e-05}, {'diff': 8.908300000000022e-05}, {'diff': 8.859699999999929e-05}, {'diff': 8.932000000000037e-05}, {'diff': 8.852799999999744e-05}, {'diff': 8.91389999999985e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:19.743" endtime="20201030 15:56:19.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:19.750" level="INFO">${ACCURACY} = {'diff': [8.938899999999875e-05, 8.908300000000022e-05, 8.859699999999929e-05, 8.932000000000037e-05, 8.852799999999744e-05, 8.91389999999985e-05, 8.870799999999984e-05, 8.911199999999883e-05, 8.90549...</msg>
<status status="PASS" starttime="20201030 15:56:19.747" endtime="20201030 15:56:19.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.755" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 15:56:19.754" endtime="20201030 15:56:19.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.757" level="INFO">VALUE: [8.938899999999875e-05, 8.908300000000022e-05, 8.859699999999929e-05, 8.932000000000037e-05, 8.852799999999744e-05, 8.91389999999985e-05, 8.870799999999984e-05, 8.911199999999883e-05, 8.905499999999761e-05, 8.900000000000227e-05, 8.894400000000052e-05, 8.902699999999847e-05, 8.886099999999911e-05, 8.900000000000227e-05, 8.869400000000027e-05, 8.84310000000034e-05, 8.913900000000197e-05, 8.916699999999764e-05, 8.858299999999972e-05, 8.863900000000147e-05, 8.879200000000073e-05, 8.912499999999893e-05, 8.904200000000098e-05, 8.895800000000009e-05, 8.918100000000068e-05, 8.89999999999988e-05, 8.905600000000055e-05, 8.872199999999941e-05, 8.88190000000004e-05, 8.888900000000172e-05, 8.924999999999905e-05, 8.919400000000077e-05, 8.86800000000007e-05, 8.923599999999948e-05, 8.875000000000202e-05, 8.844400000000002e-05, 8.929200000000123e-05, 8.917999999999773e-05, 8.901399999999837e-05, 8.934799999999951e-05, 8.909699999999979e-05, 8.856900000000015e-05, 8.845899999999907e-05, 8.845900000000254e-05, 8.908399999999969e-05, 8.836099999999861e-05, 8.894400000000052e-05, 8.847199999999916e-05, 8.848599999999873e-05, 8.926399999999862e-05]</msg>
<status status="PASS" starttime="20201030 15:56:19.756" endtime="20201030 15:56:19.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.751" endtime="20201030 15:56:19.759"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:19.762" endtime="20201030 15:56:19.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.761" endtime="20201030 15:56:19.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.760" endtime="20201030 15:56:19.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.400" endtime="20201030 15:56:19.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.399" endtime="20201030 15:56:19.783"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.791" endtime="20201030 15:56:19.811"></status>
</kw>
<msg timestamp="20201030 15:56:19.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.790" endtime="20201030 15:56:19.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.813" endtime="20201030 15:56:19.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.815" endtime="20201030 15:56:19.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.787" endtime="20201030 15:56:19.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.785" endtime="20201030 15:56:19.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.824" endtime="20201030 15:56:20.110"></status>
</kw>
<msg timestamp="20201030 15:56:20.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022701139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022791375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:19.822" endtime="20201030 15:56:20.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022701139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022791375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:20.114" endtime="20201030 15:56:20.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.122" endtime="20201030 15:56:20.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.820" endtime="20201030 15:56:20.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.818" endtime="20201030 15:56:20.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:20.129" level="INFO">${RESULT} = [{'diff': 9.023600000000048e-05}, {'diff': 9.006899999999818e-05}, {'diff': 8.993100000000143e-05}, {'diff': 8.948599999999973e-05}, {'diff': 8.976399999999912e-05}, {'diff': 9.001399999999937e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:20.125" endtime="20201030 15:56:20.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:20.133" level="INFO">${ACCURACY} = {'diff': [9.023600000000048e-05, 9.006899999999818e-05, 8.993100000000143e-05, 8.948599999999973e-05, 8.976399999999912e-05, 9.001399999999937e-05, 8.98060000000013e-05, 9.023699999999996e-05, 8.94450...</msg>
<status status="PASS" starttime="20201030 15:56:20.130" endtime="20201030 15:56:20.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.137" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 15:56:20.136" endtime="20201030 15:56:20.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.140" level="INFO">VALUE: [9.023600000000048e-05, 9.006899999999818e-05, 8.993100000000143e-05, 8.948599999999973e-05, 8.976399999999912e-05, 9.001399999999937e-05, 8.98060000000013e-05, 9.023699999999996e-05, 8.94450000000005e-05, 8.974999999999955e-05, 9.033399999999747e-05, 9.008300000000122e-05, 8.954099999999854e-05, 8.956900000000115e-05, 8.963900000000247e-05, 9.015299999999907e-05, 8.99999999999998e-05, 9.026399999999962e-05, 9.019500000000125e-05, 8.98329999999975e-05, 8.995800000000109e-05, 8.94450000000005e-05, 8.959700000000029e-05, 9.005599999999808e-05, 8.947299999999964e-05, 8.977799999999869e-05, 8.98190000000014e-05, 8.969400000000127e-05, 8.95129999999994e-05, 8.980499999999836e-05, 8.936099999999961e-05, 8.943000000000145e-05, 9.009700000000079e-05, 8.990299999999882e-05, 8.995800000000109e-05, 8.948599999999973e-05, 8.956900000000115e-05, 8.987499999999968e-05, 8.977799999999869e-05, 8.979200000000173e-05, 8.980599999999783e-05, 8.968100000000118e-05, 9.005600000000155e-05, 9.019499999999778e-05, 8.945900000000007e-05, 9.0332999999998e-05, 8.945800000000059e-05, 8.991599999999891e-05, 8.956899999999768e-05, 9.004099999999904e-05]</msg>
<status status="PASS" starttime="20201030 15:56:20.138" endtime="20201030 15:56:20.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.133" endtime="20201030 15:56:20.142"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:20.145" endtime="20201030 15:56:20.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.144" endtime="20201030 15:56:20.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.143" endtime="20201030 15:56:20.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.784" endtime="20201030 15:56:20.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.783" endtime="20201030 15:56:20.166"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.175" endtime="20201030 15:56:20.194"></status>
</kw>
<msg timestamp="20201030 15:56:20.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.173" endtime="20201030 15:56:20.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.195" endtime="20201030 15:56:20.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.198" endtime="20201030 15:56:20.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.170" endtime="20201030 15:56:20.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.168" endtime="20201030 15:56:20.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.207" endtime="20201030 15:56:20.492"></status>
</kw>
<msg timestamp="20201030 15:56:20.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02198075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022071736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:20.205" endtime="20201030 15:56:20.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02198075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022071736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:20.496" endtime="20201030 15:56:20.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.504" endtime="20201030 15:56:20.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.202" endtime="20201030 15:56:20.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.201" endtime="20201030 15:56:20.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:20.510" level="INFO">${RESULT} = [{'diff': 9.098600000000123e-05}, {'diff': 9.06939999999988e-05}, {'diff': 9.130599999999933e-05}, {'diff': 9.058300000000172e-05}, {'diff': 9.081899999999893e-05}, {'diff': 9.084699999999807e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:20.507" endtime="20201030 15:56:20.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:20.515" level="INFO">${ACCURACY} = {'diff': [9.098600000000123e-05, 9.06939999999988e-05, 9.130599999999933e-05, 9.058300000000172e-05, 9.081899999999893e-05, 9.084699999999807e-05, 9.097299999999767e-05, 9.079199999999926e-05, 9.08050...</msg>
<status status="PASS" starttime="20201030 15:56:20.511" endtime="20201030 15:56:20.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.520" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 15:56:20.519" endtime="20201030 15:56:20.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.523" level="INFO">VALUE: [9.098600000000123e-05, 9.06939999999988e-05, 9.130599999999933e-05, 9.058300000000172e-05, 9.081899999999893e-05, 9.084699999999807e-05, 9.097299999999767e-05, 9.079199999999926e-05, 9.080500000000283e-05, 9.098600000000123e-05, 9.136200000000108e-05, 9.13199999999989e-05, 9.104100000000004e-05, 9.088900000000025e-05, 9.05000000000003e-05, 9.083300000000197e-05, 9.058300000000172e-05, 9.087500000000068e-05, 9.06939999999988e-05, 9.072200000000141e-05, 9.062500000000043e-05, 9.068100000000218e-05, 9.104199999999951e-05, 9.088900000000025e-05, 9.068100000000218e-05, 9.079200000000273e-05, 9.102799999999994e-05, 9.040299999999932e-05, 9.083300000000197e-05, 9.065299999999957e-05, 9.116600000000016e-05, 9.1332999999999e-05, 9.054099999999954e-05, 9.079099999999979e-05, 9.047200000000116e-05, 9.048600000000073e-05, 9.131899999999943e-05, 9.105600000000255e-05, 9.05000000000003e-05, 9.034700000000104e-05, 9.037500000000018e-05, 9.040299999999932e-05, 9.097300000000114e-05, 9.037500000000018e-05, 9.116699999999964e-05, 9.126300000000115e-05, 9.107000000000212e-05, 9.08190000000024e-05, 9.036100000000061e-05, 9.036100000000061e-05]</msg>
<status status="PASS" starttime="20201030 15:56:20.521" endtime="20201030 15:56:20.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.516" endtime="20201030 15:56:20.525"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:20.529" endtime="20201030 15:56:20.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.527" endtime="20201030 15:56:20.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.526" endtime="20201030 15:56:20.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.167" endtime="20201030 15:56:20.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.166" endtime="20201030 15:56:20.550"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.558" endtime="20201030 15:56:20.577"></status>
</kw>
<msg timestamp="20201030 15:56:20.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.557" endtime="20201030 15:56:20.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.579" endtime="20201030 15:56:20.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.581" endtime="20201030 15:56:20.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.554" endtime="20201030 15:56:20.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.552" endtime="20201030 15:56:20.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.590" endtime="20201030 15:56:20.877"></status>
</kw>
<msg timestamp="20201030 15:56:20.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021783847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021875958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:20.589" endtime="20201030 15:56:20.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021783847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021875958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:20.881" endtime="20201030 15:56:20.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.889" endtime="20201030 15:56:20.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.586" endtime="20201030 15:56:20.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.584" endtime="20201030 15:56:20.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:20.895" level="INFO">${RESULT} = [{'diff': 9.211100000000236e-05}, {'diff': 9.180500000000036e-05}, {'diff': 9.201400000000137e-05}, {'diff': 9.140300000000032e-05}, {'diff': 9.175000000000155e-05}, {'diff': 9.142999999999998e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:20.892" endtime="20201030 15:56:20.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:20.900" level="INFO">${ACCURACY} = {'diff': [9.211100000000236e-05, 9.180500000000036e-05, 9.201400000000137e-05, 9.140300000000032e-05, 9.175000000000155e-05, 9.142999999999998e-05, 9.223599999999901e-05, 9.162500000000143e-05, 9.1625...</msg>
<status status="PASS" starttime="20201030 15:56:20.896" endtime="20201030 15:56:20.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.904" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 15:56:20.903" endtime="20201030 15:56:20.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.906" level="INFO">VALUE: [9.211100000000236e-05, 9.180500000000036e-05, 9.201400000000137e-05, 9.140300000000032e-05, 9.175000000000155e-05, 9.142999999999998e-05, 9.223599999999901e-05, 9.162500000000143e-05, 9.162500000000143e-05, 9.186099999999864e-05, 9.180599999999983e-05, 9.177800000000069e-05, 9.151400000000087e-05, 9.176399999999765e-05, 9.21940000000003e-05, 9.181899999999993e-05, 9.145800000000259e-05, 9.208299999999975e-05, 9.201400000000137e-05, 9.179200000000026e-05, 9.195799999999962e-05, 9.179200000000026e-05, 9.230600000000033e-05, 9.181899999999993e-05, 9.15000000000013e-05, 9.188900000000125e-05, 9.191700000000039e-05, 9.147200000000216e-05, 9.234699999999957e-05, 9.162500000000143e-05, 9.169499999999928e-05, 9.154100000000054e-05, 9.204199999999704e-05, 9.152700000000097e-05, 9.184699999999907e-05, 9.20000000000018e-05, 9.136099999999814e-05, 9.145799999999912e-05, 9.212499999999846e-05, 9.2333e-05, 9.155599999999958e-05, 9.168099999999971e-05, 9.229200000000076e-05, 9.179200000000026e-05, 9.134700000000204e-05, 9.184799999999854e-05, 9.204200000000051e-05, 9.13879999999978e-05, 9.15139999999974e-05, 9.211199999999836e-05]</msg>
<status status="PASS" starttime="20201030 15:56:20.905" endtime="20201030 15:56:20.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.900" endtime="20201030 15:56:20.908"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:20.911" endtime="20201030 15:56:20.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.910" endtime="20201030 15:56:20.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.909" endtime="20201030 15:56:20.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.551" endtime="20201030 15:56:20.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.550" endtime="20201030 15:56:20.932"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.941" endtime="20201030 15:56:20.962"></status>
</kw>
<msg timestamp="20201030 15:56:20.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.939" endtime="20201030 15:56:20.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.963" endtime="20201030 15:56:20.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.966" endtime="20201030 15:56:20.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.936" endtime="20201030 15:56:20.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.934" endtime="20201030 15:56:20.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.975" endtime="20201030 15:56:21.261"></status>
</kw>
<msg timestamp="20201030 15:56:21.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023197708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023290514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:20.973" endtime="20201030 15:56:21.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023197708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023290514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:21.265" endtime="20201030 15:56:21.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.273" endtime="20201030 15:56:21.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.971" endtime="20201030 15:56:21.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.969" endtime="20201030 15:56:21.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:21.280" level="INFO">${RESULT} = [{'diff': 9.280599999999736e-05}, {'diff': 9.248599999999926e-05}, {'diff': 9.248599999999926e-05}, {'diff': 9.25139999999984e-05}, {'diff': 9.270899999999985e-05}, {'diff': 9.277799999999822e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:21.277" endtime="20201030 15:56:21.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:21.284" level="INFO">${ACCURACY} = {'diff': [9.280599999999736e-05, 9.248599999999926e-05, 9.248599999999926e-05, 9.25139999999984e-05, 9.270899999999985e-05, 9.277799999999822e-05, 9.301299999999943e-05, 9.26940000000008e-05, 9.274999...</msg>
<status status="PASS" starttime="20201030 15:56:21.281" endtime="20201030 15:56:21.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.288" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 15:56:21.287" endtime="20201030 15:56:21.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.291" level="INFO">VALUE: [9.280599999999736e-05, 9.248599999999926e-05, 9.248599999999926e-05, 9.25139999999984e-05, 9.270899999999985e-05, 9.277799999999822e-05, 9.301299999999943e-05, 9.26940000000008e-05, 9.274999999999908e-05, 9.273599999999951e-05, 9.324999999999958e-05, 9.248599999999926e-05, 9.302799999999847e-05, 9.238899999999828e-05, 9.30000000000028e-05, 9.298699999999924e-05, 9.261099999999939e-05, 9.259699999999982e-05, 9.337499999999971e-05, 9.273599999999951e-05, 9.287500000000268e-05, 9.311099999999989e-05, 9.263899999999853e-05, 9.316700000000164e-05, 9.301400000000237e-05, 9.286099999999964e-05, 9.255500000000111e-05, 9.266600000000166e-05, 9.245800000000012e-05, 9.305499999999814e-05, 9.243000000000098e-05, 9.331900000000143e-05, 9.293100000000096e-05, 9.295800000000062e-05, 9.254199999999754e-05, 9.307000000000065e-05, 9.255600000000058e-05, 9.33200000000009e-05, 9.277800000000169e-05, 9.266700000000114e-05, 9.308300000000075e-05, 9.266699999999767e-05, 9.331899999999796e-05, 9.241700000000089e-05, 9.268000000000123e-05, 9.248599999999926e-05, 9.249999999999883e-05, 9.306900000000118e-05, 9.29720000000002e-05, 9.25000000000023e-05]</msg>
<status status="PASS" starttime="20201030 15:56:21.289" endtime="20201030 15:56:21.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.285" endtime="20201030 15:56:21.293"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:21.297" endtime="20201030 15:56:21.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.295" endtime="20201030 15:56:21.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.294" endtime="20201030 15:56:21.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.933" endtime="20201030 15:56:21.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.932" endtime="20201030 15:56:21.317"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.326" endtime="20201030 15:56:21.345"></status>
</kw>
<msg timestamp="20201030 15:56:21.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:21.324" endtime="20201030 15:56:21.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:21.346" endtime="20201030 15:56:21.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.349" endtime="20201030 15:56:21.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.322" endtime="20201030 15:56:21.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.320" endtime="20201030 15:56:21.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.358" endtime="20201030 15:56:21.643"></status>
</kw>
<msg timestamp="20201030 15:56:21.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022009444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022103292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:21.356" endtime="20201030 15:56:21.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022009444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022103292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:21.647" endtime="20201030 15:56:21.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.655" endtime="20201030 15:56:21.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.353" endtime="20201030 15:56:21.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.352" endtime="20201030 15:56:21.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:21.662" level="INFO">${RESULT} = [{'diff': 9.384800000000054e-05}, {'diff': 9.404099999999957e-05}, {'diff': 9.430499999999939e-05}, {'diff': 9.348600000000026e-05}, {'diff': 9.402799999999947e-05}, {'diff': 9.362499999999996e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:21.659" endtime="20201030 15:56:21.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:21.668" level="INFO">${ACCURACY} = {'diff': [9.384800000000054e-05, 9.404099999999957e-05, 9.430499999999939e-05, 9.348600000000026e-05, 9.402799999999947e-05, 9.362499999999996e-05, 9.377799999999922e-05, 9.433299999999853e-05, 9.4209...</msg>
<status status="PASS" starttime="20201030 15:56:21.663" endtime="20201030 15:56:21.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.672" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 15:56:21.671" endtime="20201030 15:56:21.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.675" level="INFO">VALUE: [9.384800000000054e-05, 9.404099999999957e-05, 9.430499999999939e-05, 9.348600000000026e-05, 9.402799999999947e-05, 9.362499999999996e-05, 9.377799999999922e-05, 9.433299999999853e-05, 9.420900000000135e-05, 9.343099999999799e-05, 9.358400000000072e-05, 9.347300000000017e-05, 9.36659999999992e-05, 9.367999999999876e-05, 9.388899999999978e-05, 9.436100000000114e-05, 9.398600000000076e-05, 9.359700000000082e-05, 9.363899999999953e-05, 9.359700000000082e-05, 9.40139999999999e-05, 9.34720000000007e-05, 9.423600000000101e-05, 9.416699999999917e-05, 9.429199999999929e-05, 9.376399999999965e-05, 9.375000000000008e-05, 9.393099999999849e-05, 9.377699999999975e-05, 9.348699999999974e-05, 9.395799999999815e-05, 9.377699999999975e-05, 9.367999999999876e-05, 9.35139999999994e-05, 9.429200000000276e-05, 9.429099999999982e-05, 9.368000000000223e-05, 9.404200000000251e-05, 9.426400000000015e-05, 9.39720000000012e-05, 9.398600000000076e-05, 9.372300000000042e-05, 9.420900000000135e-05, 9.386100000000064e-05, 9.43200000000019e-05, 9.373600000000051e-05, 9.400000000000033e-05, 9.422199999999797e-05, 9.361100000000039e-05, 9.423600000000101e-05]</msg>
<status status="PASS" starttime="20201030 15:56:21.673" endtime="20201030 15:56:21.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.669" endtime="20201030 15:56:21.676"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:21.680" endtime="20201030 15:56:21.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.678" endtime="20201030 15:56:21.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.677" endtime="20201030 15:56:21.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.318" endtime="20201030 15:56:21.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.317" endtime="20201030 15:56:21.700"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.709" endtime="20201030 15:56:21.727"></status>
</kw>
<msg timestamp="20201030 15:56:21.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:21.708" endtime="20201030 15:56:21.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:21.729" endtime="20201030 15:56:21.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.731" endtime="20201030 15:56:21.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.705" endtime="20201030 15:56:21.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.703" endtime="20201030 15:56:21.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.740" endtime="20201030 15:56:22.026"></status>
</kw>
<msg timestamp="20201030 15:56:22.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021858097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021953639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:21.739" endtime="20201030 15:56:22.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021858097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021953639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:22.030" endtime="20201030 15:56:22.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.038" endtime="20201030 15:56:22.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.736" endtime="20201030 15:56:22.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.734" endtime="20201030 15:56:22.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:22.045" level="INFO">${RESULT} = [{'diff': 9.554200000000054e-05}, {'diff': 9.438900000000028e-05}, {'diff': 9.476400000000065e-05}, {'diff': 9.490300000000035e-05}, {'diff': 9.469399999999933e-05}, {'diff': 9.456999999999868e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:22.042" endtime="20201030 15:56:22.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:22.049" level="INFO">${ACCURACY} = {'diff': [9.554200000000054e-05, 9.438900000000028e-05, 9.476400000000065e-05, 9.490300000000035e-05, 9.469399999999933e-05, 9.456999999999868e-05, 9.523599999999854e-05, 9.497300000000167e-05, 9.5167...</msg>
<status status="PASS" starttime="20201030 15:56:22.046" endtime="20201030 15:56:22.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.053" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 15:56:22.052" endtime="20201030 15:56:22.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.056" level="INFO">VALUE: [9.554200000000054e-05, 9.438900000000028e-05, 9.476400000000065e-05, 9.490300000000035e-05, 9.469399999999933e-05, 9.456999999999868e-05, 9.523599999999854e-05, 9.497300000000167e-05, 9.516700000000017e-05, 9.477800000000022e-05, 9.438900000000028e-05, 9.455599999999911e-05, 9.456900000000268e-05, 9.493000000000001e-05, 9.516599999999723e-05, 9.533299999999953e-05, 9.452799999999997e-05, 9.518000000000026e-05, 9.487500000000121e-05, 9.458299999999878e-05, 9.451399999999693e-05, 9.459699999999835e-05, 9.501399999999743e-05, 9.526400000000115e-05, 9.457000000000215e-05, 9.473600000000151e-05, 9.490300000000035e-05, 9.44590000000016e-05, 9.461200000000086e-05, 9.504100000000057e-05, 9.456899999999921e-05, 9.522200000000244e-05, 9.504200000000004e-05, 9.491699999999992e-05, 9.441699999999942e-05, 9.493000000000001e-05, 9.466699999999967e-05, 9.508299999999928e-05, 9.53469999999991e-05, 9.461199999999739e-05, 9.45140000000004e-05, 9.491699999999992e-05, 9.518100000000321e-05, 9.53469999999991e-05, 9.455600000000258e-05, 9.516700000000017e-05, 9.48469999999986e-05, 9.477700000000075e-05, 9.459699999999835e-05, 9.480499999999989e-05]</msg>
<status status="PASS" starttime="20201030 15:56:22.055" endtime="20201030 15:56:22.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.050" endtime="20201030 15:56:22.062"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:22.065" endtime="20201030 15:56:22.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.064" endtime="20201030 15:56:22.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.063" endtime="20201030 15:56:22.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.701" endtime="20201030 15:56:22.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.701" endtime="20201030 15:56:22.086"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.095" endtime="20201030 15:56:22.114"></status>
</kw>
<msg timestamp="20201030 15:56:22.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:22.093" endtime="20201030 15:56:22.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:22.116" endtime="20201030 15:56:22.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.118" endtime="20201030 15:56:22.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.091" endtime="20201030 15:56:22.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.088" endtime="20201030 15:56:22.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.127" endtime="20201030 15:56:22.413"></status>
</kw>
<msg timestamp="20201030 15:56:22.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022729569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022826194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:22.125" endtime="20201030 15:56:22.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022729569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022826194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:22.417" endtime="20201030 15:56:22.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.425" endtime="20201030 15:56:22.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.123" endtime="20201030 15:56:22.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.121" endtime="20201030 15:56:22.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:22.432" level="INFO">${RESULT} = [{'diff': 9.662499999999949e-05}, {'diff': 9.55279999999975e-05}, {'diff': 9.586099999999917e-05}, {'diff': 9.537500000000171e-05}, {'diff': 9.565199999999816e-05}, {'diff': 9.538900000000128e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:22.429" endtime="20201030 15:56:22.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:22.436" level="INFO">${ACCURACY} = {'diff': [9.662499999999949e-05, 9.55279999999975e-05, 9.586099999999917e-05, 9.537500000000171e-05, 9.565199999999816e-05, 9.538900000000128e-05, 9.609699999999985e-05, 9.58469999999996e-05, 9.583300...</msg>
<status status="PASS" starttime="20201030 15:56:22.433" endtime="20201030 15:56:22.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.441" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 15:56:22.439" endtime="20201030 15:56:22.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.444" level="INFO">VALUE: [9.662499999999949e-05, 9.55279999999975e-05, 9.586099999999917e-05, 9.537500000000171e-05, 9.565199999999816e-05, 9.538900000000128e-05, 9.609699999999985e-05, 9.58469999999996e-05, 9.583300000000003e-05, 9.579200000000079e-05, 9.568100000000024e-05, 9.604199999999757e-05, 9.545799999999965e-05, 9.537499999999824e-05, 9.607000000000018e-05, 9.570899999999938e-05, 9.62920000000013e-05, 9.549999999999836e-05, 9.622199999999997e-05, 9.58469999999996e-05, 9.569400000000033e-05, 9.624999999999911e-05, 9.597199999999972e-05, 9.619400000000083e-05, 9.541700000000042e-05, 9.544400000000008e-05, 9.624999999999911e-05, 9.609699999999985e-05, 9.574999999999861e-05, 9.630600000000086e-05, 9.562500000000196e-05, 9.608399999999975e-05, 9.554199999999707e-05, 9.619400000000083e-05, 9.548699999999827e-05, 9.586099999999917e-05, 9.63470000000001e-05, 9.63470000000001e-05, 9.622199999999997e-05, 9.63059999999974e-05, 9.561099999999892e-05, 9.594400000000058e-05, 9.630600000000086e-05, 9.566700000000067e-05, 9.55140000000014e-05, 9.59859999999993e-05, 9.55279999999975e-05, 9.579200000000079e-05, 9.54590000000026e-05, 9.597300000000267e-05]</msg>
<status status="PASS" starttime="20201030 15:56:22.442" endtime="20201030 15:56:22.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.437" endtime="20201030 15:56:22.445"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:22.449" endtime="20201030 15:56:22.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.447" endtime="20201030 15:56:22.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.446" endtime="20201030 15:56:22.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.087" endtime="20201030 15:56:22.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.086" endtime="20201030 15:56:22.469"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.478" endtime="20201030 15:56:22.497"></status>
</kw>
<msg timestamp="20201030 15:56:22.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:22.476" endtime="20201030 15:56:22.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:22.498" endtime="20201030 15:56:22.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.501" endtime="20201030 15:56:22.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.474" endtime="20201030 15:56:22.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.472" endtime="20201030 15:56:22.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.510" endtime="20201030 15:56:22.796"></status>
</kw>
<msg timestamp="20201030 15:56:22.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021984444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022082042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:22.508" endtime="20201030 15:56:22.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021984444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022082042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:22.801" endtime="20201030 15:56:22.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.809" endtime="20201030 15:56:22.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.506" endtime="20201030 15:56:22.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.504" endtime="20201030 15:56:22.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:22.815" level="INFO">${RESULT} = [{'diff': 9.759800000000082e-05}, {'diff': 9.637500000000271e-05}, {'diff': 9.719499999999784e-05}, {'diff': 9.692999999999855e-05}, {'diff': 9.662499999999949e-05}, {'diff': 9.691600000000244e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:22.812" endtime="20201030 15:56:22.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:22.820" level="INFO">${ACCURACY} = {'diff': [9.759800000000082e-05, 9.637500000000271e-05, 9.719499999999784e-05, 9.692999999999855e-05, 9.662499999999949e-05, 9.691600000000244e-05, 9.699999999999986e-05, 9.699999999999986e-05, 9.6597...</msg>
<status status="PASS" starttime="20201030 15:56:22.816" endtime="20201030 15:56:22.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.825" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 15:56:22.824" endtime="20201030 15:56:22.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.827" level="INFO">VALUE: [9.759800000000082e-05, 9.637500000000271e-05, 9.719499999999784e-05, 9.692999999999855e-05, 9.662499999999949e-05, 9.691600000000244e-05, 9.699999999999986e-05, 9.699999999999986e-05, 9.659700000000035e-05, 9.64859999999998e-05, 9.704200000000204e-05, 9.665299999999863e-05, 9.655600000000111e-05, 9.644399999999761e-05, 9.697200000000072e-05, 9.650000000000283e-05, 9.668099999999777e-05, 9.666599999999873e-05, 9.64859999999998e-05, 9.7027999999999e-05, 9.641600000000194e-05, 9.677700000000275e-05, 9.68470000000006e-05, 9.65409999999986e-05, 9.712499999999999e-05, 9.719400000000183e-05, 9.730499999999892e-05, 9.704200000000204e-05, 9.704199999999857e-05, 9.693100000000149e-05, 9.649999999999936e-05, 9.7334000000001e-05, 9.659700000000035e-05, 9.637499999999924e-05, 9.64729999999997e-05, 9.644400000000108e-05, 9.688799999999984e-05, 9.708299999999781e-05, 9.715199999999966e-05, 9.669400000000133e-05, 9.690299999999888e-05, 9.733300000000153e-05, 9.712499999999999e-05, 9.644399999999761e-05, 9.688899999999931e-05, 9.636099999999967e-05, 9.71669999999987e-05, 9.66530000000021e-05, 9.7027999999999e-05, 9.649999999999936e-05]</msg>
<status status="PASS" starttime="20201030 15:56:22.826" endtime="20201030 15:56:22.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.821" endtime="20201030 15:56:22.828"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:22.832" endtime="20201030 15:56:22.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.830" endtime="20201030 15:56:22.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.829" endtime="20201030 15:56:22.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.470" endtime="20201030 15:56:22.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.470" endtime="20201030 15:56:22.853"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.861" endtime="20201030 15:56:22.881"></status>
</kw>
<msg timestamp="20201030 15:56:22.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:22.860" endtime="20201030 15:56:22.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:22.882" endtime="20201030 15:56:22.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.885" endtime="20201030 15:56:22.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.857" endtime="20201030 15:56:22.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.855" endtime="20201030 15:56:22.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.893" endtime="20201030 15:56:23.183"></status>
</kw>
<msg timestamp="20201030 15:56:23.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021934583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022032917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:22.892" endtime="20201030 15:56:23.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021934583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022032917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:23.187" endtime="20201030 15:56:23.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.195" endtime="20201030 15:56:23.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.889" endtime="20201030 15:56:23.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.888" endtime="20201030 15:56:23.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:23.202" level="INFO">${RESULT} = [{'diff': 9.833399999999853e-05}, {'diff': 9.79860000000013e-05}, {'diff': 9.818100000000274e-05}, {'diff': 9.826400000000068e-05}, {'diff': 9.793099999999902e-05}, {'diff': 9.78470000000016e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:23.199" endtime="20201030 15:56:23.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:23.206" level="INFO">${ACCURACY} = {'diff': [9.833399999999853e-05, 9.79860000000013e-05, 9.818100000000274e-05, 9.826400000000068e-05, 9.793099999999902e-05, 9.78470000000016e-05, 9.786100000000117e-05, 9.812500000000099e-05, 9.744400...</msg>
<status status="PASS" starttime="20201030 15:56:23.203" endtime="20201030 15:56:23.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.210" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 15:56:23.209" endtime="20201030 15:56:23.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.213" level="INFO">VALUE: [9.833399999999853e-05, 9.79860000000013e-05, 9.818100000000274e-05, 9.826400000000068e-05, 9.793099999999902e-05, 9.78470000000016e-05, 9.786100000000117e-05, 9.812500000000099e-05, 9.744400000000208e-05, 9.770799999999843e-05, 9.777799999999975e-05, 9.816600000000023e-05, 9.83470000000021e-05, 9.78479999999976e-05, 9.74860000000008e-05, 9.812499999999752e-05, 9.754199999999907e-05, 9.823699999999755e-05, 9.788900000000031e-05, 9.76669999999992e-05, 9.811100000000142e-05, 9.815300000000013e-05, 9.786100000000117e-05, 9.816600000000023e-05, 9.744400000000208e-05, 9.811099999999795e-05, 9.7721999999998e-05, 9.769399999999887e-05, 9.812500000000099e-05, 9.783299999999856e-05, 9.756900000000221e-05, 9.81669999999997e-05, 9.826400000000068e-05, 9.784699999999813e-05, 9.794499999999859e-05, 9.755599999999864e-05, 9.758400000000125e-05, 9.823600000000154e-05, 9.809799999999785e-05, 9.792999999999955e-05, 9.80410000000001e-05, 9.76669999999992e-05, 9.763900000000006e-05, 9.834699999999863e-05, 9.751399999999993e-05, 9.756900000000221e-05, 9.752800000000297e-05, 9.779199999999932e-05, 9.740299999999938e-05, 9.833399999999853e-05]</msg>
<status status="PASS" starttime="20201030 15:56:23.211" endtime="20201030 15:56:23.213"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.207" endtime="20201030 15:56:23.214"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:23.218" endtime="20201030 15:56:23.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.216" endtime="20201030 15:56:23.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.215" endtime="20201030 15:56:23.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.853" endtime="20201030 15:56:23.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.853" endtime="20201030 15:56:23.238"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.247" endtime="20201030 15:56:23.266"></status>
</kw>
<msg timestamp="20201030 15:56:23.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:23.245" endtime="20201030 15:56:23.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:23.268" endtime="20201030 15:56:23.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.270" endtime="20201030 15:56:23.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.243" endtime="20201030 15:56:23.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.241" endtime="20201030 15:56:23.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.279" endtime="20201030 15:56:23.564"></status>
</kw>
<msg timestamp="20201030 15:56:23.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022872306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022971625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:23.278" endtime="20201030 15:56:23.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022872306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022971625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:23.568" endtime="20201030 15:56:23.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.576" endtime="20201030 15:56:23.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.275" endtime="20201030 15:56:23.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.273" endtime="20201030 15:56:23.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:23.583" level="INFO">${RESULT} = [{'diff': 9.931900000000049e-05}, {'diff': 9.888899999999784e-05}, {'diff': 9.912499999999852e-05}, {'diff': 9.844499999999909e-05}, {'diff': 9.93060000000004e-05}, {'diff': 9.870899999999891e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:23.580" endtime="20201030 15:56:23.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:23.587" level="INFO">${ACCURACY} = {'diff': [9.931900000000049e-05, 9.888899999999784e-05, 9.912499999999852e-05, 9.844499999999909e-05, 9.93060000000004e-05, 9.870899999999891e-05, 9.876399999999771e-05, 9.848599999999832e-05, 9.87920...</msg>
<status status="PASS" starttime="20201030 15:56:23.584" endtime="20201030 15:56:23.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.591" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 15:56:23.590" endtime="20201030 15:56:23.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.594" level="INFO">VALUE: [9.931900000000049e-05, 9.888899999999784e-05, 9.912499999999852e-05, 9.844499999999909e-05, 9.93060000000004e-05, 9.870899999999891e-05, 9.876399999999771e-05, 9.848599999999832e-05, 9.879200000000032e-05, 9.844500000000256e-05, 9.887499999999827e-05, 9.897200000000272e-05, 9.90410000000011e-05, 9.865300000000063e-05, 9.837499999999777e-05, 9.936100000000267e-05, 9.856999999999921e-05, 9.929199999999735e-05, 9.837500000000124e-05, 9.86670000000002e-05, 9.863899999999759e-05, 9.881999999999946e-05, 9.868099999999977e-05, 9.89860000000023e-05, 9.861200000000139e-05, 9.920799999999994e-05, 9.859699999999888e-05, 9.929100000000135e-05, 9.931900000000049e-05, 9.905500000000067e-05, 9.856899999999974e-05, 9.847199999999875e-05, 9.924999999999864e-05, 9.883299999999956e-05, 9.85280000000005e-05, 9.840300000000038e-05, 9.901399999999796e-05, 9.879200000000032e-05, 9.920899999999941e-05, 9.862500000000149e-05, 9.920899999999941e-05, 9.863900000000106e-05, 9.906999999999971e-05, 9.897200000000272e-05, 9.890300000000088e-05, 9.869399999999987e-05, 9.863900000000106e-05, 9.881999999999946e-05, 9.908299999999981e-05, 9.855599999999964e-05]</msg>
<status status="PASS" starttime="20201030 15:56:23.593" endtime="20201030 15:56:23.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.588" endtime="20201030 15:56:23.596"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:23.600" endtime="20201030 15:56:23.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.598" endtime="20201030 15:56:23.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.597" endtime="20201030 15:56:23.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.239" endtime="20201030 15:56:23.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.239" endtime="20201030 15:56:23.620"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.629" endtime="20201030 15:56:23.648"></status>
</kw>
<msg timestamp="20201030 15:56:23.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:23.627" endtime="20201030 15:56:23.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:23.649" endtime="20201030 15:56:23.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.652" endtime="20201030 15:56:23.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.625" endtime="20201030 15:56:23.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.623" endtime="20201030 15:56:23.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.661" endtime="20201030 15:56:23.946"></status>
</kw>
<msg timestamp="20201030 15:56:23.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021825056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021925611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:23.659" endtime="20201030 15:56:23.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021825056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021925611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:23.950" endtime="20201030 15:56:23.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.958" endtime="20201030 15:56:23.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.657" endtime="20201030 15:56:23.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.655" endtime="20201030 15:56:23.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:23.965" level="INFO">${RESULT} = [{'diff': 0.00010055500000000217}, {'diff': 9.958300000000031e-05}, {'diff': 9.937500000000224e-05}, {'diff': 9.962499999999902e-05}, {'diff': 0.0001001670000000017}, {'diff': 0.0001002220000000005}, ...</msg>
<status status="PASS" starttime="20201030 15:56:23.961" endtime="20201030 15:56:23.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:23.969" level="INFO">${ACCURACY} = {'diff': [0.00010055500000000217, 9.958300000000031e-05, 9.937500000000224e-05, 9.962499999999902e-05, 0.0001001670000000017, 0.0001002220000000005, 9.945899999999966e-05, 9.988899999999884e-05, 9.993...</msg>
<status status="PASS" starttime="20201030 15:56:23.966" endtime="20201030 15:56:23.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.974" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 15:56:23.973" endtime="20201030 15:56:23.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.976" level="INFO">VALUE: [0.00010055500000000217, 9.958300000000031e-05, 9.937500000000224e-05, 9.962499999999902e-05, 0.0001001670000000017, 0.0001002220000000005, 9.945899999999966e-05, 9.988899999999884e-05, 9.993100000000102e-05, 9.970899999999991e-05, 9.955600000000064e-05, 9.973599999999957e-05, 9.956899999999727e-05, 9.96800000000013e-05, 9.956900000000074e-05, 0.0001001800000000018, 9.979200000000132e-05, 9.94999999999989e-05, 9.956899999999727e-05, 0.00010020800000000094, 0.0001001809999999978, 0.00010011099999999995, 9.963900000000206e-05, 0.00010022299999999998, 9.994499999999712e-05, 0.00010020800000000094, 9.962499999999902e-05, 9.94020000000019e-05, 0.00010004099999999863, 9.997200000000026e-05, 9.961099999999945e-05, 9.991700000000145e-05, 0.00010013900000000256, 0.00010024999999999964, 9.955600000000064e-05, 9.951400000000193e-05, 9.937500000000224e-05, 9.958300000000031e-05, 0.00010011099999999995, 0.00010012499999999952, 9.995900000000016e-05, 9.990299999999841e-05, 0.00010006900000000124, 0.00010026400000000268, 0.00010008300000000081, 0.000100028000000002, 0.00010024999999999964, 9.934699999999963e-05, 9.948599999999932e-05, 9.991699999999798e-05]</msg>
<status status="PASS" starttime="20201030 15:56:23.975" endtime="20201030 15:56:23.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.970" endtime="20201030 15:56:23.978"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:23.981" endtime="20201030 15:56:24.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.980" endtime="20201030 15:56:24.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.979" endtime="20201030 15:56:24.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.621" endtime="20201030 15:56:24.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.621" endtime="20201030 15:56:24.002"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.011" endtime="20201030 15:56:24.030"></status>
</kw>
<msg timestamp="20201030 15:56:24.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.009" endtime="20201030 15:56:24.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.031" endtime="20201030 15:56:24.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.034" endtime="20201030 15:56:24.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.007" endtime="20201030 15:56:24.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.004" endtime="20201030 15:56:24.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.043" endtime="20201030 15:56:24.330"></status>
</kw>
<msg timestamp="20201030 15:56:24.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022222264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022323403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:24.041" endtime="20201030 15:56:24.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022222264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022323403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:24.334" endtime="20201030 15:56:24.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.342" endtime="20201030 15:56:24.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.039" endtime="20201030 15:56:24.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.037" endtime="20201030 15:56:24.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:24.349" level="INFO">${RESULT} = [{'diff': 0.00010113900000000009}, {'diff': 0.00010134699999999816}, {'diff': 0.00010105599999999867}, {'diff': 0.00010112500000000052}, {'diff': 0.00010083400000000103}, {'diff': 0.000101319999999998...</msg>
<status status="PASS" starttime="20201030 15:56:24.346" endtime="20201030 15:56:24.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:24.353" level="INFO">${ACCURACY} = {'diff': [0.00010113900000000009, 0.00010134699999999816, 0.00010105599999999867, 0.00010112500000000052, 0.00010083400000000103, 0.0001013199999999985, 0.00010062500000000002, 0.00010058399999999731,...</msg>
<status status="PASS" starttime="20201030 15:56:24.350" endtime="20201030 15:56:24.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.357" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 15:56:24.356" endtime="20201030 15:56:24.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.359" level="INFO">VALUE: [0.00010113900000000009, 0.00010134699999999816, 0.00010105599999999867, 0.00010112500000000052, 0.00010083400000000103, 0.0001013199999999985, 0.00010062500000000002, 0.00010058399999999731, 0.00010037499999999977, 0.00010101300000000049, 0.00010073600000000058, 0.000100415999999999, 0.00010101399999999996, 0.0001010419999999991, 0.00010070799999999797, 0.0001010000000000004, 0.00010091699999999898, 0.00010104200000000257, 0.00010084700000000113, 0.00010048600000000033, 0.00010052699999999956, 0.00010055599999999817, 0.00010038899999999934, 0.0001010000000000004, 0.00010047200000000076, 0.00010061100000000045, 0.00010123600000000108, 0.00010065299999999916, 0.0001012220000000015, 0.00010120799999999847, 0.00010037499999999977, 0.00010055600000000164, 0.000100722000000001, 0.00010066699999999873, 0.00010065299999999916, 0.0001008610000000007, 0.00010059800000000035, 0.00010052799999999903, 0.00010119499999999837, 0.0001005549999999987, 0.0001004999999999999, 0.00010040199999999944, 0.0001009159999999995, 0.00010080499999999895, 0.00010056900000000174, 0.00010059700000000088, 0.0001008610000000007, 0.00010040299999999891, 0.00010070900000000091, 0.00010087500000000027]</msg>
<status status="PASS" starttime="20201030 15:56:24.358" endtime="20201030 15:56:24.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.353" endtime="20201030 15:56:24.361"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:24.364" endtime="20201030 15:56:24.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.363" endtime="20201030 15:56:24.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.362" endtime="20201030 15:56:24.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.003" endtime="20201030 15:56:24.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.002" endtime="20201030 15:56:24.385"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.393" endtime="20201030 15:56:24.414"></status>
</kw>
<msg timestamp="20201030 15:56:24.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.392" endtime="20201030 15:56:24.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.415" endtime="20201030 15:56:24.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.418" endtime="20201030 15:56:24.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.389" endtime="20201030 15:56:24.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.387" endtime="20201030 15:56:24.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.427" endtime="20201030 15:56:24.712"></status>
</kw>
<msg timestamp="20201030 15:56:24.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022720306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022822514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:24.425" endtime="20201030 15:56:24.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022720306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022822514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:24.716" endtime="20201030 15:56:24.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.724" endtime="20201030 15:56:24.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.423" endtime="20201030 15:56:24.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.421" endtime="20201030 15:56:24.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:24.730" level="INFO">${RESULT} = [{'diff': 0.00010220799999999947}, {'diff': 0.00010177700000000081}, {'diff': 0.00010194499999999912}, {'diff': 0.00010202800000000053}, {'diff': 0.00010177800000000028}, {'diff': 0.000101514000000000...</msg>
<status status="PASS" starttime="20201030 15:56:24.727" endtime="20201030 15:56:24.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:24.734" level="INFO">${ACCURACY} = {'diff': [0.00010220799999999947, 0.00010177700000000081, 0.00010194499999999912, 0.00010202800000000053, 0.00010177800000000028, 0.00010151400000000046, 0.00010179199999999985, 0.00010216600000000076...</msg>
<status status="PASS" starttime="20201030 15:56:24.731" endtime="20201030 15:56:24.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.739" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 15:56:24.738" endtime="20201030 15:56:24.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.741" level="INFO">VALUE: [0.00010220799999999947, 0.00010177700000000081, 0.00010194499999999912, 0.00010202800000000053, 0.00010177800000000028, 0.00010151400000000046, 0.00010179199999999985, 0.00010216600000000076, 0.00010188900000000084, 0.00010138900000000034, 0.00010149999999999743, 0.00010152800000000003, 0.00010182000000000246, 0.00010227800000000078, 0.00010233299999999959, 0.00010155599999999917, 0.00010144500000000209, 0.0001020420000000001, 0.00010161100000000145, 0.0001022359999999986, 0.00010183300000000256, 0.00010224999999999818, 0.00010209699999999891, 0.00010230500000000045, 0.00010165200000000069, 0.00010176400000000071, 0.0001013610000000012, 0.00010156899999999927, 0.00010137500000000077, 0.00010193099999999955, 0.00010180599999999942, 0.00010198599999999836, 0.00010143099999999905, 0.0001020139999999975, 0.00010206999999999924, 0.00010170900000000191, 0.00010140200000000044, 0.00010163899999999712, 0.00010231900000000002, 0.00010208299999999934, 0.00010226399999999775, 0.00010209699999999891, 0.00010137500000000077, 0.0001021939999999999, 0.00010156900000000274, 0.00010145800000000219, 0.00010170799999999897, 0.00010220900000000241, 0.0001017359999999981, 0.00010231900000000002]</msg>
<status status="PASS" starttime="20201030 15:56:24.740" endtime="20201030 15:56:24.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.735" endtime="20201030 15:56:24.743"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:24.747" endtime="20201030 15:56:24.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.745" endtime="20201030 15:56:24.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.744" endtime="20201030 15:56:24.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.386" endtime="20201030 15:56:24.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.385" endtime="20201030 15:56:24.768"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.776" endtime="20201030 15:56:24.796"></status>
</kw>
<msg timestamp="20201030 15:56:24.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.775" endtime="20201030 15:56:24.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.798" endtime="20201030 15:56:24.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.800" endtime="20201030 15:56:24.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.772" endtime="20201030 15:56:24.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.770" endtime="20201030 15:56:24.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.809" endtime="20201030 15:56:25.093"></status>
</kw>
<msg timestamp="20201030 15:56:25.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021926431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022029222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:24.807" endtime="20201030 15:56:25.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021926431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022029222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:25.097" endtime="20201030 15:56:25.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.105" endtime="20201030 15:56:25.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.805" endtime="20201030 15:56:25.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.803" endtime="20201030 15:56:25.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:25.112" level="INFO">${RESULT} = [{'diff': 0.00010279100000000138}, {'diff': 0.00010256900000000027}, {'diff': 0.00010272199999999954}, {'diff': 0.0001033200000000005}, {'diff': 0.00010324999999999918}, {'diff': 0.0001033470000000001...</msg>
<status status="PASS" starttime="20201030 15:56:25.109" endtime="20201030 15:56:25.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:25.116" level="INFO">${ACCURACY} = {'diff': [0.00010279100000000138, 0.00010256900000000027, 0.00010272199999999954, 0.0001033200000000005, 0.00010324999999999918, 0.00010334700000000016, 0.00010334799999999963, 0.00010262500000000202,...</msg>
<status status="PASS" starttime="20201030 15:56:25.113" endtime="20201030 15:56:25.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.121" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 15:56:25.120" endtime="20201030 15:56:25.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.123" level="INFO">VALUE: [0.00010279100000000138, 0.00010256900000000027, 0.00010272199999999954, 0.0001033200000000005, 0.00010324999999999918, 0.00010334700000000016, 0.00010334799999999963, 0.00010262500000000202, 0.00010245899999999919, 0.00010277800000000128, 0.00010308399999999981, 0.00010329200000000135, 0.00010280600000000042, 0.00010272199999999954, 0.00010265300000000116, 0.00010268000000000083, 0.00010293000000000108, 0.00010336099999999973, 0.00010284699999999966, 0.0001026810000000003, 0.00010263900000000159, 0.00010322200000000004, 0.00010286099999999923, 0.00010266700000000073, 0.0001032359999999996, 0.00010258400000000278, 0.00010331999999999703, 0.00010334700000000016, 0.00010248600000000233, 0.00010304100000000163, 0.00010320800000000047, 0.0001030139999999985, 0.00010265300000000116, 0.00010333300000000059, 0.00010259699999999941, 0.00010262499999999855, 0.00010309699999999991, 0.000102513999999998, 0.00010274999999999868, 0.00010284799999999913, 0.00010307000000000024, 0.00010307000000000024, 0.0001030559999999972, 0.00010305499999999773, 0.00010331900000000102, 0.00010290300000000141, 0.00010326399999999875, 0.0001028610000000027, 0.00010256900000000027, 0.00010320800000000047]</msg>
<status status="PASS" starttime="20201030 15:56:25.122" endtime="20201030 15:56:25.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.117" endtime="20201030 15:56:25.125"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:25.128" endtime="20201030 15:56:25.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.127" endtime="20201030 15:56:25.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.126" endtime="20201030 15:56:25.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.769" endtime="20201030 15:56:25.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.768" endtime="20201030 15:56:25.149"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.157" endtime="20201030 15:56:25.177"></status>
</kw>
<msg timestamp="20201030 15:56:25.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.156" endtime="20201030 15:56:25.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.178" endtime="20201030 15:56:25.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.181" endtime="20201030 15:56:25.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.153" endtime="20201030 15:56:25.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.151" endtime="20201030 15:56:25.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.190" endtime="20201030 15:56:25.476"></status>
</kw>
<msg timestamp="20201030 15:56:25.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021798611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021902764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:25.188" endtime="20201030 15:56:25.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021798611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021902764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:25.480" endtime="20201030 15:56:25.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.488" endtime="20201030 15:56:25.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.186" endtime="20201030 15:56:25.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.184" endtime="20201030 15:56:25.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:25.494" level="INFO">${RESULT} = [{'diff': 0.00010415300000000266}, {'diff': 0.00010429199999999889}, {'diff': 0.0001042360000000006}, {'diff': 0.00010348599999999986}, {'diff': 0.00010362499999999955}, {'diff': 0.0001034450000000006...</msg>
<status status="PASS" starttime="20201030 15:56:25.491" endtime="20201030 15:56:25.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:25.498" level="INFO">${ACCURACY} = {'diff': [0.00010415300000000266, 0.00010429199999999889, 0.0001042360000000006, 0.00010348599999999986, 0.00010362499999999955, 0.00010344500000000062, 0.00010395800000000122, 0.00010405499999999873,...</msg>
<status status="PASS" starttime="20201030 15:56:25.495" endtime="20201030 15:56:25.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.503" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 15:56:25.502" endtime="20201030 15:56:25.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.505" level="INFO">VALUE: [0.00010415300000000266, 0.00010429199999999889, 0.0001042360000000006, 0.00010348599999999986, 0.00010362499999999955, 0.00010344500000000062, 0.00010395800000000122, 0.00010405499999999873, 0.00010340199999999897, 0.0001041940000000019, 0.00010386100000000023, 0.00010347200000000029, 0.00010406900000000177, 0.00010388899999999937, 0.00010409700000000091, 0.00010391700000000198, 0.00010408300000000134, 0.00010402800000000254, 0.00010397199999999732, 0.0001040139999999995, 0.00010419500000000137, 0.00010402799999999907, 0.00010343099999999758, 0.00010398600000000036, 0.00010394400000000165, 0.00010344400000000115, 0.00010402800000000254, 0.00010405499999999873, 0.00010397200000000079, 0.00010381900000000152, 0.00010402799999999907, 0.00010434700000000116, 0.00010402799999999907, 0.00010383400000000056, 0.00010427799999999932, 0.00010416700000000223, 0.00010351400000000247, 0.00010377800000000229, 0.00010427799999999932, 0.00010384700000000066, 0.00010397200000000079, 0.00010434700000000116, 0.0001040139999999995, 0.00010399999999999993, 0.00010366700000000173, 0.00010363899999999912, 0.00010340299999999844, 0.00010388899999999937, 0.00010374999999999968, 0.00010345900000000019]</msg>
<status status="PASS" starttime="20201030 15:56:25.504" endtime="20201030 15:56:25.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.499" endtime="20201030 15:56:25.507"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:25.510" endtime="20201030 15:56:25.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.509" endtime="20201030 15:56:25.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.508" endtime="20201030 15:56:25.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.150" endtime="20201030 15:56:25.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.149" endtime="20201030 15:56:25.531"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.539" endtime="20201030 15:56:25.560"></status>
</kw>
<msg timestamp="20201030 15:56:25.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.538" endtime="20201030 15:56:25.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.562" endtime="20201030 15:56:25.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.564" endtime="20201030 15:56:25.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.535" endtime="20201030 15:56:25.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.533" endtime="20201030 15:56:25.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.573" endtime="20201030 15:56:25.860"></status>
</kw>
<msg timestamp="20201030 15:56:25.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022640625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022745417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:25.572" endtime="20201030 15:56:25.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022640625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022745417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:25.864" endtime="20201030 15:56:25.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.872" endtime="20201030 15:56:25.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.569" endtime="20201030 15:56:25.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.567" endtime="20201030 15:56:25.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:25.879" level="INFO">${RESULT} = [{'diff': 0.00010479199999999939}, {'diff': 0.00010531999999999903}, {'diff': 0.00010458399999999785}, {'diff': 0.0001050689999999993}, {'diff': 0.0001048880000000009}, {'diff': 0.00010512499999999758...</msg>
<status status="PASS" starttime="20201030 15:56:25.876" endtime="20201030 15:56:25.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:25.883" level="INFO">${ACCURACY} = {'diff': [0.00010479199999999939, 0.00010531999999999903, 0.00010458399999999785, 0.0001050689999999993, 0.0001048880000000009, 0.00010512499999999758, 0.00010495799999999875, 0.00010438899999999987, ...</msg>
<status status="PASS" starttime="20201030 15:56:25.880" endtime="20201030 15:56:25.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.887" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 15:56:25.886" endtime="20201030 15:56:25.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.890" level="INFO">VALUE: [0.00010479199999999939, 0.00010531999999999903, 0.00010458399999999785, 0.0001050689999999993, 0.0001048880000000009, 0.00010512499999999758, 0.00010495799999999875, 0.00010438899999999987, 0.00010476400000000025, 0.00010523599999999814, 0.00010522200000000204, 0.00010494400000000265, 0.0001052499999999977, 0.00010495899999999822, 0.00010484699999999819, 0.00010504199999999964, 0.00010530599999999946, 0.00010445800000000172, 0.00010497200000000179, 0.00010529100000000041, 0.00010484700000000166, 0.00010519399999999943, 0.00010529199999999989, 0.00010492999999999961, 0.00010502800000000007, 0.000104514, 0.00010498600000000136, 0.00010495799999999875, 0.00010497200000000179, 0.00010451300000000052, 0.00010536100000000173, 0.0001046949999999984, 0.00010470800000000197, 0.00010518099999999933, 0.00010516600000000029, 0.00010459700000000141, 0.00010484700000000166, 0.00010480500000000295, 0.00010517999999999986, 0.00010470800000000197, 0.00010455499999999923, 0.00010512500000000105, 0.00010456999999999828, 0.00010488900000000037, 0.00010480599999999896, 0.00010477799999999982, 0.00010477799999999982, 0.00010512500000000105, 0.00010508399999999835, 0.000105207999999999]</msg>
<status status="PASS" starttime="20201030 15:56:25.888" endtime="20201030 15:56:25.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.883" endtime="20201030 15:56:25.892"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:25.895" endtime="20201030 15:56:25.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.894" endtime="20201030 15:56:25.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.893" endtime="20201030 15:56:25.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.532" endtime="20201030 15:56:25.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.531" endtime="20201030 15:56:25.916"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.924" endtime="20201030 15:56:25.944"></status>
</kw>
<msg timestamp="20201030 15:56:25.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.923" endtime="20201030 15:56:25.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.946" endtime="20201030 15:56:25.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.949" endtime="20201030 15:56:25.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.920" endtime="20201030 15:56:25.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.918" endtime="20201030 15:56:25.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.957" endtime="20201030 15:56:26.244"></status>
</kw>
<msg timestamp="20201030 15:56:26.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022224403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022330708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:25.956" endtime="20201030 15:56:26.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022224403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022330708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:26.248" endtime="20201030 15:56:26.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.256" endtime="20201030 15:56:26.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.953" endtime="20201030 15:56:26.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.952" endtime="20201030 15:56:26.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:26.262" level="INFO">${RESULT} = [{'diff': 0.00010630500000000098}, {'diff': 0.00010598599999999889}, {'diff': 0.00010611099999999901}, {'diff': 0.00010554200000000014}, {'diff': 0.00010565300000000069}, {'diff': 0.000105707999999999...</msg>
<status status="PASS" starttime="20201030 15:56:26.259" endtime="20201030 15:56:26.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:26.267" level="INFO">${ACCURACY} = {'diff': [0.00010630500000000098, 0.00010598599999999889, 0.00010611099999999901, 0.00010554200000000014, 0.00010565300000000069, 0.0001057079999999995, 0.00010590300000000094, 0.00010606999999999978,...</msg>
<status status="PASS" starttime="20201030 15:56:26.263" endtime="20201030 15:56:26.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.271" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 15:56:26.271" endtime="20201030 15:56:26.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.274" level="INFO">VALUE: [0.00010630500000000098, 0.00010598599999999889, 0.00010611099999999901, 0.00010554200000000014, 0.00010565300000000069, 0.0001057079999999995, 0.00010590300000000094, 0.00010606999999999978, 0.00010572199999999907, 0.00010606999999999978, 0.00010606999999999978, 0.00010612499999999858, 0.0001062360000000026, 0.0001060690000000003, 0.00010558299999999937, 0.00010623599999999914, 0.00010545800000000272, 0.00010623599999999914, 0.00010612499999999858, 0.00010583299999999962, 0.00010593100000000008, 0.00010537499999999783, 0.00010630600000000046, 0.00010608400000000281, 0.00010630599999999699, 0.00010551399999999753, 0.00010611200000000195, 0.0001058889999999979, 0.00010569399999999993, 0.00010579100000000091, 0.00010545799999999925, 0.00010572199999999907, 0.0001062499999999987, 0.00010602800000000107, 0.00010565300000000069, 0.00010543099999999958, 0.00010569500000000287, 0.00010618100000000033, 0.00010609699999999944, 0.0001058339999999991, 0.00010565300000000069, 0.00010543099999999958, 0.00010558399999999885, 0.00010561099999999851, 0.00010569399999999993, 0.000105514000000001, 0.00010599999999999846, 0.00010586099999999876, 0.00010555500000000023, 0.00010615300000000119]</msg>
<status status="PASS" starttime="20201030 15:56:26.273" endtime="20201030 15:56:26.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.268" endtime="20201030 15:56:26.275"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:26.279" endtime="20201030 15:56:26.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.277" endtime="20201030 15:56:26.299"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.276" endtime="20201030 15:56:26.299"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.917" endtime="20201030 15:56:26.299"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.916" endtime="20201030 15:56:26.300"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.308" endtime="20201030 15:56:26.328"></status>
</kw>
<msg timestamp="20201030 15:56:26.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:26.307" endtime="20201030 15:56:26.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:26.329" endtime="20201030 15:56:26.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.332" endtime="20201030 15:56:26.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.304" endtime="20201030 15:56:26.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.302" endtime="20201030 15:56:26.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.341" endtime="20201030 15:56:26.631"></status>
</kw>
<msg timestamp="20201030 15:56:26.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022022403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022129903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:26.339" endtime="20201030 15:56:26.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022022403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022129903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:26.635" endtime="20201030 15:56:26.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.643" endtime="20201030 15:56:26.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.337" endtime="20201030 15:56:26.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.335" endtime="20201030 15:56:26.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:26.649" level="INFO">${RESULT} = [{'diff': 0.00010749999999999996}, {'diff': 0.0001072499999999997}, {'diff': 0.00010652800000000157}, {'diff': 0.00010643100000000058}, {'diff': 0.00010723699999999961}, {'diff': 0.0001065969999999999...</msg>
<status status="PASS" starttime="20201030 15:56:26.646" endtime="20201030 15:56:26.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:26.653" level="INFO">${ACCURACY} = {'diff': [0.00010749999999999996, 0.0001072499999999997, 0.00010652800000000157, 0.00010643100000000058, 0.00010723699999999961, 0.00010659699999999994, 0.00010719399999999796, 0.00010701399999999903,...</msg>
<status status="PASS" starttime="20201030 15:56:26.650" endtime="20201030 15:56:26.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.658" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 15:56:26.657" endtime="20201030 15:56:26.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.660" level="INFO">VALUE: [0.00010749999999999996, 0.0001072499999999997, 0.00010652800000000157, 0.00010643100000000058, 0.00010723699999999961, 0.00010659699999999994, 0.00010719399999999796, 0.00010701399999999903, 0.00010698599999999989, 0.00010651399999999853, 0.00010656899999999733, 0.00010649999999999896, 0.00010697200000000032, 0.00010731900000000155, 0.00010702800000000207, 0.00010686099999999976, 0.00010647299999999929, 0.00010720900000000047, 0.00010698699999999936, 0.00010677699999999887, 0.00010652699999999862, 0.00010723600000000014, 0.0001068889999999989, 0.00010737499999999983, 0.00010637499999999883, 0.00010729200000000189, 0.00010669399999999746, 0.00010697200000000032, 0.00010711100000000001, 0.00010676399999999878, 0.00010676400000000225, 0.00010686099999999976, 0.0001072499999999997, 0.00010655599999999724, 0.00010733300000000112, 0.00010640200000000197, 0.00010716599999999882, 0.00010711100000000001, 0.00010709700000000044, 0.00010673599999999964, 0.00010676399999999878, 0.00010662499999999908, 0.00010732000000000103, 0.00010683300000000062, 0.00010736100000000026, 0.00010715300000000219, 0.00010657000000000028, 0.0001066950000000004, 0.0001070560000000012, 0.00010712499999999958]</msg>
<status status="PASS" starttime="20201030 15:56:26.659" endtime="20201030 15:56:26.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.654" endtime="20201030 15:56:26.661"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:26.665" endtime="20201030 15:56:26.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.663" endtime="20201030 15:56:26.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.662" endtime="20201030 15:56:26.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.300" endtime="20201030 15:56:26.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.300" endtime="20201030 15:56:26.686"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.694" endtime="20201030 15:56:26.714"></status>
</kw>
<msg timestamp="20201030 15:56:26.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:26.693" endtime="20201030 15:56:26.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:26.716" endtime="20201030 15:56:26.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.718" endtime="20201030 15:56:26.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.690" endtime="20201030 15:56:26.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.688" endtime="20201030 15:56:26.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.727" endtime="20201030 15:56:27.014"></status>
</kw>
<msg timestamp="20201030 15:56:27.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022603153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022711042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:26.726" endtime="20201030 15:56:27.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022603153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022711042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:27.018" endtime="20201030 15:56:27.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.026" endtime="20201030 15:56:27.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.723" endtime="20201030 15:56:27.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.721" endtime="20201030 15:56:27.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:27.032" level="INFO">${RESULT} = [{'diff': 0.0001078889999999999}, {'diff': 0.00010809699999999797}, {'diff': 0.00010762500000000008}, {'diff': 0.00010779099999999944}, {'diff': 0.0001082630000000008}, {'diff': 0.00010837500000000083...</msg>
<status status="PASS" starttime="20201030 15:56:27.029" endtime="20201030 15:56:27.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:27.036" level="INFO">${ACCURACY} = {'diff': [0.0001078889999999999, 0.00010809699999999797, 0.00010762500000000008, 0.00010779099999999944, 0.0001082630000000008, 0.00010837500000000083, 0.00010763899999999965, 0.00010757000000000128, ...</msg>
<status status="PASS" starttime="20201030 15:56:27.033" endtime="20201030 15:56:27.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.040" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 15:56:27.039" endtime="20201030 15:56:27.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.043" level="INFO">VALUE: [0.0001078889999999999, 0.00010809699999999797, 0.00010762500000000008, 0.00010779099999999944, 0.0001082630000000008, 0.00010837500000000083, 0.00010763899999999965, 0.00010757000000000128, 0.00010831899999999908, 0.00010830499999999951, 0.00010781900000000205, 0.00010797199999999785, 0.00010772200000000107, 0.00010747199999999735, 0.00010811100000000101, 0.00010747300000000029, 0.00010794500000000165, 0.00010795900000000122, 0.00010772300000000054, 0.00010743099999999811, 0.00010773599999999717, 0.00010751399999999953, 0.00010811100000000101, 0.00010826400000000028, 0.00010815299999999972, 0.00010748600000000039, 0.00010744500000000115, 0.0001082500000000007, 0.00010809700000000144, 0.00010794500000000165, 0.00010743099999999811, 0.00010822300000000104, 0.00010758399999999738, 0.00010742999999999864, 0.00010765300000000269, 0.00010819399999999896, 0.00010826400000000028, 0.00010759700000000094, 0.00010806899999999883, 0.00010751399999999953, 0.00010747199999999735, 0.00010819399999999896, 0.00010752800000000257, 0.00010816700000000276, 0.000108208999999998, 0.0001078340000000011, 0.00010790299999999947, 0.00010819499999999843, 0.000107514000000003, 0.00010824999999999724]</msg>
<status status="PASS" starttime="20201030 15:56:27.042" endtime="20201030 15:56:27.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.037" endtime="20201030 15:56:27.045"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:27.049" endtime="20201030 15:56:27.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.047" endtime="20201030 15:56:27.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.046" endtime="20201030 15:56:27.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.687" endtime="20201030 15:56:27.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.686" endtime="20201030 15:56:27.069"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.078" endtime="20201030 15:56:27.097"></status>
</kw>
<msg timestamp="20201030 15:56:27.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:27.076" endtime="20201030 15:56:27.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:27.099" endtime="20201030 15:56:27.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.101" endtime="20201030 15:56:27.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.074" endtime="20201030 15:56:27.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.072" endtime="20201030 15:56:27.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.110" endtime="20201030 15:56:27.395"></status>
</kw>
<msg timestamp="20201030 15:56:27.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021737778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021846667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:27.109" endtime="20201030 15:56:27.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021737778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021846667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:27.399" endtime="20201030 15:56:27.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.407" endtime="20201030 15:56:27.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.106" endtime="20201030 15:56:27.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.105" endtime="20201030 15:56:27.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:27.413" level="INFO">${RESULT} = [{'diff': 0.0001088890000000009}, {'diff': 0.00010840299999999997}, {'diff': 0.00010855599999999924}, {'diff': 0.00010912499999999811}, {'diff': 0.00010882000000000253}, {'diff': 0.0001085699999999988...</msg>
<status status="PASS" starttime="20201030 15:56:27.410" endtime="20201030 15:56:27.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:27.418" level="INFO">${ACCURACY} = {'diff': [0.0001088890000000009, 0.00010840299999999997, 0.00010855599999999924, 0.00010912499999999811, 0.00010882000000000253, 0.0001085699999999988, 0.00010845900000000172, 0.00010901400000000103, ...</msg>
<status status="PASS" starttime="20201030 15:56:27.414" endtime="20201030 15:56:27.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.423" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 15:56:27.422" endtime="20201030 15:56:27.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.425" level="INFO">VALUE: [0.0001088890000000009, 0.00010840299999999997, 0.00010855599999999924, 0.00010912499999999811, 0.00010882000000000253, 0.0001085699999999988, 0.00010845900000000172, 0.00010901400000000103, 0.00010902700000000112, 0.00010929100000000094, 0.00010931900000000008, 0.00010902700000000112, 0.00010925000000000171, 0.00010841699999999954, 0.0001090829999999994, 0.00010851400000000053, 0.00010916700000000029, 0.0001087080000000025, 0.00010859699999999847, 0.00010890300000000047, 0.00010897199999999885, 0.000108902999999997, 0.00010854199999999967, 0.00010866699999999979, 0.00010850000000000096, 0.00010920799999999953, 0.00010909799999999845, 0.00010869399999999946, 0.00010905500000000026, 0.00010875000000000121, 0.00010898599999999842, 0.00010876400000000078, 0.00010895800000000275, 0.00010930599999999999, 0.00010909699999999897, 0.00010918099999999986, 0.00010902799999999713, 0.0001086950000000024, 0.00010858400000000185, 0.00010895800000000275, 0.00010867999999999989, 0.00010852700000000062, 0.00010862500000000108, 0.00010847199999999835, 0.00010913900000000115, 0.00010899999999999799, 0.00010850000000000096, 0.00010873599999999817, 0.00010890300000000047, 0.00010863900000000065]</msg>
<status status="PASS" starttime="20201030 15:56:27.424" endtime="20201030 15:56:27.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.419" endtime="20201030 15:56:27.432"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:27.436" endtime="20201030 15:56:27.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.434" endtime="20201030 15:56:27.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.433" endtime="20201030 15:56:27.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.070" endtime="20201030 15:56:27.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.070" endtime="20201030 15:56:27.457"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.465" endtime="20201030 15:56:27.485"></status>
</kw>
<msg timestamp="20201030 15:56:27.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:27.464" endtime="20201030 15:56:27.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:27.487" endtime="20201030 15:56:27.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.489" endtime="20201030 15:56:27.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.461" endtime="20201030 15:56:27.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.459" endtime="20201030 15:56:27.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.498" endtime="20201030 15:56:27.784"></status>
</kw>
<msg timestamp="20201030 15:56:27.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021811292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021921611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:27.497" endtime="20201030 15:56:27.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021811292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021921611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:27.788" endtime="20201030 15:56:27.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.796" endtime="20201030 15:56:27.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.494" endtime="20201030 15:56:27.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.492" endtime="20201030 15:56:27.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:27.802" level="INFO">${RESULT} = [{'diff': 0.00011031900000000108}, {'diff': 0.000109902999999998}, {'diff': 0.0001097219999999996}, {'diff': 0.00010974999999999874}, {'diff': 0.0001100280000000016}, {'diff': 0.00010970800000000003},...</msg>
<status status="PASS" starttime="20201030 15:56:27.799" endtime="20201030 15:56:27.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:27.807" level="INFO">${ACCURACY} = {'diff': [0.00011031900000000108, 0.000109902999999998, 0.0001097219999999996, 0.00010974999999999874, 0.0001100280000000016, 0.00010970800000000003, 0.00011027799999999838, 0.00011023599999999967, 0....</msg>
<status status="PASS" starttime="20201030 15:56:27.803" endtime="20201030 15:56:27.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.811" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 15:56:27.810" endtime="20201030 15:56:27.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.813" level="INFO">VALUE: [0.00011031900000000108, 0.000109902999999998, 0.0001097219999999996, 0.00010974999999999874, 0.0001100280000000016, 0.00010970800000000003, 0.00011027799999999838, 0.00011023599999999967, 0.00010941700000000054, 0.0001100280000000016, 0.00011004099999999822, 0.00010983300000000015, 0.00011037500000000283, 0.00010956900000000033, 0.00011019399999999749, 0.00010990300000000147, 0.00010951400000000153, 0.00011001400000000203, 0.0001095280000000011, 0.00011034700000000022, 0.000110209, 0.0001100280000000016, 0.00010941699999999707, 0.00011018099999999739, 0.00010941600000000107, 0.00011015199999999878, 0.00011012499999999911, 0.00010993000000000114, 0.00011004099999999822, 0.00010952799999999763, 0.00010995800000000028, 0.00010954200000000067, 0.0001100280000000016, 0.00010986100000000276, 0.00010963900000000165, 0.00010963899999999818, 0.00010963899999999818, 0.00010950000000000196, 0.00010997300000000279, 0.00010990300000000147, 0.00010956900000000033, 0.00011024999999999924, 0.00010998599999999942, 0.00011001399999999856, 0.00010948599999999892, 0.00010977800000000135, 0.00010979200000000092, 0.00010951399999999806, 0.00010950000000000196, 0.00010945899999999925]</msg>
<status status="PASS" starttime="20201030 15:56:27.812" endtime="20201030 15:56:27.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.807" endtime="20201030 15:56:27.815"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:27.818" endtime="20201030 15:56:27.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.817" endtime="20201030 15:56:27.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.816" endtime="20201030 15:56:27.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.458" endtime="20201030 15:56:27.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.457" endtime="20201030 15:56:27.839"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.848" endtime="20201030 15:56:27.868"></status>
</kw>
<msg timestamp="20201030 15:56:27.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:27.846" endtime="20201030 15:56:27.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:27.869" endtime="20201030 15:56:27.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.872" endtime="20201030 15:56:27.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.843" endtime="20201030 15:56:27.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.841" endtime="20201030 15:56:27.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.881" endtime="20201030 15:56:28.165"></status>
</kw>
<msg timestamp="20201030 15:56:28.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022739125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022850194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:27.879" endtime="20201030 15:56:28.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022739125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022850194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:28.169" endtime="20201030 15:56:28.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.177" endtime="20201030 15:56:28.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.877" endtime="20201030 15:56:28.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.875" endtime="20201030 15:56:28.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:28.184" level="INFO">${RESULT} = [{'diff': 0.00011106900000000183}, {'diff': 0.00011088899999999943}, {'diff': 0.00011067999999999842}, {'diff': 0.00011051400000000253}, {'diff': 0.00011074999999999974}, {'diff': 0.000111027999999999...</msg>
<status status="PASS" starttime="20201030 15:56:28.181" endtime="20201030 15:56:28.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:28.188" level="INFO">${ACCURACY} = {'diff': [0.00011106900000000183, 0.00011088899999999943, 0.00011067999999999842, 0.00011051400000000253, 0.00011074999999999974, 0.00011102799999999913, 0.00011129199999999895, 0.00011086100000000029...</msg>
<status status="PASS" starttime="20201030 15:56:28.185" endtime="20201030 15:56:28.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.192" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 15:56:28.191" endtime="20201030 15:56:28.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.194" level="INFO">VALUE: [0.00011106900000000183, 0.00011088899999999943, 0.00011067999999999842, 0.00011051400000000253, 0.00011074999999999974, 0.00011102799999999913, 0.00011129199999999895, 0.00011086100000000029, 0.00011065299999999875, 0.00011129199999999895, 0.00011083400000000063, 0.00011088899999999943, 0.00011056900000000133, 0.00011119500000000143, 0.00011081899999999811, 0.0001107769999999994, 0.00011104100000000269, 0.00011102799999999913, 0.00011116699999999882, 0.00011113899999999968, 0.0001105700000000008, 0.00011084700000000072, 0.00011043100000000111, 0.0001107359999999967, 0.00011132000000000156, 0.00011109800000000045, 0.00011098600000000042, 0.00011132000000000156, 0.0001103890000000024, 0.00011047200000000035, 0.00011043000000000164, 0.00011067999999999842, 0.00011067999999999842, 0.00011129199999999895, 0.000110902999999999, 0.00011044500000000068, 0.00011116700000000229, 0.00011129199999999895, 0.00011043100000000111, 0.0001105280000000021, 0.00011072199999999713, 0.00011122199999999763, 0.00011070800000000103, 0.00011067999999999842, 0.00011048599999999992, 0.00011058299999999743, 0.00011048599999999992, 0.00011074999999999974, 0.00011068099999999789, 0.00011095799999999781]</msg>
<status status="PASS" starttime="20201030 15:56:28.193" endtime="20201030 15:56:28.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.188" endtime="20201030 15:56:28.197"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:28.200" endtime="20201030 15:56:28.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.199" endtime="20201030 15:56:28.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.198" endtime="20201030 15:56:28.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.840" endtime="20201030 15:56:28.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.839" endtime="20201030 15:56:28.221"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.230" endtime="20201030 15:56:28.251"></status>
</kw>
<msg timestamp="20201030 15:56:28.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:28.228" endtime="20201030 15:56:28.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:28.252" endtime="20201030 15:56:28.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.255" endtime="20201030 15:56:28.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.225" endtime="20201030 15:56:28.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.223" endtime="20201030 15:56:28.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.263" endtime="20201030 15:56:28.549"></status>
</kw>
<msg timestamp="20201030 15:56:28.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021932458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022044792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:28.262" endtime="20201030 15:56:28.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021932458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022044792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:28.553" endtime="20201030 15:56:28.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.561" endtime="20201030 15:56:28.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.259" endtime="20201030 15:56:28.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.258" endtime="20201030 15:56:28.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:28.568" level="INFO">${RESULT} = [{'diff': 0.00011233400000000213}, {'diff': 0.00011161200000000052}, {'diff': 0.00011191699999999957}, {'diff': 0.00011195800000000228}, {'diff': 0.00011200000000000099}, {'diff': 0.000111597000000001...</msg>
<status status="PASS" starttime="20201030 15:56:28.565" endtime="20201030 15:56:28.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:28.573" level="INFO">${ACCURACY} = {'diff': [0.00011233400000000213, 0.00011161200000000052, 0.00011191699999999957, 0.00011195800000000228, 0.00011200000000000099, 0.00011159700000000147, 0.00011199999999999752, 0.00011175000000000074...</msg>
<status status="PASS" starttime="20201030 15:56:28.569" endtime="20201030 15:56:28.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.577" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 15:56:28.576" endtime="20201030 15:56:28.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.579" level="INFO">VALUE: [0.00011233400000000213, 0.00011161200000000052, 0.00011191699999999957, 0.00011195800000000228, 0.00011200000000000099, 0.00011159700000000147, 0.00011199999999999752, 0.00011175000000000074, 0.00011198600000000142, 0.00011163900000000018, 0.00011205599999999927, 0.00011222199999999863, 0.00011205599999999927, 0.00011222300000000157, 0.00011218100000000286, 0.00011183400000000163, 0.00011195899999999828, 0.00011184699999999825, 0.00011140200000000003, 0.00011212499999999764, 0.00011152799999999963, 0.00011212500000000111, 0.00011162500000000061, 0.00011206999999999884, 0.00011162500000000061, 0.00011148599999999745, 0.00011170799999999856, 0.00011177799999999988, 0.00011201400000000056, 0.00011144499999999821, 0.00011163799999999724, 0.00011180499999999954, 0.00011155500000000276, 0.00011225000000000124, 0.00011148600000000092, 0.00011176400000000031, 0.00011179200000000292, 0.00011188900000000043, 0.00011218099999999939, 0.00011156999999999834, 0.00011218099999999939, 0.00011152799999999963, 0.00011213900000000068, 0.00011215300000000025, 0.00011152799999999963, 0.00011229199999999995, 0.00011206899999999936, 0.00011172199999999813, 0.00011199999999999752, 0.00011220799999999906]</msg>
<status status="PASS" starttime="20201030 15:56:28.578" endtime="20201030 15:56:28.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.573" endtime="20201030 15:56:28.581"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:28.584" endtime="20201030 15:56:28.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.583" endtime="20201030 15:56:28.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.582" endtime="20201030 15:56:28.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.222" endtime="20201030 15:56:28.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.221" endtime="20201030 15:56:28.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.021" endtime="20201030 15:56:28.605"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:49.953" endtime="20201030 15:56:28.606" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:55:09.749" endtime="20201030 15:56:28.609"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.662" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:56:28.670" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:56:29.946" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:56:28.661" endtime="20201030 15:56:29.947"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:56:29.949" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:56:29.948" endtime="20201030 15:56:29.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.659" endtime="20201030 15:56:29.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:29.952" endtime="20201030 15:56:30.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.951" endtime="20201030 15:56:30.138"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.150" endtime="20201030 15:56:30.165"></status>
</kw>
<msg timestamp="20201030 15:56:30.166" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:30.149" endtime="20201030 15:56:30.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.168" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:30.167" endtime="20201030 15:56:30.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.172" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:30.170" endtime="20201030 15:56:30.172"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:30.147" endtime="20201030 15:56:30.172"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:30.144" endtime="20201030 15:56:30.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.143" endtime="20201030 15:56:30.173"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:30.177" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:30.176" endtime="20201030 15:56:30.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.174" endtime="20201030 15:56:30.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.142" endtime="20201030 15:56:30.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.142" endtime="20201030 15:56:30.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.179" endtime="20201030 15:56:30.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.140" endtime="20201030 15:56:30.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.181" endtime="20201030 15:56:30.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.139" endtime="20201030 15:56:30.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.658" endtime="20201030 15:56:30.184"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:30.190" endtime="20201030 15:56:30.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.188" endtime="20201030 15:56:30.210"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.223" endtime="20201030 15:56:30.237"></status>
</kw>
<msg timestamp="20201030 15:56:30.237" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:30.221" endtime="20201030 15:56:30.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.240" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:30.238" endtime="20201030 15:56:30.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.243" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:30.241" endtime="20201030 15:56:30.244"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:30.219" endtime="20201030 15:56:30.245"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:30.216" endtime="20201030 15:56:30.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.215" endtime="20201030 15:56:30.245"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:30.249" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:30.248" endtime="20201030 15:56:30.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.246" endtime="20201030 15:56:30.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.214" endtime="20201030 15:56:30.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.213" endtime="20201030 15:56:30.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.251" endtime="20201030 15:56:30.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.212" endtime="20201030 15:56:30.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.210" endtime="20201030 15:56:30.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.187" endtime="20201030 15:56:30.253"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.262" endtime="20201030 15:56:36.380"></status>
</kw>
<msg timestamp="20201030 15:56:36.381" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:30.260" endtime="20201030 15:56:36.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.383" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:36.382" endtime="20201030 15:56:36.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:36.384" endtime="20201030 15:56:36.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.258" endtime="20201030 15:56:36.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.256" endtime="20201030 15:56:36.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:36.389" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201030 15:56:36.387" endtime="20201030 15:56:36.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.394" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:36.393" endtime="20201030 15:56:36.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.396" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:56:36.395" endtime="20201030 15:56:36.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.390" endtime="20201030 15:56:36.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.400" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:36.399" endtime="20201030 15:56:36.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.402" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:56:36.401" endtime="20201030 15:56:36.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.397" endtime="20201030 15:56:36.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.407" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:56:36.406" endtime="20201030 15:56:36.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.409" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 15:56:36.408" endtime="20201030 15:56:36.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.404" endtime="20201030 15:56:36.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:36.416" endtime="20201030 15:56:36.716"></status>
</kw>
<msg timestamp="20201030 15:56:36.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062156569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162177403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:36.415" endtime="20201030 15:56:36.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062156569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162177403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:36.720" endtime="20201030 15:56:36.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:36.727" endtime="20201030 15:56:36.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.412" endtime="20201030 15:56:36.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.410" endtime="20201030 15:56:36.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:56:36.734" level="INFO">${FILTERED} = [{'diff': 0.100020834}, {'diff': 0.100005598}, {'diff': 5.419999999922709e-07}, {'diff': 0.10000729099999994}, {'diff': 0.10000677800000002}, {'diff': 0.10000680500000003}, {'diff': 0.1000067909999999...</msg>
<status status="PASS" starttime="20201030 15:56:36.731" endtime="20201030 15:56:36.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:36.737" level="INFO">${RESULT} = {'diff': [0.100020834, 0.100005598, 5.419999999922709e-07, 0.10000729099999994, 0.10000677800000002, 0.10000680500000003, 0.10000679099999998, 0.100006861, 5.409999999095305e-07, 5.419999999922709e-07...</msg>
<status status="PASS" starttime="20201030 15:56:36.735" endtime="20201030 15:56:36.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.742" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:56:36.741" endtime="20201030 15:56:36.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.744" level="INFO">VALUE: [0.100020834, 0.100005598, 5.419999999922709e-07, 0.10000729099999994, 0.10000677800000002, 0.10000680500000003, 0.10000679099999998, 0.100006861, 5.409999999095305e-07, 5.419999999922709e-07, 0.10000726399999982, 0.10000680599999989, 0.10000680599999989, 0.10000683300000013, 0.10000680499999981, 0.1000067779999998, 0.10000681999999994, 0.10000679199999984, 0.10000681899999986, 0.10000679200000029, 0.10000680600000011, 0.10000680600000011, 0.10000680500000003, 0.10000688899999988, 5.410000003536197e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000730599999974, 0.10000679200000029, 0.10000681899999986, 0.1000067910000002, 0.10000681999999994, 0.10000683400000021, 0.10000683399999977, 0.10000680599999967, 0.10000683400000066, 0.10000683400000021, 0.10000679200000029, 0.10000683300000013, 0.10000681899999986, 0.10000681899999986, 0.1000068470000004, 0.10000680500000048, 0.10000687500000005, 5.410000003536197e-07, 5.409999994654413e-07]</msg>
<status status="PASS" starttime="20201030 15:56:36.743" endtime="20201030 15:56:36.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.738" endtime="20201030 15:56:36.745"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:36.749" endtime="20201030 15:56:36.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.747" endtime="20201030 15:56:36.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.746" endtime="20201030 15:56:36.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.254" endtime="20201030 15:56:36.769"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:30.184" endtime="20201030 15:56:36.770" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:36.776" endtime="20201030 15:56:36.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.775" endtime="20201030 15:56:36.796"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:36.810" endtime="20201030 15:56:36.824"></status>
</kw>
<msg timestamp="20201030 15:56:36.824" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:36.809" endtime="20201030 15:56:36.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.827" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:36.825" endtime="20201030 15:56:36.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.830" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:36.828" endtime="20201030 15:56:36.830"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:36.806" endtime="20201030 15:56:36.831"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:36.804" endtime="20201030 15:56:36.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.802" endtime="20201030 15:56:36.832"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:36.835" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:36.834" endtime="20201030 15:56:36.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.832" endtime="20201030 15:56:36.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.801" endtime="20201030 15:56:36.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.800" endtime="20201030 15:56:36.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:36.837" endtime="20201030 15:56:36.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.799" endtime="20201030 15:56:36.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.797" endtime="20201030 15:56:36.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.774" endtime="20201030 15:56:36.840"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:36.848" endtime="20201030 15:56:42.969"></status>
</kw>
<msg timestamp="20201030 15:56:42.970" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:36.846" endtime="20201030 15:56:42.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.976" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:42.972" endtime="20201030 15:56:42.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.978" endtime="20201030 15:56:42.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.843" endtime="20201030 15:56:43.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.842" endtime="20201030 15:56:43.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:43.006" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201030 15:56:43.003" endtime="20201030 15:56:43.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.014" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:43.012" endtime="20201030 15:56:43.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.019" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:56:43.017" endtime="20201030 15:56:43.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.008" endtime="20201030 15:56:43.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.028" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:43.026" endtime="20201030 15:56:43.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.035" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:56:43.030" endtime="20201030 15:56:43.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.022" endtime="20201030 15:56:43.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.045" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:56:43.043" endtime="20201030 15:56:43.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.049" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 15:56:43.047" endtime="20201030 15:56:43.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.038" endtime="20201030 15:56:43.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.064" endtime="20201030 15:56:43.363"></status>
</kw>
<msg timestamp="20201030 15:56:43.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061417167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161446097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:43.061" endtime="20201030 15:56:43.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061417167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161446097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:43.367" endtime="20201030 15:56:43.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.375" endtime="20201030 15:56:43.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.055" endtime="20201030 15:56:43.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.052" endtime="20201030 15:56:43.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:56:43.381" level="INFO">${FILTERED} = [{'diff': 0.10002893000000002}, {'diff': 0.099997153}, {'diff': 0.10000570900000005}, {'diff': 0.100007917}, {'diff': 0.10000680500000003}, {'diff': 0.10000683300000002}, {'diff': 0.10000684699999995}...</msg>
<status status="PASS" starttime="20201030 15:56:43.378" endtime="20201030 15:56:43.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:43.385" level="INFO">${RESULT} = {'diff': [0.10002893000000002, 0.099997153, 0.10000570900000005, 0.100007917, 0.10000680500000003, 0.10000683300000002, 0.10000684699999995, 0.10000675000000003, 0.10000693100000002, 0.100006804999999...</msg>
<status status="PASS" starttime="20201030 15:56:43.382" endtime="20201030 15:56:43.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.390" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:56:43.389" endtime="20201030 15:56:43.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.392" level="INFO">VALUE: [0.10002893000000002, 0.099997153, 0.10000570900000005, 0.100007917, 0.10000680500000003, 0.10000683300000002, 0.10000684699999995, 0.10000675000000003, 0.10000693100000002, 0.10000680499999992, 0.10000683300000013, 0.10000676399999997, 0.10000698699999999, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999999922709e-07, 0.10000731899999993, 0.10000676400000019, 0.10000691699999997, 0.10000683300000013, 0.10000684699999995, 0.10000674999999992, 0.10000693100000024, 0.10000681999999994, 0.10000683300000013, 0.10000681899999986, 5.419999999922709e-07, 5.409999999095305e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.410000003536197e-07, 0.10000738899999995, 0.10000683400000021, 0.10000684699999951, 0.10000677800000002, 0.10000690200000051, 0.10000683300000013, 0.10000686099999978]</msg>
<status status="PASS" starttime="20201030 15:56:43.391" endtime="20201030 15:56:43.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.386" endtime="20201030 15:56:43.394"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:43.397" endtime="20201030 15:56:43.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.396" endtime="20201030 15:56:43.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.395" endtime="20201030 15:56:43.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.840" endtime="20201030 15:56:43.418"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:36.771" endtime="20201030 15:56:43.418" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:43.425" endtime="20201030 15:56:43.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.423" endtime="20201030 15:56:43.445"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.458" endtime="20201030 15:56:43.472"></status>
</kw>
<msg timestamp="20201030 15:56:43.472" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:43.456" endtime="20201030 15:56:43.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.474" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:43.473" endtime="20201030 15:56:43.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.477" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:43.476" endtime="20201030 15:56:43.478"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:43.453" endtime="20201030 15:56:43.478"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:43.451" endtime="20201030 15:56:43.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.450" endtime="20201030 15:56:43.479"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:43.483" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:43.482" endtime="20201030 15:56:43.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.480" endtime="20201030 15:56:43.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.449" endtime="20201030 15:56:43.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.448" endtime="20201030 15:56:43.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.485" endtime="20201030 15:56:43.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.447" endtime="20201030 15:56:43.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.446" endtime="20201030 15:56:43.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.422" endtime="20201030 15:56:43.488"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.497" endtime="20201030 15:56:49.620"></status>
</kw>
<msg timestamp="20201030 15:56:49.621" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:43.495" endtime="20201030 15:56:49.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.626" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:49.623" endtime="20201030 15:56:49.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.629" endtime="20201030 15:56:49.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.491" endtime="20201030 15:56:49.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.489" endtime="20201030 15:56:49.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:49.639" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201030 15:56:49.636" endtime="20201030 15:56:49.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.648" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:49.646" endtime="20201030 15:56:49.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.652" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:56:49.651" endtime="20201030 15:56:49.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.641" endtime="20201030 15:56:49.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.662" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:49.660" endtime="20201030 15:56:49.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.666" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:56:49.664" endtime="20201030 15:56:49.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.655" endtime="20201030 15:56:49.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.676" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:56:49.674" endtime="20201030 15:56:49.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.680" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 15:56:49.678" endtime="20201030 15:56:49.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.669" endtime="20201030 15:56:49.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.695" endtime="20201030 15:56:49.992"></status>
</kw>
<msg timestamp="20201030 15:56:49.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062311333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162348028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:49.692" endtime="20201030 15:56:49.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062311333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162348028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:49.996" endtime="20201030 15:56:50.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.004" endtime="20201030 15:56:50.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.687" endtime="20201030 15:56:50.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.683" endtime="20201030 15:56:50.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:56:50.011" level="INFO">${FILTERED} = [{'diff': 0.10003669500000001}, {'diff': 0.099989459}, {'diff': 0.10000698699999999}, {'diff': 0.10000573600000001}, {'diff': 0.10000688900000004}, {'diff': 0.10000681899999997}, {'diff': 0.1000068189...</msg>
<status status="PASS" starttime="20201030 15:56:50.007" endtime="20201030 15:56:50.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:50.015" level="INFO">${RESULT} = {'diff': [0.10003669500000001, 0.099989459, 0.10000698699999999, 0.10000573600000001, 0.10000688900000004, 0.10000681899999997, 0.10000681899999997, 0.10000676399999997, 0.10000691699999997, 0.1000068...</msg>
<status status="PASS" starttime="20201030 15:56:50.011" endtime="20201030 15:56:50.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.020" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:56:50.019" endtime="20201030 15:56:50.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.022" level="INFO">VALUE: [0.10003669500000001, 0.099989459, 0.10000698699999999, 0.10000573600000001, 0.10000688900000004, 0.10000681899999997, 0.10000681899999997, 0.10000676399999997, 0.10000691699999997, 0.10000680499999992, 0.10000681900000008, 0.10000676399999997, 0.10000688800000002, 0.100006861, 0.10000679200000007, 0.10000677800000002, 0.10000691600000011, 0.10000680599999989, 0.10000680599999989, 0.10000676399999997, 0.10000691699999997, 0.10000680600000011, 0.10000683300000013, 0.10000676299999967, 0.10000690300000015, 0.10000681899999986, 0.10000683300000013, 0.10000684699999995, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 0.10000731899999993, 0.10000687500000005, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07]</msg>
<status status="PASS" starttime="20201030 15:56:50.021" endtime="20201030 15:56:50.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.016" endtime="20201030 15:56:50.023"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:50.027" endtime="20201030 15:56:50.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.025" endtime="20201030 15:56:50.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.024" endtime="20201030 15:56:50.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.488" endtime="20201030 15:56:50.048"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:43.420" endtime="20201030 15:56:50.048" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:50.054" endtime="20201030 15:56:50.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.053" endtime="20201030 15:56:50.074"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.087" endtime="20201030 15:56:50.102"></status>
</kw>
<msg timestamp="20201030 15:56:50.102" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:50.086" endtime="20201030 15:56:50.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.105" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:50.103" endtime="20201030 15:56:50.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.108" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:50.106" endtime="20201030 15:56:50.108"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:50.083" endtime="20201030 15:56:50.109"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:50.081" endtime="20201030 15:56:50.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.080" endtime="20201030 15:56:50.110"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:50.113" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:50.113" endtime="20201030 15:56:50.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.110" endtime="20201030 15:56:50.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.079" endtime="20201030 15:56:50.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.078" endtime="20201030 15:56:50.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.115" endtime="20201030 15:56:50.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.077" endtime="20201030 15:56:50.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.075" endtime="20201030 15:56:50.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.052" endtime="20201030 15:56:50.118"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.126" endtime="20201030 15:56:56.248"></status>
</kw>
<msg timestamp="20201030 15:56:56.249" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:50.124" endtime="20201030 15:56:56.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.254" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:56.251" endtime="20201030 15:56:56.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:56.257" endtime="20201030 15:56:56.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.122" endtime="20201030 15:56:56.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.120" endtime="20201030 15:56:56.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:56.267" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201030 15:56:56.264" endtime="20201030 15:56:56.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.276" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:56.273" endtime="20201030 15:56:56.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.280" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:56:56.278" endtime="20201030 15:56:56.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.269" endtime="20201030 15:56:56.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.289" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:56.287" endtime="20201030 15:56:56.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.294" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:56:56.292" endtime="20201030 15:56:56.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.283" endtime="20201030 15:56:56.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.303" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:56:56.301" endtime="20201030 15:56:56.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.307" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 15:56:56.305" endtime="20201030 15:56:56.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.297" endtime="20201030 15:56:56.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:56.317" endtime="20201030 15:56:56.614"></status>
</kw>
<msg timestamp="20201030 15:56:56.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061665583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161750653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:56.315" endtime="20201030 15:56:56.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061665583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161750653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:56.618" endtime="20201030 15:56:56.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:56.628" endtime="20201030 15:56:56.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.313" endtime="20201030 15:56:56.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.311" endtime="20201030 15:56:56.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:56:56.634" level="INFO">${FILTERED} = [{'diff': 0.10008507}, {'diff': 0.09994038900000002}, {'diff': 0.10000884700000001}, {'diff': 0.100007083}, {'diff': 0.100005542}, {'diff': 0.10000801400000003}, {'diff': 0.10000554099999992}, {'diff'...</msg>
<status status="PASS" starttime="20201030 15:56:56.631" endtime="20201030 15:56:56.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:56.638" level="INFO">${RESULT} = {'diff': [0.10008507, 0.09994038900000002, 0.10000884700000001, 0.100007083, 0.100005542, 0.10000801400000003, 0.10000554099999992, 0.10000805600000007, 0.10000559799999997, 5.419999999922709e-07, 5.4...</msg>
<status status="PASS" starttime="20201030 15:56:56.635" endtime="20201030 15:56:56.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.642" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:56:56.641" endtime="20201030 15:56:56.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.645" level="INFO">VALUE: [0.10008507, 0.09994038900000002, 0.10000884700000001, 0.100007083, 0.100005542, 0.10000801400000003, 0.10000554099999992, 0.10000805600000007, 0.10000559799999997, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 0.10000858400000023, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.409999994654413e-07]</msg>
<status status="PASS" starttime="20201030 15:56:56.644" endtime="20201030 15:56:56.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.639" endtime="20201030 15:56:56.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:56.650" endtime="20201030 15:56:56.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.648" endtime="20201030 15:56:56.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.647" endtime="20201030 15:56:56.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.118" endtime="20201030 15:56:56.670"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:50.049" endtime="20201030 15:56:56.671" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:56.677" endtime="20201030 15:56:56.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.676" endtime="20201030 15:56:56.697"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:56.711" endtime="20201030 15:56:56.725"></status>
</kw>
<msg timestamp="20201030 15:56:56.725" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:56.710" endtime="20201030 15:56:56.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.728" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:56.726" endtime="20201030 15:56:56.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.731" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:56.729" endtime="20201030 15:56:56.731"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:56.707" endtime="20201030 15:56:56.732"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:56.705" endtime="20201030 15:56:56.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.703" endtime="20201030 15:56:56.733"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:56.736" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:56.736" endtime="20201030 15:56:56.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.734" endtime="20201030 15:56:56.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.703" endtime="20201030 15:56:56.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.702" endtime="20201030 15:56:56.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:56.738" endtime="20201030 15:56:56.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.700" endtime="20201030 15:56:56.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.698" endtime="20201030 15:56:56.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.675" endtime="20201030 15:56:56.741"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:56.749" endtime="20201030 15:57:02.871"></status>
</kw>
<msg timestamp="20201030 15:57:02.872" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:56.747" endtime="20201030 15:57:02.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.877" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:02.874" endtime="20201030 15:57:02.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:02.880" endtime="20201030 15:57:02.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.745" endtime="20201030 15:57:02.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.743" endtime="20201030 15:57:02.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:02.890" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201030 15:57:02.887" endtime="20201030 15:57:02.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.899" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:57:02.897" endtime="20201030 15:57:02.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.905" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:57:02.901" endtime="20201030 15:57:02.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.892" endtime="20201030 15:57:02.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.915" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:57:02.913" endtime="20201030 15:57:02.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.919" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:57:02.917" endtime="20201030 15:57:02.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.908" endtime="20201030 15:57:02.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.927" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:57:02.926" endtime="20201030 15:57:02.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.929" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 15:57:02.928" endtime="20201030 15:57:02.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.922" endtime="20201030 15:57:02.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:02.936" endtime="20201030 15:57:03.230"></status>
</kw>
<msg timestamp="20201030 15:57:03.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061760806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161885542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:02.935" endtime="20201030 15:57:03.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061760806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161885542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:03.234" endtime="20201030 15:57:03.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:03.242" endtime="20201030 15:57:03.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.932" endtime="20201030 15:57:03.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.930" endtime="20201030 15:57:03.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:57:03.248" level="INFO">${FILTERED} = [{'diff': 0.10012473599999999}, {'diff': 0.09992637500000004}, {'diff': 0.09998154199999998}, {'diff': 0.10000682}, {'diff': 0.10000711200000006}, {'diff': 5.410000000205528e-07}, {'diff': 5.419999999...</msg>
<status status="PASS" starttime="20201030 15:57:03.245" endtime="20201030 15:57:03.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:03.253" level="INFO">${RESULT} = {'diff': [0.10012473599999999, 0.09992637500000004, 0.09998154199999998, 0.10000682, 0.10000711200000006, 5.410000000205528e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5....</msg>
<status status="PASS" starttime="20201030 15:57:03.249" endtime="20201030 15:57:03.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.257" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:57:03.256" endtime="20201030 15:57:03.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.259" level="INFO">VALUE: [0.10012473599999999, 0.09992637500000004, 0.09998154199999998, 0.10000682, 0.10000711200000006, 5.410000000205528e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000723600000017, 0.1000068329999999, 0.10000681900000008, 0.1000068329999999, 0.10000683300000013, 0.10000684699999995, 0.10000680500000003, 0.10000694399999999, 0.1000067360000001, 0.10000688899999988, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000731899999993, 0.10000683299999968, 0.10000683300000013, 0.1000069309999998, 0.10000674999999948, 0.10000680599999967, 0.10000683400000021, 0.10000683400000021, 0.10000684699999951, 0.10000683300000013, 0.10000683300000013, 0.10000697200000008, 5.419999995481817e-07, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201030 15:57:03.258" endtime="20201030 15:57:03.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.254" endtime="20201030 15:57:03.261"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:03.264" endtime="20201030 15:57:03.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.263" endtime="20201030 15:57:03.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.262" endtime="20201030 15:57:03.285"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.741" endtime="20201030 15:57:03.285"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:56.672" endtime="20201030 15:57:03.286" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:03.292" endtime="20201030 15:57:03.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.290" endtime="20201030 15:57:03.312"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:03.325" endtime="20201030 15:57:03.339"></status>
</kw>
<msg timestamp="20201030 15:57:03.339" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:03.323" endtime="20201030 15:57:03.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.342" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:03.340" endtime="20201030 15:57:03.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.345" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:57:03.343" endtime="20201030 15:57:03.345"></status>
</kw>
<status status="FAIL" starttime="20201030 15:57:03.321" endtime="20201030 15:57:03.346"></status>
</kw>
<status status="FAIL" starttime="20201030 15:57:03.318" endtime="20201030 15:57:03.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.317" endtime="20201030 15:57:03.347"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:57:03.350" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:57:03.350" endtime="20201030 15:57:03.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.348" endtime="20201030 15:57:03.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.316" endtime="20201030 15:57:03.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.316" endtime="20201030 15:57:03.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:03.352" endtime="20201030 15:57:03.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.314" endtime="20201030 15:57:03.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.312" endtime="20201030 15:57:03.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.289" endtime="20201030 15:57:03.355"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:03.364" endtime="20201030 15:57:09.487"></status>
</kw>
<msg timestamp="20201030 15:57:09.488" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:03.363" endtime="20201030 15:57:09.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:09.493" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:09.490" endtime="20201030 15:57:09.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:09.496" endtime="20201030 15:57:09.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.360" endtime="20201030 15:57:09.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.357" endtime="20201030 15:57:09.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:09.506" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201030 15:57:09.503" endtime="20201030 15:57:09.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:09.515" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:57:09.513" endtime="20201030 15:57:09.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:09.519" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:57:09.517" endtime="20201030 15:57:09.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.508" endtime="20201030 15:57:09.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:09.534" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:57:09.531" endtime="20201030 15:57:09.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:09.542" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:57:09.538" endtime="20201030 15:57:09.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.524" endtime="20201030 15:57:09.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:09.556" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:57:09.553" endtime="20201030 15:57:09.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:09.563" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 15:57:09.560" endtime="20201030 15:57:09.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.546" endtime="20201030 15:57:09.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:09.572" endtime="20201030 15:57:09.868"></status>
</kw>
<msg timestamp="20201030 15:57:09.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062682972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162859569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:09.570" endtime="20201030 15:57:09.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:09.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062682972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162859569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:09.871" endtime="20201030 15:57:09.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:09.879" endtime="20201030 15:57:09.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.568" endtime="20201030 15:57:09.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.566" endtime="20201030 15:57:09.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:57:09.885" level="INFO">${FILTERED} = [{'diff': 0.100176597}, {'diff': 0.09986956999999999}, {'diff': 0.09998631999999996}, {'diff': 0.10000788900000002}, {'diff': 0.10000672199999999}, {'diff': 0.100006861}, {'diff': 0.10000575}, {'diff'...</msg>
<status status="PASS" starttime="20201030 15:57:09.882" endtime="20201030 15:57:09.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:09.893" level="INFO">${RESULT} = {'diff': [0.100176597, 0.09986956999999999, 0.09998631999999996, 0.10000788900000002, 0.10000672199999999, 0.100006861, 0.10000575, 0.10000883400000005, 0.10000583400000007, 0.10000679199999996, 0.100...</msg>
<status status="PASS" starttime="20201030 15:57:09.886" endtime="20201030 15:57:09.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:09.897" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:57:09.896" endtime="20201030 15:57:09.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:09.899" level="INFO">VALUE: [0.100176597, 0.09986956999999999, 0.09998631999999996, 0.10000788900000002, 0.10000672199999999, 0.100006861, 0.10000575, 0.10000883400000005, 0.10000583400000007, 0.10000679199999996, 0.10000691600000011, 0.10000672200000005, 0.10000681899999986, 0.10000679199999984, 0.10000781999999986, 0.10000680599999989, 0.10000697200000008, 5.420000002143155e-07, 0.1000062220000002, 0.10000780499999973, 0.10000683300000013, 0.10000679199999984, 0.10000682000000038, 0.10000680600000011, 0.10000681899999986, 0.10000693000000016, 0.10000570799999986, 0.100007819, 0.10000687500000005, 5.409999999095305e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.280000001661733e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201030 15:57:09.898" endtime="20201030 15:57:09.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.894" endtime="20201030 15:57:09.900"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:09.904" endtime="20201030 15:57:09.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.903" endtime="20201030 15:57:09.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.901" endtime="20201030 15:57:09.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.355" endtime="20201030 15:57:09.925"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 15:57:03.287" endtime="20201030 15:57:09.925" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:56:28.618" endtime="20201030 15:57:09.932"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201030 15:54:27.573" endtime="20201030 15:57:09.964"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
