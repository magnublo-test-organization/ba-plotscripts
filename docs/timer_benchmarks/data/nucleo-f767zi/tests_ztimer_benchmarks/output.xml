<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 12:45:30.494" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.124" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:45:31.133" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:45:32.322" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:45:31.123" endtime="20201029 12:45:32.323"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.325" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:45:32.324" endtime="20201029 12:45:32.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.122" endtime="20201029 12:45:32.326"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:32.328" endtime="20201029 12:45:32.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.327" endtime="20201029 12:45:32.561"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.573" endtime="20201029 12:45:32.587"></status>
</kw>
<msg timestamp="20201029 12:45:32.588" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:32.572" endtime="20201029 12:45:32.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.590" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:32.589" endtime="20201029 12:45:32.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.593" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:32.591" endtime="20201029 12:45:32.594"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:32.569" endtime="20201029 12:45:32.594"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:32.567" endtime="20201029 12:45:32.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.566" endtime="20201029 12:45:32.595"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:32.599" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:32.598" endtime="20201029 12:45:32.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.596" endtime="20201029 12:45:32.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.565" endtime="20201029 12:45:32.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.564" endtime="20201029 12:45:32.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.601" endtime="20201029 12:45:32.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.563" endtime="20201029 12:45:32.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.604" endtime="20201029 12:45:32.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.561" endtime="20201029 12:45:32.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.120" endtime="20201029 12:45:32.606"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:32.613" endtime="20201029 12:45:32.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.612" endtime="20201029 12:45:32.633"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.646" endtime="20201029 12:45:32.660"></status>
</kw>
<msg timestamp="20201029 12:45:32.661" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:32.645" endtime="20201029 12:45:32.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.663" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:32.662" endtime="20201029 12:45:32.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.666" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:32.664" endtime="20201029 12:45:32.666"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:32.642" endtime="20201029 12:45:32.667"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:32.640" endtime="20201029 12:45:32.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.638" endtime="20201029 12:45:32.668"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:32.672" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:32.671" endtime="20201029 12:45:32.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.669" endtime="20201029 12:45:32.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.637" endtime="20201029 12:45:32.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.636" endtime="20201029 12:45:32.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.673" endtime="20201029 12:45:32.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.635" endtime="20201029 12:45:32.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.634" endtime="20201029 12:45:32.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.610" endtime="20201029 12:45:32.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.684" endtime="20201029 12:45:32.694"></status>
</kw>
<msg timestamp="20201029 12:45:32.694" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:32.681" endtime="20201029 12:45:32.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.697" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:32.695" endtime="20201029 12:45:32.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.698" endtime="20201029 12:45:32.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.679" endtime="20201029 12:45:32.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.677" endtime="20201029 12:45:32.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.704" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 12:45:32.703" endtime="20201029 12:45:32.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.707" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201029 12:45:32.705" endtime="20201029 12:45:32.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.701" endtime="20201029 12:45:32.708"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:32.607" endtime="20201029 12:45:32.708" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:45:30.618" endtime="20201029 12:45:32.711"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.768" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:45:32.777" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:45:34.029" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:45:32.766" endtime="20201029 12:45:34.030"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.034" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:45:34.032" endtime="20201029 12:45:34.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.764" endtime="20201029 12:45:34.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:34.039" endtime="20201029 12:45:34.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.036" endtime="20201029 12:45:34.322"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.334" endtime="20201029 12:45:34.348"></status>
</kw>
<msg timestamp="20201029 12:45:34.348" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:34.333" endtime="20201029 12:45:34.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.351" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:34.349" endtime="20201029 12:45:34.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.354" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:34.352" endtime="20201029 12:45:34.354"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:34.330" endtime="20201029 12:45:34.355"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:34.328" endtime="20201029 12:45:34.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.327" endtime="20201029 12:45:34.356"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:34.359" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:34.359" endtime="20201029 12:45:34.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.357" endtime="20201029 12:45:34.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.326" endtime="20201029 12:45:34.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.325" endtime="20201029 12:45:34.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.361" endtime="20201029 12:45:34.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.324" endtime="20201029 12:45:34.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.364" endtime="20201029 12:45:34.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.322" endtime="20201029 12:45:34.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.762" endtime="20201029 12:45:34.366"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:34.372" endtime="20201029 12:45:34.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.370" endtime="20201029 12:45:34.392"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.405" endtime="20201029 12:45:34.419"></status>
</kw>
<msg timestamp="20201029 12:45:34.420" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:34.404" endtime="20201029 12:45:34.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.423" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:34.421" endtime="20201029 12:45:34.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.426" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:34.424" endtime="20201029 12:45:34.426"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:34.401" endtime="20201029 12:45:34.426"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:34.399" endtime="20201029 12:45:34.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.397" endtime="20201029 12:45:34.427"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:34.431" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:34.430" endtime="20201029 12:45:34.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.428" endtime="20201029 12:45:34.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.397" endtime="20201029 12:45:34.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.396" endtime="20201029 12:45:34.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.433" endtime="20201029 12:45:34.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.395" endtime="20201029 12:45:34.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.393" endtime="20201029 12:45:34.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.369" endtime="20201029 12:45:34.435"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.444" endtime="20201029 12:45:34.455"></status>
</kw>
<msg timestamp="20201029 12:45:34.455" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:34.442" endtime="20201029 12:45:34.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.458" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:34.456" endtime="20201029 12:45:34.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.459" endtime="20201029 12:45:34.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.440" endtime="20201029 12:45:34.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.438" endtime="20201029 12:45:34.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.467" endtime="20201029 12:45:34.736"></status>
</kw>
<msg timestamp="20201029 12:45:34.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062033958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062037569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:34.466" endtime="20201029 12:45:34.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062033958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062037569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:34.739" endtime="20201029 12:45:34.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.745" endtime="20201029 12:45:34.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.463" endtime="20201029 12:45:34.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.462" endtime="20201029 12:45:34.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:34.752" level="INFO">${RESULT} = [{'diff': 3.611000000000586e-06}, {'diff': 3.4029999999990457e-06}, {'diff': 3.7910000000029864e-06}, {'diff': 2.9029999999985456e-06}, {'diff': 2.6529999999982956e-06}, {'diff': 2.973000000003334e-06...</msg>
<status status="PASS" starttime="20201029 12:45:34.749" endtime="20201029 12:45:34.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:34.755" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.611000000000586e-06, 3.4029999999990457e-06, 3.7910000000029864e-06, 2.9029999999985456e-06, 2.6529999999982956e-06, 2.973000000003334e-06, 2.5000000000025002e-06, 3.902999999999546e-06, 3...</msg>
<status status="PASS" starttime="20201029 12:45:34.753" endtime="20201029 12:45:34.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.759" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:34.758" endtime="20201029 12:45:34.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.762" level="INFO">VALUE: [3.611000000000586e-06, 3.4029999999990457e-06, 3.7910000000029864e-06, 2.9029999999985456e-06, 2.6529999999982956e-06, 2.973000000003334e-06, 2.5000000000025002e-06, 3.902999999999546e-06, 3.2219999999971716e-06, 3.4169999999986156e-06, 2.9859999999964915e-06, 3.6669999999988656e-06, 3.6949999999980054e-06, 3.111000000000086e-06, 2.833000000000696e-06, 3.0550000000018063e-06, 3.2499999999963114e-06, 3.083000000000946e-06, 3.1810000000048744e-06, 2.4999999999955613e-06, 3.3889999999994758e-06, 3.5140000000030702e-06, 3.7359999999972415e-06, 3.54200000000221e-06, 3.29200000000196e-06]</msg>
<status status="PASS" starttime="20201029 12:45:34.761" endtime="20201029 12:45:34.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.756" endtime="20201029 12:45:34.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.437" endtime="20201029 12:45:34.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.436" endtime="20201029 12:45:34.763"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.771" endtime="20201029 12:45:34.780"></status>
</kw>
<msg timestamp="20201029 12:45:34.781" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:34.769" endtime="20201029 12:45:34.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.783" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:34.782" endtime="20201029 12:45:34.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.784" endtime="20201029 12:45:34.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.767" endtime="20201029 12:45:34.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.765" endtime="20201029 12:45:34.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.794" endtime="20201029 12:45:35.084"></status>
</kw>
<msg timestamp="20201029 12:45:35.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062033958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062037569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:34.793" endtime="20201029 12:45:35.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062033958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062037569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:35.089" endtime="20201029 12:45:35.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.097" endtime="20201029 12:45:35.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.790" endtime="20201029 12:45:35.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.788" endtime="20201029 12:45:35.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:35.105" level="INFO">${RESULT} = [{'diff': 3.611000000000586e-06}, {'diff': 3.4029999999990457e-06}, {'diff': 3.7910000000029864e-06}, {'diff': 2.9029999999985456e-06}, {'diff': 2.6529999999982956e-06}, {'diff': 2.973000000003334e-06...</msg>
<status status="PASS" starttime="20201029 12:45:35.101" endtime="20201029 12:45:35.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:35.112" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.611000000000586e-06, 3.4029999999990457e-06, 3.7910000000029864e-06, 2.9029999999985456e-06, 2.6529999999982956e-06, 2.973000000003334e-06, 2.5000000000025002e-06, 3.902999999999546e-06, 3...</msg>
<status status="PASS" starttime="20201029 12:45:35.107" endtime="20201029 12:45:35.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.119" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:35.116" endtime="20201029 12:45:35.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.123" level="INFO">VALUE: [3.611000000000586e-06, 3.4029999999990457e-06, 3.7910000000029864e-06, 2.9029999999985456e-06, 2.6529999999982956e-06, 2.973000000003334e-06, 2.5000000000025002e-06, 3.902999999999546e-06, 3.2219999999971716e-06, 3.4169999999986156e-06, 2.9859999999964915e-06, 3.6669999999988656e-06, 3.6949999999980054e-06, 3.111000000000086e-06, 2.833000000000696e-06, 3.0550000000018063e-06, 3.2499999999963114e-06, 3.083000000000946e-06, 3.1810000000048744e-06, 2.4999999999955613e-06, 3.3889999999994758e-06, 3.5140000000030702e-06, 3.7359999999972415e-06, 3.54200000000221e-06, 3.29200000000196e-06, 5.410000000205528e-07, 3.4030000000129235e-06, 3.083000000014824e-06, 3.5420000000230267e-06, 3.26400000000282e-06, 3.6389999999997258e-06, 3.777999999954318e-06, 3.5280000000303957e-06, 3.680999999977619e-06, 3.152999999977979e-06, 3.3060000000362244e-06, 3.597999999993551e-06, 3.2920000000435934e-06, 3.0409999999814197e-06, 3.917000000019932e-06, 3.000000000030756e-06, 3.028000000016018e-06, 3.945000000005194e-06, 3.69499999997025e-06, 2.8609999999651414e-06, 3.0139999999678757e-06, 2.554999999959673e-06, 3.6250000000070948e-06, 3.6109999999589526e-06, 3.250000000010189e-06]</msg>
<status status="PASS" starttime="20201029 12:45:35.121" endtime="20201029 12:45:35.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.113" endtime="20201029 12:45:35.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.764" endtime="20201029 12:45:35.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.763" endtime="20201029 12:45:35.127"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.137" endtime="20201029 12:45:35.146"></status>
</kw>
<msg timestamp="20201029 12:45:35.147" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:35.135" endtime="20201029 12:45:35.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.149" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:35.148" endtime="20201029 12:45:35.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.150" endtime="20201029 12:45:35.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.133" endtime="20201029 12:45:35.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.130" endtime="20201029 12:45:35.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.159" endtime="20201029 12:45:35.460"></status>
</kw>
<msg timestamp="20201029 12:45:35.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062114333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062118028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:35.157" endtime="20201029 12:45:35.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062114333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062118028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:35.467" endtime="20201029 12:45:35.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.477" endtime="20201029 12:45:35.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.155" endtime="20201029 12:45:35.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.153" endtime="20201029 12:45:35.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:35.484" level="INFO">${RESULT} = [{'diff': 3.6949999999980054e-06}, {'diff': 3.111000000000086e-06}, {'diff': 2.833000000000696e-06}, {'diff': 3.0550000000018063e-06}, {'diff': 3.2499999999963114e-06}, {'diff': 3.083000000000946e-06}...</msg>
<status status="PASS" starttime="20201029 12:45:35.480" endtime="20201029 12:45:35.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:35.490" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.6949999999980054e-06, 3.111000000000086e-06, 2.833000000000696e-06, 3.0550000000018063e-06, 3.2499999999963114e-06, 3.083000000000946e-06, 3.1810000000048744e-06, 2.4999999999955613e-06, 3...</msg>
<status status="PASS" starttime="20201029 12:45:35.485" endtime="20201029 12:45:35.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.494" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:35.493" endtime="20201029 12:45:35.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.497" level="INFO">VALUE: [3.6949999999980054e-06, 3.111000000000086e-06, 2.833000000000696e-06, 3.0550000000018063e-06, 3.2499999999963114e-06, 3.083000000000946e-06, 3.1810000000048744e-06, 2.4999999999955613e-06, 3.3889999999994758e-06, 3.5140000000030702e-06, 3.7359999999972415e-06, 3.54200000000221e-06, 3.29200000000196e-06, 5.410000000205528e-07, 3.4030000000129235e-06, 3.083000000014824e-06, 3.5420000000230267e-06, 3.26400000000282e-06, 3.6389999999997258e-06, 3.777999999954318e-06, 3.5280000000303957e-06, 3.680999999977619e-06, 3.152999999977979e-06, 3.3060000000362244e-06, 3.597999999993551e-06, 3.2920000000435934e-06, 3.0409999999814197e-06, 3.917000000019932e-06, 3.000000000030756e-06, 3.028000000016018e-06, 3.945000000005194e-06, 3.69499999997025e-06, 2.8609999999651414e-06, 3.0139999999678757e-06, 2.554999999959673e-06, 3.6250000000070948e-06, 3.6109999999589526e-06, 3.250000000010189e-06, 0.357006139, 2.693999999969776e-06, 3.764000000017198e-06, 3.1659999999433808e-06, 3.3890000000758036e-06, 3.3610000000905416e-06, 3.179999999991523e-06, 3.152000000006261e-06, 3.277000000023733e-06, 3.152000000006261e-06, 3.195000000011383e-06, 2.9440000000047206e-06, 3.736000000031936e-06, 3.083000000070335e-06, 2.9999999999752447e-06, 2.555999999986902e-06, 2.8609999999096303e-06, 3.2779999999954512e-06, 2.8890000000059146e-06, 4.0559999999745244e-06, 3.4720000000598716e-06, 3.4730000000315897e-06, 2.945000000087461e-06, 3.4169999999500433e-06, 2.8749999999577724e-06, 2.9999999999752447e-06]</msg>
<status status="PASS" starttime="20201029 12:45:35.495" endtime="20201029 12:45:35.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.490" endtime="20201029 12:45:35.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.128" endtime="20201029 12:45:35.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.128" endtime="20201029 12:45:35.498"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.506" endtime="20201029 12:45:35.516"></status>
</kw>
<msg timestamp="20201029 12:45:35.517" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:35.504" endtime="20201029 12:45:35.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.519" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:35.518" endtime="20201029 12:45:35.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.520" endtime="20201029 12:45:35.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.502" endtime="20201029 12:45:35.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.500" endtime="20201029 12:45:35.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.529" endtime="20201029 12:45:35.832"></status>
</kw>
<msg timestamp="20201029 12:45:35.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.379162431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.379165792, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:45:35.528" endtime="20201029 12:45:35.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.379162431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.379165792, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:45:35.839" endtime="20201029 12:45:35.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.852" endtime="20201029 12:45:35.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.525" endtime="20201029 12:45:35.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.523" endtime="20201029 12:45:35.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:35.862" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.0409999999814197e-06}, {'diff': 3.917000000019932e-06}, {'diff': 3.000000000030756e-06}, {'diff': 3.028000000016018e-06}, {'diff': 3.945000000005194e-06}, {'diff': 3.694999999...</msg>
<status status="PASS" starttime="20201029 12:45:35.858" endtime="20201029 12:45:35.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:35.867" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.0409999999814197e-06, 3.917000000019932e-06, 3.000000000030756e-06, 3.028000000016018e-06, 3.945000000005194e-06, 3.69499999997025e-06, 2.8609999999651414e-06, 3.0139999999678757e-06, 2...</msg>
<status status="PASS" starttime="20201029 12:45:35.864" endtime="20201029 12:45:35.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.872" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:35.871" endtime="20201029 12:45:35.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.874" level="INFO">VALUE: [0, 3.0409999999814197e-06, 3.917000000019932e-06, 3.000000000030756e-06, 3.028000000016018e-06, 3.945000000005194e-06, 3.69499999997025e-06, 2.8609999999651414e-06, 3.0139999999678757e-06, 2.554999999959673e-06, 3.6250000000070948e-06, 3.6109999999589526e-06, 3.250000000010189e-06, 0.357006139, 2.693999999969776e-06, 3.764000000017198e-06, 3.1659999999433808e-06, 3.3890000000758036e-06, 3.3610000000905416e-06, 3.179999999991523e-06, 3.152000000006261e-06, 3.277000000023733e-06, 3.152000000006261e-06, 3.195000000011383e-06, 2.9440000000047206e-06, 3.736000000031936e-06, 3.083000000070335e-06, 2.9999999999752447e-06, 2.555999999986902e-06, 2.8609999999096303e-06, 3.2779999999954512e-06, 2.8890000000059146e-06, 4.0559999999745244e-06, 3.4720000000598716e-06, 3.4730000000315897e-06, 2.945000000087461e-06, 3.4169999999500433e-06, 2.8749999999577724e-06, 2.9999999999752447e-06, 5.419999999922709e-07, 3.277000000023733e-06, 3.5000000000451337e-06, 2.6250000000338503e-06, 2.9999999999752447e-06, 3.486000000219036e-06, 3.584000000111942e-06, 3.3050000001200175e-06, 3.4730000000315897e-06, 3.499999999823089e-06, 3.430999999887163e-06, 3.3470000000423994e-06, 3.721999999983794e-06, 3.152999999977979e-06, 2.77799999981454e-06, 3.429999999804423e-06, 3.4159999999783253e-06, 2.7499999999403e-06, 3.2640000000583314e-06, 3.66700000009601e-06, 4.0420000000374046e-06, 2.6659999998734918e-06, 3.194000000039665e-06, 3.5139999998712312e-06, 3.5830000000292017e-06]</msg>
<status status="PASS" starttime="20201029 12:45:35.873" endtime="20201029 12:45:35.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.868" endtime="20201029 12:45:35.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.499" endtime="20201029 12:45:35.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.499" endtime="20201029 12:45:35.876"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.885" endtime="20201029 12:45:35.894"></status>
</kw>
<msg timestamp="20201029 12:45:35.895" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:35.882" endtime="20201029 12:45:35.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.897" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:35.896" endtime="20201029 12:45:35.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.898" endtime="20201029 12:45:35.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.880" endtime="20201029 12:45:35.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.878" endtime="20201029 12:45:35.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.907" endtime="20201029 12:45:36.203"></status>
</kw>
<msg timestamp="20201029 12:45:36.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.736329806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.736332889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:35.906" endtime="20201029 12:45:36.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.736329806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.736332889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:36.208" endtime="20201029 12:45:36.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.218" endtime="20201029 12:45:36.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.903" endtime="20201029 12:45:36.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.902" endtime="20201029 12:45:36.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:36.225" level="INFO">${RESULT} = [{'diff': 3.083000000070335e-06}, {'diff': 2.9999999999752447e-06}, {'diff': 2.555999999986902e-06}, {'diff': 2.8609999999096303e-06}, {'diff': 3.2779999999954512e-06}, {'diff': 2.8890000000059146e-06...</msg>
<status status="PASS" starttime="20201029 12:45:36.221" endtime="20201029 12:45:36.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:36.230" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.083000000070335e-06, 2.9999999999752447e-06, 2.555999999986902e-06, 2.8609999999096303e-06, 3.2779999999954512e-06, 2.8890000000059146e-06, 4.0559999999745244e-06, 3.4720000000598716e-06, ...</msg>
<status status="PASS" starttime="20201029 12:45:36.226" endtime="20201029 12:45:36.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.234" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:36.233" endtime="20201029 12:45:36.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.237" level="INFO">VALUE: [3.083000000070335e-06, 2.9999999999752447e-06, 2.555999999986902e-06, 2.8609999999096303e-06, 3.2779999999954512e-06, 2.8890000000059146e-06, 4.0559999999745244e-06, 3.4720000000598716e-06, 3.4730000000315897e-06, 2.945000000087461e-06, 3.4169999999500433e-06, 2.8749999999577724e-06, 2.9999999999752447e-06, 5.419999999922709e-07, 3.277000000023733e-06, 3.5000000000451337e-06, 2.6250000000338503e-06, 2.9999999999752447e-06, 3.486000000219036e-06, 3.584000000111942e-06, 3.3050000001200175e-06, 3.4730000000315897e-06, 3.499999999823089e-06, 3.430999999887163e-06, 3.3470000000423994e-06, 3.721999999983794e-06, 3.152999999977979e-06, 2.77799999981454e-06, 3.429999999804423e-06, 3.4159999999783253e-06, 2.7499999999403e-06, 3.2640000000583314e-06, 3.66700000009601e-06, 4.0420000000374046e-06, 2.6659999998734918e-06, 3.194000000039665e-06, 3.5139999998712312e-06, 3.5830000000292017e-06, 0.3684738329999999, 3.2780000001064735e-06, 3.277000000023733e-06, 3.235999999962047e-06, 3.179999999991523e-06, 3.0829999999593127e-06, 2.6249999998118057e-06, 2.9580000000528628e-06, 3.2639999998362867e-06, 3.9590000000533365e-06, 2.9999999999752447e-06, 3.5689999999810595e-06, 3.0559999999457688e-06, 3.2909999998498307e-06, 3.069999999993911e-06, 3.097000000007455e-06, 2.9580000000528628e-06, 2.986000000149147e-06, 3.5000000000451337e-06, 3.6669999998739655e-06, 2.7639999999884424e-06, 3.4440000000746096e-06, 3.3470000000423994e-06, 3.945000000005194e-06, 3.291999999932571e-06, 3.1250000001037392e-06]</msg>
<status status="PASS" starttime="20201029 12:45:36.235" endtime="20201029 12:45:36.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.231" endtime="20201029 12:45:36.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.877" endtime="20201029 12:45:36.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.876" endtime="20201029 12:45:36.238"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.246" endtime="20201029 12:45:36.256"></status>
</kw>
<msg timestamp="20201029 12:45:36.257" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:36.245" endtime="20201029 12:45:36.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.259" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:36.258" endtime="20201029 12:45:36.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.260" endtime="20201029 12:45:36.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.242" endtime="20201029 12:45:36.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.240" endtime="20201029 12:45:36.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.269" endtime="20201029 12:45:36.569"></status>
</kw>
<msg timestamp="20201029 12:45:36.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.093395764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.093399278, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:45:36.267" endtime="20201029 12:45:36.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.093395764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.093399278, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:45:36.574" endtime="20201029 12:45:36.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.584" endtime="20201029 12:45:36.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.265" endtime="20201029 12:45:36.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.263" endtime="20201029 12:45:36.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:36.591" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.152999999977979e-06}, {'diff': 2.77799999981454e-06}, {'diff': 3.429999999804423e-06}, {'diff': 3.4159999999783253e-06}, {'diff': 2.7499999999403e-06}, {'diff': 3.264000000058...</msg>
<status status="PASS" starttime="20201029 12:45:36.587" endtime="20201029 12:45:36.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:36.598" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.152999999977979e-06, 2.77799999981454e-06, 3.429999999804423e-06, 3.4159999999783253e-06, 2.7499999999403e-06, 3.2640000000583314e-06, 3.66700000009601e-06, 4.0420000000374046e-06, 2.66...</msg>
<status status="PASS" starttime="20201029 12:45:36.592" endtime="20201029 12:45:36.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.602" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:36.601" endtime="20201029 12:45:36.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.605" level="INFO">VALUE: [0, 3.152999999977979e-06, 2.77799999981454e-06, 3.429999999804423e-06, 3.4159999999783253e-06, 2.7499999999403e-06, 3.2640000000583314e-06, 3.66700000009601e-06, 4.0420000000374046e-06, 2.6659999998734918e-06, 3.194000000039665e-06, 3.5139999998712312e-06, 3.5830000000292017e-06, 0.3684738329999999, 3.2780000001064735e-06, 3.277000000023733e-06, 3.235999999962047e-06, 3.179999999991523e-06, 3.0829999999593127e-06, 2.6249999998118057e-06, 2.9580000000528628e-06, 3.2639999998362867e-06, 3.9590000000533365e-06, 2.9999999999752447e-06, 3.5689999999810595e-06, 3.0559999999457688e-06, 3.2909999998498307e-06, 3.069999999993911e-06, 3.097000000007455e-06, 2.9580000000528628e-06, 2.986000000149147e-06, 3.5000000000451337e-06, 3.6669999998739655e-06, 2.7639999999884424e-06, 3.4440000000746096e-06, 3.3470000000423994e-06, 3.945000000005194e-06, 3.291999999932571e-06, 3.1250000001037392e-06, 5.409999999095305e-07, 2.694999999830472e-06, 3.943999999922454e-06, 3.2499999997881446e-06, 2.7780000000365845e-06, 3.2640000000583314e-06, 3.208999999948503e-06, 3.3610000000905416e-06, 3.431000000109208e-06, 2.7220000000660605e-06, 3.152999999977979e-06, 2.9999999999752447e-06, 3.1109999998335525e-06, 3.5700000000638e-06, 3.5279999999193734e-06, 3.5000000000451337e-06, 4.055000000002806e-06, 2.8469999999725104e-06, 3.360999999868497e-06, 3.138999999929837e-06, 3.2080000000878073e-06, 2.693999999969776e-06, 3.152999999977979e-06, 3.1530000002000236e-06, 3.5969999998552993e-06]</msg>
<status status="PASS" starttime="20201029 12:45:36.603" endtime="20201029 12:45:36.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.599" endtime="20201029 12:45:36.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.239" endtime="20201029 12:45:36.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.239" endtime="20201029 12:45:36.606"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.614" endtime="20201029 12:45:36.624"></status>
</kw>
<msg timestamp="20201029 12:45:36.625" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:36.612" endtime="20201029 12:45:36.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.627" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:36.626" endtime="20201029 12:45:36.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.628" endtime="20201029 12:45:36.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.610" endtime="20201029 12:45:36.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.608" endtime="20201029 12:45:36.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.637" endtime="20201029 12:45:36.941"></status>
</kw>
<msg timestamp="20201029 12:45:36.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.462029806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.462033097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:36.636" endtime="20201029 12:45:36.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.462029806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.462033097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:36.946" endtime="20201029 12:45:36.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.956" endtime="20201029 12:45:36.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.633" endtime="20201029 12:45:36.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.631" endtime="20201029 12:45:36.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:36.962" level="INFO">${RESULT} = [{'diff': 3.2909999998498307e-06}, {'diff': 3.069999999993911e-06}, {'diff': 3.097000000007455e-06}, {'diff': 2.9580000000528628e-06}, {'diff': 2.986000000149147e-06}, {'diff': 3.5000000000451337e-06}...</msg>
<status status="PASS" starttime="20201029 12:45:36.959" endtime="20201029 12:45:36.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:36.967" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.2909999998498307e-06, 3.069999999993911e-06, 3.097000000007455e-06, 2.9580000000528628e-06, 2.986000000149147e-06, 3.5000000000451337e-06, 3.6669999998739655e-06, 2.7639999999884424e-06, 3...</msg>
<status status="PASS" starttime="20201029 12:45:36.963" endtime="20201029 12:45:36.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.972" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:36.971" endtime="20201029 12:45:36.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.974" level="INFO">VALUE: [3.2909999998498307e-06, 3.069999999993911e-06, 3.097000000007455e-06, 2.9580000000528628e-06, 2.986000000149147e-06, 3.5000000000451337e-06, 3.6669999998739655e-06, 2.7639999999884424e-06, 3.4440000000746096e-06, 3.3470000000423994e-06, 3.945000000005194e-06, 3.291999999932571e-06, 3.1250000001037392e-06, 5.409999999095305e-07, 2.694999999830472e-06, 3.943999999922454e-06, 3.2499999997881446e-06, 2.7780000000365845e-06, 3.2640000000583314e-06, 3.208999999948503e-06, 3.3610000000905416e-06, 3.431000000109208e-06, 2.7220000000660605e-06, 3.152999999977979e-06, 2.9999999999752447e-06, 3.1109999998335525e-06, 3.5700000000638e-06, 3.5279999999193734e-06, 3.5000000000451337e-06, 4.055000000002806e-06, 2.8469999999725104e-06, 3.360999999868497e-06, 3.138999999929837e-06, 3.2080000000878073e-06, 2.693999999969776e-06, 3.152999999977979e-06, 3.1530000002000236e-06, 3.5969999998552993e-06, 0.356809736, 2.6659999998734918e-06, 3.5269999996145884e-06, 3.2499999997881446e-06, 3.0560000001678134e-06, 3.819000000238049e-06, 3.1250000001037392e-06, 2.9029999999430345e-06, 2.9159999996863917e-06, 3.443999999852565e-06, 3.597000000077344e-06, 3.5000000000451337e-06, 3.2079999998657627e-06, 3.374999999916639e-06, 3.1250000001037392e-06, 3.1809999998522187e-06, 2.666999999956232e-06, 4.082999999877046e-06, 4.01399999994112e-06, 2.638999999859948e-06, 3.4580000001227518e-06, 3.082999999737268e-06, 3.2919999997105265e-06, 3.3190000001681597e-06, 3.0689999999111706e-06, 3.02799999962744e-06]</msg>
<status status="PASS" starttime="20201029 12:45:36.973" endtime="20201029 12:45:36.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.968" endtime="20201029 12:45:36.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.607" endtime="20201029 12:45:36.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.607" endtime="20201029 12:45:36.976"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.984" endtime="20201029 12:45:36.995"></status>
</kw>
<msg timestamp="20201029 12:45:36.996" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:36.983" endtime="20201029 12:45:36.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.998" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:36.997" endtime="20201029 12:45:36.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.999" endtime="20201029 12:45:37.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.979" endtime="20201029 12:45:37.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.978" endtime="20201029 12:45:37.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.009" endtime="20201029 12:45:37.331"></status>
</kw>
<msg timestamp="20201029 12:45:37.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.813547847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.813550944, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:45:37.007" endtime="20201029 12:45:37.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.813547847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.813550944, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:45:37.336" endtime="20201029 12:45:37.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.346" endtime="20201029 12:45:37.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.004" endtime="20201029 12:45:37.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.003" endtime="20201029 12:45:37.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:37.353" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.5700000000638e-06}, {'diff': 3.5279999999193734e-06}, {'diff': 3.5000000000451337e-06}, {'diff': 4.055000000002806e-06}, {'diff': 2.8469999999725104e-06}, {'diff': 3.360999999...</msg>
<status status="PASS" starttime="20201029 12:45:37.350" endtime="20201029 12:45:37.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:37.358" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.5700000000638e-06, 3.5279999999193734e-06, 3.5000000000451337e-06, 4.055000000002806e-06, 2.8469999999725104e-06, 3.360999999868497e-06, 3.138999999929837e-06, 3.2080000000878073e-06, 2...</msg>
<status status="PASS" starttime="20201029 12:45:37.354" endtime="20201029 12:45:37.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.363" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:37.362" endtime="20201029 12:45:37.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.365" level="INFO">VALUE: [0, 3.5700000000638e-06, 3.5279999999193734e-06, 3.5000000000451337e-06, 4.055000000002806e-06, 2.8469999999725104e-06, 3.360999999868497e-06, 3.138999999929837e-06, 3.2080000000878073e-06, 2.693999999969776e-06, 3.152999999977979e-06, 3.1530000002000236e-06, 3.5969999998552993e-06, 0.356809736, 2.6659999998734918e-06, 3.5269999996145884e-06, 3.2499999997881446e-06, 3.0560000001678134e-06, 3.819000000238049e-06, 3.1250000001037392e-06, 2.9029999999430345e-06, 2.9159999996863917e-06, 3.443999999852565e-06, 3.597000000077344e-06, 3.5000000000451337e-06, 3.2079999998657627e-06, 3.374999999916639e-06, 3.1250000001037392e-06, 3.1809999998522187e-06, 2.666999999956232e-06, 4.082999999877046e-06, 4.01399999994112e-06, 2.638999999859948e-06, 3.4580000001227518e-06, 3.082999999737268e-06, 3.2919999997105265e-06, 3.3190000001681597e-06, 3.0689999999111706e-06, 3.02799999962744e-06, 5.419999999922709e-07, 2.8330000003684574e-06, 3.6950000001922945e-06, 3.431000000109208e-06, 3.235999999962047e-06, 3.7079999999356517e-06, 3.374999999916639e-06, 2.5830000001114684e-06, 3.7640000001282203e-06, 2.6809999997823297e-06, 3.5689999999810595e-06, 2.8329999999243682e-06, 2.8750000002908394e-06, 2.9029999999430345e-06, 3.3610000000905416e-06, 3.443999999852565e-06, 3.0139999998013423e-06, 2.889000000116937e-06, 3.0139999998013423e-06, 3.972000000018738e-06, 3.0419999998976266e-06, 3.208000000309852e-06, 3.3889999997427367e-06, 3.082999999737268e-06, 3.736000000031936e-06]</msg>
<status status="PASS" starttime="20201029 12:45:37.364" endtime="20201029 12:45:37.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.360" endtime="20201029 12:45:37.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.976" endtime="20201029 12:45:37.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.976" endtime="20201029 12:45:37.367"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.374" endtime="20201029 12:45:37.384"></status>
</kw>
<msg timestamp="20201029 12:45:37.384" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:37.373" endtime="20201029 12:45:37.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.387" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:37.385" endtime="20201029 12:45:37.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.388" endtime="20201029 12:45:37.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.370" endtime="20201029 12:45:37.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.369" endtime="20201029 12:45:37.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.397" endtime="20201029 12:45:37.712"></status>
</kw>
<msg timestamp="20201029 12:45:37.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.170518764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.170522139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:37.396" endtime="20201029 12:45:37.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.170518764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.170522139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:37.717" endtime="20201029 12:45:37.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.727" endtime="20201029 12:45:37.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.393" endtime="20201029 12:45:37.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.391" endtime="20201029 12:45:37.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:37.734" level="INFO">${RESULT} = [{'diff': 3.374999999916639e-06}, {'diff': 3.1250000001037392e-06}, {'diff': 3.1809999998522187e-06}, {'diff': 2.666999999956232e-06}, {'diff': 4.082999999877046e-06}, {'diff': 4.01399999994112e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:45:37.730" endtime="20201029 12:45:37.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:37.747" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.374999999916639e-06, 3.1250000001037392e-06, 3.1809999998522187e-06, 2.666999999956232e-06, 4.082999999877046e-06, 4.01399999994112e-06, 2.638999999859948e-06, 3.4580000001227518e-06, 3.08...</msg>
<status status="PASS" starttime="20201029 12:45:37.735" endtime="20201029 12:45:37.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.752" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:37.751" endtime="20201029 12:45:37.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.754" level="INFO">VALUE: [3.374999999916639e-06, 3.1250000001037392e-06, 3.1809999998522187e-06, 2.666999999956232e-06, 4.082999999877046e-06, 4.01399999994112e-06, 2.638999999859948e-06, 3.4580000001227518e-06, 3.082999999737268e-06, 3.2919999997105265e-06, 3.3190000001681597e-06, 3.0689999999111706e-06, 3.02799999962744e-06, 5.419999999922709e-07, 2.8330000003684574e-06, 3.6950000001922945e-06, 3.431000000109208e-06, 3.235999999962047e-06, 3.7079999999356517e-06, 3.374999999916639e-06, 2.5830000001114684e-06, 3.7640000001282203e-06, 2.6809999997823297e-06, 3.5689999999810595e-06, 2.8329999999243682e-06, 2.8750000002908394e-06, 2.9029999999430345e-06, 3.3610000000905416e-06, 3.443999999852565e-06, 3.0139999998013423e-06, 2.889000000116937e-06, 3.0139999998013423e-06, 3.972000000018738e-06, 3.0419999998976266e-06, 3.208000000309852e-06, 3.3889999997427367e-06, 3.082999999737268e-06, 3.736000000031936e-06, 0.3798542089999999, 3.3059999999807133e-06, 3.194000000039665e-06, 2.8750000002908394e-06, 3.0689999999111706e-06, 3.624999999729539e-06, 3.22300000021869e-06, 2.666000000317581e-06, 3.3469999998203548e-06, 2.750000000162345e-06, 3.4869999998576873e-06, 3.097999999646106e-06, 2.7920000000847267e-06, 2.9729999999617007e-06, 3.5000000000451337e-06, 2.986000000149147e-06, 2.9999999999752447e-06, 2.916999999769132e-06, 3.6799999998393673e-06, 3.0269999999887887e-06, 3.374999999916639e-06, 3.4719999999488493e-06, 2.8610000000206526e-06, 2.6950000000525165e-06, 3.5140000003153204e-06, 3.2500000002322338e-06]</msg>
<status status="PASS" starttime="20201029 12:45:37.753" endtime="20201029 12:45:37.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.748" endtime="20201029 12:45:37.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.368" endtime="20201029 12:45:37.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.367" endtime="20201029 12:45:37.756"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.763" endtime="20201029 12:45:37.773"></status>
</kw>
<msg timestamp="20201029 12:45:37.773" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:37.762" endtime="20201029 12:45:37.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.776" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:37.774" endtime="20201029 12:45:37.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.777" endtime="20201029 12:45:37.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.759" endtime="20201029 12:45:37.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.758" endtime="20201029 12:45:37.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.787" endtime="20201029 12:45:38.116"></status>
</kw>
<msg timestamp="20201029 12:45:38.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.531819653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.531822528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:37.786" endtime="20201029 12:45:38.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.531819653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.531822528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:38.122" endtime="20201029 12:45:38.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.131" endtime="20201029 12:45:38.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.782" endtime="20201029 12:45:38.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.780" endtime="20201029 12:45:38.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:38.138" level="INFO">${RESULT} = [{'diff': 2.8750000002908394e-06}, {'diff': 2.9029999999430345e-06}, {'diff': 3.3610000000905416e-06}, {'diff': 3.443999999852565e-06}, {'diff': 3.0139999998013423e-06}, {'diff': 2.889000000116937e-06...</msg>
<status status="PASS" starttime="20201029 12:45:38.135" endtime="20201029 12:45:38.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:38.143" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.8750000002908394e-06, 2.9029999999430345e-06, 3.3610000000905416e-06, 3.443999999852565e-06, 3.0139999998013423e-06, 2.889000000116937e-06, 3.0139999998013423e-06, 3.972000000018738e-06, 3...</msg>
<status status="PASS" starttime="20201029 12:45:38.140" endtime="20201029 12:45:38.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.148" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:38.146" endtime="20201029 12:45:38.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.151" level="INFO">VALUE: [2.8750000002908394e-06, 2.9029999999430345e-06, 3.3610000000905416e-06, 3.443999999852565e-06, 3.0139999998013423e-06, 2.889000000116937e-06, 3.0139999998013423e-06, 3.972000000018738e-06, 3.0419999998976266e-06, 3.208000000309852e-06, 3.3889999997427367e-06, 3.082999999737268e-06, 3.736000000031936e-06, 0.3798542089999999, 3.3059999999807133e-06, 3.194000000039665e-06, 2.8750000002908394e-06, 3.0689999999111706e-06, 3.624999999729539e-06, 3.22300000021869e-06, 2.666000000317581e-06, 3.3469999998203548e-06, 2.750000000162345e-06, 3.4869999998576873e-06, 3.097999999646106e-06, 2.7920000000847267e-06, 2.9729999999617007e-06, 3.5000000000451337e-06, 2.986000000149147e-06, 2.9999999999752447e-06, 2.916999999769132e-06, 3.6799999998393673e-06, 3.0269999999887887e-06, 3.374999999916639e-06, 3.4719999999488493e-06, 2.8610000000206526e-06, 2.6950000000525165e-06, 3.5140000003153204e-06, 3.2500000002322338e-06, 4.01399999994112e-06, 3.666999999651921e-06, 2.847999999833206e-06, 3.6660000000132698e-06, 3.5139999998712312e-06, 3.972000000018738e-06, 3.7920000002245047e-06, 3.1530000002000236e-06, 3.2920000001546157e-06, 2.5830000001114684e-06, 3.1530000002000236e-06, 3.5000000000451337e-06, 3.5419999999675156e-06, 3.431000000109208e-06, 3.4449999999353054e-06, 3.431000000109208e-06, 2.750000000162345e-06, 3.097000000007455e-06, 3.277999999884429e-06, 3.235999999962047e-06, 2.87499999984675e-06, 3.194000000039665e-06, 3.41600000020037e-06, 2.986000000149147e-06, 3.416999999839021e-06]</msg>
<status status="PASS" starttime="20201029 12:45:38.149" endtime="20201029 12:45:38.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.144" endtime="20201029 12:45:38.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.756" endtime="20201029 12:45:38.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.756" endtime="20201029 12:45:38.152"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.160" endtime="20201029 12:45:38.170"></status>
</kw>
<msg timestamp="20201029 12:45:38.170" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:38.159" endtime="20201029 12:45:38.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.173" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:38.171" endtime="20201029 12:45:38.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.174" endtime="20201029 12:45:38.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.156" endtime="20201029 12:45:38.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.154" endtime="20201029 12:45:38.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.183" endtime="20201029 12:45:38.497"></status>
</kw>
<msg timestamp="20201029 12:45:38.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.911833736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.911837583, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:45:38.181" endtime="20201029 12:45:38.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.911833736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.911837583, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:45:38.502" endtime="20201029 12:45:38.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.511" endtime="20201029 12:45:38.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.179" endtime="20201029 12:45:38.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.177" endtime="20201029 12:45:38.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:38.518" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.9729999999617007e-06}, {'diff': 3.5000000000451337e-06}, {'diff': 2.986000000149147e-06}, {'diff': 2.9999999999752447e-06}, {'diff': 2.916999999769132e-06}, {'diff': 3.6799999...</msg>
<status status="PASS" starttime="20201029 12:45:38.515" endtime="20201029 12:45:38.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:38.524" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.9729999999617007e-06, 3.5000000000451337e-06, 2.986000000149147e-06, 2.9999999999752447e-06, 2.916999999769132e-06, 3.6799999998393673e-06, 3.0269999999887887e-06, 3.374999999916639e-06...</msg>
<status status="PASS" starttime="20201029 12:45:38.520" endtime="20201029 12:45:38.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.528" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:38.527" endtime="20201029 12:45:38.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.531" level="INFO">VALUE: [0, 2.9729999999617007e-06, 3.5000000000451337e-06, 2.986000000149147e-06, 2.9999999999752447e-06, 2.916999999769132e-06, 3.6799999998393673e-06, 3.0269999999887887e-06, 3.374999999916639e-06, 3.4719999999488493e-06, 2.8610000000206526e-06, 2.6950000000525165e-06, 3.5140000003153204e-06, 3.2500000002322338e-06, 4.01399999994112e-06, 3.666999999651921e-06, 2.847999999833206e-06, 3.6660000000132698e-06, 3.5139999998712312e-06, 3.972000000018738e-06, 3.7920000002245047e-06, 3.1530000002000236e-06, 3.2920000001546157e-06, 2.5830000001114684e-06, 3.1530000002000236e-06, 3.5000000000451337e-06, 3.5419999999675156e-06, 3.431000000109208e-06, 3.4449999999353054e-06, 3.431000000109208e-06, 2.750000000162345e-06, 3.097000000007455e-06, 3.277999999884429e-06, 3.235999999962047e-06, 2.87499999984675e-06, 3.194000000039665e-06, 3.41600000020037e-06, 2.986000000149147e-06, 3.416999999839021e-06, 5.419999999922709e-07, 2.8610000000206526e-06, 3.790999999697675e-06, 3.4170000002831102e-06, 2.9299999999565784e-06, 3.2500000002322338e-06, 3.5270000000586776e-06, 3.4719999999488493e-06, 3.000000000419334e-06, 2.9999999999752447e-06, 2.8329999999243682e-06, 3.7220000002058384e-06, 3.12499999965965e-06, 3.1250000001037392e-06, 3.666999999651921e-06, 3.2920000001546157e-06, 3.2499999997881446e-06, 3.1530000002000236e-06, 2.846999999750466e-06, 3.4449999999353054e-06, 3.611999999986182e-06, 3.1799999997694783e-06, 2.8330000003684574e-06, 3.6109999999034414e-06, 3.0980000000901953e-06]</msg>
<status status="PASS" starttime="20201029 12:45:38.529" endtime="20201029 12:45:38.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.525" endtime="20201029 12:45:38.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.153" endtime="20201029 12:45:38.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.153" endtime="20201029 12:45:38.532"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.540" endtime="20201029 12:45:38.550"></status>
</kw>
<msg timestamp="20201029 12:45:38.551" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:38.538" endtime="20201029 12:45:38.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.553" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:38.552" endtime="20201029 12:45:38.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.554" endtime="20201029 12:45:38.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.536" endtime="20201029 12:45:38.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.534" endtime="20201029 12:45:38.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.563" endtime="20201029 12:45:38.893"></status>
</kw>
<msg timestamp="20201029 12:45:38.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.291882208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.29188575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:38.561" endtime="20201029 12:45:38.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.291882208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.29188575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:38.898" endtime="20201029 12:45:38.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.908" endtime="20201029 12:45:38.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.559" endtime="20201029 12:45:38.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.557" endtime="20201029 12:45:38.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:38.915" level="INFO">${RESULT} = [{'diff': 3.5419999999675156e-06}, {'diff': 3.431000000109208e-06}, {'diff': 3.4449999999353054e-06}, {'diff': 3.431000000109208e-06}, {'diff': 2.750000000162345e-06}, {'diff': 3.097000000007455e-06},...</msg>
<status status="PASS" starttime="20201029 12:45:38.911" endtime="20201029 12:45:38.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:38.919" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.5419999999675156e-06, 3.431000000109208e-06, 3.4449999999353054e-06, 3.431000000109208e-06, 2.750000000162345e-06, 3.097000000007455e-06, 3.277999999884429e-06, 3.235999999962047e-06, 2.87...</msg>
<status status="PASS" starttime="20201029 12:45:38.916" endtime="20201029 12:45:38.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.923" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:38.922" endtime="20201029 12:45:38.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.926" level="INFO">VALUE: [3.5419999999675156e-06, 3.431000000109208e-06, 3.4449999999353054e-06, 3.431000000109208e-06, 2.750000000162345e-06, 3.097000000007455e-06, 3.277999999884429e-06, 3.235999999962047e-06, 2.87499999984675e-06, 3.194000000039665e-06, 3.41600000020037e-06, 2.986000000149147e-06, 3.416999999839021e-06, 5.419999999922709e-07, 2.8610000000206526e-06, 3.790999999697675e-06, 3.4170000002831102e-06, 2.9299999999565784e-06, 3.2500000002322338e-06, 3.5270000000586776e-06, 3.4719999999488493e-06, 3.000000000419334e-06, 2.9999999999752447e-06, 2.8329999999243682e-06, 3.7220000002058384e-06, 3.12499999965965e-06, 3.1250000001037392e-06, 3.666999999651921e-06, 3.2920000001546157e-06, 3.2499999997881446e-06, 3.1530000002000236e-06, 2.846999999750466e-06, 3.4449999999353054e-06, 3.611999999986182e-06, 3.1799999997694783e-06, 2.8330000003684574e-06, 3.6109999999034414e-06, 3.0980000000901953e-06, 0.3696037780000001, 3.7640000005723095e-06, 3.1529999997559344e-06, 2.8750000007349286e-06, 3.389000000630915e-06, 3.0840000002640977e-06, 3.1109999998335525e-06, 2.6110000002077527e-06, 3.8199999998767e-06, 3.624999999729539e-06, 3.208999999948503e-06, 3.3469999998203548e-06, 2.819999999736922e-06, 3.278000000328518e-06, 3.347999999903095e-06, 3.555000000154962e-06, 3.3610000000905416e-06, 3.1800000002135675e-06, 3.2919999997105265e-06, 3.22300000021869e-06, 3.278000000328518e-06, 2.889000000116937e-06, 4.1109999999733304e-06, 3.0130000006067803e-06, 3.3469999998203548e-06, 3.097999999646106e-06]</msg>
<status status="PASS" starttime="20201029 12:45:38.924" endtime="20201029 12:45:38.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.920" endtime="20201029 12:45:38.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.533" endtime="20201029 12:45:38.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.532" endtime="20201029 12:45:38.928"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.936" endtime="20201029 12:45:38.946"></status>
</kw>
<msg timestamp="20201029 12:45:38.947" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:38.934" endtime="20201029 12:45:38.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.949" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:38.948" endtime="20201029 12:45:38.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.950" endtime="20201029 12:45:38.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.931" endtime="20201029 12:45:38.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.929" endtime="20201029 12:45:38.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.959" endtime="20201029 12:45:39.267"></status>
</kw>
<msg timestamp="20201029 12:45:39.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.679427486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.679430708, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:45:38.957" endtime="20201029 12:45:39.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.679427486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.679430708, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:45:39.275" endtime="20201029 12:45:39.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.288" endtime="20201029 12:45:39.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.955" endtime="20201029 12:45:39.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.953" endtime="20201029 12:45:39.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:39.295" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.1250000001037392e-06}, {'diff': 3.666999999651921e-06}, {'diff': 3.2920000001546157e-06}, {'diff': 3.2499999997881446e-06}, {'diff': 3.1530000002000236e-06}, {'diff': 2.846999...</msg>
<status status="PASS" starttime="20201029 12:45:39.292" endtime="20201029 12:45:39.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:39.301" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.1250000001037392e-06, 3.666999999651921e-06, 3.2920000001546157e-06, 3.2499999997881446e-06, 3.1530000002000236e-06, 2.846999999750466e-06, 3.4449999999353054e-06, 3.611999999986182e-06...</msg>
<status status="PASS" starttime="20201029 12:45:39.296" endtime="20201029 12:45:39.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.305" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:39.304" endtime="20201029 12:45:39.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.307" level="INFO">VALUE: [0, 3.1250000001037392e-06, 3.666999999651921e-06, 3.2920000001546157e-06, 3.2499999997881446e-06, 3.1530000002000236e-06, 2.846999999750466e-06, 3.4449999999353054e-06, 3.611999999986182e-06, 3.1799999997694783e-06, 2.8330000003684574e-06, 3.6109999999034414e-06, 3.0980000000901953e-06, 0.3696037780000001, 3.7640000005723095e-06, 3.1529999997559344e-06, 2.8750000007349286e-06, 3.389000000630915e-06, 3.0840000002640977e-06, 3.1109999998335525e-06, 2.6110000002077527e-06, 3.8199999998767e-06, 3.624999999729539e-06, 3.208999999948503e-06, 3.3469999998203548e-06, 2.819999999736922e-06, 3.278000000328518e-06, 3.347999999903095e-06, 3.555000000154962e-06, 3.3610000000905416e-06, 3.1800000002135675e-06, 3.2919999997105265e-06, 3.22300000021869e-06, 3.278000000328518e-06, 2.889000000116937e-06, 4.1109999999733304e-06, 3.0130000006067803e-06, 3.3469999998203548e-06, 3.097999999646106e-06, 5.420000004363601e-07, 3.91699999990891e-06, 3.1529999997559344e-06, 3.8469999994461546e-06, 3.3610000000905416e-06, 3.6950000001922945e-06, 3.3610000000905416e-06, 3.360999999202363e-06, 2.4999999999053557e-06, 3.777999999954318e-06, 3.2640000000583314e-06, 2.596999999937566e-06, 3.459000000205492e-06, 3.874999999986528e-06, 3.443999999852565e-06, 3.570000000507889e-06, 2.8329999999243682e-06, 3.624999999729539e-06, 2.693999999969776e-06, 3.167000000026121e-06, 2.87499999984675e-06, 3.4720000003929385e-06, 3.5140000003153204e-06, 3.4299999995823782e-06, 3.7919999993363263e-06]</msg>
<status status="PASS" starttime="20201029 12:45:39.306" endtime="20201029 12:45:39.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.301" endtime="20201029 12:45:39.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.928" endtime="20201029 12:45:39.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.928" endtime="20201029 12:45:39.309"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.316" endtime="20201029 12:45:39.326"></status>
</kw>
<msg timestamp="20201029 12:45:39.326" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:39.315" endtime="20201029 12:45:39.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.329" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:39.327" endtime="20201029 12:45:39.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.330" endtime="20201029 12:45:39.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.312" endtime="20201029 12:45:39.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.311" endtime="20201029 12:45:39.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.339" endtime="20201029 12:45:39.650"></status>
</kw>
<msg timestamp="20201029 12:45:39.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.049189875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.049193153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:39.337" endtime="20201029 12:45:39.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.049189875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.049193153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:39.655" endtime="20201029 12:45:39.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.664" endtime="20201029 12:45:39.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.335" endtime="20201029 12:45:39.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.333" endtime="20201029 12:45:39.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:39.672" level="INFO">${RESULT} = [{'diff': 3.278000000328518e-06}, {'diff': 3.347999999903095e-06}, {'diff': 3.555000000154962e-06}, {'diff': 3.3610000000905416e-06}, {'diff': 3.1800000002135675e-06}, {'diff': 3.2919999997105265e-06}...</msg>
<status status="PASS" starttime="20201029 12:45:39.668" endtime="20201029 12:45:39.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:39.677" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.278000000328518e-06, 3.347999999903095e-06, 3.555000000154962e-06, 3.3610000000905416e-06, 3.1800000002135675e-06, 3.2919999997105265e-06, 3.22300000021869e-06, 3.278000000328518e-06, 2.88...</msg>
<status status="PASS" starttime="20201029 12:45:39.673" endtime="20201029 12:45:39.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.681" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:39.680" endtime="20201029 12:45:39.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.684" level="INFO">VALUE: [3.278000000328518e-06, 3.347999999903095e-06, 3.555000000154962e-06, 3.3610000000905416e-06, 3.1800000002135675e-06, 3.2919999997105265e-06, 3.22300000021869e-06, 3.278000000328518e-06, 2.889000000116937e-06, 4.1109999999733304e-06, 3.0130000006067803e-06, 3.3469999998203548e-06, 3.097999999646106e-06, 5.420000004363601e-07, 3.91699999990891e-06, 3.1529999997559344e-06, 3.8469999994461546e-06, 3.3610000000905416e-06, 3.6950000001922945e-06, 3.3610000000905416e-06, 3.360999999202363e-06, 2.4999999999053557e-06, 3.777999999954318e-06, 3.2640000000583314e-06, 2.596999999937566e-06, 3.459000000205492e-06, 3.874999999986528e-06, 3.443999999852565e-06, 3.570000000507889e-06, 2.8329999999243682e-06, 3.624999999729539e-06, 2.693999999969776e-06, 3.167000000026121e-06, 2.87499999984675e-06, 3.4720000003929385e-06, 3.5140000003153204e-06, 3.4299999995823782e-06, 3.7919999993363263e-06, 0.370213916, 2.9450000003095056e-06, 3.4449999999353054e-06, 4.070000000133689e-06, 2.457999999982974e-06, 3.2919999997105265e-06, 3.513999999427142e-06, 3.332999999550168e-06, 3.513999999427142e-06, 3.555000000154962e-06, 3.2640000000583314e-06, 3.555999999349524e-06, 2.7769999997317996e-06, 3.9579999997485515e-06, 3.889000000256715e-06, 2.9999999995311555e-06, 2.750000000162345e-06, 3.624999999729539e-06, 3.0410000002589754e-06, 2.8060000003549135e-06, 3.401999999930183e-06, 3.930000000096356e-06, 2.582999999667379e-06, 3.582999999807157e-06, 3.3610000000905416e-06, 3.7920000002245047e-06]</msg>
<status status="PASS" starttime="20201029 12:45:39.682" endtime="20201029 12:45:39.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.678" endtime="20201029 12:45:39.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.309" endtime="20201029 12:45:39.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.309" endtime="20201029 12:45:39.685"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.693" endtime="20201029 12:45:39.703"></status>
</kw>
<msg timestamp="20201029 12:45:39.703" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:39.691" endtime="20201029 12:45:39.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.705" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:39.704" endtime="20201029 12:45:39.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.706" endtime="20201029 12:45:39.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.689" endtime="20201029 12:45:39.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.687" endtime="20201029 12:45:39.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.715" endtime="20201029 12:45:40.031"></status>
</kw>
<msg timestamp="20201029 12:45:40.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.434547667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.434550542, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:45:39.714" endtime="20201029 12:45:40.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.434547667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.434550542, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:45:40.036" endtime="20201029 12:45:40.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.046" endtime="20201029 12:45:40.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.711" endtime="20201029 12:45:40.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.710" endtime="20201029 12:45:40.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:40.053" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.874999999986528e-06}, {'diff': 3.443999999852565e-06}, {'diff': 3.570000000507889e-06}, {'diff': 2.8329999999243682e-06}, {'diff': 3.624999999729539e-06}, {'diff': 2.693999999...</msg>
<status status="PASS" starttime="20201029 12:45:40.050" endtime="20201029 12:45:40.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:40.058" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.874999999986528e-06, 3.443999999852565e-06, 3.570000000507889e-06, 2.8329999999243682e-06, 3.624999999729539e-06, 2.693999999969776e-06, 3.167000000026121e-06, 2.87499999984675e-06, 3.4...</msg>
<status status="PASS" starttime="20201029 12:45:40.054" endtime="20201029 12:45:40.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.062" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:40.061" endtime="20201029 12:45:40.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.064" level="INFO">VALUE: [0, 3.874999999986528e-06, 3.443999999852565e-06, 3.570000000507889e-06, 2.8329999999243682e-06, 3.624999999729539e-06, 2.693999999969776e-06, 3.167000000026121e-06, 2.87499999984675e-06, 3.4720000003929385e-06, 3.5140000003153204e-06, 3.4299999995823782e-06, 3.7919999993363263e-06, 0.370213916, 2.9450000003095056e-06, 3.4449999999353054e-06, 4.070000000133689e-06, 2.457999999982974e-06, 3.2919999997105265e-06, 3.513999999427142e-06, 3.332999999550168e-06, 3.513999999427142e-06, 3.555000000154962e-06, 3.2640000000583314e-06, 3.555999999349524e-06, 2.7769999997317996e-06, 3.9579999997485515e-06, 3.889000000256715e-06, 2.9999999995311555e-06, 2.750000000162345e-06, 3.624999999729539e-06, 3.0410000002589754e-06, 2.8060000003549135e-06, 3.401999999930183e-06, 3.930000000096356e-06, 2.582999999667379e-06, 3.582999999807157e-06, 3.3610000000905416e-06, 3.7920000002245047e-06, 5.409999994654413e-07, 3.0139999998013423e-06, 3.2919999997105265e-06, 3.0139999998013423e-06, 3.4300000004705566e-06, 3.6110000003475307e-06, 3.208999999948503e-06, 2.8469999993063766e-06, 3.5690000004251488e-06, 3.8889999993685365e-06, 3.1940000004837543e-06, 3.401999999930183e-06, 3.459000000205492e-06, 3.069999999993911e-06, 3.777999999954318e-06, 3.6950000001922945e-06, 3.763999999684131e-06, 2.7360000007803364e-06, 2.819999999736922e-06, 2.819999999736922e-06, 3.6389999999997258e-06, 3.6659999995691805e-06, 2.8609999995765634e-06, 3.5699999996197107e-06, 2.986000000149147e-06]</msg>
<status status="PASS" starttime="20201029 12:45:40.063" endtime="20201029 12:45:40.065"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.059" endtime="20201029 12:45:40.065"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.686" endtime="20201029 12:45:40.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.685" endtime="20201029 12:45:40.066"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.074" endtime="20201029 12:45:40.084"></status>
</kw>
<msg timestamp="20201029 12:45:40.084" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:40.073" endtime="20201029 12:45:40.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.087" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:40.085" endtime="20201029 12:45:40.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.088" endtime="20201029 12:45:40.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.069" endtime="20201029 12:45:40.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.068" endtime="20201029 12:45:40.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.097" endtime="20201029 12:45:40.413"></status>
</kw>
<msg timestamp="20201029 12:45:40.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.804924167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.804928125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:40.095" endtime="20201029 12:45:40.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.804924167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.804928125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:40.418" endtime="20201029 12:45:40.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.429" endtime="20201029 12:45:40.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.093" endtime="20201029 12:45:40.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.091" endtime="20201029 12:45:40.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:40.435" level="INFO">${RESULT} = [{'diff': 3.9579999997485515e-06}, {'diff': 3.889000000256715e-06}, {'diff': 2.9999999995311555e-06}, {'diff': 2.750000000162345e-06}, {'diff': 3.624999999729539e-06}, {'diff': 3.0410000002589754e-06}...</msg>
<status status="PASS" starttime="20201029 12:45:40.432" endtime="20201029 12:45:40.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:40.441" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.9579999997485515e-06, 3.889000000256715e-06, 2.9999999995311555e-06, 2.750000000162345e-06, 3.624999999729539e-06, 3.0410000002589754e-06, 2.8060000003549135e-06, 3.401999999930183e-06, 3....</msg>
<status status="PASS" starttime="20201029 12:45:40.436" endtime="20201029 12:45:40.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.445" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:40.444" endtime="20201029 12:45:40.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.448" level="INFO">VALUE: [3.9579999997485515e-06, 3.889000000256715e-06, 2.9999999995311555e-06, 2.750000000162345e-06, 3.624999999729539e-06, 3.0410000002589754e-06, 2.8060000003549135e-06, 3.401999999930183e-06, 3.930000000096356e-06, 2.582999999667379e-06, 3.582999999807157e-06, 3.3610000000905416e-06, 3.7920000002245047e-06, 5.409999994654413e-07, 3.0139999998013423e-06, 3.2919999997105265e-06, 3.0139999998013423e-06, 3.4300000004705566e-06, 3.6110000003475307e-06, 3.208999999948503e-06, 2.8469999993063766e-06, 3.5690000004251488e-06, 3.8889999993685365e-06, 3.1940000004837543e-06, 3.401999999930183e-06, 3.459000000205492e-06, 3.069999999993911e-06, 3.777999999954318e-06, 3.6950000001922945e-06, 3.763999999684131e-06, 2.7360000007803364e-06, 2.819999999736922e-06, 2.819999999736922e-06, 3.6389999999997258e-06, 3.6659999995691805e-06, 2.8609999995765634e-06, 3.5699999996197107e-06, 2.986000000149147e-06, 0.37019424999999995, 3.1529999997559344e-06, 2.7640000004325316e-06, 3.193999999595576e-06, 3.6530000002699126e-06, 2.847000000194555e-06, 4.013000000746558e-06, 2.9159999996863917e-06, 3.7219999997617492e-06, 3.2079999998657627e-06, 3.124999999215561e-06, 2.5419999998277376e-06, 3.459000000205492e-06, 3.902999999638723e-06, 3.4580000001227518e-06, 3.4579999992345734e-06, 3.235999999517958e-06, 3.3330000004383464e-06, 3.5689999995369703e-06, 3.236999999600698e-06, 2.986000000149147e-06, 3.5419999999675156e-06, 4.070000000133689e-06, 2.652999999241956e-06, 3.082999999293179e-06, 3.6119999995420926e-06]</msg>
<status status="PASS" starttime="20201029 12:45:40.446" endtime="20201029 12:45:40.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.442" endtime="20201029 12:45:40.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.067" endtime="20201029 12:45:40.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.066" endtime="20201029 12:45:40.449"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.457" endtime="20201029 12:45:40.467"></status>
</kw>
<msg timestamp="20201029 12:45:40.467" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:40.455" endtime="20201029 12:45:40.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.469" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:40.468" endtime="20201029 12:45:40.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.470" endtime="20201029 12:45:40.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.453" endtime="20201029 12:45:40.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.451" endtime="20201029 12:45:40.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.479" endtime="20201029 12:45:40.793"></status>
</kw>
<msg timestamp="20201029 12:45:40.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.170523431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.170526736, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:45:40.478" endtime="20201029 12:45:40.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.170523431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.170526736, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:45:40.798" endtime="20201029 12:45:40.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.808" endtime="20201029 12:45:40.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.475" endtime="20201029 12:45:40.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.474" endtime="20201029 12:45:40.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:40.816" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.069999999993911e-06}, {'diff': 3.777999999954318e-06}, {'diff': 3.6950000001922945e-06}, {'diff': 3.763999999684131e-06}, {'diff': 2.7360000007803364e-06}, {'diff': 2.81999999...</msg>
<status status="PASS" starttime="20201029 12:45:40.811" endtime="20201029 12:45:40.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:40.820" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.069999999993911e-06, 3.777999999954318e-06, 3.6950000001922945e-06, 3.763999999684131e-06, 2.7360000007803364e-06, 2.819999999736922e-06, 2.819999999736922e-06, 3.6389999999997258e-06, ...</msg>
<status status="PASS" starttime="20201029 12:45:40.817" endtime="20201029 12:45:40.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.824" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:40.823" endtime="20201029 12:45:40.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.827" level="INFO">VALUE: [0, 3.069999999993911e-06, 3.777999999954318e-06, 3.6950000001922945e-06, 3.763999999684131e-06, 2.7360000007803364e-06, 2.819999999736922e-06, 2.819999999736922e-06, 3.6389999999997258e-06, 3.6659999995691805e-06, 2.8609999995765634e-06, 3.5699999996197107e-06, 2.986000000149147e-06, 0.37019424999999995, 3.1529999997559344e-06, 2.7640000004325316e-06, 3.193999999595576e-06, 3.6530000002699126e-06, 2.847000000194555e-06, 4.013000000746558e-06, 2.9159999996863917e-06, 3.7219999997617492e-06, 3.2079999998657627e-06, 3.124999999215561e-06, 2.5419999998277376e-06, 3.459000000205492e-06, 3.902999999638723e-06, 3.4580000001227518e-06, 3.4579999992345734e-06, 3.235999999517958e-06, 3.3330000004383464e-06, 3.5689999995369703e-06, 3.236999999600698e-06, 2.986000000149147e-06, 3.5419999999675156e-06, 4.070000000133689e-06, 2.652999999241956e-06, 3.082999999293179e-06, 3.6119999995420926e-06, 5.419999995481817e-07, 2.931000000039319e-06, 3.666999999651921e-06, 3.7229999998444896e-06, 2.9450000003095056e-06, 3.0139999998013423e-06, 3.6109999994593522e-06, 3.5000000000451337e-06, 3.2079999998657627e-06, 3.51300000023258e-06, 3.5140000003153204e-06, 2.9719999998789604e-06, 3.389000000630915e-06, 2.6670000004003214e-06, 3.179999999325389e-06, 2.666000000317581e-06, 3.1529999997559344e-06, 2.931000000039319e-06, 3.2770000002457778e-06, 3.1529999997559344e-06, 3.833000000064146e-06, 3.334000000521087e-06, 3.3190000001681597e-06, 2.91600000057457e-06, 2.9999999995311555e-06]</msg>
<status status="PASS" starttime="20201029 12:45:40.825" endtime="20201029 12:45:40.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.821" endtime="20201029 12:45:40.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.450" endtime="20201029 12:45:40.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.449" endtime="20201029 12:45:40.829"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.837" endtime="20201029 12:45:40.847"></status>
</kw>
<msg timestamp="20201029 12:45:40.847" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:40.835" endtime="20201029 12:45:40.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.850" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:40.848" endtime="20201029 12:45:40.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.851" endtime="20201029 12:45:40.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.833" endtime="20201029 12:45:40.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.831" endtime="20201029 12:45:40.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.861" endtime="20201029 12:45:41.174"></status>
</kw>
<msg timestamp="20201029 12:45:41.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.540874542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.540877986, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:45:40.859" endtime="20201029 12:45:41.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:41.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.540874542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.540877986, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:45:41.179" endtime="20201029 12:45:41.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:41.189" endtime="20201029 12:45:41.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.856" endtime="20201029 12:45:41.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.854" endtime="20201029 12:45:41.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:41.196" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.902999999638723e-06}, {'diff': 3.4580000001227518e-06}, {'diff': 3.4579999992345734e-06}, {'diff': 3.235999999517958e-06}, {'diff': 3.3330000004383464e-06}, {'diff': 3.5689999...</msg>
<status status="PASS" starttime="20201029 12:45:41.192" endtime="20201029 12:45:41.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:41.201" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.902999999638723e-06, 3.4580000001227518e-06, 3.4579999992345734e-06, 3.235999999517958e-06, 3.3330000004383464e-06, 3.5689999995369703e-06, 3.236999999600698e-06, 2.986000000149147e-06,...</msg>
<status status="PASS" starttime="20201029 12:45:41.197" endtime="20201029 12:45:41.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:41.205" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:41.204" endtime="20201029 12:45:41.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:41.208" level="INFO">VALUE: [0, 3.902999999638723e-06, 3.4580000001227518e-06, 3.4579999992345734e-06, 3.235999999517958e-06, 3.3330000004383464e-06, 3.5689999995369703e-06, 3.236999999600698e-06, 2.986000000149147e-06, 3.5419999999675156e-06, 4.070000000133689e-06, 2.652999999241956e-06, 3.082999999293179e-06, 3.6119999995420926e-06, 5.419999995481817e-07, 2.931000000039319e-06, 3.666999999651921e-06, 3.7229999998444896e-06, 2.9450000003095056e-06, 3.0139999998013423e-06, 3.6109999994593522e-06, 3.5000000000451337e-06, 3.2079999998657627e-06, 3.51300000023258e-06, 3.5140000003153204e-06, 2.9719999998789604e-06, 3.389000000630915e-06, 2.6670000004003214e-06, 3.179999999325389e-06, 2.666000000317581e-06, 3.1529999997559344e-06, 2.931000000039319e-06, 3.2770000002457778e-06, 3.1529999997559344e-06, 3.833000000064146e-06, 3.334000000521087e-06, 3.3190000001681597e-06, 2.91600000057457e-06, 2.9999999995311555e-06, 0.3689168340000002, 3.597000000077344e-06, 3.6110000003475307e-06, 3.2640000000583314e-06, 3.0139999998013423e-06, 2.819999999736922e-06, 3.3190000001681597e-06, 3.5560000002377024e-06, 3.9579999997485515e-06, 2.4999999999053557e-06, 3.5000000000451337e-06, 2.7920000000847267e-06, 3.860999999716341e-06, 3.3059999999807133e-06, 3.597000000077344e-06, 2.6390000007481262e-06, 2.6659999994294026e-06, 3.2079999998657627e-06, 3.3200000002509e-06, 3.805999999606513e-06, 2.847000000194555e-06, 3.278000000328518e-06, 3.6799999998393673e-06, 3.5419999999675156e-06, 3.5280000005855072e-06]</msg>
<status status="PASS" starttime="20201029 12:45:41.207" endtime="20201029 12:45:41.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.202" endtime="20201029 12:45:41.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.829" endtime="20201029 12:45:41.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.829" endtime="20201029 12:45:41.210"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:41.217" endtime="20201029 12:45:41.227"></status>
</kw>
<msg timestamp="20201029 12:45:41.227" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:41.216" endtime="20201029 12:45:41.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:41.230" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:41.228" endtime="20201029 12:45:41.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:41.231" endtime="20201029 12:45:41.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.213" endtime="20201029 12:45:41.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.212" endtime="20201029 12:45:41.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:41.240" endtime="20201029 12:45:41.559"></status>
</kw>
<msg timestamp="20201029 12:45:41.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.912473861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.91247725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:41.238" endtime="20201029 12:45:41.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:41.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.912473861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.91247725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:41.571" endtime="20201029 12:45:41.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:41.594" endtime="20201029 12:45:41.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.236" endtime="20201029 12:45:41.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.234" endtime="20201029 12:45:41.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:41.608" level="INFO">${RESULT} = [{'diff': 3.389000000630915e-06}, {'diff': 2.6670000004003214e-06}, {'diff': 3.179999999325389e-06}, {'diff': 2.666000000317581e-06}, {'diff': 3.1529999997559344e-06}, {'diff': 2.931000000039319e-06},...</msg>
<status status="PASS" starttime="20201029 12:45:41.601" endtime="20201029 12:45:41.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:41.620" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.389000000630915e-06, 2.6670000004003214e-06, 3.179999999325389e-06, 2.666000000317581e-06, 3.1529999997559344e-06, 2.931000000039319e-06, 3.2770000002457778e-06, 3.1529999997559344e-06, 3....</msg>
<status status="PASS" starttime="20201029 12:45:41.610" endtime="20201029 12:45:41.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:41.628" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:41.626" endtime="20201029 12:45:41.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:41.634" level="INFO">VALUE: [3.389000000630915e-06, 2.6670000004003214e-06, 3.179999999325389e-06, 2.666000000317581e-06, 3.1529999997559344e-06, 2.931000000039319e-06, 3.2770000002457778e-06, 3.1529999997559344e-06, 3.833000000064146e-06, 3.334000000521087e-06, 3.3190000001681597e-06, 2.91600000057457e-06, 2.9999999995311555e-06, 0.3689168340000002, 3.597000000077344e-06, 3.6110000003475307e-06, 3.2640000000583314e-06, 3.0139999998013423e-06, 2.819999999736922e-06, 3.3190000001681597e-06, 3.5560000002377024e-06, 3.9579999997485515e-06, 2.4999999999053557e-06, 3.5000000000451337e-06, 2.7920000000847267e-06, 3.860999999716341e-06, 3.3059999999807133e-06, 3.597000000077344e-06, 2.6390000007481262e-06, 2.6659999994294026e-06, 3.2079999998657627e-06, 3.3200000002509e-06, 3.805999999606513e-06, 2.847000000194555e-06, 3.278000000328518e-06, 3.6799999998393673e-06, 3.5419999999675156e-06, 3.5280000005855072e-06, 0.3697232780000004, 2.4029999998731455e-06, 3.6389999999997258e-06, 3.889000000256715e-06, 3.1379999994030072e-06, 3.028000000071529e-06, 3.6670000005400993e-06, 2.6109999993195743e-06, 2.986000000149147e-06, 3.2499999997881446e-06, 3.1529999997559344e-06, 3.431000000553297e-06, 3.7500000003021228e-06, 3.4440000007407434e-06, 3.416999999394932e-06, 3.235999999517958e-06, 3.3610000000905416e-06, 3.694999999304116e-06, 2.6799999996995894e-06, 3.6670000005400993e-06, 3.2910000005159645e-06, 3.527000000502767e-06, 3.111000000721731e-06, 2.7920000000847267e-06, 3.6110000003475307e-06, 2.8329999999243682e-06]</msg>
<status status="PASS" starttime="20201029 12:45:41.631" endtime="20201029 12:45:41.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.621" endtime="20201029 12:45:41.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.210" endtime="20201029 12:45:41.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.210" endtime="20201029 12:45:41.637"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:41.650" endtime="20201029 12:45:41.659"></status>
</kw>
<msg timestamp="20201029 12:45:41.659" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:41.648" endtime="20201029 12:45:41.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:41.662" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:41.661" endtime="20201029 12:45:41.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:41.663" endtime="20201029 12:45:41.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.645" endtime="20201029 12:45:41.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.641" endtime="20201029 12:45:41.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:41.672" endtime="20201029 12:45:41.990"></status>
</kw>
<msg timestamp="20201029 12:45:41.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.281555597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.281558708, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:45:41.670" endtime="20201029 12:45:41.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.281555597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.281558708, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:45:41.995" endtime="20201029 12:45:42.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.006" endtime="20201029 12:45:42.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.668" endtime="20201029 12:45:42.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.666" endtime="20201029 12:45:42.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:42.013" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.3059999999807133e-06}, {'diff': 3.597000000077344e-06}, {'diff': 2.6390000007481262e-06}, {'diff': 2.6659999994294026e-06}, {'diff': 3.2079999998657627e-06}, {'diff': 3.320000...</msg>
<status status="PASS" starttime="20201029 12:45:42.009" endtime="20201029 12:45:42.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:42.018" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.3059999999807133e-06, 3.597000000077344e-06, 2.6390000007481262e-06, 2.6659999994294026e-06, 3.2079999998657627e-06, 3.3200000002509e-06, 3.805999999606513e-06, 2.847000000194555e-06, 3...</msg>
<status status="PASS" starttime="20201029 12:45:42.014" endtime="20201029 12:45:42.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.022" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:42.021" endtime="20201029 12:45:42.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.025" level="INFO">VALUE: [0, 3.3059999999807133e-06, 3.597000000077344e-06, 2.6390000007481262e-06, 2.6659999994294026e-06, 3.2079999998657627e-06, 3.3200000002509e-06, 3.805999999606513e-06, 2.847000000194555e-06, 3.278000000328518e-06, 3.6799999998393673e-06, 3.5419999999675156e-06, 3.5280000005855072e-06, 0.3697232780000004, 2.4029999998731455e-06, 3.6389999999997258e-06, 3.889000000256715e-06, 3.1379999994030072e-06, 3.028000000071529e-06, 3.6670000005400993e-06, 2.6109999993195743e-06, 2.986000000149147e-06, 3.2499999997881446e-06, 3.1529999997559344e-06, 3.431000000553297e-06, 3.7500000003021228e-06, 3.4440000007407434e-06, 3.416999999394932e-06, 3.235999999517958e-06, 3.3610000000905416e-06, 3.694999999304116e-06, 2.6799999996995894e-06, 3.6670000005400993e-06, 3.2910000005159645e-06, 3.527000000502767e-06, 3.111000000721731e-06, 2.7920000000847267e-06, 3.6110000003475307e-06, 2.8329999999243682e-06, 5.409999994654413e-07, 3.334000000521087e-06, 3.7219999997617492e-06, 3.2640000000583314e-06, 3.1389999994857476e-06, 3.5140000003153204e-06, 3.8199999998767e-06, 3.944999999561105e-06, 2.708000000239963e-06, 3.3610000000905416e-06, 4.028000000211307e-06, 3.250000000676323e-06, 2.457999999982974e-06, 3.124999999215561e-06, 3.6109999994593522e-06, 2.931000000039319e-06, 3.3750000003607283e-06, 3.416999999394932e-06, 3.389000000630915e-06, 3.4170000002831102e-06, 2.7229999997047116e-06, 3.4309999996651186e-06, 2.8189999996541815e-06, 2.750000000162345e-06, 3.2360000004061362e-06]</msg>
<status status="PASS" starttime="20201029 12:45:42.023" endtime="20201029 12:45:42.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.019" endtime="20201029 12:45:42.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.639" endtime="20201029 12:45:42.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.638" endtime="20201029 12:45:42.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.436" endtime="20201029 12:45:42.026"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:34.367" endtime="20201029 12:45:42.027" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:42.034" endtime="20201029 12:45:42.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.032" endtime="20201029 12:45:42.054"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.068" endtime="20201029 12:45:42.082"></status>
</kw>
<msg timestamp="20201029 12:45:42.083" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:42.066" endtime="20201029 12:45:42.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.085" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:42.084" endtime="20201029 12:45:42.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.089" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:42.087" endtime="20201029 12:45:42.089"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:42.063" endtime="20201029 12:45:42.090"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:42.061" endtime="20201029 12:45:42.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.060" endtime="20201029 12:45:42.090"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:42.094" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:42.093" endtime="20201029 12:45:42.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.091" endtime="20201029 12:45:42.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.059" endtime="20201029 12:45:42.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.058" endtime="20201029 12:45:42.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.096" endtime="20201029 12:45:42.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.056" endtime="20201029 12:45:42.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.054" endtime="20201029 12:45:42.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.031" endtime="20201029 12:45:42.099"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.107" endtime="20201029 12:45:42.118"></status>
</kw>
<msg timestamp="20201029 12:45:42.119" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:42.105" endtime="20201029 12:45:42.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.121" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:42.120" endtime="20201029 12:45:42.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.122" endtime="20201029 12:45:42.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.103" endtime="20201029 12:45:42.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.101" endtime="20201029 12:45:42.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.132" endtime="20201029 12:45:42.438"></status>
</kw>
<msg timestamp="20201029 12:45:42.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064152889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064153972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:42.131" endtime="20201029 12:45:42.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064152889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064153972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:42.447" endtime="20201029 12:45:42.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.462" endtime="20201029 12:45:42.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.127" endtime="20201029 12:45:42.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.126" endtime="20201029 12:45:42.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:42.469" level="INFO">${RESULT} = [{'diff': 1.082999999998946e-06}, {'diff': 7.360000000011802e-07}, {'diff': 7.219999999946713e-07}, {'diff': 6.939999999955315e-07}, {'diff': 7.230000000080228e-07}, {'diff': 8.059999999920908e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:45:42.466" endtime="20201029 12:45:42.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:42.473" level="INFO">${OVERHEAD} = {'diff': [1.082999999998946e-06, 7.360000000011802e-07, 7.219999999946713e-07, 6.939999999955315e-07, 7.230000000080228e-07, 8.059999999920908e-07, 7.219999999946713e-07, 7.079999999881625e-07, 7.2200...</msg>
<status status="PASS" starttime="20201029 12:45:42.470" endtime="20201029 12:45:42.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.478" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:42.476" endtime="20201029 12:45:42.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.480" level="INFO">VALUE: [1.082999999998946e-06, 7.360000000011802e-07, 7.219999999946713e-07, 6.939999999955315e-07, 7.230000000080228e-07, 8.059999999920908e-07, 7.219999999946713e-07, 7.079999999881625e-07, 7.220000000085491e-07, 7.370000000006538e-07, 7.360000000011802e-07, 7.219999999946713e-07, 7.219999999946713e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.219999999946713e-07, 7.219999999946713e-07, 7.080000000020403e-07, 7.09000000001514e-07, 7.360000000011802e-07, 7.50000000007689e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.219999999946713e-07, 7.219999999946713e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.220000000085491e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.080000000020403e-07, 7.080000000020403e-07, 7.360000000011802e-07, 6.670000000097431e-07, 6.799999999890227e-07, 7.219999999946713e-07, 7.080000000020403e-07, 7.359999999873024e-07, 7.219999999946713e-07, 7.220000000085491e-07, 7.50000000007689e-07, 7.360000000011802e-07, 7.370000000006538e-07, 7.360000000011802e-07, 7.77999999992951e-07, 7.080000000020403e-07, 7.22999999994145e-07, 7.919999999994598e-07, 7.780000000068288e-07]</msg>
<status status="PASS" starttime="20201029 12:45:42.479" endtime="20201029 12:45:42.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.474" endtime="20201029 12:45:42.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.100" endtime="20201029 12:45:42.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.099" endtime="20201029 12:45:42.481"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.490" endtime="20201029 12:45:42.501"></status>
</kw>
<msg timestamp="20201029 12:45:42.501" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:42.488" endtime="20201029 12:45:42.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.504" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:42.503" endtime="20201029 12:45:42.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.505" endtime="20201029 12:45:42.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.485" endtime="20201029 12:45:42.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.483" endtime="20201029 12:45:42.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.514" endtime="20201029 12:45:42.824"></status>
</kw>
<msg timestamp="20201029 12:45:42.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064237361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064238083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:42.512" endtime="20201029 12:45:42.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064237361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064238083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:42.829" endtime="20201029 12:45:42.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.839" endtime="20201029 12:45:42.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.510" endtime="20201029 12:45:42.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.508" endtime="20201029 12:45:42.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:42.846" level="INFO">${RESULT} = [{'diff': 7.219999999946713e-07}, {'diff': 7.080000000020403e-07}, {'diff': 7.359999999873024e-07}, {'diff': 7.219999999946713e-07}, {'diff': 7.220000000085491e-07}, {'diff': 7.50000000007689e-07}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:42.842" endtime="20201029 12:45:42.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:42.851" level="INFO">${OVERHEAD} = {'diff': [7.219999999946713e-07, 7.080000000020403e-07, 7.359999999873024e-07, 7.219999999946713e-07, 7.220000000085491e-07, 7.50000000007689e-07, 7.360000000011802e-07, 7.370000000006538e-07, 7.36000...</msg>
<status status="PASS" starttime="20201029 12:45:42.847" endtime="20201029 12:45:42.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.860" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:42.858" endtime="20201029 12:45:42.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.862" level="INFO">VALUE: [7.219999999946713e-07, 7.080000000020403e-07, 7.359999999873024e-07, 7.219999999946713e-07, 7.220000000085491e-07, 7.50000000007689e-07, 7.360000000011802e-07, 7.370000000006538e-07, 7.360000000011802e-07, 7.77999999992951e-07, 7.080000000020403e-07, 7.22999999994145e-07, 7.919999999994598e-07, 7.780000000068288e-07, 1.1389999999833478e-06, 7.779999999790732e-07, 7.360000000011802e-07, 7.220000000085491e-07, 7.21999999953038e-07, 7.220000000085491e-07, 6.530000000171121e-07, 7.089999999876362e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.220000000085491e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.21999999953038e-07, 7.220000000085491e-07, 7.360000000011802e-07, 7.370000000284094e-07, 7.220000000085491e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.220000000085491e-07, 6.810000000023742e-07, 7.779999999790732e-07, 7.360000000011802e-07, 7.21999999953038e-07, 7.360000000011802e-07, 7.499999999938112e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.360000000011802e-07, 7.080000000159181e-07, 7.360000000011802e-07, 7.360000000011802e-07, 6.799999999751449e-07, 7.220000000085491e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.07999999960407e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.080000000159181e-07, 7.499999999938112e-07, 7.360000000011802e-07, 7.220000000085491e-07, 7.360000000011802e-07, 7.220000000085491e-07]</msg>
<status status="PASS" starttime="20201029 12:45:42.861" endtime="20201029 12:45:42.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.856" endtime="20201029 12:45:42.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.482" endtime="20201029 12:45:42.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.482" endtime="20201029 12:45:42.864"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.873" endtime="20201029 12:45:42.886"></status>
</kw>
<msg timestamp="20201029 12:45:42.886" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:42.871" endtime="20201029 12:45:42.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.889" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:42.887" endtime="20201029 12:45:42.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.890" endtime="20201029 12:45:42.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.868" endtime="20201029 12:45:42.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.866" endtime="20201029 12:45:42.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.899" endtime="20201029 12:45:43.203"></status>
</kw>
<msg timestamp="20201029 12:45:43.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.437503639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.437504319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:42.897" endtime="20201029 12:45:43.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.437503639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.437504319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:43.208" endtime="20201029 12:45:43.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.218" endtime="20201029 12:45:43.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.895" endtime="20201029 12:45:43.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.893" endtime="20201029 12:45:43.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:43.225" level="INFO">${RESULT} = [{'diff': 6.799999999751449e-07}, {'diff': 7.220000000085491e-07}, {'diff': 7.360000000011802e-07}, {'diff': 7.360000000011802e-07}, {'diff': 7.07999999960407e-07}, {'diff': 7.360000000011802e-07}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:43.221" endtime="20201029 12:45:43.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:43.232" level="INFO">${OVERHEAD} = {'diff': [6.799999999751449e-07, 7.220000000085491e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.07999999960407e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.08000...</msg>
<status status="PASS" starttime="20201029 12:45:43.226" endtime="20201029 12:45:43.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.237" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:43.236" endtime="20201029 12:45:43.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.239" level="INFO">VALUE: [6.799999999751449e-07, 7.220000000085491e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.07999999960407e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.080000000159181e-07, 7.499999999938112e-07, 7.360000000011802e-07, 7.220000000085491e-07, 7.360000000011802e-07, 7.220000000085491e-07, 1.0419999999511376e-06, 7.35999999945669e-07, 7.360000000566913e-07, 6.519999999898829e-07, 7.220000000085491e-07, 7.35999999945669e-07, 7.090000000431473e-07, 7.910000000554973e-07, 7.07999999960407e-07, 7.360000000566913e-07, 7.080000000714293e-07, 7.220000000085491e-07, 7.090000000431473e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.229999999802672e-07, 7.220000000085491e-07, 7.499999999938112e-07, 7.220000000085491e-07, 7.500000001048335e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.220000000085491e-07, 7.35999999945669e-07, 7.220000000085491e-07, 7.220000000085491e-07, 6.810000000578853e-07, 7.229999999802672e-07, 7.07999999960407e-07, 7.499999999938112e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.35999999945669e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.35999999945669e-07, 7.220000000085491e-07, 6.810000000578853e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.229999999802672e-07, 7.779999999790732e-07, 7.220000000085491e-07, 7.220000000085491e-07]</msg>
<status status="PASS" starttime="20201029 12:45:43.238" endtime="20201029 12:45:43.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.233" endtime="20201029 12:45:43.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.865" endtime="20201029 12:45:43.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.864" endtime="20201029 12:45:43.241"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.248" endtime="20201029 12:45:43.259"></status>
</kw>
<msg timestamp="20201029 12:45:43.259" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:43.247" endtime="20201029 12:45:43.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.262" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:43.261" endtime="20201029 12:45:43.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.263" endtime="20201029 12:45:43.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.244" endtime="20201029 12:45:43.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.243" endtime="20201029 12:45:43.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.279" endtime="20201029 12:45:43.582"></status>
</kw>
<msg timestamp="20201029 12:45:43.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.809471431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.809472153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:43.277" endtime="20201029 12:45:43.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.809471431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.809472153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:43.588" endtime="20201029 12:45:43.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.598" endtime="20201029 12:45:43.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.272" endtime="20201029 12:45:43.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.269" endtime="20201029 12:45:43.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:43.605" level="INFO">${RESULT} = [{'diff': 7.220000000085491e-07}, {'diff': 7.35999999945669e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.220000000085491e-07}, {'diff': 7.220000000085491e-07}, {'diff': 7.35999999945669e-07}, {'d...</msg>
<status status="PASS" starttime="20201029 12:45:43.601" endtime="20201029 12:45:43.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:43.610" level="INFO">${OVERHEAD} = {'diff': [7.220000000085491e-07, 7.35999999945669e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.35999999945669e-07, 7.220000000085491e-07, 6.810000000578853e-07, 7.360000...</msg>
<status status="PASS" starttime="20201029 12:45:43.606" endtime="20201029 12:45:43.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.614" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:43.613" endtime="20201029 12:45:43.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.616" level="INFO">VALUE: [7.220000000085491e-07, 7.35999999945669e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.35999999945669e-07, 7.220000000085491e-07, 6.810000000578853e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.229999999802672e-07, 7.779999999790732e-07, 7.220000000085491e-07, 7.220000000085491e-07, 1.056000000110302e-06, 6.390000000244811e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.359999998346467e-07, 7.229999998692449e-07, 7.370000001394317e-07, 7.07999999960407e-07, 7.220000000085491e-07, 7.499999998827889e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.080000001824516e-07, 7.220000000085491e-07, 6.390000000244811e-07, 7.090000000431473e-07, 7.220000000085491e-07, 7.07999999960407e-07, 7.220000000085491e-07, 6.660000000380251e-07, 7.359999998346467e-07, 7.220000000085491e-07, 7.359999998346467e-07, 7.359999998346467e-07, 7.220000000085491e-07, 7.359999998346467e-07, 6.80999999946863e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.230000000912895e-07, 7.369999999173871e-07, 7.359999998346467e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.369999999173871e-07, 7.360000000566913e-07, 7.500000001048335e-07, 7.359999998346467e-07, 7.770000001183774e-07, 7.220000000085491e-07, 7.359999998346467e-07, 7.360000000566913e-07, 7.359999998346467e-07, 7.359999998346467e-07, 7.499999998827889e-07, 7.220000000085491e-07, 7.499999998827889e-07, 7.499999998827889e-07, 7.779999999790732e-07, 7.360000000566913e-07]</msg>
<status status="PASS" starttime="20201029 12:45:43.615" endtime="20201029 12:45:43.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.611" endtime="20201029 12:45:43.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.241" endtime="20201029 12:45:43.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.241" endtime="20201029 12:45:43.618"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.626" endtime="20201029 12:45:43.638"></status>
</kw>
<msg timestamp="20201029 12:45:43.638" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:43.625" endtime="20201029 12:45:43.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.641" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:43.639" endtime="20201029 12:45:43.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.642" endtime="20201029 12:45:43.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.622" endtime="20201029 12:45:43.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.620" endtime="20201029 12:45:43.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.651" endtime="20201029 12:45:43.972"></status>
</kw>
<msg timestamp="20201029 12:45:43.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.174740333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.174741083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:43.649" endtime="20201029 12:45:43.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.174740333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.174741083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:43.981" endtime="20201029 12:45:43.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.991" endtime="20201029 12:45:43.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.646" endtime="20201029 12:45:43.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.645" endtime="20201029 12:45:43.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:43.998" level="INFO">${RESULT} = [{'diff': 7.500000001048335e-07}, {'diff': 7.359999998346467e-07}, {'diff': 7.770000001183774e-07}, {'diff': 7.220000000085491e-07}, {'diff': 7.359999998346467e-07}, {'diff': 7.360000000566913e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:45:43.994" endtime="20201029 12:45:43.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:44.003" level="INFO">${OVERHEAD} = {'diff': [7.500000001048335e-07, 7.359999998346467e-07, 7.770000001183774e-07, 7.220000000085491e-07, 7.359999998346467e-07, 7.360000000566913e-07, 7.359999998346467e-07, 7.359999998346467e-07, 7.4999...</msg>
<status status="PASS" starttime="20201029 12:45:43.999" endtime="20201029 12:45:44.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.008" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:44.006" endtime="20201029 12:45:44.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.010" level="INFO">VALUE: [7.500000001048335e-07, 7.359999998346467e-07, 7.770000001183774e-07, 7.220000000085491e-07, 7.359999998346467e-07, 7.360000000566913e-07, 7.359999998346467e-07, 7.359999998346467e-07, 7.499999998827889e-07, 7.220000000085491e-07, 7.499999998827889e-07, 7.499999998827889e-07, 7.779999999790732e-07, 7.360000000566913e-07, 1.1109999999980857e-06, 7.360000000566913e-07, 7.07999999960407e-07, 7.220000000085491e-07, 7.370000001394317e-07, 7.90999999944475e-07, 7.360000000566913e-07, 7.360000000566913e-07, 6.80999999946863e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.369999999173871e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.359999998346467e-07, 7.359999998346467e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.229999998692449e-07, 7.07999999960407e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.089999998211027e-07, 7.220000000085491e-07, 7.500000001048335e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.229999998692449e-07, 7.230000000912895e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.360000000566913e-07, 8.199999999014551e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.370000001394317e-07, 7.230000000912895e-07, 7.359999998346467e-07, 7.360000000566913e-07, 7.220000000085491e-07]</msg>
<status status="PASS" starttime="20201029 12:45:44.009" endtime="20201029 12:45:44.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.004" endtime="20201029 12:45:44.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.619" endtime="20201029 12:45:44.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.618" endtime="20201029 12:45:44.011"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.019" endtime="20201029 12:45:44.031"></status>
</kw>
<msg timestamp="20201029 12:45:44.032" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:44.018" endtime="20201029 12:45:44.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.034" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:44.033" endtime="20201029 12:45:44.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.035" endtime="20201029 12:45:44.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.015" endtime="20201029 12:45:44.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.013" endtime="20201029 12:45:44.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.044" endtime="20201029 12:45:44.346"></status>
</kw>
<msg timestamp="20201029 12:45:44.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.543784083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.543784806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:44.042" endtime="20201029 12:45:44.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.543784083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.543784806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:44.351" endtime="20201029 12:45:44.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.361" endtime="20201029 12:45:44.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.040" endtime="20201029 12:45:44.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.038" endtime="20201029 12:45:44.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:44.368" level="INFO">${RESULT} = [{'diff': 7.229999998692449e-07}, {'diff': 7.230000000912895e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.220000000085491e-07}, {'diff': 7.360000000566913e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:45:44.364" endtime="20201029 12:45:44.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:44.374" level="INFO">${OVERHEAD} = {'diff': [7.229999998692449e-07, 7.230000000912895e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.360000000566913e-07, 8.199999999014551e-07, 7.360000000566913e-07, 7.0799...</msg>
<status status="PASS" starttime="20201029 12:45:44.370" endtime="20201029 12:45:44.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.380" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:44.378" endtime="20201029 12:45:44.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.382" level="INFO">VALUE: [7.229999998692449e-07, 7.230000000912895e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.360000000566913e-07, 8.199999999014551e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.370000001394317e-07, 7.230000000912895e-07, 7.359999998346467e-07, 7.360000000566913e-07, 7.220000000085491e-07, 1.0839999999845418e-06, 7.220000000085491e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.220000000085491e-07, 6.390000000244811e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.229999998692449e-07, 7.220000000085491e-07, 7.359999998346467e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.779999999790732e-07, 7.779999999790732e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.220000000085491e-07, 7.500000001048335e-07, 7.779999999790732e-07, 7.220000000085491e-07, 7.230000000912895e-07, 7.229999998692449e-07, 6.949999999950052e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 6.940000001343094e-07, 7.080000001824516e-07, 7.359999998346467e-07, 7.770000001183774e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.370000001394317e-07, 7.220000000085491e-07, 7.07999999960407e-07, 7.369999999173871e-07, 6.949999999950052e-07, 7.07999999960407e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.090000000431473e-07, 7.63999999930931e-07, 7.360000000566913e-07, 6.940000001343094e-07, 7.360000000566913e-07, 7.360000000566913e-07]</msg>
<status status="PASS" starttime="20201029 12:45:44.381" endtime="20201029 12:45:44.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.376" endtime="20201029 12:45:44.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.012" endtime="20201029 12:45:44.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.012" endtime="20201029 12:45:44.386"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.395" endtime="20201029 12:45:44.406"></status>
</kw>
<msg timestamp="20201029 12:45:44.407" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:44.394" endtime="20201029 12:45:44.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.409" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:44.408" endtime="20201029 12:45:44.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.410" endtime="20201029 12:45:44.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.391" endtime="20201029 12:45:44.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.389" endtime="20201029 12:45:44.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.421" endtime="20201029 12:45:44.747"></status>
</kw>
<msg timestamp="20201029 12:45:44.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.926545944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.926546681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:44.418" endtime="20201029 12:45:44.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.926545944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.926546681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:44.759" endtime="20201029 12:45:44.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.787" endtime="20201029 12:45:44.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.415" endtime="20201029 12:45:44.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.414" endtime="20201029 12:45:44.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:44.797" level="INFO">${RESULT} = [{'diff': 7.370000001394317e-07}, {'diff': 7.220000000085491e-07}, {'diff': 7.07999999960407e-07}, {'diff': 7.369999999173871e-07}, {'diff': 6.949999999950052e-07}, {'diff': 7.07999999960407e-07}, {'d...</msg>
<status status="PASS" starttime="20201029 12:45:44.791" endtime="20201029 12:45:44.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:44.806" level="INFO">${OVERHEAD} = {'diff': [7.370000001394317e-07, 7.220000000085491e-07, 7.07999999960407e-07, 7.369999999173871e-07, 6.949999999950052e-07, 7.07999999960407e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.090000...</msg>
<status status="PASS" starttime="20201029 12:45:44.800" endtime="20201029 12:45:44.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.810" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:44.809" endtime="20201029 12:45:44.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.813" level="INFO">VALUE: [7.370000001394317e-07, 7.220000000085491e-07, 7.07999999960407e-07, 7.369999999173871e-07, 6.949999999950052e-07, 7.07999999960407e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.090000000431473e-07, 7.63999999930931e-07, 7.360000000566913e-07, 6.940000001343094e-07, 7.360000000566913e-07, 7.360000000566913e-07, 1.0829999999018014e-06, 7.219999997865045e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.090000000431473e-07, 7.07999999960407e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.090000000431473e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.229999998692449e-07, 7.369999996953425e-07, 7.07999999960407e-07, 7.07999999960407e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.919999998051708e-07, 7.779999999790732e-07, 7.369999996953425e-07, 7.360000000566913e-07, 7.230000003133341e-07, 7.77000000340422e-07, 7.779999999790732e-07, 7.090000000431473e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.090000000431473e-07, 7.219999997865045e-07, 7.499999998827889e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07]</msg>
<status status="PASS" starttime="20201029 12:45:44.811" endtime="20201029 12:45:44.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.807" endtime="20201029 12:45:44.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.387" endtime="20201029 12:45:44.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.387" endtime="20201029 12:45:44.814"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.823" endtime="20201029 12:45:44.834"></status>
</kw>
<msg timestamp="20201029 12:45:44.834" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:44.821" endtime="20201029 12:45:44.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.837" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:44.835" endtime="20201029 12:45:44.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.838" endtime="20201029 12:45:44.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.819" endtime="20201029 12:45:44.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.816" endtime="20201029 12:45:44.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.847" endtime="20201029 12:45:45.167"></status>
</kw>
<msg timestamp="20201029 12:45:45.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.293474889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.293475611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:44.845" endtime="20201029 12:45:45.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.293474889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.293475611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:45.172" endtime="20201029 12:45:45.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.182" endtime="20201029 12:45:45.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.843" endtime="20201029 12:45:45.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.841" endtime="20201029 12:45:45.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:45.189" level="INFO">${RESULT} = [{'diff': 7.219999997865045e-07}, {'diff': 7.220000002305937e-07}, {'diff': 7.220000002305937e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.220000002305937e-07}, {'diff': 7.360000000566913e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:45:45.185" endtime="20201029 12:45:45.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:45.195" level="INFO">${OVERHEAD} = {'diff': [7.219999997865045e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.090000000431473e-07, 7.219999997865045e-07, 7.4999...</msg>
<status status="PASS" starttime="20201029 12:45:45.190" endtime="20201029 12:45:45.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.199" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:45.198" endtime="20201029 12:45:45.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.201" level="INFO">VALUE: [7.219999997865045e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.090000000431473e-07, 7.219999997865045e-07, 7.499999998827889e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 1.0550000002496063e-06, 7.499999998827889e-07, 7.499999998827889e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.229999998692449e-07, 7.229999998692449e-07, 7.230000003133341e-07, 7.090000000431473e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.219999997865045e-07, 7.370000001394317e-07, 7.090000000431473e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.089999995990581e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.370000001394317e-07, 7.090000000431473e-07, 6.940000001343094e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.360000000566913e-07, 6.799999998641226e-07, 7.219999997865045e-07, 7.359999996126021e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.230000003133341e-07, 7.230000003133341e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.230000003133341e-07, 7.219999997865045e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.229999998692449e-07]</msg>
<status status="PASS" starttime="20201029 12:45:45.200" endtime="20201029 12:45:45.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.195" endtime="20201029 12:45:45.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.815" endtime="20201029 12:45:45.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.814" endtime="20201029 12:45:45.203"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.211" endtime="20201029 12:45:45.222"></status>
</kw>
<msg timestamp="20201029 12:45:45.222" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:45.209" endtime="20201029 12:45:45.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.225" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:45.223" endtime="20201029 12:45:45.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.226" endtime="20201029 12:45:45.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.206" endtime="20201029 12:45:45.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.205" endtime="20201029 12:45:45.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.235" endtime="20201029 12:45:45.560"></status>
</kw>
<msg timestamp="20201029 12:45:45.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.710204639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.710205375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:45.233" endtime="20201029 12:45:45.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.710204639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.710205375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:45.571" endtime="20201029 12:45:45.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.594" endtime="20201029 12:45:45.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.231" endtime="20201029 12:45:45.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.229" endtime="20201029 12:45:45.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:45.603" level="INFO">${RESULT} = [{'diff': 7.360000000566913e-07}, {'diff': 7.219999997865045e-07}, {'diff': 7.219999997865045e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.230000003133341e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:45:45.599" endtime="20201029 12:45:45.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:45.608" level="INFO">${OVERHEAD} = {'diff': [7.360000000566913e-07, 7.219999997865045e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.230000003133341e-07, 7.219999997865045e-07, 7.220000002305937e-07, 7.3600...</msg>
<status status="PASS" starttime="20201029 12:45:45.604" endtime="20201029 12:45:45.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.612" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:45.611" endtime="20201029 12:45:45.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.614" level="INFO">VALUE: [7.360000000566913e-07, 7.219999997865045e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.230000003133341e-07, 7.219999997865045e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.229999998692449e-07, 1.0550000002496063e-06, 7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.499999998827889e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.370000001394317e-07, 7.369999996953425e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.229999998692449e-07, 7.219999997865045e-07, 6.529999998505787e-07, 7.229999998692449e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.909999997224304e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.07999999960407e-07, 7.359999996126021e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.499999998827889e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.090000000431473e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.370000001394317e-07, 7.220000002305937e-07, 7.500000003268781e-07, 7.090000000431473e-07, 7.77000000340422e-07, 7.07999999960407e-07, 7.07999999960407e-07, 7.360000000566913e-07, 7.230000003133341e-07, 7.07999999960407e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.229999998692449e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.219999997865045e-07, 7.369999996953425e-07]</msg>
<status status="PASS" starttime="20201029 12:45:45.613" endtime="20201029 12:45:45.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.609" endtime="20201029 12:45:45.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.204" endtime="20201029 12:45:45.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.203" endtime="20201029 12:45:45.616"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.624" endtime="20201029 12:45:45.635"></status>
</kw>
<msg timestamp="20201029 12:45:45.635" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:45.622" endtime="20201029 12:45:45.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.638" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:45.636" endtime="20201029 12:45:45.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.639" endtime="20201029 12:45:45.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.620" endtime="20201029 12:45:45.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.618" endtime="20201029 12:45:45.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.649" endtime="20201029 12:45:45.970"></status>
</kw>
<msg timestamp="20201029 12:45:45.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.088748194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.088748903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:45.647" endtime="20201029 12:45:45.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.088748194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.088748903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:45.975" endtime="20201029 12:45:45.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.990" endtime="20201029 12:45:45.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.644" endtime="20201029 12:45:45.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.642" endtime="20201029 12:45:45.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:46.000" level="INFO">${RESULT} = [{'diff': 7.090000000431473e-07}, {'diff': 7.77000000340422e-07}, {'diff': 7.07999999960407e-07}, {'diff': 7.07999999960407e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.230000003133341e-07}, {'di...</msg>
<status status="PASS" starttime="20201029 12:45:45.994" endtime="20201029 12:45:46.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:46.009" level="INFO">${OVERHEAD} = {'diff': [7.090000000431473e-07, 7.77000000340422e-07, 7.07999999960407e-07, 7.07999999960407e-07, 7.360000000566913e-07, 7.230000003133341e-07, 7.07999999960407e-07, 7.360000000566913e-07, 7.36000000...</msg>
<status status="PASS" starttime="20201029 12:45:46.002" endtime="20201029 12:45:46.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.014" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:46.012" endtime="20201029 12:45:46.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.016" level="INFO">VALUE: [7.090000000431473e-07, 7.77000000340422e-07, 7.07999999960407e-07, 7.07999999960407e-07, 7.360000000566913e-07, 7.230000003133341e-07, 7.07999999960407e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.229999998692449e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.219999997865045e-07, 7.369999996953425e-07, 1.0409999999794195e-06, 7.360000000566913e-07, 7.359999996126021e-07, 7.369999996953425e-07, 7.360000000566913e-07, 7.370000001394317e-07, 7.229999998692449e-07, 6.940000001343094e-07, 7.220000002305937e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.500000003268781e-07, 7.220000002305937e-07, 6.530000002946679e-07, 7.219999997865045e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.499999998827889e-07, 6.950000002170498e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.230000003133341e-07, 7.229999998692449e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.499999998827889e-07, 7.499999998827889e-07, 7.080000004044962e-07, 7.219999997865045e-07, 7.359999996126021e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000002305937e-07, 6.800000003082118e-07, 7.219999997865045e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.499999998827889e-07, 7.360000000566913e-07, 7.77000000340422e-07, 7.219999997865045e-07]</msg>
<status status="PASS" starttime="20201029 12:45:46.015" endtime="20201029 12:45:46.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.010" endtime="20201029 12:45:46.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.617" endtime="20201029 12:45:46.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.616" endtime="20201029 12:45:46.018"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.026" endtime="20201029 12:45:46.037"></status>
</kw>
<msg timestamp="20201029 12:45:46.037" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:46.024" endtime="20201029 12:45:46.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.040" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:46.038" endtime="20201029 12:45:46.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.041" endtime="20201029 12:45:46.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.022" endtime="20201029 12:45:46.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.020" endtime="20201029 12:45:46.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.050" endtime="20201029 12:45:46.364"></status>
</kw>
<msg timestamp="20201029 12:45:46.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.494081292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.494082028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:46.048" endtime="20201029 12:45:46.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.494081292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.494082028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:46.369" endtime="20201029 12:45:46.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.379" endtime="20201029 12:45:46.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.046" endtime="20201029 12:45:46.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.044" endtime="20201029 12:45:46.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:46.386" level="INFO">${RESULT} = [{'diff': 7.359999996126021e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.219999997865045e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.220000002305937e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:45:46.382" endtime="20201029 12:45:46.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:46.391" level="INFO">${OVERHEAD} = {'diff': [7.359999996126021e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000002305937e-07, 6.800000003082118e-07, 7.219999997865045e-07, 7.2199...</msg>
<status status="PASS" starttime="20201029 12:45:46.387" endtime="20201029 12:45:46.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.395" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:46.394" endtime="20201029 12:45:46.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.398" level="INFO">VALUE: [7.359999996126021e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000002305937e-07, 6.800000003082118e-07, 7.219999997865045e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.499999998827889e-07, 7.360000000566913e-07, 7.77000000340422e-07, 7.219999997865045e-07, 1.0970000001719882e-06, 7.360000000566913e-07, 7.219999997865045e-07, 7.219999997865045e-07, 7.360000000566913e-07, 6.940000001343094e-07, 6.949999997729606e-07, 7.500000003268781e-07, 7.220000002305937e-07, 7.219999997865045e-07, 6.529999998505787e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.089999995990581e-07, 7.229999998692449e-07, 7.219999997865045e-07, 7.370000001394317e-07, 7.090000000431473e-07, 7.220000002305937e-07, 7.230000003133341e-07, 6.950000002170498e-07, 7.499999998827889e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.089999995990581e-07, 7.499999998827889e-07, 7.360000000566913e-07, 7.499999998827889e-07, 7.089999995990581e-07, 7.360000000566913e-07, 7.359999996126021e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.359999996126021e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.370000001394317e-07, 6.529999998505787e-07, 7.07999999960407e-07, 7.369999996953425e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07]</msg>
<status status="PASS" starttime="20201029 12:45:46.396" endtime="20201029 12:45:46.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.392" endtime="20201029 12:45:46.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.019" endtime="20201029 12:45:46.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.018" endtime="20201029 12:45:46.399"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.407" endtime="20201029 12:45:46.418"></status>
</kw>
<msg timestamp="20201029 12:45:46.419" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:46.406" endtime="20201029 12:45:46.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.421" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:46.420" endtime="20201029 12:45:46.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.422" endtime="20201029 12:45:46.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.403" endtime="20201029 12:45:46.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.401" endtime="20201029 12:45:46.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.431" endtime="20201029 12:45:46.746"></status>
</kw>
<msg timestamp="20201029 12:45:46.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.886761042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.886761764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:46.430" endtime="20201029 12:45:46.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.886761042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.886761764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:46.751" endtime="20201029 12:45:46.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.764" endtime="20201029 12:45:46.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.427" endtime="20201029 12:45:46.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.425" endtime="20201029 12:45:46.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:46.774" level="INFO">${RESULT} = [{'diff': 7.220000002305937e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.359999996126021e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.360000000566913e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:45:46.769" endtime="20201029 12:45:46.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:46.781" level="INFO">${OVERHEAD} = {'diff': [7.220000002305937e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.359999996126021e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.370000001394317e-07, 6.5299...</msg>
<status status="PASS" starttime="20201029 12:45:46.775" endtime="20201029 12:45:46.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.786" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:46.785" endtime="20201029 12:45:46.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.792" level="INFO">VALUE: [7.220000002305937e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.359999996126021e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.370000001394317e-07, 6.529999998505787e-07, 7.07999999960407e-07, 7.369999996953425e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07, 1.0970000001719882e-06, 7.090000000431473e-07, 7.219999993424153e-07, 7.230000003133341e-07, 7.220000002305937e-07, 7.369999996953425e-07, 7.090000000431473e-07, 7.359999996126021e-07, 7.219999993424153e-07, 7.499999998827889e-07, 7.359999996126021e-07, 7.07999999960407e-07, 7.780000004231624e-07, 7.07999999960407e-07, 6.939999996902202e-07, 7.359999996126021e-07, 7.370000005835209e-07, 7.220000002305937e-07, 6.939999996902202e-07, 7.230000003133341e-07, 7.230000003133341e-07, 7.220000002305937e-07, 7.370000005835209e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.07999999960407e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.499999998827889e-07, 7.220000002305937e-07, 7.369999996953425e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.369999996953425e-07, 7.219999993424153e-07, 7.090000000431473e-07, 7.359999996126021e-07, 7.229999994251557e-07, 7.229999994251557e-07, 7.369999996953425e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.370000005835209e-07, 7.220000002305937e-07, 7.219999993424153e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.090000000431473e-07, 7.219999993424153e-07]</msg>
<status status="PASS" starttime="20201029 12:45:46.789" endtime="20201029 12:45:46.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.782" endtime="20201029 12:45:46.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.400" endtime="20201029 12:45:46.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.400" endtime="20201029 12:45:46.794"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.802" endtime="20201029 12:45:46.813"></status>
</kw>
<msg timestamp="20201029 12:45:46.814" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:46.800" endtime="20201029 12:45:46.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.816" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:46.815" endtime="20201029 12:45:46.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.817" endtime="20201029 12:45:46.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.797" endtime="20201029 12:45:46.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.796" endtime="20201029 12:45:46.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.826" endtime="20201029 12:45:47.162"></status>
</kw>
<msg timestamp="20201029 12:45:47.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.257737694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.257738403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:46.824" endtime="20201029 12:45:47.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.257737694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.257738403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:47.166" endtime="20201029 12:45:47.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.177" endtime="20201029 12:45:47.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.822" endtime="20201029 12:45:47.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.820" endtime="20201029 12:45:47.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:47.183" level="INFO">${RESULT} = [{'diff': 7.090000000431473e-07}, {'diff': 7.359999996126021e-07}, {'diff': 7.229999994251557e-07}, {'diff': 7.229999994251557e-07}, {'diff': 7.369999996953425e-07}, {'diff': 7.360000005007805e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:45:47.180" endtime="20201029 12:45:47.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:47.189" level="INFO">${OVERHEAD} = {'diff': [7.090000000431473e-07, 7.359999996126021e-07, 7.229999994251557e-07, 7.229999994251557e-07, 7.369999996953425e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.370000005835209e-07, 7.2200...</msg>
<status status="PASS" starttime="20201029 12:45:47.184" endtime="20201029 12:45:47.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.193" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:47.192" endtime="20201029 12:45:47.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.195" level="INFO">VALUE: [7.090000000431473e-07, 7.359999996126021e-07, 7.229999994251557e-07, 7.229999994251557e-07, 7.369999996953425e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.370000005835209e-07, 7.220000002305937e-07, 7.219999993424153e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.090000000431473e-07, 7.219999993424153e-07, 1.069000000519793e-06, 7.220000002305937e-07, 7.07999999960407e-07, 7.090000000431473e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.499999998827889e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.369999996953425e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.219999993424153e-07, 7.220000002305937e-07, 6.940000005783986e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.090000000431473e-07, 7.369999996953425e-07, 7.499999998827889e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.229999994251557e-07, 7.230000003133341e-07, 7.499999998827889e-07, 7.229999994251557e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.219999993424153e-07, 7.359999996126021e-07, 7.07999999960407e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.500000007709673e-07, 7.360000005007805e-07, 7.219999993424153e-07]</msg>
<status status="PASS" starttime="20201029 12:45:47.194" endtime="20201029 12:45:47.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.190" endtime="20201029 12:45:47.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.795" endtime="20201029 12:45:47.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.794" endtime="20201029 12:45:47.197"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.204" endtime="20201029 12:45:47.217"></status>
</kw>
<msg timestamp="20201029 12:45:47.217" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:47.203" endtime="20201029 12:45:47.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.220" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:47.218" endtime="20201029 12:45:47.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.221" endtime="20201029 12:45:47.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.200" endtime="20201029 12:45:47.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.199" endtime="20201029 12:45:47.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.230" endtime="20201029 12:45:47.544"></status>
</kw>
<msg timestamp="20201029 12:45:47.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.642742194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.642742917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:47.228" endtime="20201029 12:45:47.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.642742194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.642742917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:47.550" endtime="20201029 12:45:47.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.560" endtime="20201029 12:45:47.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.225" endtime="20201029 12:45:47.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.224" endtime="20201029 12:45:47.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:47.566" level="INFO">${RESULT} = [{'diff': 7.229999994251557e-07}, {'diff': 7.230000003133341e-07}, {'diff': 7.499999998827889e-07}, {'diff': 7.229999994251557e-07}, {'diff': 7.220000002305937e-07}, {'diff': 7.220000002305937e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:45:47.563" endtime="20201029 12:45:47.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:47.572" level="INFO">${OVERHEAD} = {'diff': [7.229999994251557e-07, 7.230000003133341e-07, 7.499999998827889e-07, 7.229999994251557e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.219999993424153e-07, 7.359999996126021e-07, 7.0799...</msg>
<status status="PASS" starttime="20201029 12:45:47.567" endtime="20201029 12:45:47.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.576" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:47.575" endtime="20201029 12:45:47.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.578" level="INFO">VALUE: [7.229999994251557e-07, 7.230000003133341e-07, 7.499999998827889e-07, 7.229999994251557e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.219999993424153e-07, 7.359999996126021e-07, 7.07999999960407e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.500000007709673e-07, 7.360000005007805e-07, 7.219999993424153e-07, 1.0970000001719882e-06, 7.910000006106088e-07, 7.359999996126021e-07, 7.230000003133341e-07, 7.07999999960407e-07, 7.220000002305937e-07, 7.07999999960407e-07, 7.220000002305937e-07, 7.219999993424153e-07, 7.220000002305937e-07, 8.199999994573659e-07, 7.360000005007805e-07, 7.229999994251557e-07, 7.360000005007805e-07, 7.219999993424153e-07, 7.220000002305937e-07, 7.359999996126021e-07, 6.799999994200334e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.370000005835209e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.360000005007805e-07, 6.810000003909522e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.499999998827889e-07, 7.219999993424153e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.360000005007805e-07, 6.940000005783986e-07, 7.07999999960407e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.359999996126021e-07]</msg>
<status status="PASS" starttime="20201029 12:45:47.577" endtime="20201029 12:45:47.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.573" endtime="20201029 12:45:47.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.198" endtime="20201029 12:45:47.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.197" endtime="20201029 12:45:47.580"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.588" endtime="20201029 12:45:47.599"></status>
</kw>
<msg timestamp="20201029 12:45:47.599" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:47.586" endtime="20201029 12:45:47.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.602" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:47.600" endtime="20201029 12:45:47.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.603" endtime="20201029 12:45:47.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.583" endtime="20201029 12:45:47.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.582" endtime="20201029 12:45:47.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.611" endtime="20201029 12:45:47.917"></status>
</kw>
<msg timestamp="20201029 12:45:47.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.033725375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.033726111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:47.610" endtime="20201029 12:45:47.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.033725375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.033726111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:47.927" endtime="20201029 12:45:47.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.937" endtime="20201029 12:45:47.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.607" endtime="20201029 12:45:47.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.606" endtime="20201029 12:45:47.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:47.943" level="INFO">${RESULT} = [{'diff': 7.359999996126021e-07}, {'diff': 7.220000002305937e-07}, {'diff': 7.360000005007805e-07}, {'diff': 7.359999996126021e-07}, {'diff': 7.499999998827889e-07}, {'diff': 7.219999993424153e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:45:47.940" endtime="20201029 12:45:47.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:47.948" level="INFO">${OVERHEAD} = {'diff': [7.359999996126021e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.499999998827889e-07, 7.219999993424153e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.3600...</msg>
<status status="PASS" starttime="20201029 12:45:47.944" endtime="20201029 12:45:47.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.952" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:47.951" endtime="20201029 12:45:47.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.955" level="INFO">VALUE: [7.359999996126021e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.499999998827889e-07, 7.219999993424153e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.360000005007805e-07, 6.940000005783986e-07, 7.07999999960407e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.359999996126021e-07, 1.0689999996316146e-06, 7.359999996126021e-07, 7.07999999960407e-07, 7.220000002305937e-07, 7.77999999534984e-07, 7.220000002305937e-07, 7.07999999960407e-07, 7.220000002305937e-07, 7.499999998827889e-07, 7.07999999960407e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.07999999960407e-07, 8.200000003455443e-07, 7.230000003133341e-07, 7.220000002305937e-07, 7.499999998827889e-07, 7.219999993424153e-07, 6.529999998505787e-07, 7.499999998827889e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.360000005007805e-07, 6.810000003909522e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.219999993424153e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.369999996953425e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.07999999960407e-07, 7.230000003133341e-07, 7.220000002305937e-07]</msg>
<status status="PASS" starttime="20201029 12:45:47.953" endtime="20201029 12:45:47.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.949" endtime="20201029 12:45:47.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.581" endtime="20201029 12:45:47.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.580" endtime="20201029 12:45:47.956"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.965" endtime="20201029 12:45:47.976"></status>
</kw>
<msg timestamp="20201029 12:45:47.977" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:47.964" endtime="20201029 12:45:47.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.979" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:47.978" endtime="20201029 12:45:47.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.980" endtime="20201029 12:45:47.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.960" endtime="20201029 12:45:47.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.958" endtime="20201029 12:45:47.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.989" endtime="20201029 12:45:48.299"></status>
</kw>
<msg timestamp="20201029 12:45:48.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.407767306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.407768042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:47.988" endtime="20201029 12:45:48.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.407767306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.407768042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:48.304" endtime="20201029 12:45:48.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.314" endtime="20201029 12:45:48.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.985" endtime="20201029 12:45:48.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.983" endtime="20201029 12:45:48.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:48.321" level="INFO">${RESULT} = [{'diff': 7.359999996126021e-07}, {'diff': 7.359999996126021e-07}, {'diff': 7.359999996126021e-07}, {'diff': 7.360000005007805e-07}, {'diff': 7.359999996126021e-07}, {'diff': 7.360000005007805e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:45:48.317" endtime="20201029 12:45:48.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:48.326" level="INFO">${OVERHEAD} = {'diff': [7.359999996126021e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.369999996953425e-07, 7.2200...</msg>
<status status="PASS" starttime="20201029 12:45:48.322" endtime="20201029 12:45:48.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.330" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:48.329" endtime="20201029 12:45:48.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.333" level="INFO">VALUE: [7.359999996126021e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.369999996953425e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.07999999960407e-07, 7.230000003133341e-07, 7.220000002305937e-07, 1.0970000001719882e-06, 7.220000002305937e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.77999999534984e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.07999999960407e-07, 6.949999997729606e-07, 7.780000004231624e-07, 7.359999996126021e-07, 7.219999993424153e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.230000003133341e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.360000005007805e-07, 6.940000005783986e-07, 7.229999994251557e-07, 7.370000005835209e-07, 7.219999993424153e-07, 7.220000002305937e-07, 7.219999993424153e-07, 7.369999996953425e-07, 6.66999999232587e-07, 6.799999994200334e-07, 7.220000002305937e-07, 7.360000005007805e-07, 6.810000003909522e-07, 7.499999998827889e-07, 7.359999996126021e-07, 7.090000000431473e-07, 6.949999997729606e-07, 6.809999995027738e-07, 7.780000004231624e-07, 7.220000002305937e-07, 7.230000003133341e-07, 7.229999994251557e-07, 7.499999998827889e-07, 7.360000005007805e-07, 7.090000000431473e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.219999993424153e-07]</msg>
<status status="PASS" starttime="20201029 12:45:48.331" endtime="20201029 12:45:48.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.327" endtime="20201029 12:45:48.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.957" endtime="20201029 12:45:48.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.956" endtime="20201029 12:45:48.334"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.342" endtime="20201029 12:45:48.352"></status>
</kw>
<msg timestamp="20201029 12:45:48.353" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:48.340" endtime="20201029 12:45:48.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.355" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:48.354" endtime="20201029 12:45:48.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.356" endtime="20201029 12:45:48.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.338" endtime="20201029 12:45:48.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.336" endtime="20201029 12:45:48.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.365" endtime="20201029 12:45:48.677"></status>
</kw>
<msg timestamp="20201029 12:45:48.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.776570236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.776570972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:48.364" endtime="20201029 12:45:48.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.776570236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.776570972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:48.682" endtime="20201029 12:45:48.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.692" endtime="20201029 12:45:48.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.361" endtime="20201029 12:45:48.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.359" endtime="20201029 12:45:48.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:48.699" level="INFO">${RESULT} = [{'diff': 7.359999996126021e-07}, {'diff': 7.090000000431473e-07}, {'diff': 6.949999997729606e-07}, {'diff': 6.809999995027738e-07}, {'diff': 7.780000004231624e-07}, {'diff': 7.220000002305937e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:45:48.695" endtime="20201029 12:45:48.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:48.704" level="INFO">${OVERHEAD} = {'diff': [7.359999996126021e-07, 7.090000000431473e-07, 6.949999997729606e-07, 6.809999995027738e-07, 7.780000004231624e-07, 7.220000002305937e-07, 7.230000003133341e-07, 7.229999994251557e-07, 7.4999...</msg>
<status status="PASS" starttime="20201029 12:45:48.700" endtime="20201029 12:45:48.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.709" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:48.708" endtime="20201029 12:45:48.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.711" level="INFO">VALUE: [7.359999996126021e-07, 7.090000000431473e-07, 6.949999997729606e-07, 6.809999995027738e-07, 7.780000004231624e-07, 7.220000002305937e-07, 7.230000003133341e-07, 7.229999994251557e-07, 7.499999998827889e-07, 7.360000005007805e-07, 7.090000000431473e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.219999993424153e-07, 1.0839999999845418e-06, 6.529999998505787e-07, 7.220000002305937e-07, 7.499999998827889e-07, 7.220000002305937e-07, 7.229999994251557e-07, 7.369999996953425e-07, 7.780000004231624e-07, 7.220000002305937e-07, 7.500000007709673e-07, 7.499999998827889e-07, 6.939999996902202e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.219999993424153e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.369999996953425e-07, 7.219999993424153e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.369999996953425e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.219999993424153e-07, 7.359999996126021e-07, 7.499999998827889e-07, 7.229999994251557e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.219999993424153e-07, 7.219999993424153e-07, 7.220000002305937e-07]</msg>
<status status="PASS" starttime="20201029 12:45:48.710" endtime="20201029 12:45:48.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.705" endtime="20201029 12:45:48.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.335" endtime="20201029 12:45:48.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.335" endtime="20201029 12:45:48.713"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.720" endtime="20201029 12:45:48.731"></status>
</kw>
<msg timestamp="20201029 12:45:48.731" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:48.719" endtime="20201029 12:45:48.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.734" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:48.732" endtime="20201029 12:45:48.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.735" endtime="20201029 12:45:48.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.716" endtime="20201029 12:45:48.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.715" endtime="20201029 12:45:48.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.745" endtime="20201029 12:45:49.067"></status>
</kw>
<msg timestamp="20201029 12:45:49.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.143864833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.143865569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:48.743" endtime="20201029 12:45:49.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.143864833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.143865569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:49.072" endtime="20201029 12:45:49.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.081" endtime="20201029 12:45:49.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.740" endtime="20201029 12:45:49.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.738" endtime="20201029 12:45:49.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:49.088" level="INFO">${RESULT} = [{'diff': 7.359999996126021e-07}, {'diff': 7.360000005007805e-07}, {'diff': 7.359999996126021e-07}, {'diff': 7.359999996126021e-07}, {'diff': 7.219999993424153e-07}, {'diff': 7.359999996126021e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:45:49.085" endtime="20201029 12:45:49.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:49.093" level="INFO">${OVERHEAD} = {'diff': [7.359999996126021e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.219999993424153e-07, 7.359999996126021e-07, 7.499999998827889e-07, 7.229999994251557e-07, 7.3599...</msg>
<status status="PASS" starttime="20201029 12:45:49.089" endtime="20201029 12:45:49.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.097" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:49.096" endtime="20201029 12:45:49.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.100" level="INFO">VALUE: [7.359999996126021e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.219999993424153e-07, 7.359999996126021e-07, 7.499999998827889e-07, 7.229999994251557e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.219999993424153e-07, 7.219999993424153e-07, 7.220000002305937e-07, 1.0829999999018014e-06, 7.220000002305937e-07, 7.07999999960407e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.369999996953425e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.370000005835209e-07, 7.07999999960407e-07, 6.529999998505787e-07, 7.229999994251557e-07, 7.370000005835209e-07, 7.220000002305937e-07, 6.800000003082118e-07, 7.359999996126021e-07, 6.95000000661139e-07, 7.219999993424153e-07, 7.360000005007805e-07, 7.229999994251557e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.219999993424153e-07, 7.220000002305937e-07, 7.07999999960407e-07, 7.360000005007805e-07, 7.359999996126021e-07, 6.940000005783986e-07, 7.229999994251557e-07, 6.800000003082118e-07, 7.219999993424153e-07, 7.220000002305937e-07, 7.07999999960407e-07, 7.219999993424153e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.219999993424153e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.219999993424153e-07, 7.919999998051708e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.360000005007805e-07, 6.939999996902202e-07]</msg>
<status status="PASS" starttime="20201029 12:45:49.098" endtime="20201029 12:45:49.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.094" endtime="20201029 12:45:49.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.713" endtime="20201029 12:45:49.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.713" endtime="20201029 12:45:49.102"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.110" endtime="20201029 12:45:49.121"></status>
</kw>
<msg timestamp="20201029 12:45:49.121" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:49.108" endtime="20201029 12:45:49.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.124" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:49.122" endtime="20201029 12:45:49.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.125" endtime="20201029 12:45:49.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.106" endtime="20201029 12:45:49.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.104" endtime="20201029 12:45:49.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.134" endtime="20201029 12:45:49.463"></status>
</kw>
<msg timestamp="20201029 12:45:49.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.5123765, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.512377222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:45:49.133" endtime="20201029 12:45:49.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.5123765, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.512377222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:45:49.468" endtime="20201029 12:45:49.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.478" endtime="20201029 12:45:49.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.130" endtime="20201029 12:45:49.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.128" endtime="20201029 12:45:49.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:49.484" level="INFO">${RESULT} = [{'diff': 7.219999993424153e-07}, {'diff': 7.359999996126021e-07}, {'diff': 7.360000005007805e-07}, {'diff': 7.219999993424153e-07}, {'diff': 7.220000002305937e-07}, {'diff': 7.220000002305937e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:45:49.481" endtime="20201029 12:45:49.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:49.490" level="INFO">${OVERHEAD} = {'diff': [7.219999993424153e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.219999993424153e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.2199...</msg>
<status status="PASS" starttime="20201029 12:45:49.485" endtime="20201029 12:45:49.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.494" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:49.493" endtime="20201029 12:45:49.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.496" level="INFO">VALUE: [7.219999993424153e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.219999993424153e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.219999993424153e-07, 7.919999998051708e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.360000005007805e-07, 6.939999996902202e-07, 1.1109999995539965e-06, 7.359999996126021e-07, 7.219999993424153e-07, 7.780000004231624e-07, 7.07999999960407e-07, 7.359999996126021e-07, 6.949999997729606e-07, 7.369999996953425e-07, 7.499999998827889e-07, 7.219999993424153e-07, 7.090000000431473e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.219999993424153e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.370000005835209e-07, 7.07999999960407e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.090000000431473e-07, 7.360000005007805e-07, 6.810000003909522e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.780000004231624e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.229999994251557e-07, 7.220000002305937e-07, 7.080000008485854e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.369999996953425e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.230000003133341e-07, 7.780000004231624e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.229999994251557e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.360000005007805e-07]</msg>
<status status="PASS" starttime="20201029 12:45:49.495" endtime="20201029 12:45:49.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.491" endtime="20201029 12:45:49.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.103" endtime="20201029 12:45:49.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.102" endtime="20201029 12:45:49.498"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.506" endtime="20201029 12:45:49.517"></status>
</kw>
<msg timestamp="20201029 12:45:49.517" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:49.504" endtime="20201029 12:45:49.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.520" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:49.518" endtime="20201029 12:45:49.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.521" endtime="20201029 12:45:49.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.502" endtime="20201029 12:45:49.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.500" endtime="20201029 12:45:49.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.530" endtime="20201029 12:45:49.843"></status>
</kw>
<msg timestamp="20201029 12:45:49.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.892262694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.892263431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:49.529" endtime="20201029 12:45:49.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.892262694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.892263431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:49.848" endtime="20201029 12:45:49.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.858" endtime="20201029 12:45:49.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.526" endtime="20201029 12:45:49.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.524" endtime="20201029 12:45:49.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:49.865" level="INFO">${RESULT} = [{'diff': 7.369999996953425e-07}, {'diff': 7.359999996126021e-07}, {'diff': 7.220000002305937e-07}, {'diff': 7.230000003133341e-07}, {'diff': 7.780000004231624e-07}, {'diff': 7.359999996126021e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:45:49.862" endtime="20201029 12:45:49.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:49.870" level="INFO">${OVERHEAD} = {'diff': [7.369999996953425e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.230000003133341e-07, 7.780000004231624e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.229999994251557e-07, 7.3599...</msg>
<status status="PASS" starttime="20201029 12:45:49.866" endtime="20201029 12:45:49.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.874" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:49.873" endtime="20201029 12:45:49.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.876" level="INFO">VALUE: [7.369999996953425e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.230000003133341e-07, 7.780000004231624e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.229999994251557e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.360000005007805e-07, 1.0280000006801515e-06, 6.810000003909522e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.07999999960407e-07, 7.219999993424153e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.359999996126021e-07, 6.529999998505787e-07, 7.640000001529756e-07, 7.219999993424153e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.219999993424153e-07, 7.07999999960407e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.500000007709673e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.370000005835209e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.369999996953425e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.07999999960407e-07, 7.07999999960407e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.230000003133341e-07, 7.360000005007805e-07, 7.230000003133341e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.229999994251557e-07, 6.949999997729606e-07, 7.220000002305937e-07, 7.229999994251557e-07, 7.360000005007805e-07, 7.220000002305937e-07]</msg>
<status status="PASS" starttime="20201029 12:45:49.875" endtime="20201029 12:45:49.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.871" endtime="20201029 12:45:49.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.499" endtime="20201029 12:45:49.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.498" endtime="20201029 12:45:49.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.099" endtime="20201029 12:45:49.878"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:42.029" endtime="20201029 12:45:49.879" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:49.885" endtime="20201029 12:45:49.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.884" endtime="20201029 12:45:49.905"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.922" endtime="20201029 12:45:49.935"></status>
</kw>
<msg timestamp="20201029 12:45:49.936" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:49.920" endtime="20201029 12:45:49.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.938" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:49.937" endtime="20201029 12:45:49.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.941" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:49.940" endtime="20201029 12:45:49.942"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:49.917" endtime="20201029 12:45:49.942"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:49.915" endtime="20201029 12:45:49.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.913" endtime="20201029 12:45:49.943"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:49.947" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:49.946" endtime="20201029 12:45:49.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.944" endtime="20201029 12:45:49.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.913" endtime="20201029 12:45:49.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.912" endtime="20201029 12:45:49.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.949" endtime="20201029 12:45:49.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.908" endtime="20201029 12:45:49.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.906" endtime="20201029 12:45:49.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.883" endtime="20201029 12:45:49.951"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.960" endtime="20201029 12:45:49.979"></status>
</kw>
<msg timestamp="20201029 12:45:49.980" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:49.958" endtime="20201029 12:45:49.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.982" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:49.981" endtime="20201029 12:45:49.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.983" endtime="20201029 12:45:49.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.955" endtime="20201029 12:45:49.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.953" endtime="20201029 12:45:49.986"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.988" endtime="20201029 12:45:49.989"></status>
</kw>
<msg timestamp="20201029 12:45:49.990" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:45:49.986" endtime="20201029 12:45:49.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.994" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:45:49.993" endtime="20201029 12:45:49.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.998" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:45:49.996" endtime="20201029 12:45:49.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.991" endtime="20201029 12:45:49.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.003" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:45:50.002" endtime="20201029 12:45:50.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.006" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:45:50.004" endtime="20201029 12:45:50.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.000" endtime="20201029 12:45:50.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.014" endtime="20201029 12:45:50.303"></status>
</kw>
<msg timestamp="20201029 12:45:50.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067141292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067145694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:50.012" endtime="20201029 12:45:50.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067141292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067145694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:50.308" endtime="20201029 12:45:50.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.317" endtime="20201029 12:45:50.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.009" endtime="20201029 12:45:50.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.008" endtime="20201029 12:45:50.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:50.324" level="INFO">${RESULT} = [{'diff': 4.402000000000572e-06}, {'diff': 3.7500000000106892e-06}, {'diff': 3.3200000000011e-06}, {'diff': 2.986999999995965e-06}, {'diff': 3.2229999999966452e-06}, {'diff': 3.0000000000030003e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:45:50.321" endtime="20201029 12:45:50.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:50.328" level="INFO">${OVERHEAD} = {'diff': [4.402000000000572e-06, 3.7500000000106892e-06, 3.3200000000011e-06, 2.986999999995965e-06, 3.2229999999966452e-06, 3.0000000000030003e-06, 3.333999999993731e-06, 2.9859999999964915e-06, 3.27...</msg>
<status status="PASS" starttime="20201029 12:45:50.325" endtime="20201029 12:45:50.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.333" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 12:45:50.332" endtime="20201029 12:45:50.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.336" level="INFO">VALUE: [4.402000000000572e-06, 3.7500000000106892e-06, 3.3200000000011e-06, 2.986999999995965e-06, 3.2229999999966452e-06, 3.0000000000030003e-06, 3.333999999993731e-06, 2.9859999999964915e-06, 3.2769999999959776e-06, 2.9859999999964915e-06, 3.26400000000282e-06, 2.9859999999964915e-06, 3.305999999994591e-06, 2.987000000009843e-06, 3.26400000000282e-06, 3.0000000000030003e-06, 3.3049999999951174e-06, 2.9720000000038604e-06, 3.3049999999951174e-06, 2.9449999999903165e-06, 3.3480000000002397e-06, 2.9579999999973516e-06, 3.3049999999951174e-06, 3.0000000000030003e-06, 3.2910000000024864e-06, 2.9450000000041943e-06, 3.319999999987222e-06, 2.9579999999973516e-06, 3.2909999999886086e-06, 2.9859999999964915e-06, 3.319000000001626e-06, 2.9720000000038604e-06, 3.3049999999951174e-06, 2.987000000009843e-06, 3.305999999994591e-06, 2.9720000000038604e-06, 3.305000000008995e-06, 2.9720000000038604e-06, 3.361000000007275e-06, 2.9860000000103692e-06, 3.319000000001626e-06, 2.9859999999964915e-06, 3.305999999994591e-06, 2.9859999999964915e-06, 3.3329999999942572e-06, 2.9719999999899827e-06, 3.3049999999951174e-06, 2.9859999999964915e-06, 3.3329999999942572e-06, 3.0000000000030003e-06]</msg>
<status status="PASS" starttime="20201029 12:45:50.334" endtime="20201029 12:45:50.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.329" endtime="20201029 12:45:50.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.952" endtime="20201029 12:45:50.337"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:49.880" endtime="20201029 12:45:50.338" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:50.344" endtime="20201029 12:45:50.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.343" endtime="20201029 12:45:50.364"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.377" endtime="20201029 12:45:50.392"></status>
</kw>
<msg timestamp="20201029 12:45:50.392" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.376" endtime="20201029 12:45:50.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.395" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.393" endtime="20201029 12:45:50.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.398" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:50.396" endtime="20201029 12:45:50.398"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:50.373" endtime="20201029 12:45:50.399"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:50.371" endtime="20201029 12:45:50.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.370" endtime="20201029 12:45:50.400"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:50.403" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:50.403" endtime="20201029 12:45:50.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.400" endtime="20201029 12:45:50.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.369" endtime="20201029 12:45:50.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.368" endtime="20201029 12:45:50.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.405" endtime="20201029 12:45:50.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.367" endtime="20201029 12:45:50.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.365" endtime="20201029 12:45:50.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.342" endtime="20201029 12:45:50.408"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.428" endtime="20201029 12:45:50.455"></status>
</kw>
<msg timestamp="20201029 12:45:50.456" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.421" endtime="20201029 12:45:50.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.458" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.457" endtime="20201029 12:45:50.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.459" endtime="20201029 12:45:50.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.415" endtime="20201029 12:45:50.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.413" endtime="20201029 12:45:50.462"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.464" endtime="20201029 12:45:50.466"></status>
</kw>
<msg timestamp="20201029 12:45:50.466" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:45:50.463" endtime="20201029 12:45:50.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.470" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:45:50.469" endtime="20201029 12:45:50.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.472" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:45:50.471" endtime="20201029 12:45:50.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.467" endtime="20201029 12:45:50.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.477" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:45:50.476" endtime="20201029 12:45:50.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.479" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:45:50.478" endtime="20201029 12:45:50.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.474" endtime="20201029 12:45:50.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.487" endtime="20201029 12:45:50.775"></status>
</kw>
<msg timestamp="20201029 12:45:50.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076803986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076806958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:50.485" endtime="20201029 12:45:50.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076803986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076806958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:50.780" endtime="20201029 12:45:50.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.788" endtime="20201029 12:45:50.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.483" endtime="20201029 12:45:50.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.481" endtime="20201029 12:45:50.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:50.794" level="INFO">${RESULT} = [{'diff': 2.9719999999899827e-06}, {'diff': 4.457999999998852e-06}, {'diff': 4.485999999997992e-06}, {'diff': 4.319999999988222e-06}, {'diff': 4.3620000000077486e-06}, {'diff': 4.319000000002626e-06},...</msg>
<status status="PASS" starttime="20201029 12:45:50.791" endtime="20201029 12:45:50.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:50.799" level="INFO">${OVERHEAD} = {'diff': [2.9719999999899827e-06, 4.457999999998852e-06, 4.485999999997992e-06, 4.319999999988222e-06, 4.3620000000077486e-06, 4.319000000002626e-06, 4.375000000000906e-06, 4.29200000000296e-06, 4.318...</msg>
<status status="PASS" starttime="20201029 12:45:50.795" endtime="20201029 12:45:50.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.804" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 12:45:50.803" endtime="20201029 12:45:50.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.806" level="INFO">VALUE: [2.9719999999899827e-06, 4.457999999998852e-06, 4.485999999997992e-06, 4.319999999988222e-06, 4.3620000000077486e-06, 4.319000000002626e-06, 4.375000000000906e-06, 4.29200000000296e-06, 4.3189999999887485e-06, 4.332999999995257e-06, 4.361000000008275e-06, 4.346999999987888e-06, 4.347000000001766e-06, 4.29200000000296e-06, 4.347000000001766e-06, 4.389000000007415e-06, 4.361000000008275e-06, 4.361000000008275e-06, 4.347000000001766e-06, 4.333000000009135e-06, 4.360999999994397e-06, 4.3620000000077486e-06, 4.360999999994397e-06, 4.346999999987888e-06, 4.375000000000906e-06, 4.346999999987888e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.360999999994397e-06, 4.333000000009135e-06, 4.347000000001766e-06, 4.360999999994397e-06, 4.361000000008275e-06, 4.332999999995257e-06, 4.361000000008275e-06, 4.3049999999961175e-06, 4.361000000008275e-06, 4.3200000000021e-06, 4.361000000008275e-06, 4.375000000000906e-06, 4.360999999994397e-06, 4.361000000008275e-06, 4.360999999994397e-06, 4.334000000008609e-06, 4.347000000001766e-06, 4.347000000001766e-06, 4.347000000001766e-06, 4.34800000000124e-06, 4.375000000000906e-06, 4.332999999995257e-06]</msg>
<status status="PASS" starttime="20201029 12:45:50.805" endtime="20201029 12:45:50.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.800" endtime="20201029 12:45:50.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.410" endtime="20201029 12:45:50.808"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:50.339" endtime="20201029 12:45:50.808" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:50.815" endtime="20201029 12:45:50.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.814" endtime="20201029 12:45:50.835"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.848" endtime="20201029 12:45:50.861"></status>
</kw>
<msg timestamp="20201029 12:45:50.862" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.846" endtime="20201029 12:45:50.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.865" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.864" endtime="20201029 12:45:50.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.868" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:50.866" endtime="20201029 12:45:50.868"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:50.844" endtime="20201029 12:45:50.869"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:50.842" endtime="20201029 12:45:50.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.840" endtime="20201029 12:45:50.870"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:50.873" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:50.873" endtime="20201029 12:45:50.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.871" endtime="20201029 12:45:50.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.840" endtime="20201029 12:45:50.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.839" endtime="20201029 12:45:50.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.876" endtime="20201029 12:45:50.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.838" endtime="20201029 12:45:50.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.836" endtime="20201029 12:45:50.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.812" endtime="20201029 12:45:50.879"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.887" endtime="20201029 12:45:50.924"></status>
</kw>
<msg timestamp="20201029 12:45:50.924" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.886" endtime="20201029 12:45:50.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.927" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.925" endtime="20201029 12:45:50.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.928" endtime="20201029 12:45:50.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.883" endtime="20201029 12:45:50.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.881" endtime="20201029 12:45:50.931"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.933" endtime="20201029 12:45:50.934"></status>
</kw>
<msg timestamp="20201029 12:45:50.935" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:45:50.931" endtime="20201029 12:45:50.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.939" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:45:50.938" endtime="20201029 12:45:50.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.941" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:45:50.940" endtime="20201029 12:45:50.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.935" endtime="20201029 12:45:50.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.945" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:45:50.944" endtime="20201029 12:45:50.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.947" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:45:50.946" endtime="20201029 12:45:50.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.942" endtime="20201029 12:45:50.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.955" endtime="20201029 12:45:51.242"></status>
</kw>
<msg timestamp="20201029 12:45:51.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064023486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064027917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:50.954" endtime="20201029 12:45:51.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064023486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064027917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:51.246" endtime="20201029 12:45:51.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.254" endtime="20201029 12:45:51.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.951" endtime="20201029 12:45:51.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.949" endtime="20201029 12:45:51.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:51.261" level="INFO">${RESULT} = [{'diff': 4.430999999999186e-06}, {'diff': 6.513999999999132e-06}, {'diff': 6.583000000004446e-06}, {'diff': 6.458000000000852e-06}, {'diff': 6.458000000000852e-06}, {'diff': 6.416999999994677e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:45:51.257" endtime="20201029 12:45:51.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:51.266" level="INFO">${OVERHEAD} = {'diff': [4.430999999999186e-06, 6.513999999999132e-06, 6.583000000004446e-06, 6.458000000000852e-06, 6.458000000000852e-06, 6.416999999994677e-06, 6.458000000000852e-06, 6.430999999987308e-06, 6.5139...</msg>
<status status="PASS" starttime="20201029 12:45:51.262" endtime="20201029 12:45:51.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.270" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 12:45:51.269" endtime="20201029 12:45:51.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.273" level="INFO">VALUE: [4.430999999999186e-06, 6.513999999999132e-06, 6.583000000004446e-06, 6.458000000000852e-06, 6.458000000000852e-06, 6.416999999994677e-06, 6.458000000000852e-06, 6.430999999987308e-06, 6.513999999999132e-06, 6.431000000001186e-06, 6.443999999994343e-06, 6.430000000001712e-06, 6.472000000007361e-06, 6.431000000001186e-06, 6.443999999994343e-06, 6.431000000001186e-06, 6.429999999987834e-06, 6.333000000011135e-06, 6.471999999993483e-06, 6.443999999994343e-06, 6.429999999987834e-06, 6.360999999996397e-06, 6.459000000000326e-06, 6.458000000000852e-06, 6.416999999994677e-06, 6.347000000003766e-06, 6.458000000000852e-06, 6.444000000008221e-06, 6.403000000002046e-06, 6.3329999999972575e-06, 6.458999999986448e-06, 6.444999999993817e-06, 6.416999999994677e-06, 6.2919999999910825e-06, 6.458000000000852e-06, 6.416999999994677e-06, 6.513999999999132e-06, 6.360999999996397e-06, 6.417000000008555e-06, 6.416999999994677e-06, 6.417000000008555e-06, 6.3329999999972575e-06, 6.458000000000852e-06, 6.444000000008221e-06, 6.416999999994677e-06, 6.360999999996397e-06, 6.443999999994343e-06, 6.443999999994343e-06, 6.458000000000852e-06, 6.347000000003766e-06]</msg>
<status status="PASS" starttime="20201029 12:45:51.271" endtime="20201029 12:45:51.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.267" endtime="20201029 12:45:51.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.880" endtime="20201029 12:45:51.274"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:50.810" endtime="20201029 12:45:51.275" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:51.281" endtime="20201029 12:45:51.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.280" endtime="20201029 12:45:51.301"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.315" endtime="20201029 12:45:51.330"></status>
</kw>
<msg timestamp="20201029 12:45:51.331" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:51.314" endtime="20201029 12:45:51.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.335" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:51.332" endtime="20201029 12:45:51.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.339" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:51.336" endtime="20201029 12:45:51.340"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:51.310" endtime="20201029 12:45:51.341"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:51.308" endtime="20201029 12:45:51.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.306" endtime="20201029 12:45:51.342"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:51.349" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:51.348" endtime="20201029 12:45:51.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.344" endtime="20201029 12:45:51.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.306" endtime="20201029 12:45:51.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.305" endtime="20201029 12:45:51.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.351" endtime="20201029 12:45:51.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.304" endtime="20201029 12:45:51.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.302" endtime="20201029 12:45:51.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.279" endtime="20201029 12:45:51.355"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.364" endtime="20201029 12:45:51.383"></status>
</kw>
<msg timestamp="20201029 12:45:51.383" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:51.362" endtime="20201029 12:45:51.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.386" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:51.384" endtime="20201029 12:45:51.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.387" endtime="20201029 12:45:51.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.359" endtime="20201029 12:45:51.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.357" endtime="20201029 12:45:51.390"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.392" endtime="20201029 12:45:51.393"></status>
</kw>
<msg timestamp="20201029 12:45:51.394" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:45:51.390" endtime="20201029 12:45:51.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.398" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:45:51.397" endtime="20201029 12:45:51.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.400" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:45:51.399" endtime="20201029 12:45:51.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.394" endtime="20201029 12:45:51.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.404" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:45:51.403" endtime="20201029 12:45:51.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.406" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:45:51.405" endtime="20201029 12:45:51.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.401" endtime="20201029 12:45:51.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.415" endtime="20201029 12:45:51.700"></status>
</kw>
<msg timestamp="20201029 12:45:51.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074684375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074687931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:51.413" endtime="20201029 12:45:51.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074684375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074687931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:51.704" endtime="20201029 12:45:51.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.713" endtime="20201029 12:45:51.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.410" endtime="20201029 12:45:51.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.408" endtime="20201029 12:45:51.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:51.720" level="INFO">${RESULT} = [{'diff': 3.55600000000178e-06}, {'diff': 3.05600000000128e-06}, {'diff': 3.05600000000128e-06}, {'diff': 3.0979999999930508e-06}, {'diff': 3.042000000008649e-06}, {'diff': 3.0550000000018063e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:51.716" endtime="20201029 12:45:51.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:51.724" level="INFO">${OVERHEAD} = {'diff': [3.55600000000178e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.0979999999930508e-06, 3.042000000008649e-06, 3.0550000000018063e-06, 3.0409999999952975e-06, 3.055999999987402e-06, 3.0420...</msg>
<status status="PASS" starttime="20201029 12:45:51.721" endtime="20201029 12:45:51.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.728" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 12:45:51.727" endtime="20201029 12:45:51.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.731" level="INFO">VALUE: [3.55600000000178e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.0979999999930508e-06, 3.042000000008649e-06, 3.0550000000018063e-06, 3.0409999999952975e-06, 3.055999999987402e-06, 3.042000000008649e-06, 3.041999999994771e-06, 3.02800000000214e-06, 3.05600000000128e-06, 3.0139999999956313e-06, 3.05600000000128e-06, 2.986999999995965e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.096999999993577e-06, 3.02800000000214e-06, 3.05600000000128e-06, 3.069999999993911e-06, 3.0139999999956313e-06, 3.05600000000128e-06, 3.0689999999944373e-06, 3.0129999999961576e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.041999999994771e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.02800000000214e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.0409999999952975e-06, 3.0270000000026664e-06, 3.0410000000091753e-06, 3.0549999999879285e-06, 3.0550000000018063e-06, 3.0700000000077887e-06, 3.0550000000018063e-06, 3.0700000000077887e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.042000000008649e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.05600000000128e-06]</msg>
<status status="PASS" starttime="20201029 12:45:51.729" endtime="20201029 12:45:51.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.725" endtime="20201029 12:45:51.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.356" endtime="20201029 12:45:51.732"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:51.276" endtime="20201029 12:45:51.733" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:51.739" endtime="20201029 12:45:51.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.738" endtime="20201029 12:45:51.759"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.773" endtime="20201029 12:45:51.787"></status>
</kw>
<msg timestamp="20201029 12:45:51.787" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:51.772" endtime="20201029 12:45:51.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.790" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:51.788" endtime="20201029 12:45:51.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.793" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:51.791" endtime="20201029 12:45:51.794"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:51.769" endtime="20201029 12:45:51.794"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:51.767" endtime="20201029 12:45:51.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.766" endtime="20201029 12:45:51.795"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:51.799" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:51.798" endtime="20201029 12:45:51.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.796" endtime="20201029 12:45:51.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.765" endtime="20201029 12:45:51.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.764" endtime="20201029 12:45:51.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.801" endtime="20201029 12:45:51.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.763" endtime="20201029 12:45:51.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.760" endtime="20201029 12:45:51.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.737" endtime="20201029 12:45:51.803"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.812" endtime="20201029 12:45:51.839"></status>
</kw>
<msg timestamp="20201029 12:45:51.839" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:51.810" endtime="20201029 12:45:51.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.842" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:51.840" endtime="20201029 12:45:51.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.843" endtime="20201029 12:45:51.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.808" endtime="20201029 12:45:51.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.805" endtime="20201029 12:45:51.845"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.847" endtime="20201029 12:45:51.850"></status>
</kw>
<msg timestamp="20201029 12:45:51.850" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:45:51.846" endtime="20201029 12:45:51.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.855" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:45:51.854" endtime="20201029 12:45:51.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.857" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:45:51.856" endtime="20201029 12:45:51.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.851" endtime="20201029 12:45:51.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.861" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:45:51.860" endtime="20201029 12:45:51.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.863" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:45:51.862" endtime="20201029 12:45:51.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.858" endtime="20201029 12:45:51.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.871" endtime="20201029 12:45:52.159"></status>
</kw>
<msg timestamp="20201029 12:45:52.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065379014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065383639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:51.869" endtime="20201029 12:45:52.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065379014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065383639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:52.163" endtime="20201029 12:45:52.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.171" endtime="20201029 12:45:52.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.867" endtime="20201029 12:45:52.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.865" endtime="20201029 12:45:52.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:52.178" level="INFO">${RESULT} = [{'diff': 4.624999999994217e-06}, {'diff': 4.403000000000046e-06}, {'diff': 4.333000000009135e-06}, {'diff': 4.333999999994731e-06}, {'diff': 4.332999999995257e-06}, {'diff': 4.334000000008609e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:45:52.175" endtime="20201029 12:45:52.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:52.183" level="INFO">${OVERHEAD} = {'diff': [4.624999999994217e-06, 4.403000000000046e-06, 4.333000000009135e-06, 4.333999999994731e-06, 4.332999999995257e-06, 4.334000000008609e-06, 4.3200000000021e-06, 4.347000000001766e-06, 4.320000...</msg>
<status status="PASS" starttime="20201029 12:45:52.179" endtime="20201029 12:45:52.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.187" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 12:45:52.186" endtime="20201029 12:45:52.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.190" level="INFO">VALUE: [4.624999999994217e-06, 4.403000000000046e-06, 4.333000000009135e-06, 4.333999999994731e-06, 4.332999999995257e-06, 4.334000000008609e-06, 4.3200000000021e-06, 4.347000000001766e-06, 4.3200000000021e-06, 4.333000000009135e-06, 4.334000000008609e-06, 4.347000000001766e-06, 4.319000000002626e-06, 4.3200000000021e-06, 4.319000000002626e-06, 4.347000000001766e-06, 4.26400000000382e-06, 4.305999999995591e-06, 4.29200000000296e-06, 4.3200000000021e-06, 4.332999999995257e-06, 4.278000000010329e-06, 4.3049999999961175e-06, 4.26400000000382e-06, 4.346999999987888e-06, 4.333999999994731e-06, 4.34800000000124e-06, 4.3049999999961175e-06, 4.319000000002626e-06, 4.332999999995257e-06, 4.347000000001766e-06, 4.332999999995257e-06, 4.34800000000124e-06, 4.360999999994397e-06, 4.333999999994731e-06, 4.361000000008275e-06, 4.277999999996451e-06, 4.319000000002626e-06, 4.347999999987362e-06, 4.2499999999973115e-06, 4.332999999995257e-06, 4.319999999988222e-06, 4.2910000000034865e-06, 4.291999999989082e-06, 4.332999999995257e-06, 4.375000000000906e-06, 4.3189999999887485e-06, 4.333999999994731e-06, 4.319000000002626e-06, 4.3189999999887485e-06]</msg>
<status status="PASS" starttime="20201029 12:45:52.188" endtime="20201029 12:45:52.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.184" endtime="20201029 12:45:52.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.804" endtime="20201029 12:45:52.191"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:51.734" endtime="20201029 12:45:52.192" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:52.199" endtime="20201029 12:45:52.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.197" endtime="20201029 12:45:52.218"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.231" endtime="20201029 12:45:52.246"></status>
</kw>
<msg timestamp="20201029 12:45:52.246" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:52.230" endtime="20201029 12:45:52.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.250" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:52.248" endtime="20201029 12:45:52.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.254" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:52.252" endtime="20201029 12:45:52.254"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:52.227" endtime="20201029 12:45:52.255"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:52.225" endtime="20201029 12:45:52.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.224" endtime="20201029 12:45:52.257"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:52.263" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:52.261" endtime="20201029 12:45:52.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.258" endtime="20201029 12:45:52.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.223" endtime="20201029 12:45:52.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.222" endtime="20201029 12:45:52.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.266" endtime="20201029 12:45:52.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.221" endtime="20201029 12:45:52.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.219" endtime="20201029 12:45:52.270"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.196" endtime="20201029 12:45:52.270"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.283" endtime="20201029 12:45:52.322"></status>
</kw>
<msg timestamp="20201029 12:45:52.322" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:52.281" endtime="20201029 12:45:52.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.325" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:52.323" endtime="20201029 12:45:52.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.326" endtime="20201029 12:45:52.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.278" endtime="20201029 12:45:52.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.273" endtime="20201029 12:45:52.328"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.330" endtime="20201029 12:45:52.332"></status>
</kw>
<msg timestamp="20201029 12:45:52.332" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:45:52.329" endtime="20201029 12:45:52.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.336" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:45:52.335" endtime="20201029 12:45:52.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.338" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:45:52.337" endtime="20201029 12:45:52.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.333" endtime="20201029 12:45:52.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.343" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:45:52.342" endtime="20201029 12:45:52.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.345" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:45:52.344" endtime="20201029 12:45:52.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.340" endtime="20201029 12:45:52.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.352" endtime="20201029 12:45:52.641"></status>
</kw>
<msg timestamp="20201029 12:45:52.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07739225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077397639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:52.351" endtime="20201029 12:45:52.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07739225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077397639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:52.646" endtime="20201029 12:45:52.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.654" endtime="20201029 12:45:52.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.348" endtime="20201029 12:45:52.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.346" endtime="20201029 12:45:52.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:52.661" level="INFO">${RESULT} = [{'diff': 5.389000000008415e-06}, {'diff': 5.097000000009455e-06}, {'diff': 5.069999999995911e-06}, {'diff': 5.041999999996771e-06}, {'diff': 5.0139999999976315e-06}, {'diff': 5.040999999997298e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:45:52.658" endtime="20201029 12:45:52.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:52.666" level="INFO">${OVERHEAD} = {'diff': [5.389000000008415e-06, 5.097000000009455e-06, 5.069999999995911e-06, 5.041999999996771e-06, 5.0139999999976315e-06, 5.040999999997298e-06, 5.02800000000414e-06, 5.02800000000414e-06, 5.04200...</msg>
<status status="PASS" starttime="20201029 12:45:52.662" endtime="20201029 12:45:52.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.670" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 12:45:52.669" endtime="20201029 12:45:52.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.673" level="INFO">VALUE: [5.389000000008415e-06, 5.097000000009455e-06, 5.069999999995911e-06, 5.041999999996771e-06, 5.0139999999976315e-06, 5.040999999997298e-06, 5.02800000000414e-06, 5.02800000000414e-06, 5.042000000010649e-06, 5.027000000004667e-06, 5.054999999989929e-06, 5.026999999990789e-06, 5.05600000000328e-06, 5.0279999999902625e-06, 5.0279999999902625e-06, 5.040999999997298e-06, 5.0550000000038064e-06, 5.05600000000328e-06, 5.041999999996771e-06, 5.0139999999976315e-06, 5.041999999996771e-06, 5.012999999998158e-06, 5.042000000010649e-06, 5.097999999995051e-06, 5.041999999996771e-06, 5.05600000000328e-06, 5.042000000010649e-06, 4.972000000005861e-06, 5.055999999989402e-06, 5.02800000000414e-06, 5.041999999996771e-06, 5.040999999997298e-06, 5.042000000010649e-06, 4.971999999991983e-06, 5.041999999996771e-06, 5.0139999999976315e-06, 4.985999999998492e-06, 5.02800000000414e-06, 5.02800000000414e-06, 5.041999999996771e-06, 5.02800000000414e-06, 4.973000000005334e-06, 5.02800000000414e-06, 5.040999999997298e-06, 5.0689999999964375e-06, 5.124999999994717e-06, 5.02800000000414e-06, 5.026999999990789e-06, 5.041999999996771e-06, 5.041999999996771e-06]</msg>
<status status="PASS" starttime="20201029 12:45:52.671" endtime="20201029 12:45:52.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.667" endtime="20201029 12:45:52.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.271" endtime="20201029 12:45:52.674"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:52.193" endtime="20201029 12:45:52.675" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:52.681" endtime="20201029 12:45:52.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.680" endtime="20201029 12:45:52.701"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.714" endtime="20201029 12:45:52.728"></status>
</kw>
<msg timestamp="20201029 12:45:52.729" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:52.713" endtime="20201029 12:45:52.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.731" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:52.730" endtime="20201029 12:45:52.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.735" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:52.732" endtime="20201029 12:45:52.736"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:52.710" endtime="20201029 12:45:52.736"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:52.708" endtime="20201029 12:45:52.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.706" endtime="20201029 12:45:52.737"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:52.741" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:52.740" endtime="20201029 12:45:52.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.738" endtime="20201029 12:45:52.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.705" endtime="20201029 12:45:52.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.705" endtime="20201029 12:45:52.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.742" endtime="20201029 12:45:52.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.704" endtime="20201029 12:45:52.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.702" endtime="20201029 12:45:52.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.679" endtime="20201029 12:45:52.745"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.749" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:45:52.757" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:45:54.067" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:45:52.747" endtime="20201029 12:45:54.068"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.071" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:45:54.069" endtime="20201029 12:45:54.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.746" endtime="20201029 12:45:54.071"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:54.075" endtime="20201029 12:45:54.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.073" endtime="20201029 12:45:54.095"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.103" endtime="20201029 12:45:54.111"></status>
</kw>
<msg timestamp="20201029 12:45:54.111" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:54.102" endtime="20201029 12:45:54.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.114" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:54.112" endtime="20201029 12:45:54.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.115" endtime="20201029 12:45:54.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.099" endtime="20201029 12:45:54.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.097" endtime="20201029 12:45:54.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.124" endtime="20201029 12:45:54.434"></status>
</kw>
<msg timestamp="20201029 12:45:54.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017900958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017905653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:54.122" endtime="20201029 12:45:54.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017900958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017905653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:54.444" endtime="20201029 12:45:54.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.463" endtime="20201029 12:45:54.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.120" endtime="20201029 12:45:54.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.118" endtime="20201029 12:45:54.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:54.476" level="INFO">${PHILIP_RES} = [{'diff': 4.6949999999990055e-06}, {'diff': 3.679999999998962e-06}, {'diff': 3.611000000000586e-06}, {'diff': 3.611000000000586e-06}, {'diff': 3.625000000000156e-06}, {'diff': 3.625000000000156e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:45:54.470" endtime="20201029 12:45:54.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:54.482" level="INFO">${RESULT} = {'diff': [4.6949999999990055e-06, 3.679999999998962e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.6669999999988656e-06, 3.62...</msg>
<status status="PASS" starttime="20201029 12:45:54.478" endtime="20201029 12:45:54.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.486" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:54.485" endtime="20201029 12:45:54.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.491" level="INFO">VALUE: [4.6949999999990055e-06, 3.679999999998962e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.6669999999988656e-06, 3.625000000000156e-06, 3.597000000001016e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.6109999999971165e-06, 3.6109999999971165e-06, 3.5410000000027364e-06, 3.611000000000586e-06, 3.6389999999997258e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.6120000000000596e-06, 3.625000000000156e-06, 3.6120000000000596e-06, 3.638000000000252e-06, 3.611000000000586e-06, 3.5980000000004897e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.6109999999971165e-06, 3.665999999999392e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.597000000001016e-06, 3.625000000000156e-06, 3.5559999999983105e-06, 3.6109999999971165e-06, 3.583000000001446e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.5969999999975466e-06, 3.625000000000156e-06, 3.6109999999971165e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.611000000000586e-06]</msg>
<status status="PASS" starttime="20201029 12:45:54.488" endtime="20201029 12:45:54.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.483" endtime="20201029 12:45:54.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.095" endtime="20201029 12:45:54.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.072" endtime="20201029 12:45:54.494"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:54.498" endtime="20201029 12:45:54.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.495" endtime="20201029 12:45:54.519"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.534" endtime="20201029 12:45:54.544"></status>
</kw>
<msg timestamp="20201029 12:45:54.545" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:54.531" endtime="20201029 12:45:54.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.550" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:54.547" endtime="20201029 12:45:54.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.552" endtime="20201029 12:45:54.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.527" endtime="20201029 12:45:54.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.523" endtime="20201029 12:45:54.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.567" endtime="20201029 12:45:54.857"></status>
</kw>
<msg timestamp="20201029 12:45:54.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026771792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026778694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:54.564" endtime="20201029 12:45:54.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026771792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026778694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:54.862" endtime="20201029 12:45:54.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.870" endtime="20201029 12:45:54.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.561" endtime="20201029 12:45:54.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.557" endtime="20201029 12:45:54.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:54.877" level="INFO">${PHILIP_RES} = [{'diff': 6.901999999999603e-06}, {'diff': 6.443999999997813e-06}, {'diff': 6.459000000000326e-06}, {'diff': 6.458000000000852e-06}, {'diff': 6.444000000001282e-06}, {'diff': 6.458000000000852e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:45:54.873" endtime="20201029 12:45:54.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:54.881" level="INFO">${RESULT} = {'diff': [6.901999999999603e-06, 6.443999999997813e-06, 6.459000000000326e-06, 6.458000000000852e-06, 6.444000000001282e-06, 6.458000000000852e-06, 6.458000000000852e-06, 6.458000000000852e-06, 6.4580...</msg>
<status status="PASS" starttime="20201029 12:45:54.878" endtime="20201029 12:45:54.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.885" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:54.884" endtime="20201029 12:45:54.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.888" level="INFO">VALUE: [6.901999999999603e-06, 6.443999999997813e-06, 6.459000000000326e-06, 6.458000000000852e-06, 6.444000000001282e-06, 6.458000000000852e-06, 6.458000000000852e-06, 6.458000000000852e-06, 6.458000000000852e-06, 6.4579999999973825e-06, 6.459000000000326e-06, 6.459000000000326e-06, 6.445000000000756e-06, 6.459000000000326e-06, 6.459000000000326e-06, 6.458000000000852e-06, 6.458000000000852e-06, 6.4579999999973825e-06, 6.430000000001712e-06, 6.458000000000852e-06, 6.458000000000852e-06, 6.431000000001186e-06, 6.472000000000422e-06, 6.458000000000852e-06, 6.445000000000756e-06, 6.431000000001186e-06, 6.459000000000326e-06, 6.445000000000756e-06, 6.500000000003031e-06, 6.4579999999973825e-06, 6.458000000000852e-06, 6.499999999999562e-06, 6.4579999999973825e-06, 6.458000000000852e-06, 6.431000000001186e-06, 6.445000000000756e-06, 6.459000000000326e-06, 6.459000000000326e-06, 6.445000000000756e-06, 6.445000000000756e-06, 6.443999999997813e-06, 6.444000000001282e-06, 6.458000000000852e-06, 6.458000000000852e-06, 6.4579999999973825e-06, 6.458000000000852e-06, 6.458000000000852e-06, 6.458000000000852e-06, 6.430999999997716e-06, 6.459000000000326e-06]</msg>
<status status="PASS" starttime="20201029 12:45:54.886" endtime="20201029 12:45:54.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.882" endtime="20201029 12:45:54.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.520" endtime="20201029 12:45:54.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.494" endtime="20201029 12:45:54.889"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:54.891" endtime="20201029 12:45:54.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.890" endtime="20201029 12:45:54.911"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.920" endtime="20201029 12:45:54.928"></status>
</kw>
<msg timestamp="20201029 12:45:54.929" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:54.918" endtime="20201029 12:45:54.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.931" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:54.930" endtime="20201029 12:45:54.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.932" endtime="20201029 12:45:54.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.915" endtime="20201029 12:45:54.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.913" endtime="20201029 12:45:54.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.941" endtime="20201029 12:45:55.239"></status>
</kw>
<msg timestamp="20201029 12:45:55.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018327792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018336167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:54.939" endtime="20201029 12:45:55.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018327792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018336167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:55.248" endtime="20201029 12:45:55.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.267" endtime="20201029 12:45:55.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.937" endtime="20201029 12:45:55.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.935" endtime="20201029 12:45:55.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:55.281" level="INFO">${PHILIP_RES} = [{'diff': 8.375000000001437e-06}, {'diff': 7.999999999997592e-06}, {'diff': 7.929999999999743e-06}, {'diff': 7.916999999999647e-06}, {'diff': 7.929999999999743e-06}, {'diff': 7.916999999999647e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:45:55.274" endtime="20201029 12:45:55.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:55.290" level="INFO">${RESULT} = {'diff': [8.375000000001437e-06, 7.999999999997592e-06, 7.929999999999743e-06, 7.916999999999647e-06, 7.929999999999743e-06, 7.916999999999647e-06, 7.916999999999647e-06, 7.929999999999743e-06, 7.9170...</msg>
<status status="PASS" starttime="20201029 12:45:55.283" endtime="20201029 12:45:55.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.294" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:55.293" endtime="20201029 12:45:55.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.297" level="INFO">VALUE: [8.375000000001437e-06, 7.999999999997592e-06, 7.929999999999743e-06, 7.916999999999647e-06, 7.929999999999743e-06, 7.916999999999647e-06, 7.916999999999647e-06, 7.929999999999743e-06, 7.917000000003116e-06, 7.916000000000173e-06, 7.903000000000077e-06, 7.930999999999216e-06, 7.943999999999313e-06, 7.903000000000077e-06, 7.943999999999313e-06, 7.916000000000173e-06, 7.930999999999216e-06, 7.916000000000173e-06, 7.888999999997037e-06, 7.930999999999216e-06, 7.916000000000173e-06, 7.930999999999216e-06, 7.916999999999647e-06, 7.930000000003212e-06, 7.903000000000077e-06, 7.902000000000603e-06, 7.916999999999647e-06, 7.916999999999647e-06, 7.930000000003212e-06, 7.861000000001367e-06, 7.929999999999743e-06, 7.916999999999647e-06, 7.916999999999647e-06, 7.944000000002782e-06, 7.930999999999216e-06, 7.930999999999216e-06, 7.929999999999743e-06, 7.875000000000937e-06, 7.915999999996703e-06, 7.916999999999647e-06, 7.943999999999313e-06, 7.929999999999743e-06, 7.916999999999647e-06, 7.972000000001922e-06, 7.916000000000173e-06, 7.930999999999216e-06, 7.916000000000173e-06, 7.930999999999216e-06, 7.903000000000077e-06, 7.929999999999743e-06]</msg>
<status status="PASS" starttime="20201029 12:45:55.296" endtime="20201029 12:45:55.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.290" endtime="20201029 12:45:55.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.912" endtime="20201029 12:45:55.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.889" endtime="20201029 12:45:55.299"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:55.301" endtime="20201029 12:45:55.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.300" endtime="20201029 12:45:55.321"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.329" endtime="20201029 12:45:55.337"></status>
</kw>
<msg timestamp="20201029 12:45:55.338" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:55.327" endtime="20201029 12:45:55.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.340" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:55.339" endtime="20201029 12:45:55.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.341" endtime="20201029 12:45:55.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.325" endtime="20201029 12:45:55.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.323" endtime="20201029 12:45:55.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.350" endtime="20201029 12:45:55.634"></status>
</kw>
<msg timestamp="20201029 12:45:55.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017463903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017473778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:55.348" endtime="20201029 12:45:55.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017463903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017473778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:55.639" endtime="20201029 12:45:55.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.647" endtime="20201029 12:45:55.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.346" endtime="20201029 12:45:55.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.344" endtime="20201029 12:45:55.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:55.654" level="INFO">${PHILIP_RES} = [{'diff': 9.874999999999468e-06}, {'diff': 9.417000000001147e-06}, {'diff': 9.402999999998107e-06}, {'diff': 9.416999999997677e-06}, {'diff': 9.445000000000286e-06}, {'diff': 9.417000000001147e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:45:55.650" endtime="20201029 12:45:55.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:55.659" level="INFO">${RESULT} = {'diff': [9.874999999999468e-06, 9.417000000001147e-06, 9.402999999998107e-06, 9.416999999997677e-06, 9.445000000000286e-06, 9.417000000001147e-06, 9.431000000000717e-06, 9.417000000001147e-06, 9.4159...</msg>
<status status="PASS" starttime="20201029 12:45:55.655" endtime="20201029 12:45:55.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.663" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:55.662" endtime="20201029 12:45:55.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.665" level="INFO">VALUE: [9.874999999999468e-06, 9.417000000001147e-06, 9.402999999998107e-06, 9.416999999997677e-06, 9.445000000000286e-06, 9.417000000001147e-06, 9.431000000000717e-06, 9.417000000001147e-06, 9.415999999998204e-06, 9.429999999997773e-06, 9.417000000001147e-06, 9.402000000002103e-06, 9.403000000001577e-06, 9.415999999998204e-06, 9.415999999998204e-06, 9.415999999998204e-06, 9.416000000001673e-06, 9.416000000001673e-06, 9.458000000000383e-06, 9.415999999998204e-06, 9.415999999998204e-06, 9.401999999998634e-06, 9.417000000001147e-06, 9.403000000001577e-06, 9.403000000001577e-06, 9.415999999998204e-06, 9.417000000001147e-06, 9.417000000001147e-06, 9.417000000001147e-06, 9.389000000002007e-06, 9.388999999998537e-06, 9.416999999997677e-06, 9.417000000001147e-06, 9.374999999998967e-06, 9.389000000002007e-06, 9.416999999997677e-06, 9.416999999997677e-06, 9.417000000001147e-06, 9.346999999999828e-06, 9.389000000002007e-06, 9.431000000000717e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.403000000001577e-06, 9.403000000001577e-06, 9.417000000001147e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.417000000001147e-06, 9.403000000001577e-06]</msg>
<status status="PASS" starttime="20201029 12:45:55.664" endtime="20201029 12:45:55.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.660" endtime="20201029 12:45:55.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.321" endtime="20201029 12:45:55.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.299" endtime="20201029 12:45:55.667"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:55.669" endtime="20201029 12:45:55.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.668" endtime="20201029 12:45:55.689"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.697" endtime="20201029 12:45:55.706"></status>
</kw>
<msg timestamp="20201029 12:45:55.706" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:55.695" endtime="20201029 12:45:55.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.709" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:55.707" endtime="20201029 12:45:55.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.710" endtime="20201029 12:45:55.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.693" endtime="20201029 12:45:55.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.691" endtime="20201029 12:45:55.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.718" endtime="20201029 12:45:56.007"></status>
</kw>
<msg timestamp="20201029 12:45:56.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017362833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017374208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:55.717" endtime="20201029 12:45:56.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017362833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017374208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:56.016" endtime="20201029 12:45:56.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.035" endtime="20201029 12:45:56.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.714" endtime="20201029 12:45:56.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.713" endtime="20201029 12:45:56.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:56.050" level="INFO">${PHILIP_RES} = [{'diff': 1.1374999999997498e-05}, {'diff': 1.0930999999998747e-05}, {'diff': 1.0944000000002313e-05}, {'diff': 1.0985999999997553e-05}, {'diff': 1.0931000000002217e-05}, {'diff': 1.0929999999999274e-...</msg>
<status status="PASS" starttime="20201029 12:45:56.044" endtime="20201029 12:45:56.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:56.059" level="INFO">${RESULT} = {'diff': [1.1374999999997498e-05, 1.0930999999998747e-05, 1.0944000000002313e-05, 1.0985999999997553e-05, 1.0931000000002217e-05, 1.0929999999999274e-05, 1.0943999999998844e-05, 1.0945000000001787e-05...</msg>
<status status="PASS" starttime="20201029 12:45:56.052" endtime="20201029 12:45:56.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.068" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:56.066" endtime="20201029 12:45:56.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.073" level="INFO">VALUE: [1.1374999999997498e-05, 1.0930999999998747e-05, 1.0944000000002313e-05, 1.0985999999997553e-05, 1.0931000000002217e-05, 1.0929999999999274e-05, 1.0943999999998844e-05, 1.0945000000001787e-05, 1.0944999999998317e-05, 1.0986000000001023e-05, 1.0944000000002313e-05, 1.0944999999998317e-05, 1.0944000000002313e-05, 1.0943999999998844e-05, 1.0930999999998747e-05, 1.0945000000001787e-05, 1.0929999999999274e-05, 1.0943999999998844e-05, 1.0945000000001787e-05, 1.0916999999999177e-05, 1.0929999999999274e-05, 1.0958000000001883e-05, 1.0944999999998317e-05, 1.0944000000002313e-05, 1.0943999999998844e-05, 1.0959000000001357e-05, 1.0944000000002313e-05, 1.0929999999999274e-05, 1.0931000000002217e-05, 1.0930999999998747e-05, 1.0943999999998844e-05, 1.0986000000001023e-05, 1.0958999999997887e-05, 1.0930999999998747e-05, 1.0944000000002313e-05, 1.0944999999998317e-05, 1.0945000000001787e-05, 1.0929999999999274e-05, 1.0929999999999274e-05, 1.0945000000001787e-05, 1.0958999999997887e-05, 1.0958000000001883e-05, 1.0929999999999274e-05, 1.0930999999998747e-05, 1.0930000000002743e-05, 1.0943999999998844e-05, 1.0930999999998747e-05, 1.0931000000002217e-05, 1.0929999999999274e-05, 1.0943999999998844e-05]</msg>
<status status="PASS" starttime="20201029 12:45:56.070" endtime="20201029 12:45:56.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.061" endtime="20201029 12:45:56.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.690" endtime="20201029 12:45:56.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.667" endtime="20201029 12:45:56.076"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:56.088" endtime="20201029 12:45:56.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.078" endtime="20201029 12:45:56.109"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.117" endtime="20201029 12:45:56.127"></status>
</kw>
<msg timestamp="20201029 12:45:56.127" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:56.116" endtime="20201029 12:45:56.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.130" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:56.128" endtime="20201029 12:45:56.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.131" endtime="20201029 12:45:56.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.113" endtime="20201029 12:45:56.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.111" endtime="20201029 12:45:56.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.141" endtime="20201029 12:45:56.427"></status>
</kw>
<msg timestamp="20201029 12:45:56.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017813153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017826097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:56.139" endtime="20201029 12:45:56.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017813153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017826097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:56.432" endtime="20201029 12:45:56.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.440" endtime="20201029 12:45:56.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.136" endtime="20201029 12:45:56.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.135" endtime="20201029 12:45:56.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:56.447" level="INFO">${PHILIP_RES} = [{'diff': 1.2943999999997374e-05}, {'diff': 1.254099999999786e-05}, {'diff': 1.2499999999998623e-05}, {'diff': 1.2500000000002093e-05}, {'diff': 1.2486000000002523e-05}, {'diff': 1.2485999999999053e-0...</msg>
<status status="PASS" starttime="20201029 12:45:56.444" endtime="20201029 12:45:56.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:56.451" level="INFO">${RESULT} = {'diff': [1.2943999999997374e-05, 1.254099999999786e-05, 1.2499999999998623e-05, 1.2500000000002093e-05, 1.2486000000002523e-05, 1.2485999999999053e-05, 1.2485999999999053e-05, 1.2485999999999053e-05,...</msg>
<status status="PASS" starttime="20201029 12:45:56.448" endtime="20201029 12:45:56.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.455" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:56.454" endtime="20201029 12:45:56.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.458" level="INFO">VALUE: [1.2943999999997374e-05, 1.254099999999786e-05, 1.2499999999998623e-05, 1.2500000000002093e-05, 1.2486000000002523e-05, 1.2485999999999053e-05, 1.2485999999999053e-05, 1.2485999999999053e-05, 1.2486000000002523e-05, 1.2499999999998623e-05, 1.2471999999999483e-05, 1.2500000000002093e-05, 1.2485999999999053e-05, 1.2499999999998623e-05, 1.2458999999999387e-05, 1.2528000000001233e-05, 1.2471999999999483e-05, 1.2487000000001997e-05, 1.2499999999998623e-05, 1.2485999999999053e-05, 1.2485999999999053e-05, 1.2458999999999387e-05, 1.2499999999998623e-05, 1.2471999999999483e-05, 1.2485999999999053e-05, 1.2487000000001997e-05, 1.2471999999999483e-05, 1.2542000000000803e-05, 1.2471999999999483e-05, 1.2472999999998957e-05, 1.2471999999999483e-05, 1.2471999999999483e-05, 1.2444000000000344e-05, 1.2485999999999053e-05, 1.2444999999999817e-05, 1.2457999999999914e-05, 1.2499999999998623e-05, 1.2485999999999053e-05, 1.2500000000002093e-05, 1.2499999999998623e-05, 1.2499999999998623e-05, 1.2471999999999483e-05, 1.2487000000001997e-05, 1.2486000000002523e-05, 1.2527999999997763e-05, 1.2499999999998623e-05, 1.2499999999998623e-05, 1.2472000000002953e-05, 1.2471999999999483e-05, 1.2485999999999053e-05]</msg>
<status status="PASS" starttime="20201029 12:45:56.456" endtime="20201029 12:45:56.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.452" endtime="20201029 12:45:56.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.110" endtime="20201029 12:45:56.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.077" endtime="20201029 12:45:56.460"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:56.462" endtime="20201029 12:45:56.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.461" endtime="20201029 12:45:56.482"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.490" endtime="20201029 12:45:56.499"></status>
</kw>
<msg timestamp="20201029 12:45:56.500" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:56.489" endtime="20201029 12:45:56.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.502" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:56.501" endtime="20201029 12:45:56.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.503" endtime="20201029 12:45:56.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.486" endtime="20201029 12:45:56.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.484" endtime="20201029 12:45:56.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.512" endtime="20201029 12:45:56.798"></status>
</kw>
<msg timestamp="20201029 12:45:56.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017387611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017402125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:56.511" endtime="20201029 12:45:56.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017387611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017402125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:56.803" endtime="20201029 12:45:56.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.811" endtime="20201029 12:45:56.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.508" endtime="20201029 12:45:56.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.506" endtime="20201029 12:45:56.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:56.818" level="INFO">${PHILIP_RES} = [{'diff': 1.4514000000000193e-05}, {'diff': 1.405499999999893e-05}, {'diff': 1.4125000000000248e-05}, {'diff': 1.4083000000001539e-05}, {'diff': 1.405499999999893e-05}, {'diff': 1.4069999999997973e-05...</msg>
<status status="PASS" starttime="20201029 12:45:56.815" endtime="20201029 12:45:56.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:56.823" level="INFO">${RESULT} = {'diff': [1.4514000000000193e-05, 1.405499999999893e-05, 1.4125000000000248e-05, 1.4083000000001539e-05, 1.405499999999893e-05, 1.4069999999997973e-05, 1.4069000000001969e-05, 1.4070000000001442e-05, ...</msg>
<status status="PASS" starttime="20201029 12:45:56.819" endtime="20201029 12:45:56.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.827" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:56.826" endtime="20201029 12:45:56.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.830" level="INFO">VALUE: [1.4514000000000193e-05, 1.405499999999893e-05, 1.4125000000000248e-05, 1.4083000000001539e-05, 1.405499999999893e-05, 1.4069999999997973e-05, 1.4069000000001969e-05, 1.4070000000001442e-05, 1.4083999999997543e-05, 1.4138999999999818e-05, 1.4070000000001442e-05, 1.4013999999999693e-05, 1.4098000000000582e-05, 1.4055999999998403e-05, 1.4055999999998403e-05, 1.4111000000000679e-05, 1.4069000000001969e-05, 1.404099999999936e-05, 1.404099999999936e-05, 1.4111000000000679e-05, 1.4083000000001539e-05, 1.4069000000001969e-05, 1.40689999999985e-05, 1.40689999999985e-05, 1.4097000000001109e-05, 1.408299999999807e-05, 1.4070000000001442e-05, 1.4083999999997543e-05, 1.4069999999997973e-05, 1.4070000000001442e-05, 1.4084000000001012e-05, 1.4055999999998403e-05, 1.40689999999985e-05, 1.4083000000001539e-05, 1.4069000000001969e-05, 1.40689999999985e-05, 1.40689999999985e-05, 1.405499999999893e-05, 1.4083000000001539e-05, 1.4138999999999818e-05, 1.40689999999985e-05, 1.405499999999893e-05, 1.4083000000001539e-05, 1.4056000000001873e-05, 1.4055999999998403e-05, 1.4069999999997973e-05, 1.4069999999997973e-05, 1.4028000000002733e-05, 1.4070000000001442e-05, 1.4084000000001012e-05]</msg>
<status status="PASS" starttime="20201029 12:45:56.828" endtime="20201029 12:45:56.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.824" endtime="20201029 12:45:56.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.483" endtime="20201029 12:45:56.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.460" endtime="20201029 12:45:56.831"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:56.833" endtime="20201029 12:45:56.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.832" endtime="20201029 12:45:56.853"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.861" endtime="20201029 12:45:56.871"></status>
</kw>
<msg timestamp="20201029 12:45:56.871" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:56.860" endtime="20201029 12:45:56.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.874" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:56.872" endtime="20201029 12:45:56.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.875" endtime="20201029 12:45:56.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.857" endtime="20201029 12:45:56.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.855" endtime="20201029 12:45:56.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.884" endtime="20201029 12:45:57.174"></status>
</kw>
<msg timestamp="20201029 12:45:57.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017568403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017584542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:56.882" endtime="20201029 12:45:57.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017568403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017584542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:57.178" endtime="20201029 12:45:57.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.186" endtime="20201029 12:45:57.188"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.880" endtime="20201029 12:45:57.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.878" endtime="20201029 12:45:57.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:57.193" level="INFO">${PHILIP_RES} = [{'diff': 1.613900000000182e-05}, {'diff': 1.5681000000000028e-05}, {'diff': 1.565300000000089e-05}, {'diff': 1.5681000000000028e-05}, {'diff': 1.5666000000000985e-05}, {'diff': 1.566700000000046e-05}...</msg>
<status status="PASS" starttime="20201029 12:45:57.190" endtime="20201029 12:45:57.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:57.197" level="INFO">${RESULT} = {'diff': [1.613900000000182e-05, 1.5681000000000028e-05, 1.565300000000089e-05, 1.5681000000000028e-05, 1.5666000000000985e-05, 1.566700000000046e-05, 1.5694000000000125e-05, 1.5681000000000028e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:45:57.194" endtime="20201029 12:45:57.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.201" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:57.200" endtime="20201029 12:45:57.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.204" level="INFO">VALUE: [1.613900000000182e-05, 1.5681000000000028e-05, 1.565300000000089e-05, 1.5681000000000028e-05, 1.5666000000000985e-05, 1.566700000000046e-05, 1.5694000000000125e-05, 1.5681000000000028e-05, 1.565300000000089e-05, 1.566699999999699e-05, 1.5707999999999694e-05, 1.5665999999997515e-05, 1.562499999999828e-05, 1.5679999999997085e-05, 1.5722999999998738e-05, 1.566699999999699e-05, 1.5708999999999168e-05, 1.565300000000089e-05, 1.565300000000089e-05, 1.5694999999999598e-05, 1.5680000000000555e-05, 1.5681000000000028e-05, 1.5707999999999694e-05, 1.563899999999785e-05, 1.566700000000046e-05, 1.5665999999997515e-05, 1.5681000000000028e-05, 1.5707999999999694e-05, 1.566700000000046e-05, 1.5665999999997515e-05, 1.5681000000000028e-05, 1.566699999999699e-05, 1.5666000000000985e-05, 1.5583999999999043e-05, 1.5666000000000985e-05, 1.5735999999998834e-05, 1.5680000000000555e-05, 1.565299999999742e-05, 1.566700000000046e-05, 1.559699999999914e-05, 1.5681000000000028e-05, 1.5679999999997085e-05, 1.5681000000000028e-05, 1.5707999999999694e-05, 1.566700000000046e-05, 1.5694000000000125e-05, 1.5666000000000985e-05, 1.566700000000046e-05, 1.559699999999914e-05, 1.566699999999699e-05]</msg>
<status status="PASS" starttime="20201029 12:45:57.202" endtime="20201029 12:45:57.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.198" endtime="20201029 12:45:57.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.854" endtime="20201029 12:45:57.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.831" endtime="20201029 12:45:57.205"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:57.208" endtime="20201029 12:45:57.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.206" endtime="20201029 12:45:57.228"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.236" endtime="20201029 12:45:57.245"></status>
</kw>
<msg timestamp="20201029 12:45:57.245" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:57.234" endtime="20201029 12:45:57.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.248" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:57.246" endtime="20201029 12:45:57.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.249" endtime="20201029 12:45:57.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.232" endtime="20201029 12:45:57.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.230" endtime="20201029 12:45:57.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.259" endtime="20201029 12:45:57.545"></status>
</kw>
<msg timestamp="20201029 12:45:57.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017443375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017461181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:57.258" endtime="20201029 12:45:57.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017443375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017461181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:57.550" endtime="20201029 12:45:57.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.558" endtime="20201029 12:45:57.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.255" endtime="20201029 12:45:57.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.253" endtime="20201029 12:45:57.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:57.564" level="INFO">${PHILIP_RES} = [{'diff': 1.7805999999998684e-05}, {'diff': 1.731899999999828e-05}, {'diff': 1.7236000000000334e-05}, {'diff': 1.7319999999997754e-05}, {'diff': 1.7334000000000793e-05}, {'diff': 1.736100000000046e-05...</msg>
<status status="PASS" starttime="20201029 12:45:57.561" endtime="20201029 12:45:57.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:57.569" level="INFO">${RESULT} = {'diff': [1.7805999999998684e-05, 1.731899999999828e-05, 1.7236000000000334e-05, 1.7319999999997754e-05, 1.7334000000000793e-05, 1.736100000000046e-05, 1.7320000000001223e-05, 1.7320000000001223e-05, ...</msg>
<status status="PASS" starttime="20201029 12:45:57.565" endtime="20201029 12:45:57.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.573" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:57.572" endtime="20201029 12:45:57.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.575" level="INFO">VALUE: [1.7805999999998684e-05, 1.731899999999828e-05, 1.7236000000000334e-05, 1.7319999999997754e-05, 1.7334000000000793e-05, 1.736100000000046e-05, 1.7320000000001223e-05, 1.7320000000001223e-05, 1.7320000000001223e-05, 1.7292000000002083e-05, 1.734700000000089e-05, 1.731899999999828e-05, 1.730499999999871e-05, 1.731899999999828e-05, 1.729099999999914e-05, 1.736100000000046e-05, 1.729099999999914e-05, 1.730499999999871e-05, 1.736100000000046e-05, 1.7277999999999044e-05, 1.7306000000001653e-05, 1.7320000000001223e-05, 1.7306000000001653e-05, 1.7291999999998614e-05, 1.737500000000003e-05, 1.7291999999998614e-05, 1.731899999999828e-05, 1.731899999999828e-05, 1.731899999999828e-05, 1.729099999999914e-05, 1.729099999999914e-05, 1.731900000000175e-05, 1.7278000000002514e-05, 1.736100000000046e-05, 1.730499999999871e-05, 1.731899999999828e-05, 1.7305999999998184e-05, 1.7348000000000363e-05, 1.7236000000000334e-05, 1.7305999999998184e-05, 1.7320000000001223e-05, 1.7320000000001223e-05, 1.733300000000132e-05, 1.7306000000001653e-05, 1.731900000000175e-05, 1.730500000000218e-05, 1.733300000000132e-05, 1.737500000000003e-05, 1.730499999999871e-05, 1.731899999999828e-05]</msg>
<status status="PASS" starttime="20201029 12:45:57.574" endtime="20201029 12:45:57.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.570" endtime="20201029 12:45:57.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.228" endtime="20201029 12:45:57.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.206" endtime="20201029 12:45:57.578"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:57.580" endtime="20201029 12:45:57.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.579" endtime="20201029 12:45:57.600"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.608" endtime="20201029 12:45:57.617"></status>
</kw>
<msg timestamp="20201029 12:45:57.618" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:57.606" endtime="20201029 12:45:57.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.620" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:57.619" endtime="20201029 12:45:57.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.621" endtime="20201029 12:45:57.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.604" endtime="20201029 12:45:57.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.602" endtime="20201029 12:45:57.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.630" endtime="20201029 12:45:57.916"></status>
</kw>
<msg timestamp="20201029 12:45:57.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017517389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017536806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:57.629" endtime="20201029 12:45:57.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017517389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017536806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:57.921" endtime="20201029 12:45:57.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.929" endtime="20201029 12:45:57.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.626" endtime="20201029 12:45:57.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.624" endtime="20201029 12:45:57.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:57.936" level="INFO">${PHILIP_RES} = [{'diff': 1.941699999999727e-05}, {'diff': 1.8986000000002085e-05}, {'diff': 1.8971999999999045e-05}, {'diff': 1.893099999999981e-05}, {'diff': 1.8957999999999475e-05}, {'diff': 1.8971999999999045e-05...</msg>
<status status="PASS" starttime="20201029 12:45:57.932" endtime="20201029 12:45:57.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:57.941" level="INFO">${RESULT} = {'diff': [1.941699999999727e-05, 1.8986000000002085e-05, 1.8971999999999045e-05, 1.893099999999981e-05, 1.8957999999999475e-05, 1.8971999999999045e-05, 1.8971999999999045e-05, 1.8985999999998615e-05, ...</msg>
<status status="PASS" starttime="20201029 12:45:57.937" endtime="20201029 12:45:57.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.945" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:57.944" endtime="20201029 12:45:57.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.947" level="INFO">VALUE: [1.941699999999727e-05, 1.8986000000002085e-05, 1.8971999999999045e-05, 1.893099999999981e-05, 1.8957999999999475e-05, 1.8971999999999045e-05, 1.8971999999999045e-05, 1.8985999999998615e-05, 1.8985999999998615e-05, 1.8972000000002515e-05, 1.9014000000001224e-05, 1.894499999999938e-05, 1.895900000000242e-05, 1.8957999999999475e-05, 1.8958000000002945e-05, 1.8957999999999475e-05, 1.8971999999999045e-05, 1.8958000000002945e-05, 1.8957999999999475e-05, 1.8957999999999475e-05, 1.8971999999999045e-05, 1.8999999999998185e-05, 1.904100000000089e-05, 1.8957999999999475e-05, 1.8957999999999475e-05, 1.8957999999999475e-05, 1.8957999999999475e-05, 1.8972000000002515e-05, 1.8971999999999045e-05, 1.9027999999997325e-05, 1.8958000000002945e-05, 1.8957999999999475e-05, 1.895899999999895e-05, 1.8972000000002515e-05, 1.8985999999998615e-05, 1.8958000000002945e-05, 1.8957999999999475e-05, 1.8971999999999045e-05, 1.8958000000002945e-05, 1.8957999999999475e-05, 1.8985999999998615e-05, 1.8971999999999045e-05, 1.8971999999999045e-05, 1.8972000000002515e-05, 1.8971999999999045e-05, 1.8985999999998615e-05, 1.8957999999999475e-05, 1.8943999999999905e-05, 1.8957999999999475e-05, 1.8943999999999905e-05]</msg>
<status status="PASS" starttime="20201029 12:45:57.946" endtime="20201029 12:45:57.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.941" endtime="20201029 12:45:57.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.601" endtime="20201029 12:45:57.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.578" endtime="20201029 12:45:57.949"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:57.951" endtime="20201029 12:45:57.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.950" endtime="20201029 12:45:57.971"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.979" endtime="20201029 12:45:57.989"></status>
</kw>
<msg timestamp="20201029 12:45:57.989" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:57.978" endtime="20201029 12:45:57.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.992" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:57.990" endtime="20201029 12:45:57.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.993" endtime="20201029 12:45:57.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.975" endtime="20201029 12:45:57.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.973" endtime="20201029 12:45:57.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.002" endtime="20201029 12:45:58.289"></status>
</kw>
<msg timestamp="20201029 12:45:58.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017475833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017496944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:58.001" endtime="20201029 12:45:58.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017475833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017496944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:58.293" endtime="20201029 12:45:58.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.301" endtime="20201029 12:45:58.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.998" endtime="20201029 12:45:58.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.996" endtime="20201029 12:45:58.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:58.309" level="INFO">${PHILIP_RES} = [{'diff': 2.111100000000074e-05}, {'diff': 2.068099999999809e-05}, {'diff': 2.062500000000328e-05}, {'diff': 2.0665999999999046e-05}, {'diff': 2.0651999999999476e-05}, {'diff': 2.063899999999938e-05},...</msg>
<status status="PASS" starttime="20201029 12:45:58.306" endtime="20201029 12:45:58.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:58.313" level="INFO">${RESULT} = {'diff': [2.111100000000074e-05, 2.068099999999809e-05, 2.062500000000328e-05, 2.0665999999999046e-05, 2.0651999999999476e-05, 2.063899999999938e-05, 2.065299999999895e-05, 2.063899999999938e-05, 2.06...</msg>
<status status="PASS" starttime="20201029 12:45:58.310" endtime="20201029 12:45:58.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.317" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:58.316" endtime="20201029 12:45:58.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.320" level="INFO">VALUE: [2.111100000000074e-05, 2.068099999999809e-05, 2.062500000000328e-05, 2.0665999999999046e-05, 2.0651999999999476e-05, 2.063899999999938e-05, 2.065299999999895e-05, 2.063899999999938e-05, 2.066699999999852e-05, 2.066699999999852e-05, 2.07090000000007e-05, 2.065299999999895e-05, 2.063899999999938e-05, 2.068100000000156e-05, 2.065299999999895e-05, 2.065300000000242e-05, 2.066699999999852e-05, 2.0694000000001656e-05, 2.0679999999998616e-05, 2.0637999999999906e-05, 2.0665999999999046e-05, 2.063900000000285e-05, 2.063899999999938e-05, 2.07090000000007e-05, 2.065299999999895e-05, 2.066699999999852e-05, 2.0736000000000365e-05, 2.066699999999852e-05, 2.066699999999852e-05, 2.065299999999895e-05, 2.066700000000199e-05, 2.0679999999998616e-05, 2.066700000000199e-05, 2.062499999999981e-05, 2.0680000000002086e-05, 2.065299999999895e-05, 2.0666000000002516e-05, 2.063899999999938e-05, 2.066700000000199e-05, 2.066699999999852e-05, 2.066699999999852e-05, 2.066699999999852e-05, 2.065299999999895e-05, 2.068100000000156e-05, 2.065299999999895e-05, 2.065299999999895e-05, 2.062499999999981e-05, 2.0611999999999714e-05, 2.0665999999999046e-05, 2.0651999999999476e-05]</msg>
<status status="PASS" starttime="20201029 12:45:58.318" endtime="20201029 12:45:58.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.314" endtime="20201029 12:45:58.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.972" endtime="20201029 12:45:58.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.949" endtime="20201029 12:45:58.321"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:58.323" endtime="20201029 12:45:58.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.322" endtime="20201029 12:45:58.343"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.351" endtime="20201029 12:45:58.362"></status>
</kw>
<msg timestamp="20201029 12:45:58.362" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:58.350" endtime="20201029 12:45:58.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.365" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:58.363" endtime="20201029 12:45:58.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.366" endtime="20201029 12:45:58.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.347" endtime="20201029 12:45:58.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.345" endtime="20201029 12:45:58.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.376" endtime="20201029 12:45:58.663"></status>
</kw>
<msg timestamp="20201029 12:45:58.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0175925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017615333, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:45:58.374" endtime="20201029 12:45:58.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0175925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017615333, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:45:58.667" endtime="20201029 12:45:58.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.676" endtime="20201029 12:45:58.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.372" endtime="20201029 12:45:58.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.370" endtime="20201029 12:45:58.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:58.682" level="INFO">${PHILIP_RES} = [{'diff': 2.283299999999988e-05}, {'diff': 2.236099999999852e-05}, {'diff': 2.238900000000113e-05}, {'diff': 2.241700000000027e-05}, {'diff': 2.236100000000199e-05}, {'diff': 2.236099999999852e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:58.679" endtime="20201029 12:45:58.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:58.686" level="INFO">${RESULT} = {'diff': [2.283299999999988e-05, 2.236099999999852e-05, 2.238900000000113e-05, 2.241700000000027e-05, 2.236100000000199e-05, 2.236099999999852e-05, 2.2443999999999936e-05, 2.2362000000001464e-05, 2.23...</msg>
<status status="PASS" starttime="20201029 12:45:58.683" endtime="20201029 12:45:58.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.691" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:58.690" endtime="20201029 12:45:58.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.693" level="INFO">VALUE: [2.283299999999988e-05, 2.236099999999852e-05, 2.238900000000113e-05, 2.241700000000027e-05, 2.236100000000199e-05, 2.236099999999852e-05, 2.2443999999999936e-05, 2.2362000000001464e-05, 2.238899999999766e-05, 2.237500000000156e-05, 2.238900000000113e-05, 2.237499999999809e-05, 2.238900000000113e-05, 2.236099999999852e-05, 2.230500000000024e-05, 2.238900000000113e-05, 2.2361999999997995e-05, 2.238900000000113e-05, 2.237499999999809e-05, 2.233299999999938e-05, 2.24030000000007e-05, 2.237499999999809e-05, 2.234700000000242e-05, 2.237499999999809e-05, 2.236099999999852e-05, 2.236100000000199e-05, 2.236099999999852e-05, 2.237500000000156e-05, 2.236099999999852e-05, 2.238899999999766e-05, 2.237500000000156e-05, 2.238899999999766e-05, 2.2362000000001464e-05, 2.233299999999938e-05, 2.2429999999996897e-05, 2.24030000000007e-05, 2.236099999999852e-05, 2.238900000000113e-05, 2.241700000000027e-05, 2.236099999999852e-05, 2.238900000000113e-05, 2.2402000000001226e-05, 2.24030000000007e-05, 2.24030000000007e-05, 2.24030000000007e-05, 2.236100000000199e-05, 2.237499999999809e-05, 2.2458000000002976e-05, 2.237500000000156e-05, 2.244499999999941e-05]</msg>
<status status="PASS" starttime="20201029 12:45:58.692" endtime="20201029 12:45:58.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.687" endtime="20201029 12:45:58.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.344" endtime="20201029 12:45:58.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.322" endtime="20201029 12:45:58.695"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:58.698" endtime="20201029 12:45:58.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.696" endtime="20201029 12:45:58.718"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.726" endtime="20201029 12:45:58.736"></status>
</kw>
<msg timestamp="20201029 12:45:58.737" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:58.724" endtime="20201029 12:45:58.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.739" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:58.738" endtime="20201029 12:45:58.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.741" endtime="20201029 12:45:58.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.721" endtime="20201029 12:45:58.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.720" endtime="20201029 12:45:58.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.750" endtime="20201029 12:45:59.035"></status>
</kw>
<msg timestamp="20201029 12:45:59.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017658486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017683056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:58.748" endtime="20201029 12:45:59.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017658486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017683056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:59.039" endtime="20201029 12:45:59.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.048" endtime="20201029 12:45:59.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.746" endtime="20201029 12:45:59.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.744" endtime="20201029 12:45:59.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:59.054" level="INFO">${PHILIP_RES} = [{'diff': 2.4569999999998066e-05}, {'diff': 2.413899999999941e-05}, {'diff': 2.40970000000007e-05}, {'diff': 2.416700000000202e-05}, {'diff': 2.411100000000027e-05}, {'diff': 2.4082999999997662e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:45:59.051" endtime="20201029 12:45:59.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:59.059" level="INFO">${RESULT} = {'diff': [2.4569999999998066e-05, 2.413899999999941e-05, 2.40970000000007e-05, 2.416700000000202e-05, 2.411100000000027e-05, 2.4082999999997662e-05, 2.413899999999941e-05, 2.4208000000001256e-05, 2.41...</msg>
<status status="PASS" starttime="20201029 12:45:59.055" endtime="20201029 12:45:59.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.063" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:59.062" endtime="20201029 12:45:59.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.066" level="INFO">VALUE: [2.4569999999998066e-05, 2.413899999999941e-05, 2.40970000000007e-05, 2.416700000000202e-05, 2.411100000000027e-05, 2.4082999999997662e-05, 2.413899999999941e-05, 2.4208000000001256e-05, 2.413899999999941e-05, 2.412499999999984e-05, 2.413899999999941e-05, 2.412499999999984e-05, 2.411100000000027e-05, 2.418100000000159e-05, 2.413899999999941e-05, 2.412499999999984e-05, 2.416699999999855e-05, 2.411100000000027e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.40970000000007e-05, 2.412499999999984e-05, 2.4084000000000605e-05, 2.4098000000000175e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.4165999999999077e-05, 2.413899999999941e-05, 2.4180000000002116e-05, 2.413899999999941e-05, 2.4068999999998092e-05, 2.413899999999941e-05, 2.416699999999855e-05, 2.412499999999984e-05, 2.415299999999898e-05, 2.411100000000027e-05, 2.413900000000288e-05, 2.41109999999968e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.418100000000159e-05, 2.413899999999941e-05, 2.406900000000156e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.4166000000002547e-05, 2.413899999999941e-05, 2.4084000000000605e-05]</msg>
<status status="PASS" starttime="20201029 12:45:59.065" endtime="20201029 12:45:59.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.060" endtime="20201029 12:45:59.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.718" endtime="20201029 12:45:59.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.696" endtime="20201029 12:45:59.067"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:59.070" endtime="20201029 12:45:59.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.068" endtime="20201029 12:45:59.090"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.098" endtime="20201029 12:45:59.109"></status>
</kw>
<msg timestamp="20201029 12:45:59.109" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:59.096" endtime="20201029 12:45:59.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.112" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:59.110" endtime="20201029 12:45:59.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.113" endtime="20201029 12:45:59.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.094" endtime="20201029 12:45:59.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.092" endtime="20201029 12:45:59.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.122" endtime="20201029 12:45:59.409"></status>
</kw>
<msg timestamp="20201029 12:45:59.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017493764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017520097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:59.121" endtime="20201029 12:45:59.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017493764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017520097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:59.413" endtime="20201029 12:45:59.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.421" endtime="20201029 12:45:59.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.118" endtime="20201029 12:45:59.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.117" endtime="20201029 12:45:59.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:59.429" level="INFO">${PHILIP_RES} = [{'diff': 2.6332999999999912e-05}, {'diff': 2.59170000000003e-05}, {'diff': 2.590300000000073e-05}, {'diff': 2.590300000000073e-05}, {'diff': 2.5846999999998982e-05}, {'diff': 2.588899999999769e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:45:59.426" endtime="20201029 12:45:59.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:59.433" level="INFO">${RESULT} = {'diff': [2.6332999999999912e-05, 2.59170000000003e-05, 2.590300000000073e-05, 2.590300000000073e-05, 2.5846999999998982e-05, 2.588899999999769e-05, 2.5846999999998982e-05, 2.588899999999769e-05, 2.58...</msg>
<status status="PASS" starttime="20201029 12:45:59.430" endtime="20201029 12:45:59.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.437" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:59.436" endtime="20201029 12:45:59.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.440" level="INFO">VALUE: [2.6332999999999912e-05, 2.59170000000003e-05, 2.590300000000073e-05, 2.590300000000073e-05, 2.5846999999998982e-05, 2.588899999999769e-05, 2.5846999999998982e-05, 2.588899999999769e-05, 2.588900000000116e-05, 2.5874999999998122e-05, 2.587500000000159e-05, 2.588900000000116e-05, 2.588899999999769e-05, 2.590300000000073e-05, 2.588899999999769e-05, 2.588900000000116e-05, 2.588899999999769e-05, 2.588900000000116e-05, 2.5874999999998122e-05, 2.5834000000002355e-05, 2.588900000000116e-05, 2.5804999999996803e-05, 2.588900000000116e-05, 2.5861999999998025e-05, 2.587500000000159e-05, 2.5846999999998982e-05, 2.588900000000116e-05, 2.5901999999997788e-05, 2.588900000000116e-05, 2.588900000000116e-05, 2.5818999999999842e-05, 2.5832999999999412e-05, 2.5874999999998122e-05, 2.588900000000116e-05, 2.5846999999998982e-05, 2.588900000000116e-05, 2.5901999999997788e-05, 2.588900000000116e-05, 2.590300000000073e-05, 2.588899999999769e-05, 2.587500000000159e-05, 2.5874999999998122e-05, 2.588900000000116e-05, 2.590299999999726e-05, 2.5818999999999842e-05, 2.5887999999998218e-05, 2.588900000000116e-05, 2.5874999999998122e-05, 2.588899999999769e-05, 2.590300000000073e-05]</msg>
<status status="PASS" starttime="20201029 12:45:59.438" endtime="20201029 12:45:59.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.434" endtime="20201029 12:45:59.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.090" endtime="20201029 12:45:59.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.068" endtime="20201029 12:45:59.441"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:59.444" endtime="20201029 12:45:59.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.442" endtime="20201029 12:45:59.464"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.472" endtime="20201029 12:45:59.482"></status>
</kw>
<msg timestamp="20201029 12:45:59.483" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:59.470" endtime="20201029 12:45:59.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.486" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:59.484" endtime="20201029 12:45:59.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.487" endtime="20201029 12:45:59.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.467" endtime="20201029 12:45:59.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.466" endtime="20201029 12:45:59.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.497" endtime="20201029 12:45:59.783"></status>
</kw>
<msg timestamp="20201029 12:45:59.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017553361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017581514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:59.495" endtime="20201029 12:45:59.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017553361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017581514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:59.787" endtime="20201029 12:45:59.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.795" endtime="20201029 12:45:59.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.493" endtime="20201029 12:45:59.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.491" endtime="20201029 12:45:59.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:59.802" level="INFO">${PHILIP_RES} = [{'diff': 2.8152999999999512e-05}, {'diff': 2.7694000000001717e-05}, {'diff': 2.769500000000119e-05}, {'diff': 2.7707999999997818e-05}, {'diff': 2.7763999999999567e-05}, {'diff': 2.7694000000001717e-0...</msg>
<status status="PASS" starttime="20201029 12:45:59.799" endtime="20201029 12:45:59.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:59.806" level="INFO">${RESULT} = {'diff': [2.8152999999999512e-05, 2.7694000000001717e-05, 2.769500000000119e-05, 2.7707999999997818e-05, 2.7763999999999567e-05, 2.7694000000001717e-05, 2.772300000000033e-05, 2.7722000000000857e-05, ...</msg>
<status status="PASS" starttime="20201029 12:45:59.803" endtime="20201029 12:45:59.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.810" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:59.809" endtime="20201029 12:45:59.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.813" level="INFO">VALUE: [2.8152999999999512e-05, 2.7694000000001717e-05, 2.769500000000119e-05, 2.7707999999997818e-05, 2.7763999999999567e-05, 2.7694000000001717e-05, 2.772300000000033e-05, 2.7722000000000857e-05, 2.7694000000001717e-05, 2.7708000000001287e-05, 2.770899999999729e-05, 2.7638999999999442e-05, 2.7652999999999012e-05, 2.7694000000001717e-05, 2.768100000000162e-05, 2.772300000000033e-05, 2.7722000000000857e-05, 2.766699999999858e-05, 2.769499999999772e-05, 2.7722000000000857e-05, 2.7694000000001717e-05, 2.7694000000001717e-05, 2.770900000000076e-05, 2.7707999999997818e-05, 2.7693999999998248e-05, 2.769500000000119e-05, 2.7791999999998707e-05, 2.7694000000001717e-05, 2.7694000000001717e-05, 2.769499999999772e-05, 2.770899999999729e-05, 2.766699999999858e-05, 2.7708000000001287e-05, 2.768100000000162e-05, 2.769500000000119e-05, 2.7764000000003036e-05, 2.7693999999998248e-05, 2.769499999999772e-05, 2.7707999999997818e-05, 2.7694000000001717e-05, 2.7722000000000857e-05, 2.769500000000119e-05, 2.770900000000076e-05, 2.7624999999999872e-05, 2.7693999999998248e-05, 2.769500000000119e-05, 2.765300000000248e-05, 2.7680000000002147e-05, 2.7722000000000857e-05, 2.769499999999772e-05]</msg>
<status status="PASS" starttime="20201029 12:45:59.811" endtime="20201029 12:45:59.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.807" endtime="20201029 12:45:59.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.464" endtime="20201029 12:45:59.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.442" endtime="20201029 12:45:59.817"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:59.820" endtime="20201029 12:45:59.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.818" endtime="20201029 12:45:59.840"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.850" endtime="20201029 12:45:59.862"></status>
</kw>
<msg timestamp="20201029 12:45:59.862" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:59.848" endtime="20201029 12:45:59.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.865" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:59.863" endtime="20201029 12:45:59.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.866" endtime="20201029 12:45:59.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.845" endtime="20201029 12:45:59.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.843" endtime="20201029 12:45:59.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.875" endtime="20201029 12:46:00.161"></status>
</kw>
<msg timestamp="20201029 12:46:00.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020303056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020333028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:59.873" endtime="20201029 12:46:00.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020303056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020333028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:00.165" endtime="20201029 12:46:00.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.174" endtime="20201029 12:46:00.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.871" endtime="20201029 12:46:00.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.869" endtime="20201029 12:46:00.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:00.180" level="INFO">${PHILIP_RES} = [{'diff': 2.9971999999999638e-05}, {'diff': 2.9542000000000457e-05}, {'diff': 2.9542000000000457e-05}, {'diff': 2.9528000000000887e-05}, {'diff': 2.9527999999997417e-05}, {'diff': 2.9513999999997848e-...</msg>
<status status="PASS" starttime="20201029 12:46:00.177" endtime="20201029 12:46:00.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:00.185" level="INFO">${RESULT} = {'diff': [2.9971999999999638e-05, 2.9542000000000457e-05, 2.9542000000000457e-05, 2.9528000000000887e-05, 2.9527999999997417e-05, 2.9513999999997848e-05, 2.9542000000000457e-05, 2.9528000000000887e-05...</msg>
<status status="PASS" starttime="20201029 12:46:00.181" endtime="20201029 12:46:00.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.190" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:00.189" endtime="20201029 12:46:00.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.192" level="INFO">VALUE: [2.9971999999999638e-05, 2.9542000000000457e-05, 2.9542000000000457e-05, 2.9528000000000887e-05, 2.9527999999997417e-05, 2.9513999999997848e-05, 2.9542000000000457e-05, 2.9528000000000887e-05, 2.9443999999999998e-05, 2.9528000000000887e-05, 2.9528000000000887e-05, 2.9499999999998278e-05, 2.9527999999997417e-05, 2.9513999999997848e-05, 2.9471999999999138e-05, 2.9514000000001317e-05, 2.9528000000000887e-05, 2.9556000000000027e-05, 2.9513999999997848e-05, 2.9542000000000457e-05, 2.9542000000000457e-05, 2.9542000000000457e-05, 2.9486000000002177e-05, 2.9541000000000983e-05, 2.9582999999999693e-05, 2.9541999999996987e-05, 2.9528000000000887e-05, 2.9542000000000457e-05, 2.9542000000000457e-05, 2.9540999999997514e-05, 2.9528000000000887e-05, 2.9556000000000027e-05, 2.9485999999998708e-05, 2.9513999999997848e-05, 2.9514000000001317e-05, 2.9514000000001317e-05, 2.9514000000001317e-05, 2.9542000000000457e-05, 2.9542000000000457e-05, 2.9513999999997848e-05, 2.944499999999947e-05, 2.9528000000000887e-05, 2.9514000000001317e-05, 2.9528000000000887e-05, 2.9542000000000457e-05, 2.9542000000000457e-05, 2.9527999999997417e-05, 2.9527999999997417e-05, 2.9514000000001317e-05, 2.9528000000000887e-05]</msg>
<status status="PASS" starttime="20201029 12:46:00.191" endtime="20201029 12:46:00.193"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.186" endtime="20201029 12:46:00.193"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.841" endtime="20201029 12:46:00.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.817" endtime="20201029 12:46:00.194"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:00.196" endtime="20201029 12:46:00.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.195" endtime="20201029 12:46:00.216"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.224" endtime="20201029 12:46:00.235"></status>
</kw>
<msg timestamp="20201029 12:46:00.236" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:00.223" endtime="20201029 12:46:00.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.238" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:00.237" endtime="20201029 12:46:00.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.239" endtime="20201029 12:46:00.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.220" endtime="20201029 12:46:00.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.218" endtime="20201029 12:46:00.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.248" endtime="20201029 12:46:00.534"></status>
</kw>
<msg timestamp="20201029 12:46:00.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018103306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018135125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:00.246" endtime="20201029 12:46:00.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018103306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018135125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:00.539" endtime="20201029 12:46:00.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.547" endtime="20201029 12:46:00.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.244" endtime="20201029 12:46:00.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.242" endtime="20201029 12:46:00.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:00.553" level="INFO">${PHILIP_RES} = [{'diff': 3.1818999999998904e-05}, {'diff': 3.138899999999972e-05}, {'diff': 3.141599999999939e-05}, {'diff': 3.137500000000015e-05}, {'diff': 3.1348000000000487e-05}, {'diff': 3.140299999999929e-05},...</msg>
<status status="PASS" starttime="20201029 12:46:00.550" endtime="20201029 12:46:00.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:00.557" level="INFO">${RESULT} = {'diff': [3.1818999999998904e-05, 3.138899999999972e-05, 3.141599999999939e-05, 3.137500000000015e-05, 3.1348000000000487e-05, 3.140299999999929e-05, 3.138899999999972e-05, 3.140299999999929e-05, 3.13...</msg>
<status status="PASS" starttime="20201029 12:46:00.554" endtime="20201029 12:46:00.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.562" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:00.561" endtime="20201029 12:46:00.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.564" level="INFO">VALUE: [3.1818999999998904e-05, 3.138899999999972e-05, 3.141599999999939e-05, 3.137500000000015e-05, 3.1348000000000487e-05, 3.140299999999929e-05, 3.138899999999972e-05, 3.140299999999929e-05, 3.1346999999997543e-05, 3.138900000000319e-05, 3.137500000000015e-05, 3.140299999999929e-05, 3.1318999999998404e-05, 3.137500000000015e-05, 3.138899999999972e-05, 3.137500000000015e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.137500000000015e-05, 3.138899999999972e-05, 3.140299999999929e-05, 3.134799999999702e-05, 3.138900000000319e-05, 3.136100000000058e-05, 3.137500000000015e-05, 3.140300000000276e-05, 3.14579999999981e-05, 3.138899999999972e-05, 3.137500000000015e-05, 3.141599999999939e-05, 3.138899999999972e-05, 3.1362000000000056e-05, 3.136100000000058e-05, 3.138899999999972e-05, 3.141699999999886e-05, 3.140300000000276e-05, 3.1362000000000056e-05, 3.131900000000187e-05, 3.138899999999972e-05, 3.144500000000147e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.132000000000135e-05, 3.138899999999972e-05, 3.142999999999896e-05, 3.138899999999972e-05, 3.137499999999668e-05]</msg>
<status status="PASS" starttime="20201029 12:46:00.563" endtime="20201029 12:46:00.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.558" endtime="20201029 12:46:00.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.216" endtime="20201029 12:46:00.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.194" endtime="20201029 12:46:00.566"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:00.568" endtime="20201029 12:46:00.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.566" endtime="20201029 12:46:00.588"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.596" endtime="20201029 12:46:00.607"></status>
</kw>
<msg timestamp="20201029 12:46:00.608" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:00.595" endtime="20201029 12:46:00.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.610" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:00.609" endtime="20201029 12:46:00.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.611" endtime="20201029 12:46:00.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.592" endtime="20201029 12:46:00.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.590" endtime="20201029 12:46:00.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.621" endtime="20201029 12:46:00.906"></status>
</kw>
<msg timestamp="20201029 12:46:00.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018121819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018155542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:00.619" endtime="20201029 12:46:00.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018121819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018155542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:00.910" endtime="20201029 12:46:00.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.919" endtime="20201029 12:46:00.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.617" endtime="20201029 12:46:00.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.615" endtime="20201029 12:46:00.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:00.925" level="INFO">${PHILIP_RES} = [{'diff': 3.372299999999939e-05}, {'diff': 3.326399999999813e-05}, {'diff': 3.322299999999889e-05}, {'diff': 3.3277000000001694e-05}, {'diff': 3.3262999999998655e-05}, {'diff': 3.323599999999899e-05},...</msg>
<status status="PASS" starttime="20201029 12:46:00.922" endtime="20201029 12:46:00.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:00.929" level="INFO">${RESULT} = {'diff': [3.372299999999939e-05, 3.326399999999813e-05, 3.322299999999889e-05, 3.3277000000001694e-05, 3.3262999999998655e-05, 3.323599999999899e-05, 3.329200000000074e-05, 3.326399999999813e-05, 3.32...</msg>
<status status="PASS" starttime="20201029 12:46:00.926" endtime="20201029 12:46:00.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.934" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:00.933" endtime="20201029 12:46:00.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.936" level="INFO">VALUE: [3.372299999999939e-05, 3.326399999999813e-05, 3.322299999999889e-05, 3.3277000000001694e-05, 3.3262999999998655e-05, 3.323599999999899e-05, 3.329200000000074e-05, 3.326399999999813e-05, 3.32640000000016e-05, 3.3305000000000834e-05, 3.32640000000016e-05, 3.319499999999975e-05, 3.3277000000001694e-05, 3.3291000000001264e-05, 3.326399999999813e-05, 3.325000000000203e-05, 3.319400000000028e-05, 3.327800000000117e-05, 3.324999999999856e-05, 3.325000000000203e-05, 3.322299999999889e-05, 3.3276999999998225e-05, 3.329200000000074e-05, 3.324999999999856e-05, 3.326399999999813e-05, 3.325000000000203e-05, 3.32640000000016e-05, 3.3305000000000834e-05, 3.3276999999998225e-05, 3.3263000000002124e-05, 3.32779999999977e-05, 3.319400000000028e-05, 3.327800000000117e-05, 3.329200000000074e-05, 3.329199999999727e-05, 3.32640000000016e-05, 3.3277000000001694e-05, 3.3276999999998225e-05, 3.323599999999899e-05, 3.327800000000117e-05, 3.326399999999813e-05, 3.324999999999856e-05, 3.322200000000289e-05, 3.32779999999977e-05, 3.32779999999977e-05, 3.325000000000203e-05, 3.326399999999813e-05, 3.324999999999856e-05, 3.327800000000117e-05, 3.325000000000203e-05]</msg>
<status status="PASS" starttime="20201029 12:46:00.935" endtime="20201029 12:46:00.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.930" endtime="20201029 12:46:00.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.588" endtime="20201029 12:46:00.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.566" endtime="20201029 12:46:00.938"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:00.941" endtime="20201029 12:46:00.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.939" endtime="20201029 12:46:00.960"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.969" endtime="20201029 12:46:00.981"></status>
</kw>
<msg timestamp="20201029 12:46:00.981" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:00.967" endtime="20201029 12:46:00.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.983" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:00.982" endtime="20201029 12:46:00.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.985" endtime="20201029 12:46:00.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.965" endtime="20201029 12:46:00.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.963" endtime="20201029 12:46:00.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.994" endtime="20201029 12:46:01.279"></status>
</kw>
<msg timestamp="20201029 12:46:01.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018084236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018119861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:00.992" endtime="20201029 12:46:01.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018084236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018119861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:01.284" endtime="20201029 12:46:01.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.292" endtime="20201029 12:46:01.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.990" endtime="20201029 12:46:01.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.988" endtime="20201029 12:46:01.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:01.298" level="INFO">${PHILIP_RES} = [{'diff': 3.5625000000000934e-05}, {'diff': 3.5124999999996964e-05}, {'diff': 3.517999999999924e-05}, {'diff': 3.5139000000000004e-05}, {'diff': 3.516599999999967e-05}, {'diff': 3.518000000000271e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:01.295" endtime="20201029 12:46:01.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:01.303" level="INFO">${RESULT} = {'diff': [3.5625000000000934e-05, 3.5124999999996964e-05, 3.517999999999924e-05, 3.5139000000000004e-05, 3.516599999999967e-05, 3.518000000000271e-05, 3.5125000000000434e-05, 3.518099999999871e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:46:01.299" endtime="20201029 12:46:01.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.308" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:01.307" endtime="20201029 12:46:01.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.310" level="INFO">VALUE: [3.5625000000000934e-05, 3.5124999999996964e-05, 3.517999999999924e-05, 3.5139000000000004e-05, 3.516599999999967e-05, 3.518000000000271e-05, 3.5125000000000434e-05, 3.518099999999871e-05, 3.519399999999881e-05, 3.519400000000228e-05, 3.518099999999871e-05, 3.518099999999871e-05, 3.518099999999871e-05, 3.520800000000185e-05, 3.518099999999871e-05, 3.5152999999999573e-05, 3.518099999999871e-05, 3.518100000000218e-05, 3.518099999999871e-05, 3.519499999999828e-05, 3.5166999999999143e-05, 3.5111000000000864e-05, 3.5166999999999143e-05, 3.519499999999828e-05, 3.519500000000175e-05, 3.5166999999999143e-05, 3.519499999999828e-05, 3.519499999999828e-05, 3.518100000000218e-05, 3.5166999999999143e-05, 3.517999999999924e-05, 3.519399999999881e-05, 3.518000000000271e-05, 3.520799999999838e-05, 3.520799999999838e-05, 3.523600000000099e-05, 3.518000000000271e-05, 3.5152999999999573e-05, 3.520799999999838e-05, 3.516599999999967e-05, 3.523600000000099e-05, 3.516599999999967e-05, 3.519399999999881e-05, 3.517999999999924e-05, 3.517999999999924e-05, 3.523600000000099e-05, 3.525000000000056e-05, 3.525000000000056e-05, 3.518100000000218e-05, 3.518099999999871e-05]</msg>
<status status="PASS" starttime="20201029 12:46:01.309" endtime="20201029 12:46:01.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.304" endtime="20201029 12:46:01.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.961" endtime="20201029 12:46:01.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.939" endtime="20201029 12:46:01.312"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:01.314" endtime="20201029 12:46:01.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.312" endtime="20201029 12:46:01.334"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.342" endtime="20201029 12:46:01.355"></status>
</kw>
<msg timestamp="20201029 12:46:01.355" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:01.341" endtime="20201029 12:46:01.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.358" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:01.356" endtime="20201029 12:46:01.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.359" endtime="20201029 12:46:01.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.338" endtime="20201029 12:46:01.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.336" endtime="20201029 12:46:01.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.368" endtime="20201029 12:46:01.654"></status>
</kw>
<msg timestamp="20201029 12:46:01.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01768025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017717819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:01.366" endtime="20201029 12:46:01.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01768025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017717819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:01.659" endtime="20201029 12:46:01.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.667" endtime="20201029 12:46:01.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.364" endtime="20201029 12:46:01.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.362" endtime="20201029 12:46:01.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:01.675" level="INFO">${PHILIP_RES} = [{'diff': 3.7568999999997715e-05}, {'diff': 3.70979999999993e-05}, {'diff': 3.7110999999999394e-05}, {'diff': 3.7110999999999394e-05}, {'diff': 3.7110999999999394e-05}, {'diff': 3.7110999999999394e-05...</msg>
<status status="PASS" starttime="20201029 12:46:01.671" endtime="20201029 12:46:01.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:01.679" level="INFO">${RESULT} = {'diff': [3.7568999999997715e-05, 3.70979999999993e-05, 3.7110999999999394e-05, 3.7110999999999394e-05, 3.7110999999999394e-05, 3.7110999999999394e-05, 3.7110999999999394e-05, 3.7110999999999394e-05, ...</msg>
<status status="PASS" starttime="20201029 12:46:01.676" endtime="20201029 12:46:01.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.683" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:01.682" endtime="20201029 12:46:01.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.685" level="INFO">VALUE: [3.7568999999997715e-05, 3.70979999999993e-05, 3.7110999999999394e-05, 3.7110999999999394e-05, 3.7110999999999394e-05, 3.7110999999999394e-05, 3.7110999999999394e-05, 3.7110999999999394e-05, 3.7125000000002434e-05, 3.711199999999887e-05, 3.7110999999999394e-05, 3.7181000000000713e-05, 3.7110999999999394e-05, 3.7096999999999825e-05, 3.707000000000016e-05, 3.7125000000002434e-05, 3.713800000000253e-05, 3.7125000000002434e-05, 3.7096999999999825e-05, 3.7096999999999825e-05, 3.7096999999999825e-05, 3.7083000000000255e-05, 3.7124999999998964e-05, 3.7096999999999825e-05, 3.7110999999999394e-05, 3.711200000000234e-05, 3.7097000000003294e-05, 3.7096999999999825e-05, 3.7083000000000255e-05, 3.7152999999998104e-05, 3.7124999999998964e-05, 3.7124999999998964e-05, 3.713799999999906e-05, 3.711199999999887e-05, 3.7096999999999825e-05, 3.7125000000002434e-05, 3.7110999999999394e-05, 3.7124999999998964e-05, 3.7096999999999825e-05, 3.7096999999999825e-05, 3.70979999999993e-05, 3.705600000000059e-05, 3.7124999999998964e-05, 3.7110999999999394e-05, 3.7110999999999394e-05, 3.7167000000001144e-05, 3.71659999999982e-05, 3.7110999999999394e-05, 3.7124999999998964e-05, 3.7138999999998534e-05]</msg>
<status status="PASS" starttime="20201029 12:46:01.684" endtime="20201029 12:46:01.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.680" endtime="20201029 12:46:01.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.335" endtime="20201029 12:46:01.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.312" endtime="20201029 12:46:01.687"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:01.690" endtime="20201029 12:46:01.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.688" endtime="20201029 12:46:01.710"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.718" endtime="20201029 12:46:01.730"></status>
</kw>
<msg timestamp="20201029 12:46:01.731" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:01.716" endtime="20201029 12:46:01.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.733" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:01.732" endtime="20201029 12:46:01.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.734" endtime="20201029 12:46:01.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.714" endtime="20201029 12:46:01.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.712" endtime="20201029 12:46:01.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.744" endtime="20201029 12:46:02.031"></status>
</kw>
<msg timestamp="20201029 12:46:02.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017491764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017531347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:01.742" endtime="20201029 12:46:02.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017491764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017531347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:02.035" endtime="20201029 12:46:02.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.044" endtime="20201029 12:46:02.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.740" endtime="20201029 12:46:02.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.738" endtime="20201029 12:46:02.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:02.050" level="INFO">${PHILIP_RES} = [{'diff': 3.9582999999999285e-05}, {'diff': 3.9096999999998355e-05}, {'diff': 3.9125000000000965e-05}, {'diff': 3.90980000000013e-05}, {'diff': 3.9068999999999215e-05}, {'diff': 3.908399999999826e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:02.047" endtime="20201029 12:46:02.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:02.054" level="INFO">${RESULT} = {'diff': [3.9582999999999285e-05, 3.9096999999998355e-05, 3.9125000000000965e-05, 3.90980000000013e-05, 3.9068999999999215e-05, 3.908399999999826e-05, 3.9096999999998355e-05, 3.9110999999997925e-05, 3...</msg>
<status status="PASS" starttime="20201029 12:46:02.051" endtime="20201029 12:46:02.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.059" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:02.058" endtime="20201029 12:46:02.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.061" level="INFO">VALUE: [3.9582999999999285e-05, 3.9096999999998355e-05, 3.9125000000000965e-05, 3.90980000000013e-05, 3.9068999999999215e-05, 3.908399999999826e-05, 3.9096999999998355e-05, 3.9110999999997925e-05, 3.906999999999869e-05, 3.9096999999998355e-05, 3.908399999999826e-05, 3.9096999999998355e-05, 3.9097000000001825e-05, 3.9097000000001825e-05, 3.9097000000001825e-05, 3.9097000000001825e-05, 3.9124999999997495e-05, 3.901400000000041e-05, 3.9110999999997925e-05, 3.908399999999826e-05, 3.9139000000000534e-05, 3.9083000000002255e-05, 3.9153000000000104e-05, 3.9097000000001825e-05, 3.908400000000173e-05, 3.9097000000001825e-05, 3.9110999999997925e-05, 3.9068999999999215e-05, 3.9110999999997925e-05, 3.909799999999783e-05, 3.9096999999998355e-05, 3.906999999999869e-05, 3.9097000000001825e-05, 3.911200000000087e-05, 3.9097000000001825e-05, 3.9111000000001395e-05, 3.90980000000013e-05, 3.9054999999999646e-05, 3.906999999999869e-05, 3.9054999999999646e-05, 3.9082999999998785e-05, 3.9153000000000104e-05, 3.9111000000001395e-05, 3.908400000000173e-05, 3.9069000000002685e-05, 3.90980000000013e-05, 3.9082999999998785e-05, 3.9110999999997925e-05, 3.9096999999998355e-05, 3.9096999999998355e-05]</msg>
<status status="PASS" starttime="20201029 12:46:02.060" endtime="20201029 12:46:02.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.055" endtime="20201029 12:46:02.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.710" endtime="20201029 12:46:02.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.688" endtime="20201029 12:46:02.064"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:02.066" endtime="20201029 12:46:02.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.065" endtime="20201029 12:46:02.086"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.094" endtime="20201029 12:46:02.107"></status>
</kw>
<msg timestamp="20201029 12:46:02.107" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:02.093" endtime="20201029 12:46:02.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.110" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:02.108" endtime="20201029 12:46:02.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.111" endtime="20201029 12:46:02.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.090" endtime="20201029 12:46:02.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.088" endtime="20201029 12:46:02.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.120" endtime="20201029 12:46:02.407"></status>
</kw>
<msg timestamp="20201029 12:46:02.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017553403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017594958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:02.118" endtime="20201029 12:46:02.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017553403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017594958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:02.411" endtime="20201029 12:46:02.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.420" endtime="20201029 12:46:02.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.116" endtime="20201029 12:46:02.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.114" endtime="20201029 12:46:02.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:02.426" level="INFO">${PHILIP_RES} = [{'diff': 4.1555000000002146e-05}, {'diff': 4.1138999999999065e-05}, {'diff': 4.107000000000069e-05}, {'diff': 4.108399999999679e-05}, {'diff': 4.107000000000069e-05}, {'diff': 4.109799999999983e-05},...</msg>
<status status="PASS" starttime="20201029 12:46:02.423" endtime="20201029 12:46:02.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:02.432" level="INFO">${RESULT} = {'diff': [4.1555000000002146e-05, 4.1138999999999065e-05, 4.107000000000069e-05, 4.108399999999679e-05, 4.107000000000069e-05, 4.109799999999983e-05, 4.109799999999983e-05, 4.109799999999983e-05, 4.10...</msg>
<status status="PASS" starttime="20201029 12:46:02.427" endtime="20201029 12:46:02.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.436" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:02.435" endtime="20201029 12:46:02.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.439" level="INFO">VALUE: [4.1555000000002146e-05, 4.1138999999999065e-05, 4.107000000000069e-05, 4.108399999999679e-05, 4.107000000000069e-05, 4.109799999999983e-05, 4.109799999999983e-05, 4.109799999999983e-05, 4.107000000000069e-05, 4.109799999999983e-05, 4.108400000000026e-05, 4.108400000000026e-05, 4.107000000000069e-05, 4.108400000000026e-05, 4.106999999999722e-05, 4.1069000000001216e-05, 4.1083000000000786e-05, 4.1152999999998635e-05, 4.1083000000000786e-05, 4.1083000000000786e-05, 4.1055000000001646e-05, 4.1083000000000786e-05, 4.1082999999997316e-05, 4.1083000000000786e-05, 4.1040999999998606e-05, 4.101399999999894e-05, 4.108400000000026e-05, 4.1096999999996886e-05, 4.1083000000000786e-05, 4.1097000000000355e-05, 4.1068999999997746e-05, 4.1083000000000786e-05, 4.1083000000000786e-05, 4.1069000000001216e-05, 4.1055000000001646e-05, 4.1139000000002535e-05, 4.1069000000001216e-05, 4.113800000000306e-05, 4.1110999999999925e-05, 4.1083000000000786e-05, 4.1069000000001216e-05, 4.105599999999765e-05, 4.1083000000000786e-05, 4.106999999999722e-05, 4.107000000000069e-05, 4.107000000000069e-05, 4.101399999999894e-05, 4.109799999999983e-05, 4.1040999999998606e-05, 4.108400000000026e-05]</msg>
<status status="PASS" starttime="20201029 12:46:02.437" endtime="20201029 12:46:02.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.432" endtime="20201029 12:46:02.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.087" endtime="20201029 12:46:02.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.064" endtime="20201029 12:46:02.441"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:02.443" endtime="20201029 12:46:02.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.442" endtime="20201029 12:46:02.466"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.483" endtime="20201029 12:46:02.499"></status>
</kw>
<msg timestamp="20201029 12:46:02.500" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:02.480" endtime="20201029 12:46:02.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.505" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:02.502" endtime="20201029 12:46:02.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.508" endtime="20201029 12:46:02.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.474" endtime="20201029 12:46:02.512"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.470" endtime="20201029 12:46:02.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.528" endtime="20201029 12:46:02.819"></status>
</kw>
<msg timestamp="20201029 12:46:02.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031353306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031396875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:02.524" endtime="20201029 12:46:02.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031353306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031396875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:02.824" endtime="20201029 12:46:02.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.832" endtime="20201029 12:46:02.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.518" endtime="20201029 12:46:02.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.515" endtime="20201029 12:46:02.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:02.839" level="INFO">${PHILIP_RES} = [{'diff': 4.3569000000000246e-05}, {'diff': 4.3110999999998456e-05}, {'diff': 4.3124999999998026e-05}, {'diff': 4.3110999999998456e-05}, {'diff': 4.3096999999998886e-05}, {'diff': 4.311199999999793e-0...</msg>
<status status="PASS" starttime="20201029 12:46:02.835" endtime="20201029 12:46:02.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:02.843" level="INFO">${RESULT} = {'diff': [4.3569000000000246e-05, 4.3110999999998456e-05, 4.3124999999998026e-05, 4.3110999999998456e-05, 4.3096999999998886e-05, 4.311199999999793e-05, 4.305599999999965e-05, 4.3110999999998456e-05, ...</msg>
<status status="PASS" starttime="20201029 12:46:02.840" endtime="20201029 12:46:02.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.847" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:02.846" endtime="20201029 12:46:02.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.850" level="INFO">VALUE: [4.3569000000000246e-05, 4.3110999999998456e-05, 4.3124999999998026e-05, 4.3110999999998456e-05, 4.3096999999998886e-05, 4.311199999999793e-05, 4.305599999999965e-05, 4.3110999999998456e-05, 4.3096999999998886e-05, 4.30980000000053e-05, 4.3111000000005395e-05, 4.3124999999998026e-05, 4.3124999999998026e-05, 4.3110999999998456e-05, 4.309799999999836e-05, 4.3110999999998456e-05, 4.3110999999998456e-05, 4.3096999999998886e-05, 4.3096999999998886e-05, 4.3111000000005395e-05, 4.3110999999998456e-05, 4.3096999999998886e-05, 4.309799999999836e-05, 4.3096999999998886e-05, 4.3124999999998026e-05, 4.3110999999998456e-05, 4.309799999999836e-05, 4.306999999999922e-05, 4.3096999999998886e-05, 4.3125000000004965e-05, 4.3110999999998456e-05, 4.3110999999998456e-05, 4.3082999999999316e-05, 4.3055000000000176e-05, 4.3110999999998456e-05, 4.315199999999769e-05, 4.3082999999999316e-05, 4.3110999999998456e-05, 4.3097000000005825e-05, 4.3111000000005395e-05, 4.318000000000377e-05, 4.3096999999998886e-05, 4.3124999999998026e-05, 4.3096999999998886e-05, 4.3124999999998026e-05, 4.3138999999997596e-05, 4.3138999999997596e-05, 4.3111000000005395e-05, 4.3111000000005395e-05, 4.3111000000005395e-05]</msg>
<status status="PASS" starttime="20201029 12:46:02.848" endtime="20201029 12:46:02.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.844" endtime="20201029 12:46:02.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.467" endtime="20201029 12:46:02.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.441" endtime="20201029 12:46:02.852"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:02.854" endtime="20201029 12:46:02.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.852" endtime="20201029 12:46:02.874"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.882" endtime="20201029 12:46:02.895"></status>
</kw>
<msg timestamp="20201029 12:46:02.895" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:02.880" endtime="20201029 12:46:02.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.898" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:02.896" endtime="20201029 12:46:02.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.899" endtime="20201029 12:46:02.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.878" endtime="20201029 12:46:02.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.876" endtime="20201029 12:46:02.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.909" endtime="20201029 12:46:03.195"></status>
</kw>
<msg timestamp="20201029 12:46:03.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017538292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017583903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:02.907" endtime="20201029 12:46:03.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017538292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017583903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:03.199" endtime="20201029 12:46:03.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.208" endtime="20201029 12:46:03.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.905" endtime="20201029 12:46:03.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.903" endtime="20201029 12:46:03.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:03.215" level="INFO">${PHILIP_RES} = [{'diff': 4.5611000000000956e-05}, {'diff': 4.516600000000273e-05}, {'diff': 4.515199999999969e-05}, {'diff': 4.5153000000002635e-05}, {'diff': 4.5166999999998736e-05}, {'diff': 4.5167000000002205e-05...</msg>
<status status="PASS" starttime="20201029 12:46:03.212" endtime="20201029 12:46:03.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:03.219" level="INFO">${RESULT} = {'diff': [4.5611000000000956e-05, 4.516600000000273e-05, 4.515199999999969e-05, 4.5153000000002635e-05, 4.5166999999998736e-05, 4.5167000000002205e-05, 4.5180999999998306e-05, 4.5138999999999596e-05, ...</msg>
<status status="PASS" starttime="20201029 12:46:03.216" endtime="20201029 12:46:03.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.223" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:03.222" endtime="20201029 12:46:03.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.226" level="INFO">VALUE: [4.5611000000000956e-05, 4.516600000000273e-05, 4.515199999999969e-05, 4.5153000000002635e-05, 4.5166999999998736e-05, 4.5167000000002205e-05, 4.5180999999998306e-05, 4.5138999999999596e-05, 4.511099999999699e-05, 4.5166999999998736e-05, 4.508299999999785e-05, 4.5083000000001316e-05, 4.515199999999969e-05, 4.5138999999999596e-05, 4.5152999999999166e-05, 4.5167000000002205e-05, 4.5138999999999596e-05, 4.5167000000002205e-05, 4.51939999999984e-05, 4.5111000000000456e-05, 4.5180999999998306e-05, 4.5138999999999596e-05, 4.516599999999926e-05, 4.5138999999999596e-05, 4.5152999999999166e-05, 4.5167000000002205e-05, 4.5152999999999166e-05, 4.5125000000000026e-05, 4.516599999999926e-05, 4.5167000000002205e-05, 4.5138999999999596e-05, 4.5195000000001345e-05, 4.5111000000000456e-05, 4.515199999999969e-05, 4.511199999999993e-05, 4.5083000000001316e-05, 4.5152999999999166e-05, 4.5153000000002635e-05, 4.515199999999969e-05, 4.5138999999999596e-05, 4.5152999999999166e-05, 4.5181000000001775e-05, 4.5152999999999166e-05, 4.515200000000316e-05, 4.5166999999998736e-05, 4.5167000000002205e-05, 4.5138999999999596e-05, 4.5167000000002205e-05, 4.5097000000000886e-05, 4.5153000000002635e-05]</msg>
<status status="PASS" starttime="20201029 12:46:03.224" endtime="20201029 12:46:03.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.220" endtime="20201029 12:46:03.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.874" endtime="20201029 12:46:03.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.852" endtime="20201029 12:46:03.306"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:03.312" endtime="20201029 12:46:03.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.308" endtime="20201029 12:46:03.337"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.355" endtime="20201029 12:46:03.371"></status>
</kw>
<msg timestamp="20201029 12:46:03.372" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:03.352" endtime="20201029 12:46:03.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.377" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:03.374" endtime="20201029 12:46:03.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.379" endtime="20201029 12:46:03.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.347" endtime="20201029 12:46:03.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.343" endtime="20201029 12:46:03.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.398" endtime="20201029 12:46:03.692"></status>
</kw>
<msg timestamp="20201029 12:46:03.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033585014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033632694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:03.395" endtime="20201029 12:46:03.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033585014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033632694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:03.696" endtime="20201029 12:46:03.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.705" endtime="20201029 12:46:03.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.390" endtime="20201029 12:46:03.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.386" endtime="20201029 12:46:03.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:03.711" level="INFO">${PHILIP_RES} = [{'diff': 4.7679999999994394e-05}, {'diff': 4.730500000000443e-05}, {'diff': 4.722199999999954e-05}, {'diff': 4.723599999999911e-05}, {'diff': 4.723599999999911e-05}, {'diff': 4.723599999999911e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:03.708" endtime="20201029 12:46:03.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:03.716" level="INFO">${RESULT} = {'diff': [4.7679999999994394e-05, 4.730500000000443e-05, 4.722199999999954e-05, 4.723599999999911e-05, 4.723599999999911e-05, 4.723599999999911e-05, 4.729099999999792e-05, 4.722199999999954e-05, 4.723...</msg>
<status status="PASS" starttime="20201029 12:46:03.712" endtime="20201029 12:46:03.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.720" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:03.719" endtime="20201029 12:46:03.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.723" level="INFO">VALUE: [4.7679999999994394e-05, 4.730500000000443e-05, 4.722199999999954e-05, 4.723599999999911e-05, 4.723599999999911e-05, 4.723599999999911e-05, 4.729099999999792e-05, 4.722199999999954e-05, 4.723599999999911e-05, 4.724999999999868e-05, 4.722199999999954e-05, 4.7194999999999876e-05, 4.722199999999954e-05, 4.724999999999868e-05, 4.726399999999825e-05, 4.724999999999868e-05, 4.724999999999868e-05, 4.7194999999999876e-05, 4.723599999999911e-05, 4.722199999999954e-05, 4.724999999999868e-05, 4.723599999999911e-05, 4.725000000000562e-05, 4.723599999999911e-05, 4.727799999999782e-05, 4.723600000000605e-05, 4.720799999999997e-05, 4.724999999999868e-05, 4.71669999999938e-05, 4.723599999999911e-05, 4.723599999999911e-05, 4.723600000000605e-05, 4.723599999999911e-05, 4.723599999999911e-05, 4.725000000000562e-05, 4.724999999999868e-05, 4.7153000000001166e-05, 4.726400000000519e-05, 4.722199999999954e-05, 4.726399999999825e-05, 4.723600000000605e-05, 4.726399999999825e-05, 4.723599999999911e-05, 4.723600000000605e-05, 4.723599999999911e-05, 4.720799999999997e-05, 4.722199999999954e-05, 4.722199999999954e-05, 4.723599999999911e-05, 4.723599999999911e-05]</msg>
<status status="PASS" starttime="20201029 12:46:03.721" endtime="20201029 12:46:03.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.717" endtime="20201029 12:46:03.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.339" endtime="20201029 12:46:03.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.307" endtime="20201029 12:46:03.725"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:03.727" endtime="20201029 12:46:03.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.726" endtime="20201029 12:46:03.747"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.755" endtime="20201029 12:46:03.768"></status>
</kw>
<msg timestamp="20201029 12:46:03.768" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:03.753" endtime="20201029 12:46:03.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.771" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:03.769" endtime="20201029 12:46:03.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.772" endtime="20201029 12:46:03.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.751" endtime="20201029 12:46:03.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.749" endtime="20201029 12:46:03.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.781" endtime="20201029 12:46:04.069"></status>
</kw>
<msg timestamp="20201029 12:46:04.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017267097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017316889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:03.779" endtime="20201029 12:46:04.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017267097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017316889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:04.073" endtime="20201029 12:46:04.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.082" endtime="20201029 12:46:04.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.777" endtime="20201029 12:46:04.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.775" endtime="20201029 12:46:04.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:04.088" level="INFO">${PHILIP_RES} = [{'diff': 4.979199999999989e-05}, {'diff': 4.93469999999982e-05}, {'diff': 4.93330000000021e-05}, {'diff': 4.93339999999981e-05}, {'diff': 4.93330000000021e-05}, {'diff': 4.93469999999982e-05}, {'diff...</msg>
<status status="PASS" starttime="20201029 12:46:04.085" endtime="20201029 12:46:04.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:04.093" level="INFO">${RESULT} = {'diff': [4.979199999999989e-05, 4.93469999999982e-05, 4.93330000000021e-05, 4.93339999999981e-05, 4.93330000000021e-05, 4.93469999999982e-05, 4.934700000000167e-05, 4.93469999999982e-05, 4.9361000000...</msg>
<status status="PASS" starttime="20201029 12:46:04.089" endtime="20201029 12:46:04.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.097" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:04.096" endtime="20201029 12:46:04.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.099" level="INFO">VALUE: [4.979199999999989e-05, 4.93469999999982e-05, 4.93330000000021e-05, 4.93339999999981e-05, 4.93330000000021e-05, 4.93469999999982e-05, 4.934700000000167e-05, 4.93469999999982e-05, 4.936100000000124e-05, 4.933299999999863e-05, 4.933400000000157e-05, 4.937499999999734e-05, 4.933400000000157e-05, 4.930599999999896e-05, 4.933400000000157e-05, 4.93469999999982e-05, 4.934800000000114e-05, 4.93469999999982e-05, 4.93339999999981e-05, 4.930499999999949e-05, 4.936100000000124e-05, 4.931899999999906e-05, 4.93469999999982e-05, 4.936100000000124e-05, 4.931999999999853e-05, 4.937500000000081e-05, 4.933299999999863e-05, 4.934700000000167e-05, 4.937500000000081e-05, 4.934700000000167e-05, 4.936099999999777e-05, 4.93330000000021e-05, 4.933299999999863e-05, 4.934800000000114e-05, 4.93469999999982e-05, 4.933400000000157e-05, 4.936099999999777e-05, 4.934800000000114e-05, 4.93469999999982e-05, 4.936200000000071e-05, 4.93469999999982e-05, 4.933400000000157e-05, 4.93469999999982e-05, 4.936100000000124e-05, 4.936100000000124e-05, 4.933299999999863e-05, 4.934700000000167e-05, 4.936100000000124e-05, 4.933299999999863e-05, 4.933299999999863e-05]</msg>
<status status="PASS" starttime="20201029 12:46:04.098" endtime="20201029 12:46:04.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.093" endtime="20201029 12:46:04.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.748" endtime="20201029 12:46:04.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.725" endtime="20201029 12:46:04.101"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:04.103" endtime="20201029 12:46:04.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.102" endtime="20201029 12:46:04.123"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.131" endtime="20201029 12:46:04.145"></status>
</kw>
<msg timestamp="20201029 12:46:04.145" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.130" endtime="20201029 12:46:04.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.148" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.146" endtime="20201029 12:46:04.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.149" endtime="20201029 12:46:04.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.127" endtime="20201029 12:46:04.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.125" endtime="20201029 12:46:04.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.158" endtime="20201029 12:46:04.457"></status>
</kw>
<msg timestamp="20201029 12:46:04.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017298208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017350139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:04.157" endtime="20201029 12:46:04.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017298208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017350139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:04.461" endtime="20201029 12:46:04.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.470" endtime="20201029 12:46:04.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.154" endtime="20201029 12:46:04.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.153" endtime="20201029 12:46:04.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:04.476" level="INFO">${PHILIP_RES} = [{'diff': 5.193100000000159e-05}, {'diff': 5.149999999999946e-05}, {'diff': 5.154199999999817e-05}, {'diff': 5.147200000000032e-05}, {'diff': 5.145800000000075e-05}, {'diff': 5.148599999999989e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:04.473" endtime="20201029 12:46:04.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:04.480" level="INFO">${RESULT} = {'diff': [5.193100000000159e-05, 5.149999999999946e-05, 5.154199999999817e-05, 5.147200000000032e-05, 5.145800000000075e-05, 5.148599999999989e-05, 5.149999999999946e-05, 5.140300000000195e-05, 5.1485...</msg>
<status status="PASS" starttime="20201029 12:46:04.477" endtime="20201029 12:46:04.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.484" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:04.483" endtime="20201029 12:46:04.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.487" level="INFO">VALUE: [5.193100000000159e-05, 5.149999999999946e-05, 5.154199999999817e-05, 5.147200000000032e-05, 5.145800000000075e-05, 5.148599999999989e-05, 5.149999999999946e-05, 5.140300000000195e-05, 5.148599999999989e-05, 5.154200000000164e-05, 5.147200000000032e-05, 5.145800000000075e-05, 5.1471999999996854e-05, 5.147200000000032e-05, 5.147200000000032e-05, 5.144500000000066e-05, 5.148599999999989e-05, 5.147200000000032e-05, 5.145800000000075e-05, 5.148599999999989e-05, 5.147200000000032e-05, 5.145800000000075e-05, 5.152699999999913e-05, 5.14729999999998e-05, 5.150000000000293e-05, 5.145900000000023e-05, 5.147200000000032e-05, 5.15279999999986e-05, 5.150000000000293e-05, 5.145800000000075e-05, 5.147200000000032e-05, 5.148599999999989e-05, 5.148599999999989e-05, 5.149999999999946e-05, 5.1486999999999367e-05, 5.147200000000032e-05, 5.15140000000025e-05, 5.147200000000032e-05, 5.156900000000131e-05, 5.148599999999989e-05, 5.147200000000032e-05, 5.150000000000293e-05, 5.148599999999989e-05, 5.145900000000023e-05, 5.148599999999989e-05, 5.147200000000032e-05, 5.148599999999989e-05, 5.148599999999989e-05, 5.148599999999989e-05, 5.149999999999946e-05]</msg>
<status status="PASS" starttime="20201029 12:46:04.485" endtime="20201029 12:46:04.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.481" endtime="20201029 12:46:04.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.124" endtime="20201029 12:46:04.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.101" endtime="20201029 12:46:04.489"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:04.492" endtime="20201029 12:46:04.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.490" endtime="20201029 12:46:04.512"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.520" endtime="20201029 12:46:04.534"></status>
</kw>
<msg timestamp="20201029 12:46:04.535" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.518" endtime="20201029 12:46:04.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.537" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.536" endtime="20201029 12:46:04.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.538" endtime="20201029 12:46:04.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.516" endtime="20201029 12:46:04.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.514" endtime="20201029 12:46:04.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.548" endtime="20201029 12:46:04.835"></status>
</kw>
<msg timestamp="20201029 12:46:04.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017481681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017535792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:04.546" endtime="20201029 12:46:04.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017481681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017535792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:04.839" endtime="20201029 12:46:04.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.847" endtime="20201029 12:46:04.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.543" endtime="20201029 12:46:04.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.541" endtime="20201029 12:46:04.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:04.854" level="INFO">${PHILIP_RES} = [{'diff': 5.411100000000252e-05}, {'diff': 5.366699999999683e-05}, {'diff': 5.363900000000116e-05}, {'diff': 5.363900000000116e-05}, {'diff': 5.36670000000003e-05}, {'diff': 5.363900000000116e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:04.851" endtime="20201029 12:46:04.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:04.859" level="INFO">${RESULT} = {'diff': [5.411100000000252e-05, 5.366699999999683e-05, 5.363900000000116e-05, 5.363900000000116e-05, 5.36670000000003e-05, 5.363900000000116e-05, 5.365300000000073e-05, 5.362499999999812e-05, 5.36530...</msg>
<status status="PASS" starttime="20201029 12:46:04.855" endtime="20201029 12:46:04.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.863" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:04.862" endtime="20201029 12:46:04.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.865" level="INFO">VALUE: [5.411100000000252e-05, 5.366699999999683e-05, 5.363900000000116e-05, 5.363900000000116e-05, 5.36670000000003e-05, 5.363900000000116e-05, 5.365300000000073e-05, 5.362499999999812e-05, 5.365300000000073e-05, 5.362500000000159e-05, 5.358399999999888e-05, 5.3693999999999964e-05, 5.363900000000116e-05, 5.3651999999997785e-05, 5.361099999999855e-05, 5.3680000000000394e-05, 5.362500000000159e-05, 5.3651999999997785e-05, 5.363900000000116e-05, 5.368099999999987e-05, 5.363899999999769e-05, 5.365300000000073e-05, 5.363900000000116e-05, 5.363899999999769e-05, 5.363900000000116e-05, 5.361099999999855e-05, 5.359699999999898e-05, 5.363900000000116e-05, 5.363900000000116e-05, 5.362499999999812e-05, 5.362500000000159e-05, 5.363900000000116e-05, 5.363899999999769e-05, 5.365300000000073e-05, 5.363900000000116e-05, 5.361099999999855e-05, 5.3707999999999534e-05, 5.3666000000000824e-05, 5.363899999999769e-05, 5.3652000000001254e-05, 5.363900000000116e-05, 5.3651999999997785e-05, 5.362499999999812e-05, 5.3638000000001684e-05, 5.362500000000159e-05, 5.359699999999898e-05, 5.368099999999987e-05, 5.362500000000159e-05, 5.356899999999984e-05, 5.363900000000116e-05]</msg>
<status status="PASS" starttime="20201029 12:46:04.864" endtime="20201029 12:46:04.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.860" endtime="20201029 12:46:04.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.512" endtime="20201029 12:46:04.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.490" endtime="20201029 12:46:04.867"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:04.870" endtime="20201029 12:46:04.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.868" endtime="20201029 12:46:04.890"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.898" endtime="20201029 12:46:04.911"></status>
</kw>
<msg timestamp="20201029 12:46:04.912" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.896" endtime="20201029 12:46:04.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.914" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.913" endtime="20201029 12:46:04.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.915" endtime="20201029 12:46:04.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.894" endtime="20201029 12:46:04.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.892" endtime="20201029 12:46:04.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.924" endtime="20201029 12:46:05.210"></status>
</kw>
<msg timestamp="20201029 12:46:05.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017737764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017794083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:04.922" endtime="20201029 12:46:05.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017737764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017794083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:05.215" endtime="20201029 12:46:05.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:05.223" endtime="20201029 12:46:05.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.920" endtime="20201029 12:46:05.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.918" endtime="20201029 12:46:05.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:05.229" level="INFO">${PHILIP_RES} = [{'diff': 5.631899999999912e-05}, {'diff': 5.583300000000166e-05}, {'diff': 5.583400000000113e-05}, {'diff': 5.580600000000199e-05}, {'diff': 5.583400000000113e-05}, {'diff': 5.583300000000166e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:05.226" endtime="20201029 12:46:05.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:05.233" level="INFO">${RESULT} = {'diff': [5.631899999999912e-05, 5.583300000000166e-05, 5.583400000000113e-05, 5.580600000000199e-05, 5.583400000000113e-05, 5.583300000000166e-05, 5.583300000000166e-05, 5.583300000000166e-05, 5.5875...</msg>
<status status="PASS" starttime="20201029 12:46:05.230" endtime="20201029 12:46:05.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.238" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:05.236" endtime="20201029 12:46:05.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.240" level="INFO">VALUE: [5.631899999999912e-05, 5.583300000000166e-05, 5.583400000000113e-05, 5.580600000000199e-05, 5.583400000000113e-05, 5.583300000000166e-05, 5.583300000000166e-05, 5.583300000000166e-05, 5.587500000000037e-05, 5.5777999999999384e-05, 5.582000000000156e-05, 5.5777999999999384e-05, 5.583400000000113e-05, 5.583299999999819e-05, 5.584700000000123e-05, 5.583299999999819e-05, 5.583299999999819e-05, 5.583299999999819e-05, 5.583299999999819e-05, 5.583400000000113e-05, 5.583399999999766e-05, 5.583399999999766e-05, 5.583299999999819e-05, 5.583299999999819e-05, 5.581899999999862e-05, 5.583299999999819e-05, 5.583400000000113e-05, 5.583399999999766e-05, 5.581999999999809e-05, 5.586099999999733e-05, 5.583299999999819e-05, 5.583299999999819e-05, 5.583299999999819e-05, 5.5777999999999384e-05, 5.581899999999862e-05, 5.584700000000123e-05, 5.580600000000199e-05, 5.582000000000156e-05, 5.58480000000007e-05, 5.583400000000113e-05, 5.584700000000123e-05, 5.583300000000166e-05, 5.583300000000166e-05, 5.583300000000166e-05, 5.583300000000166e-05, 5.588899999999994e-05, 5.583400000000113e-05, 5.583300000000166e-05, 5.583300000000166e-05, 5.581900000000209e-05]</msg>
<status status="PASS" starttime="20201029 12:46:05.239" endtime="20201029 12:46:05.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.234" endtime="20201029 12:46:05.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.890" endtime="20201029 12:46:05.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.868" endtime="20201029 12:46:05.242"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:05.245" endtime="20201029 12:46:05.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.243" endtime="20201029 12:46:05.265"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:05.273" endtime="20201029 12:46:05.288"></status>
</kw>
<msg timestamp="20201029 12:46:05.288" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:05.271" endtime="20201029 12:46:05.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.291" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:05.289" endtime="20201029 12:46:05.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:05.292" endtime="20201029 12:46:05.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.269" endtime="20201029 12:46:05.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.267" endtime="20201029 12:46:05.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:05.302" endtime="20201029 12:46:05.588"></status>
</kw>
<msg timestamp="20201029 12:46:05.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017832486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017890972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:05.300" endtime="20201029 12:46:05.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017832486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017890972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:05.593" endtime="20201029 12:46:05.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:05.602" endtime="20201029 12:46:05.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.298" endtime="20201029 12:46:05.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.296" endtime="20201029 12:46:05.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:05.608" level="INFO">${PHILIP_RES} = [{'diff': 5.8485999999999955e-05}, {'diff': 5.80550000000013e-05}, {'diff': 5.8042000000001204e-05}, {'diff': 5.811100000000305e-05}, {'diff': 5.8027999999998164e-05}, {'diff': 5.805499999999783e-05},...</msg>
<status status="PASS" starttime="20201029 12:46:05.605" endtime="20201029 12:46:05.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:05.612" level="INFO">${RESULT} = {'diff': [5.8485999999999955e-05, 5.80550000000013e-05, 5.8042000000001204e-05, 5.811100000000305e-05, 5.8027999999998164e-05, 5.805499999999783e-05, 5.8041999999997734e-05, 5.8027999999998164e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:46:05.609" endtime="20201029 12:46:05.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.617" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:05.616" endtime="20201029 12:46:05.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.619" level="INFO">VALUE: [5.8485999999999955e-05, 5.80550000000013e-05, 5.8042000000001204e-05, 5.811100000000305e-05, 5.8027999999998164e-05, 5.805499999999783e-05, 5.8041999999997734e-05, 5.8027999999998164e-05, 5.809700000000001e-05, 5.8013999999998594e-05, 5.8027999999998164e-05, 5.8013999999998594e-05, 5.8041999999997734e-05, 5.813899999999872e-05, 5.8055999999997304e-05, 5.804099999999826e-05, 5.8055999999997304e-05, 5.804099999999826e-05, 5.8070000000000344e-05, 5.8013999999998594e-05, 5.8041999999997734e-05, 5.80689999999974e-05, 5.8056000000000774e-05, 5.805499999999783e-05, 5.8041999999997734e-05, 5.804099999999826e-05, 5.8055999999997304e-05, 5.804099999999826e-05, 5.8056000000000774e-05, 5.805499999999783e-05, 5.8056000000000774e-05, 5.809700000000001e-05, 5.8070000000000344e-05, 5.802700000000216e-05, 5.8056000000000774e-05, 5.8042000000001204e-05, 5.8028000000001634e-05, 5.8042000000001204e-05, 5.8042000000001204e-05, 5.8042000000001204e-05, 5.8042000000001204e-05, 5.8056000000000774e-05, 5.806900000000087e-05, 5.8056000000000774e-05, 5.80550000000013e-05, 5.797299999999936e-05, 5.80550000000013e-05, 5.8070000000000344e-05, 5.804100000000173e-05, 5.8028000000001634e-05]</msg>
<status status="PASS" starttime="20201029 12:46:05.618" endtime="20201029 12:46:05.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.613" endtime="20201029 12:46:05.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.265" endtime="20201029 12:46:05.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.242" endtime="20201029 12:46:05.622"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:05.624" endtime="20201029 12:46:05.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.623" endtime="20201029 12:46:05.644"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:05.652" endtime="20201029 12:46:05.667"></status>
</kw>
<msg timestamp="20201029 12:46:05.667" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:05.651" endtime="20201029 12:46:05.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.670" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:05.668" endtime="20201029 12:46:05.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:05.671" endtime="20201029 12:46:05.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.648" endtime="20201029 12:46:05.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.646" endtime="20201029 12:46:05.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:05.679" endtime="20201029 12:46:05.965"></status>
</kw>
<msg timestamp="20201029 12:46:05.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017642861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017703597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:05.678" endtime="20201029 12:46:05.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017642861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017703597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:05.969" endtime="20201029 12:46:05.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:05.977" endtime="20201029 12:46:05.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.675" endtime="20201029 12:46:05.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.674" endtime="20201029 12:46:05.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:05.984" level="INFO">${PHILIP_RES} = [{'diff': 6.0736000000002205e-05}, {'diff': 6.029100000000051e-05}, {'diff': 6.031900000000312e-05}, {'diff': 6.026300000000137e-05}, {'diff': 6.030500000000008e-05}, {'diff': 6.030500000000008e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:05.981" endtime="20201029 12:46:05.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:05.989" level="INFO">${RESULT} = {'diff': [6.0736000000002205e-05, 6.029100000000051e-05, 6.031900000000312e-05, 6.026300000000137e-05, 6.030500000000008e-05, 6.030500000000008e-05, 6.026300000000137e-05, 6.030500000000008e-05, 6.031...</msg>
<status status="PASS" starttime="20201029 12:46:05.985" endtime="20201029 12:46:05.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.993" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:05.992" endtime="20201029 12:46:05.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.996" level="INFO">VALUE: [6.0736000000002205e-05, 6.029100000000051e-05, 6.031900000000312e-05, 6.026300000000137e-05, 6.030500000000008e-05, 6.030500000000008e-05, 6.026300000000137e-05, 6.030500000000008e-05, 6.031900000000312e-05, 6.029099999999704e-05, 6.030500000000008e-05, 6.027700000000094e-05, 6.031899999999965e-05, 6.030500000000008e-05, 6.031899999999965e-05, 6.0291999999999984e-05, 6.030500000000008e-05, 6.027700000000094e-05, 6.0222000000002135e-05, 6.029100000000051e-05, 6.0264000000000845e-05, 6.027700000000094e-05, 6.0235999999998235e-05, 6.031899999999965e-05, 6.030500000000008e-05, 6.0264000000000845e-05, 6.029100000000051e-05, 6.030500000000008e-05, 6.029100000000051e-05, 6.030500000000008e-05, 6.0305999999999554e-05, 6.029100000000051e-05, 6.030500000000008e-05, 6.034700000000226e-05, 6.029100000000051e-05, 6.030500000000008e-05, 6.029099999999704e-05, 6.031899999999965e-05, 6.0291999999999984e-05, 6.030500000000008e-05, 6.0319999999999124e-05, 6.0278000000000415e-05, 6.0306000000003024e-05, 6.0305999999999554e-05, 6.0291999999999984e-05, 6.0291999999999984e-05, 6.0291999999999984e-05, 6.0278000000000415e-05, 6.0278000000000415e-05, 6.0291999999999984e-05]</msg>
<status status="PASS" starttime="20201029 12:46:05.994" endtime="20201029 12:46:05.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.990" endtime="20201029 12:46:05.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.644" endtime="20201029 12:46:05.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.622" endtime="20201029 12:46:05.998"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:06.000" endtime="20201029 12:46:06.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.999" endtime="20201029 12:46:06.020"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.028" endtime="20201029 12:46:06.042"></status>
</kw>
<msg timestamp="20201029 12:46:06.042" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.026" endtime="20201029 12:46:06.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.045" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.043" endtime="20201029 12:46:06.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.046" endtime="20201029 12:46:06.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.024" endtime="20201029 12:46:06.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.022" endtime="20201029 12:46:06.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.055" endtime="20201029 12:46:06.342"></status>
</kw>
<msg timestamp="20201029 12:46:06.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017407472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0174705, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:06.053" endtime="20201029 12:46:06.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017407472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0174705, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:06.346" endtime="20201029 12:46:06.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.354" endtime="20201029 12:46:06.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.051" endtime="20201029 12:46:06.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.049" endtime="20201029 12:46:06.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:06.361" level="INFO">${PHILIP_RES} = [{'diff': 6.30279999999997e-05}, {'diff': 6.255499999999886e-05}, {'diff': 6.258300000000147e-05}, {'diff': 6.258399999999747e-05}, {'diff': 6.254199999999877e-05}, {'diff': 6.258300000000147e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:06.358" endtime="20201029 12:46:06.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:06.365" level="INFO">${RESULT} = {'diff': [6.30279999999997e-05, 6.255499999999886e-05, 6.258300000000147e-05, 6.258399999999747e-05, 6.254199999999877e-05, 6.258300000000147e-05, 6.254099999999929e-05, 6.25690000000019e-05, 6.256999...</msg>
<status status="PASS" starttime="20201029 12:46:06.362" endtime="20201029 12:46:06.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.369" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:06.368" endtime="20201029 12:46:06.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.371" level="INFO">VALUE: [6.30279999999997e-05, 6.255499999999886e-05, 6.258300000000147e-05, 6.258399999999747e-05, 6.254199999999877e-05, 6.258300000000147e-05, 6.254099999999929e-05, 6.25690000000019e-05, 6.25699999999979e-05, 6.25560000000018e-05, 6.255599999999834e-05, 6.25690000000019e-05, 6.258300000000147e-05, 6.255599999999834e-05, 6.257000000000137e-05, 6.25699999999979e-05, 6.25560000000018e-05, 6.254099999999929e-05, 6.25690000000019e-05, 6.2582999999998e-05, 6.262500000000018e-05, 6.258400000000094e-05, 6.255599999999834e-05, 6.258300000000147e-05, 6.255499999999886e-05, 6.257000000000137e-05, 6.25699999999979e-05, 6.257000000000137e-05, 6.259700000000104e-05, 6.255499999999886e-05, 6.254100000000276e-05, 6.255599999999834e-05, 6.257000000000137e-05, 6.254199999999877e-05, 6.25279999999992e-05, 6.256899999999843e-05, 6.254199999999877e-05, 6.262500000000018e-05, 6.25699999999979e-05, 6.25690000000019e-05, 6.255499999999886e-05, 6.258300000000147e-05, 6.255599999999834e-05, 6.262500000000018e-05, 6.25140000000031e-05, 6.256899999999843e-05, 6.258300000000147e-05, 6.255499999999886e-05, 6.258300000000147e-05, 6.254199999999877e-05]</msg>
<status status="PASS" starttime="20201029 12:46:06.370" endtime="20201029 12:46:06.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.366" endtime="20201029 12:46:06.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.020" endtime="20201029 12:46:06.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.998" endtime="20201029 12:46:06.373"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:06.376" endtime="20201029 12:46:06.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.374" endtime="20201029 12:46:06.396"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.404" endtime="20201029 12:46:06.419"></status>
</kw>
<msg timestamp="20201029 12:46:06.420" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.402" endtime="20201029 12:46:06.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.422" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.421" endtime="20201029 12:46:06.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.423" endtime="20201029 12:46:06.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.400" endtime="20201029 12:46:06.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.398" endtime="20201029 12:46:06.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.433" endtime="20201029 12:46:06.719"></status>
</kw>
<msg timestamp="20201029 12:46:06.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017949708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018015042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:06.432" endtime="20201029 12:46:06.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017949708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018015042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:06.723" endtime="20201029 12:46:06.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.731" endtime="20201029 12:46:06.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.429" endtime="20201029 12:46:06.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.427" endtime="20201029 12:46:06.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:06.738" level="INFO">${PHILIP_RES} = [{'diff': 6.533399999999676e-05}, {'diff': 6.487500000000243e-05}, {'diff': 6.487499999999896e-05}, {'diff': 6.488899999999853e-05}, {'diff': 6.487499999999896e-05}, {'diff': 6.486099999999939e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:06.735" endtime="20201029 12:46:06.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:06.742" level="INFO">${RESULT} = {'diff': [6.533399999999676e-05, 6.487500000000243e-05, 6.487499999999896e-05, 6.488899999999853e-05, 6.487499999999896e-05, 6.486099999999939e-05, 6.484699999999982e-05, 6.4889000000002e-05, 6.486099...</msg>
<status status="PASS" starttime="20201029 12:46:06.739" endtime="20201029 12:46:06.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.746" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:06.745" endtime="20201029 12:46:06.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.749" level="INFO">VALUE: [6.533399999999676e-05, 6.487500000000243e-05, 6.487499999999896e-05, 6.488899999999853e-05, 6.487499999999896e-05, 6.486099999999939e-05, 6.484699999999982e-05, 6.4889000000002e-05, 6.486099999999939e-05, 6.491699999999767e-05, 6.481900000000068e-05, 6.488899999999853e-05, 6.486099999999939e-05, 6.4889000000002e-05, 6.487499999999896e-05, 6.480500000000111e-05, 6.48479999999993e-05, 6.486099999999939e-05, 6.488899999999853e-05, 6.494500000000028e-05, 6.487499999999896e-05, 6.486199999999887e-05, 6.483399999999973e-05, 6.486100000000286e-05, 6.487499999999896e-05, 6.486099999999939e-05, 6.487499999999896e-05, 6.486099999999939e-05, 6.487499999999896e-05, 6.486099999999939e-05, 6.486099999999939e-05, 6.48479999999993e-05, 6.486099999999939e-05, 6.487499999999896e-05, 6.486099999999939e-05, 6.488899999999853e-05, 6.487499999999896e-05, 6.486099999999939e-05, 6.481900000000068e-05, 6.486100000000286e-05, 6.488899999999853e-05, 6.488899999999853e-05, 6.486099999999939e-05, 6.487499999999896e-05, 6.487499999999896e-05, 6.48340000000032e-05, 6.486100000000286e-05, 6.487499999999896e-05, 6.486099999999939e-05, 6.481900000000068e-05]</msg>
<status status="PASS" starttime="20201029 12:46:06.747" endtime="20201029 12:46:06.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.743" endtime="20201029 12:46:06.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.396" endtime="20201029 12:46:06.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.374" endtime="20201029 12:46:06.751"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:06.754" endtime="20201029 12:46:06.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.752" endtime="20201029 12:46:06.774"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.782" endtime="20201029 12:46:06.796"></status>
</kw>
<msg timestamp="20201029 12:46:06.797" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.780" endtime="20201029 12:46:06.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.799" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.798" endtime="20201029 12:46:06.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.800" endtime="20201029 12:46:06.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.778" endtime="20201029 12:46:06.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.776" endtime="20201029 12:46:06.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.809" endtime="20201029 12:46:07.095"></status>
</kw>
<msg timestamp="20201029 12:46:07.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017580903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017648542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:06.808" endtime="20201029 12:46:07.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017580903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017648542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:07.099" endtime="20201029 12:46:07.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.107" endtime="20201029 12:46:07.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.805" endtime="20201029 12:46:07.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.803" endtime="20201029 12:46:07.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:07.113" level="INFO">${PHILIP_RES} = [{'diff': 6.763900000000128e-05}, {'diff': 6.720800000000263e-05}, {'diff': 6.719500000000253e-05}, {'diff': 6.72090000000021e-05}, {'diff': 6.718099999999949e-05}, {'diff': 6.72640000000009e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:07.110" endtime="20201029 12:46:07.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:07.118" level="INFO">${RESULT} = {'diff': [6.763900000000128e-05, 6.720800000000263e-05, 6.719500000000253e-05, 6.72090000000021e-05, 6.718099999999949e-05, 6.72640000000009e-05, 6.72090000000021e-05, 6.719499999999906e-05, 6.7193999...</msg>
<status status="PASS" starttime="20201029 12:46:07.114" endtime="20201029 12:46:07.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.123" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:07.122" endtime="20201029 12:46:07.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.125" level="INFO">VALUE: [6.763900000000128e-05, 6.720800000000263e-05, 6.719500000000253e-05, 6.72090000000021e-05, 6.718099999999949e-05, 6.72640000000009e-05, 6.72090000000021e-05, 6.719499999999906e-05, 6.719399999999959e-05, 6.720799999999916e-05, 6.718000000000002e-05, 6.713799999999784e-05, 6.722199999999873e-05, 6.718000000000002e-05, 6.718000000000002e-05, 6.713900000000078e-05, 6.720799999999916e-05, 6.72359999999983e-05, 6.720799999999916e-05, 6.719399999999959e-05, 6.720899999999863e-05, 6.72359999999983e-05, 6.72229999999982e-05, 6.720899999999863e-05, 6.720899999999863e-05, 6.720899999999863e-05, 6.718000000000002e-05, 6.724999999999787e-05, 6.719399999999959e-05, 6.718000000000002e-05, 6.718000000000002e-05, 6.718000000000002e-05, 6.724999999999787e-05, 6.720799999999916e-05, 6.72359999999983e-05, 6.715300000000035e-05, 6.716699999999992e-05, 6.718099999999949e-05, 6.719500000000253e-05, 6.718100000000296e-05, 6.719499999999906e-05, 6.72090000000021e-05, 6.716699999999992e-05, 6.719500000000253e-05, 6.725000000000134e-05, 6.720800000000263e-05, 6.718099999999949e-05, 6.713799999999784e-05, 6.720800000000263e-05, 6.713899999999731e-05]</msg>
<status status="PASS" starttime="20201029 12:46:07.124" endtime="20201029 12:46:07.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.119" endtime="20201029 12:46:07.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.774" endtime="20201029 12:46:07.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.752" endtime="20201029 12:46:07.127"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:07.129" endtime="20201029 12:46:07.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.128" endtime="20201029 12:46:07.149"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.157" endtime="20201029 12:46:07.173"></status>
</kw>
<msg timestamp="20201029 12:46:07.173" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:07.155" endtime="20201029 12:46:07.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.176" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:07.174" endtime="20201029 12:46:07.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.177" endtime="20201029 12:46:07.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.153" endtime="20201029 12:46:07.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.151" endtime="20201029 12:46:07.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.186" endtime="20201029 12:46:07.474"></status>
</kw>
<msg timestamp="20201029 12:46:07.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017491083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017561125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:07.184" endtime="20201029 12:46:07.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017491083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017561125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:07.478" endtime="20201029 12:46:07.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.487" endtime="20201029 12:46:07.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.182" endtime="20201029 12:46:07.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.180" endtime="20201029 12:46:07.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:07.493" level="INFO">${PHILIP_RES} = [{'diff': 7.004199999999933e-05}, {'diff': 6.955499999999892e-05}, {'diff': 6.954199999999883e-05}, {'diff': 6.956899999999849e-05}, {'diff': 6.95559999999984e-05}, {'diff': 6.956899999999849e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:07.490" endtime="20201029 12:46:07.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:07.497" level="INFO">${RESULT} = {'diff': [7.004199999999933e-05, 6.955499999999892e-05, 6.954199999999883e-05, 6.956899999999849e-05, 6.95559999999984e-05, 6.956899999999849e-05, 6.95559999999984e-05, 6.958299999999806e-05, 6.954199...</msg>
<status status="PASS" starttime="20201029 12:46:07.494" endtime="20201029 12:46:07.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.502" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:07.501" endtime="20201029 12:46:07.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.504" level="INFO">VALUE: [7.004199999999933e-05, 6.955499999999892e-05, 6.954199999999883e-05, 6.956899999999849e-05, 6.95559999999984e-05, 6.956899999999849e-05, 6.95559999999984e-05, 6.958299999999806e-05, 6.954199999999883e-05, 6.962499999999677e-05, 6.957000000000144e-05, 6.950000000000012e-05, 6.955600000000187e-05, 6.961100000000067e-05, 6.95420000000023e-05, 6.955600000000187e-05, 6.956900000000196e-05, 6.962500000000024e-05, 6.956900000000196e-05, 6.955600000000187e-05, 6.955500000000239e-05, 6.955600000000187e-05, 6.954100000000282e-05, 6.95559999999984e-05, 6.958300000000153e-05, 6.95559999999984e-05, 6.962500000000024e-05, 6.95559999999984e-05, 6.95559999999984e-05, 6.955499999999892e-05, 6.959699999999763e-05, 6.955499999999892e-05, 6.954199999999883e-05, 6.954099999999935e-05, 6.95559999999984e-05, 6.954099999999935e-05, 6.95559999999984e-05, 6.955499999999892e-05, 6.948600000000055e-05, 6.954099999999935e-05, 6.95420000000023e-05, 6.952699999999978e-05, 6.959800000000058e-05, 6.956900000000196e-05, 6.956900000000196e-05, 6.955600000000187e-05, 6.956900000000196e-05, 6.954199999999883e-05, 6.956900000000196e-05, 6.955600000000187e-05]</msg>
<status status="PASS" starttime="20201029 12:46:07.503" endtime="20201029 12:46:07.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.498" endtime="20201029 12:46:07.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.150" endtime="20201029 12:46:07.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.127" endtime="20201029 12:46:07.506"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:07.508" endtime="20201029 12:46:07.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.507" endtime="20201029 12:46:07.528"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.536" endtime="20201029 12:46:07.552"></status>
</kw>
<msg timestamp="20201029 12:46:07.553" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:07.534" endtime="20201029 12:46:07.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.555" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:07.554" endtime="20201029 12:46:07.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.556" endtime="20201029 12:46:07.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.532" endtime="20201029 12:46:07.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.530" endtime="20201029 12:46:07.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.566" endtime="20201029 12:46:07.852"></status>
</kw>
<msg timestamp="20201029 12:46:07.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017584722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017657125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:07.564" endtime="20201029 12:46:07.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017584722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017657125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:07.856" endtime="20201029 12:46:07.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.864" endtime="20201029 12:46:07.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.562" endtime="20201029 12:46:07.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.560" endtime="20201029 12:46:07.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:07.871" level="INFO">${PHILIP_RES} = [{'diff': 7.240299999999866e-05}, {'diff': 7.194400000000087e-05}, {'diff': 7.187499999999902e-05}, {'diff': 7.197200000000001e-05}, {'diff': 7.193100000000077e-05}, {'diff': 7.194400000000087e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:07.868" endtime="20201029 12:46:07.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:07.875" level="INFO">${RESULT} = {'diff': [7.240299999999866e-05, 7.194400000000087e-05, 7.187499999999902e-05, 7.197200000000001e-05, 7.193100000000077e-05, 7.194400000000087e-05, 7.199999999999915e-05, 7.194400000000087e-05, 7.1903...</msg>
<status status="PASS" starttime="20201029 12:46:07.872" endtime="20201029 12:46:07.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.879" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:07.878" endtime="20201029 12:46:07.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.882" level="INFO">VALUE: [7.240299999999866e-05, 7.194400000000087e-05, 7.187499999999902e-05, 7.197200000000001e-05, 7.193100000000077e-05, 7.194400000000087e-05, 7.199999999999915e-05, 7.194400000000087e-05, 7.190300000000163e-05, 7.19170000000012e-05, 7.194500000000034e-05, 7.192999999999783e-05, 7.197200000000001e-05, 7.187499999999902e-05, 7.191699999999773e-05, 7.194500000000034e-05, 7.191600000000173e-05, 7.199999999999915e-05, 7.194400000000087e-05, 7.19439999999974e-05, 7.19170000000012e-05, 7.195899999999991e-05, 7.187499999999902e-05, 7.19439999999974e-05, 7.191600000000173e-05, 7.201399999999872e-05, 7.195899999999991e-05, 7.194499999999687e-05, 7.194400000000087e-05, 7.19300000000013e-05, 7.194400000000087e-05, 7.188899999999859e-05, 7.19170000000012e-05, 7.194500000000034e-05, 7.195800000000044e-05, 7.191599999999826e-05, 7.191699999999773e-05, 7.193100000000077e-05, 7.193100000000077e-05, 7.19309999999973e-05, 7.192999999999783e-05, 7.194400000000087e-05, 7.19300000000013e-05, 7.194500000000034e-05, 7.191699999999773e-05, 7.195800000000044e-05, 7.198599999999958e-05, 7.195800000000044e-05, 7.192999999999783e-05, 7.194500000000034e-05]</msg>
<status status="PASS" starttime="20201029 12:46:07.880" endtime="20201029 12:46:07.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.876" endtime="20201029 12:46:07.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.529" endtime="20201029 12:46:07.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.506" endtime="20201029 12:46:07.884"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:07.886" endtime="20201029 12:46:07.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.885" endtime="20201029 12:46:07.906"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.914" endtime="20201029 12:46:07.931"></status>
</kw>
<msg timestamp="20201029 12:46:07.931" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:07.913" endtime="20201029 12:46:07.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.933" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:07.932" endtime="20201029 12:46:07.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.934" endtime="20201029 12:46:07.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.910" endtime="20201029 12:46:07.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.908" endtime="20201029 12:46:07.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.943" endtime="20201029 12:46:08.229"></status>
</kw>
<msg timestamp="20201029 12:46:08.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017404819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017479611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:07.942" endtime="20201029 12:46:08.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017404819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017479611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:08.233" endtime="20201029 12:46:08.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.241" endtime="20201029 12:46:08.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.939" endtime="20201029 12:46:08.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.938" endtime="20201029 12:46:08.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:08.248" level="INFO">${PHILIP_RES} = [{'diff': 7.479200000000061e-05}, {'diff': 7.434699999999891e-05}, {'diff': 7.441700000000023e-05}, {'diff': 7.43050000000002e-05}, {'diff': 7.436100000000195e-05}, {'diff': 7.438900000000109e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:08.244" endtime="20201029 12:46:08.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:08.253" level="INFO">${RESULT} = {'diff': [7.479200000000061e-05, 7.434699999999891e-05, 7.441700000000023e-05, 7.43050000000002e-05, 7.436100000000195e-05, 7.438900000000109e-05, 7.436100000000195e-05, 7.427799999999707e-05, 7.43609...</msg>
<status status="PASS" starttime="20201029 12:46:08.249" endtime="20201029 12:46:08.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.257" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:08.256" endtime="20201029 12:46:08.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.259" level="INFO">VALUE: [7.479200000000061e-05, 7.434699999999891e-05, 7.441700000000023e-05, 7.43050000000002e-05, 7.436100000000195e-05, 7.438900000000109e-05, 7.436100000000195e-05, 7.427799999999707e-05, 7.436099999999848e-05, 7.436099999999848e-05, 7.436100000000195e-05, 7.43050000000002e-05, 7.436100000000195e-05, 7.434699999999891e-05, 7.434699999999891e-05, 7.433299999999934e-05, 7.436100000000195e-05, 7.436099999999848e-05, 7.434700000000238e-05, 7.441600000000076e-05, 7.436099999999848e-05, 7.437500000000152e-05, 7.434699999999891e-05, 7.433399999999882e-05, 7.434700000000238e-05, 7.437500000000152e-05, 7.429200000000011e-05, 7.433400000000229e-05, 7.433399999999882e-05, 7.437499999999805e-05, 7.436200000000143e-05, 7.434799999999839e-05, 7.436099999999848e-05, 7.436100000000195e-05, 7.437499999999805e-05, 7.436099999999848e-05, 7.434700000000238e-05, 7.437499999999805e-05, 7.434699999999891e-05, 7.434700000000238e-05, 7.436099999999848e-05, 7.433299999999934e-05, 7.436100000000195e-05, 7.434699999999891e-05, 7.429100000000063e-05, 7.433300000000281e-05, 7.434699999999891e-05, 7.437499999999805e-05, 7.438900000000109e-05, 7.433299999999934e-05]</msg>
<status status="PASS" starttime="20201029 12:46:08.258" endtime="20201029 12:46:09.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.254" endtime="20201029 12:46:09.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.907" endtime="20201029 12:46:09.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.884" endtime="20201029 12:46:09.032"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:09.038" endtime="20201029 12:46:09.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.035" endtime="20201029 12:46:09.060"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.077" endtime="20201029 12:46:09.096"></status>
</kw>
<msg timestamp="20201029 12:46:09.097" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:09.074" endtime="20201029 12:46:09.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.102" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:09.099" endtime="20201029 12:46:09.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.104" endtime="20201029 12:46:09.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.068" endtime="20201029 12:46:09.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.064" endtime="20201029 12:46:09.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.123" endtime="20201029 12:46:09.414"></status>
</kw>
<msg timestamp="20201029 12:46:09.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029484903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029562153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:09.120" endtime="20201029 12:46:09.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029484903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029562153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:09.418" endtime="20201029 12:46:09.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.426" endtime="20201029 12:46:09.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.114" endtime="20201029 12:46:09.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.111" endtime="20201029 12:46:09.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:09.433" level="INFO">${PHILIP_RES} = [{'diff': 7.725000000000093e-05}, {'diff': 7.680600000000218e-05}, {'diff': 7.681999999999828e-05}, {'diff': 7.679199999999914e-05}, {'diff': 7.67770000000001e-05}, {'diff': 7.677799999999957e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:09.429" endtime="20201029 12:46:09.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:09.437" level="INFO">${RESULT} = {'diff': [7.725000000000093e-05, 7.680600000000218e-05, 7.681999999999828e-05, 7.679199999999914e-05, 7.67770000000001e-05, 7.677799999999957e-05, 7.682000000000175e-05, 7.679199999999914e-05, 7.67779...</msg>
<status status="PASS" starttime="20201029 12:46:09.434" endtime="20201029 12:46:09.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.441" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:09.440" endtime="20201029 12:46:09.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.443" level="INFO">VALUE: [7.725000000000093e-05, 7.680600000000218e-05, 7.681999999999828e-05, 7.679199999999914e-05, 7.67770000000001e-05, 7.677799999999957e-05, 7.682000000000175e-05, 7.679199999999914e-05, 7.677799999999957e-05, 7.672200000000129e-05, 7.675000000000043e-05, 7.680599999999871e-05, 7.677799999999957e-05, 7.680599999999871e-05, 7.677799999999957e-05, 7.680499999999923e-05, 7.679099999999967e-05, 7.683399999999785e-05, 7.686100000000445e-05, 7.68189999999988e-05, 7.679199999999914e-05, 7.680500000000617e-05, 7.683299999999837e-05, 7.679199999999914e-05, 7.677800000000651e-05, 7.675000000000043e-05, 7.679099999999967e-05, 7.680500000000617e-05, 7.679199999999914e-05, 7.679199999999914e-05, 7.679199999999914e-05, 7.677799999999957e-05, 7.679099999999967e-05, 7.683299999999837e-05, 7.677799999999957e-05, 7.677799999999957e-05, 7.679199999999914e-05, 7.677799999999957e-05, 7.672200000000129e-05, 7.684799999999742e-05, 7.677799999999957e-05, 7.6764e-05, 7.677799999999957e-05, 7.680500000000617e-05, 7.67770000000001e-05, 7.677799999999957e-05, 7.677800000000651e-05, 7.677799999999957e-05, 7.680499999999923e-05, 7.67910000000066e-05]</msg>
<status status="PASS" starttime="20201029 12:46:09.442" endtime="20201029 12:46:09.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.438" endtime="20201029 12:46:09.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.062" endtime="20201029 12:46:09.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.033" endtime="20201029 12:46:09.445"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:09.448" endtime="20201029 12:46:09.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.446" endtime="20201029 12:46:09.468"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.475" endtime="20201029 12:46:09.492"></status>
</kw>
<msg timestamp="20201029 12:46:09.493" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:09.474" endtime="20201029 12:46:09.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.495" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:09.494" endtime="20201029 12:46:09.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.496" endtime="20201029 12:46:09.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.471" endtime="20201029 12:46:09.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.469" endtime="20201029 12:46:09.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.506" endtime="20201029 12:46:09.789"></status>
</kw>
<msg timestamp="20201029 12:46:09.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017440069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017519778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:09.505" endtime="20201029 12:46:09.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017440069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017519778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:09.793" endtime="20201029 12:46:09.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.801" endtime="20201029 12:46:09.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.502" endtime="20201029 12:46:09.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.500" endtime="20201029 12:46:09.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:09.807" level="INFO">${PHILIP_RES} = [{'diff': 7.970900000000072e-05}, {'diff': 7.926299999999956e-05}, {'diff': 7.924999999999946e-05}, {'diff': 7.926399999999903e-05}, {'diff': 7.924999999999946e-05}, {'diff': 7.923599999999989e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:09.804" endtime="20201029 12:46:09.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:09.811" level="INFO">${RESULT} = {'diff': [7.970900000000072e-05, 7.926299999999956e-05, 7.924999999999946e-05, 7.926399999999903e-05, 7.924999999999946e-05, 7.923599999999989e-05, 7.926399999999903e-05, 7.923599999999989e-05, 7.9306...</msg>
<status status="PASS" starttime="20201029 12:46:09.808" endtime="20201029 12:46:09.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.816" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:09.815" endtime="20201029 12:46:09.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.818" level="INFO">VALUE: [7.970900000000072e-05, 7.926299999999956e-05, 7.924999999999946e-05, 7.926399999999903e-05, 7.924999999999946e-05, 7.923599999999989e-05, 7.926399999999903e-05, 7.923599999999989e-05, 7.930600000000121e-05, 7.92640000000025e-05, 7.92779999999986e-05, 7.924999999999946e-05, 7.924999999999946e-05, 7.924999999999946e-05, 7.927800000000207e-05, 7.92779999999986e-05, 7.924999999999946e-05, 7.926399999999903e-05, 7.926299999999956e-05, 7.92640000000025e-05, 7.923599999999989e-05, 7.92779999999986e-05, 7.933300000000088e-05, 7.92640000000025e-05, 7.924999999999946e-05, 7.922200000000032e-05, 7.927699999999913e-05, 7.930600000000121e-05, 7.923699999999936e-05, 7.927800000000207e-05, 7.923599999999989e-05, 7.926399999999903e-05, 7.924999999999946e-05, 7.923599999999989e-05, 7.92779999999986e-05, 7.929199999999817e-05, 7.920799999999728e-05, 7.924999999999946e-05, 7.92640000000025e-05, 7.919400000000118e-05, 7.926399999999903e-05, 7.924999999999946e-05, 7.930600000000121e-05, 7.926399999999903e-05, 7.924999999999946e-05, 7.926299999999956e-05, 7.92640000000025e-05, 7.925000000000293e-05, 7.929199999999817e-05, 7.926399999999903e-05]</msg>
<status status="PASS" starttime="20201029 12:46:09.817" endtime="20201029 12:46:09.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.812" endtime="20201029 12:46:09.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.468" endtime="20201029 12:46:09.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.445" endtime="20201029 12:46:09.821"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:09.823" endtime="20201029 12:46:09.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.822" endtime="20201029 12:46:09.843"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.851" endtime="20201029 12:46:09.868"></status>
</kw>
<msg timestamp="20201029 12:46:09.868" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:09.849" endtime="20201029 12:46:09.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.870" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:09.869" endtime="20201029 12:46:09.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.871" endtime="20201029 12:46:09.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.847" endtime="20201029 12:46:09.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.845" endtime="20201029 12:46:09.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.880" endtime="20201029 12:46:10.167"></status>
</kw>
<msg timestamp="20201029 12:46:10.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017511417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017593611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:09.879" endtime="20201029 12:46:10.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017511417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017593611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:10.171" endtime="20201029 12:46:10.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.179" endtime="20201029 12:46:10.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.876" endtime="20201029 12:46:10.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.875" endtime="20201029 12:46:10.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:10.185" level="INFO">${PHILIP_RES} = [{'diff': 8.219399999999724e-05}, {'diff': 8.176399999999806e-05}, {'diff': 8.169400000000021e-05}, {'diff': 8.174999999999849e-05}, {'diff': 8.174999999999849e-05}, {'diff': 8.175000000000196e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:10.182" endtime="20201029 12:46:10.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:10.190" level="INFO">${RESULT} = {'diff': [8.219399999999724e-05, 8.176399999999806e-05, 8.169400000000021e-05, 8.174999999999849e-05, 8.174999999999849e-05, 8.175000000000196e-05, 8.174999999999849e-05, 8.173599999999892e-05, 8.1791...</msg>
<status status="PASS" starttime="20201029 12:46:10.186" endtime="20201029 12:46:10.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.194" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:10.193" endtime="20201029 12:46:10.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.197" level="INFO">VALUE: [8.219399999999724e-05, 8.176399999999806e-05, 8.169400000000021e-05, 8.174999999999849e-05, 8.174999999999849e-05, 8.175000000000196e-05, 8.174999999999849e-05, 8.173599999999892e-05, 8.17910000000012e-05, 8.173599999999892e-05, 8.176400000000153e-05, 8.173700000000186e-05, 8.176299999999859e-05, 8.176400000000153e-05, 8.176400000000153e-05, 8.173599999999892e-05, 8.172199999999935e-05, 8.176400000000153e-05, 8.173599999999892e-05, 8.175000000000196e-05, 8.174999999999849e-05, 8.172299999999882e-05, 8.173600000000239e-05, 8.181900000000034e-05, 8.172299999999882e-05, 8.175000000000196e-05, 8.173599999999892e-05, 8.180600000000024e-05, 8.175000000000196e-05, 8.183400000000285e-05, 8.174999999999849e-05, 8.173600000000239e-05, 8.177799999999763e-05, 8.174999999999849e-05, 8.176400000000153e-05, 8.174999999999849e-05, 8.17910000000012e-05, 8.177699999999816e-05, 8.173599999999892e-05, 8.175000000000196e-05, 8.175000000000196e-05, 8.177799999999763e-05, 8.174999999999849e-05, 8.172199999999935e-05, 8.173599999999892e-05, 8.179200000000067e-05, 8.173599999999892e-05, 8.174999999999849e-05, 8.176400000000153e-05, 8.175000000000196e-05]</msg>
<status status="PASS" starttime="20201029 12:46:10.195" endtime="20201029 12:46:10.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.191" endtime="20201029 12:46:10.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.843" endtime="20201029 12:46:10.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.821" endtime="20201029 12:46:10.199"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:10.201" endtime="20201029 12:46:10.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.200" endtime="20201029 12:46:10.221"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.229" endtime="20201029 12:46:10.246"></status>
</kw>
<msg timestamp="20201029 12:46:10.246" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:10.227" endtime="20201029 12:46:10.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.249" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:10.247" endtime="20201029 12:46:10.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.250" endtime="20201029 12:46:10.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.225" endtime="20201029 12:46:10.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.223" endtime="20201029 12:46:10.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.259" endtime="20201029 12:46:10.546"></status>
</kw>
<msg timestamp="20201029 12:46:10.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017385306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017470014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:10.258" endtime="20201029 12:46:10.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017385306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017470014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:10.550" endtime="20201029 12:46:10.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.559" endtime="20201029 12:46:10.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.255" endtime="20201029 12:46:10.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.253" endtime="20201029 12:46:10.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:10.565" level="INFO">${PHILIP_RES} = [{'diff': 8.470799999999931e-05}, {'diff': 8.43049999999998e-05}, {'diff': 8.43049999999998e-05}, {'diff': 8.430599999999927e-05}, {'diff': 8.427800000000013e-05}, {'diff': 8.434800000000145e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:10.562" endtime="20201029 12:46:10.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:10.569" level="INFO">${RESULT} = {'diff': [8.470799999999931e-05, 8.43049999999998e-05, 8.43049999999998e-05, 8.430599999999927e-05, 8.427800000000013e-05, 8.434800000000145e-05, 8.429100000000023e-05, 8.427700000000066e-05, 8.426400...</msg>
<status status="PASS" starttime="20201029 12:46:10.566" endtime="20201029 12:46:10.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.574" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:10.573" endtime="20201029 12:46:10.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.576" level="INFO">VALUE: [8.470799999999931e-05, 8.43049999999998e-05, 8.43049999999998e-05, 8.430599999999927e-05, 8.427800000000013e-05, 8.434800000000145e-05, 8.429100000000023e-05, 8.427700000000066e-05, 8.426400000000056e-05, 8.42919999999997e-05, 8.430600000000274e-05, 8.42919999999997e-05, 8.427800000000013e-05, 8.427700000000066e-05, 8.431899999999937e-05, 8.426400000000056e-05, 8.42919999999997e-05, 8.427800000000013e-05, 8.43049999999998e-05, 8.43049999999998e-05, 8.42919999999997e-05, 8.42919999999997e-05, 8.429200000000317e-05, 8.427700000000066e-05, 8.427700000000066e-05, 8.427800000000013e-05, 8.430599999999927e-05, 8.42919999999997e-05, 8.427700000000066e-05, 8.429100000000023e-05, 8.425000000000099e-05, 8.427800000000013e-05, 8.426400000000056e-05, 8.427800000000013e-05, 8.429100000000023e-05, 8.429100000000023e-05, 8.427800000000013e-05, 8.427800000000013e-05, 8.427799999999666e-05, 8.429100000000023e-05, 8.429100000000023e-05, 8.42919999999997e-05, 8.427800000000013e-05, 8.427800000000013e-05, 8.426400000000056e-05, 8.426400000000056e-05, 8.424999999999752e-05, 8.427800000000013e-05, 8.425000000000099e-05, 8.426400000000056e-05]</msg>
<status status="PASS" starttime="20201029 12:46:10.575" endtime="20201029 12:46:10.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.570" endtime="20201029 12:46:10.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.221" endtime="20201029 12:46:10.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.199" endtime="20201029 12:46:10.578"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:10.580" endtime="20201029 12:46:10.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.579" endtime="20201029 12:46:10.600"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.608" endtime="20201029 12:46:10.626"></status>
</kw>
<msg timestamp="20201029 12:46:10.626" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:10.607" endtime="20201029 12:46:10.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.629" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:10.627" endtime="20201029 12:46:10.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.630" endtime="20201029 12:46:10.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.604" endtime="20201029 12:46:10.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.602" endtime="20201029 12:46:10.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.639" endtime="20201029 12:46:10.925"></status>
</kw>
<msg timestamp="20201029 12:46:10.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017676667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017763917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:10.638" endtime="20201029 12:46:10.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017676667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017763917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:10.929" endtime="20201029 12:46:10.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.937" endtime="20201029 12:46:10.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.635" endtime="20201029 12:46:10.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.634" endtime="20201029 12:46:10.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:10.944" level="INFO">${PHILIP_RES} = [{'diff': 8.725000000000052e-05}, {'diff': 8.687500000000015e-05}, {'diff': 8.681900000000187e-05}, {'diff': 8.683300000000144e-05}, {'diff': 8.683300000000144e-05}, {'diff': 8.687500000000015e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:10.941" endtime="20201029 12:46:10.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:10.948" level="INFO">${RESULT} = {'diff': [8.725000000000052e-05, 8.687500000000015e-05, 8.681900000000187e-05, 8.683300000000144e-05, 8.683300000000144e-05, 8.687500000000015e-05, 8.68059999999983e-05, 8.680600000000177e-05, 8.68050...</msg>
<status status="PASS" starttime="20201029 12:46:10.945" endtime="20201029 12:46:10.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.952" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:10.951" endtime="20201029 12:46:10.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.954" level="INFO">VALUE: [8.725000000000052e-05, 8.687500000000015e-05, 8.681900000000187e-05, 8.683300000000144e-05, 8.683300000000144e-05, 8.687500000000015e-05, 8.68059999999983e-05, 8.680600000000177e-05, 8.68050000000023e-05, 8.681900000000187e-05, 8.683299999999797e-05, 8.6847000000001e-05, 8.682000000000134e-05, 8.67920000000022e-05, 8.683300000000144e-05, 8.68189999999984e-05, 8.68189999999984e-05, 8.683299999999797e-05, 8.683300000000144e-05, 8.682000000000134e-05, 8.682000000000134e-05, 8.684800000000048e-05, 8.686100000000058e-05, 8.681900000000187e-05, 8.687500000000015e-05, 8.681900000000187e-05, 8.681999999999787e-05, 8.681999999999787e-05, 8.683300000000144e-05, 8.683300000000144e-05, 8.681900000000187e-05, 8.683300000000144e-05, 8.681999999999787e-05, 8.679199999999873e-05, 8.682000000000134e-05, 8.681900000000187e-05, 8.683300000000144e-05, 8.68189999999984e-05, 8.68189999999984e-05, 8.681900000000187e-05, 8.683400000000091e-05, 8.683400000000091e-05, 8.681999999999787e-05, 8.68189999999984e-05, 8.68189999999984e-05, 8.683300000000144e-05, 8.673699999999993e-05, 8.683400000000091e-05, 8.683400000000091e-05, 8.68059999999983e-05]</msg>
<status status="PASS" starttime="20201029 12:46:10.953" endtime="20201029 12:46:10.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.949" endtime="20201029 12:46:10.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.601" endtime="20201029 12:46:10.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.578" endtime="20201029 12:46:10.957"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:10.960" endtime="20201029 12:46:10.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.958" endtime="20201029 12:46:10.980"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.988" endtime="20201029 12:46:11.005"></status>
</kw>
<msg timestamp="20201029 12:46:11.005" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:10.986" endtime="20201029 12:46:11.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.008" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.006" endtime="20201029 12:46:11.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.009" endtime="20201029 12:46:11.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.983" endtime="20201029 12:46:11.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.982" endtime="20201029 12:46:11.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.018" endtime="20201029 12:46:11.303"></status>
</kw>
<msg timestamp="20201029 12:46:11.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017615472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017705333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:11.016" endtime="20201029 12:46:11.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017615472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017705333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:11.307" endtime="20201029 12:46:11.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.315" endtime="20201029 12:46:11.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.014" endtime="20201029 12:46:11.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.012" endtime="20201029 12:46:11.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:11.321" level="INFO">${PHILIP_RES} = [{'diff': 8.986100000000011e-05}, {'diff': 8.940300000000179e-05}, {'diff': 8.941599999999841e-05}, {'diff': 8.940199999999884e-05}, {'diff': 8.940199999999884e-05}, {'diff': 8.942999999999798e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:11.318" endtime="20201029 12:46:11.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:11.326" level="INFO">${RESULT} = {'diff': [8.986100000000011e-05, 8.940300000000179e-05, 8.941599999999841e-05, 8.940199999999884e-05, 8.940199999999884e-05, 8.942999999999798e-05, 8.941599999999841e-05, 8.940200000000231e-05, 8.9458...</msg>
<status status="PASS" starttime="20201029 12:46:11.322" endtime="20201029 12:46:11.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.331" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:11.330" endtime="20201029 12:46:11.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.333" level="INFO">VALUE: [8.986100000000011e-05, 8.940300000000179e-05, 8.941599999999841e-05, 8.940199999999884e-05, 8.940199999999884e-05, 8.942999999999798e-05, 8.941599999999841e-05, 8.940200000000231e-05, 8.945800000000059e-05, 8.943100000000093e-05, 8.941699999999789e-05, 8.940299999999832e-05, 8.938899999999875e-05, 8.941699999999789e-05, 8.941700000000136e-05, 8.945900000000007e-05, 8.940300000000179e-05, 8.943100000000093e-05, 8.945800000000059e-05, 8.940299999999832e-05, 8.941700000000136e-05, 8.942999999999798e-05, 8.938899999999875e-05, 8.945800000000059e-05, 8.940300000000179e-05, 8.940300000000179e-05, 8.938800000000274e-05, 8.940199999999884e-05, 8.941599999999841e-05, 8.941599999999841e-05, 8.941599999999841e-05, 8.941599999999841e-05, 8.940300000000179e-05, 8.943100000000093e-05, 8.940300000000179e-05, 8.940300000000179e-05, 8.941699999999789e-05, 8.941699999999789e-05, 8.94999999999993e-05, 8.936099999999961e-05, 8.940299999999832e-05, 8.947200000000016e-05, 8.940300000000179e-05, 8.941700000000136e-05, 8.940300000000179e-05, 8.934800000000298e-05, 8.940299999999832e-05, 8.940299999999832e-05, 8.942999999999798e-05, 8.941599999999841e-05]</msg>
<status status="PASS" starttime="20201029 12:46:11.332" endtime="20201029 12:46:11.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.327" endtime="20201029 12:46:11.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.980" endtime="20201029 12:46:11.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.958" endtime="20201029 12:46:11.335"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:11.338" endtime="20201029 12:46:11.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.336" endtime="20201029 12:46:11.358"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.366" endtime="20201029 12:46:11.384"></status>
</kw>
<msg timestamp="20201029 12:46:11.385" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.364" endtime="20201029 12:46:11.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.387" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.386" endtime="20201029 12:46:11.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.388" endtime="20201029 12:46:11.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.362" endtime="20201029 12:46:11.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.360" endtime="20201029 12:46:11.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.397" endtime="20201029 12:46:11.686"></status>
</kw>
<msg timestamp="20201029 12:46:11.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0175125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017604986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:11.395" endtime="20201029 12:46:11.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0175125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017604986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:11.690" endtime="20201029 12:46:11.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.698" endtime="20201029 12:46:11.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.393" endtime="20201029 12:46:11.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.391" endtime="20201029 12:46:11.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:11.704" level="INFO">${PHILIP_RES} = [{'diff': 9.248599999999926e-05}, {'diff': 9.202800000000094e-05}, {'diff': 9.201299999999843e-05}, {'diff': 9.198599999999876e-05}, {'diff': 9.199999999999833e-05}, {'diff': 9.20139999999979e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:11.701" endtime="20201029 12:46:11.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:11.708" level="INFO">${RESULT} = {'diff': [9.248599999999926e-05, 9.202800000000094e-05, 9.201299999999843e-05, 9.198599999999876e-05, 9.199999999999833e-05, 9.20139999999979e-05, 9.202800000000094e-05, 9.20000000000018e-05, 9.201400...</msg>
<status status="PASS" starttime="20201029 12:46:11.705" endtime="20201029 12:46:11.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.713" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:11.712" endtime="20201029 12:46:11.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.715" level="INFO">VALUE: [9.248599999999926e-05, 9.202800000000094e-05, 9.201299999999843e-05, 9.198599999999876e-05, 9.199999999999833e-05, 9.20139999999979e-05, 9.202800000000094e-05, 9.20000000000018e-05, 9.201400000000137e-05, 9.193099999999996e-05, 9.199999999999833e-05, 9.202799999999747e-05, 9.204199999999704e-05, 9.2026999999998e-05, 9.204200000000051e-05, 9.20000000000018e-05, 9.201400000000137e-05, 9.208299999999975e-05, 9.199999999999833e-05, 9.199999999999833e-05, 9.20139999999979e-05, 9.199999999999833e-05, 9.201400000000137e-05, 9.20000000000018e-05, 9.201400000000137e-05, 9.201400000000137e-05, 9.202800000000094e-05, 9.199999999999833e-05, 9.199999999999833e-05, 9.208400000000269e-05, 9.193099999999996e-05, 9.20000000000018e-05, 9.20000000000018e-05, 9.201400000000137e-05, 9.201299999999843e-05, 9.20139999999979e-05, 9.201299999999843e-05, 9.201400000000137e-05, 9.199999999999833e-05, 9.201400000000137e-05, 9.201400000000137e-05, 9.201400000000137e-05, 9.202800000000094e-05, 9.20139999999979e-05, 9.20139999999979e-05, 9.199999999999833e-05, 9.201400000000137e-05, 9.201400000000137e-05, 9.198600000000223e-05, 9.20000000000018e-05]</msg>
<status status="PASS" starttime="20201029 12:46:11.714" endtime="20201029 12:46:11.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.709" endtime="20201029 12:46:11.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.359" endtime="20201029 12:46:11.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.336" endtime="20201029 12:46:11.717"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:11.720" endtime="20201029 12:46:11.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.718" endtime="20201029 12:46:11.740"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.752" endtime="20201029 12:46:11.771"></status>
</kw>
<msg timestamp="20201029 12:46:11.772" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.750" endtime="20201029 12:46:11.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.774" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.773" endtime="20201029 12:46:11.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.775" endtime="20201029 12:46:11.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.745" endtime="20201029 12:46:11.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.742" endtime="20201029 12:46:11.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.785" endtime="20201029 12:46:12.090"></status>
</kw>
<msg timestamp="20201029 12:46:12.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022766958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022862056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:11.784" endtime="20201029 12:46:12.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022766958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022862056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:12.094" endtime="20201029 12:46:12.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.102" endtime="20201029 12:46:12.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.781" endtime="20201029 12:46:12.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.779" endtime="20201029 12:46:12.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:12.108" level="INFO">${PHILIP_RES} = [{'diff': 9.509799999999832e-05}, {'diff': 9.466699999999967e-05}, {'diff': 9.46660000000002e-05}, {'diff': 9.465200000000062e-05}, {'diff': 9.466699999999967e-05}, {'diff': 9.46530000000001e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:12.105" endtime="20201029 12:46:12.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:12.112" level="INFO">${RESULT} = {'diff': [9.509799999999832e-05, 9.466699999999967e-05, 9.46660000000002e-05, 9.465200000000062e-05, 9.466699999999967e-05, 9.46530000000001e-05, 9.46530000000001e-05, 9.462500000000096e-05, 9.4666000...</msg>
<status status="PASS" starttime="20201029 12:46:12.109" endtime="20201029 12:46:12.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.116" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:12.115" endtime="20201029 12:46:12.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.119" level="INFO">VALUE: [9.509799999999832e-05, 9.466699999999967e-05, 9.46660000000002e-05, 9.465200000000062e-05, 9.466699999999967e-05, 9.46530000000001e-05, 9.46530000000001e-05, 9.462500000000096e-05, 9.46660000000002e-05, 9.465200000000062e-05, 9.459700000000182e-05, 9.466699999999967e-05, 9.461099999999792e-05, 9.46530000000001e-05, 9.46660000000002e-05, 9.458299999999878e-05, 9.462500000000096e-05, 9.46530000000001e-05, 9.463900000000053e-05, 9.46530000000001e-05, 9.46530000000001e-05, 9.465200000000062e-05, 9.46660000000002e-05, 9.463900000000053e-05, 9.463900000000053e-05, 9.46530000000001e-05, 9.46530000000001e-05, 9.463800000000105e-05, 9.463900000000053e-05, 9.469499999999881e-05, 9.46530000000001e-05, 9.46530000000001e-05, 9.46530000000001e-05, 9.46530000000001e-05, 9.465200000000062e-05, 9.46530000000001e-05, 9.459699999999835e-05, 9.463900000000053e-05, 9.463900000000053e-05, 9.46660000000002e-05, 9.465200000000062e-05, 9.463900000000053e-05, 9.463900000000053e-05, 9.46530000000001e-05, 9.46530000000001e-05, 9.463900000000053e-05, 9.459700000000182e-05, 9.462500000000096e-05, 9.466699999999967e-05, 9.456900000000268e-05]</msg>
<status status="PASS" starttime="20201029 12:46:12.118" endtime="20201029 12:46:12.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.113" endtime="20201029 12:46:12.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.741" endtime="20201029 12:46:12.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.717" endtime="20201029 12:46:12.122"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:12.124" endtime="20201029 12:46:12.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.123" endtime="20201029 12:46:12.144"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.152" endtime="20201029 12:46:12.170"></status>
</kw>
<msg timestamp="20201029 12:46:12.171" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:12.150" endtime="20201029 12:46:12.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.173" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:12.172" endtime="20201029 12:46:12.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.174" endtime="20201029 12:46:12.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.148" endtime="20201029 12:46:12.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.146" endtime="20201029 12:46:12.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.183" endtime="20201029 12:46:12.469"></status>
</kw>
<msg timestamp="20201029 12:46:12.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017448347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017546111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:12.182" endtime="20201029 12:46:12.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017448347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017546111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:12.473" endtime="20201029 12:46:12.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.481" endtime="20201029 12:46:12.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.179" endtime="20201029 12:46:12.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.177" endtime="20201029 12:46:12.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:12.488" level="INFO">${PHILIP_RES} = [{'diff': 9.776400000000018e-05}, {'diff': 9.731899999999849e-05}, {'diff': 9.731900000000196e-05}, {'diff': 9.73059999999984e-05}, {'diff': 9.729199999999882e-05}, {'diff': 9.72920000000023e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:12.485" endtime="20201029 12:46:12.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:12.493" level="INFO">${RESULT} = {'diff': [9.776400000000018e-05, 9.731899999999849e-05, 9.731900000000196e-05, 9.73059999999984e-05, 9.729199999999882e-05, 9.72920000000023e-05, 9.733399999999753e-05, 9.730600000000186e-05, 9.727799...</msg>
<status status="PASS" starttime="20201029 12:46:12.489" endtime="20201029 12:46:12.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.498" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:12.496" endtime="20201029 12:46:12.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.500" level="INFO">VALUE: [9.776400000000018e-05, 9.731899999999849e-05, 9.731900000000196e-05, 9.73059999999984e-05, 9.729199999999882e-05, 9.72920000000023e-05, 9.733399999999753e-05, 9.730600000000186e-05, 9.727799999999925e-05, 9.72920000000023e-05, 9.730600000000186e-05, 9.731899999999849e-05, 9.729099999999935e-05, 9.730499999999892e-05, 9.727800000000272e-05, 9.731899999999849e-05, 9.73059999999984e-05, 9.730600000000186e-05, 9.73059999999984e-05, 9.730600000000186e-05, 9.73059999999984e-05, 9.730600000000186e-05, 9.737500000000024e-05, 9.731900000000196e-05, 9.730499999999892e-05, 9.736200000000014e-05, 9.72920000000023e-05, 9.73059999999984e-05, 9.730600000000186e-05, 9.729199999999882e-05, 9.730600000000186e-05, 9.730600000000186e-05, 9.73059999999984e-05, 9.729100000000282e-05, 9.725000000000011e-05, 9.729100000000282e-05, 9.730499999999892e-05, 9.730499999999892e-05, 9.723600000000054e-05, 9.73059999999984e-05, 9.730600000000186e-05, 9.731999999999796e-05, 9.732000000000143e-05, 9.73059999999984e-05, 9.730499999999892e-05, 9.730499999999892e-05, 9.725000000000011e-05, 9.730500000000239e-05, 9.730499999999892e-05, 9.730600000000186e-05]</msg>
<status status="PASS" starttime="20201029 12:46:12.499" endtime="20201029 12:46:12.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.494" endtime="20201029 12:46:12.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.144" endtime="20201029 12:46:12.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.122" endtime="20201029 12:46:12.502"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:12.505" endtime="20201029 12:46:12.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.503" endtime="20201029 12:46:12.525"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.533" endtime="20201029 12:46:12.552"></status>
</kw>
<msg timestamp="20201029 12:46:12.553" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:12.531" endtime="20201029 12:46:12.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.555" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:12.554" endtime="20201029 12:46:12.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.556" endtime="20201029 12:46:12.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.529" endtime="20201029 12:46:12.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.527" endtime="20201029 12:46:12.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.565" endtime="20201029 12:46:12.880"></status>
</kw>
<msg timestamp="20201029 12:46:12.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017925944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018026375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:12.564" endtime="20201029 12:46:12.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017925944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018026375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:12.889" endtime="20201029 12:46:12.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.897" endtime="20201029 12:46:12.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.561" endtime="20201029 12:46:12.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.559" endtime="20201029 12:46:12.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:12.904" level="INFO">${PHILIP_RES} = [{'diff': 0.00010043100000000152}, {'diff': 9.992999999999808e-05}, {'diff': 9.998599999999983e-05}, {'diff': 9.993099999999755e-05}, {'diff': 9.99999999999994e-05}, {'diff': 9.998599999999983e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:12.901" endtime="20201029 12:46:12.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:12.908" level="INFO">${RESULT} = {'diff': [0.00010043100000000152, 9.992999999999808e-05, 9.998599999999983e-05, 9.993099999999755e-05, 9.99999999999994e-05, 9.998599999999983e-05, 0.00010001400000000243, 0.00010004200000000157, 0.00...</msg>
<status status="PASS" starttime="20201029 12:46:12.905" endtime="20201029 12:46:12.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.913" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:12.912" endtime="20201029 12:46:12.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.915" level="INFO">VALUE: [0.00010043100000000152, 9.992999999999808e-05, 9.998599999999983e-05, 9.993099999999755e-05, 9.99999999999994e-05, 9.998599999999983e-05, 0.00010001400000000243, 0.00010004200000000157, 0.00010001399999999896, 0.0001000410000000021, 9.99869999999993e-05, 9.99999999999994e-05, 9.99999999999994e-05, 9.99860000000033e-05, 0.00010005500000000167, 0.00010001399999999896, 0.00010001299999999949, 9.99999999999994e-05, 0.000100028000000002, 9.998599999999983e-05, 9.99999999999994e-05, 0.00010001399999999896, 0.00010001399999999896, 0.00010002799999999853, 9.998599999999983e-05, 0.00010002799999999853, 0.00010001399999999896, 0.00010008300000000081, 0.00010002699999999906, 0.00010001399999999896, 9.99999999999994e-05, 9.99999999999994e-05, 9.99999999999994e-05, 9.998599999999983e-05, 9.995900000000016e-05, 9.99999999999994e-05, 9.99999999999994e-05, 9.993100000000102e-05, 0.00010001399999999896, 9.99999999999994e-05, 9.99999999999994e-05, 9.99999999999994e-05, 9.99999999999994e-05, 9.998599999999983e-05, 0.0001000419999999981, 9.998599999999983e-05, 0.00010002699999999906, 9.997200000000026e-05, 0.00010001399999999896, 9.99999999999994e-05]</msg>
<status status="PASS" starttime="20201029 12:46:12.914" endtime="20201029 12:46:12.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.909" endtime="20201029 12:46:12.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.525" endtime="20201029 12:46:12.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.502" endtime="20201029 12:46:12.917"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:12.920" endtime="20201029 12:46:12.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.918" endtime="20201029 12:46:12.940"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.948" endtime="20201029 12:46:12.967"></status>
</kw>
<msg timestamp="20201029 12:46:12.967" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:12.946" endtime="20201029 12:46:12.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.970" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:12.968" endtime="20201029 12:46:12.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.971" endtime="20201029 12:46:12.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.944" endtime="20201029 12:46:12.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.942" endtime="20201029 12:46:12.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.981" endtime="20201029 12:46:13.267"></status>
</kw>
<msg timestamp="20201029 12:46:13.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017977431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018080583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:12.980" endtime="20201029 12:46:13.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017977431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018080583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:13.271" endtime="20201029 12:46:13.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.279" endtime="20201029 12:46:13.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.977" endtime="20201029 12:46:13.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.975" endtime="20201029 12:46:13.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:13.286" level="INFO">${PHILIP_RES} = [{'diff': 0.00010315200000000219}, {'diff': 0.0001027359999999991}, {'diff': 0.0001027359999999991}, {'diff': 0.00010272199999999954}, {'diff': 0.00010270799999999997}, {'diff': 0.00010272199999999954...</msg>
<status status="PASS" starttime="20201029 12:46:13.282" endtime="20201029 12:46:13.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:13.290" level="INFO">${RESULT} = {'diff': [0.00010315200000000219, 0.0001027359999999991, 0.0001027359999999991, 0.00010272199999999954, 0.00010270799999999997, 0.00010272199999999954, 0.00010270799999999997, 0.0001026810000000003, 0...</msg>
<status status="PASS" starttime="20201029 12:46:13.287" endtime="20201029 12:46:13.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.294" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:13.293" endtime="20201029 12:46:13.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.297" level="INFO">VALUE: [0.00010315200000000219, 0.0001027359999999991, 0.0001027359999999991, 0.00010272199999999954, 0.00010270799999999997, 0.00010272199999999954, 0.00010270799999999997, 0.0001026810000000003, 0.00010277800000000128, 0.00010272299999999901, 0.00010274999999999868, 0.00010269499999999987, 0.00010270799999999997, 0.0001026810000000003, 0.0001027359999999991, 0.00010272199999999954, 0.00010269499999999987, 0.00010270799999999997, 0.00010270900000000291, 0.00010270799999999997, 0.0001026810000000003, 0.0001026940000000004, 0.00010272299999999901, 0.00010270799999999997, 0.00010273600000000258, 0.00010272199999999954, 0.00010277800000000128, 0.00010270799999999997, 0.00010270799999999997, 0.00010270799999999997, 0.00010275000000000215, 0.00010272299999999901, 0.00010270799999999997, 0.00010270899999999944, 0.00010270799999999997, 0.00010272299999999901, 0.00010276400000000172, 0.0001027359999999991, 0.00010270799999999997, 0.00010272199999999954, 0.0001027359999999991, 0.00010270799999999997, 0.00010269499999999987, 0.0001026940000000004, 0.00010272199999999954, 0.0001026940000000004, 0.00010273699999999858, 0.00010268000000000083, 0.00010268099999999683, 0.00010276400000000172]</msg>
<status status="PASS" starttime="20201029 12:46:13.295" endtime="20201029 12:46:13.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.291" endtime="20201029 12:46:13.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.940" endtime="20201029 12:46:13.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.918" endtime="20201029 12:46:13.304"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:13.306" endtime="20201029 12:46:13.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.305" endtime="20201029 12:46:13.326"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.334" endtime="20201029 12:46:13.354"></status>
</kw>
<msg timestamp="20201029 12:46:13.354" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:13.333" endtime="20201029 12:46:13.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.357" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:13.355" endtime="20201029 12:46:13.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.358" endtime="20201029 12:46:13.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.330" endtime="20201029 12:46:13.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.328" endtime="20201029 12:46:13.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.368" endtime="20201029 12:46:13.656"></status>
</kw>
<msg timestamp="20201029 12:46:13.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018022694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018128611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:13.366" endtime="20201029 12:46:13.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018022694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018128611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:13.660" endtime="20201029 12:46:13.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.668" endtime="20201029 12:46:13.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.363" endtime="20201029 12:46:13.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.361" endtime="20201029 12:46:13.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:13.675" level="INFO">${PHILIP_RES} = [{'diff': 0.00010591700000000051}, {'diff': 0.00010547200000000229}, {'diff': 0.00010547200000000229}, {'diff': 0.00010543000000000011}, {'diff': 0.00010547199999999882}, {'diff': 0.000105471999999998...</msg>
<status status="PASS" starttime="20201029 12:46:13.671" endtime="20201029 12:46:13.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:13.680" level="INFO">${RESULT} = {'diff': [0.00010591700000000051, 0.00010547200000000229, 0.00010547200000000229, 0.00010543000000000011, 0.00010547199999999882, 0.00010547199999999882, 0.00010548600000000186, 0.00010554100000000066...</msg>
<status status="PASS" starttime="20201029 12:46:13.676" endtime="20201029 12:46:13.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.684" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:13.683" endtime="20201029 12:46:13.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.687" level="INFO">VALUE: [0.00010591700000000051, 0.00010547200000000229, 0.00010547200000000229, 0.00010543000000000011, 0.00010547199999999882, 0.00010547199999999882, 0.00010548600000000186, 0.00010554100000000066, 0.00010544499999999915, 0.00010545899999999872, 0.00010544499999999915, 0.00010548700000000133, 0.00010545900000000219, 0.00010548600000000186, 0.00010550000000000143, 0.00010541600000000054, 0.00010547199999999882, 0.00010540200000000097, 0.00010545800000000272, 0.000105514000000001, 0.00010552800000000057, 0.00010547199999999882, 0.00010547199999999882, 0.00010547200000000229, 0.00010544500000000262, 0.00010547199999999882, 0.00010548599999999839, 0.00010540300000000044, 0.00010545899999999872, 0.00010544499999999915, 0.00010545900000000219, 0.00010544399999999968, 0.00010547199999999882, 0.00010551399999999753, 0.00010541600000000054, 0.00010547200000000229, 0.00010547200000000229, 0.00010545799999999925, 0.00010545799999999925, 0.00010549999999999796, 0.00010545899999999872, 0.00010548700000000133, 0.00010545899999999872, 0.00010545899999999872, 0.00010545899999999872, 0.00010545899999999872, 0.00010547200000000229, 0.00010543000000000011, 0.00010548599999999839, 0.00010543000000000011]</msg>
<status status="PASS" starttime="20201029 12:46:13.685" endtime="20201029 12:46:13.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.681" endtime="20201029 12:46:13.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.327" endtime="20201029 12:46:13.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.304" endtime="20201029 12:46:13.689"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:13.691" endtime="20201029 12:46:13.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.690" endtime="20201029 12:46:13.711"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.720" endtime="20201029 12:46:13.739"></status>
</kw>
<msg timestamp="20201029 12:46:13.740" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:13.718" endtime="20201029 12:46:13.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.742" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:13.741" endtime="20201029 12:46:13.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.743" endtime="20201029 12:46:13.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.715" endtime="20201029 12:46:13.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.713" endtime="20201029 12:46:13.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.753" endtime="20201029 12:46:14.040"></status>
</kw>
<msg timestamp="20201029 12:46:14.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018131347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018240028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:13.751" endtime="20201029 12:46:14.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018131347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018240028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:14.044" endtime="20201029 12:46:14.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.052" endtime="20201029 12:46:14.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.748" endtime="20201029 12:46:14.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.746" endtime="20201029 12:46:14.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:14.058" level="INFO">${PHILIP_RES} = [{'diff': 0.00010868099999999936}, {'diff': 0.00010826400000000028}, {'diff': 0.00010823599999999767}, {'diff': 0.0001082219999999981}, {'diff': 0.00010824999999999724}, {'diff': 0.0001082909999999999...</msg>
<status status="PASS" starttime="20201029 12:46:14.055" endtime="20201029 12:46:14.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:14.063" level="INFO">${RESULT} = {'diff': [0.00010868099999999936, 0.00010826400000000028, 0.00010823599999999767, 0.0001082219999999981, 0.00010824999999999724, 0.00010829099999999994, 0.00010822200000000157, 0.00010829099999999994,...</msg>
<status status="PASS" starttime="20201029 12:46:14.059" endtime="20201029 12:46:14.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.067" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:14.066" endtime="20201029 12:46:14.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.070" level="INFO">VALUE: [0.00010868099999999936, 0.00010826400000000028, 0.00010823599999999767, 0.0001082219999999981, 0.00010824999999999724, 0.00010829099999999994, 0.00010822200000000157, 0.00010829099999999994, 0.00010823600000000114, 0.00010823600000000114, 0.00010823600000000114, 0.0001082219999999981, 0.00010823600000000114, 0.00010823600000000114, 0.0001082219999999981, 0.0001082500000000007, 0.000108208000000002, 0.00010822200000000157, 0.00010822200000000157, 0.00010823600000000114, 0.00010823600000000114, 0.00010823700000000061, 0.00010823599999999767, 0.00010823599999999767, 0.00010823599999999767, 0.0001082500000000007, 0.00010823600000000114, 0.00010822200000000157, 0.00010822200000000157, 0.00010820900000000147, 0.00010823600000000114, 0.00010823600000000114, 0.00010824999999999724, 0.00010823600000000114, 0.00010823599999999767, 0.0001082500000000007, 0.00010829199999999942, 0.0001082500000000007, 0.0001082500000000007, 0.00010823600000000114, 0.00010822200000000157, 0.00010822200000000157, 0.00010823600000000114, 0.00010823599999999767, 0.00010824999999999724, 0.00010823599999999767, 0.00010823700000000061, 0.00010822300000000104, 0.0001082500000000007, 0.00010827799999999985]</msg>
<status status="PASS" starttime="20201029 12:46:14.068" endtime="20201029 12:46:14.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.064" endtime="20201029 12:46:14.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.712" endtime="20201029 12:46:14.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.689" endtime="20201029 12:46:14.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.072" endtime="20201029 12:46:14.072"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:52.676" endtime="20201029 12:46:14.072" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:45:32.715" endtime="20201029 12:46:14.081"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.151" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:46:14.159" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:46:15.328" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:46:14.150" endtime="20201029 12:46:15.328"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.331" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:46:15.330" endtime="20201029 12:46:15.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.148" endtime="20201029 12:46:15.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:15.334" endtime="20201029 12:46:15.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.333" endtime="20201029 12:46:15.522"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.535" endtime="20201029 12:46:15.549"></status>
</kw>
<msg timestamp="20201029 12:46:15.549" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:15.533" endtime="20201029 12:46:15.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.552" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:15.551" endtime="20201029 12:46:15.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.555" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:15.553" endtime="20201029 12:46:15.556"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:15.531" endtime="20201029 12:46:15.556"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:15.529" endtime="20201029 12:46:15.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.527" endtime="20201029 12:46:15.557"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:15.562" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:15.561" endtime="20201029 12:46:15.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.558" endtime="20201029 12:46:15.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.526" endtime="20201029 12:46:15.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.526" endtime="20201029 12:46:15.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.564" endtime="20201029 12:46:15.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.525" endtime="20201029 12:46:15.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.567" endtime="20201029 12:46:15.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.523" endtime="20201029 12:46:15.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.147" endtime="20201029 12:46:15.569"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:15.575" endtime="20201029 12:46:15.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.574" endtime="20201029 12:46:15.595"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.609" endtime="20201029 12:46:15.623"></status>
</kw>
<msg timestamp="20201029 12:46:15.624" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:15.608" endtime="20201029 12:46:15.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.626" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:15.625" endtime="20201029 12:46:15.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.629" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:15.627" endtime="20201029 12:46:15.630"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:15.605" endtime="20201029 12:46:15.630"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:15.603" endtime="20201029 12:46:15.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.601" endtime="20201029 12:46:15.631"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:15.635" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:15.634" endtime="20201029 12:46:15.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.632" endtime="20201029 12:46:15.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.601" endtime="20201029 12:46:15.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.600" endtime="20201029 12:46:15.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.637" endtime="20201029 12:46:15.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.598" endtime="20201029 12:46:15.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.596" endtime="20201029 12:46:15.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.573" endtime="20201029 12:46:15.640"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.651" endtime="20201029 12:46:15.666"></status>
</kw>
<msg timestamp="20201029 12:46:15.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:15.650" endtime="20201029 12:46:15.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:15.668" endtime="20201029 12:46:15.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.670" endtime="20201029 12:46:15.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.645" endtime="20201029 12:46:15.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.643" endtime="20201029 12:46:15.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.680" endtime="20201029 12:46:16.016"></status>
</kw>
<msg timestamp="20201029 12:46:16.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068068917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068083181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:15.678" endtime="20201029 12:46:16.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068068917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068083181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:16.027" endtime="20201029 12:46:16.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.043" endtime="20201029 12:46:16.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.675" endtime="20201029 12:46:16.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.673" endtime="20201029 12:46:16.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:16.053" level="INFO">${RESULT} = [{'diff': 1.4263999999999943e-05}, {'diff': 1.3763999999999443e-05}, {'diff': 1.4222000000008173e-05}, {'diff': 1.40969999999907e-05}, {'diff': 1.3972000000000984e-05}, {'diff': 1.4110999999997209e-05...</msg>
<status status="PASS" starttime="20201029 12:46:16.048" endtime="20201029 12:46:16.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:16.059" level="INFO">${ACCURACY} = {'diff': [1.4263999999999943e-05, 1.3763999999999443e-05, 1.4222000000008173e-05, 1.40969999999907e-05, 1.3972000000000984e-05, 1.4110999999997209e-05, 1.3929999999995335e-05, 1.4429999999995835e-05, ...</msg>
<status status="PASS" starttime="20201029 12:46:16.054" endtime="20201029 12:46:16.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.066" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 12:46:16.065" endtime="20201029 12:46:16.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.070" level="INFO">VALUE: [1.4263999999999943e-05, 1.3763999999999443e-05, 1.4222000000008173e-05, 1.40969999999907e-05, 1.3972000000000984e-05, 1.4110999999997209e-05, 1.3929999999995335e-05, 1.4429999999995835e-05, 1.405499999999893e-05, 1.3930000000009213e-05, 1.4638999999996849e-05, 1.4374999999997029e-05, 1.44169999999888e-05, 1.4125000000003718e-05, 1.3945000000001317e-05, 1.3875000000010407e-05, 1.4653000000003358e-05, 1.4611000000011587e-05, 1.4222000000008173e-05, 1.4457999999994975e-05, 1.3791999999998583e-05, 1.3736000000000304e-05, 1.3917000000002178e-05, 1.4263999999999943e-05, 1.4542000000006272e-05, 1.4098000000004052e-05, 1.4500000000000624e-05, 1.4181000000001998e-05, 1.4708000000002164e-05, 1.3944000000001844e-05, 1.3943999999987966e-05, 1.386099999999002e-05, 1.3874999999996529e-05, 1.4305999999991714e-05, 1.4486000000007992e-05, 1.4055999999998403e-05, 1.3833999999990354e-05, 1.4319999999998223e-05, 1.3930999999994809e-05, 1.4333000000005258e-05, 1.4263999999999943e-05, 1.4195000000008506e-05, 1.4167000000009367e-05, 1.4097000000004578e-05, 1.4221999999994295e-05, 1.4278000000006452e-05, 1.4138999999996349e-05, 1.4194999999994629e-05, 1.3749999999992935e-05, 1.3958999999993948e-05]</msg>
<status status="PASS" starttime="20201029 12:46:16.068" endtime="20201029 12:46:16.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.060" endtime="20201029 12:46:16.071"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:16.076" endtime="20201029 12:46:16.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.074" endtime="20201029 12:46:16.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.072" endtime="20201029 12:46:16.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.641" endtime="20201029 12:46:16.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.641" endtime="20201029 12:46:16.097"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.106" endtime="20201029 12:46:16.123"></status>
</kw>
<msg timestamp="20201029 12:46:16.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:16.105" endtime="20201029 12:46:16.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:16.128" endtime="20201029 12:46:16.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.131" endtime="20201029 12:46:16.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.102" endtime="20201029 12:46:16.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.100" endtime="20201029 12:46:16.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.146" endtime="20201029 12:46:16.431"></status>
</kw>
<msg timestamp="20201029 12:46:16.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023622875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023637097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:16.144" endtime="20201029 12:46:16.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023622875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023637097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:16.436" endtime="20201029 12:46:16.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.445" endtime="20201029 12:46:16.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.141" endtime="20201029 12:46:16.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.139" endtime="20201029 12:46:16.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:16.453" level="INFO">${RESULT} = [{'diff': 1.4221999999997764e-05}, {'diff': 1.3902999999999138e-05}, {'diff': 1.4555999999998903e-05}, {'diff': 1.4486000000001054e-05}, {'diff': 1.4472000000001484e-05}, {'diff': 1.4138000000000345e-...</msg>
<status status="PASS" starttime="20201029 12:46:16.449" endtime="20201029 12:46:16.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:16.462" level="INFO">${ACCURACY} = {'diff': [1.4221999999997764e-05, 1.3902999999999138e-05, 1.4555999999998903e-05, 1.4486000000001054e-05, 1.4472000000001484e-05, 1.4138000000000345e-05, 1.4291999999999083e-05, 1.4388000000000595e-05...</msg>
<status status="PASS" starttime="20201029 12:46:16.454" endtime="20201029 12:46:16.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.468" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 12:46:16.467" endtime="20201029 12:46:16.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.470" level="INFO">VALUE: [1.4221999999997764e-05, 1.3902999999999138e-05, 1.4555999999998903e-05, 1.4486000000001054e-05, 1.4472000000001484e-05, 1.4138000000000345e-05, 1.4291999999999083e-05, 1.4388000000000595e-05, 1.4597000000001609e-05, 1.429099999999961e-05, 1.4542000000002803e-05, 1.4514000000000193e-05, 1.4277999999999513e-05, 1.3943999999998374e-05, 1.3929999999998804e-05, 1.3861000000000429e-05, 1.3819000000001719e-05, 1.4193999999998624e-05, 1.405499999999893e-05, 1.4334000000001262e-05, 1.4458000000001914e-05, 1.3805999999998153e-05, 1.4415999999999735e-05, 1.4611000000001179e-05, 1.3972000000000984e-05, 1.3861000000000429e-05, 1.4415999999999735e-05, 1.40689999999985e-05, 1.430499999999918e-05, 1.3888999999999568e-05, 1.4179999999999054e-05, 1.4444000000002344e-05, 1.4250000000000373e-05, 1.3943999999998374e-05, 1.426300000000047e-05, 1.4527999999999763e-05, 1.3749999999999873e-05, 1.4305999999998653e-05, 1.409699999999764e-05, 1.3957999999997944e-05, 1.3749999999999873e-05, 1.4639000000000318e-05, 1.3985999999997084e-05, 1.4042000000002303e-05, 1.4056000000001873e-05, 1.4277999999999513e-05, 1.4041999999998833e-05, 1.4584000000001512e-05, 1.4027999999999263e-05, 1.3888999999999568e-05]</msg>
<status status="PASS" starttime="20201029 12:46:16.469" endtime="20201029 12:46:16.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.463" endtime="20201029 12:46:16.471"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:16.476" endtime="20201029 12:46:16.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.473" endtime="20201029 12:46:16.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.472" endtime="20201029 12:46:16.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.098" endtime="20201029 12:46:16.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.098" endtime="20201029 12:46:16.497"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.506" endtime="20201029 12:46:16.520"></status>
</kw>
<msg timestamp="20201029 12:46:16.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:16.504" endtime="20201029 12:46:16.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:16.522" endtime="20201029 12:46:16.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.524" endtime="20201029 12:46:16.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.502" endtime="20201029 12:46:16.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.500" endtime="20201029 12:46:16.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.534" endtime="20201029 12:46:16.819"></status>
</kw>
<msg timestamp="20201029 12:46:16.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021831597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021846417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:16.532" endtime="20201029 12:46:16.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021831597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021846417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:16.823" endtime="20201029 12:46:16.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.831" endtime="20201029 12:46:16.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.530" endtime="20201029 12:46:16.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.528" endtime="20201029 12:46:16.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:16.838" level="INFO">${RESULT} = [{'diff': 1.4819999999998723e-05}, {'diff': 1.4013999999999693e-05}, {'diff': 1.4180000000002524e-05}, {'diff': 1.4291999999999083e-05}, {'diff': 1.4152999999999388e-05}, {'diff': 1.3861000000000429e-...</msg>
<status status="PASS" starttime="20201029 12:46:16.834" endtime="20201029 12:46:16.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:16.842" level="INFO">${ACCURACY} = {'diff': [1.4819999999998723e-05, 1.4013999999999693e-05, 1.4180000000002524e-05, 1.4291999999999083e-05, 1.4152999999999388e-05, 1.3861000000000429e-05, 1.433299999999832e-05, 1.4263999999999943e-05,...</msg>
<status status="PASS" starttime="20201029 12:46:16.839" endtime="20201029 12:46:16.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.846" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 12:46:16.845" endtime="20201029 12:46:16.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.849" level="INFO">VALUE: [1.4819999999998723e-05, 1.4013999999999693e-05, 1.4180000000002524e-05, 1.4291999999999083e-05, 1.4152999999999388e-05, 1.3861000000000429e-05, 1.433299999999832e-05, 1.4263999999999943e-05, 1.3777999999999013e-05, 1.4402999999999638e-05, 1.4416999999999208e-05, 1.3833000000001289e-05, 1.3861000000000429e-05, 1.4277999999999513e-05, 1.4527999999999763e-05, 1.4486000000001054e-05, 1.434699999999789e-05, 1.4568999999999e-05, 1.4000000000000123e-05, 1.4264000000003413e-05, 1.405499999999893e-05, 1.433299999999832e-05, 1.3986000000000554e-05, 1.4652999999999888e-05, 1.4013999999999693e-05, 1.4236000000000804e-05, 1.4486000000001054e-05, 1.4083000000001539e-05, 1.40689999999985e-05, 1.4360999999997459e-05, 1.3874999999999998e-05, 1.3903000000002608e-05, 1.383299999999782e-05, 1.4000000000000123e-05, 1.3917000000002178e-05, 1.4722000000001734e-05, 1.4111000000000679e-05, 1.4125000000000248e-05, 1.3930999999998278e-05, 1.4583000000002039e-05, 1.3959000000000887e-05, 1.3805999999998153e-05, 1.3833999999997293e-05, 1.3915999999999235e-05, 1.4209000000001137e-05, 1.4486000000001054e-05, 1.4541999999999333e-05, 1.3806000000001623e-05, 1.3848000000000332e-05, 1.4291999999999083e-05]</msg>
<status status="PASS" starttime="20201029 12:46:16.847" endtime="20201029 12:46:16.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.843" endtime="20201029 12:46:16.850"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:16.853" endtime="20201029 12:46:16.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.852" endtime="20201029 12:46:16.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.851" endtime="20201029 12:46:16.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.498" endtime="20201029 12:46:16.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.498" endtime="20201029 12:46:16.875"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.888" endtime="20201029 12:46:16.904"></status>
</kw>
<msg timestamp="20201029 12:46:16.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:16.885" endtime="20201029 12:46:16.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:16.905" endtime="20201029 12:46:16.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.908" endtime="20201029 12:46:16.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.881" endtime="20201029 12:46:16.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.879" endtime="20201029 12:46:16.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.917" endtime="20201029 12:46:17.202"></status>
</kw>
<msg timestamp="20201029 12:46:17.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027966167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027980153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:16.916" endtime="20201029 12:46:17.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027966167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027980153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.206" endtime="20201029 12:46:17.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.214" endtime="20201029 12:46:17.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.913" endtime="20201029 12:46:17.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.911" endtime="20201029 12:46:17.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:17.221" level="INFO">${RESULT} = [{'diff': 1.3986000000000554e-05}, {'diff': 1.4124999999996779e-05}, {'diff': 1.4000000000000123e-05}, {'diff': 1.4458000000001914e-05}, {'diff': 1.4165999999999485e-05}, {'diff': 1.4639000000000318e-...</msg>
<status status="PASS" starttime="20201029 12:46:17.218" endtime="20201029 12:46:17.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:17.225" level="INFO">${ACCURACY} = {'diff': [1.3986000000000554e-05, 1.4124999999996779e-05, 1.4000000000000123e-05, 1.4458000000001914e-05, 1.4165999999999485e-05, 1.4639000000000318e-05, 1.4360999999997459e-05, 1.4194000000002094e-05...</msg>
<status status="PASS" starttime="20201029 12:46:17.222" endtime="20201029 12:46:17.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.229" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 12:46:17.228" endtime="20201029 12:46:17.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.232" level="INFO">VALUE: [1.3986000000000554e-05, 1.4124999999996779e-05, 1.4000000000000123e-05, 1.4458000000001914e-05, 1.4165999999999485e-05, 1.4639000000000318e-05, 1.4360999999997459e-05, 1.4194000000002094e-05, 1.4485999999997584e-05, 1.4000000000000123e-05, 1.4569000000002469e-05, 1.4458000000001914e-05, 1.4527999999999763e-05, 1.3749999999999873e-05, 1.4138999999999818e-05, 1.3805000000002149e-05, 1.4527999999999763e-05, 1.3902999999999138e-05, 1.4013999999999693e-05, 1.4693999999999124e-05, 1.4166999999998958e-05, 1.4514000000000193e-05, 1.430499999999918e-05, 1.3874999999999998e-05, 1.4027999999999263e-05, 1.4361000000000929e-05, 1.4362000000000402e-05, 1.4583000000002039e-05, 1.4361000000000929e-05, 1.3902999999999138e-05, 1.4402999999999638e-05, 1.4194000000002094e-05, 1.4180999999998528e-05, 1.4000000000000123e-05, 1.3792000000002053e-05, 1.4583000000002039e-05, 1.4250000000000373e-05, 1.3930999999998278e-05, 1.4445000000001817e-05, 1.4042000000002303e-05, 1.4319999999998223e-05, 1.4166999999998958e-05, 1.3861999999999902e-05, 1.4098000000000582e-05, 1.4570000000001943e-05, 1.3874999999999998e-05, 1.4013999999999693e-05, 1.4138999999999818e-05, 1.4430999999998778e-05, 1.4499999999997154e-05]</msg>
<status status="PASS" starttime="20201029 12:46:17.230" endtime="20201029 12:46:17.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.226" endtime="20201029 12:46:17.234"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:17.237" endtime="20201029 12:46:17.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.236" endtime="20201029 12:46:17.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.235" endtime="20201029 12:46:17.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.876" endtime="20201029 12:46:17.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.876" endtime="20201029 12:46:17.258"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.267" endtime="20201029 12:46:17.282"></status>
</kw>
<msg timestamp="20201029 12:46:17.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.265" endtime="20201029 12:46:17.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.283" endtime="20201029 12:46:17.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.286" endtime="20201029 12:46:17.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.262" endtime="20201029 12:46:17.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.260" endtime="20201029 12:46:17.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.294" endtime="20201029 12:46:17.582"></status>
</kw>
<msg timestamp="20201029 12:46:17.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022238208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022252375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.293" endtime="20201029 12:46:17.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022238208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022252375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.586" endtime="20201029 12:46:17.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.595" endtime="20201029 12:46:17.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.290" endtime="20201029 12:46:17.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.289" endtime="20201029 12:46:17.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:17.602" level="INFO">${RESULT} = [{'diff': 1.4167000000002428e-05}, {'diff': 1.4333999999997793e-05}, {'diff': 1.3929999999998804e-05}, {'diff': 1.3959000000000887e-05}, {'diff': 1.4625000000000749e-05}, {'diff': 1.4568999999999e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:17.598" endtime="20201029 12:46:17.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:17.607" level="INFO">${ACCURACY} = {'diff': [1.4167000000002428e-05, 1.4333999999997793e-05, 1.3929999999998804e-05, 1.3959000000000887e-05, 1.4625000000000749e-05, 1.4568999999999e-05, 1.4499999999997154e-05, 1.3945000000001317e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:46:17.603" endtime="20201029 12:46:17.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.611" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 12:46:17.610" endtime="20201029 12:46:17.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.614" level="INFO">VALUE: [1.4167000000002428e-05, 1.4333999999997793e-05, 1.3929999999998804e-05, 1.3959000000000887e-05, 1.4625000000000749e-05, 1.4568999999999e-05, 1.4499999999997154e-05, 1.3945000000001317e-05, 1.4430999999998778e-05, 1.3972000000000984e-05, 1.4499999999997154e-05, 1.3973000000000457e-05, 1.402699999999979e-05, 1.3888000000000095e-05, 1.401300000000022e-05, 1.4416000000003204e-05, 1.4375000000000498e-05, 1.4486000000001054e-05, 1.3847000000000859e-05, 1.4375000000000498e-05, 1.4721999999998264e-05, 1.4125000000000248e-05, 1.4083000000001539e-05, 1.3888999999999568e-05, 1.459699999999814e-05, 1.4443999999998874e-05, 1.454099999999986e-05, 1.4207999999998194e-05, 1.4443999999998874e-05, 1.4208000000001664e-05, 1.4347000000001359e-05, 1.4236000000000804e-05, 1.3943999999998374e-05, 1.4500000000000624e-05, 1.379099999999911e-05, 1.4402999999999638e-05, 1.3861000000000429e-05, 1.4415999999999735e-05, 1.4041999999998833e-05, 1.3874999999999998e-05, 1.434699999999789e-05, 1.4236000000000804e-05, 1.4194999999998098e-05, 1.4375000000000498e-05, 1.4598000000001082e-05, 1.4153000000002858e-05, 1.455499999999943e-05, 1.3847000000000859e-05, 1.381899999999825e-05, 1.4417000000002678e-05]</msg>
<status status="PASS" starttime="20201029 12:46:17.613" endtime="20201029 12:46:17.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.608" endtime="20201029 12:46:17.615"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:17.619" endtime="20201029 12:46:17.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.617" endtime="20201029 12:46:17.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.616" endtime="20201029 12:46:17.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.259" endtime="20201029 12:46:17.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.258" endtime="20201029 12:46:17.640"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.649" endtime="20201029 12:46:17.664"></status>
</kw>
<msg timestamp="20201029 12:46:17.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.647" endtime="20201029 12:46:17.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.665" endtime="20201029 12:46:17.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.668" endtime="20201029 12:46:17.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.645" endtime="20201029 12:46:17.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.643" endtime="20201029 12:46:17.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.677" endtime="20201029 12:46:17.975"></status>
</kw>
<msg timestamp="20201029 12:46:17.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022606139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022620097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.676" endtime="20201029 12:46:17.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022606139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022620097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.985" endtime="20201029 12:46:18.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.005" endtime="20201029 12:46:18.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.673" endtime="20201029 12:46:18.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.671" endtime="20201029 12:46:18.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:18.019" level="INFO">${RESULT} = [{'diff': 1.3957999999997944e-05}, {'diff': 1.3945000000001317e-05}, {'diff': 1.4111000000000679e-05}, {'diff': 1.4000000000000123e-05}, {'diff': 1.4138999999999818e-05}, {'diff': 1.4097000000001109e-...</msg>
<status status="PASS" starttime="20201029 12:46:18.012" endtime="20201029 12:46:18.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:18.029" level="INFO">${ACCURACY} = {'diff': [1.3957999999997944e-05, 1.3945000000001317e-05, 1.4111000000000679e-05, 1.4000000000000123e-05, 1.4138999999999818e-05, 1.4097000000001109e-05, 1.408299999999807e-05, 1.3971999999997514e-05,...</msg>
<status status="PASS" starttime="20201029 12:46:18.022" endtime="20201029 12:46:18.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.039" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 12:46:18.036" endtime="20201029 12:46:18.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.044" level="INFO">VALUE: [1.3957999999997944e-05, 1.3945000000001317e-05, 1.4111000000000679e-05, 1.4000000000000123e-05, 1.4138999999999818e-05, 1.4097000000001109e-05, 1.408299999999807e-05, 1.3971999999997514e-05, 1.4389000000000068e-05, 1.4527999999999763e-05, 1.4389000000000068e-05, 1.4416999999999208e-05, 1.4138999999999818e-05, 1.4013999999999693e-05, 1.4459000000001387e-05, 1.4402999999999638e-05, 1.4556000000002373e-05, 1.4459000000001387e-05, 1.4084000000001012e-05, 1.4374999999997029e-05, 1.3848000000000332e-05, 1.4236000000000804e-05, 1.3820000000001192e-05, 1.4125000000000248e-05, 1.4236000000000804e-05, 1.4527999999999763e-05, 1.4402999999999638e-05, 1.4152999999999388e-05, 1.4112000000000152e-05, 1.4527999999999763e-05, 1.4098000000000582e-05, 1.4138999999999818e-05, 1.4374999999997029e-05, 1.4514000000000193e-05, 1.3834000000000762e-05, 1.4250000000000373e-05, 1.380499999999868e-05, 1.3792000000002053e-05, 1.4334000000001262e-05, 1.3834000000000762e-05, 1.4305999999998653e-05, 1.3861999999999902e-05, 1.430499999999918e-05, 1.4222000000001234e-05, 1.461099999999771e-05, 1.4151999999999915e-05, 1.4429999999999304e-05, 1.4207999999998194e-05, 1.383299999999782e-05, 1.4458000000001914e-05]</msg>
<status status="PASS" starttime="20201029 12:46:18.041" endtime="20201029 12:46:18.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.031" endtime="20201029 12:46:18.046"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:18.054" endtime="20201029 12:46:18.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.051" endtime="20201029 12:46:18.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.049" endtime="20201029 12:46:18.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.640" endtime="20201029 12:46:18.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.640" endtime="20201029 12:46:18.075"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.084" endtime="20201029 12:46:18.100"></status>
</kw>
<msg timestamp="20201029 12:46:18.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:18.083" endtime="20201029 12:46:18.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:18.101" endtime="20201029 12:46:18.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.104" endtime="20201029 12:46:18.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.080" endtime="20201029 12:46:18.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.078" endtime="20201029 12:46:18.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.113" endtime="20201029 12:46:18.398"></status>
</kw>
<msg timestamp="20201029 12:46:18.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022998, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023012597, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:18.112" endtime="20201029 12:46:18.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022998, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023012597, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:18.402" endtime="20201029 12:46:18.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.411" endtime="20201029 12:46:18.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.109" endtime="20201029 12:46:18.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.107" endtime="20201029 12:46:18.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:18.417" level="INFO">${RESULT} = [{'diff': 1.459699999999814e-05}, {'diff': 1.4334000000001262e-05}, {'diff': 1.434699999999789e-05}, {'diff': 1.4430999999998778e-05}, {'diff': 1.4097000000001109e-05}, {'diff': 1.3806000000001623e-05...</msg>
<status status="PASS" starttime="20201029 12:46:18.414" endtime="20201029 12:46:18.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:18.422" level="INFO">${ACCURACY} = {'diff': [1.459699999999814e-05, 1.4334000000001262e-05, 1.434699999999789e-05, 1.4430999999998778e-05, 1.4097000000001109e-05, 1.3806000000001623e-05, 1.4277999999999513e-05, 1.4166999999998958e-05, ...</msg>
<status status="PASS" starttime="20201029 12:46:18.419" endtime="20201029 12:46:18.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.426" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 12:46:18.425" endtime="20201029 12:46:18.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.429" level="INFO">VALUE: [1.459699999999814e-05, 1.4334000000001262e-05, 1.434699999999789e-05, 1.4430999999998778e-05, 1.4097000000001109e-05, 1.3806000000001623e-05, 1.4277999999999513e-05, 1.4166999999998958e-05, 1.3848000000000332e-05, 1.4250000000000373e-05, 1.4402999999999638e-05, 1.4041999999998833e-05, 1.4056000000001873e-05, 1.4236000000000804e-05, 1.3973000000000457e-05, 1.461099999999771e-05, 1.4292000000002553e-05, 1.3819000000001719e-05, 1.4348000000000832e-05, 1.4679999999999555e-05, 1.3889000000003038e-05, 1.4166999999998958e-05, 1.4473000000000957e-05, 1.4624999999997279e-05, 1.4528000000003233e-05, 1.4041999999998833e-05, 1.401300000000022e-05, 1.4083000000001539e-05, 1.427700000000004e-05, 1.4013999999999693e-05, 1.4193999999998624e-05, 1.4208000000001664e-05, 1.454099999999986e-05, 1.427700000000004e-05, 1.4389000000000068e-05, 1.458299999999857e-05, 1.4179999999999054e-05, 1.3861000000000429e-05, 1.4250000000000373e-05, 1.404099999999936e-05, 1.4443999999998874e-05, 1.3791000000002579e-05, 1.3888999999999568e-05, 1.4693999999999124e-05, 1.4374999999997029e-05, 1.3861000000000429e-05, 1.455499999999943e-05, 1.4514000000000193e-05, 1.4624999999997279e-05, 1.4125000000000248e-05]</msg>
<status status="PASS" starttime="20201029 12:46:18.428" endtime="20201029 12:46:18.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.423" endtime="20201029 12:46:18.439"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:18.443" endtime="20201029 12:46:18.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.442" endtime="20201029 12:46:18.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.440" endtime="20201029 12:46:18.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.076" endtime="20201029 12:46:18.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.076" endtime="20201029 12:46:18.464"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.473" endtime="20201029 12:46:18.488"></status>
</kw>
<msg timestamp="20201029 12:46:18.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:18.472" endtime="20201029 12:46:18.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:18.489" endtime="20201029 12:46:18.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.492" endtime="20201029 12:46:18.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.469" endtime="20201029 12:46:18.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.467" endtime="20201029 12:46:18.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.501" endtime="20201029 12:46:18.788"></status>
</kw>
<msg timestamp="20201029 12:46:18.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022199153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022213556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:18.500" endtime="20201029 12:46:18.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022199153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022213556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:18.793" endtime="20201029 12:46:18.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.801" endtime="20201029 12:46:18.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.497" endtime="20201029 12:46:18.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.495" endtime="20201029 12:46:18.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:18.808" level="INFO">${RESULT} = [{'diff': 1.4402999999999638e-05}, {'diff': 1.3833000000001289e-05}, {'diff': 1.4472000000001484e-05}, {'diff': 1.3986000000000554e-05}, {'diff': 1.4444000000002344e-05}, {'diff': 1.4611000000001179e-...</msg>
<status status="PASS" starttime="20201029 12:46:18.805" endtime="20201029 12:46:18.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:18.813" level="INFO">${ACCURACY} = {'diff': [1.4402999999999638e-05, 1.3833000000001289e-05, 1.4472000000001484e-05, 1.3986000000000554e-05, 1.4444000000002344e-05, 1.4611000000001179e-05, 1.3791999999998583e-05, 1.4125000000000248e-05...</msg>
<status status="PASS" starttime="20201029 12:46:18.809" endtime="20201029 12:46:18.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.818" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 12:46:18.817" endtime="20201029 12:46:18.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.820" level="INFO">VALUE: [1.4402999999999638e-05, 1.3833000000001289e-05, 1.4472000000001484e-05, 1.3986000000000554e-05, 1.4444000000002344e-05, 1.4611000000001179e-05, 1.3791999999998583e-05, 1.4125000000000248e-05, 1.383299999999782e-05, 1.4694000000002594e-05, 1.3847000000000859e-05, 1.405499999999893e-05, 1.4277999999999513e-05, 1.4486000000001054e-05, 1.4583000000002039e-05, 1.4125000000000248e-05, 1.3957999999997944e-05, 1.3958000000001414e-05, 1.4319999999998223e-05, 1.4443999999998874e-05, 1.4527999999999763e-05, 1.3903000000002608e-05, 1.4514000000000193e-05, 1.3986000000000554e-05, 1.4221999999997764e-05, 1.4167000000002428e-05, 1.4569999999998473e-05, 1.4514000000000193e-05, 1.3889000000003038e-05, 1.4208000000001664e-05, 1.4527999999999763e-05, 1.4069999999997973e-05, 1.4250000000000373e-05, 1.4584000000001512e-05, 1.4555999999998903e-05, 1.4375000000000498e-05, 1.4375000000000498e-05, 1.4167000000002428e-05, 1.4500000000000624e-05, 1.4402999999999638e-05, 1.4208999999997668e-05, 1.4485999999997584e-05, 1.4084000000001012e-05, 1.434699999999789e-05, 1.4389000000000068e-05, 1.4415999999999735e-05, 1.4070000000001442e-05, 1.4138999999999818e-05, 1.4458999999997918e-05, 1.3861000000000429e-05]</msg>
<status status="PASS" starttime="20201029 12:46:18.819" endtime="20201029 12:46:18.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.814" endtime="20201029 12:46:18.822"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:18.826" endtime="20201029 12:46:18.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.824" endtime="20201029 12:46:18.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.823" endtime="20201029 12:46:18.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.465" endtime="20201029 12:46:18.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.465" endtime="20201029 12:46:18.846"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.855" endtime="20201029 12:46:18.870"></status>
</kw>
<msg timestamp="20201029 12:46:18.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:18.854" endtime="20201029 12:46:18.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:18.872" endtime="20201029 12:46:18.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.875" endtime="20201029 12:46:18.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.851" endtime="20201029 12:46:18.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.849" endtime="20201029 12:46:18.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.884" endtime="20201029 12:46:19.171"></status>
</kw>
<msg timestamp="20201029 12:46:19.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022369042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022383347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:18.882" endtime="20201029 12:46:19.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022369042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022383347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:19.176" endtime="20201029 12:46:19.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.184" endtime="20201029 12:46:19.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.880" endtime="20201029 12:46:19.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.878" endtime="20201029 12:46:19.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:19.191" level="INFO">${RESULT} = [{'diff': 1.4305000000002649e-05}, {'diff': 1.4360999999997459e-05}, {'diff': 1.4222000000001234e-05}, {'diff': 1.4389000000000068e-05}, {'diff': 1.4263999999999943e-05}, {'diff': 1.4500000000000624e-...</msg>
<status status="PASS" starttime="20201029 12:46:19.188" endtime="20201029 12:46:19.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:19.196" level="INFO">${ACCURACY} = {'diff': [1.4305000000002649e-05, 1.4360999999997459e-05, 1.4222000000001234e-05, 1.4389000000000068e-05, 1.4263999999999943e-05, 1.4500000000000624e-05, 1.3888999999999568e-05, 1.4584000000001512e-05...</msg>
<status status="PASS" starttime="20201029 12:46:19.192" endtime="20201029 12:46:19.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.200" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 12:46:19.199" endtime="20201029 12:46:19.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.203" level="INFO">VALUE: [1.4305000000002649e-05, 1.4360999999997459e-05, 1.4222000000001234e-05, 1.4389000000000068e-05, 1.4263999999999943e-05, 1.4500000000000624e-05, 1.3888999999999568e-05, 1.4584000000001512e-05, 1.3931000000001748e-05, 1.4097000000001109e-05, 1.4250000000000373e-05, 1.4070000000001442e-05, 1.4527999999999763e-05, 1.4305999999998653e-05, 1.4111000000000679e-05, 1.4292000000002553e-05, 1.4736000000001304e-05, 1.4277999999999513e-05, 1.4125000000000248e-05, 1.4208999999997668e-05, 1.3805999999998153e-05, 1.4431000000002248e-05, 1.4361000000000929e-05, 1.3986000000000554e-05, 1.4402999999999638e-05, 1.4375000000000498e-05, 1.4402999999999638e-05, 1.4223000000000707e-05, 1.3930000000002274e-05, 1.4625000000000749e-05, 1.455499999999943e-05, 1.3791999999998583e-05, 1.4401999999996695e-05, 1.4541999999999333e-05, 1.4402999999999638e-05, 1.4652999999999888e-05, 1.4333999999997793e-05, 1.4138999999999818e-05, 1.4625000000000749e-05, 1.4487000000000527e-05, 1.404099999999936e-05, 1.3861000000000429e-05, 1.3930000000002274e-05, 1.3749999999999873e-05, 1.40689999999985e-05, 1.4665999999999985e-05, 1.3819000000001719e-05, 1.4208000000001664e-05, 1.40689999999985e-05, 1.4679999999999555e-05]</msg>
<status status="PASS" starttime="20201029 12:46:19.201" endtime="20201029 12:46:19.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.196" endtime="20201029 12:46:19.204"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:19.208" endtime="20201029 12:46:19.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.206" endtime="20201029 12:46:19.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.205" endtime="20201029 12:46:19.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.847" endtime="20201029 12:46:19.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.847" endtime="20201029 12:46:19.229"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.238" endtime="20201029 12:46:19.257"></status>
</kw>
<msg timestamp="20201029 12:46:19.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:19.236" endtime="20201029 12:46:19.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:19.258" endtime="20201029 12:46:19.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.261" endtime="20201029 12:46:19.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.233" endtime="20201029 12:46:19.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.231" endtime="20201029 12:46:19.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.270" endtime="20201029 12:46:19.558"></status>
</kw>
<msg timestamp="20201029 12:46:19.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025272653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025287014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:19.269" endtime="20201029 12:46:19.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025272653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025287014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:19.562" endtime="20201029 12:46:19.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.570" endtime="20201029 12:46:19.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.266" endtime="20201029 12:46:19.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.264" endtime="20201029 12:46:19.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:19.577" level="INFO">${RESULT} = [{'diff': 1.4361000000000929e-05}, {'diff': 1.4444000000002344e-05}, {'diff': 1.4152999999999388e-05}, {'diff': 1.379099999999911e-05}, {'diff': 1.3848000000000332e-05}, {'diff': 1.4249999999996904e-0...</msg>
<status status="PASS" starttime="20201029 12:46:19.574" endtime="20201029 12:46:19.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:19.582" level="INFO">${ACCURACY} = {'diff': [1.4361000000000929e-05, 1.4444000000002344e-05, 1.4152999999999388e-05, 1.379099999999911e-05, 1.3848000000000332e-05, 1.4249999999996904e-05, 1.4472000000001484e-05, 1.431899999999875e-05, ...</msg>
<status status="PASS" starttime="20201029 12:46:19.578" endtime="20201029 12:46:19.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.586" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 12:46:19.585" endtime="20201029 12:46:19.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.589" level="INFO">VALUE: [1.4361000000000929e-05, 1.4444000000002344e-05, 1.4152999999999388e-05, 1.379099999999911e-05, 1.3848000000000332e-05, 1.4249999999996904e-05, 1.4472000000001484e-05, 1.431899999999875e-05, 1.3861000000000429e-05, 1.379099999999911e-05, 1.4415999999999735e-05, 1.4415999999999735e-05, 1.4151999999999915e-05, 1.427700000000004e-05, 1.4013999999999693e-05, 1.4277999999999513e-05, 1.380499999999868e-05, 1.4679999999999555e-05, 1.4111000000000679e-05, 1.4263999999999943e-05, 1.454099999999986e-05, 1.4457999999998444e-05, 1.3944000000001844e-05, 1.3819000000001719e-05, 1.405499999999893e-05, 1.3929999999998804e-05, 1.3791000000002579e-05, 1.3847000000000859e-05, 1.3833000000001289e-05, 1.3874999999999998e-05, 1.3805999999998153e-05, 1.4111000000000679e-05, 1.4514000000000193e-05, 1.4583000000002039e-05, 1.4430000000002774e-05, 1.4138999999999818e-05, 1.3888999999999568e-05, 1.4568999999999e-05, 1.4055000000002399e-05, 1.4152999999999388e-05, 1.4221999999997764e-05, 1.4457999999998444e-05, 1.4181000000001998e-05, 1.3819000000001719e-05, 1.4221999999997764e-05, 1.434699999999789e-05, 1.4056000000001873e-05, 1.3902999999999138e-05, 1.3791999999998583e-05, 1.4306000000002123e-05]</msg>
<status status="PASS" starttime="20201029 12:46:19.587" endtime="20201029 12:46:19.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.582" endtime="20201029 12:46:19.591"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:19.595" endtime="20201029 12:46:19.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.593" endtime="20201029 12:46:19.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.592" endtime="20201029 12:46:19.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.230" endtime="20201029 12:46:19.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.229" endtime="20201029 12:46:19.615"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.624" endtime="20201029 12:46:19.640"></status>
</kw>
<msg timestamp="20201029 12:46:19.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:19.623" endtime="20201029 12:46:19.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:19.641" endtime="20201029 12:46:19.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.644" endtime="20201029 12:46:19.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.620" endtime="20201029 12:46:19.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.618" endtime="20201029 12:46:19.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.653" endtime="20201029 12:46:19.940"></status>
</kw>
<msg timestamp="20201029 12:46:19.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022606153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:19.652" endtime="20201029 12:46:19.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022606153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:19.945" endtime="20201029 12:46:19.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.953" endtime="20201029 12:46:19.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.649" endtime="20201029 12:46:19.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.647" endtime="20201029 12:46:19.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:19.960" level="INFO">${RESULT} = [{'diff': 1.4903000000000138e-05}, {'diff': 1.5250000000001374e-05}, {'diff': 1.5431000000003248e-05}, {'diff': 1.540300000000064e-05}, {'diff': 1.555500000000043e-05}, {'diff': 1.5000000000001124e-05...</msg>
<status status="PASS" starttime="20201029 12:46:19.957" endtime="20201029 12:46:19.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:19.965" level="INFO">${ACCURACY} = {'diff': [1.4903000000000138e-05, 1.5250000000001374e-05, 1.5431000000003248e-05, 1.540300000000064e-05, 1.555500000000043e-05, 1.5000000000001124e-05, 1.4944999999998848e-05, 1.5139000000000818e-05, ...</msg>
<status status="PASS" starttime="20201029 12:46:19.961" endtime="20201029 12:46:19.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.970" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 12:46:19.969" endtime="20201029 12:46:19.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.972" level="INFO">VALUE: [1.4903000000000138e-05, 1.5250000000001374e-05, 1.5431000000003248e-05, 1.540300000000064e-05, 1.555500000000043e-05, 1.5000000000001124e-05, 1.4944999999998848e-05, 1.5139000000000818e-05, 1.4819999999998723e-05, 1.486099999999796e-05, 1.4957999999998944e-05, 1.5111999999997683e-05, 1.4957999999998944e-05, 1.533299999999932e-05, 1.4805999999999153e-05, 1.5208999999998668e-05, 1.5542000000000333e-05, 1.5084000000002012e-05, 1.561099999999871e-05, 1.5457999999999444e-05, 1.480499999999968e-05, 1.559699999999914e-05, 1.5097000000002109e-05, 1.5402000000001165e-05, 1.4957999999998944e-05, 1.562499999999828e-05, 1.4901999999997195e-05, 1.5000000000001124e-05, 1.558299999999957e-05, 1.559699999999914e-05, 1.484699999999839e-05, 1.5166000000000485e-05, 1.4929999999999805e-05, 1.5153000000000388e-05, 1.5402000000001165e-05, 1.533299999999932e-05, 1.5513999999997724e-05, 1.5221999999998764e-05, 1.5485999999998584e-05, 1.5152999999996919e-05, 1.4916000000000235e-05, 1.540300000000064e-05, 1.540300000000064e-05, 1.562500000000175e-05, 1.4944000000002844e-05, 1.5278000000000513e-05, 1.5097000000002109e-05, 1.4972000000001984e-05, 1.540300000000064e-05, 1.531899999999975e-05]</msg>
<status status="PASS" starttime="20201029 12:46:19.971" endtime="20201029 12:46:19.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.966" endtime="20201029 12:46:19.974"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:19.978" endtime="20201029 12:46:19.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.976" endtime="20201029 12:46:19.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.975" endtime="20201029 12:46:19.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.616" endtime="20201029 12:46:19.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.616" endtime="20201029 12:46:19.998"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.007" endtime="20201029 12:46:20.022"></status>
</kw>
<msg timestamp="20201029 12:46:20.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:20.006" endtime="20201029 12:46:20.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:20.024" endtime="20201029 12:46:20.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.027" endtime="20201029 12:46:20.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.003" endtime="20201029 12:46:20.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.001" endtime="20201029 12:46:20.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.036" endtime="20201029 12:46:20.326"></status>
</kw>
<msg timestamp="20201029 12:46:20.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022568056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022584014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:20.034" endtime="20201029 12:46:20.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022568056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022584014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:20.330" endtime="20201029 12:46:20.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.339" endtime="20201029 12:46:20.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.032" endtime="20201029 12:46:20.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.030" endtime="20201029 12:46:20.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:20.346" level="INFO">${RESULT} = [{'diff': 1.5957999999999944e-05}, {'diff': 1.605500000000093e-05}, {'diff': 1.6472000000000014e-05}, {'diff': 1.581900000000025e-05}, {'diff': 1.6137999999998875e-05}, {'diff': 1.586100000000243e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:20.342" endtime="20201029 12:46:20.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:20.350" level="INFO">${ACCURACY} = {'diff': [1.5957999999999944e-05, 1.605500000000093e-05, 1.6472000000000014e-05, 1.581900000000025e-05, 1.6137999999998875e-05, 1.586100000000243e-05, 1.5985999999999084e-05, 1.580499999999721e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:46:20.347" endtime="20201029 12:46:20.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.355" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 12:46:20.354" endtime="20201029 12:46:20.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.357" level="INFO">VALUE: [1.5957999999999944e-05, 1.605500000000093e-05, 1.6472000000000014e-05, 1.581900000000025e-05, 1.6137999999998875e-05, 1.586100000000243e-05, 1.5985999999999084e-05, 1.580499999999721e-05, 1.608300000000007e-05, 1.5957999999999944e-05, 1.612499999999878e-05, 1.590300000000114e-05, 1.613899999999835e-05, 1.612499999999878e-05, 1.6166000000001485e-05, 1.6651999999998945e-05, 1.5764000000001444e-05, 1.6430000000001305e-05, 1.6221999999999764e-05, 1.580500000000068e-05, 1.6528000000001764e-05, 1.5986000000002554e-05, 1.604099999999789e-05, 1.661099999999971e-05, 1.612499999999878e-05, 1.5778000000001013e-05, 1.6292000000001083e-05, 1.6320000000000223e-05, 1.5749999999998404e-05, 1.662499999999928e-05, 1.6735999999999834e-05, 1.588900000000157e-05, 1.5930000000000805e-05, 1.5971999999999514e-05, 1.591700000000071e-05, 1.633300000000032e-05, 1.6277999999998044e-05, 1.611099999999921e-05, 1.6014000000001694e-05, 1.5777999999997544e-05, 1.663899999999885e-05, 1.6028000000001263e-05, 1.583299999999982e-05, 1.613900000000182e-05, 1.5986000000002554e-05, 1.65829999999971e-05, 1.588900000000157e-05, 1.6181000000000528e-05, 1.5735999999998834e-05, 1.659700000000014e-05]</msg>
<status status="PASS" starttime="20201029 12:46:20.356" endtime="20201029 12:46:20.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.351" endtime="20201029 12:46:20.359"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:20.362" endtime="20201029 12:46:20.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.361" endtime="20201029 12:46:20.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.360" endtime="20201029 12:46:20.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.999" endtime="20201029 12:46:20.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.999" endtime="20201029 12:46:20.383"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.392" endtime="20201029 12:46:20.409"></status>
</kw>
<msg timestamp="20201029 12:46:20.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:20.391" endtime="20201029 12:46:20.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:20.410" endtime="20201029 12:46:20.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.413" endtime="20201029 12:46:20.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.388" endtime="20201029 12:46:20.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.386" endtime="20201029 12:46:20.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.422" endtime="20201029 12:46:20.709"></status>
</kw>
<msg timestamp="20201029 12:46:20.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023211278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023228736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:20.421" endtime="20201029 12:46:20.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023211278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023228736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:20.714" endtime="20201029 12:46:20.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.722" endtime="20201029 12:46:20.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.418" endtime="20201029 12:46:20.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.416" endtime="20201029 12:46:20.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:20.729" level="INFO">${RESULT} = [{'diff': 1.7458000000001445e-05}, {'diff': 1.737500000000003e-05}, {'diff': 1.737500000000003e-05}, {'diff': 1.712499999999978e-05}, {'diff': 1.6861999999999433e-05}, {'diff': 1.7513999999999724e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:20.726" endtime="20201029 12:46:20.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:20.734" level="INFO">${ACCURACY} = {'diff': [1.7458000000001445e-05, 1.737500000000003e-05, 1.737500000000003e-05, 1.712499999999978e-05, 1.6861999999999433e-05, 1.7513999999999724e-05, 1.7444000000001875e-05, 1.731899999999828e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:46:20.730" endtime="20201029 12:46:20.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.738" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 12:46:20.737" endtime="20201029 12:46:20.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.741" level="INFO">VALUE: [1.7458000000001445e-05, 1.737500000000003e-05, 1.737500000000003e-05, 1.712499999999978e-05, 1.6861999999999433e-05, 1.7513999999999724e-05, 1.7444000000001875e-05, 1.731899999999828e-05, 1.7084000000000543e-05, 1.744500000000135e-05, 1.7236000000000334e-05, 1.737500000000003e-05, 1.740299999999917e-05, 1.741699999999874e-05, 1.7334000000000793e-05, 1.7236999999999808e-05, 1.681900000000125e-05, 1.711100000000021e-05, 1.756899999999853e-05, 1.7388000000000126e-05, 1.7137999999999876e-05, 1.727699999999957e-05, 1.7137999999999876e-05, 1.7457999999997975e-05, 1.7486000000000584e-05, 1.729099999999914e-05, 1.740300000000264e-05, 1.6944000000001375e-05, 1.75829999999981e-05, 1.712499999999978e-05, 1.7263999999999474e-05, 1.73889999999996e-05, 1.7458000000001445e-05, 1.730499999999871e-05, 1.754099999999939e-05, 1.7236000000000334e-05, 1.759700000000114e-05, 1.7250000000003374e-05, 1.6999999999999654e-05, 1.6791999999998114e-05, 1.755500000000243e-05, 1.68889999999991e-05, 1.7014000000002694e-05, 1.686099999999996e-05, 1.7305999999998184e-05, 1.7194000000001625e-05, 1.758300000000157e-05, 1.690299999999867e-05, 1.741700000000221e-05, 1.7527999999999294e-05]</msg>
<status status="PASS" starttime="20201029 12:46:20.739" endtime="20201029 12:46:20.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.734" endtime="20201029 12:46:20.743"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:20.747" endtime="20201029 12:46:20.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.745" endtime="20201029 12:46:20.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.744" endtime="20201029 12:46:20.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.384" endtime="20201029 12:46:20.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.383" endtime="20201029 12:46:20.768"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.776" endtime="20201029 12:46:20.792"></status>
</kw>
<msg timestamp="20201029 12:46:20.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:20.775" endtime="20201029 12:46:20.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:20.793" endtime="20201029 12:46:20.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.796" endtime="20201029 12:46:20.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.772" endtime="20201029 12:46:20.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.770" endtime="20201029 12:46:20.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.805" endtime="20201029 12:46:21.091"></status>
</kw>
<msg timestamp="20201029 12:46:21.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022149306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022167736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:20.804" endtime="20201029 12:46:21.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022149306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022167736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:21.096" endtime="20201029 12:46:21.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.104" endtime="20201029 12:46:21.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.801" endtime="20201029 12:46:21.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.799" endtime="20201029 12:46:21.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:21.111" level="INFO">${RESULT} = [{'diff': 1.8429999999999835e-05}, {'diff': 1.7971999999998045e-05}, {'diff': 1.845899999999845e-05}, {'diff': 1.844500000000235e-05}, {'diff': 1.8528000000000294e-05}, {'diff': 1.790299999999967e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:21.108" endtime="20201029 12:46:21.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:21.116" level="INFO">${ACCURACY} = {'diff': [1.8429999999999835e-05, 1.7971999999998045e-05, 1.845899999999845e-05, 1.844500000000235e-05, 1.8528000000000294e-05, 1.790299999999967e-05, 1.841699999999974e-05, 1.8027999999999794e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:46:21.112" endtime="20201029 12:46:21.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.121" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 12:46:21.120" endtime="20201029 12:46:21.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.123" level="INFO">VALUE: [1.8429999999999835e-05, 1.7971999999998045e-05, 1.845899999999845e-05, 1.844500000000235e-05, 1.8528000000000294e-05, 1.790299999999967e-05, 1.841699999999974e-05, 1.8027999999999794e-05, 1.861099999999824e-05, 1.840300000000017e-05, 1.818099999999906e-05, 1.8457999999998975e-05, 1.8014000000000224e-05, 1.80829999999986e-05, 1.8042000000002834e-05, 1.8320000000002223e-05, 1.8041999999999364e-05, 1.8487000000001058e-05, 1.8237000000000808e-05, 1.8014000000000224e-05, 1.8457999999998975e-05, 1.830499999999971e-05, 1.7915999999999765e-05, 1.7957999999998475e-05, 1.8249999999997435e-05, 1.802699999999685e-05, 1.852700000000082e-05, 1.852700000000082e-05, 1.831899999999928e-05, 1.8236000000001334e-05, 1.8416000000000265e-05, 1.855499999999996e-05, 1.830499999999971e-05, 1.7957999999998475e-05, 1.852699999999735e-05, 1.7958000000001945e-05, 1.8278000000000044e-05, 1.790299999999967e-05, 1.7777999999999544e-05, 1.837500000000103e-05, 1.8166000000000015e-05, 1.780499999999921e-05, 1.8250000000000904e-05, 1.7957999999998475e-05, 1.8291999999999614e-05, 1.812499999999731e-05, 1.808300000000207e-05, 1.783300000000182e-05, 1.793100000000228e-05, 1.808300000000207e-05]</msg>
<status status="PASS" starttime="20201029 12:46:21.122" endtime="20201029 12:46:21.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.117" endtime="20201029 12:46:21.125"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:21.129" endtime="20201029 12:46:21.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.127" endtime="20201029 12:46:21.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.126" endtime="20201029 12:46:21.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.769" endtime="20201029 12:46:21.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.768" endtime="20201029 12:46:21.149"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.158" endtime="20201029 12:46:21.173"></status>
</kw>
<msg timestamp="20201029 12:46:21.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.157" endtime="20201029 12:46:21.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.175" endtime="20201029 12:46:21.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.178" endtime="20201029 12:46:21.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.154" endtime="20201029 12:46:21.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.152" endtime="20201029 12:46:21.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.187" endtime="20201029 12:46:21.474"></status>
</kw>
<msg timestamp="20201029 12:46:21.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022554778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022573764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:21.185" endtime="20201029 12:46:21.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022554778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022573764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:21.478" endtime="20201029 12:46:21.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.487" endtime="20201029 12:46:21.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.183" endtime="20201029 12:46:21.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.181" endtime="20201029 12:46:21.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:21.495" level="INFO">${RESULT} = [{'diff': 1.8985999999998615e-05}, {'diff': 1.92089999999992e-05}, {'diff': 1.952699999999835e-05}, {'diff': 1.8973000000001988e-05}, {'diff': 1.962500000000228e-05}, {'diff': 1.9457999999999975e-05},...</msg>
<status status="PASS" starttime="20201029 12:46:21.491" endtime="20201029 12:46:21.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:21.499" level="INFO">${ACCURACY} = {'diff': [1.8985999999998615e-05, 1.92089999999992e-05, 1.952699999999835e-05, 1.8973000000001988e-05, 1.962500000000228e-05, 1.9457999999999975e-05, 1.9387999999998656e-05, 1.8971999999999045e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:46:21.496" endtime="20201029 12:46:21.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.504" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 12:46:21.503" endtime="20201029 12:46:21.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.507" level="INFO">VALUE: [1.8985999999998615e-05, 1.92089999999992e-05, 1.952699999999835e-05, 1.8973000000001988e-05, 1.962500000000228e-05, 1.9457999999999975e-05, 1.9387999999998656e-05, 1.8971999999999045e-05, 1.904100000000089e-05, 1.930500000000071e-05, 1.891700000000024e-05, 1.9277999999997575e-05, 1.937499999999856e-05, 1.881899999999978e-05, 1.8943999999999905e-05, 1.93890000000016e-05, 1.880500000000021e-05, 1.8750000000001404e-05, 1.906900000000003e-05, 1.9207999999999725e-05, 1.884699999999892e-05, 1.906900000000003e-05, 1.9221999999999295e-05, 1.8957999999999475e-05, 1.9514000000001724e-05, 1.9221999999999295e-05, 1.89029999999972e-05, 1.8820000000002723e-05, 1.890300000000067e-05, 1.8957999999999475e-05, 1.9264000000001474e-05, 1.955499999999749e-05, 1.9221999999999295e-05, 1.9306000000000184e-05, 1.9194000000000155e-05, 1.8986000000002085e-05, 1.962499999999881e-05, 1.941700000000074e-05, 1.906900000000003e-05, 1.90829999999996e-05, 1.881899999999978e-05, 1.8986000000002085e-05, 1.9471999999999545e-05, 1.9471999999999545e-05, 1.8901999999997726e-05, 1.891700000000024e-05, 1.937499999999856e-05, 1.965299999999795e-05, 1.943100000000031e-05, 1.887499999999806e-05]</msg>
<status status="PASS" starttime="20201029 12:46:21.505" endtime="20201029 12:46:21.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.500" endtime="20201029 12:46:21.508"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:21.512" endtime="20201029 12:46:21.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.510" endtime="20201029 12:46:21.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.509" endtime="20201029 12:46:21.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.150" endtime="20201029 12:46:21.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.150" endtime="20201029 12:46:21.533"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.542" endtime="20201029 12:46:21.558"></status>
</kw>
<msg timestamp="20201029 12:46:21.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.540" endtime="20201029 12:46:21.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.560" endtime="20201029 12:46:21.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.562" endtime="20201029 12:46:21.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.537" endtime="20201029 12:46:21.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.535" endtime="20201029 12:46:21.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.571" endtime="20201029 12:46:21.857"></status>
</kw>
<msg timestamp="20201029 12:46:21.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023528764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023548625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:21.570" endtime="20201029 12:46:21.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023528764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023548625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:21.862" endtime="20201029 12:46:21.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.870" endtime="20201029 12:46:21.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.567" endtime="20201029 12:46:21.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.565" endtime="20201029 12:46:21.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:21.877" level="INFO">${RESULT} = [{'diff': 1.986099999999949e-05}, {'diff': 1.994500000000038e-05}, {'diff': 2.023699999999934e-05}, {'diff': 2.0611999999999714e-05}, {'diff': 2.02090000000002e-05}, {'diff': 2.0542000000001864e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:21.874" endtime="20201029 12:46:21.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:21.881" level="INFO">${ACCURACY} = {'diff': [1.986099999999949e-05, 1.994500000000038e-05, 2.023699999999934e-05, 2.0611999999999714e-05, 2.02090000000002e-05, 2.0542000000001864e-05, 1.9985999999999615e-05, 1.9764000000001974e-05, 2.0...</msg>
<status status="PASS" starttime="20201029 12:46:21.878" endtime="20201029 12:46:21.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.886" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 12:46:21.885" endtime="20201029 12:46:21.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.888" level="INFO">VALUE: [1.986099999999949e-05, 1.994500000000038e-05, 2.023699999999934e-05, 2.0611999999999714e-05, 2.02090000000002e-05, 2.0542000000001864e-05, 1.9985999999999615e-05, 1.9764000000001974e-05, 2.015300000000192e-05, 2.009700000000017e-05, 2.0165999999998546e-05, 2.004099999999842e-05, 1.981899999999731e-05, 1.979100000000164e-05, 2.055500000000196e-05, 2.05830000000011e-05, 2.029100000000214e-05, 2.0194000000001155e-05, 2.05830000000011e-05, 2.0458000000000975e-05, 2.029100000000214e-05, 2.056899999999806e-05, 2.0014000000002224e-05, 2.0249999999999435e-05, 2.0292000000001614e-05, 1.987499999999906e-05, 2.036099999999999e-05, 2.004099999999842e-05, 1.981900000000078e-05, 1.984699999999992e-05, 2.0084000000000074e-05, 2.0722000000000795e-05, 1.9778000000001544e-05, 1.9750000000002405e-05, 2.0042000000001364e-05, 2.016699999999802e-05, 2.0249999999999435e-05, 2.0749999999999935e-05, 1.9708000000000225e-05, 1.9999999999999185e-05, 1.993100000000081e-05, 2.0055999999997465e-05, 2.018100000000106e-05, 1.986099999999949e-05, 1.9833999999999824e-05, 2.0513999999999255e-05, 2.0570000000001004e-05, 2.0278000000002044e-05, 1.984699999999992e-05, 2.015299999999845e-05]</msg>
<status status="PASS" starttime="20201029 12:46:21.887" endtime="20201029 12:46:21.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.882" endtime="20201029 12:46:21.891"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:21.894" endtime="20201029 12:46:21.914"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.893" endtime="20201029 12:46:21.914"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.892" endtime="20201029 12:46:21.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.533" endtime="20201029 12:46:21.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.533" endtime="20201029 12:46:21.915"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.924" endtime="20201029 12:46:21.939"></status>
</kw>
<msg timestamp="20201029 12:46:21.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.923" endtime="20201029 12:46:21.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.941" endtime="20201029 12:46:21.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.944" endtime="20201029 12:46:21.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.920" endtime="20201029 12:46:21.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.918" endtime="20201029 12:46:21.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.953" endtime="20201029 12:46:22.241"></status>
</kw>
<msg timestamp="20201029 12:46:22.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022204194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022225153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:21.951" endtime="20201029 12:46:22.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022204194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022225153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:22.245" endtime="20201029 12:46:22.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.254" endtime="20201029 12:46:22.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.949" endtime="20201029 12:46:22.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.947" endtime="20201029 12:46:22.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:22.260" level="INFO">${RESULT} = [{'diff': 2.095900000000095e-05}, {'diff': 2.119500000000163e-05}, {'diff': 2.133299999999838e-05}, {'diff': 2.10969999999977e-05}, {'diff': 2.084699999999745e-05}, {'diff': 2.0749999999999935e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:22.257" endtime="20201029 12:46:22.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:22.266" level="INFO">${ACCURACY} = {'diff': [2.095900000000095e-05, 2.119500000000163e-05, 2.133299999999838e-05, 2.10969999999977e-05, 2.084699999999745e-05, 2.0749999999999935e-05, 2.0806000000001684e-05, 2.137500000000056e-05, 2.161...</msg>
<status status="PASS" starttime="20201029 12:46:22.261" endtime="20201029 12:46:22.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.270" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 12:46:22.269" endtime="20201029 12:46:22.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.273" level="INFO">VALUE: [2.095900000000095e-05, 2.119500000000163e-05, 2.133299999999838e-05, 2.10969999999977e-05, 2.084699999999745e-05, 2.0749999999999935e-05, 2.0806000000001684e-05, 2.137500000000056e-05, 2.161099999999777e-05, 2.1500000000000685e-05, 2.1334000000001324e-05, 2.1264000000000005e-05, 2.1277999999999575e-05, 2.166699999999952e-05, 2.1028000000002794e-05, 2.1069999999998035e-05, 2.161099999999777e-05, 2.1541999999999395e-05, 2.1277999999999575e-05, 2.087500000000006e-05, 2.143099999999884e-05, 2.116699999999902e-05, 2.1444000000002406e-05, 2.180499999999974e-05, 2.129099999999967e-05, 2.1084000000001074e-05, 2.148700000000059e-05, 2.119499999999816e-05, 2.144500000000188e-05, 2.111100000000074e-05, 2.0943999999998436e-05, 2.1402000000000226e-05, 2.109700000000117e-05, 2.1458000000001975e-05, 2.0901999999999726e-05, 2.0888000000000156e-05, 2.0930000000002336e-05, 2.1458000000001975e-05, 2.163900000000038e-05, 2.1179999999999116e-05, 2.156899999999906e-05, 2.1250000000000435e-05, 2.0972000000001045e-05, 2.087500000000006e-05, 2.0792000000002114e-05, 2.0986000000000615e-05, 2.138900000000013e-05, 2.106899999999856e-05, 2.0749999999999935e-05, 2.1444000000002406e-05]</msg>
<status status="PASS" starttime="20201029 12:46:22.271" endtime="20201029 12:46:22.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.266" endtime="20201029 12:46:22.274"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:22.278" endtime="20201029 12:46:22.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.276" endtime="20201029 12:46:22.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.275" endtime="20201029 12:46:22.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.916" endtime="20201029 12:46:22.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.915" endtime="20201029 12:46:22.299"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.308" endtime="20201029 12:46:22.322"></status>
</kw>
<msg timestamp="20201029 12:46:22.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.306" endtime="20201029 12:46:22.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.324" endtime="20201029 12:46:22.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.326" endtime="20201029 12:46:22.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.303" endtime="20201029 12:46:22.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.301" endtime="20201029 12:46:22.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.336" endtime="20201029 12:46:22.624"></status>
</kw>
<msg timestamp="20201029 12:46:22.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022187194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022209542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:22.334" endtime="20201029 12:46:22.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022187194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022209542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:22.628" endtime="20201029 12:46:22.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.637" endtime="20201029 12:46:22.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.331" endtime="20201029 12:46:22.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.330" endtime="20201029 12:46:22.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:22.644" level="INFO">${RESULT} = [{'diff': 2.2347999999998425e-05}, {'diff': 2.187499999999759e-05}, {'diff': 2.1749999999997466e-05}, {'diff': 2.2235999999998396e-05}, {'diff': 2.2180000000000116e-05}, {'diff': 2.1929999999999866e-0...</msg>
<status status="PASS" starttime="20201029 12:46:22.640" endtime="20201029 12:46:22.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:22.648" level="INFO">${ACCURACY} = {'diff': [2.2347999999998425e-05, 2.187499999999759e-05, 2.1749999999997466e-05, 2.2235999999998396e-05, 2.2180000000000116e-05, 2.1929999999999866e-05, 2.2443999999999936e-05, 2.180499999999974e-05, ...</msg>
<status status="PASS" starttime="20201029 12:46:22.645" endtime="20201029 12:46:22.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.652" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 12:46:22.651" endtime="20201029 12:46:22.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.655" level="INFO">VALUE: [2.2347999999998425e-05, 2.187499999999759e-05, 2.1749999999997466e-05, 2.2235999999998396e-05, 2.2180000000000116e-05, 2.1929999999999866e-05, 2.2443999999999936e-05, 2.180499999999974e-05, 2.2443999999999936e-05, 2.2000000000001185e-05, 2.233299999999938e-05, 2.1986000000001615e-05, 2.2250000000001435e-05, 2.218099999999959e-05, 2.20830000000026e-05, 2.2458000000002976e-05, 2.231899999999981e-05, 2.2041999999999895e-05, 2.259700000000267e-05, 2.2014000000000755e-05, 2.1764000000000505e-05, 2.262500000000181e-05, 2.2527999999997356e-05, 2.234699999999895e-05, 2.1999999999997716e-05, 2.20969999999987e-05, 2.1791999999999645e-05, 2.2542000000000395e-05, 2.2221999999998826e-05, 2.237500000000156e-05, 2.211100000000174e-05, 2.241700000000027e-05, 2.229100000000067e-05, 2.184700000000192e-05, 2.2084000000002074e-05, 2.237500000000156e-05, 2.2514000000001255e-05, 2.2443999999999936e-05, 2.2583999999999105e-05, 2.2263999999997536e-05, 2.261099999999877e-05, 2.237499999999809e-05, 2.193099999999934e-05, 2.212499999999784e-05, 2.2597999999998675e-05, 2.181899999999931e-05, 2.247299999999855e-05, 2.1848000000001394e-05, 2.2569999999999535e-05, 2.2055999999999465e-05]</msg>
<status status="PASS" starttime="20201029 12:46:22.654" endtime="20201029 12:46:22.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.649" endtime="20201029 12:46:22.656"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:22.660" endtime="20201029 12:46:22.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.659" endtime="20201029 12:46:22.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.658" endtime="20201029 12:46:22.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.300" endtime="20201029 12:46:22.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.299" endtime="20201029 12:46:22.681"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.696" endtime="20201029 12:46:22.715"></status>
</kw>
<msg timestamp="20201029 12:46:22.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.694" endtime="20201029 12:46:22.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.716" endtime="20201029 12:46:22.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.719" endtime="20201029 12:46:22.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.689" endtime="20201029 12:46:22.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.686" endtime="20201029 12:46:22.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.729" endtime="20201029 12:46:23.014"></status>
</kw>
<msg timestamp="20201029 12:46:23.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031854931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031878, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:22.727" endtime="20201029 12:46:23.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031854931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031878, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:23.019" endtime="20201029 12:46:23.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.028" endtime="20201029 12:46:23.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.724" endtime="20201029 12:46:23.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.723" endtime="20201029 12:46:23.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:23.034" level="INFO">${RESULT} = [{'diff': 2.3068999999993622e-05}, {'diff': 2.288899999999816e-05}, {'diff': 2.3070000000000035e-05}, {'diff': 2.344499999999694e-05}, {'diff': 2.3292000000001145e-05}, {'diff': 2.312499999999884e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:23.031" endtime="20201029 12:46:23.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:23.039" level="INFO">${ACCURACY} = {'diff': [2.3068999999993622e-05, 2.288899999999816e-05, 2.3070000000000035e-05, 2.344499999999694e-05, 2.3292000000001145e-05, 2.312499999999884e-05, 2.312499999999884e-05, 2.3027999999994386e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:46:23.035" endtime="20201029 12:46:23.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.043" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 12:46:23.042" endtime="20201029 12:46:23.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.046" level="INFO">VALUE: [2.3068999999993622e-05, 2.288899999999816e-05, 2.3070000000000035e-05, 2.344499999999694e-05, 2.3292000000001145e-05, 2.312499999999884e-05, 2.312499999999884e-05, 2.3027999999994386e-05, 2.2819999999999785e-05, 2.287499999999859e-05, 2.3542000000001395e-05, 2.3111999999998745e-05, 2.3264000000002005e-05, 2.283299999999988e-05, 2.308300000000013e-05, 2.276300000000203e-05, 2.3333999999999855e-05, 2.329100000000167e-05, 2.3527999999994886e-05, 2.2806000000000215e-05, 2.306900000000056e-05, 2.3443999999997467e-05, 2.358300000000063e-05, 2.2986000000002615e-05, 2.3137999999998937e-05, 2.286099999999902e-05, 2.306900000000056e-05, 2.284699999999945e-05, 2.361099999999977e-05, 2.3486000000003115e-05, 2.283299999999988e-05, 2.27770000000016e-05, 2.331900000000081e-05, 2.356900000000106e-05, 2.356900000000106e-05, 2.28890000000051e-05, 2.3499999999995747e-05, 2.3514000000002255e-05, 2.306900000000056e-05, 2.306900000000056e-05, 2.3528000000001825e-05, 2.3556000000000965e-05, 2.283299999999988e-05, 2.3471999999996607e-05, 2.334699999999995e-05, 2.290299999999773e-05, 2.319500000000363e-05, 2.3570000000000535e-05, 2.3208000000003726e-05, 2.35970000000002e-05]</msg>
<status status="PASS" starttime="20201029 12:46:23.044" endtime="20201029 12:46:23.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.040" endtime="20201029 12:46:23.048"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:23.052" endtime="20201029 12:46:23.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.050" endtime="20201029 12:46:23.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.049" endtime="20201029 12:46:23.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.682" endtime="20201029 12:46:23.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.682" endtime="20201029 12:46:23.073"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.082" endtime="20201029 12:46:23.097"></status>
</kw>
<msg timestamp="20201029 12:46:23.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:23.080" endtime="20201029 12:46:23.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:23.098" endtime="20201029 12:46:23.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.101" endtime="20201029 12:46:23.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.077" endtime="20201029 12:46:23.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.075" endtime="20201029 12:46:23.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.110" endtime="20201029 12:46:23.397"></status>
</kw>
<msg timestamp="20201029 12:46:23.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022151597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022176167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:23.109" endtime="20201029 12:46:23.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022151597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022176167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:23.402" endtime="20201029 12:46:23.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.410" endtime="20201029 12:46:23.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.106" endtime="20201029 12:46:23.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.104" endtime="20201029 12:46:23.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:23.417" level="INFO">${RESULT} = [{'diff': 2.4570000000001535e-05}, {'diff': 2.411100000000027e-05}, {'diff': 2.436100000000052e-05}, {'diff': 2.4457999999998037e-05}, {'diff': 2.408300000000113e-05}, {'diff': 2.4540999999999452e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:23.414" endtime="20201029 12:46:23.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:23.422" level="INFO">${ACCURACY} = {'diff': [2.4570000000001535e-05, 2.411100000000027e-05, 2.436100000000052e-05, 2.4457999999998037e-05, 2.408300000000113e-05, 2.4540999999999452e-05, 2.4304999999998772e-05, 2.438899999999966e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:46:23.418" endtime="20201029 12:46:23.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.427" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 12:46:23.426" endtime="20201029 12:46:23.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.430" level="INFO">VALUE: [2.4570000000001535e-05, 2.411100000000027e-05, 2.436100000000052e-05, 2.4457999999998037e-05, 2.408300000000113e-05, 2.4540999999999452e-05, 2.4304999999998772e-05, 2.438899999999966e-05, 2.4693999999998717e-05, 2.390299999999873e-05, 2.384700000000045e-05, 2.390299999999873e-05, 2.406900000000156e-05, 2.3972000000000576e-05, 2.4500000000000216e-05, 2.413899999999941e-05, 2.393099999999787e-05, 2.3832999999997412e-05, 2.4263999999999536e-05, 2.411100000000027e-05, 2.4486000000000646e-05, 2.40970000000007e-05, 2.4610999999997302e-05, 2.388900000000263e-05, 2.4666000000003047e-05, 2.44030000000027e-05, 2.4542000000002395e-05, 2.418099999999812e-05, 2.4471999999997607e-05, 2.4291999999998676e-05, 2.440299999999923e-05, 2.4472000000001076e-05, 2.419500000000116e-05, 2.444499999999794e-05, 2.462500000000034e-05, 2.4041999999998426e-05, 2.4084000000000605e-05, 2.3806000000001215e-05, 2.3986000000000146e-05, 2.406900000000156e-05, 2.4056000000001465e-05, 2.42230000000003e-05, 2.39030000000022e-05, 2.4334000000000855e-05, 2.3915999999998827e-05, 2.4570000000001535e-05, 2.387499999999959e-05, 2.4276999999999632e-05, 2.4458000000001506e-05, 2.4707999999998287e-05]</msg>
<status status="PASS" starttime="20201029 12:46:23.428" endtime="20201029 12:46:23.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.423" endtime="20201029 12:46:23.435"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:23.439" endtime="20201029 12:46:23.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.437" endtime="20201029 12:46:23.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.436" endtime="20201029 12:46:23.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.074" endtime="20201029 12:46:23.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.073" endtime="20201029 12:46:23.459"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.468" endtime="20201029 12:46:23.484"></status>
</kw>
<msg timestamp="20201029 12:46:23.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:23.467" endtime="20201029 12:46:23.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:23.485" endtime="20201029 12:46:23.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.488" endtime="20201029 12:46:23.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.464" endtime="20201029 12:46:23.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.462" endtime="20201029 12:46:23.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.497" endtime="20201029 12:46:23.784"></status>
</kw>
<msg timestamp="20201029 12:46:23.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022492306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022517347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:23.496" endtime="20201029 12:46:23.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022492306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022517347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:23.788" endtime="20201029 12:46:23.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.797" endtime="20201029 12:46:23.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.493" endtime="20201029 12:46:23.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.491" endtime="20201029 12:46:23.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:23.804" level="INFO">${RESULT} = [{'diff': 2.5040999999999952e-05}, {'diff': 2.5500000000001216e-05}, {'diff': 2.540300000000023e-05}, {'diff': 2.4971999999998107e-05}, {'diff': 2.4792000000002645e-05}, {'diff': 2.4820000000001785e-0...</msg>
<status status="PASS" starttime="20201029 12:46:23.800" endtime="20201029 12:46:23.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:23.808" level="INFO">${ACCURACY} = {'diff': [2.5040999999999952e-05, 2.5500000000001216e-05, 2.540300000000023e-05, 2.4971999999998107e-05, 2.4792000000002645e-05, 2.4820000000001785e-05, 2.5264000000000536e-05, 2.5250000000000966e-05,...</msg>
<status status="PASS" starttime="20201029 12:46:23.805" endtime="20201029 12:46:23.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.813" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 12:46:23.812" endtime="20201029 12:46:23.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.815" level="INFO">VALUE: [2.5040999999999952e-05, 2.5500000000001216e-05, 2.540300000000023e-05, 2.4971999999998107e-05, 2.4792000000002645e-05, 2.4820000000001785e-05, 2.5264000000000536e-05, 2.5250000000000966e-05, 2.513900000000041e-05, 2.543099999999937e-05, 2.512499999999737e-05, 2.5027999999999856e-05, 2.520899999999826e-05, 2.561100000000177e-05, 2.548700000000112e-05, 2.5348000000001425e-05, 2.5250000000000966e-05, 2.54169999999998e-05, 2.538900000000066e-05, 2.4806000000002215e-05, 2.5291999999999676e-05, 2.5598000000001675e-05, 2.5582999999999162e-05, 2.523700000000087e-05, 2.4818999999998842e-05, 2.488900000000016e-05, 2.5291000000000202e-05, 2.5471999999998607e-05, 2.537499999999762e-05, 2.505500000000299e-05, 2.5013000000000812e-05, 2.4818999999998842e-05, 2.5457999999999037e-05, 2.490299999999973e-05, 2.5000000000000716e-05, 2.5528000000000356e-05, 2.5222000000001826e-05, 2.511100000000127e-05, 2.5582999999999162e-05, 2.5528000000000356e-05, 2.512499999999737e-05, 2.5194000000002686e-05, 2.5222000000001826e-05, 2.5193999999999217e-05, 2.4972000000001576e-05, 2.5582999999999162e-05, 2.515299999999998e-05, 2.4791999999999176e-05, 2.49169999999993e-05, 2.493099999999887e-05]</msg>
<status status="PASS" starttime="20201029 12:46:23.814" endtime="20201029 12:46:23.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.809" endtime="20201029 12:46:23.817"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:23.820" endtime="20201029 12:46:23.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.819" endtime="20201029 12:46:23.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.818" endtime="20201029 12:46:23.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.460" endtime="20201029 12:46:23.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.460" endtime="20201029 12:46:23.842"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.851" endtime="20201029 12:46:23.867"></status>
</kw>
<msg timestamp="20201029 12:46:23.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:23.850" endtime="20201029 12:46:23.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:23.869" endtime="20201029 12:46:23.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.871" endtime="20201029 12:46:23.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.847" endtime="20201029 12:46:23.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.845" endtime="20201029 12:46:23.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.881" endtime="20201029 12:46:24.164"></status>
</kw>
<msg timestamp="20201029 12:46:24.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023995514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024022097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:23.879" endtime="20201029 12:46:24.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023995514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024022097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:24.168" endtime="20201029 12:46:24.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.177" endtime="20201029 12:46:24.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.876" endtime="20201029 12:46:24.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.875" endtime="20201029 12:46:24.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:24.184" level="INFO">${RESULT} = [{'diff': 2.6583000000000162e-05}, {'diff': 2.6556000000000496e-05}, {'diff': 2.638899999999819e-05}, {'diff': 2.620899999999926e-05}, {'diff': 2.6014000000001286e-05}, {'diff': 2.594500000000291e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:24.180" endtime="20201029 12:46:24.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:24.188" level="INFO">${ACCURACY} = {'diff': [2.6583000000000162e-05, 2.6556000000000496e-05, 2.638899999999819e-05, 2.620899999999926e-05, 2.6014000000001286e-05, 2.594500000000291e-05, 2.620900000000273e-05, 2.5901999999997788e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:46:24.185" endtime="20201029 12:46:24.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.193" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 12:46:24.192" endtime="20201029 12:46:24.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.195" level="INFO">VALUE: [2.6583000000000162e-05, 2.6556000000000496e-05, 2.638899999999819e-05, 2.620899999999926e-05, 2.6014000000001286e-05, 2.594500000000291e-05, 2.620900000000273e-05, 2.5901999999997788e-05, 2.6542000000000926e-05, 2.6597999999999206e-05, 2.6528000000001356e-05, 2.5805999999999746e-05, 2.5971999999999107e-05, 2.588900000000116e-05, 2.6598000000002675e-05, 2.6500000000002216e-05, 2.6124999999998372e-05, 2.5833999999998886e-05, 2.6514000000001786e-05, 2.5972000000002576e-05, 2.618100000000012e-05, 2.6319000000000342e-05, 2.6110999999998802e-05, 2.6360999999999052e-05, 2.6415999999997858e-05, 2.594499999999944e-05, 2.6346999999999482e-05, 2.588900000000116e-05, 2.6305000000000772e-05, 2.5916000000000827e-05, 2.6055000000000522e-05, 2.6665999999998108e-05, 2.6596999999999732e-05, 2.6042000000000426e-05, 2.6068999999996623e-05, 2.6514000000001786e-05, 2.6110999999998802e-05, 2.5764000000001036e-05, 2.5986000000002146e-05, 2.59170000000003e-05, 2.6042000000000426e-05, 2.5957999999999537e-05, 2.6542000000000926e-05, 2.6000000000001716e-05, 2.6028000000000856e-05, 2.6292000000000676e-05, 2.6346999999999482e-05, 2.593099999999987e-05, 2.6583000000000162e-05, 2.5972000000002576e-05]</msg>
<status status="PASS" starttime="20201029 12:46:24.194" endtime="20201029 12:46:24.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.189" endtime="20201029 12:46:24.198"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:24.201" endtime="20201029 12:46:24.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.200" endtime="20201029 12:46:24.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.199" endtime="20201029 12:46:24.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.843" endtime="20201029 12:46:24.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.842" endtime="20201029 12:46:24.222"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.231" endtime="20201029 12:46:24.248"></status>
</kw>
<msg timestamp="20201029 12:46:24.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.230" endtime="20201029 12:46:24.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.252" endtime="20201029 12:46:24.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.255" endtime="20201029 12:46:24.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.227" endtime="20201029 12:46:24.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.225" endtime="20201029 12:46:24.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.271" endtime="20201029 12:46:24.558"></status>
</kw>
<msg timestamp="20201029 12:46:24.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023102042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023129069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:24.270" endtime="20201029 12:46:24.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023102042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023129069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:24.563" endtime="20201029 12:46:24.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.571" endtime="20201029 12:46:24.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.266" endtime="20201029 12:46:24.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.262" endtime="20201029 12:46:24.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:24.578" level="INFO">${RESULT} = [{'diff': 2.7026999999998913e-05}, {'diff': 2.7305999999997776e-05}, {'diff': 2.69170000000013e-05}, {'diff': 2.7611000000000302e-05}, {'diff': 2.6929999999997928e-05}, {'diff': 2.7555999999998027e-05...</msg>
<status status="PASS" starttime="20201029 12:46:24.575" endtime="20201029 12:46:24.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:24.583" level="INFO">${ACCURACY} = {'diff': [2.7026999999998913e-05, 2.7305999999997776e-05, 2.69170000000013e-05, 2.7611000000000302e-05, 2.6929999999997928e-05, 2.7555999999998027e-05, 2.6985999999999677e-05, 2.7569999999997596e-05, ...</msg>
<status status="PASS" starttime="20201029 12:46:24.579" endtime="20201029 12:46:24.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.588" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 12:46:24.587" endtime="20201029 12:46:24.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.591" level="INFO">VALUE: [2.7026999999998913e-05, 2.7305999999997776e-05, 2.69170000000013e-05, 2.7611000000000302e-05, 2.6929999999997928e-05, 2.7555999999998027e-05, 2.6985999999999677e-05, 2.7569999999997596e-05, 2.7388999999999192e-05, 2.7388999999999192e-05, 2.7249999999999497e-05, 2.7124999999999372e-05, 2.7542000000001926e-05, 2.7207999999997318e-05, 2.6846999999999982e-05, 2.6972000000000107e-05, 2.7084000000000136e-05, 2.719499999999722e-05, 2.6792000000001176e-05, 2.769499999999772e-05, 2.7513999999999317e-05, 2.694499999999697e-05, 2.694500000000044e-05, 2.6888999999998692e-05, 2.715300000000198e-05, 2.688900000000216e-05, 2.7526999999999413e-05, 2.7263999999999067e-05, 2.698699999999915e-05, 2.715299999999851e-05, 2.7028000000001856e-05, 2.715300000000198e-05, 2.7083000000000662e-05, 2.7249999999999497e-05, 2.6819000000000842e-05, 2.7262999999999593e-05, 2.6791999999997707e-05, 2.6958000000000537e-05, 2.7208000000000787e-05, 2.7361000000000052e-05, 2.718100000000112e-05, 2.7568999999998123e-05, 2.7568999999998123e-05, 2.7360999999996582e-05, 2.6958000000000537e-05, 2.7582999999997693e-05, 2.7472000000000607e-05, 2.7318999999997873e-05, 2.7597000000000732e-05, 2.7596999999997263e-05]</msg>
<status status="PASS" starttime="20201029 12:46:24.589" endtime="20201029 12:46:24.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.584" endtime="20201029 12:46:24.592"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:24.596" endtime="20201029 12:46:24.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.594" endtime="20201029 12:46:24.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.593" endtime="20201029 12:46:24.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.223" endtime="20201029 12:46:24.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.222" endtime="20201029 12:46:24.617"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.627" endtime="20201029 12:46:24.643"></status>
</kw>
<msg timestamp="20201029 12:46:24.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.625" endtime="20201029 12:46:24.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.645" endtime="20201029 12:46:24.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.647" endtime="20201029 12:46:24.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.622" endtime="20201029 12:46:24.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.620" endtime="20201029 12:46:24.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.657" endtime="20201029 12:46:24.945"></status>
</kw>
<msg timestamp="20201029 12:46:24.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023963347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023992181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:24.655" endtime="20201029 12:46:24.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023963347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023992181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:24.949" endtime="20201029 12:46:24.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.958" endtime="20201029 12:46:24.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.653" endtime="20201029 12:46:24.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.651" endtime="20201029 12:46:24.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:24.965" level="INFO">${RESULT} = [{'diff': 2.8834000000001886e-05}, {'diff': 2.8222000000001357e-05}, {'diff': 2.8540999999999983e-05}, {'diff': 2.8374999999997152e-05}, {'diff': 2.7790999999999233e-05}, {'diff': 2.8514000000000317e-...</msg>
<status status="PASS" starttime="20201029 12:46:24.961" endtime="20201029 12:46:24.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:24.969" level="INFO">${ACCURACY} = {'diff': [2.8834000000001886e-05, 2.8222000000001357e-05, 2.8540999999999983e-05, 2.8374999999997152e-05, 2.7790999999999233e-05, 2.8514000000000317e-05, 2.8332999999998443e-05, 2.8527000000000413e-05...</msg>
<status status="PASS" starttime="20201029 12:46:24.966" endtime="20201029 12:46:24.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.973" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 12:46:24.972" endtime="20201029 12:46:24.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.976" level="INFO">VALUE: [2.8834000000001886e-05, 2.8222000000001357e-05, 2.8540999999999983e-05, 2.8374999999997152e-05, 2.7790999999999233e-05, 2.8514000000000317e-05, 2.8332999999998443e-05, 2.8527000000000413e-05, 2.8111000000000802e-05, 2.8264000000000067e-05, 2.7958000000001537e-05, 2.7861000000000552e-05, 2.8110999999997333e-05, 2.7763999999999567e-05, 2.8555000000003022e-05, 2.8097000000001232e-05, 2.7888999999999692e-05, 2.8527999999999887e-05, 2.8082999999998193e-05, 2.8111000000000802e-05, 2.7958000000001537e-05, 2.8555999999999027e-05, 2.8653000000000012e-05, 2.8333000000001912e-05, 2.8083000000001662e-05, 2.7958000000001537e-05, 2.8346999999998013e-05, 2.7820000000001316e-05, 2.8500000000000747e-05, 2.8222000000001357e-05, 2.8596999999998263e-05, 2.7985999999997208e-05, 2.8111000000000802e-05, 2.8500000000000747e-05, 2.7875000000000122e-05, 2.7986000000000677e-05, 2.8152999999999512e-05, 2.845900000000151e-05, 2.8334000000001386e-05, 2.8597999999997736e-05, 2.7833999999997416e-05, 2.7820000000001316e-05, 2.8527999999999887e-05, 2.8291999999999207e-05, 2.7763999999999567e-05, 2.8249999999997027e-05, 2.8334000000001386e-05, 2.8194000000002217e-05, 2.8679999999999678e-05, 2.7929999999998928e-05]</msg>
<status status="PASS" starttime="20201029 12:46:24.975" endtime="20201029 12:46:24.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.970" endtime="20201029 12:46:24.978"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:24.981" endtime="20201029 12:46:25.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.980" endtime="20201029 12:46:25.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.978" endtime="20201029 12:46:25.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.618" endtime="20201029 12:46:25.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.617" endtime="20201029 12:46:25.002"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.011" endtime="20201029 12:46:25.027"></status>
</kw>
<msg timestamp="20201029 12:46:25.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:25.010" endtime="20201029 12:46:25.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:25.029" endtime="20201029 12:46:25.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.031" endtime="20201029 12:46:25.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.007" endtime="20201029 12:46:25.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.005" endtime="20201029 12:46:25.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.041" endtime="20201029 12:46:25.327"></status>
</kw>
<msg timestamp="20201029 12:46:25.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023464, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023493222, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:25.039" endtime="20201029 12:46:25.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023464, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023493222, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:25.332" endtime="20201029 12:46:25.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.340" endtime="20201029 12:46:25.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.036" endtime="20201029 12:46:25.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.035" endtime="20201029 12:46:25.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:25.347" level="INFO">${RESULT} = [{'diff': 2.9222000000002357e-05}, {'diff': 2.9278000000000637e-05}, {'diff': 2.9625000000001872e-05}, {'diff': 2.9417000000000332e-05}, {'diff': 2.9333999999998916e-05}, {'diff': 2.9139000000000942e-...</msg>
<status status="PASS" starttime="20201029 12:46:25.344" endtime="20201029 12:46:25.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:25.351" level="INFO">${ACCURACY} = {'diff': [2.9222000000002357e-05, 2.9278000000000637e-05, 2.9625000000001872e-05, 2.9417000000000332e-05, 2.9333999999998916e-05, 2.9139000000000942e-05, 2.9264000000001067e-05, 2.8889000000000692e-05...</msg>
<status status="PASS" starttime="20201029 12:46:25.348" endtime="20201029 12:46:25.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.356" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 12:46:25.355" endtime="20201029 12:46:25.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.358" level="INFO">VALUE: [2.9222000000002357e-05, 2.9278000000000637e-05, 2.9625000000001872e-05, 2.9417000000000332e-05, 2.9333999999998916e-05, 2.9139000000000942e-05, 2.9264000000001067e-05, 2.8889000000000692e-05, 2.9125000000001372e-05, 2.8889000000000692e-05, 2.9028000000000387e-05, 2.9347999999998486e-05, 2.9624999999998403e-05, 2.8832999999998943e-05, 2.917999999999671e-05, 2.9014000000000817e-05, 2.9292000000000207e-05, 2.9055000000000053e-05, 2.8943999999999498e-05, 2.9361000000002052e-05, 2.9416000000000858e-05, 2.9514000000001317e-05, 2.9082999999999193e-05, 2.9528000000000887e-05, 2.9457999999999568e-05, 2.9068999999999623e-05, 2.9527999999997417e-05, 2.9527000000001413e-05, 2.9235999999998458e-05, 2.8903000000000262e-05, 2.9000000000001247e-05, 2.9610999999998833e-05, 2.8929999999999928e-05, 2.8818999999999373e-05, 2.9208000000002787e-05, 2.9222000000002357e-05, 2.9653000000001012e-05, 2.94309999999999e-05, 2.8860999999998083e-05, 2.8999999999997778e-05, 2.8846999999998513e-05, 2.9124999999997903e-05, 2.9041999999999957e-05, 2.9417000000000332e-05, 2.94309999999999e-05, 2.8819999999998847e-05, 2.9556000000000027e-05, 2.9486000000002177e-05, 2.94309999999999e-05, 2.9486000000002177e-05]</msg>
<status status="PASS" starttime="20201029 12:46:25.357" endtime="20201029 12:46:25.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.352" endtime="20201029 12:46:25.361"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:25.365" endtime="20201029 12:46:25.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.363" endtime="20201029 12:46:25.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.362" endtime="20201029 12:46:25.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.003" endtime="20201029 12:46:25.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.002" endtime="20201029 12:46:25.385"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.394" endtime="20201029 12:46:25.410"></status>
</kw>
<msg timestamp="20201029 12:46:25.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:25.393" endtime="20201029 12:46:25.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:25.411" endtime="20201029 12:46:25.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.414" endtime="20201029 12:46:25.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.390" endtime="20201029 12:46:25.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.388" endtime="20201029 12:46:25.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.423" endtime="20201029 12:46:25.710"></status>
</kw>
<msg timestamp="20201029 12:46:25.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02215225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022182181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:25.422" endtime="20201029 12:46:25.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02215225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022182181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:25.714" endtime="20201029 12:46:25.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.723" endtime="20201029 12:46:25.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.419" endtime="20201029 12:46:25.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.417" endtime="20201029 12:46:25.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:25.730" level="INFO">${RESULT} = [{'diff': 2.9931000000000402e-05}, {'diff': 3.0110999999999333e-05}, {'diff': 3.0014000000001817e-05}, {'diff': 3.0180000000001178e-05}, {'diff': 2.9874999999998653e-05}, {'diff': 2.9999999999998778e-...</msg>
<status status="PASS" starttime="20201029 12:46:25.726" endtime="20201029 12:46:25.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:25.735" level="INFO">${ACCURACY} = {'diff': [2.9931000000000402e-05, 3.0110999999999333e-05, 3.0014000000001817e-05, 3.0180000000001178e-05, 2.9874999999998653e-05, 2.9999999999998778e-05, 2.9971999999999638e-05, 3.063899999999897e-05,...</msg>
<status status="PASS" starttime="20201029 12:46:25.731" endtime="20201029 12:46:25.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.739" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 12:46:25.738" endtime="20201029 12:46:25.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.742" level="INFO">VALUE: [2.9931000000000402e-05, 3.0110999999999333e-05, 3.0014000000001817e-05, 3.0180000000001178e-05, 2.9874999999998653e-05, 2.9999999999998778e-05, 2.9971999999999638e-05, 3.063899999999897e-05, 3.0306000000000777e-05, 3.0374999999999153e-05, 3.0444000000000998e-05, 2.9875000000002122e-05, 3.0347000000000013e-05, 2.9971999999999638e-05, 3.020899999999979e-05, 3.0347000000000013e-05, 3.0221999999999888e-05, 2.9916999999997362e-05, 3.0444000000000998e-05, 3.0083999999999667e-05, 3.0152999999998042e-05, 3.065300000000201e-05, 3.0389000000002192e-05, 3.0402999999998293e-05, 3.0042000000000957e-05, 2.9792000000000707e-05, 3.0513999999998848e-05, 3.0124999999998903e-05, 3.0278000000001637e-05, 2.9902999999997792e-05, 3.0083999999999667e-05, 3.056900000000112e-05, 3.0054999999997584e-05, 3.0152000000002038e-05, 3.0221999999999888e-05, 2.9819000000000373e-05, 3.0472000000000138e-05, 3.015199999999857e-05, 2.9791000000001233e-05, 3.063899999999897e-05, 2.9832999999999943e-05, 3.0027000000001913e-05, 3.0500000000002747e-05, 3.0221999999999888e-05, 3.0027000000001913e-05, 3.0180000000001178e-05, 3.0027999999997917e-05, 3.0319000000000873e-05, 3.052799999999842e-05, 2.9958000000000068e-05]</msg>
<status status="PASS" starttime="20201029 12:46:25.741" endtime="20201029 12:46:25.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.736" endtime="20201029 12:46:25.743"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:25.747" endtime="20201029 12:46:25.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.746" endtime="20201029 12:46:25.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.744" endtime="20201029 12:46:25.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.386" endtime="20201029 12:46:25.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.386" endtime="20201029 12:46:25.768"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.777" endtime="20201029 12:46:25.792"></status>
</kw>
<msg timestamp="20201029 12:46:25.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:25.775" endtime="20201029 12:46:25.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:25.794" endtime="20201029 12:46:25.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.796" endtime="20201029 12:46:25.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.773" endtime="20201029 12:46:25.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.771" endtime="20201029 12:46:25.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.806" endtime="20201029 12:46:26.093"></status>
</kw>
<msg timestamp="20201029 12:46:26.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022144986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022176597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:25.804" endtime="20201029 12:46:26.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022144986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022176597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:26.097" endtime="20201029 12:46:26.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.106" endtime="20201029 12:46:26.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.802" endtime="20201029 12:46:26.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.800" endtime="20201029 12:46:26.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:26.112" level="INFO">${RESULT} = [{'diff': 3.161100000000083e-05}, {'diff': 3.088899999999922e-05}, {'diff': 3.129200000000221e-05}, {'diff': 3.130600000000178e-05}, {'diff': 3.148600000000071e-05}, {'diff': 3.155599999999856e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:26.109" endtime="20201029 12:46:26.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:26.117" level="INFO">${ACCURACY} = {'diff': [3.161100000000083e-05, 3.088899999999922e-05, 3.129200000000221e-05, 3.130600000000178e-05, 3.148600000000071e-05, 3.155599999999856e-05, 3.097300000000011e-05, 3.151399999999985e-05, 3.1111...</msg>
<status status="PASS" starttime="20201029 12:46:26.113" endtime="20201029 12:46:26.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.122" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 12:46:26.120" endtime="20201029 12:46:26.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.128" level="INFO">VALUE: [3.161100000000083e-05, 3.088899999999922e-05, 3.129200000000221e-05, 3.130600000000178e-05, 3.148600000000071e-05, 3.155599999999856e-05, 3.097300000000011e-05, 3.151399999999985e-05, 3.111100000000033e-05, 3.1111999999999806e-05, 3.152799999999942e-05, 3.09440000000015e-05, 3.155600000000203e-05, 3.088899999999922e-05, 3.11249999999999e-05, 3.140199999999982e-05, 3.09579999999976e-05, 3.13050000000023e-05, 3.131900000000187e-05, 3.1082999999997724e-05, 3.084700000000051e-05, 3.098600000000021e-05, 3.1068999999998154e-05, 3.136100000000058e-05, 3.159700000000126e-05, 3.077799999999867e-05, 3.1554999999999084e-05, 3.129199999999874e-05, 3.127799999999917e-05, 3.1304999999998834e-05, 3.115299999999904e-05, 3.086100000000008e-05, 3.1054999999998584e-05, 3.147199999999767e-05, 3.12639999999996e-05, 3.127799999999917e-05, 3.1068999999998154e-05, 3.147200000000114e-05, 3.152800000000289e-05, 3.0846999999997043e-05, 3.099999999999978e-05, 3.099999999999978e-05, 3.094500000000097e-05, 3.133300000000144e-05, 3.111099999999686e-05, 3.109700000000076e-05, 3.129199999999874e-05, 3.165299999999954e-05, 3.155600000000203e-05, 3.115299999999904e-05]</msg>
<status status="PASS" starttime="20201029 12:46:26.126" endtime="20201029 12:46:26.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.118" endtime="20201029 12:46:26.129"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:26.136" endtime="20201029 12:46:26.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.134" endtime="20201029 12:46:26.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.131" endtime="20201029 12:46:26.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.769" endtime="20201029 12:46:26.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.768" endtime="20201029 12:46:26.160"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.170" endtime="20201029 12:46:26.190"></status>
</kw>
<msg timestamp="20201029 12:46:26.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:26.169" endtime="20201029 12:46:26.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:26.191" endtime="20201029 12:46:26.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.194" endtime="20201029 12:46:26.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.166" endtime="20201029 12:46:26.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.164" endtime="20201029 12:46:26.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.203" endtime="20201029 12:46:26.510"></status>
</kw>
<msg timestamp="20201029 12:46:26.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029825958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029858542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:26.202" endtime="20201029 12:46:26.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029825958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029858542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:26.514" endtime="20201029 12:46:26.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.523" endtime="20201029 12:46:26.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.199" endtime="20201029 12:46:26.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.197" endtime="20201029 12:46:26.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:26.530" level="INFO">${RESULT} = [{'diff': 3.25839999999987e-05}, {'diff': 3.229199999999974e-05}, {'diff': 3.1804999999999334e-05}, {'diff': 3.222199999999842e-05}, {'diff': 3.2054999999999584e-05}, {'diff': 3.177799999999967e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:26.527" endtime="20201029 12:46:26.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:26.534" level="INFO">${ACCURACY} = {'diff': [3.25839999999987e-05, 3.229199999999974e-05, 3.1804999999999334e-05, 3.222199999999842e-05, 3.2054999999999584e-05, 3.177799999999967e-05, 3.2596999999998794e-05, 3.2555000000000084e-05, 3.1...</msg>
<status status="PASS" starttime="20201029 12:46:26.531" endtime="20201029 12:46:26.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.539" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 12:46:26.538" endtime="20201029 12:46:26.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.542" level="INFO">VALUE: [3.25839999999987e-05, 3.229199999999974e-05, 3.1804999999999334e-05, 3.222199999999842e-05, 3.2054999999999584e-05, 3.177799999999967e-05, 3.2596999999998794e-05, 3.2555000000000084e-05, 3.191700000000283e-05, 3.197200000000164e-05, 3.2332999999998974e-05, 3.186100000000108e-05, 3.205599999999906e-05, 3.254199999999999e-05, 3.244500000000247e-05, 3.19449999999985e-05, 3.2318999999999404e-05, 3.241699999999986e-05, 3.250000000000128e-05, 3.222299999999789e-05, 3.177799999999967e-05, 3.206999999999863e-05, 3.212499999999743e-05, 3.223600000000146e-05, 3.205600000000253e-05, 3.273599999999849e-05, 3.2374999999997683e-05, 3.259799999999827e-05, 3.230600000000278e-05, 3.263900000000097e-05, 3.240300000000029e-05, 3.250000000000128e-05, 3.223599999999799e-05, 3.1804999999999334e-05, 3.241600000000039e-05, 3.250000000000128e-05, 3.2596999999998794e-05, 3.201400000000382e-05, 3.219399999999928e-05, 3.195800000000554e-05, 3.251399999999738e-05, 3.242999999999996e-05, 3.234700000000201e-05, 3.237500000000115e-05, 3.187500000000065e-05, 3.244399999999953e-05, 3.184700000000151e-05, 3.19579999999986e-05, 3.191699999999936e-05, 3.193099999999893e-05]</msg>
<status status="PASS" starttime="20201029 12:46:26.540" endtime="20201029 12:46:26.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.535" endtime="20201029 12:46:26.544"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:26.548" endtime="20201029 12:46:26.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.546" endtime="20201029 12:46:26.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.545" endtime="20201029 12:46:26.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.162" endtime="20201029 12:46:26.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.161" endtime="20201029 12:46:26.569"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.578" endtime="20201029 12:46:26.593"></status>
</kw>
<msg timestamp="20201029 12:46:26.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:26.576" endtime="20201029 12:46:26.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:26.595" endtime="20201029 12:46:26.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.597" endtime="20201029 12:46:26.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.574" endtime="20201029 12:46:26.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.571" endtime="20201029 12:46:26.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.607" endtime="20201029 12:46:26.893"></status>
</kw>
<msg timestamp="20201029 12:46:26.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022968306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023001486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:26.605" endtime="20201029 12:46:26.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022968306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023001486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:26.897" endtime="20201029 12:46:26.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.906" endtime="20201029 12:46:26.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.602" endtime="20201029 12:46:26.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.601" endtime="20201029 12:46:26.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:26.913" level="INFO">${RESULT} = [{'diff': 3.318000000000071e-05}, {'diff': 3.295900000000254e-05}, {'diff': 3.304199999999702e-05}, {'diff': 3.369500000000025e-05}, {'diff': 3.319499999999975e-05}, {'diff': 3.3555000000001084e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:26.910" endtime="20201029 12:46:26.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:26.918" level="INFO">${ACCURACY} = {'diff': [3.318000000000071e-05, 3.295900000000254e-05, 3.304199999999702e-05, 3.369500000000025e-05, 3.319499999999975e-05, 3.3555000000001084e-05, 3.348600000000271e-05, 3.304200000000049e-05, 3.304...</msg>
<status status="PASS" starttime="20201029 12:46:26.914" endtime="20201029 12:46:26.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.923" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 12:46:26.922" endtime="20201029 12:46:26.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.925" level="INFO">VALUE: [3.318000000000071e-05, 3.295900000000254e-05, 3.304199999999702e-05, 3.369500000000025e-05, 3.319499999999975e-05, 3.3555000000001084e-05, 3.348600000000271e-05, 3.304200000000049e-05, 3.304200000000049e-05, 3.3527000000001944e-05, 3.36250000000024e-05, 3.3360999999999114e-05, 3.309799999999877e-05, 3.36250000000024e-05, 3.3513000000002374e-05, 3.292999999999699e-05, 3.3026999999997975e-05, 3.347199999999967e-05, 3.290200000000132e-05, 3.318000000000071e-05, 3.297199999999917e-05, 3.2846999999999044e-05, 3.315200000000157e-05, 3.3096999999999294e-05, 3.350000000000228e-05, 3.315299999999757e-05, 3.316600000000114e-05, 3.320799999999985e-05, 3.329200000000074e-05, 3.286100000000208e-05, 3.322199999999942e-05, 3.3610999999999364e-05, 3.341700000000086e-05, 3.350000000000228e-05, 3.2832999999999474e-05, 3.3596999999999794e-05, 3.297199999999917e-05, 3.290300000000079e-05, 3.290300000000079e-05, 3.370800000000035e-05, 3.343100000000043e-05, 3.302800000000092e-05, 3.340300000000129e-05, 3.3624999999998934e-05, 3.3305000000000834e-05, 3.3360999999999114e-05, 3.293099999999993e-05, 3.322200000000289e-05, 3.359799999999927e-05, 3.316700000000061e-05]</msg>
<status status="PASS" starttime="20201029 12:46:26.924" endtime="20201029 12:46:26.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.919" endtime="20201029 12:46:26.927"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:26.931" endtime="20201029 12:46:26.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.929" endtime="20201029 12:46:26.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.928" endtime="20201029 12:46:26.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.570" endtime="20201029 12:46:26.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.569" endtime="20201029 12:46:26.951"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.960" endtime="20201029 12:46:26.976"></status>
</kw>
<msg timestamp="20201029 12:46:26.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:26.959" endtime="20201029 12:46:26.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:26.978" endtime="20201029 12:46:26.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.980" endtime="20201029 12:46:26.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.956" endtime="20201029 12:46:26.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.954" endtime="20201029 12:46:26.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.989" endtime="20201029 12:46:27.277"></status>
</kw>
<msg timestamp="20201029 12:46:27.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022526333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022560819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:26.988" endtime="20201029 12:46:27.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022526333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022560819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:27.281" endtime="20201029 12:46:27.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.290" endtime="20201029 12:46:27.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.985" endtime="20201029 12:46:27.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.983" endtime="20201029 12:46:27.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:27.297" level="INFO">${RESULT} = [{'diff': 3.448600000000024e-05}, {'diff': 3.468000000000221e-05}, {'diff': 3.399999999999931e-05}, {'diff': 3.390299999999832e-05}, {'diff': 3.4110999999999864e-05}, {'diff': 3.445799999999763e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:27.293" endtime="20201029 12:46:27.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:27.301" level="INFO">${ACCURACY} = {'diff': [3.448600000000024e-05, 3.468000000000221e-05, 3.399999999999931e-05, 3.390299999999832e-05, 3.4110999999999864e-05, 3.445799999999763e-05, 3.420800000000085e-05, 3.463900000000297e-05, 3.440...</msg>
<status status="PASS" starttime="20201029 12:46:27.298" endtime="20201029 12:46:27.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.306" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 12:46:27.304" endtime="20201029 12:46:27.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.308" level="INFO">VALUE: [3.448600000000024e-05, 3.468000000000221e-05, 3.399999999999931e-05, 3.390299999999832e-05, 3.4110999999999864e-05, 3.445799999999763e-05, 3.420800000000085e-05, 3.463900000000297e-05, 3.4402999999998823e-05, 3.417999999999824e-05, 3.423599999999999e-05, 3.41250000000029e-05, 3.379200000000124e-05, 3.420799999999738e-05, 3.3805000000001334e-05, 3.422200000000042e-05, 3.3860999999999614e-05, 3.391699999999789e-05, 3.422200000000042e-05, 3.4624999999999934e-05, 3.39450000000005e-05, 3.44719999999972e-05, 3.404200000000149e-05, 3.445799999999763e-05, 3.4138999999999003e-05, 3.451399999999938e-05, 3.39580000000006e-05, 3.405599999999759e-05, 3.441700000000186e-05, 3.391700000000136e-05, 3.402799999999845e-05, 3.4445000000001e-05, 3.420900000000032e-05, 3.3847000000000044e-05, 3.402799999999845e-05, 3.422299999999989e-05, 3.42779999999987e-05, 3.390299999999832e-05, 3.426399999999913e-05, 3.451399999999938e-05, 3.4304999999998365e-05, 3.4582999999997754e-05, 3.4555000000002084e-05, 3.4026999999998975e-05, 3.422200000000042e-05, 3.423599999999999e-05, 3.388800000000275e-05, 3.424999999999956e-05, 3.391600000000189e-05, 3.416599999999867e-05]</msg>
<status status="PASS" starttime="20201029 12:46:27.307" endtime="20201029 12:46:27.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.302" endtime="20201029 12:46:27.310"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:27.313" endtime="20201029 12:46:27.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.312" endtime="20201029 12:46:27.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.311" endtime="20201029 12:46:27.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.952" endtime="20201029 12:46:27.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.952" endtime="20201029 12:46:27.334"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.343" endtime="20201029 12:46:27.360"></status>
</kw>
<msg timestamp="20201029 12:46:27.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:27.342" endtime="20201029 12:46:27.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:27.361" endtime="20201029 12:46:27.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.364" endtime="20201029 12:46:27.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.339" endtime="20201029 12:46:27.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.337" endtime="20201029 12:46:27.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.373" endtime="20201029 12:46:27.660"></status>
</kw>
<msg timestamp="20201029 12:46:27.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023143403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023178361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:27.372" endtime="20201029 12:46:27.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023143403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023178361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:27.664" endtime="20201029 12:46:27.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.672" endtime="20201029 12:46:27.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.369" endtime="20201029 12:46:27.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.367" endtime="20201029 12:46:27.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:27.679" level="INFO">${RESULT} = [{'diff': 3.49580000000016e-05}, {'diff': 3.49589999999976e-05}, {'diff': 3.524999999999709e-05}, {'diff': 3.534800000000102e-05}, {'diff': 3.545799999999863e-05}, {'diff': 3.5596999999998324e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:27.676" endtime="20201029 12:46:27.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:27.684" level="INFO">${ACCURACY} = {'diff': [3.49580000000016e-05, 3.49589999999976e-05, 3.524999999999709e-05, 3.534800000000102e-05, 3.545799999999863e-05, 3.5596999999998324e-05, 3.505599999999859e-05, 3.5346999999998074e-05, 3.5583...</msg>
<status status="PASS" starttime="20201029 12:46:27.680" endtime="20201029 12:46:27.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.688" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 12:46:27.687" endtime="20201029 12:46:27.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.691" level="INFO">VALUE: [3.49580000000016e-05, 3.49589999999976e-05, 3.524999999999709e-05, 3.534800000000102e-05, 3.545799999999863e-05, 3.5596999999998324e-05, 3.505599999999859e-05, 3.5346999999998074e-05, 3.5583000000002224e-05, 3.5083000000001724e-05, 3.5333000000001974e-05, 3.5277000000000225e-05, 3.525000000000056e-05, 3.5304999999999365e-05, 3.548600000000124e-05, 3.5596999999998324e-05, 3.494399999999856e-05, 3.5290999999999795e-05, 3.5611000000001364e-05, 3.504199999999902e-05, 3.520799999999838e-05, 3.4875000000000184e-05, 3.551399999999691e-05, 3.5402999999999823e-05, 3.4847000000001044e-05, 3.5402999999999823e-05, 3.5082999999998254e-05, 3.5332999999998504e-05, 3.523600000000099e-05, 3.497200000000117e-05, 3.5389000000000254e-05, 3.556999999999866e-05, 3.5125000000000434e-05, 3.5097000000001294e-05, 3.5139000000000004e-05, 3.5152999999999573e-05, 3.500000000000031e-05, 3.54580000000021e-05, 3.502799999999945e-05, 3.476399999999963e-05, 3.518099999999871e-05, 3.49589999999976e-05, 3.515300000000304e-05, 3.522300000000089e-05, 3.5082999999998254e-05, 3.494399999999856e-05, 3.5139000000000004e-05, 3.50840000000012e-05, 3.520799999999838e-05, 3.548600000000124e-05]</msg>
<status status="PASS" starttime="20201029 12:46:27.689" endtime="20201029 12:46:27.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.684" endtime="20201029 12:46:27.693"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:27.697" endtime="20201029 12:46:27.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.695" endtime="20201029 12:46:27.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.694" endtime="20201029 12:46:27.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.335" endtime="20201029 12:46:27.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.334" endtime="20201029 12:46:27.718"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.727" endtime="20201029 12:46:27.742"></status>
</kw>
<msg timestamp="20201029 12:46:27.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:27.725" endtime="20201029 12:46:27.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:27.743" endtime="20201029 12:46:27.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.746" endtime="20201029 12:46:27.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.722" endtime="20201029 12:46:27.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.720" endtime="20201029 12:46:27.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.755" endtime="20201029 12:46:28.041"></status>
</kw>
<msg timestamp="20201029 12:46:28.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022129319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022165681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:27.754" endtime="20201029 12:46:28.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022129319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022165681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:28.046" endtime="20201029 12:46:28.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.054" endtime="20201029 12:46:28.056"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.751" endtime="20201029 12:46:28.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.749" endtime="20201029 12:46:28.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:28.061" level="INFO">${RESULT} = [{'diff': 3.636199999999812e-05}, {'diff': 3.5916999999999893e-05}, {'diff': 3.602800000000045e-05}, {'diff': 3.645799999999963e-05}, {'diff': 3.6596999999999325e-05}, {'diff': 3.576400000000063e-05},...</msg>
<status status="PASS" starttime="20201029 12:46:28.058" endtime="20201029 12:46:28.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:28.066" level="INFO">${ACCURACY} = {'diff': [3.636199999999812e-05, 3.5916999999999893e-05, 3.602800000000045e-05, 3.645799999999963e-05, 3.6596999999999325e-05, 3.576400000000063e-05, 3.595799999999913e-05, 3.623599999999852e-05, 3.62...</msg>
<status status="PASS" starttime="20201029 12:46:28.062" endtime="20201029 12:46:28.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.071" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 12:46:28.070" endtime="20201029 12:46:28.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.073" level="INFO">VALUE: [3.636199999999812e-05, 3.5916999999999893e-05, 3.602800000000045e-05, 3.645799999999963e-05, 3.6596999999999325e-05, 3.576400000000063e-05, 3.595799999999913e-05, 3.623599999999852e-05, 3.629200000000027e-05, 3.60979999999983e-05, 3.6125000000001434e-05, 3.575000000000106e-05, 3.5889000000000754e-05, 3.6096999999998824e-05, 3.569499999999878e-05, 3.580599999999934e-05, 3.606999999999916e-05, 3.60979999999983e-05, 3.602800000000045e-05, 3.6180999999999713e-05, 3.605599999999959e-05, 3.622300000000189e-05, 3.619499999999928e-05, 3.5903000000000324e-05, 3.619499999999928e-05, 3.638799999999831e-05, 3.651400000000138e-05, 3.591600000000042e-05, 3.6277000000001225e-05, 3.6582999999999755e-05, 3.600000000000131e-05, 3.670799999999988e-05, 3.645799999999963e-05, 3.6153000000000574e-05, 3.6375000000001684e-05, 3.6138999999997534e-05, 3.601400000000088e-05, 3.620799999999938e-05, 3.627799999999723e-05, 3.655600000000009e-05, 3.6555000000000615e-05, 3.649999999999834e-05, 3.651400000000138e-05, 3.634799999999855e-05, 3.5832999999999005e-05, 3.6111000000001864e-05, 3.6346999999999074e-05, 3.651399999999791e-05, 3.6610999999998894e-05, 3.622199999999895e-05]</msg>
<status status="PASS" starttime="20201029 12:46:28.072" endtime="20201029 12:46:28.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.067" endtime="20201029 12:46:28.075"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:28.079" endtime="20201029 12:46:28.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.077" endtime="20201029 12:46:28.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.076" endtime="20201029 12:46:28.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.719" endtime="20201029 12:46:28.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.718" endtime="20201029 12:46:28.099"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.108" endtime="20201029 12:46:28.125"></status>
</kw>
<msg timestamp="20201029 12:46:28.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:28.107" endtime="20201029 12:46:28.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:28.126" endtime="20201029 12:46:28.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.129" endtime="20201029 12:46:28.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.104" endtime="20201029 12:46:28.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.102" endtime="20201029 12:46:28.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.138" endtime="20201029 12:46:28.427"></status>
</kw>
<msg timestamp="20201029 12:46:28.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022473806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022510639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:28.137" endtime="20201029 12:46:28.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022473806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022510639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:28.432" endtime="20201029 12:46:28.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.440" endtime="20201029 12:46:28.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.134" endtime="20201029 12:46:28.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.132" endtime="20201029 12:46:28.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:28.447" level="INFO">${RESULT} = [{'diff': 3.6833000000000005e-05}, {'diff': 3.693000000000099e-05}, {'diff': 3.718000000000124e-05}, {'diff': 3.750000000000281e-05}, {'diff': 3.691599999999795e-05}, {'diff': 3.726400000000213e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:28.444" endtime="20201029 12:46:28.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:28.451" level="INFO">${ACCURACY} = {'diff': [3.6833000000000005e-05, 3.693000000000099e-05, 3.718000000000124e-05, 3.750000000000281e-05, 3.691599999999795e-05, 3.726400000000213e-05, 3.7083000000000255e-05, 3.698599999999927e-05, 3.68...</msg>
<status status="PASS" starttime="20201029 12:46:28.448" endtime="20201029 12:46:28.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.455" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 12:46:28.454" endtime="20201029 12:46:28.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.458" level="INFO">VALUE: [3.6833000000000005e-05, 3.693000000000099e-05, 3.718000000000124e-05, 3.750000000000281e-05, 3.691599999999795e-05, 3.726400000000213e-05, 3.7083000000000255e-05, 3.698599999999927e-05, 3.6805000000000865e-05, 3.6790999999997825e-05, 3.744400000000106e-05, 3.69719999999997e-05, 3.7110999999999394e-05, 3.7597000000000325e-05, 3.7417000000001394e-05, 3.695800000000013e-05, 3.72780000000017e-05, 3.7597000000000325e-05, 3.6931000000000463e-05, 3.7583000000000755e-05, 3.699999999999884e-05, 3.755600000000109e-05, 3.730600000000084e-05, 3.7124999999998964e-05, 3.702800000000145e-05, 3.751399999999891e-05, 3.74590000000001e-05, 3.683399999999948e-05, 3.723599999999952e-05, 3.733399999999998e-05, 3.7180999999997244e-05, 3.722299999999942e-05, 3.758400000000023e-05, 3.749999999999934e-05, 3.69719999999997e-05, 3.676400000000163e-05, 3.7416999999997924e-05, 3.75979999999998e-05, 3.7527000000002475e-05, 3.694400000000056e-05, 3.722199999999995e-05, 3.740199999999888e-05, 3.7138999999998534e-05, 3.7125000000002434e-05, 3.7360999999999644e-05, 3.7319000000000935e-05, 3.6818999999996965e-05, 3.6860999999999144e-05, 3.724999999999909e-05, 3.7167000000001144e-05]</msg>
<status status="PASS" starttime="20201029 12:46:28.456" endtime="20201029 12:46:28.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.452" endtime="20201029 12:46:28.464"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:28.467" endtime="20201029 12:46:28.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.466" endtime="20201029 12:46:28.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.465" endtime="20201029 12:46:28.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.100" endtime="20201029 12:46:28.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.100" endtime="20201029 12:46:28.488"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.497" endtime="20201029 12:46:28.514"></status>
</kw>
<msg timestamp="20201029 12:46:28.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:28.495" endtime="20201029 12:46:28.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:28.516" endtime="20201029 12:46:28.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.518" endtime="20201029 12:46:28.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.493" endtime="20201029 12:46:28.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.490" endtime="20201029 12:46:28.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.527" endtime="20201029 12:46:28.828"></status>
</kw>
<msg timestamp="20201029 12:46:28.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023198486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023236333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:28.526" endtime="20201029 12:46:28.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023198486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023236333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:28.832" endtime="20201029 12:46:28.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.841" endtime="20201029 12:46:28.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.523" endtime="20201029 12:46:28.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.521" endtime="20201029 12:46:28.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:28.847" level="INFO">${RESULT} = [{'diff': 3.7847000000000575e-05}, {'diff': 3.769399999999784e-05}, {'diff': 3.820800000000138e-05}, {'diff': 3.8402999999999354e-05}, {'diff': 3.8458999999997634e-05}, {'diff': 3.854200000000252e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:28.844" endtime="20201029 12:46:28.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:28.851" level="INFO">${ACCURACY} = {'diff': [3.7847000000000575e-05, 3.769399999999784e-05, 3.820800000000138e-05, 3.8402999999999354e-05, 3.8458999999997634e-05, 3.854200000000252e-05, 3.779200000000177e-05, 3.852799999999948e-05, 3.8...</msg>
<status status="PASS" starttime="20201029 12:46:28.848" endtime="20201029 12:46:28.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.856" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 12:46:28.855" endtime="20201029 12:46:28.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.858" level="INFO">VALUE: [3.7847000000000575e-05, 3.769399999999784e-05, 3.820800000000138e-05, 3.8402999999999354e-05, 3.8458999999997634e-05, 3.854200000000252e-05, 3.779200000000177e-05, 3.852799999999948e-05, 3.802800000000245e-05, 3.807000000000116e-05, 3.823600000000052e-05, 3.8709000000001353e-05, 3.8375000000000214e-05, 3.850000000000034e-05, 3.8639000000000034e-05, 3.819399999999834e-05, 3.79859999999968e-05, 3.857000000000166e-05, 3.784800000000005e-05, 3.798699999999974e-05, 3.8069000000001685e-05, 3.8124999999999964e-05, 3.8375000000000214e-05, 3.843000000000249e-05, 3.8068999999998215e-05, 3.8124999999999964e-05, 3.790199999999938e-05, 3.81659999999992e-05, 3.820799999999791e-05, 3.84720000000012e-05, 3.7790999999998826e-05, 3.858400000000123e-05, 3.8402999999999354e-05, 3.8596999999997855e-05, 3.8319000000001935e-05, 3.844400000000206e-05, 3.794399999999809e-05, 3.830600000000184e-05, 3.819400000000181e-05, 3.799999999999984e-05, 3.8569000000002185e-05, 3.79720000000007e-05, 3.8346999999997605e-05, 3.8625000000000465e-05, 3.8332999999998035e-05, 3.8666999999999174e-05, 3.8597000000001325e-05, 3.8444999999998064e-05, 3.7944999999997564e-05, 3.7917000000001894e-05]</msg>
<status status="PASS" starttime="20201029 12:46:28.857" endtime="20201029 12:46:28.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.852" endtime="20201029 12:46:28.860"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:28.864" endtime="20201029 12:46:28.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.862" endtime="20201029 12:46:28.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.861" endtime="20201029 12:46:28.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.489" endtime="20201029 12:46:28.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.488" endtime="20201029 12:46:28.884"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.893" endtime="20201029 12:46:28.909"></status>
</kw>
<msg timestamp="20201029 12:46:28.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:28.892" endtime="20201029 12:46:28.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:28.911" endtime="20201029 12:46:28.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.913" endtime="20201029 12:46:28.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.889" endtime="20201029 12:46:28.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.887" endtime="20201029 12:46:28.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.922" endtime="20201029 12:46:29.208"></status>
</kw>
<msg timestamp="20201029 12:46:29.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022084569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022123681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:28.921" endtime="20201029 12:46:29.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022084569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022123681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:29.212" endtime="20201029 12:46:29.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.220" endtime="20201029 12:46:29.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.918" endtime="20201029 12:46:29.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.916" endtime="20201029 12:46:29.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:29.227" level="INFO">${RESULT} = [{'diff': 3.911200000000087e-05}, {'diff': 3.9125000000000965e-05}, {'diff': 3.8861000000001145e-05}, {'diff': 3.9416999999999924e-05}, {'diff': 3.876400000000016e-05}, {'diff': 3.8930999999998994e-05...</msg>
<status status="PASS" starttime="20201029 12:46:29.224" endtime="20201029 12:46:29.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:29.232" level="INFO">${ACCURACY} = {'diff': [3.911200000000087e-05, 3.9125000000000965e-05, 3.8861000000001145e-05, 3.9416999999999924e-05, 3.876400000000016e-05, 3.8930999999998994e-05, 3.920800000000238e-05, 3.919399999999934e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:46:29.228" endtime="20201029 12:46:29.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.236" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 12:46:29.235" endtime="20201029 12:46:29.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.239" level="INFO">VALUE: [3.911200000000087e-05, 3.9125000000000965e-05, 3.8861000000001145e-05, 3.9416999999999924e-05, 3.876400000000016e-05, 3.8930999999998994e-05, 3.920800000000238e-05, 3.919399999999934e-05, 3.951400000000091e-05, 3.9389000000000784e-05, 3.9389000000000784e-05, 3.895799999999866e-05, 3.9027000000000506e-05, 3.919399999999934e-05, 3.9403000000000354e-05, 3.9388999999997315e-05, 3.931999999999894e-05, 3.934799999999808e-05, 3.951400000000091e-05, 3.9209000000001853e-05, 3.957000000000266e-05, 3.925000000000109e-05, 3.875000000000059e-05, 3.8777000000000256e-05, 3.952800000000048e-05, 3.9304999999999896e-05, 3.96660000000007e-05, 3.9263000000001186e-05, 3.944399999999959e-05, 3.8861000000001145e-05, 3.9096999999998355e-05, 3.94859999999983e-05, 3.8902999999999854e-05, 3.9374999999997745e-05, 3.9166999999999674e-05, 3.8818999999998965e-05, 3.89720000000017e-05, 3.9347000000002075e-05, 3.877799999999973e-05, 3.9555000000000146e-05, 3.8889000000000284e-05, 3.926400000000066e-05, 3.89720000000017e-05, 3.954200000000005e-05, 3.904199999999955e-05, 3.908399999999826e-05, 3.9166999999999674e-05, 3.9596999999998855e-05, 3.92919999999998e-05, 3.900000000000084e-05]</msg>
<status status="PASS" starttime="20201029 12:46:29.237" endtime="20201029 12:46:29.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.233" endtime="20201029 12:46:29.240"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:29.244" endtime="20201029 12:46:29.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.242" endtime="20201029 12:46:29.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.241" endtime="20201029 12:46:29.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.885" endtime="20201029 12:46:29.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.885" endtime="20201029 12:46:29.264"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.274" endtime="20201029 12:46:29.290"></status>
</kw>
<msg timestamp="20201029 12:46:29.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.273" endtime="20201029 12:46:29.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.291" endtime="20201029 12:46:29.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.294" endtime="20201029 12:46:29.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.269" endtime="20201029 12:46:29.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.267" endtime="20201029 12:46:29.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.303" endtime="20201029 12:46:29.588"></status>
</kw>
<msg timestamp="20201029 12:46:29.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022883903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022923889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:29.301" endtime="20201029 12:46:29.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022883903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022923889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:29.593" endtime="20201029 12:46:29.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.601" endtime="20201029 12:46:29.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.299" endtime="20201029 12:46:29.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.297" endtime="20201029 12:46:29.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:29.608" level="INFO">${RESULT} = [{'diff': 3.99859999999988e-05}, {'diff': 4.01799999999973e-05}, {'diff': 3.990200000000138e-05}, {'diff': 4.0596999999999855e-05}, {'diff': 3.9917000000000424e-05}, {'diff': 4.0610999999999425e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:29.605" endtime="20201029 12:46:29.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:29.613" level="INFO">${ACCURACY} = {'diff': [3.99859999999988e-05, 4.01799999999973e-05, 3.990200000000138e-05, 4.0596999999999855e-05, 3.9917000000000424e-05, 4.0610999999999425e-05, 4.0360999999999175e-05, 4.0596999999999855e-05, 4.0...</msg>
<status status="PASS" starttime="20201029 12:46:29.609" endtime="20201029 12:46:29.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.617" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 12:46:29.616" endtime="20201029 12:46:29.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.620" level="INFO">VALUE: [3.99859999999988e-05, 4.01799999999973e-05, 3.990200000000138e-05, 4.0596999999999855e-05, 3.9917000000000424e-05, 4.0610999999999425e-05, 4.0360999999999175e-05, 4.0596999999999855e-05, 4.041599999999798e-05, 4.0540999999998106e-05, 4.0610999999999425e-05, 4.0610999999999425e-05, 4.0082999999999785e-05, 4.0290999999997856e-05, 4.051399999999844e-05, 4.027800000000123e-05, 4.006999999999969e-05, 3.9861000000002145e-05, 4.0153000000001104e-05, 4.033399999999951e-05, 4.0583000000000286e-05, 4.0430999999997025e-05, 3.976399999999769e-05, 4.0138999999998065e-05, 4.0583000000000286e-05, 4.0361000000002645e-05, 4.0333000000000035e-05, 4.0374999999998745e-05, 4.058399999999976e-05, 4.006999999999969e-05, 4.054199999999758e-05, 4.0110999999998925e-05, 4.0167000000000674e-05, 4.034800000000255e-05, 4.005600000000012e-05, 4.0708999999999884e-05, 4.0167000000000674e-05, 4.0124999999998495e-05, 4.04720000000032e-05, 3.9722999999998454e-05, 4.019400000000034e-05, 4.013800000000206e-05, 4.0305000000000896e-05, 4.0583000000000286e-05, 4.04859999999993e-05, 3.9860999999998675e-05, 3.9917000000000424e-05, 3.999999999999837e-05, 4.043000000000102e-05, 3.97920000000003e-05]</msg>
<status status="PASS" starttime="20201029 12:46:29.618" endtime="20201029 12:46:29.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.614" endtime="20201029 12:46:29.621"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:29.625" endtime="20201029 12:46:29.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.623" endtime="20201029 12:46:29.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.622" endtime="20201029 12:46:29.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.265" endtime="20201029 12:46:29.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.265" endtime="20201029 12:46:29.645"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.654" endtime="20201029 12:46:29.673"></status>
</kw>
<msg timestamp="20201029 12:46:29.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.652" endtime="20201029 12:46:29.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.674" endtime="20201029 12:46:29.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.677" endtime="20201029 12:46:29.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.650" endtime="20201029 12:46:29.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.648" endtime="20201029 12:46:29.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.685" endtime="20201029 12:46:29.972"></status>
</kw>
<msg timestamp="20201029 12:46:29.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024867875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024909222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:29.684" endtime="20201029 12:46:29.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024867875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024909222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:29.976" endtime="20201029 12:46:29.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.984" endtime="20201029 12:46:29.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.682" endtime="20201029 12:46:29.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.680" endtime="20201029 12:46:29.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:29.991" level="INFO">${RESULT} = [{'diff': 4.1347000000000605e-05}, {'diff': 4.1333000000001036e-05}, {'diff': 4.1097000000000355e-05}, {'diff': 4.119400000000134e-05}, {'diff': 4.176399999999969e-05}, {'diff': 4.098600000000327e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:29.988" endtime="20201029 12:46:29.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:29.995" level="INFO">${ACCURACY} = {'diff': [4.1347000000000605e-05, 4.1333000000001036e-05, 4.1097000000000355e-05, 4.119400000000134e-05, 4.176399999999969e-05, 4.098600000000327e-05, 4.084800000000305e-05, 4.1040999999998606e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:46:29.992" endtime="20201029 12:46:29.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.000" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 12:46:29.999" endtime="20201029 12:46:30.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.002" level="INFO">VALUE: [4.1347000000000605e-05, 4.1333000000001036e-05, 4.1097000000000355e-05, 4.119400000000134e-05, 4.176399999999969e-05, 4.098600000000327e-05, 4.084800000000305e-05, 4.1040999999998606e-05, 4.1361000000000175e-05, 4.173600000000055e-05, 4.105600000000112e-05, 4.0902999999998385e-05, 4.174999999999665e-05, 4.172200000000098e-05, 4.077799999999826e-05, 4.1124999999999495e-05, 4.1124999999999495e-05, 4.123600000000005e-05, 4.0888999999998815e-05, 4.147200000000073e-05, 4.079199999999783e-05, 4.1124999999999495e-05, 4.0860999999999675e-05, 4.080600000000087e-05, 4.076399999999869e-05, 4.12920000000018e-05, 4.0959000000000134e-05, 4.143000000000202e-05, 4.1680999999998275e-05, 4.0804999999997926e-05, 4.1110999999999925e-05, 4.1276999999999286e-05, 4.116599999999873e-05, 4.0776999999998786e-05, 4.119400000000134e-05, 4.127799999999876e-05, 4.1138999999999065e-05, 4.142999999999855e-05, 4.1153000000002105e-05, 4.1082999999997316e-05, 4.097200000000023e-05, 4.1416999999998455e-05, 4.105600000000112e-05, 4.0819000000000966e-05, 4.09859999999998e-05, 4.1416999999998455e-05, 4.104200000000155e-05, 4.0888999999998815e-05, 4.1097000000000355e-05, 4.152799999999901e-05]</msg>
<status status="PASS" starttime="20201029 12:46:30.001" endtime="20201029 12:46:30.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.996" endtime="20201029 12:46:30.004"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:30.008" endtime="20201029 12:46:30.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.006" endtime="20201029 12:46:30.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.005" endtime="20201029 12:46:30.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.646" endtime="20201029 12:46:30.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.646" endtime="20201029 12:46:30.029"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.037" endtime="20201029 12:46:30.053"></status>
</kw>
<msg timestamp="20201029 12:46:30.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.036" endtime="20201029 12:46:30.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.054" endtime="20201029 12:46:30.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.057" endtime="20201029 12:46:30.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.033" endtime="20201029 12:46:30.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.031" endtime="20201029 12:46:30.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.065" endtime="20201029 12:46:30.349"></status>
</kw>
<msg timestamp="20201029 12:46:30.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021462875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021505417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:30.064" endtime="20201029 12:46:30.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021462875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021505417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:30.353" endtime="20201029 12:46:30.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.361" endtime="20201029 12:46:30.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.061" endtime="20201029 12:46:30.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.060" endtime="20201029 12:46:30.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:30.368" level="INFO">${RESULT} = [{'diff': 4.254199999999958e-05}, {'diff': 4.24860000000013e-05}, {'diff': 4.2125000000000495e-05}, {'diff': 4.244399999999912e-05}, {'diff': 4.2610999999997956e-05}, {'diff': 4.233400000000151e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:30.364" endtime="20201029 12:46:30.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:30.373" level="INFO">${ACCURACY} = {'diff': [4.254199999999958e-05, 4.24860000000013e-05, 4.2125000000000495e-05, 4.244399999999912e-05, 4.2610999999997956e-05, 4.233400000000151e-05, 4.2402999999999885e-05, 4.227799999999976e-05, 4.25...</msg>
<status status="PASS" starttime="20201029 12:46:30.369" endtime="20201029 12:46:30.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.377" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 12:46:30.376" endtime="20201029 12:46:30.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.379" level="INFO">VALUE: [4.254199999999958e-05, 4.24860000000013e-05, 4.2125000000000495e-05, 4.244399999999912e-05, 4.2610999999997956e-05, 4.233400000000151e-05, 4.2402999999999885e-05, 4.227799999999976e-05, 4.2568999999999246e-05, 4.254199999999958e-05, 4.204200000000255e-05, 4.250000000000087e-05, 4.220800000000191e-05, 4.21799999999993e-05, 4.2110999999997456e-05, 4.200000000000037e-05, 4.225000000000062e-05, 4.247200000000173e-05, 4.2166999999999205e-05, 4.2194999999998345e-05, 4.205599999999865e-05, 4.2027000000000037e-05, 4.256999999999872e-05, 4.2473000000001204e-05, 4.1888999999999815e-05, 4.255599999999915e-05, 4.2541000000000107e-05, 4.1832999999998066e-05, 4.222200000000148e-05, 4.244399999999912e-05, 4.248599999999783e-05, 4.2083000000001786e-05, 4.2583000000002286e-05, 4.2361000000001175e-05, 4.250000000000087e-05, 4.2569000000002716e-05, 4.1888999999999815e-05, 4.251400000000044e-05, 4.1916999999998955e-05, 4.2375000000000745e-05, 4.192999999999905e-05, 4.1860999999997206e-05, 4.247200000000173e-05, 4.179199999999883e-05, 4.19860000000008e-05, 4.2597000000001856e-05, 4.198599999999733e-05, 4.220799999999844e-05, 4.2097000000001356e-05, 4.1944999999998095e-05]</msg>
<status status="PASS" starttime="20201029 12:46:30.378" endtime="20201029 12:46:30.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.373" endtime="20201029 12:46:30.381"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:30.384" endtime="20201029 12:46:30.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.383" endtime="20201029 12:46:30.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.382" endtime="20201029 12:46:30.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.030" endtime="20201029 12:46:30.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.029" endtime="20201029 12:46:30.405"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.414" endtime="20201029 12:46:30.430"></status>
</kw>
<msg timestamp="20201029 12:46:30.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.412" endtime="20201029 12:46:30.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.431" endtime="20201029 12:46:30.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.434" endtime="20201029 12:46:30.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.410" endtime="20201029 12:46:30.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.408" endtime="20201029 12:46:30.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.443" endtime="20201029 12:46:30.728"></status>
</kw>
<msg timestamp="20201029 12:46:30.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021684583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021727625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:30.441" endtime="20201029 12:46:30.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021684583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021727625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:30.733" endtime="20201029 12:46:30.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.741" endtime="20201029 12:46:30.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.439" endtime="20201029 12:46:30.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.437" endtime="20201029 12:46:30.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:30.747" level="INFO">${RESULT} = [{'diff': 4.304200000000008e-05}, {'diff': 4.3444999999999595e-05}, {'diff': 4.351400000000144e-05}, {'diff': 4.2944999999999095e-05}, {'diff': 4.3473000000002204e-05}, {'diff': 4.3653000000001135e-05...</msg>
<status status="PASS" starttime="20201029 12:46:30.744" endtime="20201029 12:46:30.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:30.752" level="INFO">${ACCURACY} = {'diff': [4.304200000000008e-05, 4.3444999999999595e-05, 4.351400000000144e-05, 4.2944999999999095e-05, 4.3473000000002204e-05, 4.3653000000001135e-05, 4.2987000000001274e-05, 4.2986999999997805e-05, ...</msg>
<status status="PASS" starttime="20201029 12:46:30.748" endtime="20201029 12:46:30.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.756" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 12:46:30.755" endtime="20201029 12:46:30.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.758" level="INFO">VALUE: [4.304200000000008e-05, 4.3444999999999595e-05, 4.351400000000144e-05, 4.2944999999999095e-05, 4.3473000000002204e-05, 4.3653000000001135e-05, 4.2987000000001274e-05, 4.2986999999997805e-05, 4.3318999999999996e-05, 4.3041000000000607e-05, 4.3096999999998886e-05, 4.345799999999969e-05, 4.316600000000073e-05, 4.3361000000002176e-05, 4.3389000000001315e-05, 4.3639000000001565e-05, 4.3139000000001065e-05, 4.3583000000003286e-05, 4.354200000000058e-05, 4.301400000000094e-05, 4.308400000000226e-05, 4.302799999999704e-05, 4.323599999999858e-05, 4.276400000000069e-05, 4.350000000000187e-05, 4.302800000000051e-05, 4.2819000000002966e-05, 4.2888999999997346e-05, 4.3596999999999386e-05, 4.3402999999997416e-05, 4.323599999999858e-05, 4.304200000000008e-05, 4.279199999999983e-05, 4.2875000000001245e-05, 4.28059999999994e-05, 4.2903000000000385e-05, 4.300000000000137e-05, 4.2861000000001676e-05, 4.306999999999922e-05, 4.329199999999686e-05, 4.344400000000012e-05, 4.309799999999836e-05, 4.3110999999998456e-05, 4.344400000000012e-05, 4.3346999999999136e-05, 4.347200000000273e-05, 4.28059999999994e-05, 4.3389000000001315e-05, 4.327699999999782e-05, 4.350000000000187e-05]</msg>
<status status="PASS" starttime="20201029 12:46:30.757" endtime="20201029 12:46:30.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.752" endtime="20201029 12:46:30.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:30.763" endtime="20201029 12:46:30.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.762" endtime="20201029 12:46:30.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.761" endtime="20201029 12:46:30.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.406" endtime="20201029 12:46:30.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.405" endtime="20201029 12:46:30.784"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.792" endtime="20201029 12:46:30.809"></status>
</kw>
<msg timestamp="20201029 12:46:30.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.791" endtime="20201029 12:46:30.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.811" endtime="20201029 12:46:30.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.813" endtime="20201029 12:46:30.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.788" endtime="20201029 12:46:30.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.786" endtime="20201029 12:46:30.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.822" endtime="20201029 12:46:31.107"></status>
</kw>
<msg timestamp="20201029 12:46:31.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022333542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022377472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:30.821" endtime="20201029 12:46:31.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022333542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022377472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:31.112" endtime="20201029 12:46:31.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.120" endtime="20201029 12:46:31.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.818" endtime="20201029 12:46:31.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.816" endtime="20201029 12:46:31.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:31.126" level="INFO">${RESULT} = [{'diff': 4.392999999999758e-05}, {'diff': 4.441600000000198e-05}, {'diff': 4.383399999999954e-05}, {'diff': 4.4152999999998166e-05}, {'diff': 4.461199999999943e-05}, {'diff': 4.4388999999998846e-05},...</msg>
<status status="PASS" starttime="20201029 12:46:31.123" endtime="20201029 12:46:31.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:31.130" level="INFO">${ACCURACY} = {'diff': [4.392999999999758e-05, 4.441600000000198e-05, 4.383399999999954e-05, 4.4152999999998166e-05, 4.461199999999943e-05, 4.4388999999998846e-05, 4.4110999999999456e-05, 4.427800000000176e-05, 4.4...</msg>
<status status="PASS" starttime="20201029 12:46:31.127" endtime="20201029 12:46:31.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.135" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 12:46:31.134" endtime="20201029 12:46:31.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.137" level="INFO">VALUE: [4.392999999999758e-05, 4.441600000000198e-05, 4.383399999999954e-05, 4.4152999999998166e-05, 4.461199999999943e-05, 4.4388999999998846e-05, 4.4110999999999456e-05, 4.427800000000176e-05, 4.4403000000001885e-05, 4.452699999999907e-05, 4.4222999999999485e-05, 4.4360999999999706e-05, 4.445800000000069e-05, 4.401400000000194e-05, 4.4096999999999886e-05, 4.440199999999894e-05, 4.3931000000000525e-05, 4.4096999999999886e-05, 4.404100000000161e-05, 4.444399999999765e-05, 4.408399999999979e-05, 4.454100000000211e-05, 4.3860999999999206e-05, 4.4403000000001885e-05, 4.3846999999999636e-05, 4.394400000000062e-05, 4.3875000000002246e-05, 4.3833000000000066e-05, 4.4083000000000316e-05, 4.427799999999829e-05, 4.4110999999999456e-05, 4.429200000000133e-05, 4.4624999999999526e-05, 4.4360999999999706e-05, 4.422200000000001e-05, 4.395800000000019e-05, 4.4681000000001275e-05, 4.402799999999804e-05, 4.408399999999979e-05, 4.433400000000004e-05, 4.4124999999999026e-05, 4.432000000000047e-05, 4.427700000000229e-05, 4.429199999999786e-05, 4.3888999999998346e-05, 4.4096999999999886e-05, 4.402699999999857e-05, 4.4055000000001177e-05, 4.4012999999999e-05, 4.3805000000000927e-05]</msg>
<status status="PASS" starttime="20201029 12:46:31.136" endtime="20201029 12:46:31.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.131" endtime="20201029 12:46:31.140"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:31.143" endtime="20201029 12:46:31.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.142" endtime="20201029 12:46:31.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.141" endtime="20201029 12:46:31.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.785" endtime="20201029 12:46:31.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.784" endtime="20201029 12:46:31.164"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.175" endtime="20201029 12:46:31.192"></status>
</kw>
<msg timestamp="20201029 12:46:31.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.173" endtime="20201029 12:46:31.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.195" endtime="20201029 12:46:31.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.198" endtime="20201029 12:46:31.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.169" endtime="20201029 12:46:31.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.166" endtime="20201029 12:46:31.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.207" endtime="20201029 12:46:31.493"></status>
</kw>
<msg timestamp="20201029 12:46:31.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024943042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024988667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:31.205" endtime="20201029 12:46:31.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024943042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024988667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:31.497" endtime="20201029 12:46:31.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.506" endtime="20201029 12:46:31.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.203" endtime="20201029 12:46:31.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.201" endtime="20201029 12:46:31.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:31.512" level="INFO">${RESULT} = [{'diff': 4.5625000000000526e-05}, {'diff': 4.5097000000000886e-05}, {'diff': 4.552799999999954e-05}, {'diff': 4.495799999999772e-05}, {'diff': 4.5611000000000956e-05}, {'diff': 4.5375000000000276e-05...</msg>
<status status="PASS" starttime="20201029 12:46:31.509" endtime="20201029 12:46:31.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:31.517" level="INFO">${ACCURACY} = {'diff': [4.5625000000000526e-05, 4.5097000000000886e-05, 4.552799999999954e-05, 4.495799999999772e-05, 4.5611000000000956e-05, 4.5375000000000276e-05, 4.476399999999922e-05, 4.51800000000023e-05, 4.5...</msg>
<status status="PASS" starttime="20201029 12:46:31.513" endtime="20201029 12:46:31.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.522" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 12:46:31.521" endtime="20201029 12:46:31.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.524" level="INFO">VALUE: [4.5625000000000526e-05, 4.5097000000000886e-05, 4.552799999999954e-05, 4.495799999999772e-05, 4.5611000000000956e-05, 4.5375000000000276e-05, 4.476399999999922e-05, 4.51800000000023e-05, 4.559699999999792e-05, 4.501399999999947e-05, 4.5195000000001345e-05, 4.474999999999965e-05, 4.48199999999975e-05, 4.501399999999947e-05, 4.5375000000000276e-05, 4.484699999999717e-05, 4.559699999999792e-05, 4.4902999999998916e-05, 4.483399999999707e-05, 4.555599999999868e-05, 4.4959000000000665e-05, 4.4944999999997626e-05, 4.559800000000086e-05, 4.4959000000000665e-05, 4.4736999999999555e-05, 4.4945000000001095e-05, 4.525000000000015e-05, 4.525000000000015e-05, 4.576399999999675e-05, 4.5333000000001566e-05, 4.5388999999999846e-05, 4.53329999999981e-05, 4.502800000000251e-05, 4.477799999999879e-05, 4.5652999999999666e-05, 4.497200000000076e-05, 4.5347000000001136e-05, 4.517999999999883e-05, 4.5167000000002205e-05, 4.4833000000001066e-05, 4.474999999999965e-05, 4.5347000000001136e-05, 4.55000000000004e-05, 4.559699999999792e-05, 4.5097000000000886e-05, 4.504199999999861e-05, 4.5416999999998986e-05, 4.532000000000147e-05, 4.5181000000001775e-05, 4.5444999999998126e-05]</msg>
<status status="PASS" starttime="20201029 12:46:31.523" endtime="20201029 12:46:31.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.518" endtime="20201029 12:46:31.525"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:31.529" endtime="20201029 12:46:31.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.527" endtime="20201029 12:46:31.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.526" endtime="20201029 12:46:31.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.165" endtime="20201029 12:46:31.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.164" endtime="20201029 12:46:31.550"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.558" endtime="20201029 12:46:31.574"></status>
</kw>
<msg timestamp="20201029 12:46:31.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.556" endtime="20201029 12:46:31.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.576" endtime="20201029 12:46:31.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.578" endtime="20201029 12:46:31.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.554" endtime="20201029 12:46:31.581"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.552" endtime="20201029 12:46:31.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.587" endtime="20201029 12:46:31.874"></status>
</kw>
<msg timestamp="20201029 12:46:31.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021572306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021618208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:31.586" endtime="20201029 12:46:31.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021572306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021618208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:31.878" endtime="20201029 12:46:31.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.886" endtime="20201029 12:46:31.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.583" endtime="20201029 12:46:31.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.582" endtime="20201029 12:46:31.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:31.893" level="INFO">${RESULT} = [{'diff': 4.590200000000044e-05}, {'diff': 4.599999999999743e-05}, {'diff': 4.605599999999918e-05}, {'diff': 4.604199999999961e-05}, {'diff': 4.652800000000054e-05}, {'diff': 4.626400000000072e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:31.890" endtime="20201029 12:46:31.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:31.897" level="INFO">${ACCURACY} = {'diff': [4.590200000000044e-05, 4.599999999999743e-05, 4.605599999999918e-05, 4.604199999999961e-05, 4.652800000000054e-05, 4.626400000000072e-05, 4.584800000000111e-05, 4.622200000000201e-05, 4.6264...</msg>
<status status="PASS" starttime="20201029 12:46:31.894" endtime="20201029 12:46:31.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.901" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 12:46:31.900" endtime="20201029 12:46:31.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.904" level="INFO">VALUE: [4.590200000000044e-05, 4.599999999999743e-05, 4.605599999999918e-05, 4.604199999999961e-05, 4.652800000000054e-05, 4.626400000000072e-05, 4.584800000000111e-05, 4.622200000000201e-05, 4.626400000000072e-05, 4.6430999999999556e-05, 4.6416999999999986e-05, 4.6389000000000846e-05, 4.590200000000044e-05, 4.579099999999989e-05, 4.576300000000075e-05, 4.636099999999824e-05, 4.63329999999991e-05, 4.581899999999903e-05, 4.590200000000044e-05, 4.658299999999935e-05, 4.598599999999786e-05, 4.579099999999989e-05, 4.615200000000069e-05, 4.641600000000051e-05, 4.654200000000011e-05, 4.612499999999756e-05, 4.648600000000183e-05, 4.627700000000082e-05, 4.575000000000065e-05, 4.652799999999707e-05, 4.576400000000022e-05, 4.659799999999839e-05, 4.5875000000000776e-05, 4.6153000000000166e-05, 4.634799999999814e-05, 4.6166999999999736e-05, 4.583400000000154e-05, 4.6319999999999e-05, 4.606999999999875e-05, 4.633399999999857e-05, 4.606999999999875e-05, 4.5930999999999056e-05, 4.583399999999807e-05, 4.6222999999998016e-05, 4.656899999999978e-05, 4.591600000000001e-05, 4.6222999999998016e-05, 4.620800000000244e-05, 4.648600000000183e-05, 4.609699999999842e-05]</msg>
<status status="PASS" starttime="20201029 12:46:31.903" endtime="20201029 12:46:31.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.898" endtime="20201029 12:46:31.905"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:31.909" endtime="20201029 12:46:31.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.907" endtime="20201029 12:46:31.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.906" endtime="20201029 12:46:31.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.550" endtime="20201029 12:46:31.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.550" endtime="20201029 12:46:31.930"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.938" endtime="20201029 12:46:31.956"></status>
</kw>
<msg timestamp="20201029 12:46:31.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.937" endtime="20201029 12:46:31.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.957" endtime="20201029 12:46:31.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.960" endtime="20201029 12:46:31.961"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.934" endtime="20201029 12:46:31.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.932" endtime="20201029 12:46:31.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.969" endtime="20201029 12:46:32.255"></status>
</kw>
<msg timestamp="20201029 12:46:32.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022652111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022699903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:31.967" endtime="20201029 12:46:32.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022652111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022699903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:32.259" endtime="20201029 12:46:32.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.268" endtime="20201029 12:46:32.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.965" endtime="20201029 12:46:32.270"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.963" endtime="20201029 12:46:32.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:32.274" level="INFO">${RESULT} = [{'diff': 4.779200000000136e-05}, {'diff': 4.755500000000121e-05}, {'diff': 4.7111000000002456e-05}, {'diff': 4.732e-05}, {'diff': 4.741699999999752e-05}, {'diff': 4.698599999999886e-05}, {'diff': 4.7...</msg>
<status status="PASS" starttime="20201029 12:46:32.271" endtime="20201029 12:46:32.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:32.278" level="INFO">${ACCURACY} = {'diff': [4.779200000000136e-05, 4.755500000000121e-05, 4.7111000000002456e-05, 4.732e-05, 4.741699999999752e-05, 4.698599999999886e-05, 4.716600000000126e-05, 4.708299999999985e-05, 4.705500000000071...</msg>
<status status="PASS" starttime="20201029 12:46:32.275" endtime="20201029 12:46:32.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.283" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 12:46:32.282" endtime="20201029 12:46:32.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.285" level="INFO">VALUE: [4.779200000000136e-05, 4.755500000000121e-05, 4.7111000000002456e-05, 4.732e-05, 4.741699999999752e-05, 4.698599999999886e-05, 4.716600000000126e-05, 4.708299999999985e-05, 4.705500000000071e-05, 4.745800000000022e-05, 4.756900000000078e-05, 4.708299999999985e-05, 4.740299999999795e-05, 4.730600000000043e-05, 4.677800000000079e-05, 4.761099999999949e-05, 4.752799999999807e-05, 4.736099999999924e-05, 4.7194999999999876e-05, 4.677800000000079e-05, 4.7445000000000126e-05, 4.709699999999942e-05, 4.680599999999993e-05, 4.70000000000019e-05, 4.740299999999795e-05, 4.748599999999936e-05, 4.761200000000243e-05, 4.7431000000000556e-05, 4.738899999999838e-05, 4.73330000000001e-05, 4.694400000000015e-05, 4.709699999999942e-05, 4.741599999999804e-05, 4.773599999999961e-05, 4.752800000000154e-05, 4.706900000000028e-05, 4.675000000000165e-05, 4.741600000000151e-05, 4.734699999999967e-05, 4.709699999999942e-05, 4.676400000000122e-05, 4.752800000000154e-05, 4.7181000000000306e-05, 4.737499999999881e-05, 4.756900000000078e-05, 4.755600000000068e-05, 4.726400000000172e-05, 4.759699999999992e-05, 4.7222999999999016e-05, 4.751400000000197e-05]</msg>
<status status="PASS" starttime="20201029 12:46:32.284" endtime="20201029 12:46:32.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.279" endtime="20201029 12:46:32.287"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:32.291" endtime="20201029 12:46:32.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.289" endtime="20201029 12:46:32.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.288" endtime="20201029 12:46:32.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.930" endtime="20201029 12:46:32.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.930" endtime="20201029 12:46:32.311"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.320" endtime="20201029 12:46:32.336"></status>
</kw>
<msg timestamp="20201029 12:46:32.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:32.318" endtime="20201029 12:46:32.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:32.338" endtime="20201029 12:46:32.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.340" endtime="20201029 12:46:32.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.316" endtime="20201029 12:46:32.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.314" endtime="20201029 12:46:32.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.349" endtime="20201029 12:46:32.635"></status>
</kw>
<msg timestamp="20201029 12:46:32.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021877694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021925681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:32.348" endtime="20201029 12:46:32.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021877694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021925681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:32.639" endtime="20201029 12:46:32.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.648" endtime="20201029 12:46:32.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.345" endtime="20201029 12:46:32.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.343" endtime="20201029 12:46:32.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:32.655" level="INFO">${RESULT} = [{'diff': 4.7986999999999336e-05}, {'diff': 4.816699999999827e-05}, {'diff': 4.786099999999974e-05}, {'diff': 4.844400000000165e-05}, {'diff': 4.809700000000042e-05}, {'diff': 4.797200000000029e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:32.651" endtime="20201029 12:46:32.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:32.660" level="INFO">${ACCURACY} = {'diff': [4.7986999999999336e-05, 4.816699999999827e-05, 4.786099999999974e-05, 4.844400000000165e-05, 4.809700000000042e-05, 4.797200000000029e-05, 4.78330000000006e-05, 4.858300000000135e-05, 4.8472...</msg>
<status status="PASS" starttime="20201029 12:46:32.656" endtime="20201029 12:46:32.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.664" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 12:46:32.663" endtime="20201029 12:46:32.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.667" level="INFO">VALUE: [4.7986999999999336e-05, 4.816699999999827e-05, 4.786099999999974e-05, 4.844400000000165e-05, 4.809700000000042e-05, 4.797200000000029e-05, 4.78330000000006e-05, 4.858300000000135e-05, 4.847200000000079e-05, 4.824999999999968e-05, 4.788899999999888e-05, 4.784700000000017e-05, 4.838899999999938e-05, 4.833400000000057e-05, 4.8445000000001126e-05, 4.8708999999997477e-05, 4.783400000000007e-05, 4.802799999999857e-05, 4.783400000000007e-05, 4.849999999999993e-05, 4.826399999999925e-05, 4.7986999999999336e-05, 4.8486999999999836e-05, 4.78879999999994e-05, 4.829100000000239e-05, 4.813899999999913e-05, 4.81940000000014e-05, 4.804099999999867e-05, 4.836100000000024e-05, 4.802799999999857e-05, 4.866599999999929e-05, 4.816600000000226e-05, 4.859699999999745e-05, 4.780500000000146e-05, 4.791699999999802e-05, 4.801400000000247e-05, 4.858299999999788e-05, 4.8417000000001986e-05, 4.83330000000011e-05, 4.824999999999968e-05, 4.809700000000042e-05, 4.780600000000093e-05, 4.813899999999913e-05, 4.8181000000001306e-05, 4.8320000000001e-05, 4.7958999999996726e-05, 4.854199999999864e-05, 4.861100000000049e-05, 4.788899999999888e-05, 4.843099999999809e-05]</msg>
<status status="PASS" starttime="20201029 12:46:32.666" endtime="20201029 12:46:32.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.661" endtime="20201029 12:46:32.668"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:32.672" endtime="20201029 12:46:32.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.670" endtime="20201029 12:46:32.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.669" endtime="20201029 12:46:32.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.312" endtime="20201029 12:46:32.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.312" endtime="20201029 12:46:32.692"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.701" endtime="20201029 12:46:32.718"></status>
</kw>
<msg timestamp="20201029 12:46:32.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:32.700" endtime="20201029 12:46:32.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:32.719" endtime="20201029 12:46:32.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.722" endtime="20201029 12:46:32.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.697" endtime="20201029 12:46:32.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.695" endtime="20201029 12:46:32.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.730" endtime="20201029 12:46:33.016"></status>
</kw>
<msg timestamp="20201029 12:46:33.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021767875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021817125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:32.729" endtime="20201029 12:46:33.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021767875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021817125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.021" endtime="20201029 12:46:33.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.029" endtime="20201029 12:46:33.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.726" endtime="20201029 12:46:33.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.725" endtime="20201029 12:46:33.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:33.035" level="INFO">${RESULT} = [{'diff': 4.925000000000068e-05}, {'diff': 4.95140000000005e-05}, {'diff': 4.9195000000001876e-05}, {'diff': 4.886200000000021e-05}, {'diff': 4.951300000000103e-05}, {'diff': 4.927700000000035e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:33.032" endtime="20201029 12:46:33.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:33.039" level="INFO">${ACCURACY} = {'diff': [4.925000000000068e-05, 4.95140000000005e-05, 4.9195000000001876e-05, 4.886200000000021e-05, 4.951300000000103e-05, 4.927700000000035e-05, 4.948599999999789e-05, 4.88330000000016e-05, 4.94169...</msg>
<status status="PASS" starttime="20201029 12:46:33.036" endtime="20201029 12:46:33.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.044" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 12:46:33.043" endtime="20201029 12:46:33.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.046" level="INFO">VALUE: [4.925000000000068e-05, 4.95140000000005e-05, 4.9195000000001876e-05, 4.886200000000021e-05, 4.951300000000103e-05, 4.927700000000035e-05, 4.948599999999789e-05, 4.88330000000016e-05, 4.941699999999952e-05, 4.942999999999961e-05, 4.880499999999899e-05, 4.950000000000093e-05, 4.937499999999734e-05, 4.92079999999985e-05, 4.938900000000038e-05, 4.956899999999931e-05, 4.905599999999871e-05, 4.958299999999888e-05, 4.93469999999982e-05, 4.954199999999964e-05, 4.922200000000154e-05, 4.905599999999871e-05, 4.88469999999977e-05, 4.902800000000304e-05, 4.934800000000114e-05, 4.930599999999896e-05, 4.961099999999802e-05, 4.902799999999957e-05, 4.875000000000018e-05, 4.8959000000001196e-05, 4.877799999999932e-05, 4.908400000000132e-05, 4.888899999999988e-05, 4.95270000000006e-05, 4.894499999999816e-05, 4.926300000000078e-05, 4.895800000000172e-05, 4.897200000000129e-05, 4.894399999999868e-05, 4.883299999999813e-05, 4.898599999999739e-05, 4.965200000000072e-05, 4.908300000000185e-05, 4.911100000000099e-05, 4.911099999999752e-05, 4.956899999999931e-05, 4.954100000000017e-05, 4.881900000000203e-05, 4.9014e-05, 4.955599999999921e-05]</msg>
<status status="PASS" starttime="20201029 12:46:33.045" endtime="20201029 12:46:33.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.040" endtime="20201029 12:46:33.048"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:33.051" endtime="20201029 12:46:33.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.050" endtime="20201029 12:46:33.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.049" endtime="20201029 12:46:33.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.693" endtime="20201029 12:46:33.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.693" endtime="20201029 12:46:33.072"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.082" endtime="20201029 12:46:33.102"></status>
</kw>
<msg timestamp="20201029 12:46:33.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.080" endtime="20201029 12:46:33.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.103" endtime="20201029 12:46:33.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.106" endtime="20201029 12:46:33.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.077" endtime="20201029 12:46:33.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.075" endtime="20201029 12:46:33.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.115" endtime="20201029 12:46:33.400"></status>
</kw>
<msg timestamp="20201029 12:46:33.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026996917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027046847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.113" endtime="20201029 12:46:33.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026996917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027046847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.404" endtime="20201029 12:46:33.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.412" endtime="20201029 12:46:33.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.111" endtime="20201029 12:46:33.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.109" endtime="20201029 12:46:33.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:33.419" level="INFO">${RESULT} = [{'diff': 4.993000000000011e-05}, {'diff': 5.016700000000027e-05}, {'diff': 4.9931000000003056e-05}, {'diff': 5.047199999999932e-05}, {'diff': 5.020899999999898e-05}, {'diff': 5.016700000000027e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:33.416" endtime="20201029 12:46:33.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:33.423" level="INFO">${ACCURACY} = {'diff': [4.993000000000011e-05, 5.016700000000027e-05, 4.9931000000003056e-05, 5.047199999999932e-05, 5.020899999999898e-05, 5.016700000000027e-05, 5.049999999999846e-05, 5.037499999999834e-05, 5.059...</msg>
<status status="PASS" starttime="20201029 12:46:33.420" endtime="20201029 12:46:33.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.427" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 12:46:33.426" endtime="20201029 12:46:33.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.430" level="INFO">VALUE: [4.993000000000011e-05, 5.016700000000027e-05, 4.9931000000003056e-05, 5.047199999999932e-05, 5.020899999999898e-05, 5.016700000000027e-05, 5.049999999999846e-05, 5.037499999999834e-05, 5.059799999999892e-05, 5.037500000000181e-05, 5.011200000000146e-05, 5.056900000000031e-05, 5.001299999999806e-05, 5.026399999999778e-05, 5.018000000000036e-05, 5.030500000000049e-05, 5.073600000000261e-05, 4.979099999999695e-05, 4.988899999999741e-05, 5.056900000000031e-05, 5.022199999999907e-05, 5.033299999999963e-05, 5.013900000000113e-05, 5.004200000000014e-05, 4.979199999999989e-05, 5.013900000000113e-05, 5.020800000000297e-05, 5.022199999999907e-05, 5.062499999999859e-05, 4.988899999999741e-05, 5.049999999999846e-05, 5.047199999999932e-05, 5.043100000000009e-05, 5.030500000000049e-05, 5.027800000000082e-05, 5.059800000000239e-05, 5.037500000000181e-05, 4.979199999999989e-05, 5.049999999999846e-05, 5.030500000000049e-05, 4.990300000000045e-05, 5.036100000000224e-05, 5.018000000000036e-05, 4.981899999999956e-05, 5.023600000000211e-05, 4.9915999999997074e-05, 4.995799999999925e-05, 4.995799999999925e-05, 4.986099999999827e-05, 5.050000000000193e-05]</msg>
<status status="PASS" starttime="20201029 12:46:33.428" endtime="20201029 12:46:33.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.424" endtime="20201029 12:46:33.432"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:33.435" endtime="20201029 12:46:33.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.434" endtime="20201029 12:46:33.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.433" endtime="20201029 12:46:33.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.073" endtime="20201029 12:46:33.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.072" endtime="20201029 12:46:33.456"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.465" endtime="20201029 12:46:33.481"></status>
</kw>
<msg timestamp="20201029 12:46:33.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.463" endtime="20201029 12:46:33.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.482" endtime="20201029 12:46:33.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.485" endtime="20201029 12:46:33.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.461" endtime="20201029 12:46:33.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.459" endtime="20201029 12:46:33.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.494" endtime="20201029 12:46:33.779"></status>
</kw>
<msg timestamp="20201029 12:46:33.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021521653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021573306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.492" endtime="20201029 12:46:33.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021521653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021573306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.784" endtime="20201029 12:46:33.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.792" endtime="20201029 12:46:33.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.490" endtime="20201029 12:46:33.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.488" endtime="20201029 12:46:33.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:33.799" level="INFO">${RESULT} = [{'diff': 5.165299999999873e-05}, {'diff': 5.076400000000175e-05}, {'diff': 5.176399999999928e-05}, {'diff': 5.076400000000175e-05}, {'diff': 5.1443999999997714e-05}, {'diff': 5.143100000000109e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:33.795" endtime="20201029 12:46:33.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:33.804" level="INFO">${ACCURACY} = {'diff': [5.165299999999873e-05, 5.076400000000175e-05, 5.176399999999928e-05, 5.076400000000175e-05, 5.1443999999997714e-05, 5.143100000000109e-05, 5.113900000000213e-05, 5.082000000000003e-05, 5.109...</msg>
<status status="PASS" starttime="20201029 12:46:33.800" endtime="20201029 12:46:33.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.809" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 12:46:33.808" endtime="20201029 12:46:33.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.811" level="INFO">VALUE: [5.165299999999873e-05, 5.076400000000175e-05, 5.176399999999928e-05, 5.076400000000175e-05, 5.1443999999997714e-05, 5.143100000000109e-05, 5.113900000000213e-05, 5.082000000000003e-05, 5.109699999999995e-05, 5.090299999999798e-05, 5.145900000000023e-05, 5.133399999999663e-05, 5.08339999999996e-05, 5.122299999999955e-05, 5.15140000000025e-05, 5.105500000000124e-05, 5.091600000000154e-05, 5.077799999999785e-05, 5.13340000000001e-05, 5.101299999999906e-05, 5.130599999999749e-05, 5.084700000000317e-05, 5.159700000000045e-05, 5.099999999999896e-05, 5.088899999999841e-05, 5.143000000000161e-05, 5.137499999999934e-05, 5.112499999999909e-05, 5.155500000000174e-05, 5.088899999999841e-05, 5.138899999999891e-05, 5.130600000000096e-05, 5.077799999999785e-05, 5.086099999999927e-05, 5.101399999999853e-05, 5.149999999999946e-05, 5.083300000000013e-05, 5.159700000000045e-05, 5.118100000000084e-05, 5.129199999999792e-05, 5.118100000000084e-05, 5.075000000000218e-05, 5.107000000000028e-05, 5.104200000000114e-05, 5.111199999999899e-05, 5.129099999999845e-05, 5.143100000000109e-05, 5.13340000000001e-05, 5.144400000000118e-05, 5.0929999999997644e-05]</msg>
<status status="PASS" starttime="20201029 12:46:33.810" endtime="20201029 12:46:33.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.805" endtime="20201029 12:46:33.812"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:33.816" endtime="20201029 12:46:33.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.814" endtime="20201029 12:46:33.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.813" endtime="20201029 12:46:33.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.457" endtime="20201029 12:46:33.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.456" endtime="20201029 12:46:33.836"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.845" endtime="20201029 12:46:33.862"></status>
</kw>
<msg timestamp="20201029 12:46:33.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.843" endtime="20201029 12:46:33.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.863" endtime="20201029 12:46:33.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.866" endtime="20201029 12:46:33.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.841" endtime="20201029 12:46:33.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.839" endtime="20201029 12:46:33.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.875" endtime="20201029 12:46:34.162"></status>
</kw>
<msg timestamp="20201029 12:46:34.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021610764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021662625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.873" endtime="20201029 12:46:34.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021610764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021662625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:34.166" endtime="20201029 12:46:34.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.174" endtime="20201029 12:46:34.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.871" endtime="20201029 12:46:34.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.869" endtime="20201029 12:46:34.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:34.181" level="INFO">${RESULT} = [{'diff': 5.186100000000027e-05}, {'diff': 5.21669999999988e-05}, {'diff': 5.230599999999849e-05}, {'diff': 5.20279999999991e-05}, {'diff': 5.208400000000085e-05}, {'diff': 5.24869999999969e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:46:34.177" endtime="20201029 12:46:34.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:34.185" level="INFO">${ACCURACY} = {'diff': [5.186100000000027e-05, 5.21669999999988e-05, 5.230599999999849e-05, 5.20279999999991e-05, 5.208400000000085e-05, 5.24869999999969e-05, 5.194500000000116e-05, 5.2415999999999574e-05, 5.202699...</msg>
<status status="PASS" starttime="20201029 12:46:34.181" endtime="20201029 12:46:34.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.189" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 12:46:34.188" endtime="20201029 12:46:34.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.191" level="INFO">VALUE: [5.186100000000027e-05, 5.21669999999988e-05, 5.230599999999849e-05, 5.20279999999991e-05, 5.208400000000085e-05, 5.24869999999969e-05, 5.194500000000116e-05, 5.2415999999999574e-05, 5.202699999999963e-05, 5.223600000000064e-05, 5.188899999999941e-05, 5.211099999999705e-05, 5.2652000000000254e-05, 5.2429999999999144e-05, 5.208299999999791e-05, 5.208299999999791e-05, 5.258399999999788e-05, 5.190299999999898e-05, 5.252800000000307e-05, 5.213899999999966e-05, 5.230599999999849e-05, 5.254199999999917e-05, 5.211100000000052e-05, 5.258399999999788e-05, 5.180600000000146e-05, 5.229200000000239e-05, 5.190299999999898e-05, 5.219499999999794e-05, 5.193100000000159e-05, 5.18470000000007e-05, 5.195899999999726e-05, 5.211100000000052e-05, 5.259800000000092e-05, 5.212500000000009e-05, 5.195900000000073e-05, 5.238899999999991e-05, 5.181899999999809e-05, 5.262500000000059e-05, 5.225000000000021e-05, 5.198600000000039e-05, 5.250000000000046e-05, 5.180500000000199e-05, 5.227699999999988e-05, 5.259699999999798e-05, 5.2166000000002793e-05, 5.258299999999841e-05, 5.187499999999984e-05, 5.229200000000239e-05, 5.20279999999991e-05, 5.230599999999849e-05]</msg>
<status status="PASS" starttime="20201029 12:46:34.190" endtime="20201029 12:46:34.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.185" endtime="20201029 12:46:34.193"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:34.196" endtime="20201029 12:46:34.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.195" endtime="20201029 12:46:34.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.194" endtime="20201029 12:46:34.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.837" endtime="20201029 12:46:34.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.837" endtime="20201029 12:46:34.217"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.226" endtime="20201029 12:46:34.244"></status>
</kw>
<msg timestamp="20201029 12:46:34.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:34.224" endtime="20201029 12:46:34.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:34.245" endtime="20201029 12:46:34.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.248" endtime="20201029 12:46:34.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.221" endtime="20201029 12:46:34.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.219" endtime="20201029 12:46:34.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.257" endtime="20201029 12:46:34.543"></status>
</kw>
<msg timestamp="20201029 12:46:34.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02283425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022887958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:34.255" endtime="20201029 12:46:34.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02283425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022887958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:34.548" endtime="20201029 12:46:34.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.556" endtime="20201029 12:46:34.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.253" endtime="20201029 12:46:34.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.251" endtime="20201029 12:46:34.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:34.562" level="INFO">${RESULT} = [{'diff': 5.3707999999999534e-05}, {'diff': 5.359699999999898e-05}, {'diff': 5.312500000000109e-05}, {'diff': 5.352700000000113e-05}, {'diff': 5.309800000000142e-05}, {'diff': 5.337500000000134e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:34.559" endtime="20201029 12:46:34.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:34.567" level="INFO">${ACCURACY} = {'diff': [5.3707999999999534e-05, 5.359699999999898e-05, 5.312500000000109e-05, 5.352700000000113e-05, 5.309800000000142e-05, 5.337500000000134e-05, 5.337499999999787e-05, 5.365300000000073e-05, 5.313...</msg>
<status status="PASS" starttime="20201029 12:46:34.563" endtime="20201029 12:46:34.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.571" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 12:46:34.570" endtime="20201029 12:46:34.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.573" level="INFO">VALUE: [5.3707999999999534e-05, 5.359699999999898e-05, 5.312500000000109e-05, 5.352700000000113e-05, 5.309800000000142e-05, 5.337500000000134e-05, 5.337499999999787e-05, 5.365300000000073e-05, 5.3138000000001184e-05, 5.280499999999952e-05, 5.305599999999924e-05, 5.3193999999999464e-05, 5.280599999999899e-05, 5.337499999999787e-05, 5.3249999999997744e-05, 5.3277999999996883e-05, 5.338899999999744e-05, 5.338899999999744e-05, 5.298600000000139e-05, 5.295899999999826e-05, 5.298700000000087e-05, 5.276400000000028e-05, 5.305600000000271e-05, 5.319500000000241e-05, 5.355599999999974e-05, 5.308400000000185e-05, 5.337500000000134e-05, 5.2916000000000074e-05, 5.331900000000306e-05, 5.309700000000195e-05, 5.309700000000195e-05, 5.3193999999999464e-05, 5.325000000000121e-05, 5.3207999999999034e-05, 5.315300000000023e-05, 5.356899999999984e-05, 5.30410000000002e-05, 5.316700000000327e-05, 5.312500000000109e-05, 5.306999999999881e-05, 5.280599999999899e-05, 5.30280000000001e-05, 5.2971999999998354e-05, 5.312499999999762e-05, 5.363899999999769e-05, 5.345899999999876e-05, 5.305599999999924e-05, 5.330599999999949e-05, 5.319499999999894e-05, 5.287500000000084e-05]</msg>
<status status="PASS" starttime="20201029 12:46:34.572" endtime="20201029 12:46:34.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.567" endtime="20201029 12:46:34.576"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:34.579" endtime="20201029 12:46:34.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.578" endtime="20201029 12:46:34.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.577" endtime="20201029 12:46:34.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.218" endtime="20201029 12:46:34.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.217" endtime="20201029 12:46:34.600"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.609" endtime="20201029 12:46:34.625"></status>
</kw>
<msg timestamp="20201029 12:46:34.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:34.607" endtime="20201029 12:46:34.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:34.627" endtime="20201029 12:46:34.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.629" endtime="20201029 12:46:34.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.604" endtime="20201029 12:46:34.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.602" endtime="20201029 12:46:34.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.638" endtime="20201029 12:46:34.923"></status>
</kw>
<msg timestamp="20201029 12:46:34.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021708069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021762208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:34.636" endtime="20201029 12:46:34.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021708069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021762208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:34.928" endtime="20201029 12:46:34.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.936" endtime="20201029 12:46:34.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.634" endtime="20201029 12:46:34.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.632" endtime="20201029 12:46:34.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:34.943" level="INFO">${RESULT} = [{'diff': 5.413900000000166e-05}, {'diff': 5.3957999999999784e-05}, {'diff': 5.438899999999844e-05}, {'diff': 5.4471999999999854e-05}, {'diff': 5.468100000000087e-05}, {'diff': 5.451400000000203e-05},...</msg>
<status status="PASS" starttime="20201029 12:46:34.939" endtime="20201029 12:46:34.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:34.948" level="INFO">${ACCURACY} = {'diff': [5.413900000000166e-05, 5.3957999999999784e-05, 5.438899999999844e-05, 5.4471999999999854e-05, 5.468100000000087e-05, 5.451400000000203e-05, 5.432000000000006e-05, 5.429200000000092e-05, 5.38...</msg>
<status status="PASS" starttime="20201029 12:46:34.944" endtime="20201029 12:46:34.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.952" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 12:46:34.951" endtime="20201029 12:46:34.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.955" level="INFO">VALUE: [5.413900000000166e-05, 5.3957999999999784e-05, 5.438899999999844e-05, 5.4471999999999854e-05, 5.468100000000087e-05, 5.451400000000203e-05, 5.432000000000006e-05, 5.429200000000092e-05, 5.381999999999956e-05, 5.426300000000231e-05, 5.411199999999852e-05, 5.4458000000000284e-05, 5.438900000000191e-05, 5.433300000000016e-05, 5.3957999999999784e-05, 5.459699999999998e-05, 5.393100000000012e-05, 5.4193999999996995e-05, 5.4013999999998064e-05, 5.437499999999887e-05, 5.383299999999966e-05, 5.4527999999998134e-05, 5.4208000000000034e-05, 5.433300000000016e-05, 5.388900000000141e-05, 5.388899999999794e-05, 5.454200000000117e-05, 5.386100000000227e-05, 5.386100000000227e-05, 5.412500000000209e-05, 5.4513999999998564e-05, 5.400000000000196e-05, 5.454200000000117e-05, 5.406999999999981e-05, 5.4263999999998314e-05, 5.426400000000178e-05, 5.445900000000323e-05, 5.420899999999951e-05, 5.379200000000042e-05, 5.40280000000011e-05, 5.4179999999997425e-05, 5.408299999999991e-05, 5.4458000000000284e-05, 5.451400000000203e-05, 5.40410000000012e-05, 5.455500000000127e-05, 5.411099999999905e-05, 5.406900000000034e-05, 5.408299999999991e-05, 5.3763999999997814e-05]</msg>
<status status="PASS" starttime="20201029 12:46:34.953" endtime="20201029 12:46:34.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.948" endtime="20201029 12:46:34.956"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:34.960" endtime="20201029 12:46:34.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.958" endtime="20201029 12:46:34.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.957" endtime="20201029 12:46:34.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.601" endtime="20201029 12:46:34.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.600" endtime="20201029 12:46:34.980"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.989" endtime="20201029 12:46:35.005"></status>
</kw>
<msg timestamp="20201029 12:46:35.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:34.987" endtime="20201029 12:46:35.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.007" endtime="20201029 12:46:35.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.010" endtime="20201029 12:46:35.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.985" endtime="20201029 12:46:35.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.982" endtime="20201029 12:46:35.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.018" endtime="20201029 12:46:35.305"></status>
</kw>
<msg timestamp="20201029 12:46:35.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021698292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021753153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:35.017" endtime="20201029 12:46:35.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021698292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021753153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:35.309" endtime="20201029 12:46:35.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.318" endtime="20201029 12:46:35.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.014" endtime="20201029 12:46:35.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.013" endtime="20201029 12:46:35.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:35.324" level="INFO">${RESULT} = [{'diff': 5.48609999999998e-05}, {'diff': 5.5221999999997134e-05}, {'diff': 5.5291999999998453e-05}, {'diff': 5.556899999999837e-05}, {'diff': 5.4930000000001644e-05}, {'diff': 5.533299999999769e-05},...</msg>
<status status="PASS" starttime="20201029 12:46:35.321" endtime="20201029 12:46:35.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:35.328" level="INFO">${ACCURACY} = {'diff': [5.48609999999998e-05, 5.5221999999997134e-05, 5.5291999999998453e-05, 5.556899999999837e-05, 5.4930000000001644e-05, 5.533299999999769e-05, 5.509700000000048e-05, 5.5249999999999744e-05, 5.5...</msg>
<status status="PASS" starttime="20201029 12:46:35.325" endtime="20201029 12:46:35.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.333" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 12:46:35.332" endtime="20201029 12:46:35.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.335" level="INFO">VALUE: [5.48609999999998e-05, 5.5221999999997134e-05, 5.5291999999998453e-05, 5.556899999999837e-05, 5.4930000000001644e-05, 5.533299999999769e-05, 5.509700000000048e-05, 5.5249999999999744e-05, 5.537499999999987e-05, 5.5221999999997134e-05, 5.5222000000000604e-05, 5.561100000000055e-05, 5.491700000000155e-05, 5.53480000000002e-05, 5.513900000000266e-05, 5.5513999999999564e-05, 5.5263999999999314e-05, 5.509799999999995e-05, 5.541699999999858e-05, 5.5430000000002144e-05, 5.486199999999927e-05, 5.488900000000241e-05, 5.54869999999999e-05, 5.509699999999701e-05, 5.558300000000141e-05, 5.558299999999794e-05, 5.511100000000005e-05, 5.5472000000000854e-05, 5.5472000000000854e-05, 5.558300000000141e-05, 5.540300000000248e-05, 5.53610000000003e-05, 5.515300000000223e-05, 5.5013999999999064e-05, 5.525000000000321e-05, 5.5486000000000424e-05, 5.5263999999999314e-05, 5.505600000000124e-05, 5.529200000000192e-05, 5.476400000000228e-05, 5.515299999999876e-05, 5.482000000000056e-05, 5.5305999999998023e-05, 5.487500000000284e-05, 5.508400000000038e-05, 5.5555999999998273e-05, 5.507000000000081e-05, 5.505599999999777e-05, 5.53480000000002e-05, 5.522300000000008e-05]</msg>
<status status="PASS" starttime="20201029 12:46:35.334" endtime="20201029 12:46:35.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.329" endtime="20201029 12:46:35.336"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:35.340" endtime="20201029 12:46:35.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.339" endtime="20201029 12:46:35.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.337" endtime="20201029 12:46:35.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.981" endtime="20201029 12:46:35.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.980" endtime="20201029 12:46:35.361"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.369" endtime="20201029 12:46:35.387"></status>
</kw>
<msg timestamp="20201029 12:46:35.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.368" endtime="20201029 12:46:35.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.389" endtime="20201029 12:46:35.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.391" endtime="20201029 12:46:35.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.365" endtime="20201029 12:46:35.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.363" endtime="20201029 12:46:35.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.400" endtime="20201029 12:46:35.685"></status>
</kw>
<msg timestamp="20201029 12:46:35.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022579167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022634958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:35.398" endtime="20201029 12:46:35.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022579167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022634958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:35.689" endtime="20201029 12:46:35.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.698" endtime="20201029 12:46:35.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.396" endtime="20201029 12:46:35.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.394" endtime="20201029 12:46:35.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:35.705" level="INFO">${RESULT} = [{'diff': 5.579099999999948e-05}, {'diff': 5.6235999999997704e-05}, {'diff': 5.576400000000328e-05}, {'diff': 5.6541999999999704e-05}, {'diff': 5.590299999999951e-05}, {'diff': 5.6319999999998593e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:35.702" endtime="20201029 12:46:35.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:35.710" level="INFO">${ACCURACY} = {'diff': [5.579099999999948e-05, 5.6235999999997704e-05, 5.576400000000328e-05, 5.6541999999999704e-05, 5.590299999999951e-05, 5.6319999999998593e-05, 5.590300000000298e-05, 5.619499999999847e-05, 5.5...</msg>
<status status="PASS" starttime="20201029 12:46:35.706" endtime="20201029 12:46:35.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.714" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 12:46:35.713" endtime="20201029 12:46:35.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.716" level="INFO">VALUE: [5.579099999999948e-05, 5.6235999999997704e-05, 5.576400000000328e-05, 5.6541999999999704e-05, 5.590299999999951e-05, 5.6319999999998593e-05, 5.590300000000298e-05, 5.619499999999847e-05, 5.579200000000242e-05, 5.619500000000194e-05, 5.579200000000242e-05, 5.6250000000000744e-05, 5.670899999999854e-05, 5.6514000000000564e-05, 5.5750000000000244e-05, 5.659800000000145e-05, 5.6541999999999704e-05, 5.64870000000009e-05, 5.606899999999887e-05, 5.662500000000112e-05, 5.6250000000000744e-05, 5.654100000000023e-05, 5.5736000000000674e-05, 5.588899999999994e-05, 5.5777999999999384e-05, 5.630499999999955e-05, 5.6249999999997274e-05, 5.637500000000087e-05, 5.630499999999955e-05, 5.640300000000001e-05, 5.6457999999998815e-05, 5.6221999999998135e-05, 5.6277999999999884e-05, 5.6402000000000535e-05, 5.6541999999999704e-05, 5.581899999999862e-05, 5.611100000000105e-05, 5.597299999999736e-05, 5.586099999999733e-05, 5.645900000000176e-05, 5.605600000000224e-05, 5.5972000000001354e-05, 5.6750000000001244e-05, 5.626300000000084e-05, 5.573700000000015e-05, 5.629099999999998e-05, 5.581900000000209e-05, 5.602700000000016e-05, 5.5888000000000465e-05, 5.612500000000062e-05]</msg>
<status status="PASS" starttime="20201029 12:46:35.715" endtime="20201029 12:46:35.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.710" endtime="20201029 12:46:35.719"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:35.722" endtime="20201029 12:46:35.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.721" endtime="20201029 12:46:35.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.719" endtime="20201029 12:46:35.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.362" endtime="20201029 12:46:35.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.361" endtime="20201029 12:46:35.743"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.751" endtime="20201029 12:46:35.768"></status>
</kw>
<msg timestamp="20201029 12:46:35.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.750" endtime="20201029 12:46:35.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.770" endtime="20201029 12:46:35.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.772" endtime="20201029 12:46:35.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.747" endtime="20201029 12:46:35.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.745" endtime="20201029 12:46:35.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.781" endtime="20201029 12:46:36.066"></status>
</kw>
<msg timestamp="20201029 12:46:36.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021614806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021671778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:35.780" endtime="20201029 12:46:36.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021614806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021671778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:36.071" endtime="20201029 12:46:36.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.079" endtime="20201029 12:46:36.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.777" endtime="20201029 12:46:36.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.775" endtime="20201029 12:46:36.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:36.086" level="INFO">${RESULT} = [{'diff': 5.6971999999998885e-05}, {'diff': 5.683299999999919e-05}, {'diff': 5.762499999999865e-05}, {'diff': 5.7306000000000024e-05}, {'diff': 5.6999999999998024e-05}, {'diff': 5.6985999999998455e-05...</msg>
<status status="PASS" starttime="20201029 12:46:36.082" endtime="20201029 12:46:36.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:36.092" level="INFO">${ACCURACY} = {'diff': [5.6971999999998885e-05, 5.683299999999919e-05, 5.762499999999865e-05, 5.7306000000000024e-05, 5.6999999999998024e-05, 5.6985999999998455e-05, 5.738900000000144e-05, 5.681899999999962e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:46:36.088" endtime="20201029 12:46:36.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.096" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 12:46:36.095" endtime="20201029 12:46:36.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.099" level="INFO">VALUE: [5.6971999999998885e-05, 5.683299999999919e-05, 5.762499999999865e-05, 5.7306000000000024e-05, 5.6999999999998024e-05, 5.6985999999998455e-05, 5.738900000000144e-05, 5.681899999999962e-05, 5.7528000000001134e-05, 5.68749999999979e-05, 5.7014000000001064e-05, 5.6999999999998024e-05, 5.712500000000162e-05, 5.687500000000137e-05, 5.6971999999998885e-05, 5.707000000000281e-05, 5.7221999999999135e-05, 5.6985999999998455e-05, 5.694499999999922e-05, 5.695899999999879e-05, 5.691700000000008e-05, 5.743100000000015e-05, 5.694499999999922e-05, 5.738899999999797e-05, 5.686200000000127e-05, 5.7415999999997636e-05, 5.736099999999883e-05, 5.684699999999876e-05, 5.7193999999999995e-05, 5.7457999999999815e-05, 5.6930000000000175e-05, 5.758299999999994e-05, 5.7208000000003034e-05, 5.740299999999754e-05, 5.7513999999998094e-05, 5.733299999999969e-05, 5.687500000000137e-05, 5.6943999999999745e-05, 5.713900000000119e-05, 5.683300000000266e-05, 5.731900000000012e-05, 5.715300000000076e-05, 5.7263999999997844e-05, 5.6971999999998885e-05, 5.709799999999848e-05, 5.7514000000001564e-05, 5.759699999999951e-05, 5.6805999999999524e-05, 5.683400000000213e-05, 5.747299999999886e-05]</msg>
<status status="PASS" starttime="20201029 12:46:36.097" endtime="20201029 12:46:36.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.093" endtime="20201029 12:46:36.100"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:36.104" endtime="20201029 12:46:36.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.102" endtime="20201029 12:46:36.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.101" endtime="20201029 12:46:36.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.744" endtime="20201029 12:46:36.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.743" endtime="20201029 12:46:36.124"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.133" endtime="20201029 12:46:36.149"></status>
</kw>
<msg timestamp="20201029 12:46:36.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:36.131" endtime="20201029 12:46:36.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:36.151" endtime="20201029 12:46:36.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.153" endtime="20201029 12:46:36.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.129" endtime="20201029 12:46:36.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.127" endtime="20201029 12:46:36.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.162" endtime="20201029 12:46:36.447"></status>
</kw>
<msg timestamp="20201029 12:46:36.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021610417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021668472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:36.161" endtime="20201029 12:46:36.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021610417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021668472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:36.451" endtime="20201029 12:46:36.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.459" endtime="20201029 12:46:36.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.158" endtime="20201029 12:46:36.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.157" endtime="20201029 12:46:36.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:36.466" level="INFO">${RESULT} = [{'diff': 5.80550000000013e-05}, {'diff': 5.8570000000000844e-05}, {'diff': 5.8485999999999955e-05}, {'diff': 5.8320000000000594e-05}, {'diff': 5.838899999999897e-05}, {'diff': 5.8083999999999913e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:36.463" endtime="20201029 12:46:36.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:36.470" level="INFO">${ACCURACY} = {'diff': [5.80550000000013e-05, 5.8570000000000844e-05, 5.8485999999999955e-05, 5.8320000000000594e-05, 5.838899999999897e-05, 5.8083999999999913e-05, 5.7916000000001605e-05, 5.865299999999879e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:46:36.467" endtime="20201029 12:46:36.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.474" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 12:46:36.473" endtime="20201029 12:46:36.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.477" level="INFO">VALUE: [5.80550000000013e-05, 5.8570000000000844e-05, 5.8485999999999955e-05, 5.8320000000000594e-05, 5.838899999999897e-05, 5.8083999999999913e-05, 5.7916000000001605e-05, 5.865299999999879e-05, 5.820900000000004e-05, 5.801299999999912e-05, 5.804100000000173e-05, 5.8235999999999705e-05, 5.836099999999983e-05, 5.8014000000002064e-05, 5.830499999999808e-05, 5.838900000000244e-05, 5.7929999999997706e-05, 5.838899999999897e-05, 5.8180000000001425e-05, 5.806900000000087e-05, 5.8472000000000385e-05, 5.8013999999998594e-05, 5.78749999999989e-05, 5.8250000000002744e-05, 5.8485999999999955e-05, 5.836099999999983e-05, 5.78749999999989e-05, 5.858300000000094e-05, 5.808400000000338e-05, 5.8083999999999913e-05, 5.8000000000002494e-05, 5.8485999999999955e-05, 5.8513999999999095e-05, 5.8665999999998886e-05, 5.783300000000019e-05, 5.809700000000001e-05, 5.8277999999998414e-05, 5.843099999999768e-05, 5.7971999999999885e-05, 5.836099999999983e-05, 5.8249999999999275e-05, 5.7944000000000745e-05, 5.8180000000001425e-05, 5.8027999999998164e-05, 5.859700000000051e-05, 5.783299999999672e-05, 5.806900000000087e-05, 5.793100000000065e-05, 5.8249999999999275e-05, 5.833300000000069e-05]</msg>
<status status="PASS" starttime="20201029 12:46:36.476" endtime="20201029 12:46:36.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.471" endtime="20201029 12:46:36.478"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:36.482" endtime="20201029 12:46:36.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.480" endtime="20201029 12:46:36.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.479" endtime="20201029 12:46:36.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.125" endtime="20201029 12:46:36.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.125" endtime="20201029 12:46:36.502"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.511" endtime="20201029 12:46:36.531"></status>
</kw>
<msg timestamp="20201029 12:46:36.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:36.510" endtime="20201029 12:46:36.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:36.533" endtime="20201029 12:46:36.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.535" endtime="20201029 12:46:36.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.507" endtime="20201029 12:46:36.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.505" endtime="20201029 12:46:36.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.544" endtime="20201029 12:46:36.830"></status>
</kw>
<msg timestamp="20201029 12:46:36.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024932819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024991889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:36.543" endtime="20201029 12:46:36.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024932819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024991889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:36.834" endtime="20201029 12:46:36.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.842" endtime="20201029 12:46:36.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.540" endtime="20201029 12:46:36.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.539" endtime="20201029 12:46:36.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:36.849" level="INFO">${RESULT} = [{'diff': 5.9070000000001344e-05}, {'diff': 5.8986000000000455e-05}, {'diff': 5.9527999999999665e-05}, {'diff': 5.9098000000000483e-05}, {'diff': 5.913899999999972e-05}, {'diff': 5.9584000000001414e-0...</msg>
<status status="PASS" starttime="20201029 12:46:36.845" endtime="20201029 12:46:36.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:36.853" level="INFO">${ACCURACY} = {'diff': [5.9070000000001344e-05, 5.8986000000000455e-05, 5.9527999999999665e-05, 5.9098000000000483e-05, 5.913899999999972e-05, 5.9584000000001414e-05, 5.9320000000001594e-05, 5.922300000000061e-05, ...</msg>
<status status="PASS" starttime="20201029 12:46:36.850" endtime="20201029 12:46:36.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.857" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 12:46:36.856" endtime="20201029 12:46:36.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.860" level="INFO">VALUE: [5.9070000000001344e-05, 5.8986000000000455e-05, 5.9527999999999665e-05, 5.9098000000000483e-05, 5.913899999999972e-05, 5.9584000000001414e-05, 5.9320000000001594e-05, 5.922300000000061e-05, 5.8901999999999566e-05, 5.9362000000000303e-05, 5.961099999999761e-05, 5.9193999999998526e-05, 5.933299999999822e-05, 5.9013999999999595e-05, 5.9514000000000095e-05, 5.9527999999999665e-05, 5.883300000000119e-05, 5.9277999999999414e-05, 5.963900000000022e-05, 5.9000000000000025e-05, 5.9013999999999595e-05, 5.940299999999954e-05, 5.8764000000002814e-05, 5.9222000000001135e-05, 5.9486000000000955e-05, 5.9527999999999665e-05, 5.88749999999999e-05, 5.884700000000076e-05, 5.9541999999999234e-05, 5.9013999999999595e-05, 5.895900000000079e-05, 5.9485999999997485e-05, 5.9542000000002704e-05, 5.9334000000001164e-05, 5.9263999999999845e-05, 5.886100000000033e-05, 5.922300000000061e-05, 5.912500000000015e-05, 5.9028000000002634e-05, 5.95550000000028e-05, 5.8972000000000885e-05, 5.929099999999951e-05, 5.884700000000076e-05, 5.9665999999999886e-05, 5.937499999999693e-05, 5.9415999999999636e-05, 5.888899999999947e-05, 5.945900000000129e-05, 5.88749999999999e-05, 5.9013999999999595e-05]</msg>
<status status="PASS" starttime="20201029 12:46:36.858" endtime="20201029 12:46:36.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.854" endtime="20201029 12:46:36.862"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:36.865" endtime="20201029 12:46:36.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.864" endtime="20201029 12:46:36.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.863" endtime="20201029 12:46:36.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.503" endtime="20201029 12:46:36.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.503" endtime="20201029 12:46:36.886"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.895" endtime="20201029 12:46:36.911"></status>
</kw>
<msg timestamp="20201029 12:46:36.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:36.893" endtime="20201029 12:46:36.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:36.912" endtime="20201029 12:46:36.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.915" endtime="20201029 12:46:36.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.891" endtime="20201029 12:46:36.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.888" endtime="20201029 12:46:36.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.924" endtime="20201029 12:46:37.209"></status>
</kw>
<msg timestamp="20201029 12:46:37.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021534778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021595014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:36.922" endtime="20201029 12:46:37.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021534778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021595014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.213" endtime="20201029 12:46:37.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.221" endtime="20201029 12:46:37.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.920" endtime="20201029 12:46:37.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.918" endtime="20201029 12:46:37.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:37.228" level="INFO">${RESULT} = [{'diff': 6.0235999999998235e-05}, {'diff': 6.040300000000054e-05}, {'diff': 6.0221999999998665e-05}, {'diff': 6.031899999999965e-05}, {'diff': 6.027699999999747e-05}, {'diff': 6.0514000000001095e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:37.225" endtime="20201029 12:46:37.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:37.233" level="INFO">${ACCURACY} = {'diff': [6.0235999999998235e-05, 6.040300000000054e-05, 6.0221999999998665e-05, 6.031899999999965e-05, 6.027699999999747e-05, 6.0514000000001095e-05, 5.983300000000219e-05, 6.0028000000000165e-05, 6....</msg>
<status status="PASS" starttime="20201029 12:46:37.229" endtime="20201029 12:46:37.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.237" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 12:46:37.236" endtime="20201029 12:46:37.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.240" level="INFO">VALUE: [6.0235999999998235e-05, 6.040300000000054e-05, 6.0221999999998665e-05, 6.031899999999965e-05, 6.027699999999747e-05, 6.0514000000001095e-05, 5.983300000000219e-05, 6.0028000000000165e-05, 6.0500000000001525e-05, 5.9777999999999915e-05, 6.038900000000097e-05, 6.038900000000097e-05, 6.038900000000097e-05, 6.016699999999986e-05, 6.0264000000000845e-05, 6.0305999999999554e-05, 6.0514000000001095e-05, 6.0319999999999124e-05, 6.0208000000002565e-05, 6.0291999999999984e-05, 5.9764000000000345e-05, 6.0721999999999166e-05, 5.9777999999999915e-05, 6.0334000000002164e-05, 6.013899999999725e-05, 6.0320000000002594e-05, 6.0291999999999984e-05, 5.9764000000000345e-05, 6.0707999999999596e-05, 6.038900000000097e-05, 6.0193999999999526e-05, 5.983300000000219e-05, 6.058300000000294e-05, 6.033299999999922e-05, 5.990300000000004e-05, 6.008300000000244e-05, 6.055500000000033e-05, 5.9708000000002065e-05, 6.012500000000115e-05, 6.0208000000002565e-05, 6.0014000000000595e-05, 6.043099999999968e-05, 6.0264000000000845e-05, 5.993100000000265e-05, 6.045900000000229e-05, 6.0471999999998916e-05, 6.059699999999904e-05, 5.9972000000001885e-05, 6.0264000000000845e-05, 5.990300000000004e-05]</msg>
<status status="PASS" starttime="20201029 12:46:37.238" endtime="20201029 12:46:37.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.234" endtime="20201029 12:46:37.241"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:37.245" endtime="20201029 12:46:37.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.243" endtime="20201029 12:46:37.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.242" endtime="20201029 12:46:37.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.887" endtime="20201029 12:46:37.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.886" endtime="20201029 12:46:37.265"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.274" endtime="20201029 12:46:37.291"></status>
</kw>
<msg timestamp="20201029 12:46:37.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.273" endtime="20201029 12:46:37.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.293" endtime="20201029 12:46:37.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.295" endtime="20201029 12:46:37.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.270" endtime="20201029 12:46:37.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.268" endtime="20201029 12:46:37.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.304" endtime="20201029 12:46:37.590"></status>
</kw>
<msg timestamp="20201029 12:46:37.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021856111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021917903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.303" endtime="20201029 12:46:37.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021856111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021917903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.594" endtime="20201029 12:46:37.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.602" endtime="20201029 12:46:37.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.300" endtime="20201029 12:46:37.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.298" endtime="20201029 12:46:37.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:37.609" level="INFO">${RESULT} = [{'diff': 6.179199999999802e-05}, {'diff': 6.154099999999829e-05}, {'diff': 6.080500000000058e-05}, {'diff': 6.079100000000101e-05}, {'diff': 6.154099999999829e-05}, {'diff': 6.159700000000004e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:37.606" endtime="20201029 12:46:37.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:37.613" level="INFO">${ACCURACY} = {'diff': [6.179199999999802e-05, 6.154099999999829e-05, 6.080500000000058e-05, 6.079100000000101e-05, 6.154099999999829e-05, 6.159700000000004e-05, 6.13889999999985e-05, 6.105500000000083e-05, 6.09450...</msg>
<status status="PASS" starttime="20201029 12:46:37.610" endtime="20201029 12:46:37.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.618" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 12:46:37.617" endtime="20201029 12:46:37.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.620" level="INFO">VALUE: [6.179199999999802e-05, 6.154099999999829e-05, 6.080500000000058e-05, 6.079100000000101e-05, 6.154099999999829e-05, 6.159700000000004e-05, 6.13889999999985e-05, 6.105500000000083e-05, 6.094500000000322e-05, 6.086099999999886e-05, 6.13750000000024e-05, 6.0999999999998555e-05, 6.111200000000205e-05, 6.0764000000001345e-05, 6.149999999999906e-05, 6.0888999999998e-05, 6.115299999999782e-05, 6.122199999999967e-05, 6.120899999999957e-05, 6.166699999999789e-05, 6.0792000000000485e-05, 6.076300000000187e-05, 6.147300000000286e-05, 6.127699999999847e-05, 6.079100000000101e-05, 6.101300000000212e-05, 6.086099999999886e-05, 6.119400000000053e-05, 6.113900000000172e-05, 6.0930000000000706e-05, 6.0985999999998985e-05, 6.149999999999906e-05, 6.15690000000009e-05, 6.109699999999954e-05, 6.151399999999863e-05, 6.122199999999967e-05, 6.165300000000179e-05, 6.0749999999998305e-05, 6.091700000000061e-05, 6.0999999999998555e-05, 6.161099999999961e-05, 6.15699999999969e-05, 6.105500000000083e-05, 6.0792000000000485e-05, 6.091699999999714e-05, 6.13339999999997e-05, 6.0999999999998555e-05, 6.08750000000019e-05, 6.145800000000035e-05, 6.115299999999782e-05]</msg>
<status status="PASS" starttime="20201029 12:46:37.619" endtime="20201029 12:46:37.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.614" endtime="20201029 12:46:37.621"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:37.625" endtime="20201029 12:46:37.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.624" endtime="20201029 12:46:37.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.622" endtime="20201029 12:46:37.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.266" endtime="20201029 12:46:37.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.266" endtime="20201029 12:46:37.646"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.654" endtime="20201029 12:46:37.672"></status>
</kw>
<msg timestamp="20201029 12:46:37.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.653" endtime="20201029 12:46:37.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.673" endtime="20201029 12:46:37.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.676" endtime="20201029 12:46:37.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.650" endtime="20201029 12:46:37.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.648" endtime="20201029 12:46:37.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.685" endtime="20201029 12:46:37.970"></status>
</kw>
<msg timestamp="20201029 12:46:37.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022318417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022381222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.683" endtime="20201029 12:46:37.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022318417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022381222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.975" endtime="20201029 12:46:37.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.983" endtime="20201029 12:46:37.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.681" endtime="20201029 12:46:37.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.679" endtime="20201029 12:46:37.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:37.989" level="INFO">${RESULT} = [{'diff': 6.280499999999911e-05}, {'diff': 6.254199999999877e-05}, {'diff': 6.198599999999999e-05}, {'diff': 6.211100000000011e-05}, {'diff': 6.227799999999895e-05}, {'diff': 6.25279999999992e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:37.986" endtime="20201029 12:46:37.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:37.994" level="INFO">${ACCURACY} = {'diff': [6.280499999999911e-05, 6.254199999999877e-05, 6.198599999999999e-05, 6.211100000000011e-05, 6.227799999999895e-05, 6.25279999999992e-05, 6.241700000000211e-05, 6.219400000000153e-05, 6.19999...</msg>
<status status="PASS" starttime="20201029 12:46:37.990" endtime="20201029 12:46:37.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.998" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 12:46:37.997" endtime="20201029 12:46:37.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.000" level="INFO">VALUE: [6.280499999999911e-05, 6.254199999999877e-05, 6.198599999999999e-05, 6.211100000000011e-05, 6.227799999999895e-05, 6.25279999999992e-05, 6.241700000000211e-05, 6.219400000000153e-05, 6.199999999999956e-05, 6.20829999999975e-05, 6.198599999999999e-05, 6.190299999999857e-05, 6.215299999999882e-05, 6.2582999999998e-05, 6.247200000000092e-05, 6.215299999999882e-05, 6.230499999999861e-05, 6.204199999999827e-05, 6.191699999999814e-05, 6.173599999999974e-05, 6.255599999999834e-05, 6.236100000000036e-05, 6.179199999999802e-05, 6.226400000000284e-05, 6.268099999999846e-05, 6.195900000000032e-05, 6.251399999999963e-05, 6.219499999999753e-05, 6.227799999999895e-05, 6.193099999999771e-05, 6.2195000000001e-05, 6.223699999999971e-05, 6.20140000000026e-05, 6.180499999999811e-05, 6.229099999999904e-05, 6.212499999999968e-05, 6.183300000000072e-05, 6.27080000000016e-05, 6.276399999999988e-05, 6.176399999999888e-05, 6.265299999999932e-05, 6.248600000000049e-05, 6.233300000000122e-05, 6.24439999999983e-05, 6.2582999999998e-05, 6.236100000000036e-05, 6.179199999999802e-05, 6.237499999999993e-05, 6.201399999999913e-05, 6.207000000000087e-05]</msg>
<status status="PASS" starttime="20201029 12:46:37.999" endtime="20201029 12:46:38.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.994" endtime="20201029 12:46:38.003"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:38.006" endtime="20201029 12:46:38.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.005" endtime="20201029 12:46:38.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.004" endtime="20201029 12:46:38.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.646" endtime="20201029 12:46:38.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.646" endtime="20201029 12:46:38.027"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.035" endtime="20201029 12:46:38.053"></status>
</kw>
<msg timestamp="20201029 12:46:38.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.034" endtime="20201029 12:46:38.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.054" endtime="20201029 12:46:38.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.057" endtime="20201029 12:46:38.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.031" endtime="20201029 12:46:38.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.029" endtime="20201029 12:46:38.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.066" endtime="20201029 12:46:38.351"></status>
</kw>
<msg timestamp="20201029 12:46:38.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021401778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0214655, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:38.064" endtime="20201029 12:46:38.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021401778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0214655, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:38.356" endtime="20201029 12:46:38.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.366" endtime="20201029 12:46:38.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.062" endtime="20201029 12:46:38.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.060" endtime="20201029 12:46:38.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:38.373" level="INFO">${RESULT} = [{'diff': 6.37219999999987e-05}, {'diff': 6.280499999999911e-05}, {'diff': 6.331999999999866e-05}, {'diff': 6.348599999999802e-05}, {'diff': 6.320799999999863e-05}, {'diff': 6.366600000000042e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:38.370" endtime="20201029 12:46:38.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:38.378" level="INFO">${ACCURACY} = {'diff': [6.37219999999987e-05, 6.280499999999911e-05, 6.331999999999866e-05, 6.348599999999802e-05, 6.320799999999863e-05, 6.366600000000042e-05, 6.308300000000197e-05, 6.298599999999752e-05, 6.28190...</msg>
<status status="PASS" starttime="20201029 12:46:38.374" endtime="20201029 12:46:38.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.383" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 12:46:38.381" endtime="20201029 12:46:38.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.385" level="INFO">VALUE: [6.37219999999987e-05, 6.280499999999911e-05, 6.331999999999866e-05, 6.348599999999802e-05, 6.320799999999863e-05, 6.366600000000042e-05, 6.308300000000197e-05, 6.298599999999752e-05, 6.281900000000215e-05, 6.363899999999728e-05, 6.298600000000099e-05, 6.30279999999997e-05, 6.344400000000278e-05, 6.337500000000093e-05, 6.348600000000149e-05, 6.362499999999771e-05, 6.340300000000007e-05, 6.341699999999964e-05, 6.362499999999771e-05, 6.341699999999964e-05, 6.304199999999927e-05, 6.291699999999914e-05, 6.361100000000161e-05, 6.341699999999964e-05, 6.30279999999997e-05, 6.336100000000136e-05, 6.294500000000175e-05, 6.280600000000205e-05, 6.317999999999949e-05, 6.334699999999832e-05, 6.322200000000167e-05, 6.312499999999721e-05, 6.352699999999725e-05, 6.293099999999871e-05, 6.300000000000056e-05, 6.30829999999985e-05, 6.35699999999989e-05, 6.356899999999943e-05, 6.30279999999997e-05, 6.297200000000142e-05, 6.290299999999957e-05, 6.3582999999999e-05, 6.304199999999927e-05, 6.351400000000063e-05, 6.312500000000068e-05, 6.345900000000182e-05, 6.343099999999921e-05, 6.284800000000076e-05, 6.340300000000007e-05, 6.355599999999934e-05]</msg>
<status status="PASS" starttime="20201029 12:46:38.384" endtime="20201029 12:46:38.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.379" endtime="20201029 12:46:38.386"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:38.390" endtime="20201029 12:46:38.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.388" endtime="20201029 12:46:38.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.387" endtime="20201029 12:46:38.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.028" endtime="20201029 12:46:38.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.027" endtime="20201029 12:46:38.411"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.419" endtime="20201029 12:46:38.436"></status>
</kw>
<msg timestamp="20201029 12:46:38.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.418" endtime="20201029 12:46:38.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.437" endtime="20201029 12:46:38.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.440" endtime="20201029 12:46:38.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.415" endtime="20201029 12:46:38.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.413" endtime="20201029 12:46:38.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.449" endtime="20201029 12:46:38.736"></status>
</kw>
<msg timestamp="20201029 12:46:38.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021634806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021698806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:38.447" endtime="20201029 12:46:38.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021634806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021698806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:38.740" endtime="20201029 12:46:38.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.749" endtime="20201029 12:46:38.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.445" endtime="20201029 12:46:38.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.443" endtime="20201029 12:46:38.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:38.755" level="INFO">${RESULT} = [{'diff': 6.400000000000156e-05}, {'diff': 6.380500000000011e-05}, {'diff': 6.380499999999664e-05}, {'diff': 6.381899999999968e-05}, {'diff': 6.3889000000001e-05}, {'diff': 6.463899999999828e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:38.752" endtime="20201029 12:46:38.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:38.759" level="INFO">${ACCURACY} = {'diff': [6.400000000000156e-05, 6.380500000000011e-05, 6.380499999999664e-05, 6.381899999999968e-05, 6.3889000000001e-05, 6.463899999999828e-05, 6.434699999999932e-05, 6.465299999999785e-05, 6.461100...</msg>
<status status="PASS" starttime="20201029 12:46:38.756" endtime="20201029 12:46:38.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.764" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 12:46:38.763" endtime="20201029 12:46:38.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.766" level="INFO">VALUE: [6.400000000000156e-05, 6.380500000000011e-05, 6.380499999999664e-05, 6.381899999999968e-05, 6.3889000000001e-05, 6.463899999999828e-05, 6.434699999999932e-05, 6.465299999999785e-05, 6.461100000000261e-05, 6.470800000000013e-05, 6.413900000000125e-05, 6.44440000000003e-05, 6.43890000000015e-05, 6.444499999999978e-05, 6.466700000000089e-05, 6.451400000000163e-05, 6.398600000000199e-05, 6.455599999999687e-05, 6.434699999999932e-05, 6.443000000000074e-05, 6.415199999999788e-05, 6.418000000000049e-05, 6.454100000000129e-05, 6.436100000000236e-05, 6.398599999999852e-05, 6.411099999999864e-05, 6.409699999999907e-05, 6.405500000000036e-05, 6.448599999999902e-05, 6.416700000000039e-05, 6.443000000000074e-05, 6.379200000000002e-05, 6.44440000000003e-05, 6.419499999999953e-05, 6.391700000000014e-05, 6.404200000000027e-05, 6.47219999999997e-05, 6.441700000000064e-05, 6.399999999999809e-05, 6.40280000000007e-05, 6.379200000000002e-05, 6.383299999999925e-05, 6.452700000000172e-05, 6.40280000000007e-05, 6.381999999999916e-05, 6.454099999999782e-05, 6.449999999999859e-05, 6.449999999999859e-05, 6.47500000000023e-05, 6.405500000000036e-05]</msg>
<status status="PASS" starttime="20201029 12:46:38.765" endtime="20201029 12:46:38.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.760" endtime="20201029 12:46:38.768"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:38.771" endtime="20201029 12:46:38.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.770" endtime="20201029 12:46:38.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.769" endtime="20201029 12:46:38.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.412" endtime="20201029 12:46:38.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.411" endtime="20201029 12:46:38.792"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.800" endtime="20201029 12:46:38.819"></status>
</kw>
<msg timestamp="20201029 12:46:38.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.799" endtime="20201029 12:46:38.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.820" endtime="20201029 12:46:38.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.823" endtime="20201029 12:46:38.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.796" endtime="20201029 12:46:38.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.794" endtime="20201029 12:46:38.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.832" endtime="20201029 12:46:39.118"></status>
</kw>
<msg timestamp="20201029 12:46:39.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022571583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:38.831" endtime="20201029 12:46:39.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022571583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.122" endtime="20201029 12:46:39.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.130" endtime="20201029 12:46:39.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.828" endtime="20201029 12:46:39.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.826" endtime="20201029 12:46:39.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:39.137" level="INFO">${RESULT} = [{'diff': 6.520800000000063e-05}, {'diff': 6.50419999999978e-05}, {'diff': 6.527800000000195e-05}, {'diff': 6.50700000000004e-05}, {'diff': 6.482000000000016e-05}, {'diff': 6.538799999999956e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:39.134" endtime="20201029 12:46:39.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:39.141" level="INFO">${ACCURACY} = {'diff': [6.520800000000063e-05, 6.50419999999978e-05, 6.527800000000195e-05, 6.50700000000004e-05, 6.482000000000016e-05, 6.538799999999956e-05, 6.49159999999982e-05, 6.498600000000299e-05, 6.5041999...</msg>
<status status="PASS" starttime="20201029 12:46:39.138" endtime="20201029 12:46:39.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.145" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 12:46:39.144" endtime="20201029 12:46:39.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.148" level="INFO">VALUE: [6.520800000000063e-05, 6.50419999999978e-05, 6.527800000000195e-05, 6.50700000000004e-05, 6.482000000000016e-05, 6.538799999999956e-05, 6.49159999999982e-05, 6.498600000000299e-05, 6.50419999999978e-05, 6.482000000000016e-05, 6.487499999999896e-05, 6.498599999999952e-05, 6.481899999999721e-05, 6.524999999999934e-05, 6.523599999999977e-05, 6.502699999999875e-05, 6.476400000000188e-05, 6.512499999999921e-05, 6.479100000000154e-05, 6.480499999999764e-05, 6.509700000000007e-05, 6.480500000000111e-05, 6.530499999999814e-05, 6.504200000000127e-05, 6.48340000000032e-05, 6.486099999999939e-05, 6.502799999999823e-05, 6.54029999999986e-05, 6.486099999999939e-05, 6.509700000000007e-05, 6.543100000000121e-05, 6.55280000000022e-05, 6.494500000000028e-05, 6.479199999999755e-05, 6.55419999999983e-05, 6.47219999999997e-05, 6.501400000000213e-05, 6.504100000000179e-05, 6.566599999999895e-05, 6.497199999999995e-05, 6.512499999999921e-05, 6.487499999999896e-05, 6.493100000000071e-05, 6.50830000000005e-05, 6.493100000000071e-05, 6.479199999999755e-05, 6.530600000000109e-05, 6.523599999999977e-05, 6.529199999999805e-05, 6.501399999999866e-05]</msg>
<status status="PASS" starttime="20201029 12:46:39.147" endtime="20201029 12:46:39.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.142" endtime="20201029 12:46:39.150"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:39.154" endtime="20201029 12:46:39.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.152" endtime="20201029 12:46:39.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.151" endtime="20201029 12:46:39.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.793" endtime="20201029 12:46:39.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.792" endtime="20201029 12:46:39.174"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.183" endtime="20201029 12:46:39.200"></status>
</kw>
<msg timestamp="20201029 12:46:39.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.182" endtime="20201029 12:46:39.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.201" endtime="20201029 12:46:39.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.204" endtime="20201029 12:46:39.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.179" endtime="20201029 12:46:39.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.177" endtime="20201029 12:46:39.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.213" endtime="20201029 12:46:39.497"></status>
</kw>
<msg timestamp="20201029 12:46:39.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021647417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021713694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.211" endtime="20201029 12:46:39.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021647417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021713694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.502" endtime="20201029 12:46:39.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.510" endtime="20201029 12:46:39.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.209" endtime="20201029 12:46:39.512"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.207" endtime="20201029 12:46:39.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:39.516" level="INFO">${RESULT} = [{'diff': 6.6277e-05}, {'diff': 6.612500000000021e-05}, {'diff': 6.611100000000064e-05}, {'diff': 6.615299999999935e-05}, {'diff': 6.62639999999999e-05}, {'diff': 6.57639999999994e-05}, {'diff': 6.593...</msg>
<status status="PASS" starttime="20201029 12:46:39.513" endtime="20201029 12:46:39.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:39.521" level="INFO">${ACCURACY} = {'diff': [6.6277e-05, 6.612500000000021e-05, 6.611100000000064e-05, 6.615299999999935e-05, 6.62639999999999e-05, 6.57639999999994e-05, 6.593100000000171e-05, 6.587499999999996e-05, 6.574999999999984e-...</msg>
<status status="PASS" starttime="20201029 12:46:39.517" endtime="20201029 12:46:39.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.526" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 12:46:39.525" endtime="20201029 12:46:39.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.528" level="INFO">VALUE: [6.6277e-05, 6.612500000000021e-05, 6.611100000000064e-05, 6.615299999999935e-05, 6.62639999999999e-05, 6.57639999999994e-05, 6.593100000000171e-05, 6.587499999999996e-05, 6.574999999999984e-05, 6.662500000000071e-05, 6.613900000000325e-05, 6.633400000000123e-05, 6.647300000000092e-05, 6.638899999999656e-05, 6.643100000000221e-05, 6.60419999999988e-05, 6.602799999999923e-05, 6.606899999999846e-05, 6.595800000000138e-05, 6.604099999999932e-05, 6.60419999999988e-05, 6.651400000000016e-05, 6.60830000000015e-05, 6.64159999999997e-05, 6.580499999999864e-05, 6.629199999999905e-05, 6.579199999999855e-05, 6.627800000000295e-05, 6.613899999999978e-05, 6.659700000000157e-05, 6.600000000000009e-05, 6.615300000000282e-05, 6.651400000000016e-05, 6.636100000000089e-05, 6.577799999999898e-05, 6.622300000000067e-05, 6.625000000000034e-05, 6.58480000000003e-05, 6.658400000000148e-05, 6.613800000000031e-05, 6.595799999999791e-05, 6.604099999999932e-05, 6.581900000000168e-05, 6.60700000000014e-05, 6.605499999999889e-05, 6.655499999999939e-05, 6.601399999999966e-05, 6.588899999999953e-05, 6.620799999999816e-05, 6.655600000000234e-05]</msg>
<status status="PASS" starttime="20201029 12:46:39.527" endtime="20201029 12:46:39.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.522" endtime="20201029 12:46:39.529"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:39.533" endtime="20201029 12:46:39.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.531" endtime="20201029 12:46:39.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.530" endtime="20201029 12:46:39.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.175" endtime="20201029 12:46:39.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.175" endtime="20201029 12:46:39.554"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.562" endtime="20201029 12:46:39.580"></status>
</kw>
<msg timestamp="20201029 12:46:39.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.561" endtime="20201029 12:46:39.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.582" endtime="20201029 12:46:39.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.584" endtime="20201029 12:46:39.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.558" endtime="20201029 12:46:39.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.556" endtime="20201029 12:46:39.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.593" endtime="20201029 12:46:39.880"></status>
</kw>
<msg timestamp="20201029 12:46:39.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021739444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021807167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.592" endtime="20201029 12:46:39.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021739444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021807167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.884" endtime="20201029 12:46:39.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.892" endtime="20201029 12:46:39.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.589" endtime="20201029 12:46:39.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.587" endtime="20201029 12:46:39.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:39.899" level="INFO">${RESULT} = [{'diff': 6.77229999999987e-05}, {'diff': 6.752800000000073e-05}, {'diff': 6.743000000000027e-05}, {'diff': 6.736100000000189e-05}, {'diff': 6.684700000000182e-05}, {'diff': 6.702800000000023e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:39.896" endtime="20201029 12:46:39.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:39.903" level="INFO">${ACCURACY} = {'diff': [6.77229999999987e-05, 6.752800000000073e-05, 6.743000000000027e-05, 6.736100000000189e-05, 6.684700000000182e-05, 6.702800000000023e-05, 6.750000000000159e-05, 6.733300000000275e-05, 6.74590...</msg>
<status status="PASS" starttime="20201029 12:46:39.900" endtime="20201029 12:46:39.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.907" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 12:46:39.906" endtime="20201029 12:46:39.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.910" level="INFO">VALUE: [6.77229999999987e-05, 6.752800000000073e-05, 6.743000000000027e-05, 6.736100000000189e-05, 6.684700000000182e-05, 6.702800000000023e-05, 6.750000000000159e-05, 6.733300000000275e-05, 6.745900000000235e-05, 6.705600000000284e-05, 6.693100000000271e-05, 6.677799999999998e-05, 6.762500000000171e-05, 6.694399999999934e-05, 6.708400000000198e-05, 6.683400000000173e-05, 6.70830000000025e-05, 6.733400000000223e-05, 6.693100000000271e-05, 6.740200000000113e-05, 6.765199999999791e-05, 6.705499999999989e-05, 6.688900000000053e-05, 6.734700000000232e-05, 6.684700000000182e-05, 6.702800000000023e-05, 6.736099999999842e-05, 6.705499999999989e-05, 6.695800000000238e-05, 6.73480000000018e-05, 6.744400000000331e-05, 6.762500000000171e-05, 6.744500000000278e-05, 6.752800000000073e-05, 6.708400000000198e-05, 6.737500000000146e-05, 6.683400000000173e-05, 6.755599999999987e-05, 6.679199999999955e-05, 6.75700000000029e-05, 6.695900000000185e-05, 6.704100000000032e-05, 6.726299999999796e-05, 6.72640000000009e-05, 6.705499999999989e-05, 6.720799999999916e-05, 6.670800000000213e-05, 6.752800000000073e-05, 6.70969999999986e-05, 6.712500000000121e-05]</msg>
<status status="PASS" starttime="20201029 12:46:39.908" endtime="20201029 12:46:39.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.904" endtime="20201029 12:46:39.911"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:39.915" endtime="20201029 12:46:39.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.913" endtime="20201029 12:46:39.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.912" endtime="20201029 12:46:39.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.554" endtime="20201029 12:46:39.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.554" endtime="20201029 12:46:39.935"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.944" endtime="20201029 12:46:39.964"></status>
</kw>
<msg timestamp="20201029 12:46:39.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.942" endtime="20201029 12:46:39.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.965" endtime="20201029 12:46:39.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.968" endtime="20201029 12:46:39.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.940" endtime="20201029 12:46:39.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.938" endtime="20201029 12:46:39.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.977" endtime="20201029 12:46:40.262"></status>
</kw>
<msg timestamp="20201029 12:46:40.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024770819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024839486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.975" endtime="20201029 12:46:40.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024770819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024839486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:40.266" endtime="20201029 12:46:40.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.275" endtime="20201029 12:46:40.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.973" endtime="20201029 12:46:40.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.971" endtime="20201029 12:46:40.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:40.281" level="INFO">${RESULT} = [{'diff': 6.866700000000142e-05}, {'diff': 6.80420000000008e-05}, {'diff': 6.823700000000224e-05}, {'diff': 6.797299999999895e-05}, {'diff': 6.786099999999892e-05}, {'diff': 6.829100000000157e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:40.278" endtime="20201029 12:46:40.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:40.285" level="INFO">${ACCURACY} = {'diff': [6.866700000000142e-05, 6.80420000000008e-05, 6.823700000000224e-05, 6.797299999999895e-05, 6.786099999999892e-05, 6.829100000000157e-05, 6.779200000000055e-05, 6.870900000000013e-05, 6.82920...</msg>
<status status="PASS" starttime="20201029 12:46:40.282" endtime="20201029 12:46:40.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.290" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 12:46:40.289" endtime="20201029 12:46:40.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.292" level="INFO">VALUE: [6.866700000000142e-05, 6.80420000000008e-05, 6.823700000000224e-05, 6.797299999999895e-05, 6.786099999999892e-05, 6.829100000000157e-05, 6.779200000000055e-05, 6.870900000000013e-05, 6.829200000000105e-05, 6.805600000000037e-05, 6.838899999999856e-05, 6.799999999999862e-05, 6.862500000000271e-05, 6.784699999999935e-05, 6.801399999999819e-05, 6.838900000000203e-05, 6.823699999999877e-05, 6.816699999999745e-05, 6.793100000000024e-05, 6.822199999999973e-05, 6.804199999999733e-05, 6.844500000000031e-05, 6.82359999999993e-05, 6.79030000000011e-05, 6.857000000000044e-05, 6.783399999999926e-05, 6.829200000000105e-05, 6.77909999999976e-05, 6.793000000000077e-05, 6.794400000000034e-05, 6.80969999999996e-05, 6.797199999999948e-05, 6.830500000000114e-05, 6.780500000000064e-05, 6.848599999999955e-05, 6.827800000000148e-05, 6.85970000000001e-05, 6.855499999999792e-05, 6.851399999999869e-05, 6.806999999999994e-05, 6.823600000000277e-05, 6.801399999999819e-05, 6.793100000000024e-05, 6.848699999999902e-05, 6.788900000000153e-05, 6.780600000000012e-05, 6.852800000000173e-05, 6.8277000000002e-05, 6.788900000000153e-05, 6.809799999999908e-05]</msg>
<status status="PASS" starttime="20201029 12:46:40.291" endtime="20201029 12:46:40.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.286" endtime="20201029 12:46:40.294"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:40.298" endtime="20201029 12:46:40.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.296" endtime="20201029 12:46:40.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.295" endtime="20201029 12:46:40.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.936" endtime="20201029 12:46:40.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.936" endtime="20201029 12:46:40.318"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.327" endtime="20201029 12:46:40.345"></status>
</kw>
<msg timestamp="20201029 12:46:40.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.325" endtime="20201029 12:46:40.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.346" endtime="20201029 12:46:40.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.349" endtime="20201029 12:46:40.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.323" endtime="20201029 12:46:40.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.321" endtime="20201029 12:46:40.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.358" endtime="20201029 12:46:40.643"></status>
</kw>
<msg timestamp="20201029 12:46:40.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021589111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021658694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:40.356" endtime="20201029 12:46:40.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021589111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021658694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:40.648" endtime="20201029 12:46:40.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.656" endtime="20201029 12:46:40.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.354" endtime="20201029 12:46:40.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.352" endtime="20201029 12:46:40.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:40.662" level="INFO">${RESULT} = [{'diff': 6.958299999999806e-05}, {'diff': 6.907000000000094e-05}, {'diff': 6.933300000000128e-05}, {'diff': 6.930599999999815e-05}, {'diff': 6.951399999999969e-05}, {'diff': 6.932000000000119e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:40.659" endtime="20201029 12:46:40.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:40.667" level="INFO">${ACCURACY} = {'diff': [6.958299999999806e-05, 6.907000000000094e-05, 6.933300000000128e-05, 6.930599999999815e-05, 6.951399999999969e-05, 6.932000000000119e-05, 6.915299999999888e-05, 6.895900000000038e-05, 6.9500...</msg>
<status status="PASS" starttime="20201029 12:46:40.663" endtime="20201029 12:46:40.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.672" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 12:46:40.671" endtime="20201029 12:46:40.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.674" level="INFO">VALUE: [6.958299999999806e-05, 6.907000000000094e-05, 6.933300000000128e-05, 6.930599999999815e-05, 6.951399999999969e-05, 6.932000000000119e-05, 6.915299999999888e-05, 6.895900000000038e-05, 6.950000000000012e-05, 6.887499999999949e-05, 6.934700000000085e-05, 6.938800000000009e-05, 6.937499999999999e-05, 6.956899999999849e-05, 6.947200000000098e-05, 6.951399999999969e-05, 6.883299999999731e-05, 6.905500000000189e-05, 6.97360000000008e-05, 6.87909999999986e-05, 6.934700000000085e-05, 6.911100000000017e-05, 6.936100000000042e-05, 6.94169999999987e-05, 6.887499999999949e-05, 6.943100000000174e-05, 6.944499999999784e-05, 6.89030000000021e-05, 6.890299999999863e-05, 6.894500000000081e-05, 6.888899999999906e-05, 6.905600000000137e-05, 6.879200000000155e-05, 6.927799999999901e-05, 6.950000000000012e-05, 6.956999999999797e-05, 6.92360000000003e-05, 6.883300000000078e-05, 6.955500000000239e-05, 6.924999999999987e-05, 6.931899999999824e-05, 6.970900000000113e-05, 6.947200000000098e-05, 6.933400000000076e-05, 6.930499999999867e-05, 6.934699999999738e-05, 6.936100000000042e-05, 6.972199999999776e-05, 6.92360000000003e-05, 6.918099999999802e-05]</msg>
<status status="PASS" starttime="20201029 12:46:40.673" endtime="20201029 12:46:40.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.668" endtime="20201029 12:46:40.676"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:40.679" endtime="20201029 12:46:40.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.678" endtime="20201029 12:46:40.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.677" endtime="20201029 12:46:40.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.319" endtime="20201029 12:46:40.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.319" endtime="20201029 12:46:40.700"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.709" endtime="20201029 12:46:40.726"></status>
</kw>
<msg timestamp="20201029 12:46:40.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.707" endtime="20201029 12:46:40.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.728" endtime="20201029 12:46:40.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.730" endtime="20201029 12:46:40.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.704" endtime="20201029 12:46:40.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.702" endtime="20201029 12:46:40.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.739" endtime="20201029 12:46:41.027"></status>
</kw>
<msg timestamp="20201029 12:46:41.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021676236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021746833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:40.738" endtime="20201029 12:46:41.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021676236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021746833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:41.031" endtime="20201029 12:46:41.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.039" endtime="20201029 12:46:41.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.735" endtime="20201029 12:46:41.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.733" endtime="20201029 12:46:41.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:41.046" level="INFO">${RESULT} = [{'diff': 7.059699999999863e-05}, {'diff': 7.02499999999974e-05}, {'diff': 6.988900000000006e-05}, {'diff': 7.038900000000056e-05}, {'diff': 7.058399999999854e-05}, {'diff': 7.043099999999927e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:41.042" endtime="20201029 12:46:41.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:41.050" level="INFO">${ACCURACY} = {'diff': [7.059699999999863e-05, 7.02499999999974e-05, 6.988900000000006e-05, 7.038900000000056e-05, 7.058399999999854e-05, 7.043099999999927e-05, 7.008399999999804e-05, 6.987499999999702e-05, 7.02769...</msg>
<status status="PASS" starttime="20201029 12:46:41.046" endtime="20201029 12:46:41.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.054" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 12:46:41.053" endtime="20201029 12:46:41.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.056" level="INFO">VALUE: [7.059699999999863e-05, 7.02499999999974e-05, 6.988900000000006e-05, 7.038900000000056e-05, 7.058399999999854e-05, 7.043099999999927e-05, 7.008399999999804e-05, 6.987499999999702e-05, 7.027699999999706e-05, 7.07499999999979e-05, 7.022199999999826e-05, 6.994400000000234e-05, 7.006899999999899e-05, 7.005499999999942e-05, 7.04299999999998e-05, 6.981899999999874e-05, 6.993100000000224e-05, 7.04169999999997e-05, 7.029199999999958e-05, 7.02360000000013e-05, 6.99169999999992e-05, 7.012500000000074e-05, 7.013900000000031e-05, 6.980599999999865e-05, 6.988900000000006e-05, 7.043099999999927e-05, 7.047200000000198e-05, 7.011100000000117e-05, 7.041600000000023e-05, 7.015299999999988e-05, 7.05559999999994e-05, 7.022199999999826e-05, 6.999999999999715e-05, 7.020799999999869e-05, 7.062500000000124e-05, 7.020800000000216e-05, 6.995799999999844e-05, 6.991599999999973e-05, 7.068000000000005e-05, 7.01109999999977e-05, 7.020800000000216e-05, 7.005500000000289e-05, 7.043099999999927e-05, 7.018099999999902e-05, 6.994499999999834e-05, 6.988900000000006e-05, 6.987500000000049e-05, 6.981999999999822e-05, 7.025000000000087e-05, 7.047300000000145e-05]</msg>
<status status="PASS" starttime="20201029 12:46:41.055" endtime="20201029 12:46:41.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.050" endtime="20201029 12:46:41.058"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:41.061" endtime="20201029 12:46:41.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.060" endtime="20201029 12:46:41.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.059" endtime="20201029 12:46:41.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.701" endtime="20201029 12:46:41.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.700" endtime="20201029 12:46:41.082"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.091" endtime="20201029 12:46:41.108"></status>
</kw>
<msg timestamp="20201029 12:46:41.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.089" endtime="20201029 12:46:41.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.110" endtime="20201029 12:46:41.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.112" endtime="20201029 12:46:41.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.087" endtime="20201029 12:46:41.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.084" endtime="20201029 12:46:41.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.121" endtime="20201029 12:46:41.407"></status>
</kw>
<msg timestamp="20201029 12:46:41.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022439653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022511292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:41.120" endtime="20201029 12:46:41.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022439653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022511292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:41.411" endtime="20201029 12:46:41.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.419" endtime="20201029 12:46:41.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.117" endtime="20201029 12:46:41.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.115" endtime="20201029 12:46:41.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:41.426" level="INFO">${RESULT} = [{'diff': 7.163899999999834e-05}, {'diff': 7.162500000000224e-05}, {'diff': 7.148599999999908e-05}, {'diff': 7.141699999999723e-05}, {'diff': 7.123599999999883e-05}, {'diff': 7.152800000000126e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:41.423" endtime="20201029 12:46:41.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:41.430" level="INFO">${ACCURACY} = {'diff': [7.163899999999834e-05, 7.162500000000224e-05, 7.148599999999908e-05, 7.141699999999723e-05, 7.123599999999883e-05, 7.152800000000126e-05, 7.108299999999956e-05, 7.133299999999981e-05, 7.1639...</msg>
<status status="PASS" starttime="20201029 12:46:41.427" endtime="20201029 12:46:41.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.434" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 12:46:41.433" endtime="20201029 12:46:41.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.437" level="INFO">VALUE: [7.163899999999834e-05, 7.162500000000224e-05, 7.148599999999908e-05, 7.141699999999723e-05, 7.123599999999883e-05, 7.152800000000126e-05, 7.108299999999956e-05, 7.133299999999981e-05, 7.163900000000181e-05, 7.122199999999926e-05, 7.118100000000002e-05, 7.080599999999965e-05, 7.09170000000002e-05, 7.145899999999941e-05, 7.104200000000033e-05, 7.126399999999797e-05, 7.095899999999891e-05, 7.154200000000083e-05, 7.098599999999858e-05, 7.144400000000037e-05, 7.097200000000248e-05, 7.17499999999989e-05, 7.140300000000113e-05, 7.140300000000113e-05, 7.119499999999959e-05, 7.145799999999994e-05, 7.131900000000024e-05, 7.102800000000076e-05, 7.119499999999959e-05, 7.081899999999974e-05, 7.140299999999766e-05, 7.122200000000273e-05, 7.119500000000306e-05, 7.093099999999977e-05, 7.090300000000063e-05, 7.119499999999959e-05, 7.130600000000015e-05, 7.101400000000119e-05, 7.112500000000174e-05, 7.090299999999716e-05, 7.084699999999888e-05, 7.17499999999989e-05, 7.090200000000116e-05, 7.169400000000062e-05, 7.155499999999745e-05, 7.102799999999729e-05, 7.147199999999951e-05, 7.127800000000101e-05, 7.144400000000037e-05, 7.161100000000267e-05]</msg>
<status status="PASS" starttime="20201029 12:46:41.435" endtime="20201029 12:46:41.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.431" endtime="20201029 12:46:41.439"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:41.443" endtime="20201029 12:46:41.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.441" endtime="20201029 12:46:41.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.440" endtime="20201029 12:46:41.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.083" endtime="20201029 12:46:41.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.082" endtime="20201029 12:46:41.463"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.472" endtime="20201029 12:46:41.490"></status>
</kw>
<msg timestamp="20201029 12:46:41.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.471" endtime="20201029 12:46:41.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.491" endtime="20201029 12:46:41.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.494" endtime="20201029 12:46:41.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.468" endtime="20201029 12:46:41.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.466" endtime="20201029 12:46:41.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.503" endtime="20201029 12:46:41.789"></status>
</kw>
<msg timestamp="20201029 12:46:41.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022047319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022119306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:41.501" endtime="20201029 12:46:41.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022047319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022119306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:41.793" endtime="20201029 12:46:41.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.801" endtime="20201029 12:46:41.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.498" endtime="20201029 12:46:41.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.497" endtime="20201029 12:46:41.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:41.808" level="INFO">${RESULT} = [{'diff': 7.198699999999905e-05}, {'diff': 7.24439999999979e-05}, {'diff': 7.266700000000195e-05}, {'diff': 7.229200000000158e-05}, {'diff': 7.24170000000017e-05}, {'diff': 7.258400000000054e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:41.805" endtime="20201029 12:46:41.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:41.813" level="INFO">${ACCURACY} = {'diff': [7.198699999999905e-05, 7.24439999999979e-05, 7.266700000000195e-05, 7.229200000000158e-05, 7.24170000000017e-05, 7.258400000000054e-05, 7.258300000000106e-05, 7.193100000000077e-05, 7.208400...</msg>
<status status="PASS" starttime="20201029 12:46:41.809" endtime="20201029 12:46:41.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.818" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 12:46:41.816" endtime="20201029 12:46:41.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.820" level="INFO">VALUE: [7.198699999999905e-05, 7.24439999999979e-05, 7.266700000000195e-05, 7.229200000000158e-05, 7.24170000000017e-05, 7.258400000000054e-05, 7.258300000000106e-05, 7.193100000000077e-05, 7.208400000000004e-05, 7.215299999999841e-05, 7.220900000000016e-05, 7.263899999999934e-05, 7.17499999999989e-05, 7.266699999999848e-05, 7.222299999999973e-05, 7.220800000000069e-05, 7.266600000000248e-05, 7.208300000000056e-05, 7.180500000000117e-05, 7.262499999999977e-05, 7.237499999999952e-05, 7.202799999999829e-05, 7.248600000000008e-05, 7.258300000000106e-05, 7.19170000000012e-05, 7.186099999999945e-05, 7.234700000000038e-05, 7.256899999999802e-05, 7.223599999999983e-05, 7.272200000000076e-05, 7.209700000000013e-05, 7.184699999999988e-05, 7.191699999999773e-05, 7.240299999999866e-05, 7.237499999999952e-05, 7.26110000000002e-05, 7.188800000000259e-05, 7.205499999999795e-05, 7.22910000000021e-05, 7.238899999999909e-05, 7.244400000000137e-05, 7.241599999999876e-05, 7.21109999999997e-05, 7.215300000000188e-05, 7.244499999999737e-05, 7.20560000000009e-05, 7.225000000000287e-05, 7.194400000000087e-05, 7.213899999999884e-05, 7.212499999999927e-05]</msg>
<status status="PASS" starttime="20201029 12:46:41.819" endtime="20201029 12:46:41.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.814" endtime="20201029 12:46:41.821"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:41.825" endtime="20201029 12:46:41.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.823" endtime="20201029 12:46:41.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.822" endtime="20201029 12:46:41.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.464" endtime="20201029 12:46:41.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.464" endtime="20201029 12:46:41.845"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.854" endtime="20201029 12:46:41.871"></status>
</kw>
<msg timestamp="20201029 12:46:41.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.852" endtime="20201029 12:46:41.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.872" endtime="20201029 12:46:41.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.875" endtime="20201029 12:46:41.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.850" endtime="20201029 12:46:41.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.848" endtime="20201029 12:46:41.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.884" endtime="20201029 12:46:42.171"></status>
</kw>
<msg timestamp="20201029 12:46:42.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021561556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021634583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:41.882" endtime="20201029 12:46:42.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021561556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021634583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:42.175" endtime="20201029 12:46:42.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.183" endtime="20201029 12:46:42.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.880" endtime="20201029 12:46:42.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.878" endtime="20201029 12:46:42.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:42.190" level="INFO">${RESULT} = [{'diff': 7.302699999999981e-05}, {'diff': 7.347299999999751e-05}, {'diff': 7.300000000000015e-05}, {'diff': 7.305599999999843e-05}, {'diff': 7.323600000000083e-05}, {'diff': 7.284800000000036e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:42.187" endtime="20201029 12:46:42.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:42.194" level="INFO">${ACCURACY} = {'diff': [7.302699999999981e-05, 7.347299999999751e-05, 7.300000000000015e-05, 7.305599999999843e-05, 7.323600000000083e-05, 7.284800000000036e-05, 7.341699999999923e-05, 7.298700000000005e-05, 7.3000...</msg>
<status status="PASS" starttime="20201029 12:46:42.191" endtime="20201029 12:46:42.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.198" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 12:46:42.197" endtime="20201029 12:46:42.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.201" level="INFO">VALUE: [7.302699999999981e-05, 7.347299999999751e-05, 7.300000000000015e-05, 7.305599999999843e-05, 7.323600000000083e-05, 7.284800000000036e-05, 7.341699999999923e-05, 7.298700000000005e-05, 7.300000000000015e-05, 7.297200000000101e-05, 7.337499999999705e-05, 7.295800000000144e-05, 7.340200000000019e-05, 7.315199999999994e-05, 7.32500000000004e-05, 7.283300000000131e-05, 7.31110000000007e-05, 7.34439999999989e-05, 7.36249999999973e-05, 7.32500000000004e-05, 7.322200000000126e-05, 7.36249999999973e-05, 7.281900000000174e-05, 7.338900000000009e-05, 7.361099999999773e-05, 7.277799999999904e-05, 7.330600000000215e-05, 7.286100000000045e-05, 7.322299999999726e-05, 7.341599999999976e-05, 7.358300000000206e-05, 7.3069999999998e-05, 7.316699999999898e-05, 7.301399999999972e-05, 7.290199999999969e-05, 7.351400000000022e-05, 7.297199999999754e-05, 7.305599999999843e-05, 7.283300000000131e-05, 7.288899999999959e-05, 7.359700000000163e-05, 7.341699999999923e-05, 7.358399999999807e-05, 7.287500000000002e-05, 7.331900000000224e-05, 7.329199999999911e-05, 7.286100000000045e-05, 7.372300000000123e-05, 7.32500000000004e-05, 7.347300000000098e-05]</msg>
<status status="PASS" starttime="20201029 12:46:42.200" endtime="20201029 12:46:42.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.195" endtime="20201029 12:46:42.202"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:42.206" endtime="20201029 12:46:42.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.204" endtime="20201029 12:46:42.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.203" endtime="20201029 12:46:42.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.846" endtime="20201029 12:46:42.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.846" endtime="20201029 12:46:42.226"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.235" endtime="20201029 12:46:42.253"></status>
</kw>
<msg timestamp="20201029 12:46:42.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.233" endtime="20201029 12:46:42.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.255" endtime="20201029 12:46:42.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.258" endtime="20201029 12:46:42.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.231" endtime="20201029 12:46:42.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.229" endtime="20201029 12:46:42.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.266" endtime="20201029 12:46:42.552"></status>
</kw>
<msg timestamp="20201029 12:46:42.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0227235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022797708, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:42.265" endtime="20201029 12:46:42.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0227235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022797708, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:42.556" endtime="20201029 12:46:42.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.565" endtime="20201029 12:46:42.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.262" endtime="20201029 12:46:42.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.261" endtime="20201029 12:46:42.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:42.571" level="INFO">${RESULT} = [{'diff': 7.420799999999922e-05}, {'diff': 7.384699999999841e-05}, {'diff': 7.459699999999916e-05}, {'diff': 7.39309999999993e-05}, {'diff': 7.401399999999725e-05}, {'diff': 7.434800000000186e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:42.568" endtime="20201029 12:46:42.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:42.575" level="INFO">${ACCURACY} = {'diff': [7.420799999999922e-05, 7.384699999999841e-05, 7.459699999999916e-05, 7.39309999999993e-05, 7.401399999999725e-05, 7.434800000000186e-05, 7.377800000000004e-05, 7.427799999999707e-05, 7.40549...</msg>
<status status="PASS" starttime="20201029 12:46:42.572" endtime="20201029 12:46:42.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.580" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 12:46:42.579" endtime="20201029 12:46:42.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.582" level="INFO">VALUE: [7.420799999999922e-05, 7.384699999999841e-05, 7.459699999999916e-05, 7.39309999999993e-05, 7.401399999999725e-05, 7.434800000000186e-05, 7.377800000000004e-05, 7.427799999999707e-05, 7.405499999999995e-05, 7.381899999999927e-05, 7.44439999999999e-05, 7.390200000000069e-05, 7.431899999999977e-05, 7.456900000000002e-05, 7.47500000000019e-05, 7.423600000000183e-05, 7.416600000000051e-05, 7.431899999999977e-05, 7.379199999999961e-05, 7.400000000000115e-05, 7.459699999999916e-05, 7.44309999999998e-05, 7.42500000000014e-05, 7.390300000000016e-05, 7.405599999999943e-05, 7.390300000000016e-05, 7.37500000000009e-05, 7.412500000000127e-05, 7.401400000000072e-05, 7.380599999999918e-05, 7.401300000000124e-05, 7.458300000000306e-05, 7.427700000000106e-05, 7.429100000000063e-05, 7.413900000000084e-05, 7.459699999999916e-05, 7.386100000000145e-05, 7.3763999999997e-05, 7.440300000000066e-05, 7.387499999999755e-05, 7.469400000000015e-05, 7.426400000000097e-05, 7.379200000000308e-05, 7.416699999999998e-05, 7.427799999999707e-05, 7.400000000000115e-05, 7.427800000000054e-05, 7.415300000000041e-05, 7.416699999999998e-05, 7.443100000000327e-05]</msg>
<status status="PASS" starttime="20201029 12:46:42.581" endtime="20201029 12:46:42.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.576" endtime="20201029 12:46:42.584"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:42.588" endtime="20201029 12:46:42.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.586" endtime="20201029 12:46:42.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.585" endtime="20201029 12:46:42.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.227" endtime="20201029 12:46:42.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.227" endtime="20201029 12:46:42.609"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.617" endtime="20201029 12:46:42.634"></status>
</kw>
<msg timestamp="20201029 12:46:42.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.616" endtime="20201029 12:46:42.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.636" endtime="20201029 12:46:42.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.638" endtime="20201029 12:46:42.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.613" endtime="20201029 12:46:42.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.611" endtime="20201029 12:46:42.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.647" endtime="20201029 12:46:42.932"></status>
</kw>
<msg timestamp="20201029 12:46:42.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021704958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0217805, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:42.645" endtime="20201029 12:46:42.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021704958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0217805, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:42.937" endtime="20201029 12:46:42.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.945" endtime="20201029 12:46:42.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.643" endtime="20201029 12:46:42.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.641" endtime="20201029 12:46:42.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:42.951" level="INFO">${RESULT} = [{'diff': 7.554200000000136e-05}, {'diff': 7.54029999999982e-05}, {'diff': 7.544500000000037e-05}, {'diff': 7.541700000000123e-05}, {'diff': 7.541700000000123e-05}, {'diff': 7.547200000000004e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:42.948" endtime="20201029 12:46:42.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:42.956" level="INFO">${ACCURACY} = {'diff': [7.554200000000136e-05, 7.54029999999982e-05, 7.544500000000037e-05, 7.541700000000123e-05, 7.541700000000123e-05, 7.547200000000004e-05, 7.505500000000095e-05, 7.545899999999994e-05, 7.53190...</msg>
<status status="PASS" starttime="20201029 12:46:42.952" endtime="20201029 12:46:42.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.961" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 12:46:42.960" endtime="20201029 12:46:42.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.963" level="INFO">VALUE: [7.554200000000136e-05, 7.54029999999982e-05, 7.544500000000037e-05, 7.541700000000123e-05, 7.541700000000123e-05, 7.547200000000004e-05, 7.505500000000095e-05, 7.545899999999994e-05, 7.531900000000077e-05, 7.552699999999885e-05, 7.504199999999739e-05, 7.490199999999822e-05, 7.487499999999855e-05, 7.512500000000227e-05, 7.550000000000265e-05, 7.484699999999941e-05, 7.483299999999984e-05, 7.520800000000022e-05, 7.51249999999988e-05, 7.490300000000116e-05, 7.532000000000025e-05, 7.537500000000252e-05, 7.568100000000105e-05, 7.488900000000159e-05, 7.484699999999941e-05, 7.533300000000034e-05, 7.549999999999918e-05, 7.484799999999889e-05, 7.54029999999982e-05, 7.559799999999964e-05, 7.497200000000301e-05, 7.497199999999954e-05, 7.476400000000147e-05, 7.55830000000006e-05, 7.555499999999798e-05, 7.536099999999948e-05, 7.50830000000001e-05, 7.523600000000283e-05, 7.518100000000055e-05, 7.519400000000065e-05, 7.501400000000172e-05, 7.497199999999954e-05, 7.476400000000147e-05, 7.527800000000154e-05, 7.527700000000206e-05, 7.51249999999988e-05, 7.516700000000098e-05, 7.563900000000234e-05, 7.554099999999841e-05, 7.51249999999988e-05]</msg>
<status status="PASS" starttime="20201029 12:46:42.962" endtime="20201029 12:46:42.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.957" endtime="20201029 12:46:42.964"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:42.968" endtime="20201029 12:46:42.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.966" endtime="20201029 12:46:42.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.965" endtime="20201029 12:46:42.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.610" endtime="20201029 12:46:42.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.609" endtime="20201029 12:46:42.989"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.997" endtime="20201029 12:46:43.014"></status>
</kw>
<msg timestamp="20201029 12:46:43.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.996" endtime="20201029 12:46:43.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:43.016" endtime="20201029 12:46:43.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.018" endtime="20201029 12:46:43.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.993" endtime="20201029 12:46:43.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.991" endtime="20201029 12:46:43.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.028" endtime="20201029 12:46:43.315"></status>
</kw>
<msg timestamp="20201029 12:46:43.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021635028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021711639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:43.026" endtime="20201029 12:46:43.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021635028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021711639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:43.319" endtime="20201029 12:46:43.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.328" endtime="20201029 12:46:43.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.023" endtime="20201029 12:46:43.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.022" endtime="20201029 12:46:43.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:43.334" level="INFO">${RESULT} = [{'diff': 7.661100000000073e-05}, {'diff': 7.672200000000129e-05}, {'diff': 7.615299999999894e-05}, {'diff': 7.609700000000066e-05}, {'diff': 7.640300000000266e-05}, {'diff': 7.604099999999892e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:43.331" endtime="20201029 12:46:43.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:43.339" level="INFO">${ACCURACY} = {'diff': [7.661100000000073e-05, 7.672200000000129e-05, 7.615299999999894e-05, 7.609700000000066e-05, 7.640300000000266e-05, 7.604099999999892e-05, 7.594399999999793e-05, 7.64440000000019e-05, 7.60139...</msg>
<status status="PASS" starttime="20201029 12:46:43.335" endtime="20201029 12:46:43.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.343" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 12:46:43.342" endtime="20201029 12:46:43.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.346" level="INFO">VALUE: [7.661100000000073e-05, 7.672200000000129e-05, 7.615299999999894e-05, 7.609700000000066e-05, 7.640300000000266e-05, 7.604099999999892e-05, 7.594399999999793e-05, 7.64440000000019e-05, 7.601399999999925e-05, 7.640300000000266e-05, 7.651399999999975e-05, 7.65700000000015e-05, 7.609700000000066e-05, 7.613899999999937e-05, 7.64310000000018e-05, 7.601399999999925e-05, 7.627800000000254e-05, 7.622300000000026e-05, 7.620799999999775e-05, 7.648600000000061e-05, 7.57769999999991e-05, 7.65830000000016e-05, 7.588899999999912e-05, 7.605499999999848e-05, 7.611100000000023e-05, 7.587499999999955e-05, 7.648600000000061e-05, 7.627799999999907e-05, 7.588899999999912e-05, 7.622200000000079e-05, 7.593099999999783e-05, 7.669500000000162e-05, 7.6457999999998e-05, 7.65969999999977e-05, 7.594500000000087e-05, 7.623600000000036e-05, 7.616599999999904e-05, 7.630599999999821e-05, 7.65700000000015e-05, 7.601399999999925e-05, 7.616599999999904e-05, 7.601399999999925e-05, 7.619399999999818e-05, 7.63890000000031e-05, 7.636100000000048e-05, 7.61249999999998e-05, 7.624999999999993e-05, 7.65969999999977e-05, 7.650000000000018e-05, 7.606899999999805e-05]</msg>
<status status="PASS" starttime="20201029 12:46:43.345" endtime="20201029 12:46:43.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.340" endtime="20201029 12:46:43.347"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:43.351" endtime="20201029 12:46:43.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.350" endtime="20201029 12:46:43.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.348" endtime="20201029 12:46:43.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.990" endtime="20201029 12:46:43.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.989" endtime="20201029 12:46:43.372"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.381" endtime="20201029 12:46:43.402"></status>
</kw>
<msg timestamp="20201029 12:46:43.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:43.379" endtime="20201029 12:46:43.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:43.403" endtime="20201029 12:46:43.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.406" endtime="20201029 12:46:43.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.377" endtime="20201029 12:46:43.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.374" endtime="20201029 12:46:43.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.415" endtime="20201029 12:46:43.724"></status>
</kw>
<msg timestamp="20201029 12:46:43.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025768181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025845167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:43.414" endtime="20201029 12:46:43.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025768181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025845167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:43.728" endtime="20201029 12:46:43.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.736" endtime="20201029 12:46:43.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.411" endtime="20201029 12:46:43.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.409" endtime="20201029 12:46:43.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:43.743" level="INFO">${RESULT} = [{'diff': 7.698599999999764e-05}, {'diff': 7.686100000000098e-05}, {'diff': 7.71250000000008e-05}, {'diff': 7.71250000000008e-05}, {'diff': 7.711099999999776e-05}, {'diff': 7.758400000000207e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:43.740" endtime="20201029 12:46:43.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:43.748" level="INFO">${ACCURACY} = {'diff': [7.698599999999764e-05, 7.686100000000098e-05, 7.71250000000008e-05, 7.71250000000008e-05, 7.711099999999776e-05, 7.758400000000207e-05, 7.727800000000007e-05, 7.700000000000068e-05, 7.715299...</msg>
<status status="PASS" starttime="20201029 12:46:43.744" endtime="20201029 12:46:43.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.752" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 12:46:43.751" endtime="20201029 12:46:43.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.755" level="INFO">VALUE: [7.698599999999764e-05, 7.686100000000098e-05, 7.71250000000008e-05, 7.71250000000008e-05, 7.711099999999776e-05, 7.758400000000207e-05, 7.727800000000007e-05, 7.700000000000068e-05, 7.715299999999994e-05, 7.730600000000268e-05, 7.688900000000012e-05, 7.75839999999986e-05, 7.691599999999979e-05, 7.756999999999903e-05, 7.741699999999976e-05, 7.731999999999878e-05, 7.69310000000023e-05, 7.740200000000072e-05, 7.725000000000093e-05, 7.72770000000006e-05, 7.752800000000032e-05, 7.702700000000035e-05, 7.713900000000037e-05, 7.686099999999751e-05, 7.726399999999703e-05, 7.711100000000123e-05, 7.704199999999939e-05, 7.738900000000062e-05, 7.697199999999807e-05, 7.683399999999785e-05, 7.768099999999958e-05, 7.681999999999828e-05, 7.72640000000005e-05, 7.682000000000175e-05, 7.750000000000118e-05, 7.755599999999946e-05, 7.754199999999989e-05, 7.677799999999957e-05, 7.761099999999826e-05, 7.701300000000078e-05, 7.734699999999844e-05, 7.681900000000227e-05, 7.681900000000227e-05, 7.736100000000148e-05, 7.720899999999822e-05, 7.758299999999912e-05, 7.744399999999943e-05, 7.741699999999976e-05, 7.748599999999814e-05, 7.694399999999893e-05]</msg>
<status status="PASS" starttime="20201029 12:46:43.753" endtime="20201029 12:46:43.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.748" endtime="20201029 12:46:43.757"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:43.761" endtime="20201029 12:46:43.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.759" endtime="20201029 12:46:43.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.758" endtime="20201029 12:46:43.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.373" endtime="20201029 12:46:43.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.372" endtime="20201029 12:46:43.782"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.791" endtime="20201029 12:46:43.816"></status>
</kw>
<msg timestamp="20201029 12:46:43.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:43.789" endtime="20201029 12:46:43.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:43.818" endtime="20201029 12:46:43.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.821" endtime="20201029 12:46:43.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.786" endtime="20201029 12:46:43.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.784" endtime="20201029 12:46:43.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.831" endtime="20201029 12:46:44.118"></status>
</kw>
<msg timestamp="20201029 12:46:44.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022118264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022196333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:43.829" endtime="20201029 12:46:44.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022118264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022196333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:44.122" endtime="20201029 12:46:44.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.131" endtime="20201029 12:46:44.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.826" endtime="20201029 12:46:44.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.825" endtime="20201029 12:46:44.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:44.137" level="INFO">${RESULT} = [{'diff': 7.806900000000006e-05}, {'diff': 7.786099999999851e-05}, {'diff': 7.848599999999914e-05}, {'diff': 7.847199999999957e-05}, {'diff': 7.843100000000033e-05}, {'diff': 7.816700000000051e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:44.134" endtime="20201029 12:46:44.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:44.142" level="INFO">${ACCURACY} = {'diff': [7.806900000000006e-05, 7.786099999999851e-05, 7.848599999999914e-05, 7.847199999999957e-05, 7.843100000000033e-05, 7.816700000000051e-05, 7.85969999999997e-05, 7.825000000000193e-05, 7.81389...</msg>
<status status="PASS" starttime="20201029 12:46:44.138" endtime="20201029 12:46:44.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.147" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 12:46:44.146" endtime="20201029 12:46:44.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.150" level="INFO">VALUE: [7.806900000000006e-05, 7.786099999999851e-05, 7.848599999999914e-05, 7.847199999999957e-05, 7.843100000000033e-05, 7.816700000000051e-05, 7.85969999999997e-05, 7.825000000000193e-05, 7.81389999999979e-05, 7.85839999999996e-05, 7.852800000000132e-05, 7.844400000000043e-05, 7.851300000000228e-05, 7.862499999999883e-05, 7.842999999999739e-05, 7.802700000000135e-05, 7.816699999999704e-05, 7.820799999999975e-05, 7.836100000000248e-05, 7.851400000000175e-05, 7.79030000000007e-05, 7.783299999999937e-05, 7.808299999999962e-05, 7.816700000000051e-05, 7.861100000000273e-05, 7.857000000000003e-05, 7.826399999999803e-05, 7.80839999999991e-05, 7.79449999999994e-05, 7.85839999999996e-05, 7.834800000000239e-05, 7.84030000000012e-05, 7.805500000000049e-05, 7.826299999999856e-05, 7.787500000000155e-05, 7.825000000000193e-05, 7.809700000000266e-05, 7.855499999999752e-05, 7.806999999999953e-05, 7.791700000000026e-05, 7.858300000000012e-05, 7.8458e-05, 7.801400000000125e-05, 7.862499999999883e-05, 7.779199999999667e-05, 7.780599999999971e-05, 7.79030000000007e-05, 7.836099999999901e-05, 7.862499999999883e-05, 7.791600000000079e-05]</msg>
<status status="PASS" starttime="20201029 12:46:44.148" endtime="20201029 12:46:44.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.143" endtime="20201029 12:46:44.151"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:44.155" endtime="20201029 12:46:44.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.153" endtime="20201029 12:46:44.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.152" endtime="20201029 12:46:44.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.783" endtime="20201029 12:46:44.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.782" endtime="20201029 12:46:44.177"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.185" endtime="20201029 12:46:44.204"></status>
</kw>
<msg timestamp="20201029 12:46:44.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:44.184" endtime="20201029 12:46:44.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:44.205" endtime="20201029 12:46:44.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.208" endtime="20201029 12:46:44.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.181" endtime="20201029 12:46:44.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.179" endtime="20201029 12:46:44.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.217" endtime="20201029 12:46:44.523"></status>
</kw>
<msg timestamp="20201029 12:46:44.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021967181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022046819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:44.215" endtime="20201029 12:46:44.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021967181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022046819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:44.527" endtime="20201029 12:46:44.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.535" endtime="20201029 12:46:44.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.212" endtime="20201029 12:46:44.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.211" endtime="20201029 12:46:44.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:44.542" level="INFO">${RESULT} = [{'diff': 7.963799999999993e-05}, {'diff': 7.887499999999908e-05}, {'diff': 7.904200000000139e-05}, {'diff': 7.923599999999989e-05}, {'diff': 7.911099999999976e-05}, {'diff': 7.940299999999872e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:44.539" endtime="20201029 12:46:44.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:44.546" level="INFO">${ACCURACY} = {'diff': [7.963799999999993e-05, 7.887499999999908e-05, 7.904200000000139e-05, 7.923599999999989e-05, 7.911099999999976e-05, 7.940299999999872e-05, 7.873599999999939e-05, 7.954199999999842e-05, 7.9209...</msg>
<status status="PASS" starttime="20201029 12:46:44.543" endtime="20201029 12:46:44.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.550" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 12:46:44.549" endtime="20201029 12:46:44.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.553" level="INFO">VALUE: [7.963799999999993e-05, 7.887499999999908e-05, 7.904200000000139e-05, 7.923599999999989e-05, 7.911099999999976e-05, 7.940299999999872e-05, 7.873599999999939e-05, 7.954199999999842e-05, 7.920900000000022e-05, 7.929200000000164e-05, 7.932000000000078e-05, 7.916700000000151e-05, 7.887499999999908e-05, 7.951400000000275e-05, 7.954199999999842e-05, 7.973600000000039e-05, 7.931899999999784e-05, 7.916600000000204e-05, 7.952699999999938e-05, 7.915299999999847e-05, 7.941700000000176e-05, 7.917999999999814e-05, 7.945799999999753e-05, 7.920800000000075e-05, 7.933300000000088e-05, 7.898599999999964e-05, 7.887500000000255e-05, 7.926399999999903e-05, 7.902800000000182e-05, 7.94169999999983e-05, 7.890299999999822e-05, 7.888900000000212e-05, 7.952799999999885e-05, 7.883300000000037e-05, 7.898699999999911e-05, 7.87770000000021e-05, 7.88190000000008e-05, 7.938899999999915e-05, 7.923599999999989e-05, 7.879100000000167e-05, 7.937499999999958e-05, 7.877800000000157e-05, 7.938899999999915e-05, 7.962499999999983e-05, 7.911100000000323e-05, 7.937499999999958e-05, 7.966700000000201e-05, 7.954199999999842e-05, 7.877800000000157e-05, 7.930599999999774e-05]</msg>
<status status="PASS" starttime="20201029 12:46:44.551" endtime="20201029 12:46:44.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.547" endtime="20201029 12:46:44.554"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:44.558" endtime="20201029 12:46:44.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.556" endtime="20201029 12:46:44.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.555" endtime="20201029 12:46:44.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.178" endtime="20201029 12:46:44.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.177" endtime="20201029 12:46:44.578"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.587" endtime="20201029 12:46:44.606"></status>
</kw>
<msg timestamp="20201029 12:46:44.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:44.585" endtime="20201029 12:46:44.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:44.607" endtime="20201029 12:46:44.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.610" endtime="20201029 12:46:44.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.583" endtime="20201029 12:46:44.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.581" endtime="20201029 12:46:44.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.619" endtime="20201029 12:46:44.904"></status>
</kw>
<msg timestamp="20201029 12:46:44.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022355236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022435278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:44.617" endtime="20201029 12:46:44.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022355236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022435278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:44.909" endtime="20201029 12:46:44.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.917" endtime="20201029 12:46:44.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.615" endtime="20201029 12:46:44.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.613" endtime="20201029 12:46:44.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:44.923" level="INFO">${RESULT} = [{'diff': 8.004199999999892e-05}, {'diff': 8.040200000000025e-05}, {'diff': 8.045799999999853e-05}, {'diff': 7.987500000000008e-05}, {'diff': 8.02909999999997e-05}, {'diff': 7.991700000000226e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:44.920" endtime="20201029 12:46:44.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:44.928" level="INFO">${ACCURACY} = {'diff': [8.004199999999892e-05, 8.040200000000025e-05, 8.045799999999853e-05, 7.987500000000008e-05, 8.02909999999997e-05, 7.991700000000226e-05, 8.050000000000071e-05, 8.058299999999866e-05, 8.03470...</msg>
<status status="PASS" starttime="20201029 12:46:44.924" endtime="20201029 12:46:44.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.932" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 12:46:44.931" endtime="20201029 12:46:44.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.934" level="INFO">VALUE: [8.004199999999892e-05, 8.040200000000025e-05, 8.045799999999853e-05, 7.987500000000008e-05, 8.02909999999997e-05, 7.991700000000226e-05, 8.050000000000071e-05, 8.058299999999866e-05, 8.034700000000145e-05, 8.001399999999978e-05, 8.007000000000153e-05, 8.056899999999909e-05, 8.062500000000083e-05, 7.986199999999999e-05, 8.037500000000058e-05, 7.99589999999975e-05, 8.056900000000256e-05, 8.022200000000132e-05, 8.00130000000003e-05, 8.012500000000033e-05, 8.005500000000249e-05, 8.062500000000083e-05, 8.005499999999902e-05, 8.06390000000004e-05, 8.006900000000206e-05, 8.026400000000003e-05, 8.048599999999767e-05, 8.027700000000013e-05, 8.05970000000017e-05, 8.044499999999843e-05, 7.994499999999793e-05, 8.055600000000246e-05, 8.000000000000021e-05, 8.056899999999909e-05, 8.001399999999978e-05, 8.056999999999856e-05, 8.009699999999773e-05, 8.026400000000003e-05, 8.020799999999828e-05, 8.008299999999816e-05, 8.045799999999853e-05, 7.994399999999846e-05, 7.986100000000051e-05, 8.034700000000145e-05, 8.012500000000033e-05, 7.97779999999991e-05, 8.022199999999785e-05, 8.061100000000126e-05, 8.02779999999996e-05, 8.018099999999861e-05]</msg>
<status status="PASS" starttime="20201029 12:46:44.933" endtime="20201029 12:46:44.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.928" endtime="20201029 12:46:44.937"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:44.940" endtime="20201029 12:46:44.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.939" endtime="20201029 12:46:44.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.938" endtime="20201029 12:46:44.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.579" endtime="20201029 12:46:44.961"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.579" endtime="20201029 12:46:44.961"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.969" endtime="20201029 12:46:44.987"></status>
</kw>
<msg timestamp="20201029 12:46:44.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:44.968" endtime="20201029 12:46:44.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:44.988" endtime="20201029 12:46:44.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.991" endtime="20201029 12:46:44.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.965" endtime="20201029 12:46:44.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.963" endtime="20201029 12:46:44.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.000" endtime="20201029 12:46:45.285"></status>
</kw>
<msg timestamp="20201029 12:46:45.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021626833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021708417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:44.998" endtime="20201029 12:46:45.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021626833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021708417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:45.290" endtime="20201029 12:46:45.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.298" endtime="20201029 12:46:45.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.995" endtime="20201029 12:46:45.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.994" endtime="20201029 12:46:45.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:45.304" level="INFO">${RESULT} = [{'diff': 8.158399999999913e-05}, {'diff': 8.16109999999988e-05}, {'diff': 8.112500000000133e-05}, {'diff': 8.16109999999988e-05}, {'diff': 8.123599999999842e-05}, {'diff': 8.11109999999983e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:46:45.301" endtime="20201029 12:46:45.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:45.309" level="INFO">${ACCURACY} = {'diff': [8.158399999999913e-05, 8.16109999999988e-05, 8.112500000000133e-05, 8.16109999999988e-05, 8.123599999999842e-05, 8.11109999999983e-05, 8.118099999999961e-05, 8.119499999999918e-05, 8.1222000...</msg>
<status status="PASS" starttime="20201029 12:46:45.305" endtime="20201029 12:46:45.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.314" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 12:46:45.313" endtime="20201029 12:46:45.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.316" level="INFO">VALUE: [8.158399999999913e-05, 8.16109999999988e-05, 8.112500000000133e-05, 8.16109999999988e-05, 8.123599999999842e-05, 8.11109999999983e-05, 8.118099999999961e-05, 8.119499999999918e-05, 8.122200000000232e-05, 8.130599999999974e-05, 8.115300000000047e-05, 8.133400000000235e-05, 8.116700000000004e-05, 8.083400000000185e-05, 8.082000000000228e-05, 8.111100000000177e-05, 8.091600000000032e-05, 8.129099999999723e-05, 8.136100000000202e-05, 8.07910000000002e-05, 8.081899999999934e-05, 8.14719999999991e-05, 8.123599999999842e-05, 8.116700000000004e-05, 8.101399999999731e-05, 8.084699999999848e-05, 8.084699999999848e-05, 8.143099999999986e-05, 8.105599999999949e-05, 8.112499999999787e-05, 8.129200000000017e-05, 8.155599999999999e-05, 8.083399999999838e-05, 8.143099999999986e-05, 8.100000000000121e-05, 8.161199999999827e-05, 8.131899999999984e-05, 8.148599999999867e-05, 8.091600000000032e-05, 8.115300000000047e-05, 8.130599999999974e-05, 8.10970000000022e-05, 8.161100000000227e-05, 8.138900000000115e-05, 8.148600000000214e-05, 8.118000000000014e-05, 8.145799999999953e-05, 8.138900000000115e-05, 8.102800000000035e-05, 8.084700000000195e-05]</msg>
<status status="PASS" starttime="20201029 12:46:45.315" endtime="20201029 12:46:45.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.310" endtime="20201029 12:46:45.318"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:45.321" endtime="20201029 12:46:45.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.320" endtime="20201029 12:46:45.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.319" endtime="20201029 12:46:45.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.962" endtime="20201029 12:46:45.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.961" endtime="20201029 12:46:45.342"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.350" endtime="20201029 12:46:45.369"></status>
</kw>
<msg timestamp="20201029 12:46:45.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:45.349" endtime="20201029 12:46:45.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:45.370" endtime="20201029 12:46:45.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.373" endtime="20201029 12:46:45.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.346" endtime="20201029 12:46:45.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.344" endtime="20201029 12:46:45.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.382" endtime="20201029 12:46:45.667"></status>
</kw>
<msg timestamp="20201029 12:46:45.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021699083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021781083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:45.380" endtime="20201029 12:46:45.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021699083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021781083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:45.671" endtime="20201029 12:46:45.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.680" endtime="20201029 12:46:45.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.378" endtime="20201029 12:46:45.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.376" endtime="20201029 12:46:45.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:45.686" level="INFO">${RESULT} = [{'diff': 8.199999999999874e-05}, {'diff': 8.240299999999826e-05}, {'diff': 8.220800000000028e-05}, {'diff': 8.211200000000224e-05}, {'diff': 8.181999999999981e-05}, {'diff': 8.22780000000016e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:45.683" endtime="20201029 12:46:45.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:45.690" level="INFO">${ACCURACY} = {'diff': [8.199999999999874e-05, 8.240299999999826e-05, 8.220800000000028e-05, 8.211200000000224e-05, 8.181999999999981e-05, 8.22780000000016e-05, 8.234799999999945e-05, 8.241699999999783e-05, 8.19310...</msg>
<status status="PASS" starttime="20201029 12:46:45.687" endtime="20201029 12:46:45.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.695" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 12:46:45.694" endtime="20201029 12:46:45.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.697" level="INFO">VALUE: [8.199999999999874e-05, 8.240299999999826e-05, 8.220800000000028e-05, 8.211200000000224e-05, 8.181999999999981e-05, 8.22780000000016e-05, 8.234799999999945e-05, 8.241699999999783e-05, 8.193100000000036e-05, 8.219500000000018e-05, 8.194400000000046e-05, 8.198599999999917e-05, 8.184700000000295e-05, 8.19719999999996e-05, 8.194400000000046e-05, 8.247299999999957e-05, 8.202799999999788e-05, 8.199999999999874e-05, 8.234699999999998e-05, 8.223600000000289e-05, 8.237500000000259e-05, 8.232000000000031e-05, 8.240300000000172e-05, 8.188899999999819e-05, 8.194400000000046e-05, 8.223600000000289e-05, 8.190299999999776e-05, 8.273700000000286e-05, 8.22369999999989e-05, 8.22910000000017e-05, 8.227700000000213e-05, 8.219400000000071e-05, 8.212499999999887e-05, 8.17910000000012e-05, 8.18329999999999e-05, 8.251399999999881e-05, 8.216700000000104e-05, 8.223600000000289e-05, 8.240299999999826e-05, 8.262499999999937e-05, 8.241699999999783e-05, 8.184699999999948e-05, 8.205600000000049e-05, 8.186100000000252e-05, 8.25979999999997e-05, 8.186199999999852e-05, 8.19170000000008e-05, 8.240299999999826e-05, 8.186099999999905e-05, 8.18329999999999e-05]</msg>
<status status="PASS" starttime="20201029 12:46:45.696" endtime="20201029 12:46:45.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.691" endtime="20201029 12:46:45.699"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:45.702" endtime="20201029 12:46:45.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.701" endtime="20201029 12:46:45.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.699" endtime="20201029 12:46:45.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.343" endtime="20201029 12:46:45.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.342" endtime="20201029 12:46:45.723"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.731" endtime="20201029 12:46:45.751"></status>
</kw>
<msg timestamp="20201029 12:46:45.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:45.730" endtime="20201029 12:46:45.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:45.753" endtime="20201029 12:46:45.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.755" endtime="20201029 12:46:45.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.727" endtime="20201029 12:46:45.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.725" endtime="20201029 12:46:45.758"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.764" endtime="20201029 12:46:46.050"></status>
</kw>
<msg timestamp="20201029 12:46:46.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023059056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023142278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:45.762" endtime="20201029 12:46:46.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023059056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023142278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:46.054" endtime="20201029 12:46:46.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.062" endtime="20201029 12:46:46.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.760" endtime="20201029 12:46:46.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.758" endtime="20201029 12:46:46.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:46.069" level="INFO">${RESULT} = [{'diff': 8.322199999999738e-05}, {'diff': 8.293000000000189e-05}, {'diff': 8.333299999999794e-05}, {'diff': 8.319400000000171e-05}, {'diff': 8.338899999999969e-05}, {'diff': 8.326400000000303e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:46.066" endtime="20201029 12:46:46.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:46.073" level="INFO">${ACCURACY} = {'diff': [8.322199999999738e-05, 8.293000000000189e-05, 8.333299999999794e-05, 8.319400000000171e-05, 8.338899999999969e-05, 8.326400000000303e-05, 8.276399999999906e-05, 8.320800000000128e-05, 8.3042...</msg>
<status status="PASS" starttime="20201029 12:46:46.070" endtime="20201029 12:46:46.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.078" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 12:46:46.076" endtime="20201029 12:46:46.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.080" level="INFO">VALUE: [8.322199999999738e-05, 8.293000000000189e-05, 8.333299999999794e-05, 8.319400000000171e-05, 8.338899999999969e-05, 8.326400000000303e-05, 8.276399999999906e-05, 8.320800000000128e-05, 8.304200000000192e-05, 8.305599999999802e-05, 8.286100000000005e-05, 8.294500000000093e-05, 8.340299999999926e-05, 8.316700000000204e-05, 8.308400000000063e-05, 8.313899999999944e-05, 8.284799999999995e-05, 8.341699999999883e-05, 8.287499999999962e-05, 8.323600000000042e-05, 8.359699999999776e-05, 8.301399999999931e-05, 8.320799999999781e-05, 8.34720000000011e-05, 8.319399999999824e-05, 8.283299999999744e-05, 8.28330000000009e-05, 8.295800000000103e-05, 8.348600000000067e-05, 8.324999999999999e-05, 8.359700000000123e-05, 8.324999999999999e-05, 8.34309999999984e-05, 8.31110000000003e-05, 8.34309999999984e-05, 8.334799999999698e-05, 8.342999999999892e-05, 8.362500000000037e-05, 8.348600000000067e-05, 8.354099999999948e-05, 8.305499999999855e-05, 8.304100000000245e-05, 8.331899999999837e-05, 8.338899999999969e-05, 8.29720000000006e-05, 8.292999999999842e-05, 8.350000000000024e-05, 8.334700000000098e-05, 8.343100000000186e-05, 8.322200000000085e-05]</msg>
<status status="PASS" starttime="20201029 12:46:46.079" endtime="20201029 12:46:46.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.074" endtime="20201029 12:46:46.082"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:46.086" endtime="20201029 12:46:46.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.084" endtime="20201029 12:46:46.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.083" endtime="20201029 12:46:46.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.724" endtime="20201029 12:46:46.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.723" endtime="20201029 12:46:46.106"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.115" endtime="20201029 12:46:46.133"></status>
</kw>
<msg timestamp="20201029 12:46:46.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:46.113" endtime="20201029 12:46:46.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:46.134" endtime="20201029 12:46:46.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.137" endtime="20201029 12:46:46.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.111" endtime="20201029 12:46:46.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.109" endtime="20201029 12:46:46.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.145" endtime="20201029 12:46:46.431"></status>
</kw>
<msg timestamp="20201029 12:46:46.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021443514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021528236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:46.144" endtime="20201029 12:46:46.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021443514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021528236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:46.435" endtime="20201029 12:46:46.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.443" endtime="20201029 12:46:46.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.141" endtime="20201029 12:46:46.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.140" endtime="20201029 12:46:46.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:46.449" level="INFO">${RESULT} = [{'diff': 8.472199999999888e-05}, {'diff': 8.405600000000249e-05}, {'diff': 8.440200000000078e-05}, {'diff': 8.456899999999962e-05}, {'diff': 8.462500000000137e-05}, {'diff': 8.452800000000038e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:46.446" endtime="20201029 12:46:46.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:46.454" level="INFO">${ACCURACY} = {'diff': [8.472199999999888e-05, 8.405600000000249e-05, 8.440200000000078e-05, 8.456899999999962e-05, 8.462500000000137e-05, 8.452800000000038e-05, 8.427800000000013e-05, 8.397199999999813e-05, 8.4083...</msg>
<status status="PASS" starttime="20201029 12:46:46.450" endtime="20201029 12:46:46.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.459" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 12:46:46.458" endtime="20201029 12:46:46.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.461" level="INFO">VALUE: [8.472199999999888e-05, 8.405600000000249e-05, 8.440200000000078e-05, 8.456899999999962e-05, 8.462500000000137e-05, 8.452800000000038e-05, 8.427800000000013e-05, 8.397199999999813e-05, 8.408300000000216e-05, 8.405500000000302e-05, 8.413900000000044e-05, 8.437500000000112e-05, 8.431899999999937e-05, 8.383299999999844e-05, 8.413900000000044e-05, 8.383299999999844e-05, 8.413900000000044e-05, 8.441699999999983e-05, 8.432000000000231e-05, 8.437500000000112e-05, 8.393100000000236e-05, 8.445799999999906e-05, 8.406999999999859e-05, 8.397199999999813e-05, 8.419399999999924e-05, 8.413900000000044e-05, 8.405499999999955e-05, 8.427800000000013e-05, 8.384700000000148e-05, 8.413900000000044e-05, 8.418099999999915e-05, 8.452800000000038e-05, 8.451400000000081e-05, 8.397199999999813e-05, 8.39590000000015e-05, 8.426400000000056e-05, 8.437500000000112e-05, 8.401400000000031e-05, 8.452800000000038e-05, 8.419500000000218e-05, 8.426400000000056e-05, 8.381999999999834e-05, 8.429100000000023e-05, 8.468000000000017e-05, 8.43469999999985e-05, 8.440199999999731e-05, 8.37780000000031e-05, 8.388900000000019e-05, 8.463900000000094e-05, 8.413900000000044e-05]</msg>
<status status="PASS" starttime="20201029 12:46:46.460" endtime="20201029 12:46:46.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.455" endtime="20201029 12:46:46.462"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:46.466" endtime="20201029 12:46:46.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.465" endtime="20201029 12:46:46.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.463" endtime="20201029 12:46:46.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.107" endtime="20201029 12:46:46.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.107" endtime="20201029 12:46:46.487"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.495" endtime="20201029 12:46:46.514"></status>
</kw>
<msg timestamp="20201029 12:46:46.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:46.494" endtime="20201029 12:46:46.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:46.515" endtime="20201029 12:46:46.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.518" endtime="20201029 12:46:46.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.491" endtime="20201029 12:46:46.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.489" endtime="20201029 12:46:46.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.527" endtime="20201029 12:46:46.813"></status>
</kw>
<msg timestamp="20201029 12:46:46.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021502764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021588208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:46.525" endtime="20201029 12:46:46.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021502764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021588208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:46.817" endtime="20201029 12:46:46.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.825" endtime="20201029 12:46:46.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.523" endtime="20201029 12:46:46.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.521" endtime="20201029 12:46:46.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:46.832" level="INFO">${RESULT} = [{'diff': 8.544400000000049e-05}, {'diff': 8.481999999999934e-05}, {'diff': 8.512500000000187e-05}, {'diff': 8.550000000000224e-05}, {'diff': 8.501399999999784e-05}, {'diff': 8.541699999999736e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:46.829" endtime="20201029 12:46:46.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:46.836" level="INFO">${ACCURACY} = {'diff': [8.544400000000049e-05, 8.481999999999934e-05, 8.512500000000187e-05, 8.550000000000224e-05, 8.501399999999784e-05, 8.541699999999736e-05, 8.499999999999827e-05, 8.545800000000006e-05, 8.5013...</msg>
<status status="PASS" starttime="20201029 12:46:46.833" endtime="20201029 12:46:46.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.840" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 12:46:46.839" endtime="20201029 12:46:46.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.843" level="INFO">VALUE: [8.544400000000049e-05, 8.481999999999934e-05, 8.512500000000187e-05, 8.550000000000224e-05, 8.501399999999784e-05, 8.541699999999736e-05, 8.499999999999827e-05, 8.545800000000006e-05, 8.501300000000184e-05, 8.559699999999976e-05, 8.544400000000049e-05, 8.552799999999791e-05, 8.526400000000156e-05, 8.531900000000037e-05, 8.520799999999981e-05, 8.470799999999931e-05, 8.555599999999705e-05, 8.5153000000001e-05, 8.56530000000015e-05, 8.504200000000045e-05, 8.52920000000007e-05, 8.501399999999784e-05, 8.504200000000045e-05, 8.516700000000058e-05, 8.54729999999991e-05, 8.500000000000174e-05, 8.515199999999806e-05, 8.487499999999815e-05, 8.518000000000067e-05, 8.522199999999938e-05, 8.554100000000148e-05, 8.554200000000095e-05, 8.515299999999754e-05, 8.556900000000062e-05, 8.531999999999984e-05, 8.490300000000076e-05, 8.480599999999977e-05, 8.518099999999668e-05, 8.522199999999938e-05, 8.554200000000095e-05, 8.566700000000108e-05, 8.491700000000033e-05, 8.497300000000207e-05, 8.504199999999698e-05, 8.558300000000019e-05, 8.49859999999987e-05, 8.5153000000001e-05, 8.522200000000285e-05, 8.509700000000273e-05, 8.519400000000024e-05]</msg>
<status status="PASS" starttime="20201029 12:46:46.842" endtime="20201029 12:46:46.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.837" endtime="20201029 12:46:46.844"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:46.848" endtime="20201029 12:46:46.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.846" endtime="20201029 12:46:46.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.845" endtime="20201029 12:46:46.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.488" endtime="20201029 12:46:46.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.487" endtime="20201029 12:46:46.869"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.877" endtime="20201029 12:46:46.899"></status>
</kw>
<msg timestamp="20201029 12:46:46.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:46.876" endtime="20201029 12:46:46.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:46.901" endtime="20201029 12:46:46.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.903" endtime="20201029 12:46:46.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.873" endtime="20201029 12:46:46.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.871" endtime="20201029 12:46:46.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.912" endtime="20201029 12:46:47.199"></status>
</kw>
<msg timestamp="20201029 12:46:47.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025379347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025466028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:46.911" endtime="20201029 12:46:47.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025379347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025466028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:47.203" endtime="20201029 12:46:47.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.211" endtime="20201029 12:46:47.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.908" endtime="20201029 12:46:47.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.906" endtime="20201029 12:46:47.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:47.217" level="INFO">${RESULT} = [{'diff': 8.668100000000165e-05}, {'diff': 8.580600000000077e-05}, {'diff': 8.607000000000059e-05}, {'diff': 8.627799999999866e-05}, {'diff': 8.659800000000023e-05}, {'diff': 8.583399999999991e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:47.214" endtime="20201029 12:46:47.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:47.221" level="INFO">${ACCURACY} = {'diff': [8.668100000000165e-05, 8.580600000000077e-05, 8.607000000000059e-05, 8.627799999999866e-05, 8.659800000000023e-05, 8.583399999999991e-05, 8.604100000000198e-05, 8.593000000000142e-05, 8.5847...</msg>
<status status="PASS" starttime="20201029 12:46:47.218" endtime="20201029 12:46:47.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.226" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 12:46:47.225" endtime="20201029 12:46:47.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.228" level="INFO">VALUE: [8.668100000000165e-05, 8.580600000000077e-05, 8.607000000000059e-05, 8.627799999999866e-05, 8.659800000000023e-05, 8.583399999999991e-05, 8.604100000000198e-05, 8.593000000000142e-05, 8.5847e-05, 8.599999999999927e-05, 8.604200000000145e-05, 8.601399999999884e-05, 8.626399999999909e-05, 8.658299999999772e-05, 8.611099999999983e-05, 8.605599999999755e-05, 8.582000000000034e-05, 8.649999999999977e-05, 8.63470000000005e-05, 8.605499999999808e-05, 8.623599999999995e-05, 8.644400000000149e-05, 8.591699999999786e-05, 8.64730000000001e-05, 8.63470000000005e-05, 8.656900000000162e-05, 8.5847e-05, 8.605500000000155e-05, 8.599999999999927e-05, 8.606900000000112e-05, 8.629199999999823e-05, 8.5847e-05, 8.673600000000045e-05, 8.609700000000026e-05, 8.658299999999772e-05, 8.666700000000208e-05, 8.595900000000004e-05, 8.630600000000127e-05, 8.584799999999948e-05, 8.630600000000127e-05, 8.582000000000034e-05, 8.640299999999879e-05, 8.597199999999666e-05, 8.590199999999881e-05, 8.634699999999704e-05, 8.649999999999977e-05, 8.650000000000324e-05, 8.615299999999854e-05, 8.591700000000133e-05, 8.64860000000002e-05]</msg>
<status status="PASS" starttime="20201029 12:46:47.227" endtime="20201029 12:46:47.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.222" endtime="20201029 12:46:47.230"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:47.234" endtime="20201029 12:46:47.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.233" endtime="20201029 12:46:47.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.231" endtime="20201029 12:46:47.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.870" endtime="20201029 12:46:47.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.869" endtime="20201029 12:46:47.255"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.263" endtime="20201029 12:46:47.281"></status>
</kw>
<msg timestamp="20201029 12:46:47.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:47.262" endtime="20201029 12:46:47.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:47.282" endtime="20201029 12:46:47.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.285" endtime="20201029 12:46:47.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.259" endtime="20201029 12:46:47.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.257" endtime="20201029 12:46:47.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.294" endtime="20201029 12:46:47.579"></status>
</kw>
<msg timestamp="20201029 12:46:47.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021489486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021576806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:47.292" endtime="20201029 12:46:47.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021489486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021576806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:47.584" endtime="20201029 12:46:47.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.592" endtime="20201029 12:46:47.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.290" endtime="20201029 12:46:47.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.288" endtime="20201029 12:46:47.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:47.598" level="INFO">${RESULT} = [{'diff': 8.732000000000184e-05}, {'diff': 8.704199999999898e-05}, {'diff': 8.754200000000295e-05}, {'diff': 8.730600000000227e-05}, {'diff': 8.754199999999948e-05}, {'diff': 8.740299999999979e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:47.595" endtime="20201029 12:46:47.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:47.603" level="INFO">${ACCURACY} = {'diff': [8.732000000000184e-05, 8.704199999999898e-05, 8.754200000000295e-05, 8.730600000000227e-05, 8.754199999999948e-05, 8.740299999999979e-05, 8.763900000000047e-05, 8.718099999999868e-05, 8.7375...</msg>
<status status="PASS" starttime="20201029 12:46:47.599" endtime="20201029 12:46:47.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.608" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 12:46:47.607" endtime="20201029 12:46:47.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.610" level="INFO">VALUE: [8.732000000000184e-05, 8.704199999999898e-05, 8.754200000000295e-05, 8.730600000000227e-05, 8.754199999999948e-05, 8.740299999999979e-05, 8.763900000000047e-05, 8.718099999999868e-05, 8.737500000000065e-05, 8.71669999999991e-05, 8.730600000000227e-05, 8.758400000000166e-05, 8.736200000000055e-05, 8.701300000000037e-05, 8.73189999999989e-05, 8.695800000000156e-05, 8.723600000000095e-05, 8.708299999999822e-05, 8.74999999999973e-05, 8.693099999999843e-05, 8.775000000000102e-05, 8.725000000000052e-05, 8.754199999999948e-05, 8.704199999999898e-05, 8.680600000000177e-05, 8.686100000000058e-05, 8.709799999999726e-05, 8.719499999999825e-05, 8.741699999999936e-05, 8.737500000000065e-05, 8.686100000000058e-05, 8.727799999999966e-05, 8.711100000000083e-05, 8.758300000000219e-05, 8.747200000000163e-05, 8.750000000000077e-05, 8.738900000000022e-05, 8.738900000000022e-05, 8.730499999999933e-05, 8.74999999999973e-05, 8.705600000000202e-05, 8.71250000000004e-05, 8.750000000000077e-05, 8.704199999999898e-05, 8.755600000000252e-05, 8.718100000000215e-05, 8.693099999999843e-05, 8.719499999999825e-05, 8.69310000000019e-05, 8.723600000000095e-05]</msg>
<status status="PASS" starttime="20201029 12:46:47.609" endtime="20201029 12:46:47.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.604" endtime="20201029 12:46:47.611"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:47.615" endtime="20201029 12:46:47.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.613" endtime="20201029 12:46:47.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.612" endtime="20201029 12:46:47.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.256" endtime="20201029 12:46:47.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.255" endtime="20201029 12:46:47.636"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.644" endtime="20201029 12:46:47.662"></status>
</kw>
<msg timestamp="20201029 12:46:47.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:47.643" endtime="20201029 12:46:47.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:47.664" endtime="20201029 12:46:47.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.666" endtime="20201029 12:46:47.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.640" endtime="20201029 12:46:47.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.638" endtime="20201029 12:46:47.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.675" endtime="20201029 12:46:47.962"></status>
</kw>
<msg timestamp="20201029 12:46:47.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021592972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021681014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:47.674" endtime="20201029 12:46:47.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021592972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021681014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:47.966" endtime="20201029 12:46:47.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.974" endtime="20201029 12:46:47.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.671" endtime="20201029 12:46:47.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.669" endtime="20201029 12:46:47.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:47.981" level="INFO">${RESULT} = [{'diff': 8.804199999999998e-05}, {'diff': 8.800000000000127e-05}, {'diff': 8.830500000000033e-05}, {'diff': 8.854100000000101e-05}, {'diff': 8.833299999999947e-05}, {'diff': 8.779099999999679e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:47.978" endtime="20201029 12:46:47.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:47.985" level="INFO">${ACCURACY} = {'diff': [8.804199999999998e-05, 8.800000000000127e-05, 8.830500000000033e-05, 8.854100000000101e-05, 8.833299999999947e-05, 8.779099999999679e-05, 8.872200000000288e-05, 8.852799999999744e-05, 8.8193...</msg>
<status status="PASS" starttime="20201029 12:46:47.982" endtime="20201029 12:46:47.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.990" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 12:46:47.989" endtime="20201029 12:46:47.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.992" level="INFO">VALUE: [8.804199999999998e-05, 8.800000000000127e-05, 8.830500000000033e-05, 8.854100000000101e-05, 8.833299999999947e-05, 8.779099999999679e-05, 8.872200000000288e-05, 8.852799999999744e-05, 8.819399999999977e-05, 8.802800000000041e-05, 8.866600000000113e-05, 8.786099999999811e-05, 8.783299999999897e-05, 8.859699999999929e-05, 8.790300000000029e-05, 8.820899999999882e-05, 8.801400000000084e-05, 8.841700000000036e-05, 8.813900000000097e-05, 8.79860000000017e-05, 8.851300000000187e-05, 8.827700000000119e-05, 8.788900000000072e-05, 8.829200000000023e-05, 8.826400000000109e-05, 8.850000000000177e-05, 8.797200000000213e-05, 8.79310000000029e-05, 8.795799999999909e-05, 8.79310000000029e-05, 8.795799999999909e-05, 8.818100000000315e-05, 8.801399999999737e-05, 8.827800000000066e-05, 8.840299999999732e-05, 8.790300000000029e-05, 8.86670000000006e-05, 8.81800000000002e-05, 8.79860000000017e-05, 8.780499999999983e-05, 8.787500000000115e-05, 8.861099999999886e-05, 8.827800000000066e-05, 8.838900000000122e-05, 8.792999999999995e-05, 8.829200000000023e-05, 8.804199999999998e-05, 8.798700000000118e-05, 8.79860000000017e-05, 8.79860000000017e-05]</msg>
<status status="PASS" starttime="20201029 12:46:47.991" endtime="20201029 12:46:47.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.986" endtime="20201029 12:46:47.993"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:47.997" endtime="20201029 12:46:48.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.995" endtime="20201029 12:46:48.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.994" endtime="20201029 12:46:48.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.636" endtime="20201029 12:46:48.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.636" endtime="20201029 12:46:48.018"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.026" endtime="20201029 12:46:48.045"></status>
</kw>
<msg timestamp="20201029 12:46:48.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.025" endtime="20201029 12:46:48.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.046" endtime="20201029 12:46:48.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.049" endtime="20201029 12:46:48.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.022" endtime="20201029 12:46:48.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.020" endtime="20201029 12:46:48.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.058" endtime="20201029 12:46:48.343"></status>
</kw>
<msg timestamp="20201029 12:46:48.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022538792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022628458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:48.056" endtime="20201029 12:46:48.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022538792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022628458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:48.348" endtime="20201029 12:46:48.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.356" endtime="20201029 12:46:48.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.054" endtime="20201029 12:46:48.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.052" endtime="20201029 12:46:48.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:48.362" level="INFO">${RESULT} = [{'diff': 8.966600000000213e-05}, {'diff': 8.923599999999948e-05}, {'diff': 8.895900000000304e-05}, {'diff': 8.943100000000093e-05}, {'diff': 8.919500000000025e-05}, {'diff': 8.945800000000059e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:48.359" endtime="20201029 12:46:48.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:48.366" level="INFO">${ACCURACY} = {'diff': [8.966600000000213e-05, 8.923599999999948e-05, 8.895900000000304e-05, 8.943100000000093e-05, 8.919500000000025e-05, 8.945800000000059e-05, 8.911099999999936e-05, 8.938899999999875e-05, 8.8902...</msg>
<status status="PASS" starttime="20201029 12:46:48.363" endtime="20201029 12:46:48.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.371" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 12:46:48.370" endtime="20201029 12:46:48.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.373" level="INFO">VALUE: [8.966600000000213e-05, 8.923599999999948e-05, 8.895900000000304e-05, 8.943100000000093e-05, 8.919500000000025e-05, 8.945800000000059e-05, 8.911099999999936e-05, 8.938899999999875e-05, 8.890200000000181e-05, 8.906900000000065e-05, 8.934700000000004e-05, 8.925000000000252e-05, 8.952799999999844e-05, 8.880500000000083e-05, 8.937500000000265e-05, 8.874999999999855e-05, 8.965299999999857e-05, 8.900000000000227e-05, 8.959699999999682e-05, 8.948599999999973e-05, 8.918100000000068e-05, 8.919500000000025e-05, 8.901399999999837e-05, 8.947299999999964e-05, 8.91800000000012e-05, 8.927800000000166e-05, 8.911100000000283e-05, 8.88190000000004e-05, 8.937499999999918e-05, 8.895800000000009e-05, 8.907000000000012e-05, 8.877800000000116e-05, 8.952800000000191e-05, 8.879200000000073e-05, 8.891700000000086e-05, 8.93060000000008e-05, 8.958300000000072e-05, 8.932000000000037e-05, 8.897199999999966e-05, 8.926399999999862e-05, 8.89999999999988e-05, 8.886100000000258e-05, 8.924999999999905e-05, 8.877800000000116e-05, 8.955500000000158e-05, 8.911099999999936e-05, 8.906900000000065e-05, 8.920800000000034e-05, 8.874999999999855e-05, 8.924999999999905e-05]</msg>
<status status="PASS" starttime="20201029 12:46:48.372" endtime="20201029 12:46:48.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.367" endtime="20201029 12:46:48.375"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:48.379" endtime="20201029 12:46:48.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.377" endtime="20201029 12:46:48.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.376" endtime="20201029 12:46:48.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.019" endtime="20201029 12:46:48.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.018" endtime="20201029 12:46:48.400"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.408" endtime="20201029 12:46:48.426"></status>
</kw>
<msg timestamp="20201029 12:46:48.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.406" endtime="20201029 12:46:48.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.428" endtime="20201029 12:46:48.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.430" endtime="20201029 12:46:48.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.404" endtime="20201029 12:46:48.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.402" endtime="20201029 12:46:48.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.439" endtime="20201029 12:46:48.725"></status>
</kw>
<msg timestamp="20201029 12:46:48.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021977958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022067917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:48.438" endtime="20201029 12:46:48.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021977958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022067917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:48.729" endtime="20201029 12:46:48.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.737" endtime="20201029 12:46:48.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.435" endtime="20201029 12:46:48.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.433" endtime="20201029 12:46:48.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:48.744" level="INFO">${RESULT} = [{'diff': 8.995900000000057e-05}, {'diff': 9.008300000000122e-05}, {'diff': 9.027800000000266e-05}, {'diff': 9.001400000000284e-05}, {'diff': 9.042999999999898e-05}, {'diff': 9.022199999999744e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:48.741" endtime="20201029 12:46:48.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:48.749" level="INFO">${ACCURACY} = {'diff': [8.995900000000057e-05, 9.008300000000122e-05, 9.027800000000266e-05, 9.001400000000284e-05, 9.042999999999898e-05, 9.022199999999744e-05, 8.998600000000023e-05, 9.051399999999987e-05, 9.0152...</msg>
<status status="PASS" starttime="20201029 12:46:48.745" endtime="20201029 12:46:48.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.753" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 12:46:48.752" endtime="20201029 12:46:48.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.756" level="INFO">VALUE: [8.995900000000057e-05, 9.008300000000122e-05, 9.027800000000266e-05, 9.001400000000284e-05, 9.042999999999898e-05, 9.022199999999744e-05, 8.998600000000023e-05, 9.051399999999987e-05, 9.015299999999907e-05, 9.029199999999876e-05, 8.984800000000001e-05, 9.020900000000082e-05, 9.002799999999894e-05, 9.052799999999944e-05, 9.032000000000137e-05, 8.997200000000066e-05, 9.05000000000003e-05, 8.98190000000014e-05, 9.06939999999988e-05, 9.036100000000061e-05, 8.979099999999879e-05, 9.056900000000215e-05, 9.030500000000233e-05, 9.022200000000091e-05, 8.995800000000109e-05, 8.979200000000173e-05, 8.977799999999869e-05, 9.032000000000137e-05, 9.076400000000012e-05, 9.058399999999772e-05, 9.058400000000119e-05, 8.988899999999925e-05, 9.020799999999787e-05, 8.991600000000238e-05, 8.992999999999848e-05, 9.01670000000021e-05, 8.99999999999998e-05, 9.042999999999898e-05, 9.016600000000263e-05, 9.070900000000132e-05, 8.991699999999839e-05, 9.045800000000159e-05, 8.9945000000001e-05, 9.05000000000003e-05, 9.009700000000079e-05, 9.026399999999962e-05, 8.99999999999998e-05, 9.020900000000082e-05, 8.987500000000315e-05, 8.988899999999925e-05]</msg>
<status status="PASS" starttime="20201029 12:46:48.754" endtime="20201029 12:46:48.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.750" endtime="20201029 12:46:48.757"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:48.761" endtime="20201029 12:46:48.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.759" endtime="20201029 12:46:48.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.758" endtime="20201029 12:46:48.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.400" endtime="20201029 12:46:48.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.400" endtime="20201029 12:46:48.781"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.790" endtime="20201029 12:46:48.808"></status>
</kw>
<msg timestamp="20201029 12:46:48.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.788" endtime="20201029 12:46:48.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.810" endtime="20201029 12:46:48.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.812" endtime="20201029 12:46:48.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.786" endtime="20201029 12:46:48.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.784" endtime="20201029 12:46:48.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.821" endtime="20201029 12:46:49.108"></status>
</kw>
<msg timestamp="20201029 12:46:49.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021478569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021569639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:48.819" endtime="20201029 12:46:49.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021478569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021569639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:49.112" endtime="20201029 12:46:49.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.120" endtime="20201029 12:46:49.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.817" endtime="20201029 12:46:49.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.815" endtime="20201029 12:46:49.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:49.126" level="INFO">${RESULT} = [{'diff': 9.107000000000212e-05}, {'diff': 9.138900000000075e-05}, {'diff': 9.131899999999943e-05}, {'diff': 9.126300000000115e-05}, {'diff': 9.144399999999955e-05}, {'diff': 9.159800000000176e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:49.123" endtime="20201029 12:46:49.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:49.130" level="INFO">${ACCURACY} = {'diff': [9.107000000000212e-05, 9.138900000000075e-05, 9.131899999999943e-05, 9.126300000000115e-05, 9.144399999999955e-05, 9.159800000000176e-05, 9.141600000000041e-05, 9.079099999999979e-05, 9.1403...</msg>
<status status="PASS" starttime="20201029 12:46:49.127" endtime="20201029 12:46:49.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.135" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 12:46:49.134" endtime="20201029 12:46:49.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.137" level="INFO">VALUE: [9.107000000000212e-05, 9.138900000000075e-05, 9.131899999999943e-05, 9.126300000000115e-05, 9.144399999999955e-05, 9.159800000000176e-05, 9.141600000000041e-05, 9.079099999999979e-05, 9.140300000000032e-05, 9.136100000000161e-05, 9.120799999999887e-05, 9.134700000000204e-05, 9.15000000000013e-05, 9.076400000000012e-05, 9.120899999999835e-05, 9.152800000000044e-05, 9.161099999999839e-05, 9.158399999999872e-05, 9.104200000000298e-05, 9.154100000000054e-05, 9.133300000000247e-05, 9.134700000000204e-05, 9.174999999999808e-05, 9.076400000000012e-05, 9.147200000000216e-05, 9.136100000000161e-05, 9.145799999999912e-05, 9.087500000000068e-05, 9.176400000000112e-05, 9.083300000000197e-05, 9.123600000000148e-05, 9.162500000000143e-05, 9.098599999999776e-05, 9.137499999999771e-05, 9.136099999999814e-05, 9.161200000000133e-05, 9.157000000000262e-05, 9.090299999999982e-05, 9.125000000000105e-05, 9.129100000000029e-05, 9.083300000000197e-05, 9.120900000000182e-05, 9.079199999999926e-05, 9.104199999999951e-05, 9.1332999999999e-05, 9.176399999999765e-05, 9.140300000000032e-05, 9.111099999999789e-05, 9.158400000000219e-05, 9.088900000000025e-05]</msg>
<status status="PASS" starttime="20201029 12:46:49.136" endtime="20201029 12:46:49.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.131" endtime="20201029 12:46:49.139"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:49.142" endtime="20201029 12:46:49.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.141" endtime="20201029 12:46:49.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.140" endtime="20201029 12:46:49.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.782" endtime="20201029 12:46:49.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.781" endtime="20201029 12:46:49.163"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.171" endtime="20201029 12:46:49.192"></status>
</kw>
<msg timestamp="20201029 12:46:49.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.170" endtime="20201029 12:46:49.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.193" endtime="20201029 12:46:49.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.196" endtime="20201029 12:46:49.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.167" endtime="20201029 12:46:49.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.165" endtime="20201029 12:46:49.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.205" endtime="20201029 12:46:49.490"></status>
</kw>
<msg timestamp="20201029 12:46:49.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022479194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022571389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:49.203" endtime="20201029 12:46:49.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022479194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022571389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:49.494" endtime="20201029 12:46:49.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.502" endtime="20201029 12:46:49.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.201" endtime="20201029 12:46:49.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.199" endtime="20201029 12:46:49.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:49.509" level="INFO">${RESULT} = [{'diff': 9.219499999999978e-05}, {'diff': 9.201400000000137e-05}, {'diff': 9.198599999999876e-05}, {'diff': 9.208299999999975e-05}, {'diff': 9.194400000000005e-05}, {'diff': 9.206900000000018e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:49.505" endtime="20201029 12:46:49.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:49.513" level="INFO">${ACCURACY} = {'diff': [9.219499999999978e-05, 9.201400000000137e-05, 9.198599999999876e-05, 9.208299999999975e-05, 9.194400000000005e-05, 9.206900000000018e-05, 9.261099999999939e-05, 9.243100000000046e-05, 9.2097...</msg>
<status status="PASS" starttime="20201029 12:46:49.510" endtime="20201029 12:46:49.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.517" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 12:46:49.516" endtime="20201029 12:46:49.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.520" level="INFO">VALUE: [9.219499999999978e-05, 9.201400000000137e-05, 9.198599999999876e-05, 9.208299999999975e-05, 9.194400000000005e-05, 9.206900000000018e-05, 9.261099999999939e-05, 9.243100000000046e-05, 9.209700000000279e-05, 9.180599999999983e-05, 9.226399999999815e-05, 9.208399999999922e-05, 9.25000000000023e-05, 9.223700000000196e-05, 9.187499999999821e-05, 9.188899999999778e-05, 9.247299999999917e-05, 9.218000000000073e-05, 9.179100000000079e-05, 9.202800000000094e-05, 9.187500000000168e-05, 9.177800000000069e-05, 9.224999999999858e-05, 9.252799999999797e-05, 9.255600000000058e-05, 9.263899999999853e-05, 9.229200000000076e-05, 9.257000000000015e-05, 9.191700000000039e-05, 9.21390000000015e-05, 9.270899999999985e-05, 9.173599999999851e-05, 9.212499999999846e-05, 9.272199999999994e-05, 9.191600000000091e-05, 9.262499999999896e-05, 9.258300000000025e-05, 9.240300000000132e-05, 9.19719999999992e-05, 9.2333e-05, 9.204199999999704e-05, 9.198599999999876e-05, 9.238899999999828e-05, 9.211099999999889e-05, 9.248599999999926e-05, 9.18199999999994e-05, 9.259699999999982e-05, 9.220799999999987e-05, 9.205600000000008e-05, 9.179200000000026e-05]</msg>
<status status="PASS" starttime="20201029 12:46:49.518" endtime="20201029 12:46:49.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.514" endtime="20201029 12:46:49.526"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:49.529" endtime="20201029 12:46:49.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.528" endtime="20201029 12:46:49.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.527" endtime="20201029 12:46:49.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.164" endtime="20201029 12:46:49.550"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.163" endtime="20201029 12:46:49.550"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.558" endtime="20201029 12:46:49.577"></status>
</kw>
<msg timestamp="20201029 12:46:49.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.557" endtime="20201029 12:46:49.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.579" endtime="20201029 12:46:49.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.581" endtime="20201029 12:46:49.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.554" endtime="20201029 12:46:49.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.552" endtime="20201029 12:46:49.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.590" endtime="20201029 12:46:49.876"></status>
</kw>
<msg timestamp="20201029 12:46:49.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0216005, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021693903, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:49.589" endtime="20201029 12:46:49.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0216005, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021693903, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:49.880" endtime="20201029 12:46:49.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.888" endtime="20201029 12:46:49.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.586" endtime="20201029 12:46:49.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.584" endtime="20201029 12:46:49.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:49.894" level="INFO">${RESULT} = [{'diff': 9.340299999999885e-05}, {'diff': 9.284700000000007e-05}, {'diff': 9.29720000000002e-05}, {'diff': 9.329200000000176e-05}, {'diff': 9.326399999999915e-05}, {'diff': 9.368100000000171e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:49.891" endtime="20201029 12:46:49.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:49.900" level="INFO">${ACCURACY} = {'diff': [9.340299999999885e-05, 9.284700000000007e-05, 9.29720000000002e-05, 9.329200000000176e-05, 9.326399999999915e-05, 9.368100000000171e-05, 9.299999999999933e-05, 9.299999999999933e-05, 9.30970...</msg>
<status status="PASS" starttime="20201029 12:46:49.895" endtime="20201029 12:46:49.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.904" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 12:46:49.903" endtime="20201029 12:46:49.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.907" level="INFO">VALUE: [9.340299999999885e-05, 9.284700000000007e-05, 9.29720000000002e-05, 9.329200000000176e-05, 9.326399999999915e-05, 9.368100000000171e-05, 9.299999999999933e-05, 9.299999999999933e-05, 9.309700000000032e-05, 9.3333000000001e-05, 9.311099999999989e-05, 9.33200000000009e-05, 9.284799999999954e-05, 9.286199999999911e-05, 9.288899999999878e-05, 9.336199999999961e-05, 9.348699999999974e-05, 9.362499999999996e-05, 9.280499999999789e-05, 9.330600000000133e-05, 9.305499999999814e-05, 9.327799999999872e-05, 9.34720000000007e-05, 9.302799999999847e-05, 9.294400000000105e-05, 9.279199999999779e-05, 9.322200000000044e-05, 9.304199999999804e-05, 9.28200000000004e-05, 9.34590000000006e-05, 9.319500000000078e-05, 9.354199999999854e-05, 9.307000000000065e-05, 9.28879999999993e-05, 9.356999999999768e-05, 9.327699999999925e-05, 9.345800000000112e-05, 9.30139999999989e-05, 9.31529999999986e-05, 9.348600000000026e-05, 9.277800000000169e-05, 9.312499999999946e-05, 9.309700000000032e-05, 9.355600000000158e-05, 9.284700000000007e-05, 9.3639000000003e-05, 9.312499999999946e-05, 9.354200000000201e-05, 9.30139999999989e-05, 9.338900000000275e-05]</msg>
<status status="PASS" starttime="20201029 12:46:49.905" endtime="20201029 12:46:49.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.900" endtime="20201029 12:46:49.909"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:49.912" endtime="20201029 12:46:49.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.911" endtime="20201029 12:46:49.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.910" endtime="20201029 12:46:49.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.551" endtime="20201029 12:46:49.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.550" endtime="20201029 12:46:49.933"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.942" endtime="20201029 12:46:49.961"></status>
</kw>
<msg timestamp="20201029 12:46:49.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.940" endtime="20201029 12:46:49.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.962" endtime="20201029 12:46:49.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.965" endtime="20201029 12:46:49.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.938" endtime="20201029 12:46:49.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.936" endtime="20201029 12:46:49.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.974" endtime="20201029 12:46:50.261"></status>
</kw>
<msg timestamp="20201029 12:46:50.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022048944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022143139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:49.972" endtime="20201029 12:46:50.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022048944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022143139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:50.265" endtime="20201029 12:46:50.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.273" endtime="20201029 12:46:50.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.970" endtime="20201029 12:46:50.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.968" endtime="20201029 12:46:50.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:50.280" level="INFO">${RESULT} = [{'diff': 9.419499999999831e-05}, {'diff': 9.376399999999965e-05}, {'diff': 9.395800000000162e-05}, {'diff': 9.400000000000033e-05}, {'diff': 9.412500000000046e-05}, {'diff': 9.418099999999874e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:50.277" endtime="20201029 12:46:50.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:50.284" level="INFO">${ACCURACY} = {'diff': [9.419499999999831e-05, 9.376399999999965e-05, 9.395800000000162e-05, 9.400000000000033e-05, 9.412500000000046e-05, 9.418099999999874e-05, 9.394399999999858e-05, 9.39859999999973e-05, 9.45980...</msg>
<status status="PASS" starttime="20201029 12:46:50.281" endtime="20201029 12:46:50.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.289" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 12:46:50.287" endtime="20201029 12:46:50.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.291" level="INFO">VALUE: [9.419499999999831e-05, 9.376399999999965e-05, 9.395800000000162e-05, 9.400000000000033e-05, 9.412500000000046e-05, 9.418099999999874e-05, 9.394399999999858e-05, 9.39859999999973e-05, 9.459800000000129e-05, 9.411200000000036e-05, 9.395800000000162e-05, 9.443000000000298e-05, 9.373600000000051e-05, 9.391700000000239e-05, 9.420900000000135e-05, 9.450000000000083e-05, 9.450000000000083e-05, 9.455499999999964e-05, 9.45140000000004e-05, 9.456899999999921e-05, 9.408299999999828e-05, 9.452799999999997e-05, 9.44720000000017e-05, 9.416699999999917e-05, 9.465200000000062e-05, 9.423599999999754e-05, 9.438900000000028e-05, 9.425000000000058e-05, 9.45140000000004e-05, 9.445899999999813e-05, 9.39590000000011e-05, 9.390199999999987e-05, 9.387500000000021e-05, 9.455599999999911e-05, 9.411099999999742e-05, 9.412500000000046e-05, 9.434700000000157e-05, 9.45140000000004e-05, 9.425000000000058e-05, 9.441700000000289e-05, 9.425000000000058e-05, 9.377799999999922e-05, 9.461099999999792e-05, 9.454199999999954e-05, 9.380600000000183e-05, 9.444499999999856e-05, 9.449999999999736e-05, 9.380599999999836e-05, 9.429200000000276e-05, 9.454100000000007e-05]</msg>
<status status="PASS" starttime="20201029 12:46:50.290" endtime="20201029 12:46:50.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.285" endtime="20201029 12:46:50.292"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:50.296" endtime="20201029 12:46:50.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.294" endtime="20201029 12:46:50.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.293" endtime="20201029 12:46:50.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.934" endtime="20201029 12:46:50.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.934" endtime="20201029 12:46:50.316"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.325" endtime="20201029 12:46:50.346"></status>
</kw>
<msg timestamp="20201029 12:46:50.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.323" endtime="20201029 12:46:50.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.348" endtime="20201029 12:46:50.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.350" endtime="20201029 12:46:50.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.321" endtime="20201029 12:46:50.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.319" endtime="20201029 12:46:50.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.359" endtime="20201029 12:46:50.645"></status>
</kw>
<msg timestamp="20201029 12:46:50.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024643069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024738056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:50.357" endtime="20201029 12:46:50.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024643069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024738056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:50.649" endtime="20201029 12:46:50.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.657" endtime="20201029 12:46:50.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.355" endtime="20201029 12:46:50.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.353" endtime="20201029 12:46:50.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:50.664" level="INFO">${RESULT} = [{'diff': 9.498700000000124e-05}, {'diff': 9.505500000000014e-05}, {'diff': 9.484700000000207e-05}, {'diff': 9.555600000000011e-05}, {'diff': 9.558299999999978e-05}, {'diff': 9.479199999999979e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:50.661" endtime="20201029 12:46:50.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:50.668" level="INFO">${ACCURACY} = {'diff': [9.498700000000124e-05, 9.505500000000014e-05, 9.484700000000207e-05, 9.555600000000011e-05, 9.558299999999978e-05, 9.479199999999979e-05, 9.51530000000006e-05, 9.512500000000146e-05, 9.50979...</msg>
<status status="PASS" starttime="20201029 12:46:50.665" endtime="20201029 12:46:50.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.672" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 12:46:50.671" endtime="20201029 12:46:50.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.675" level="INFO">VALUE: [9.498700000000124e-05, 9.505500000000014e-05, 9.484700000000207e-05, 9.555600000000011e-05, 9.558299999999978e-05, 9.479199999999979e-05, 9.51530000000006e-05, 9.512500000000146e-05, 9.509799999999832e-05, 9.542999999999704e-05, 9.55140000000014e-05, 9.49859999999983e-05, 9.53469999999991e-05, 9.554200000000054e-05, 9.523599999999854e-05, 9.523600000000201e-05, 9.538900000000128e-05, 9.50140000000009e-05, 9.559699999999935e-05, 9.52079999999994e-05, 9.494399999999958e-05, 9.513900000000103e-05, 9.529200000000029e-05, 9.479199999999979e-05, 9.561100000000239e-05, 9.533400000000247e-05, 9.534799999999857e-05, 9.501399999999743e-05, 9.55279999999975e-05, 9.559699999999935e-05, 9.522199999999897e-05, 9.51660000000007e-05, 9.48469999999986e-05, 9.490300000000035e-05, 9.488900000000078e-05, 9.513900000000103e-05, 9.552800000000097e-05, 9.577800000000122e-05, 9.512499999999799e-05, 9.505599999999961e-05, 9.526399999999768e-05, 9.49729999999982e-05, 9.511099999999842e-05, 9.551399999999793e-05, 9.566700000000067e-05, 9.484800000000154e-05, 9.56660000000012e-05, 9.511100000000189e-05, 9.504100000000057e-05, 9.558299999999978e-05]</msg>
<status status="PASS" starttime="20201029 12:46:50.673" endtime="20201029 12:46:50.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.669" endtime="20201029 12:46:50.677"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:50.680" endtime="20201029 12:46:50.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.679" endtime="20201029 12:46:50.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.678" endtime="20201029 12:46:50.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.317" endtime="20201029 12:46:50.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.317" endtime="20201029 12:46:50.701"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.709" endtime="20201029 12:46:50.728"></status>
</kw>
<msg timestamp="20201029 12:46:50.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.708" endtime="20201029 12:46:50.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.730" endtime="20201029 12:46:50.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.732" endtime="20201029 12:46:50.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.705" endtime="20201029 12:46:50.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.703" endtime="20201029 12:46:50.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.741" endtime="20201029 12:46:51.026"></status>
</kw>
<msg timestamp="20201029 12:46:51.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021556486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021653306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:50.740" endtime="20201029 12:46:51.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021556486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021653306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:51.030" endtime="20201029 12:46:51.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.039" endtime="20201029 12:46:51.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.737" endtime="20201029 12:46:51.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.735" endtime="20201029 12:46:51.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:51.045" level="INFO">${RESULT} = [{'diff': 9.682000000000093e-05}, {'diff': 9.662499999999949e-05}, {'diff': 9.615299999999813e-05}, {'diff': 9.599999999999886e-05}, {'diff': 9.595799999999668e-05}, {'diff': 9.655599999999764e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:51.042" endtime="20201029 12:46:51.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:51.050" level="INFO">${ACCURACY} = {'diff': [9.682000000000093e-05, 9.662499999999949e-05, 9.615299999999813e-05, 9.599999999999886e-05, 9.595799999999668e-05, 9.655599999999764e-05, 9.62920000000013e-05, 9.662499999999949e-05, 9.62920...</msg>
<status status="PASS" starttime="20201029 12:46:51.046" endtime="20201029 12:46:51.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.054" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 12:46:51.053" endtime="20201029 12:46:51.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.057" level="INFO">VALUE: [9.682000000000093e-05, 9.662499999999949e-05, 9.615299999999813e-05, 9.599999999999886e-05, 9.595799999999668e-05, 9.655599999999764e-05, 9.62920000000013e-05, 9.662499999999949e-05, 9.62920000000013e-05, 9.577800000000122e-05, 9.626399999999868e-05, 9.576399999999818e-05, 9.575000000000208e-05, 9.655599999999764e-05, 9.645800000000065e-05, 9.633300000000053e-05, 9.656899999999774e-05, 9.62080000000004e-05, 9.67080000000009e-05, 9.637499999999924e-05, 9.654199999999807e-05, 9.598600000000276e-05, 9.629199999999782e-05, 9.645800000000065e-05, 9.594500000000006e-05, 9.663900000000253e-05, 9.656899999999774e-05, 9.627800000000172e-05, 9.662499999999949e-05, 9.636199999999914e-05, 9.619500000000031e-05, 9.633300000000053e-05, 9.644400000000108e-05, 9.672200000000047e-05, 9.580500000000089e-05, 9.591600000000144e-05, 9.583300000000003e-05, 9.587500000000221e-05, 9.651399999999893e-05, 9.623599999999954e-05, 9.594500000000006e-05, 9.654200000000154e-05, 9.58469999999996e-05, 9.637499999999924e-05, 9.612499999999899e-05, 9.590299999999788e-05, 9.598699999999877e-05, 9.638799999999934e-05, 9.592999999999755e-05, 9.649999999999936e-05]</msg>
<status status="PASS" starttime="20201029 12:46:51.055" endtime="20201029 12:46:51.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.051" endtime="20201029 12:46:51.058"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:51.062" endtime="20201029 12:46:51.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.060" endtime="20201029 12:46:51.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.059" endtime="20201029 12:46:51.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.702" endtime="20201029 12:46:51.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.701" endtime="20201029 12:46:51.082"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.091" endtime="20201029 12:46:51.110"></status>
</kw>
<msg timestamp="20201029 12:46:51.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.089" endtime="20201029 12:46:51.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.112" endtime="20201029 12:46:51.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.115" endtime="20201029 12:46:51.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.087" endtime="20201029 12:46:51.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.085" endtime="20201029 12:46:51.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.124" endtime="20201029 12:46:51.410"></status>
</kw>
<msg timestamp="20201029 12:46:51.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021605236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021702181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:51.123" endtime="20201029 12:46:51.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021605236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021702181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:51.415" endtime="20201029 12:46:51.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.423" endtime="20201029 12:46:51.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.120" endtime="20201029 12:46:51.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.118" endtime="20201029 12:46:51.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:51.429" level="INFO">${RESULT} = [{'diff': 9.694500000000106e-05}, {'diff': 9.740300000000285e-05}, {'diff': 9.762500000000049e-05}, {'diff': 9.729199999999882e-05}, {'diff': 9.756999999999821e-05}, {'diff': 9.68470000000006e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:51.426" endtime="20201029 12:46:51.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:51.433" level="INFO">${ACCURACY} = {'diff': [9.694500000000106e-05, 9.740300000000285e-05, 9.762500000000049e-05, 9.729199999999882e-05, 9.756999999999821e-05, 9.68470000000006e-05, 9.737500000000024e-05, 9.67920000000018e-05, 9.694500...</msg>
<status status="PASS" starttime="20201029 12:46:51.430" endtime="20201029 12:46:51.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.438" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 12:46:51.437" endtime="20201029 12:46:51.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.440" level="INFO">VALUE: [9.694500000000106e-05, 9.740300000000285e-05, 9.762500000000049e-05, 9.729199999999882e-05, 9.756999999999821e-05, 9.68470000000006e-05, 9.737500000000024e-05, 9.67920000000018e-05, 9.694500000000106e-05, 9.744399999999862e-05, 9.741599999999948e-05, 9.73470000000011e-05, 9.708300000000128e-05, 9.69860000000003e-05, 9.733299999999806e-05, 9.686100000000017e-05, 9.773600000000104e-05, 9.741699999999895e-05, 9.724999999999664e-05, 9.688900000000278e-05, 9.708300000000128e-05, 9.752800000000297e-05, 9.768099999999877e-05, 9.687499999999974e-05, 9.740299999999938e-05, 9.723600000000054e-05, 9.75279999999995e-05, 9.699999999999986e-05, 9.71669999999987e-05, 9.688899999999931e-05, 9.742999999999905e-05, 9.751399999999993e-05, 9.690299999999888e-05, 9.72080000000014e-05, 9.691699999999845e-05, 9.754200000000254e-05, 9.725000000000011e-05, 9.68059999999979e-05, 9.745900000000113e-05, 9.695900000000063e-05, 9.694500000000106e-05, 9.754199999999907e-05, 9.684699999999713e-05, 9.757000000000168e-05, 9.681899999999799e-05, 9.758299999999831e-05, 9.687499999999974e-05, 9.676399999999918e-05, 9.697199999999725e-05, 9.697200000000072e-05]</msg>
<status status="PASS" starttime="20201029 12:46:51.439" endtime="20201029 12:46:51.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.434" endtime="20201029 12:46:51.442"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:51.445" endtime="20201029 12:46:51.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.444" endtime="20201029 12:46:51.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.443" endtime="20201029 12:46:51.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.083" endtime="20201029 12:46:51.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.083" endtime="20201029 12:46:51.466"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.475" endtime="20201029 12:46:51.494"></status>
</kw>
<msg timestamp="20201029 12:46:51.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.473" endtime="20201029 12:46:51.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.495" endtime="20201029 12:46:51.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.498" endtime="20201029 12:46:51.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.471" endtime="20201029 12:46:51.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.468" endtime="20201029 12:46:51.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.507" endtime="20201029 12:46:51.793"></status>
</kw>
<msg timestamp="20201029 12:46:51.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022867667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022966347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:51.505" endtime="20201029 12:46:51.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022867667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022966347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:51.797" endtime="20201029 12:46:51.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.805" endtime="20201029 12:46:51.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.503" endtime="20201029 12:46:51.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.501" endtime="20201029 12:46:51.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:51.812" level="INFO">${RESULT} = [{'diff': 9.86800000000003e-05}, {'diff': 9.801400000000043e-05}, {'diff': 9.859700000000235e-05}, {'diff': 9.850000000000136e-05}, {'diff': 9.847199999999875e-05}, {'diff': 9.86800000000003e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:51.809" endtime="20201029 12:46:51.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:51.816" level="INFO">${ACCURACY} = {'diff': [9.86800000000003e-05, 9.801400000000043e-05, 9.859700000000235e-05, 9.850000000000136e-05, 9.847199999999875e-05, 9.86800000000003e-05, 9.858299999999931e-05, 9.844399999999962e-05, 9.848599...</msg>
<status status="PASS" starttime="20201029 12:46:51.813" endtime="20201029 12:46:51.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.820" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 12:46:51.819" endtime="20201029 12:46:51.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.823" level="INFO">VALUE: [9.86800000000003e-05, 9.801400000000043e-05, 9.859700000000235e-05, 9.850000000000136e-05, 9.847199999999875e-05, 9.86800000000003e-05, 9.858299999999931e-05, 9.844399999999962e-05, 9.848599999999832e-05, 9.780499999999942e-05, 9.84860000000018e-05, 9.829100000000035e-05, 9.831899999999949e-05, 9.808400000000175e-05, 9.823600000000154e-05, 9.783300000000203e-05, 9.8028e-05, 9.81669999999997e-05, 9.795899999999816e-05, 9.783399999999803e-05, 9.859699999999888e-05, 9.863799999999812e-05, 9.851299999999799e-05, 9.804099999999663e-05, 9.819400000000283e-05, 9.808300000000228e-05, 9.809700000000185e-05, 9.781899999999899e-05, 9.820799999999894e-05, 9.794399999999912e-05, 9.801400000000043e-05, 9.813900000000056e-05, 9.826399999999721e-05, 9.859699999999888e-05, 9.784800000000107e-05, 9.788900000000031e-05, 9.806900000000271e-05, 9.777799999999975e-05, 9.844399999999962e-05, 9.836100000000167e-05, 9.866600000000073e-05, 9.827800000000025e-05, 9.800000000000086e-05, 9.819399999999937e-05, 9.804199999999957e-05, 9.805600000000261e-05, 9.85280000000005e-05, 9.784800000000107e-05, 9.837500000000124e-05, 9.834800000000157e-05]</msg>
<status status="PASS" starttime="20201029 12:46:51.821" endtime="20201029 12:46:51.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.817" endtime="20201029 12:46:51.825"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:51.828" endtime="20201029 12:46:51.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.827" endtime="20201029 12:46:51.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.826" endtime="20201029 12:46:51.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.467" endtime="20201029 12:46:51.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.466" endtime="20201029 12:46:51.849"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.858" endtime="20201029 12:46:51.877"></status>
</kw>
<msg timestamp="20201029 12:46:51.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.856" endtime="20201029 12:46:51.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.878" endtime="20201029 12:46:51.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.881" endtime="20201029 12:46:51.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.853" endtime="20201029 12:46:51.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.851" endtime="20201029 12:46:51.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.890" endtime="20201029 12:46:52.175"></status>
</kw>
<msg timestamp="20201029 12:46:52.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022151306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022250125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:51.888" endtime="20201029 12:46:52.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022151306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022250125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:52.179" endtime="20201029 12:46:52.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.187" endtime="20201029 12:46:52.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.885" endtime="20201029 12:46:52.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.884" endtime="20201029 12:46:52.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:52.194" level="INFO">${RESULT} = [{'diff': 9.881899999999999e-05}, {'diff': 9.937499999999877e-05}, {'diff': 9.919400000000037e-05}, {'diff': 9.913900000000156e-05}, {'diff': 9.886100000000217e-05}, {'diff': 9.973599999999957e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:52.191" endtime="20201029 12:46:52.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:52.199" level="INFO">${ACCURACY} = {'diff': [9.881899999999999e-05, 9.937499999999877e-05, 9.919400000000037e-05, 9.913900000000156e-05, 9.886100000000217e-05, 9.973599999999957e-05, 9.927800000000125e-05, 9.937499999999877e-05, 9.9069...</msg>
<status status="PASS" starttime="20201029 12:46:52.195" endtime="20201029 12:46:52.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.203" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 12:46:52.202" endtime="20201029 12:46:52.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.205" level="INFO">VALUE: [9.881899999999999e-05, 9.937499999999877e-05, 9.919400000000037e-05, 9.913900000000156e-05, 9.886100000000217e-05, 9.973599999999957e-05, 9.927800000000125e-05, 9.937499999999877e-05, 9.906900000000024e-05, 9.958299999999684e-05, 9.918100000000027e-05, 9.879200000000032e-05, 9.895899999999916e-05, 9.967999999999783e-05, 9.877800000000075e-05, 9.918100000000027e-05, 9.883299999999956e-05, 9.93060000000004e-05, 9.891600000000098e-05, 9.90549999999972e-05, 9.90410000000011e-05, 9.956900000000074e-05, 9.916600000000123e-05, 9.941700000000095e-05, 9.915299999999766e-05, 9.945800000000019e-05, 9.957000000000021e-05, 9.95280000000015e-05, 9.962500000000249e-05, 9.95419999999976e-05, 9.941700000000095e-05, 9.93060000000004e-05, 9.944500000000009e-05, 9.934699999999963e-05, 9.913799999999862e-05, 9.89999999999984e-05, 9.887499999999827e-05, 9.880500000000042e-05, 9.956899999999727e-05, 9.940299999999791e-05, 9.911099999999895e-05, 9.947199999999976e-05, 9.944500000000009e-05, 9.96809999999973e-05, 9.9028000000001e-05, 9.941700000000095e-05, 9.9028000000001e-05, 9.93060000000004e-05, 9.90549999999972e-05, 9.874999999999814e-05]</msg>
<status status="PASS" starttime="20201029 12:46:52.204" endtime="20201029 12:46:52.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.200" endtime="20201029 12:46:52.207"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:52.210" endtime="20201029 12:46:52.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.209" endtime="20201029 12:46:52.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.208" endtime="20201029 12:46:52.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.850" endtime="20201029 12:46:52.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.849" endtime="20201029 12:46:52.231"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.240" endtime="20201029 12:46:52.259"></status>
</kw>
<msg timestamp="20201029 12:46:52.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.238" endtime="20201029 12:46:52.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.260" endtime="20201029 12:46:52.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.262" endtime="20201029 12:46:52.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.235" endtime="20201029 12:46:52.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.233" endtime="20201029 12:46:52.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.271" endtime="20201029 12:46:52.558"></status>
</kw>
<msg timestamp="20201029 12:46:52.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021978569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022078486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:52.270" endtime="20201029 12:46:52.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021978569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022078486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:52.562" endtime="20201029 12:46:52.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.570" endtime="20201029 12:46:52.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.267" endtime="20201029 12:46:52.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.266" endtime="20201029 12:46:52.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:52.577" level="INFO">${RESULT} = [{'diff': 9.991700000000145e-05}, {'diff': 0.00010059700000000088}, {'diff': 9.995800000000069e-05}, {'diff': 0.00010012500000000299}, {'diff': 0.00010002699999999906}, {'diff': 9.987499999999927e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:52.574" endtime="20201029 12:46:52.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:52.581" level="INFO">${ACCURACY} = {'diff': [9.991700000000145e-05, 0.00010059700000000088, 9.995800000000069e-05, 0.00010012500000000299, 0.00010002699999999906, 9.987499999999927e-05, 9.997200000000026e-05, 0.00010044399999999815, 0....</msg>
<status status="PASS" starttime="20201029 12:46:52.578" endtime="20201029 12:46:52.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.585" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 12:46:52.584" endtime="20201029 12:46:52.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.588" level="INFO">VALUE: [9.991700000000145e-05, 0.00010059700000000088, 9.995800000000069e-05, 0.00010012500000000299, 0.00010002699999999906, 9.987499999999927e-05, 9.997200000000026e-05, 0.00010044399999999815, 0.00010062500000000002, 9.98060000000009e-05, 9.99999999999994e-05, 9.987500000000274e-05, 0.00010075000000000014, 0.00010038899999999934, 0.00010024999999999964, 0.00010051399999999946, 0.00010051299999999999, 0.00010048600000000033, 0.00010031900000000149, 0.00010004099999999863, 0.00010065299999999916, 0.00010045799999999772, 0.00010027699999999931, 0.00010030499999999845, 0.00010051399999999946, 0.000100028000000002, 0.00010047200000000076, 0.00010047199999999729, 0.00010026399999999921, 0.00010027799999999878, 0.00010065299999999916, 0.00010058399999999731, 9.993100000000102e-05, 0.00010061199999999992, 0.00010007000000000071, 0.0001005549999999987, 0.0001004999999999999, 0.00010054099999999913, 9.983300000000056e-05, 0.00010052799999999903, 0.00010040299999999891, 0.00010000000000000286, 0.00010012499999999952, 0.00010043100000000152, 0.0001005419999999986, 0.00010044400000000162, 0.00010048600000000033, 0.00010029200000000182, 0.00010059800000000035, 0.00010001399999999896]</msg>
<status status="PASS" starttime="20201029 12:46:52.586" endtime="20201029 12:46:52.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.582" endtime="20201029 12:46:52.589"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:52.593" endtime="20201029 12:46:52.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.591" endtime="20201029 12:46:52.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.590" endtime="20201029 12:46:52.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.232" endtime="20201029 12:46:52.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.231" endtime="20201029 12:46:52.613"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.622" endtime="20201029 12:46:52.642"></status>
</kw>
<msg timestamp="20201029 12:46:52.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.620" endtime="20201029 12:46:52.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.643" endtime="20201029 12:46:52.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.645" endtime="20201029 12:46:52.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.618" endtime="20201029 12:46:52.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.616" endtime="20201029 12:46:52.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.654" endtime="20201029 12:46:52.941"></status>
</kw>
<msg timestamp="20201029 12:46:52.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022703306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022804361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:52.653" endtime="20201029 12:46:52.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022703306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022804361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:52.945" endtime="20201029 12:46:52.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.953" endtime="20201029 12:46:52.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.650" endtime="20201029 12:46:52.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.649" endtime="20201029 12:46:52.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:52.960" level="INFO">${RESULT} = [{'diff': 0.0001010549999999992}, {'diff': 0.00010156899999999927}, {'diff': 0.00010148599999999786}, {'diff': 0.00010136099999999773}, {'diff': 0.0001011800000000028}, {'diff': 0.00010095900000000116...</msg>
<status status="PASS" starttime="20201029 12:46:52.957" endtime="20201029 12:46:52.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:52.964" level="INFO">${ACCURACY} = {'diff': [0.0001010549999999992, 0.00010156899999999927, 0.00010148599999999786, 0.00010136099999999773, 0.0001011800000000028, 0.00010095900000000116, 0.0001016939999999994, 0.00010142999999999958, 0...</msg>
<status status="PASS" starttime="20201029 12:46:52.961" endtime="20201029 12:46:52.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.969" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 12:46:52.968" endtime="20201029 12:46:52.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.971" level="INFO">VALUE: [0.0001010549999999992, 0.00010156899999999927, 0.00010148599999999786, 0.00010136099999999773, 0.0001011800000000028, 0.00010095900000000116, 0.0001016939999999994, 0.00010142999999999958, 0.00010131899999999902, 0.00010126400000000021, 0.00010140299999999991, 0.00010134699999999816, 0.00010126400000000021, 0.00010157000000000221, 0.00010140299999999991, 0.0001010419999999991, 0.00010124999999999718, 0.00010145800000000219, 0.00010076300000000024, 0.00010102700000000006, 0.0001016939999999994, 0.00010080500000000242, 0.00010109700000000138, 0.00010102799999999953, 0.00010080599999999842, 0.0001010419999999991, 0.00010155600000000264, 0.00010148600000000133, 0.0001015000000000009, 0.00010090299999999941, 0.00010093099999999855, 0.00010132000000000196, 0.00010090299999999941, 0.00010122300000000098, 0.00010126400000000021, 0.00010111099999999748, 0.00010143000000000305, 0.00010162500000000102, 0.000101416, 0.00010122199999999804, 0.00010120800000000194, 0.00010127799999999978, 0.00010113900000000009, 0.00010113900000000009, 0.00010098599999999736, 0.00010109700000000138, 0.00010098600000000083, 0.000101416, 0.0001011809999999988, 0.00010147200000000176]</msg>
<status status="PASS" starttime="20201029 12:46:52.970" endtime="20201029 12:46:52.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.965" endtime="20201029 12:46:52.973"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:52.977" endtime="20201029 12:46:52.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.975" endtime="20201029 12:46:52.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.974" endtime="20201029 12:46:52.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.614" endtime="20201029 12:46:52.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.613" endtime="20201029 12:46:52.998"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.006" endtime="20201029 12:46:53.025"></status>
</kw>
<msg timestamp="20201029 12:46:53.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.005" endtime="20201029 12:46:53.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.027" endtime="20201029 12:46:53.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.029" endtime="20201029 12:46:53.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.002" endtime="20201029 12:46:53.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.000" endtime="20201029 12:46:53.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.038" endtime="20201029 12:46:53.323"></status>
</kw>
<msg timestamp="20201029 12:46:53.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021641444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021743431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:53.037" endtime="20201029 12:46:53.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021641444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021743431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:53.327" endtime="20201029 12:46:53.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.335" endtime="20201029 12:46:53.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.034" endtime="20201029 12:46:53.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.032" endtime="20201029 12:46:53.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:53.342" level="INFO">${RESULT} = [{'diff': 0.0001019870000000013}, {'diff': 0.00010226400000000122}, {'diff': 0.00010234699999999916}, {'diff': 0.00010190300000000041}, {'diff': 0.00010233299999999959}, {'diff': 0.0001026109999999989...</msg>
<status status="PASS" starttime="20201029 12:46:53.339" endtime="20201029 12:46:53.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:53.346" level="INFO">${ACCURACY} = {'diff': [0.0001019870000000013, 0.00010226400000000122, 0.00010234699999999916, 0.00010190300000000041, 0.00010233299999999959, 0.00010261099999999898, 0.00010219499999999937, 0.00010184700000000213,...</msg>
<status status="PASS" starttime="20201029 12:46:53.343" endtime="20201029 12:46:53.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.351" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 12:46:53.350" endtime="20201029 12:46:53.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.353" level="INFO">VALUE: [0.0001019870000000013, 0.00010226400000000122, 0.00010234699999999916, 0.00010190300000000041, 0.00010233299999999959, 0.00010261099999999898, 0.00010219499999999937, 0.00010184700000000213, 0.00010265300000000116, 0.00010179199999999985, 0.00010263899999999812, 0.00010224999999999818, 0.00010190200000000094, 0.00010229100000000088, 0.0001025420000000006, 0.0001025550000000007, 0.00010247199999999929, 0.00010190300000000041, 0.00010216700000000023, 0.00010183300000000256, 0.0001025420000000006, 0.0001020000000000014, 0.00010243000000000058, 0.00010208400000000228, 0.00010219499999999937, 0.00010194499999999912, 0.00010248699999999833, 0.00010224999999999818, 0.00010177700000000081, 0.00010252700000000156, 0.0001025550000000007, 0.00010259699999999941, 0.00010227800000000078, 0.00010261099999999898, 0.00010243100000000005, 0.00010176400000000071, 0.00010201400000000097, 0.00010230599999999992, 0.00010198599999999836, 0.00010222199999999904, 0.00010261099999999898, 0.00010195899999999869, 0.00010236099999999873, 0.0001019870000000013, 0.0001019160000000005, 0.00010225000000000165, 0.00010184699999999866, 0.00010256900000000027, 0.00010190300000000041, 0.00010191699999999998]</msg>
<status status="PASS" starttime="20201029 12:46:53.352" endtime="20201029 12:46:53.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.347" endtime="20201029 12:46:53.355"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:53.358" endtime="20201029 12:46:53.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.357" endtime="20201029 12:46:53.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.355" endtime="20201029 12:46:53.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.998" endtime="20201029 12:46:53.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.998" endtime="20201029 12:46:53.379"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.387" endtime="20201029 12:46:53.407"></status>
</kw>
<msg timestamp="20201029 12:46:53.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.386" endtime="20201029 12:46:53.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.409" endtime="20201029 12:46:53.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.411" endtime="20201029 12:46:53.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.383" endtime="20201029 12:46:53.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.381" endtime="20201029 12:46:53.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.420" endtime="20201029 12:46:53.707"></status>
</kw>
<msg timestamp="20201029 12:46:53.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021660347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021763764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:53.418" endtime="20201029 12:46:53.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021660347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021763764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:53.711" endtime="20201029 12:46:53.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.719" endtime="20201029 12:46:53.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.416" endtime="20201029 12:46:53.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.414" endtime="20201029 12:46:53.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:53.725" level="INFO">${RESULT} = [{'diff': 0.00010341700000000148}, {'diff': 0.00010331900000000102}, {'diff': 0.00010365199999999922}, {'diff': 0.00010349999999999943}, {'diff': 0.00010349999999999943}, {'diff': 0.000102763999999998...</msg>
<status status="PASS" starttime="20201029 12:46:53.722" endtime="20201029 12:46:53.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:53.729" level="INFO">${ACCURACY} = {'diff': [0.00010341700000000148, 0.00010331900000000102, 0.00010365199999999922, 0.00010349999999999943, 0.00010349999999999943, 0.00010276399999999825, 0.00010356900000000127, 0.00010281899999999705...</msg>
<status status="PASS" starttime="20201029 12:46:53.726" endtime="20201029 12:46:53.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.733" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 12:46:53.732" endtime="20201029 12:46:53.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.736" level="INFO">VALUE: [0.00010341700000000148, 0.00010331900000000102, 0.00010365199999999922, 0.00010349999999999943, 0.00010349999999999943, 0.00010276399999999825, 0.00010356900000000127, 0.00010281899999999705, 0.00010345800000000072, 0.00010316700000000123, 0.000103513999999999, 0.00010284699999999966, 0.00010376400000000272, 0.00010315300000000166, 0.00010313800000000262, 0.00010281900000000052, 0.00010352699999999909, 0.00010337500000000277, 0.00010313899999999862, 0.0001033749999999993, 0.00010279200000000085, 0.00010338899999999887, 0.00010295800000000022, 0.00010280599999999696, 0.00010369500000000087, 0.00010282, 0.00010357000000000074, 0.00010354099999999866, 0.00010312500000000252, 0.00010295899999999969, 0.00010327800000000179, 0.00010315199999999872, 0.00010293000000000108, 0.00010329100000000188, 0.0001030689999999973, 0.0001033749999999993, 0.0001028749999999988, 0.000103513999999999, 0.00010309699999999991, 0.00010341700000000148, 0.00010282, 0.00010282, 0.00010357000000000074, 0.00010284699999999966, 0.00010301400000000197, 0.00010307000000000024, 0.0001028749999999988, 0.0001030000000000024, 0.00010308300000000034, 0.00010288899999999837]</msg>
<status status="PASS" starttime="20201029 12:46:53.734" endtime="20201029 12:46:53.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.730" endtime="20201029 12:46:53.737"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:53.741" endtime="20201029 12:46:53.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.739" endtime="20201029 12:46:53.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.738" endtime="20201029 12:46:53.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.380" endtime="20201029 12:46:53.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.379" endtime="20201029 12:46:53.761"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.770" endtime="20201029 12:46:53.793"></status>
</kw>
<msg timestamp="20201029 12:46:53.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.768" endtime="20201029 12:46:53.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.794" endtime="20201029 12:46:53.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.797" endtime="20201029 12:46:53.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.766" endtime="20201029 12:46:53.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.764" endtime="20201029 12:46:53.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.805" endtime="20201029 12:46:54.091"></status>
</kw>
<msg timestamp="20201029 12:46:54.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024876389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024980653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:53.804" endtime="20201029 12:46:54.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024876389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024980653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:54.095" endtime="20201029 12:46:54.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.103" endtime="20201029 12:46:54.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.801" endtime="20201029 12:46:54.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.800" endtime="20201029 12:46:54.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:54.110" level="INFO">${RESULT} = [{'diff': 0.00010426399999999975}, {'diff': 0.00010384700000000066}, {'diff': 0.00010386100000000023}, {'diff': 0.00010459699999999794}, {'diff': 0.00010413899999999962}, {'diff': 0.000104013999999999...</msg>
<status status="PASS" starttime="20201029 12:46:54.107" endtime="20201029 12:46:54.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:54.114" level="INFO">${ACCURACY} = {'diff': [0.00010426399999999975, 0.00010384700000000066, 0.00010386100000000023, 0.00010459699999999794, 0.00010413899999999962, 0.0001040139999999995, 0.0001041949999999979, 0.00010426300000000027, ...</msg>
<status status="PASS" starttime="20201029 12:46:54.111" endtime="20201029 12:46:54.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.120" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 12:46:54.118" endtime="20201029 12:46:54.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.122" level="INFO">VALUE: [0.00010426399999999975, 0.00010384700000000066, 0.00010386100000000023, 0.00010459699999999794, 0.00010413899999999962, 0.0001040139999999995, 0.0001041949999999979, 0.00010426300000000027, 0.00010419399999999843, 0.00010438899999999987, 0.0001040139999999995, 0.00010423599999999714, 0.00010398600000000036, 0.0001045420000000026, 0.00010456999999999828, 0.00010395799999999775, 0.00010443100000000205, 0.00010422200000000104, 0.00010408400000000081, 0.00010394500000000112, 0.00010427799999999932, 0.00010399999999999993, 0.00010398699999999983, 0.00010423599999999714, 0.00010443000000000258, 0.00010405499999999873, 0.00010463900000000012, 0.00010427799999999932, 0.00010452799999999957, 0.00010394400000000165, 0.00010397200000000079, 0.00010436100000000073, 0.00010452800000000304, 0.00010413899999999962, 0.00010383400000000056, 0.0001040139999999995, 0.00010399999999999993, 0.00010444499999999815, 0.00010461100000000098, 0.00010398600000000036, 0.000104207999999998, 0.00010376399999999925, 0.00010445799999999825, 0.00010386100000000023, 0.0001045420000000026, 0.000104207999999998, 0.00010413899999999962, 0.0001047360000000011, 0.00010444499999999815, 0.00010398600000000036]</msg>
<status status="PASS" starttime="20201029 12:46:54.121" endtime="20201029 12:46:54.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.115" endtime="20201029 12:46:54.124"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:54.128" endtime="20201029 12:46:54.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.126" endtime="20201029 12:46:54.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.125" endtime="20201029 12:46:54.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.762" endtime="20201029 12:46:54.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.762" endtime="20201029 12:46:54.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.640" endtime="20201029 12:46:54.149"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:15.570" endtime="20201029 12:46:54.149" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:54.156" endtime="20201029 12:46:54.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.154" endtime="20201029 12:46:54.176"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.189" endtime="20201029 12:46:54.202"></status>
</kw>
<msg timestamp="20201029 12:46:54.203" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.187" endtime="20201029 12:46:54.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.205" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.204" endtime="20201029 12:46:54.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.208" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:54.206" endtime="20201029 12:46:54.209"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:54.184" endtime="20201029 12:46:54.209"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:54.182" endtime="20201029 12:46:54.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.181" endtime="20201029 12:46:54.210"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:54.214" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:54.213" endtime="20201029 12:46:54.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.211" endtime="20201029 12:46:54.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.180" endtime="20201029 12:46:54.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.180" endtime="20201029 12:46:54.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.215" endtime="20201029 12:46:54.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.178" endtime="20201029 12:46:54.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.176" endtime="20201029 12:46:54.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.153" endtime="20201029 12:46:54.218"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.229" endtime="20201029 12:46:54.244"></status>
</kw>
<msg timestamp="20201029 12:46:54.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.227" endtime="20201029 12:46:54.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.245" endtime="20201029 12:46:54.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.248" endtime="20201029 12:46:54.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.223" endtime="20201029 12:46:54.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.221" endtime="20201029 12:46:54.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.257" endtime="20201029 12:46:54.543"></status>
</kw>
<msg timestamp="20201029 12:46:54.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065588264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065610694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:54.256" endtime="20201029 12:46:54.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065588264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065610694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:54.547" endtime="20201029 12:46:54.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.555" endtime="20201029 12:46:54.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.253" endtime="20201029 12:46:54.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.251" endtime="20201029 12:46:54.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:54.562" level="INFO">${RESULT} = [{'diff': 2.2430000000003836e-05}, {'diff': 2.20969999999987e-05}, {'diff': 2.179100000000711e-05}, {'diff': 2.1902000000004196e-05}, {'diff': 2.211100000000521e-05}, {'diff': 2.2430000000003836e-05},...</msg>
<status status="PASS" starttime="20201029 12:46:54.558" endtime="20201029 12:46:54.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:54.566" level="INFO">${ACCURACY} = {'diff': [2.2430000000003836e-05, 2.20969999999987e-05, 2.179100000000711e-05, 2.1902000000004196e-05, 2.211100000000521e-05, 2.2430000000003836e-05, 2.234700000000589e-05, 2.1958000000002476e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 12:46:54.563" endtime="20201029 12:46:54.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.571" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 12:46:54.570" endtime="20201029 12:46:54.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.573" level="INFO">VALUE: [2.2430000000003836e-05, 2.20969999999987e-05, 2.179100000000711e-05, 2.1902000000004196e-05, 2.211100000000521e-05, 2.2430000000003836e-05, 2.234700000000589e-05, 2.1958000000002476e-05, 2.2250000000001435e-05, 2.1944000000009845e-05, 2.15969999999982e-05, 2.1958000000002476e-05, 2.206899999999956e-05, 2.2235999999994926e-05, 2.2041999999999895e-05, 2.2290999999993732e-05, 2.2346999999992012e-05, 2.2472000000009484e-05, 2.183299999999888e-05, 2.236099999999852e-05, 2.2457999999989098e-05, 2.188899999999716e-05, 2.1791999999992706e-05, 2.2042000000013773e-05, 2.238899999999766e-05, 2.208300000000607e-05, 2.2486000000002115e-05, 2.2056000000006404e-05, 2.181900000000625e-05, 2.19169999999963e-05, 2.2471999999995607e-05, 2.2319999999992346e-05, 2.1986000000001615e-05, 2.2000000000008124e-05, 2.2374999999991152e-05, 2.1805999999999215e-05, 2.2569999999999535e-05, 2.2000000000008124e-05, 2.2471999999995607e-05, 2.2473000000008958e-05, 2.219499999998875e-05, 2.2014000000000755e-05, 2.2499999999994746e-05, 2.237500000000503e-05, 2.2028000000007264e-05, 2.2277999999986697e-05, 2.1819999999991846e-05, 2.218099999999612e-05, 2.2528000000007764e-05, 2.215299999999698e-05]</msg>
<status status="PASS" starttime="20201029 12:46:54.572" endtime="20201029 12:46:54.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.566" endtime="20201029 12:46:54.574"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:54.578" endtime="20201029 12:46:54.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.576" endtime="20201029 12:46:54.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.575" endtime="20201029 12:46:54.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.220" endtime="20201029 12:46:54.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.219" endtime="20201029 12:46:54.598"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.607" endtime="20201029 12:46:54.626"></status>
</kw>
<msg timestamp="20201029 12:46:54.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.605" endtime="20201029 12:46:54.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.627" endtime="20201029 12:46:54.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.630" endtime="20201029 12:46:54.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.603" endtime="20201029 12:46:54.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.601" endtime="20201029 12:46:54.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.639" endtime="20201029 12:46:54.923"></status>
</kw>
<msg timestamp="20201029 12:46:54.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025707958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025730556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:54.637" endtime="20201029 12:46:54.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025707958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025730556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:54.928" endtime="20201029 12:46:54.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.936" endtime="20201029 12:46:54.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.635" endtime="20201029 12:46:54.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.633" endtime="20201029 12:46:54.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:54.943" level="INFO">${RESULT} = [{'diff': 2.2598000000002144e-05}, {'diff': 2.2026999999997382e-05}, {'diff': 2.1943999999999436e-05}, {'diff': 2.2292000000000145e-05}, {'diff': 2.2152000000000976e-05}, {'diff': 2.2472000000002545e-...</msg>
<status status="PASS" starttime="20201029 12:46:54.939" endtime="20201029 12:46:54.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:54.948" level="INFO">${ACCURACY} = {'diff': [2.2598000000002144e-05, 2.2026999999997382e-05, 2.1943999999999436e-05, 2.2292000000000145e-05, 2.2152000000000976e-05, 2.2472000000002545e-05, 2.188899999999716e-05, 2.2138000000001407e-05,...</msg>
<status status="PASS" starttime="20201029 12:46:54.944" endtime="20201029 12:46:54.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.952" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 12:46:54.951" endtime="20201029 12:46:54.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.955" level="INFO">VALUE: [2.2598000000002144e-05, 2.2026999999997382e-05, 2.1943999999999436e-05, 2.2292000000000145e-05, 2.2152000000000976e-05, 2.2472000000002545e-05, 2.188899999999716e-05, 2.2138000000001407e-05, 2.2430000000000366e-05, 2.17770000000006e-05, 2.2499999999998216e-05, 2.2166000000000546e-05, 2.181899999999931e-05, 2.231899999999981e-05, 2.231899999999981e-05, 2.1972000000002045e-05, 2.2457999999999506e-05, 2.1958000000002476e-05, 2.1971999999998576e-05, 2.2542000000000395e-05, 2.191699999999977e-05, 2.2555999999999965e-05, 2.2180000000000116e-05, 2.2180000000000116e-05, 2.2457999999999506e-05, 2.231899999999981e-05, 2.1971999999998576e-05, 2.2443999999999936e-05, 2.159700000000167e-05, 2.15830000000021e-05, 2.2513999999997786e-05, 2.2430000000000366e-05, 2.215300000000045e-05, 2.159700000000167e-05, 2.2262999999998062e-05, 2.2041999999999895e-05, 2.213900000000088e-05, 2.20969999999987e-05, 2.184699999999845e-05, 2.2292000000000145e-05, 2.184700000000192e-05, 2.15830000000021e-05, 2.245899999999898e-05, 2.233299999999938e-05, 2.2138000000001407e-05, 2.215300000000045e-05, 2.2041999999999895e-05, 2.237500000000156e-05, 2.1819999999998785e-05, 2.2305999999999715e-05]</msg>
<status status="PASS" starttime="20201029 12:46:54.953" endtime="20201029 12:46:54.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.949" endtime="20201029 12:46:54.955"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:54.959" endtime="20201029 12:46:54.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.958" endtime="20201029 12:46:54.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.956" endtime="20201029 12:46:54.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.599" endtime="20201029 12:46:54.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.599" endtime="20201029 12:46:54.980"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.990" endtime="20201029 12:46:55.005"></status>
</kw>
<msg timestamp="20201029 12:46:55.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.988" endtime="20201029 12:46:55.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.006" endtime="20201029 12:46:55.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.009" endtime="20201029 12:46:55.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.985" endtime="20201029 12:46:55.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.982" endtime="20201029 12:46:55.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.018" endtime="20201029 12:46:55.306"></status>
</kw>
<msg timestamp="20201029 12:46:55.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023131403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023153222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.016" endtime="20201029 12:46:55.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023131403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023153222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.311" endtime="20201029 12:46:55.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.319" endtime="20201029 12:46:55.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.014" endtime="20201029 12:46:55.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.012" endtime="20201029 12:46:55.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:55.326" level="INFO">${RESULT} = [{'diff': 2.181900000000278e-05}, {'diff': 2.184700000000192e-05}, {'diff': 2.206899999999956e-05}, {'diff': 2.216700000000002e-05}, {'diff': 2.19030000000002e-05}, {'diff': 2.218099999999959e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:55.322" endtime="20201029 12:46:55.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:55.330" level="INFO">${ACCURACY} = {'diff': [2.181900000000278e-05, 2.184700000000192e-05, 2.206899999999956e-05, 2.216700000000002e-05, 2.19030000000002e-05, 2.218099999999959e-05, 2.2443999999999936e-05, 2.2542000000000395e-05, 2.187...</msg>
<status status="PASS" starttime="20201029 12:46:55.327" endtime="20201029 12:46:55.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.334" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 12:46:55.333" endtime="20201029 12:46:55.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.338" level="INFO">VALUE: [2.181900000000278e-05, 2.184700000000192e-05, 2.206899999999956e-05, 2.216700000000002e-05, 2.19030000000002e-05, 2.218099999999959e-05, 2.2443999999999936e-05, 2.2542000000000395e-05, 2.187499999999759e-05, 2.234699999999895e-05, 2.2443999999999936e-05, 2.211100000000174e-05, 2.15969999999982e-05, 2.241700000000027e-05, 2.233300000000285e-05, 2.188899999999716e-05, 2.216700000000002e-05, 2.2264000000001005e-05, 2.2514000000001255e-05, 2.1806000000002684e-05, 2.19030000000002e-05, 2.2055999999999465e-05, 2.2305999999999715e-05, 2.1778000000000075e-05, 2.2569999999999535e-05, 2.1806000000002684e-05, 2.2333999999998855e-05, 2.247299999999855e-05, 2.2471999999999076e-05, 2.191699999999977e-05, 2.219500000000263e-05, 2.236099999999852e-05, 2.1584000000001574e-05, 2.1943999999999436e-05, 2.165299999999995e-05, 2.2041999999999895e-05, 2.244499999999941e-05, 2.2264000000001005e-05, 2.2056000000002934e-05, 2.2333999999998855e-05, 2.231899999999981e-05, 2.198700000000109e-05, 2.1805999999999215e-05, 2.2000000000001185e-05, 2.1985999999998146e-05, 2.187499999999759e-05, 2.2512999999998312e-05, 2.1902000000000726e-05, 2.2014000000000755e-05, 2.2472000000002545e-05]</msg>
<status status="PASS" starttime="20201029 12:46:55.336" endtime="20201029 12:46:55.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.331" endtime="20201029 12:46:55.339"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:55.345" endtime="20201029 12:46:55.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.342" endtime="20201029 12:46:55.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.341" endtime="20201029 12:46:55.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.981" endtime="20201029 12:46:55.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.980" endtime="20201029 12:46:55.366"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.376" endtime="20201029 12:46:55.392"></status>
</kw>
<msg timestamp="20201029 12:46:55.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.374" endtime="20201029 12:46:55.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.393" endtime="20201029 12:46:55.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.396" endtime="20201029 12:46:55.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.371" endtime="20201029 12:46:55.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.369" endtime="20201029 12:46:55.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.405" endtime="20201029 12:46:55.692"></status>
</kw>
<msg timestamp="20201029 12:46:55.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023549819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023572347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.403" endtime="20201029 12:46:55.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023549819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023572347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.696" endtime="20201029 12:46:55.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.704" endtime="20201029 12:46:55.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.401" endtime="20201029 12:46:55.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.399" endtime="20201029 12:46:55.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:55.711" level="INFO">${RESULT} = [{'diff': 2.2528000000000825e-05}, {'diff': 2.181900000000278e-05}, {'diff': 2.236099999999852e-05}, {'diff': 2.216700000000002e-05}, {'diff': 2.1929999999999866e-05}, {'diff': 2.1764000000000505e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:55.708" endtime="20201029 12:46:55.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:55.715" level="INFO">${ACCURACY} = {'diff': [2.2528000000000825e-05, 2.181900000000278e-05, 2.236099999999852e-05, 2.216700000000002e-05, 2.1929999999999866e-05, 2.1764000000000505e-05, 2.2014000000000755e-05, 2.211099999999827e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:46:55.712" endtime="20201029 12:46:55.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.719" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 12:46:55.718" endtime="20201029 12:46:55.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.722" level="INFO">VALUE: [2.2528000000000825e-05, 2.181900000000278e-05, 2.236099999999852e-05, 2.216700000000002e-05, 2.1929999999999866e-05, 2.1764000000000505e-05, 2.2014000000000755e-05, 2.211099999999827e-05, 2.2485999999998646e-05, 2.158299999999863e-05, 2.206899999999956e-05, 2.2416000000000796e-05, 2.2472000000002545e-05, 2.190299999999673e-05, 2.186099999999802e-05, 2.1971999999998576e-05, 2.231899999999981e-05, 2.238900000000113e-05, 2.2013999999997286e-05, 2.2070000000002504e-05, 2.2193999999999686e-05, 2.208299999999913e-05, 2.163900000000038e-05, 2.2028000000000325e-05, 2.2207999999999256e-05, 2.236099999999852e-05, 2.215300000000045e-05, 2.2264000000001005e-05, 2.19030000000002e-05, 2.2457999999999506e-05, 2.2278000000000575e-05, 2.2013999999997286e-05, 2.2249999999997966e-05, 2.2264000000001005e-05, 2.1972000000002045e-05, 2.188900000000063e-05, 2.2277999999997106e-05, 2.219499999999916e-05, 2.211099999999827e-05, 2.2000000000001185e-05, 2.2292000000000145e-05, 2.191699999999977e-05, 2.2528000000000825e-05, 2.2292000000000145e-05, 2.2098000000001644e-05, 2.2514000000001255e-05, 2.201300000000128e-05, 2.2278000000000575e-05, 2.212500000000131e-05, 2.2250000000001435e-05]</msg>
<status status="PASS" starttime="20201029 12:46:55.720" endtime="20201029 12:46:55.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.716" endtime="20201029 12:46:55.724"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:55.727" endtime="20201029 12:46:55.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.726" endtime="20201029 12:46:55.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.725" endtime="20201029 12:46:55.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.367" endtime="20201029 12:46:55.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.367" endtime="20201029 12:46:55.748"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.757" endtime="20201029 12:46:55.772"></status>
</kw>
<msg timestamp="20201029 12:46:55.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.755" endtime="20201029 12:46:55.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.773" endtime="20201029 12:46:55.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.776" endtime="20201029 12:46:55.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.753" endtime="20201029 12:46:55.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.751" endtime="20201029 12:46:55.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.785" endtime="20201029 12:46:56.071"></status>
</kw>
<msg timestamp="20201029 12:46:56.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021685722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021707375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.783" endtime="20201029 12:46:56.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021685722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021707375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:56.076" endtime="20201029 12:46:56.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.084" endtime="20201029 12:46:56.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.781" endtime="20201029 12:46:56.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.779" endtime="20201029 12:46:56.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:56.090" level="INFO">${RESULT} = [{'diff': 2.165299999999995e-05}, {'diff': 2.231900000000328e-05}, {'diff': 2.2305999999999715e-05}, {'diff': 2.1985999999998146e-05}, {'diff': 2.1971999999998576e-05}, {'diff': 2.1791999999999645e-05...</msg>
<status status="PASS" starttime="20201029 12:46:56.087" endtime="20201029 12:46:56.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:56.095" level="INFO">${ACCURACY} = {'diff': [2.165299999999995e-05, 2.231900000000328e-05, 2.2305999999999715e-05, 2.1985999999998146e-05, 2.1971999999998576e-05, 2.1791999999999645e-05, 2.2348000000001894e-05, 2.206899999999956e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:46:56.091" endtime="20201029 12:46:56.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.100" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 12:46:56.099" endtime="20201029 12:46:56.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.102" level="INFO">VALUE: [2.165299999999995e-05, 2.231900000000328e-05, 2.2305999999999715e-05, 2.1985999999998146e-05, 2.1971999999998576e-05, 2.1791999999999645e-05, 2.2348000000001894e-05, 2.206899999999956e-05, 2.2014000000000755e-05, 2.194499999999891e-05, 2.216700000000002e-05, 2.244499999999941e-05, 2.2319999999999285e-05, 2.1805999999999215e-05, 2.218099999999959e-05, 2.1819999999998785e-05, 2.236100000000199e-05, 2.2263999999997536e-05, 2.2263999999997536e-05, 2.247299999999855e-05, 2.219499999999916e-05, 2.213900000000088e-05, 2.1598000000001144e-05, 2.2514000000001255e-05, 2.197299999999805e-05, 2.240299999999723e-05, 2.163900000000038e-05, 2.2430000000000366e-05, 2.231899999999981e-05, 2.24030000000007e-05, 2.245900000000245e-05, 2.1861999999997495e-05, 2.229100000000067e-05, 2.2112000000001214e-05, 2.2486000000002115e-05, 2.2152000000000976e-05, 2.2250000000001435e-05, 2.1929999999999866e-05, 2.180499999999974e-05, 2.2222000000002295e-05, 2.188900000000063e-05, 2.1915999999996827e-05, 2.213900000000088e-05, 2.204100000000042e-05, 2.1972000000002045e-05, 2.1944000000002906e-05, 2.2276999999997632e-05, 2.187500000000106e-05, 2.234699999999895e-05, 2.1750000000000935e-05]</msg>
<status status="PASS" starttime="20201029 12:46:56.101" endtime="20201029 12:46:56.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.096" endtime="20201029 12:46:56.103"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:56.107" endtime="20201029 12:46:56.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.106" endtime="20201029 12:46:56.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.104" endtime="20201029 12:46:56.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.749" endtime="20201029 12:46:56.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.749" endtime="20201029 12:46:56.128"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.136" endtime="20201029 12:46:56.152"></status>
</kw>
<msg timestamp="20201029 12:46:56.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.135" endtime="20201029 12:46:56.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.153" endtime="20201029 12:46:56.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.156" endtime="20201029 12:46:56.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.132" endtime="20201029 12:46:56.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.130" endtime="20201029 12:46:56.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.164" endtime="20201029 12:46:56.450"></status>
</kw>
<msg timestamp="20201029 12:46:56.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021701708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021724278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:56.163" endtime="20201029 12:46:56.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021701708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021724278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:56.455" endtime="20201029 12:46:56.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.463" endtime="20201029 12:46:56.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.161" endtime="20201029 12:46:56.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.159" endtime="20201029 12:46:56.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:56.469" level="INFO">${RESULT} = [{'diff': 2.2569999999999535e-05}, {'diff': 2.1778000000000075e-05}, {'diff': 2.19030000000002e-05}, {'diff': 2.2084000000002074e-05}, {'diff': 2.211099999999827e-05}, {'diff': 2.244499999999941e-05},...</msg>
<status status="PASS" starttime="20201029 12:46:56.466" endtime="20201029 12:46:56.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:56.473" level="INFO">${ACCURACY} = {'diff': [2.2569999999999535e-05, 2.1778000000000075e-05, 2.19030000000002e-05, 2.2084000000002074e-05, 2.211099999999827e-05, 2.244499999999941e-05, 2.1888000000001157e-05, 2.2055999999999465e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:46:56.470" endtime="20201029 12:46:56.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.478" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 12:46:56.477" endtime="20201029 12:46:56.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.480" level="INFO">VALUE: [2.2569999999999535e-05, 2.1778000000000075e-05, 2.19030000000002e-05, 2.2084000000002074e-05, 2.211099999999827e-05, 2.244499999999941e-05, 2.1888000000001157e-05, 2.2055999999999465e-05, 2.2264000000001005e-05, 2.237500000000156e-05, 2.2083999999998605e-05, 2.238900000000113e-05, 2.24030000000007e-05, 2.2112000000001214e-05, 2.213899999999741e-05, 2.187499999999759e-05, 2.213900000000088e-05, 2.1986000000001615e-05, 2.1944000000002906e-05, 2.1916000000000296e-05, 2.2262999999998062e-05, 2.1929999999999866e-05, 2.237500000000156e-05, 2.237500000000156e-05, 2.188899999999716e-05, 2.234699999999895e-05, 2.187500000000106e-05, 2.2014000000000755e-05, 2.238900000000113e-05, 2.209700000000217e-05, 2.2526999999997882e-05, 2.255500000000049e-05, 2.2457999999999506e-05, 2.238900000000113e-05, 2.2264000000001005e-05, 2.166699999999952e-05, 2.208299999999913e-05, 2.2292000000000145e-05, 2.1929999999999866e-05, 2.1778000000000075e-05, 2.20830000000026e-05, 2.1834000000001824e-05, 2.236100000000199e-05, 2.184699999999845e-05, 2.2069999999999035e-05, 2.2236000000001865e-05, 2.183299999999888e-05, 2.231899999999981e-05, 2.2542000000000395e-05, 2.237499999999809e-05]</msg>
<status status="PASS" starttime="20201029 12:46:56.479" endtime="20201029 12:46:56.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.474" endtime="20201029 12:46:56.482"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:56.485" endtime="20201029 12:46:56.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.484" endtime="20201029 12:46:56.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.482" endtime="20201029 12:46:56.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.129" endtime="20201029 12:46:56.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.128" endtime="20201029 12:46:56.506"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.514" endtime="20201029 12:46:56.530"></status>
</kw>
<msg timestamp="20201029 12:46:56.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.513" endtime="20201029 12:46:56.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.531" endtime="20201029 12:46:56.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.534" endtime="20201029 12:46:56.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.510" endtime="20201029 12:46:56.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.508" endtime="20201029 12:46:56.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.542" endtime="20201029 12:46:56.828"></status>
</kw>
<msg timestamp="20201029 12:46:56.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022642083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022664611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:56.541" endtime="20201029 12:46:56.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022642083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022664611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:56.833" endtime="20201029 12:46:56.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.843" endtime="20201029 12:46:56.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.538" endtime="20201029 12:46:56.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.537" endtime="20201029 12:46:56.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:56.850" level="INFO">${RESULT} = [{'diff': 2.2528000000000825e-05}, {'diff': 2.2207999999999256e-05}, {'diff': 2.161100000000124e-05}, {'diff': 2.1957999999999006e-05}, {'diff': 2.1971999999998576e-05}, {'diff': 2.19030000000002e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:56.847" endtime="20201029 12:46:56.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:56.854" level="INFO">${ACCURACY} = {'diff': [2.2528000000000825e-05, 2.2207999999999256e-05, 2.161100000000124e-05, 2.1957999999999006e-05, 2.1971999999998576e-05, 2.19030000000002e-05, 2.181899999999931e-05, 2.2028000000000325e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:46:56.851" endtime="20201029 12:46:56.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.858" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 12:46:56.857" endtime="20201029 12:46:56.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.861" level="INFO">VALUE: [2.2528000000000825e-05, 2.2207999999999256e-05, 2.161100000000124e-05, 2.1957999999999006e-05, 2.1971999999998576e-05, 2.19030000000002e-05, 2.181899999999931e-05, 2.2028000000000325e-05, 2.1848000000001394e-05, 2.256900000000006e-05, 2.1791999999999645e-05, 2.2471999999999076e-05, 2.2207999999999256e-05, 2.2041999999999895e-05, 2.243099999999984e-05, 2.195899999999848e-05, 2.208299999999913e-05, 2.2000000000001185e-05, 2.184699999999845e-05, 2.1819999999998785e-05, 2.193099999999934e-05, 2.191699999999977e-05, 2.2569999999999535e-05, 2.1820000000002254e-05, 2.237499999999809e-05, 2.243099999999984e-05, 2.15969999999982e-05, 2.1583999999998105e-05, 2.236099999999852e-05, 2.1862000000000964e-05, 2.2542000000000395e-05, 2.238900000000113e-05, 2.211099999999827e-05, 2.1721999999998326e-05, 2.248699999999812e-05, 2.211100000000174e-05, 2.194499999999891e-05, 2.218099999999959e-05, 2.2570000000003004e-05, 2.2569999999999535e-05, 2.237499999999809e-05, 2.162500000000081e-05, 2.2249999999997966e-05, 2.219499999999916e-05, 2.1598000000001144e-05, 2.1638000000000907e-05, 2.2500000000001685e-05, 2.186100000000149e-05, 2.181899999999931e-05, 2.206899999999956e-05]</msg>
<status status="PASS" starttime="20201029 12:46:56.859" endtime="20201029 12:46:56.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.855" endtime="20201029 12:46:56.863"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:56.866" endtime="20201029 12:46:56.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.865" endtime="20201029 12:46:56.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.864" endtime="20201029 12:46:56.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.507" endtime="20201029 12:46:56.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.506" endtime="20201029 12:46:56.887"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.896" endtime="20201029 12:46:56.910"></status>
</kw>
<msg timestamp="20201029 12:46:56.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.894" endtime="20201029 12:46:56.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.911" endtime="20201029 12:46:56.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.914" endtime="20201029 12:46:56.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.892" endtime="20201029 12:46:56.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.890" endtime="20201029 12:46:56.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.923" endtime="20201029 12:46:57.208"></status>
</kw>
<msg timestamp="20201029 12:46:57.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021632694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02165525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:56.921" endtime="20201029 12:46:57.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021632694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02165525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:57.212" endtime="20201029 12:46:57.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.221" endtime="20201029 12:46:57.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.919" endtime="20201029 12:46:57.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.917" endtime="20201029 12:46:57.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:57.227" level="INFO">${RESULT} = [{'diff': 2.2555999999999965e-05}, {'diff': 2.2250000000001435e-05}, {'diff': 2.162499999999734e-05}, {'diff': 2.2471999999999076e-05}, {'diff': 2.191699999999977e-05}, {'diff': 2.2485999999998646e-05...</msg>
<status status="PASS" starttime="20201029 12:46:57.224" endtime="20201029 12:46:57.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:57.234" level="INFO">${ACCURACY} = {'diff': [2.2555999999999965e-05, 2.2250000000001435e-05, 2.162499999999734e-05, 2.2471999999999076e-05, 2.191699999999977e-05, 2.2485999999998646e-05, 2.243099999999984e-05, 2.2041999999999895e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:46:57.228" endtime="20201029 12:46:57.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.239" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 12:46:57.238" endtime="20201029 12:46:57.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.241" level="INFO">VALUE: [2.2555999999999965e-05, 2.2250000000001435e-05, 2.162499999999734e-05, 2.2471999999999076e-05, 2.191699999999977e-05, 2.2485999999998646e-05, 2.243099999999984e-05, 2.2041999999999895e-05, 2.2236000000001865e-05, 2.2458000000002976e-05, 2.2193999999999686e-05, 2.238899999999766e-05, 2.1764000000000505e-05, 2.195900000000195e-05, 2.2014000000000755e-05, 2.243099999999984e-05, 2.24030000000007e-05, 2.2069999999999035e-05, 2.237500000000156e-05, 2.234700000000242e-05, 2.1764000000000505e-05, 2.2333999999998855e-05, 2.184699999999845e-05, 2.2514000000001255e-05, 2.211100000000174e-05, 2.2500000000001685e-05, 2.2528000000000825e-05, 2.220899999999873e-05, 2.181899999999931e-05, 2.218099999999959e-05, 2.2084000000002074e-05, 2.2055999999999465e-05, 2.2083999999998605e-05, 2.1957999999999006e-05, 2.2305999999999715e-05, 2.2555999999999965e-05, 2.2457999999999506e-05, 2.2166000000000546e-05, 2.2152000000000976e-05, 2.1943999999999436e-05, 2.2458000000002976e-05, 2.1971999999998576e-05, 2.187499999999759e-05, 2.2028000000000325e-05, 2.161099999999777e-05, 2.184699999999845e-05, 2.2152000000000976e-05, 2.252700000000135e-05, 2.205499999999999e-05, 2.211099999999827e-05]</msg>
<status status="PASS" starttime="20201029 12:46:57.240" endtime="20201029 12:46:57.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.235" endtime="20201029 12:46:57.243"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:57.246" endtime="20201029 12:46:57.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.245" endtime="20201029 12:46:57.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.244" endtime="20201029 12:46:57.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.888" endtime="20201029 12:46:57.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.887" endtime="20201029 12:46:57.267"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.275" endtime="20201029 12:46:57.291"></status>
</kw>
<msg timestamp="20201029 12:46:57.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.274" endtime="20201029 12:46:57.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.293" endtime="20201029 12:46:57.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.295" endtime="20201029 12:46:57.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.271" endtime="20201029 12:46:57.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.269" endtime="20201029 12:46:57.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.304" endtime="20201029 12:46:57.591"></status>
</kw>
<msg timestamp="20201029 12:46:57.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021799833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021821611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:57.302" endtime="20201029 12:46:57.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021799833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021821611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:57.596" endtime="20201029 12:46:57.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.606" endtime="20201029 12:46:57.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.300" endtime="20201029 12:46:57.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.298" endtime="20201029 12:46:57.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:57.613" level="INFO">${RESULT} = [{'diff': 2.1778000000000075e-05}, {'diff': 2.2555999999999965e-05}, {'diff': 2.161100000000124e-05}, {'diff': 2.212499999999784e-05}, {'diff': 2.2485999999998646e-05}, {'diff': 2.161099999999777e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:57.609" endtime="20201029 12:46:57.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:57.617" level="INFO">${ACCURACY} = {'diff': [2.1778000000000075e-05, 2.2555999999999965e-05, 2.161100000000124e-05, 2.212499999999784e-05, 2.2485999999998646e-05, 2.161099999999777e-05, 2.220899999999873e-05, 2.2471999999999076e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:46:57.614" endtime="20201029 12:46:57.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.622" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 12:46:57.621" endtime="20201029 12:46:57.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.625" level="INFO">VALUE: [2.1778000000000075e-05, 2.2555999999999965e-05, 2.161100000000124e-05, 2.212499999999784e-05, 2.2485999999998646e-05, 2.161099999999777e-05, 2.220899999999873e-05, 2.2471999999999076e-05, 2.1791999999999645e-05, 2.244499999999941e-05, 2.2235999999998396e-05, 2.191699999999977e-05, 2.2319999999999285e-05, 2.2263999999997536e-05, 2.1819999999998785e-05, 2.2112000000001214e-05, 2.190299999999673e-05, 2.159700000000167e-05, 2.1792000000003114e-05, 2.220899999999873e-05, 2.1778000000000075e-05, 2.2500000000001685e-05, 2.2056000000002934e-05, 2.162500000000081e-05, 2.193100000000281e-05, 2.230500000000024e-05, 2.2401999999997757e-05, 2.1693999999999186e-05, 2.197299999999805e-05, 2.2542000000000395e-05, 2.244499999999941e-05, 2.194500000000238e-05, 2.231899999999981e-05, 2.1666000000000046e-05, 2.241700000000027e-05, 2.2263999999997536e-05, 2.223700000000134e-05, 2.243099999999984e-05, 2.2512999999998312e-05, 2.165299999999995e-05, 2.1943999999999436e-05, 2.1929999999999866e-05, 2.2250000000001435e-05, 2.1902000000000726e-05, 2.2416000000000796e-05, 2.2222000000002295e-05, 2.2528000000000825e-05, 2.2499999999998216e-05, 2.2207999999999256e-05, 2.162500000000081e-05]</msg>
<status status="PASS" starttime="20201029 12:46:57.624" endtime="20201029 12:46:57.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.618" endtime="20201029 12:46:57.626"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:57.630" endtime="20201029 12:46:57.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.629" endtime="20201029 12:46:57.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.627" endtime="20201029 12:46:57.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.268" endtime="20201029 12:46:57.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.267" endtime="20201029 12:46:57.651"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.660" endtime="20201029 12:46:57.676"></status>
</kw>
<msg timestamp="20201029 12:46:57.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.658" endtime="20201029 12:46:57.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.678" endtime="20201029 12:46:57.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.680" endtime="20201029 12:46:57.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.655" endtime="20201029 12:46:57.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.653" endtime="20201029 12:46:57.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.689" endtime="20201029 12:46:57.976"></status>
</kw>
<msg timestamp="20201029 12:46:57.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023367125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023389278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:57.688" endtime="20201029 12:46:57.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023367125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023389278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:57.980" endtime="20201029 12:46:57.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.989" endtime="20201029 12:46:57.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.685" endtime="20201029 12:46:57.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.683" endtime="20201029 12:46:57.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:57.995" level="INFO">${RESULT} = [{'diff': 2.215300000000045e-05}, {'diff': 2.247299999999855e-05}, {'diff': 2.19030000000002e-05}, {'diff': 2.2264000000001005e-05}, {'diff': 2.161100000000124e-05}, {'diff': 2.195900000000195e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:57.992" endtime="20201029 12:46:57.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:57.999" level="INFO">${ACCURACY} = {'diff': [2.215300000000045e-05, 2.247299999999855e-05, 2.19030000000002e-05, 2.2264000000001005e-05, 2.161100000000124e-05, 2.195900000000195e-05, 2.2222000000002295e-05, 2.2305999999999715e-05, 2.20...</msg>
<status status="PASS" starttime="20201029 12:46:57.996" endtime="20201029 12:46:57.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.004" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 12:46:58.003" endtime="20201029 12:46:58.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.006" level="INFO">VALUE: [2.215300000000045e-05, 2.247299999999855e-05, 2.19030000000002e-05, 2.2264000000001005e-05, 2.161100000000124e-05, 2.195900000000195e-05, 2.2222000000002295e-05, 2.2305999999999715e-05, 2.2083999999998605e-05, 2.186100000000149e-05, 2.1820000000002254e-05, 2.2000000000001185e-05, 2.2041999999999895e-05, 2.231899999999981e-05, 2.229100000000067e-05, 2.1778000000000075e-05, 2.2250000000001435e-05, 2.22229999999983e-05, 2.218099999999959e-05, 2.1916000000000296e-05, 2.2264000000001005e-05, 2.183299999999888e-05, 2.2221999999998826e-05, 2.2014000000000755e-05, 2.208299999999913e-05, 2.20830000000026e-05, 2.2180000000000116e-05, 2.213899999999741e-05, 2.159700000000167e-05, 2.211099999999827e-05, 2.2264000000001005e-05, 2.255500000000049e-05, 2.163900000000038e-05, 2.1943999999999436e-05, 2.2305999999999715e-05, 2.2513999999997786e-05, 2.206899999999956e-05, 2.180499999999974e-05, 2.215300000000045e-05, 2.2527999999997356e-05, 2.2443999999999936e-05, 2.1791999999999645e-05, 2.254100000000092e-05, 2.213900000000088e-05, 2.2457999999999506e-05, 2.211099999999827e-05, 2.162499999999734e-05, 2.236099999999852e-05, 2.191699999999977e-05, 2.206899999999956e-05]</msg>
<status status="PASS" starttime="20201029 12:46:58.005" endtime="20201029 12:46:58.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.000" endtime="20201029 12:46:58.008"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:58.012" endtime="20201029 12:46:58.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.010" endtime="20201029 12:46:58.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.009" endtime="20201029 12:46:58.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.652" endtime="20201029 12:46:58.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.651" endtime="20201029 12:46:58.034"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.046" endtime="20201029 12:46:58.062"></status>
</kw>
<msg timestamp="20201029 12:46:58.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.044" endtime="20201029 12:46:58.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.064" endtime="20201029 12:46:58.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.066" endtime="20201029 12:46:58.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.040" endtime="20201029 12:46:58.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.037" endtime="20201029 12:46:58.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.075" endtime="20201029 12:46:58.362"></status>
</kw>
<msg timestamp="20201029 12:46:58.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027831222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027854792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:58.074" endtime="20201029 12:46:58.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027831222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027854792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:58.367" endtime="20201029 12:46:58.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.375" endtime="20201029 12:46:58.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.071" endtime="20201029 12:46:58.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.070" endtime="20201029 12:46:58.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:58.382" level="INFO">${RESULT} = [{'diff': 2.3570000000000535e-05}, {'diff': 2.3249999999998966e-05}, {'diff': 2.343100000000084e-05}, {'diff': 2.337500000000256e-05}, {'diff': 2.3013999999998286e-05}, {'diff': 2.3514000000002255e-05...</msg>
<status status="PASS" starttime="20201029 12:46:58.379" endtime="20201029 12:46:58.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:58.387" level="INFO">${ACCURACY} = {'diff': [2.3570000000000535e-05, 2.3249999999998966e-05, 2.343100000000084e-05, 2.337500000000256e-05, 2.3013999999998286e-05, 2.3514000000002255e-05, 2.344500000000041e-05, 2.358300000000063e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:46:58.383" endtime="20201029 12:46:58.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.391" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 12:46:58.390" endtime="20201029 12:46:58.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.394" level="INFO">VALUE: [2.3570000000000535e-05, 2.3249999999998966e-05, 2.343100000000084e-05, 2.337500000000256e-05, 2.3013999999998286e-05, 2.3514000000002255e-05, 2.344500000000041e-05, 2.358300000000063e-05, 2.3361999999998995e-05, 2.25969999999992e-05, 2.34030000000017e-05, 2.2916000000001296e-05, 2.3138000000002407e-05, 2.2901999999998257e-05, 2.3208000000000256e-05, 2.3208000000000256e-05, 2.27770000000016e-05, 2.262499999999834e-05, 2.287500000000206e-05, 2.3457999999997037e-05, 2.313899999999841e-05, 2.306900000000056e-05, 2.288900000000163e-05, 2.3221999999999826e-05, 2.3180000000001116e-05, 2.3486000000003115e-05, 2.3180000000001116e-05, 2.3472000000000076e-05, 2.3235999999999396e-05, 2.288900000000163e-05, 2.3528000000001825e-05, 2.304100000000142e-05, 2.3194000000000686e-05, 2.338899999999866e-05, 2.3320000000000285e-05, 2.2999999999998716e-05, 2.2930000000000866e-05, 2.3277999999998106e-05, 2.2986000000002615e-05, 2.338900000000213e-05, 2.287500000000206e-05, 2.3568999999997592e-05, 2.3014000000001755e-05, 2.338899999999866e-05, 2.3306000000000715e-05, 2.3499999999999216e-05, 2.3292000000001145e-05, 2.3055999999996996e-05, 2.2971999999999576e-05, 2.3556000000000965e-05]</msg>
<status status="PASS" starttime="20201029 12:46:58.392" endtime="20201029 12:46:58.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.388" endtime="20201029 12:46:58.395"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:58.399" endtime="20201029 12:46:58.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.397" endtime="20201029 12:46:58.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.396" endtime="20201029 12:46:58.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.035" endtime="20201029 12:46:58.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.034" endtime="20201029 12:46:58.419"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.428" endtime="20201029 12:46:58.444"></status>
</kw>
<msg timestamp="20201029 12:46:58.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.426" endtime="20201029 12:46:58.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.445" endtime="20201029 12:46:58.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.448" endtime="20201029 12:46:58.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.424" endtime="20201029 12:46:58.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.422" endtime="20201029 12:46:58.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.457" endtime="20201029 12:46:58.765"></status>
</kw>
<msg timestamp="20201029 12:46:58.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022051819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022076458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:58.455" endtime="20201029 12:46:58.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022051819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022076458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:58.769" endtime="20201029 12:46:58.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.778" endtime="20201029 12:46:58.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.453" endtime="20201029 12:46:58.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.451" endtime="20201029 12:46:58.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:58.784" level="INFO">${RESULT} = [{'diff': 2.463899999999991e-05}, {'diff': 2.4500000000000216e-05}, {'diff': 2.4028000000002325e-05}, {'diff': 2.4249999999999966e-05}, {'diff': 2.384700000000045e-05}, {'diff': 2.4068999999998092e-05...</msg>
<status status="PASS" starttime="20201029 12:46:58.781" endtime="20201029 12:46:58.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:58.788" level="INFO">${ACCURACY} = {'diff': [2.463899999999991e-05, 2.4500000000000216e-05, 2.4028000000002325e-05, 2.4249999999999966e-05, 2.384700000000045e-05, 2.4068999999998092e-05, 2.4221999999997357e-05, 2.383300000000088e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:46:58.785" endtime="20201029 12:46:58.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.793" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 12:46:58.792" endtime="20201029 12:46:58.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.795" level="INFO">VALUE: [2.463899999999991e-05, 2.4500000000000216e-05, 2.4028000000002325e-05, 2.4249999999999966e-05, 2.384700000000045e-05, 2.4068999999998092e-05, 2.4221999999997357e-05, 2.383300000000088e-05, 2.4027999999998856e-05, 2.437500000000009e-05, 2.4055999999997996e-05, 2.3930000000001866e-05, 2.416700000000202e-05, 2.411100000000027e-05, 2.356900000000106e-05, 2.362499999999934e-05, 2.41109999999968e-05, 2.44169999999988e-05, 2.4040999999998952e-05, 2.3958000000001006e-05, 2.437500000000009e-05, 2.418100000000159e-05, 2.436100000000052e-05, 2.415299999999898e-05, 2.4346999999997482e-05, 2.445900000000098e-05, 2.383300000000088e-05, 2.4277999999999106e-05, 2.3972000000000576e-05, 2.3846999999996982e-05, 2.365299999999848e-05, 2.3999999999999716e-05, 2.443099999999837e-05, 2.3834000000000355e-05, 2.4555999999998496e-05, 2.4305999999998246e-05, 2.361099999999977e-05, 2.390299999999873e-05, 2.418099999999812e-05, 2.362500000000281e-05, 2.440299999999923e-05, 2.4555999999998496e-05, 2.416699999999855e-05, 2.4236000000000396e-05, 2.4472000000001076e-05, 2.42230000000003e-05, 2.3929999999998397e-05, 2.443099999999837e-05, 2.429100000000267e-05, 2.368100000000109e-05]</msg>
<status status="PASS" starttime="20201029 12:46:58.794" endtime="20201029 12:46:58.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.789" endtime="20201029 12:46:58.797"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:58.801" endtime="20201029 12:46:58.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.799" endtime="20201029 12:46:58.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.798" endtime="20201029 12:46:58.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.420" endtime="20201029 12:46:58.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.420" endtime="20201029 12:46:58.823"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.835" endtime="20201029 12:46:58.853"></status>
</kw>
<msg timestamp="20201029 12:46:58.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.833" endtime="20201029 12:46:58.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.854" endtime="20201029 12:46:58.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.857" endtime="20201029 12:46:58.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.830" endtime="20201029 12:46:58.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.826" endtime="20201029 12:46:58.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.866" endtime="20201029 12:46:59.150"></status>
</kw>
<msg timestamp="20201029 12:46:59.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028047306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028072278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:58.864" endtime="20201029 12:46:59.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028047306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028072278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:59.155" endtime="20201029 12:46:59.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.163" endtime="20201029 12:46:59.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.862" endtime="20201029 12:46:59.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.860" endtime="20201029 12:46:59.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:59.170" level="INFO">${RESULT} = [{'diff': 2.4971999999998107e-05}, {'diff': 2.4819999999998316e-05}, {'diff': 2.4570000000001535e-05}, {'diff': 2.5346999999998482e-05}, {'diff': 2.5249999999997497e-05}, {'diff': 2.5083999999998136e-...</msg>
<status status="PASS" starttime="20201029 12:46:59.167" endtime="20201029 12:46:59.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:59.174" level="INFO">${ACCURACY} = {'diff': [2.4971999999998107e-05, 2.4819999999998316e-05, 2.4570000000001535e-05, 2.5346999999998482e-05, 2.5249999999997497e-05, 2.5083999999998136e-05, 2.5319999999998816e-05, 2.4833999999997886e-05...</msg>
<status status="PASS" starttime="20201029 12:46:59.171" endtime="20201029 12:46:59.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.179" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 12:46:59.177" endtime="20201029 12:46:59.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.181" level="INFO">VALUE: [2.4971999999998107e-05, 2.4819999999998316e-05, 2.4570000000001535e-05, 2.5346999999998482e-05, 2.5249999999997497e-05, 2.5083999999998136e-05, 2.5319999999998816e-05, 2.4833999999997886e-05, 2.4834000000001355e-05, 2.490299999999973e-05, 2.5250000000000966e-05, 2.5334000000001855e-05, 2.5277000000000632e-05, 2.5250000000000966e-05, 2.5082999999998662e-05, 2.5013000000000812e-05, 2.491700000000277e-05, 2.5180000000003117e-05, 2.5179999999999647e-05, 2.5360999999998052e-05, 2.5458000000002506e-05, 2.5430000000003367e-05, 2.5304999999999772e-05, 2.4804999999999272e-05, 2.4526999999999882e-05, 2.4554999999999022e-05, 2.481900000000231e-05, 2.480500000000274e-05, 2.4957999999998537e-05, 2.531900000000281e-05, 2.512499999999737e-05, 2.4985999999997677e-05, 2.54169999999998e-05, 2.5582999999999162e-05, 2.5278000000000106e-05, 2.5278000000000106e-05, 2.5221999999998357e-05, 2.540300000000023e-05, 2.4818999999998842e-05, 2.5208000000002256e-05, 2.537500000000109e-05, 2.512500000000084e-05, 2.5318999999999342e-05, 2.5458000000002506e-05, 2.5555999999999496e-05, 2.4986000000001146e-05, 2.5528000000000356e-05, 2.4986000000001146e-05, 2.534700000000195e-05, 2.5457999999999037e-05]</msg>
<status status="PASS" starttime="20201029 12:46:59.180" endtime="20201029 12:46:59.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.175" endtime="20201029 12:46:59.183"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:59.187" endtime="20201029 12:46:59.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.185" endtime="20201029 12:46:59.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.184" endtime="20201029 12:46:59.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.824" endtime="20201029 12:46:59.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.823" endtime="20201029 12:46:59.208"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.216" endtime="20201029 12:46:59.231"></status>
</kw>
<msg timestamp="20201029 12:46:59.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.215" endtime="20201029 12:46:59.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.232" endtime="20201029 12:46:59.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.235" endtime="20201029 12:46:59.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.212" endtime="20201029 12:46:59.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.210" endtime="20201029 12:46:59.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.244" endtime="20201029 12:46:59.529"></status>
</kw>
<msg timestamp="20201029 12:46:59.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021922111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021947847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:59.242" endtime="20201029 12:46:59.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021922111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021947847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:59.533" endtime="20201029 12:46:59.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.542" endtime="20201029 12:46:59.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.240" endtime="20201029 12:46:59.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.238" endtime="20201029 12:46:59.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:59.548" level="INFO">${RESULT} = [{'diff': 2.5735999999998427e-05}, {'diff': 2.5791000000000702e-05}, {'diff': 2.6429999999997428e-05}, {'diff': 2.5999999999998247e-05}, {'diff': 2.6514000000001786e-05}, {'diff': 2.5555000000000022e-...</msg>
<status status="PASS" starttime="20201029 12:46:59.545" endtime="20201029 12:46:59.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:59.553" level="INFO">${ACCURACY} = {'diff': [2.5735999999998427e-05, 2.5791000000000702e-05, 2.6429999999997428e-05, 2.5999999999998247e-05, 2.6514000000001786e-05, 2.5555000000000022e-05, 2.6541999999997457e-05, 2.6292000000000676e-05...</msg>
<status status="PASS" starttime="20201029 12:46:59.549" endtime="20201029 12:46:59.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.558" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 12:46:59.557" endtime="20201029 12:46:59.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.560" level="INFO">VALUE: [2.5735999999998427e-05, 2.5791000000000702e-05, 2.6429999999997428e-05, 2.5999999999998247e-05, 2.6514000000001786e-05, 2.5555000000000022e-05, 2.6541999999997457e-05, 2.6292000000000676e-05, 2.6458000000000037e-05, 2.6221999999999357e-05, 2.612500000000184e-05, 2.6472000000003076e-05, 2.6319000000000342e-05, 2.6305000000000772e-05, 2.6069000000000092e-05, 2.6332999999999912e-05, 2.6471999999999607e-05, 2.6306000000000246e-05, 2.5971999999999107e-05, 2.5818999999999842e-05, 2.5999999999998247e-05, 2.64170000000008e-05, 2.5596999999998732e-05, 2.6514000000001786e-05, 2.6207999999999787e-05, 2.5971999999999107e-05, 2.5596999999998732e-05, 2.6000000000001716e-05, 2.6235999999998927e-05, 2.6069999999999566e-05, 2.590300000000073e-05, 2.6055999999999996e-05, 2.6041000000000952e-05, 2.6098000000002175e-05, 2.6499999999998747e-05, 2.597299999999858e-05, 2.644499999999994e-05, 2.561100000000177e-05, 2.619499999999969e-05, 2.5805999999999746e-05, 2.6042000000000426e-05, 2.6541999999997457e-05, 2.637500000000209e-05, 2.59170000000003e-05, 2.6042000000000426e-05, 2.595899999999901e-05, 2.6499999999998747e-05, 2.5624999999997872e-05, 2.6042000000000426e-05, 2.6069000000000092e-05]</msg>
<status status="PASS" starttime="20201029 12:46:59.559" endtime="20201029 12:46:59.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.554" endtime="20201029 12:46:59.562"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:59.565" endtime="20201029 12:46:59.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.564" endtime="20201029 12:46:59.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.563" endtime="20201029 12:46:59.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.208" endtime="20201029 12:46:59.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.208" endtime="20201029 12:46:59.586"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.594" endtime="20201029 12:46:59.609"></status>
</kw>
<msg timestamp="20201029 12:46:59.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.593" endtime="20201029 12:46:59.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.611" endtime="20201029 12:46:59.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.613" endtime="20201029 12:46:59.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.590" endtime="20201029 12:46:59.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.588" endtime="20201029 12:46:59.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.622" endtime="20201029 12:46:59.910"></status>
</kw>
<msg timestamp="20201029 12:46:59.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021872667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021899819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:59.621" endtime="20201029 12:46:59.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021872667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021899819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:59.914" endtime="20201029 12:46:59.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.923" endtime="20201029 12:46:59.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.618" endtime="20201029 12:46:59.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.616" endtime="20201029 12:46:59.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:59.929" level="INFO">${RESULT} = [{'diff': 2.7152000000002507e-05}, {'diff': 2.7318999999997873e-05}, {'diff': 2.7276999999999163e-05}, {'diff': 2.7262999999999593e-05}, {'diff': 2.6860999999999552e-05}, {'diff': 2.686100000000302e-0...</msg>
<status status="PASS" starttime="20201029 12:46:59.926" endtime="20201029 12:46:59.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:59.934" level="INFO">${ACCURACY} = {'diff': [2.7152000000002507e-05, 2.7318999999997873e-05, 2.7276999999999163e-05, 2.7262999999999593e-05, 2.6860999999999552e-05, 2.686100000000302e-05, 2.6958000000000537e-05, 2.7304999999998303e-05,...</msg>
<status status="PASS" starttime="20201029 12:46:59.930" endtime="20201029 12:46:59.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.938" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 12:46:59.937" endtime="20201029 12:46:59.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.941" level="INFO">VALUE: [2.7152000000002507e-05, 2.7318999999997873e-05, 2.7276999999999163e-05, 2.7262999999999593e-05, 2.6860999999999552e-05, 2.686100000000302e-05, 2.6958000000000537e-05, 2.7304999999998303e-05, 2.7194000000001217e-05, 2.7304999999998303e-05, 2.7000000000002716e-05, 2.6846999999999982e-05, 2.6804999999997803e-05, 2.6596999999999732e-05, 2.7472000000000607e-05, 2.6819000000000842e-05, 2.740299999999876e-05, 2.7347000000000482e-05, 2.7055000000001522e-05, 2.7249999999999497e-05, 2.6638999999998442e-05, 2.7443999999997998e-05, 2.7110999999999802e-05, 2.718100000000112e-05, 2.7388999999999192e-05, 2.7110999999999802e-05, 2.7333000000000912e-05, 2.744499999999747e-05, 2.7528000000002356e-05, 2.6638999999998442e-05, 2.690299999999826e-05, 2.740299999999876e-05, 2.6610999999999302e-05, 2.7138999999998942e-05, 2.6860999999999552e-05, 2.7347000000000482e-05, 2.7486000000000177e-05, 2.6860999999999552e-05, 2.7235999999999927e-05, 2.688900000000216e-05, 2.6833999999999886e-05, 2.7319999999997346e-05, 2.7110999999999802e-05, 2.744500000000094e-05, 2.720900000000026e-05, 2.6638999999998442e-05, 2.743100000000137e-05, 2.69170000000013e-05, 2.7027999999998387e-05, 2.715300000000198e-05]</msg>
<status status="PASS" starttime="20201029 12:46:59.939" endtime="20201029 12:46:59.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.934" endtime="20201029 12:46:59.947"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:59.951" endtime="20201029 12:46:59.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.949" endtime="20201029 12:46:59.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.948" endtime="20201029 12:46:59.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.587" endtime="20201029 12:46:59.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.586" endtime="20201029 12:46:59.972"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.981" endtime="20201029 12:46:59.997"></status>
</kw>
<msg timestamp="20201029 12:46:59.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.979" endtime="20201029 12:46:59.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.999" endtime="20201029 12:47:00.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.001" endtime="20201029 12:47:00.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.976" endtime="20201029 12:47:00.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.974" endtime="20201029 12:47:00.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.011" endtime="20201029 12:47:00.320"></status>
</kw>
<msg timestamp="20201029 12:47:00.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023381208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023409736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.009" endtime="20201029 12:47:00.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023381208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023409736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.324" endtime="20201029 12:47:00.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.333" endtime="20201029 12:47:00.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.007" endtime="20201029 12:47:00.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.005" endtime="20201029 12:47:00.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:00.340" level="INFO">${RESULT} = [{'diff': 2.8527999999999887e-05}, {'diff': 2.8138999999999942e-05}, {'diff': 2.8208000000001787e-05}, {'diff': 2.8318999999998873e-05}, {'diff': 2.7861000000000552e-05}, {'diff': 2.8083000000001662e-...</msg>
<status status="PASS" starttime="20201029 12:47:00.336" endtime="20201029 12:47:00.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:00.344" level="INFO">${ACCURACY} = {'diff': [2.8527999999999887e-05, 2.8138999999999942e-05, 2.8208000000001787e-05, 2.8318999999998873e-05, 2.7861000000000552e-05, 2.8083000000001662e-05, 2.7777999999999137e-05, 2.8333000000001912e-05...</msg>
<status status="PASS" starttime="20201029 12:47:00.341" endtime="20201029 12:47:00.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.349" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 12:47:00.348" endtime="20201029 12:47:00.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.352" level="INFO">VALUE: [2.8527999999999887e-05, 2.8138999999999942e-05, 2.8208000000001787e-05, 2.8318999999998873e-05, 2.7861000000000552e-05, 2.8083000000001662e-05, 2.7777999999999137e-05, 2.8333000000001912e-05, 2.8402999999999762e-05, 2.8138999999999942e-05, 2.7888999999999692e-05, 2.7597000000000732e-05, 2.7805999999998277e-05, 2.8111000000000802e-05, 2.8346999999998013e-05, 2.819499999999822e-05, 2.8056000000001996e-05, 2.8306000000002246e-05, 2.816700000000255e-05, 2.7792000000002176e-05, 2.8472000000001607e-05, 2.8500000000000747e-05, 2.8555999999999027e-05, 2.79309999999984e-05, 2.8013999999999817e-05, 2.8471999999998138e-05, 2.8360999999997583e-05, 2.798700000000015e-05, 2.7542000000001926e-05, 2.8098000000000706e-05, 2.7820000000001316e-05, 2.8027999999999387e-05, 2.7820000000001316e-05, 2.841699999999933e-05, 2.8514000000000317e-05, 2.8112000000000276e-05, 2.7929999999998928e-05, 2.8027999999999387e-05, 2.822300000000083e-05, 2.7944000000001967e-05, 2.8347000000001482e-05, 2.7930000000002397e-05, 2.7861000000000552e-05, 2.8250000000000497e-05, 2.8069000000002092e-05, 2.7819000000001842e-05, 2.7804999999998803e-05, 2.8083000000001662e-05, 2.8457999999998568e-05, 2.8389000000000192e-05]</msg>
<status status="PASS" starttime="20201029 12:47:00.350" endtime="20201029 12:47:00.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.345" endtime="20201029 12:47:00.353"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:00.357" endtime="20201029 12:47:00.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.356" endtime="20201029 12:47:00.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.354" endtime="20201029 12:47:00.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.973" endtime="20201029 12:47:00.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.972" endtime="20201029 12:47:00.378"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.387" endtime="20201029 12:47:00.403"></status>
</kw>
<msg timestamp="20201029 12:47:00.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.385" endtime="20201029 12:47:00.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.405" endtime="20201029 12:47:00.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.407" endtime="20201029 12:47:00.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.383" endtime="20201029 12:47:00.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.381" endtime="20201029 12:47:00.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.417" endtime="20201029 12:47:00.699"></status>
</kw>
<msg timestamp="20201029 12:47:00.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022592375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.415" endtime="20201029 12:47:00.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022592375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.704" endtime="20201029 12:47:00.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.712" endtime="20201029 12:47:00.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.412" endtime="20201029 12:47:00.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.410" endtime="20201029 12:47:00.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:00.719" level="INFO">${RESULT} = [{'diff': 2.94309999999999e-05}, {'diff': 2.9472000000002607e-05}, {'diff': 2.9276999999997694e-05}, {'diff': 2.9527000000001413e-05}, {'diff': 2.8861000000001552e-05}, {'diff': 2.9471999999999138e-05...</msg>
<status status="PASS" starttime="20201029 12:47:00.716" endtime="20201029 12:47:00.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:00.727" level="INFO">${ACCURACY} = {'diff': [2.94309999999999e-05, 2.9472000000002607e-05, 2.9276999999997694e-05, 2.9527000000001413e-05, 2.8861000000001552e-05, 2.9471999999999138e-05, 2.9347000000002482e-05, 2.8860999999998083e-05, ...</msg>
<status status="PASS" starttime="20201029 12:47:00.720" endtime="20201029 12:47:00.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.732" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 12:47:00.731" endtime="20201029 12:47:00.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.734" level="INFO">VALUE: [2.94309999999999e-05, 2.9472000000002607e-05, 2.9276999999997694e-05, 2.9527000000001413e-05, 2.8861000000001552e-05, 2.9471999999999138e-05, 2.9347000000002482e-05, 2.8860999999998083e-05, 2.8888999999997222e-05, 2.9528000000000887e-05, 2.9222000000002357e-05, 2.9263999999997597e-05, 2.9193999999999748e-05, 2.8875000000001122e-05, 2.8818999999999373e-05, 2.894499999999897e-05, 2.9291000000000733e-05, 2.9430000000000428e-05, 2.9278000000000637e-05, 2.9014000000000817e-05, 2.9055000000000053e-05, 2.918099999999965e-05, 2.9332999999999443e-05, 2.9055000000000053e-05, 2.8846999999998513e-05, 2.9305999999999777e-05, 2.9403000000000762e-05, 2.8985999999998208e-05, 2.9000000000001247e-05, 2.8875000000001122e-05, 2.8653000000000012e-05, 2.8596999999998263e-05, 2.9417000000000332e-05, 2.9000000000001247e-05, 2.8527999999999887e-05, 2.9334000000002386e-05, 2.893100000000287e-05, 2.9360999999998583e-05, 2.9000000000001247e-05, 2.8819999999998847e-05, 2.918099999999965e-05, 2.9235999999998458e-05, 2.888799999999775e-05, 2.9249999999998028e-05, 2.9028000000000387e-05, 2.8570000000002066e-05, 2.8791999999999707e-05, 2.8903000000000262e-05, 2.8584000000001636e-05, 2.8555999999999027e-05]</msg>
<status status="PASS" starttime="20201029 12:47:00.733" endtime="20201029 12:47:00.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.728" endtime="20201029 12:47:00.736"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:00.739" endtime="20201029 12:47:00.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.738" endtime="20201029 12:47:00.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.737" endtime="20201029 12:47:00.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.379" endtime="20201029 12:47:00.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.379" endtime="20201029 12:47:00.760"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.769" endtime="20201029 12:47:00.784"></status>
</kw>
<msg timestamp="20201029 12:47:00.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.768" endtime="20201029 12:47:00.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.786" endtime="20201029 12:47:00.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.788" endtime="20201029 12:47:00.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.765" endtime="20201029 12:47:00.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.763" endtime="20201029 12:47:00.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.798" endtime="20201029 12:47:01.128"></status>
</kw>
<msg timestamp="20201029 12:47:01.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022381861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022411667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.796" endtime="20201029 12:47:01.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022381861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022411667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:01.133" endtime="20201029 12:47:01.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.141" endtime="20201029 12:47:01.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.793" endtime="20201029 12:47:01.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.791" endtime="20201029 12:47:01.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:01.148" level="INFO">${RESULT} = [{'diff': 2.9806000000000277e-05}, {'diff': 3.022300000000283e-05}, {'diff': 2.9624999999998403e-05}, {'diff': 2.9806000000000277e-05}, {'diff': 2.9625000000001872e-05}, {'diff': 3.0041999999997487e-0...</msg>
<status status="PASS" starttime="20201029 12:47:01.145" endtime="20201029 12:47:01.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:01.152" level="INFO">${ACCURACY} = {'diff': [2.9806000000000277e-05, 3.022300000000283e-05, 2.9624999999998403e-05, 2.9806000000000277e-05, 2.9625000000001872e-05, 3.0041999999997487e-05, 3.0208000000000318e-05, 3.0069000000000623e-05,...</msg>
<status status="PASS" starttime="20201029 12:47:01.149" endtime="20201029 12:47:01.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.156" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 12:47:01.155" endtime="20201029 12:47:01.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.159" level="INFO">VALUE: [2.9806000000000277e-05, 3.022300000000283e-05, 2.9624999999998403e-05, 2.9806000000000277e-05, 2.9625000000001872e-05, 3.0041999999997487e-05, 3.0208000000000318e-05, 3.0069000000000623e-05, 2.9889000000001692e-05, 2.9986000000002677e-05, 3.0125000000002372e-05, 3.016599999999814e-05, 3.0125000000002372e-05, 2.9874999999998653e-05, 3.0221999999999888e-05, 2.9888999999998223e-05, 3.0041000000001483e-05, 3.0347000000000013e-05, 3.0028000000001387e-05, 2.9819000000000373e-05, 3.0208000000000318e-05, 2.994399999999703e-05, 2.9944000000000498e-05, 3.0040999999998014e-05, 3.0153000000001512e-05, 3.0402999999998293e-05, 2.9888999999998223e-05, 2.9917000000000832e-05, 2.9888999999998223e-05, 2.9931000000000402e-05, 3.0153000000001512e-05, 2.969499999999972e-05, 2.9791999999997237e-05, 3.0388999999998723e-05, 3.0221999999999888e-05, 3.0444000000000998e-05, 3.0458000000000568e-05, 2.9902999999997792e-05, 3.0431000000000902e-05, 3.0208000000000318e-05, 3.0250000000002497e-05, 3.044500000000047e-05, 3.044500000000047e-05, 2.995899999999954e-05, 2.9528000000000887e-05, 2.995900000000301e-05, 2.9874999999998653e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0249999999999028e-05]</msg>
<status status="PASS" starttime="20201029 12:47:01.158" endtime="20201029 12:47:01.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.153" endtime="20201029 12:47:01.160"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:01.164" endtime="20201029 12:47:01.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.162" endtime="20201029 12:47:01.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.161" endtime="20201029 12:47:01.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.761" endtime="20201029 12:47:01.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.760" endtime="20201029 12:47:01.185"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.194" endtime="20201029 12:47:01.210"></status>
</kw>
<msg timestamp="20201029 12:47:01.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:01.192" endtime="20201029 12:47:01.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:01.211" endtime="20201029 12:47:01.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.214" endtime="20201029 12:47:01.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.190" endtime="20201029 12:47:01.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.188" endtime="20201029 12:47:01.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.223" endtime="20201029 12:47:01.508"></status>
</kw>
<msg timestamp="20201029 12:47:01.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022325708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022356458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:01.221" endtime="20201029 12:47:01.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022325708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022356458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:01.512" endtime="20201029 12:47:01.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.521" endtime="20201029 12:47:01.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.219" endtime="20201029 12:47:01.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.217" endtime="20201029 12:47:01.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:01.527" level="INFO">${RESULT} = [{'diff': 3.074999999999953e-05}, {'diff': 3.1318999999998404e-05}, {'diff': 3.12639999999996e-05}, {'diff': 3.1054999999998584e-05}, {'diff': 3.131900000000187e-05}, {'diff': 3.0790999999998764e-05},...</msg>
<status status="PASS" starttime="20201029 12:47:01.524" endtime="20201029 12:47:01.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:01.532" level="INFO">${ACCURACY} = {'diff': [3.074999999999953e-05, 3.1318999999998404e-05, 3.12639999999996e-05, 3.1054999999998584e-05, 3.131900000000187e-05, 3.0790999999998764e-05, 3.055500000000155e-05, 3.147200000000114e-05, 3.06...</msg>
<status status="PASS" starttime="20201029 12:47:01.528" endtime="20201029 12:47:01.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.536" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 12:47:01.535" endtime="20201029 12:47:01.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.539" level="INFO">VALUE: [3.074999999999953e-05, 3.1318999999998404e-05, 3.12639999999996e-05, 3.1054999999998584e-05, 3.131900000000187e-05, 3.0790999999998764e-05, 3.055500000000155e-05, 3.147200000000114e-05, 3.065300000000201e-05, 3.150000000000028e-05, 3.118000000000218e-05, 3.119399999999828e-05, 3.101399999999935e-05, 3.091600000000236e-05, 3.084700000000051e-05, 3.087499999999965e-05, 3.147199999999767e-05, 3.148600000000071e-05, 3.08050000000018e-05, 3.123600000000046e-05, 3.091699999999836e-05, 3.144399999999853e-05, 3.108300000000119e-05, 3.086100000000008e-05, 3.099999999999978e-05, 3.104199999999849e-05, 3.133300000000144e-05, 3.130600000000178e-05, 3.12639999999996e-05, 3.099999999999978e-05, 3.141699999999886e-05, 3.1360999999997113e-05, 3.091599999999889e-05, 3.080600000000128e-05, 3.136100000000058e-05, 3.063899999999897e-05, 3.147300000000061e-05, 3.144399999999853e-05, 3.127799999999917e-05, 3.1554999999999084e-05, 3.151399999999985e-05, 3.094500000000097e-05, 3.101399999999935e-05, 3.137500000000015e-05, 3.090300000000226e-05, 3.148600000000071e-05, 3.1026999999999444e-05, 3.066600000000211e-05, 3.140199999999982e-05, 3.099999999999978e-05]</msg>
<status status="PASS" starttime="20201029 12:47:01.538" endtime="20201029 12:47:01.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.533" endtime="20201029 12:47:01.540"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:01.544" endtime="20201029 12:47:01.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.542" endtime="20201029 12:47:01.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.541" endtime="20201029 12:47:01.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.186" endtime="20201029 12:47:01.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.186" endtime="20201029 12:47:01.565"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.573" endtime="20201029 12:47:01.590"></status>
</kw>
<msg timestamp="20201029 12:47:01.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:01.572" endtime="20201029 12:47:01.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:01.592" endtime="20201029 12:47:01.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.594" endtime="20201029 12:47:01.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.569" endtime="20201029 12:47:01.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.567" endtime="20201029 12:47:01.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.603" endtime="20201029 12:47:01.890"></status>
</kw>
<msg timestamp="20201029 12:47:01.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022304153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022336042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:01.602" endtime="20201029 12:47:01.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022304153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022336042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:01.895" endtime="20201029 12:47:01.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.907" endtime="20201029 12:47:01.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.599" endtime="20201029 12:47:01.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.597" endtime="20201029 12:47:01.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:01.917" level="INFO">${RESULT} = [{'diff': 3.188900000000022e-05}, {'diff': 3.194500000000197e-05}, {'diff': 3.180600000000228e-05}, {'diff': 3.220900000000179e-05}, {'diff': 3.163899999999997e-05}, {'diff': 3.219399999999928e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:01.912" endtime="20201029 12:47:01.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:01.923" level="INFO">${ACCURACY} = {'diff': [3.188900000000022e-05, 3.194500000000197e-05, 3.180600000000228e-05, 3.220900000000179e-05, 3.163899999999997e-05, 3.219399999999928e-05, 3.2263000000001124e-05, 3.231900000000287e-05, 3.191...</msg>
<status status="PASS" starttime="20201029 12:47:01.919" endtime="20201029 12:47:01.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.929" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 12:47:01.928" endtime="20201029 12:47:01.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.932" level="INFO">VALUE: [3.188900000000022e-05, 3.194500000000197e-05, 3.180600000000228e-05, 3.220900000000179e-05, 3.163899999999997e-05, 3.219399999999928e-05, 3.2263000000001124e-05, 3.231900000000287e-05, 3.191700000000283e-05, 3.226399999999713e-05, 3.158300000000169e-05, 3.208300000000219e-05, 3.204199999999949e-05, 3.211100000000133e-05, 3.215200000000057e-05, 3.1832999999998474e-05, 3.1790999999999764e-05, 3.159700000000126e-05, 3.2054999999999584e-05, 3.2304999999999834e-05, 3.2096999999998294e-05, 3.2304999999999834e-05, 3.244399999999953e-05, 3.2068999999999154e-05, 3.2304999999999834e-05, 3.197200000000164e-05, 3.1790999999999764e-05, 3.222200000000189e-05, 3.201400000000035e-05, 3.187500000000065e-05, 3.225000000000103e-05, 3.250000000000128e-05, 3.180599999999881e-05, 3.24579999999991e-05, 3.2360999999998113e-05, 3.223599999999799e-05, 3.21250000000009e-05, 3.237500000000115e-05, 3.243099999999943e-05, 3.163899999999997e-05, 3.1582999999998224e-05, 3.195900000000154e-05, 3.2110999999997863e-05, 3.2068999999999154e-05, 3.247199999999867e-05, 3.2110999999997863e-05, 3.220899999999832e-05, 3.241699999999986e-05, 3.194500000000197e-05, 3.238900000000072e-05]</msg>
<status status="PASS" starttime="20201029 12:47:01.930" endtime="20201029 12:47:01.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.924" endtime="20201029 12:47:01.934"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:01.939" endtime="20201029 12:47:01.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.937" endtime="20201029 12:47:01.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.936" endtime="20201029 12:47:01.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.566" endtime="20201029 12:47:01.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.565" endtime="20201029 12:47:01.960"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.969" endtime="20201029 12:47:01.985"></status>
</kw>
<msg timestamp="20201029 12:47:01.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:01.967" endtime="20201029 12:47:01.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:01.986" endtime="20201029 12:47:01.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.989" endtime="20201029 12:47:01.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.965" endtime="20201029 12:47:01.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.963" endtime="20201029 12:47:01.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.998" endtime="20201029 12:47:02.284"></status>
</kw>
<msg timestamp="20201029 12:47:02.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022943042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022976542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:01.996" endtime="20201029 12:47:02.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022943042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022976542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:02.289" endtime="20201029 12:47:02.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.297" endtime="20201029 12:47:02.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.994" endtime="20201029 12:47:02.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.992" endtime="20201029 12:47:02.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:02.303" level="INFO">${RESULT} = [{'diff': 3.349999999999881e-05}, {'diff': 3.325000000000203e-05}, {'diff': 3.26389999999975e-05}, {'diff': 3.330600000000031e-05}, {'diff': 3.344400000000053e-05}, {'diff': 3.301399999999788e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:02.300" endtime="20201029 12:47:02.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:02.308" level="INFO">${ACCURACY} = {'diff': [3.349999999999881e-05, 3.325000000000203e-05, 3.26389999999975e-05, 3.330600000000031e-05, 3.344400000000053e-05, 3.301399999999788e-05, 3.302800000000092e-05, 3.251400000000085e-05, 3.31250...</msg>
<status status="PASS" starttime="20201029 12:47:02.304" endtime="20201029 12:47:02.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.312" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 12:47:02.311" endtime="20201029 12:47:02.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.315" level="INFO">VALUE: [3.349999999999881e-05, 3.325000000000203e-05, 3.26389999999975e-05, 3.330600000000031e-05, 3.344400000000053e-05, 3.301399999999788e-05, 3.302800000000092e-05, 3.251400000000085e-05, 3.31250000000019e-05, 3.340299999999782e-05, 3.305600000000006e-05, 3.333399999999945e-05, 3.341700000000086e-05, 3.333399999999945e-05, 3.327800000000117e-05, 3.279200000000024e-05, 3.26250000000014e-05, 3.297300000000211e-05, 3.2612000000001307e-05, 3.302799999999745e-05, 3.338900000000172e-05, 3.284799999999852e-05, 3.258400000000217e-05, 3.29449999999995e-05, 3.347299999999914e-05, 3.288799999999828e-05, 3.29449999999995e-05, 3.350000000000228e-05, 3.299999999999831e-05, 3.3526999999998475e-05, 3.287500000000165e-05, 3.274999999999806e-05, 3.341600000000139e-05, 3.276399999999763e-05, 3.3360999999999114e-05, 3.3096999999999294e-05, 3.261100000000183e-05, 3.341700000000086e-05, 3.349999999999881e-05, 3.344400000000053e-05, 3.288899999999775e-05, 3.2582999999999224e-05, 3.3305000000000834e-05, 3.343000000000096e-05, 3.32779999999977e-05, 3.354200000000099e-05, 3.3304999999997364e-05, 3.2832999999999474e-05, 3.2818999999999904e-05, 3.344399999999706e-05]</msg>
<status status="PASS" starttime="20201029 12:47:02.313" endtime="20201029 12:47:02.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.308" endtime="20201029 12:47:02.317"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:02.320" endtime="20201029 12:47:02.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.319" endtime="20201029 12:47:02.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.318" endtime="20201029 12:47:02.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.961" endtime="20201029 12:47:02.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.961" endtime="20201029 12:47:02.341"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.350" endtime="20201029 12:47:02.365"></status>
</kw>
<msg timestamp="20201029 12:47:02.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.348" endtime="20201029 12:47:02.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.366" endtime="20201029 12:47:02.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.369" endtime="20201029 12:47:02.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.345" endtime="20201029 12:47:02.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.343" endtime="20201029 12:47:02.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.378" endtime="20201029 12:47:02.663"></status>
</kw>
<msg timestamp="20201029 12:47:02.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021980944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022015569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:02.376" endtime="20201029 12:47:02.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021980944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022015569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:02.668" endtime="20201029 12:47:02.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.676" endtime="20201029 12:47:02.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.374" endtime="20201029 12:47:02.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.372" endtime="20201029 12:47:02.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:02.683" level="INFO">${RESULT} = [{'diff': 3.4624999999999934e-05}, {'diff': 3.4554999999998615e-05}, {'diff': 3.442999999999849e-05}, {'diff': 3.416600000000214e-05}, {'diff': 3.4026999999998975e-05}, {'diff': 3.402799999999845e-05}...</msg>
<status status="PASS" starttime="20201029 12:47:02.679" endtime="20201029 12:47:02.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:02.688" level="INFO">${ACCURACY} = {'diff': [3.4624999999999934e-05, 3.4554999999998615e-05, 3.442999999999849e-05, 3.416600000000214e-05, 3.4026999999998975e-05, 3.402799999999845e-05, 3.391700000000136e-05, 3.397200000000017e-05, 3.4...</msg>
<status status="PASS" starttime="20201029 12:47:02.684" endtime="20201029 12:47:02.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.692" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 12:47:02.691" endtime="20201029 12:47:02.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.694" level="INFO">VALUE: [3.4624999999999934e-05, 3.4554999999998615e-05, 3.442999999999849e-05, 3.416600000000214e-05, 3.4026999999998975e-05, 3.402799999999845e-05, 3.391700000000136e-05, 3.397200000000017e-05, 3.4541000000002514e-05, 3.3805000000001334e-05, 3.422200000000042e-05, 3.402800000000192e-05, 3.4333000000000974e-05, 3.423599999999999e-05, 3.393100000000093e-05, 3.4124999999999434e-05, 3.366700000000111e-05, 3.416699999999814e-05, 3.36250000000024e-05, 3.452799999999895e-05, 3.390299999999832e-05, 3.393099999999746e-05, 3.391699999999789e-05, 3.423599999999999e-05, 3.456999999999766e-05, 3.3860999999999614e-05, 3.424999999999956e-05, 3.3638999999998503e-05, 3.4374999999999684e-05, 3.424999999999956e-05, 3.409799999999977e-05, 3.39450000000005e-05, 3.4138999999999003e-05, 3.397299999999964e-05, 3.377800000000167e-05, 3.3860999999999614e-05, 3.3819000000000904e-05, 3.390300000000179e-05, 3.384799999999952e-05, 3.411200000000281e-05, 3.391600000000189e-05, 3.451399999999938e-05, 3.386100000000308e-05, 3.422200000000042e-05, 3.4361000000000114e-05, 3.3610999999999364e-05, 3.402800000000192e-05, 3.393000000000146e-05, 3.3847000000000044e-05, 3.451399999999938e-05]</msg>
<status status="PASS" starttime="20201029 12:47:02.693" endtime="20201029 12:47:02.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.688" endtime="20201029 12:47:02.696"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:02.699" endtime="20201029 12:47:02.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.698" endtime="20201029 12:47:02.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.697" endtime="20201029 12:47:02.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.342" endtime="20201029 12:47:02.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.341" endtime="20201029 12:47:02.720"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.729" endtime="20201029 12:47:02.744"></status>
</kw>
<msg timestamp="20201029 12:47:02.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.727" endtime="20201029 12:47:02.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.745" endtime="20201029 12:47:02.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.748" endtime="20201029 12:47:02.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.725" endtime="20201029 12:47:02.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.722" endtime="20201029 12:47:02.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.757" endtime="20201029 12:47:03.044"></status>
</kw>
<msg timestamp="20201029 12:47:03.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021921486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021956694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:02.755" endtime="20201029 12:47:03.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021921486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021956694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:03.049" endtime="20201029 12:47:03.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.057" endtime="20201029 12:47:03.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.753" endtime="20201029 12:47:03.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.751" endtime="20201029 12:47:03.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:03.064" level="INFO">${RESULT} = [{'diff': 3.520799999999838e-05}, {'diff': 3.518099999999871e-05}, {'diff': 3.551400000000038e-05}, {'diff': 3.4847000000001044e-05}, {'diff': 3.526400000000013e-05}, {'diff': 3.552799999999995e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:03.060" endtime="20201029 12:47:03.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:03.068" level="INFO">${ACCURACY} = {'diff': [3.520799999999838e-05, 3.518099999999871e-05, 3.551400000000038e-05, 3.4847000000001044e-05, 3.526400000000013e-05, 3.552799999999995e-05, 3.479199999999877e-05, 3.5375000000000684e-05, 3.49...</msg>
<status status="PASS" starttime="20201029 12:47:03.065" endtime="20201029 12:47:03.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.072" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 12:47:03.071" endtime="20201029 12:47:03.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.075" level="INFO">VALUE: [3.520799999999838e-05, 3.518099999999871e-05, 3.551400000000038e-05, 3.4847000000001044e-05, 3.526400000000013e-05, 3.552799999999995e-05, 3.479199999999877e-05, 3.5375000000000684e-05, 3.497300000000064e-05, 3.527800000000317e-05, 3.5083000000001724e-05, 3.4652999999999073e-05, 3.5111000000000864e-05, 3.4888999999999754e-05, 3.5139000000000004e-05, 3.459800000000027e-05, 3.52779999999997e-05, 3.550000000000081e-05, 3.548600000000124e-05, 3.536200000000059e-05, 3.529199999999927e-05, 3.498600000000074e-05, 3.5361000000001114e-05, 3.4875000000000184e-05, 3.54719999999982e-05, 3.5054999999999115e-05, 3.545799999999863e-05, 3.549999999999734e-05, 3.490199999999985e-05, 3.5125000000000434e-05, 3.5375000000000684e-05, 3.5305000000002834e-05, 3.490300000000279e-05, 3.523600000000099e-05, 3.516599999999967e-05, 3.475000000000006e-05, 3.5166999999999143e-05, 3.5125000000000434e-05, 3.4568999999998185e-05, 3.5389000000000254e-05, 3.5139000000000004e-05, 3.479200000000224e-05, 3.479200000000224e-05, 3.4875000000000184e-05, 3.530599999999884e-05, 3.5069000000002154e-05, 3.554199999999952e-05, 3.529199999999927e-05, 3.525000000000056e-05, 3.5402999999999823e-05]</msg>
<status status="PASS" starttime="20201029 12:47:03.073" endtime="20201029 12:47:03.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.069" endtime="20201029 12:47:03.076"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:03.080" endtime="20201029 12:47:03.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.078" endtime="20201029 12:47:03.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.077" endtime="20201029 12:47:03.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.721" endtime="20201029 12:47:03.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.720" endtime="20201029 12:47:03.101"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.110" endtime="20201029 12:47:03.127"></status>
</kw>
<msg timestamp="20201029 12:47:03.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:03.108" endtime="20201029 12:47:03.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:03.128" endtime="20201029 12:47:03.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.131" endtime="20201029 12:47:03.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.106" endtime="20201029 12:47:03.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.103" endtime="20201029 12:47:03.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.142" endtime="20201029 12:47:03.429"></status>
</kw>
<msg timestamp="20201029 12:47:03.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023762097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023798347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:03.141" endtime="20201029 12:47:03.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023762097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023798347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:03.433" endtime="20201029 12:47:03.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.441" endtime="20201029 12:47:03.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.137" endtime="20201029 12:47:03.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.135" endtime="20201029 12:47:03.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:03.448" level="INFO">${RESULT} = [{'diff': 3.625000000000156e-05}, {'diff': 3.6346999999999074e-05}, {'diff': 3.644400000000006e-05}, {'diff': 3.6055000000000115e-05}, {'diff': 3.645799999999963e-05}, {'diff': 3.5625000000000934e-05}...</msg>
<status status="PASS" starttime="20201029 12:47:03.445" endtime="20201029 12:47:03.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:03.452" level="INFO">${ACCURACY} = {'diff': [3.625000000000156e-05, 3.6346999999999074e-05, 3.644400000000006e-05, 3.6055000000000115e-05, 3.645799999999963e-05, 3.5625000000000934e-05, 3.622200000000242e-05, 3.64589999999991e-05, 3.58...</msg>
<status status="PASS" starttime="20201029 12:47:03.449" endtime="20201029 12:47:03.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.457" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 12:47:03.456" endtime="20201029 12:47:03.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.460" level="INFO">VALUE: [3.625000000000156e-05, 3.6346999999999074e-05, 3.644400000000006e-05, 3.6055000000000115e-05, 3.645799999999963e-05, 3.5625000000000934e-05, 3.622200000000242e-05, 3.64589999999991e-05, 3.5818999999999435e-05, 3.5582999999998755e-05, 3.645799999999963e-05, 3.643000000000049e-05, 3.5903000000000324e-05, 3.6180999999999713e-05, 3.5625000000000934e-05, 3.655600000000009e-05, 3.620899999999885e-05, 3.576400000000063e-05, 3.654200000000052e-05, 3.631999999999941e-05, 3.64589999999991e-05, 3.655600000000009e-05, 3.619499999999928e-05, 3.59450000000025e-05, 3.622299999999842e-05, 3.5916999999999893e-05, 3.580599999999934e-05, 3.594499999999903e-05, 3.561200000000084e-05, 3.563800000000103e-05, 3.579199999999977e-05, 3.598699999999774e-05, 3.641600000000092e-05, 3.572300000000139e-05, 3.5804999999999865e-05, 3.64719999999992e-05, 3.6139000000001004e-05, 3.6374999999998214e-05, 3.640200000000135e-05, 3.591600000000042e-05, 3.640199999999788e-05, 3.622199999999895e-05, 3.6041000000000545e-05, 3.620800000000285e-05, 3.5874999999997714e-05, 3.6305000000000365e-05, 3.600000000000131e-05, 3.618000000000024e-05, 3.5875000000001184e-05, 3.647200000000267e-05]</msg>
<status status="PASS" starttime="20201029 12:47:03.458" endtime="20201029 12:47:03.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.453" endtime="20201029 12:47:03.461"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:03.465" endtime="20201029 12:47:03.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.463" endtime="20201029 12:47:03.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.462" endtime="20201029 12:47:03.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.102" endtime="20201029 12:47:03.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.101" endtime="20201029 12:47:03.485"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.494" endtime="20201029 12:47:03.510"></status>
</kw>
<msg timestamp="20201029 12:47:03.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:03.493" endtime="20201029 12:47:03.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:03.512" endtime="20201029 12:47:03.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.514" endtime="20201029 12:47:03.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.490" endtime="20201029 12:47:03.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.488" endtime="20201029 12:47:03.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.523" endtime="20201029 12:47:03.809"></status>
</kw>
<msg timestamp="20201029 12:47:03.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021877014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02191425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:03.522" endtime="20201029 12:47:03.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021877014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02191425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:03.814" endtime="20201029 12:47:03.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.822" endtime="20201029 12:47:03.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.519" endtime="20201029 12:47:03.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.517" endtime="20201029 12:47:03.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:03.829" level="INFO">${RESULT} = [{'diff': 3.723599999999952e-05}, {'diff': 3.754200000000152e-05}, {'diff': 3.751399999999891e-05}, {'diff': 3.701399999999841e-05}, {'diff': 3.680600000000034e-05}, {'diff': 3.694500000000003e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:03.825" endtime="20201029 12:47:03.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:03.834" level="INFO">${ACCURACY} = {'diff': [3.723599999999952e-05, 3.754200000000152e-05, 3.751399999999891e-05, 3.701399999999841e-05, 3.680600000000034e-05, 3.694500000000003e-05, 3.6931000000000463e-05, 3.6944999999996564e-05, 3.68...</msg>
<status status="PASS" starttime="20201029 12:47:03.830" endtime="20201029 12:47:03.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.838" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 12:47:03.837" endtime="20201029 12:47:03.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.841" level="INFO">VALUE: [3.723599999999952e-05, 3.754200000000152e-05, 3.751399999999891e-05, 3.701399999999841e-05, 3.680600000000034e-05, 3.694500000000003e-05, 3.6931000000000463e-05, 3.6944999999996564e-05, 3.6888999999998284e-05, 3.683400000000295e-05, 3.6931000000000463e-05, 3.6847000000003044e-05, 3.683399999999948e-05, 3.754200000000152e-05, 3.683399999999948e-05, 3.7389000000002254e-05, 3.6917000000000894e-05, 3.722299999999942e-05, 3.748699999999924e-05, 3.7181000000000713e-05, 3.7333000000000505e-05, 3.705599999999712e-05, 3.7139000000002004e-05, 3.7054999999997645e-05, 3.74720000000002e-05, 3.7403000000001824e-05, 3.743000000000149e-05, 3.7304999999997895e-05, 3.7319000000000935e-05, 3.7374999999999214e-05, 3.6888999999998284e-05, 3.7181000000000713e-05, 3.7138999999998534e-05, 3.691599999999795e-05, 3.720800000000038e-05, 3.684799999999905e-05, 3.7305000000001365e-05, 3.6902999999997854e-05, 3.6653000000001074e-05, 3.701400000000188e-05, 3.6624999999998464e-05, 3.7319000000000935e-05, 3.751399999999891e-05, 3.7195000000000283e-05, 3.6569000000000185e-05, 3.722199999999995e-05, 3.69719999999997e-05, 3.752799999999848e-05, 3.7361000000003114e-05, 3.694500000000003e-05]</msg>
<status status="PASS" starttime="20201029 12:47:03.839" endtime="20201029 12:47:03.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.835" endtime="20201029 12:47:03.842"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:03.846" endtime="20201029 12:47:03.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.844" endtime="20201029 12:47:03.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.843" endtime="20201029 12:47:03.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.486" endtime="20201029 12:47:03.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.486" endtime="20201029 12:47:03.866"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.875" endtime="20201029 12:47:03.891"></status>
</kw>
<msg timestamp="20201029 12:47:03.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:03.873" endtime="20201029 12:47:03.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:03.893" endtime="20201029 12:47:03.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.895" endtime="20201029 12:47:03.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.871" endtime="20201029 12:47:03.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.869" endtime="20201029 12:47:03.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.904" endtime="20201029 12:47:04.190"></status>
</kw>
<msg timestamp="20201029 12:47:04.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021950222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021987917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:03.903" endtime="20201029 12:47:04.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021950222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021987917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:04.194" endtime="20201029 12:47:04.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.203" endtime="20201029 12:47:04.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.900" endtime="20201029 12:47:04.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.898" endtime="20201029 12:47:04.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:04.210" level="INFO">${RESULT} = [{'diff': 3.7695000000000783e-05}, {'diff': 3.8416999999998924e-05}, {'diff': 3.831999999999794e-05}, {'diff': 3.75979999999998e-05}, {'diff': 3.823600000000052e-05}, {'diff': 3.790200000000285e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:04.206" endtime="20201029 12:47:04.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:04.214" level="INFO">${ACCURACY} = {'diff': [3.7695000000000783e-05, 3.8416999999998924e-05, 3.831999999999794e-05, 3.75979999999998e-05, 3.823600000000052e-05, 3.790200000000285e-05, 3.8153000000002574e-05, 3.8111000000000395e-05, 3.7...</msg>
<status status="PASS" starttime="20201029 12:47:04.211" endtime="20201029 12:47:04.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.218" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 12:47:04.217" endtime="20201029 12:47:04.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.221" level="INFO">VALUE: [3.7695000000000783e-05, 3.8416999999998924e-05, 3.831999999999794e-05, 3.75979999999998e-05, 3.823600000000052e-05, 3.790200000000285e-05, 3.8153000000002574e-05, 3.8111000000000395e-05, 3.7874999999999714e-05, 3.752800000000195e-05, 3.830600000000184e-05, 3.850000000000034e-05, 3.84720000000012e-05, 3.8527000000000006e-05, 3.8319000000001935e-05, 3.8333000000001505e-05, 3.819400000000181e-05, 3.84720000000012e-05, 3.7804999999998395e-05, 3.8569000000002185e-05, 3.7847000000000575e-05, 3.8290999999999326e-05, 3.7888999999999284e-05, 3.82919999999988e-05, 3.823600000000052e-05, 3.844400000000206e-05, 3.82919999999988e-05, 3.851399999999991e-05, 3.84859999999973e-05, 3.8417000000002394e-05, 3.7861000000000145e-05, 3.8166999999998674e-05, 3.7597000000000325e-05, 3.79720000000007e-05, 3.827799999999923e-05, 3.825000000000009e-05, 3.7653000000002074e-05, 3.848600000000077e-05, 3.850000000000034e-05, 3.77919999999983e-05, 3.7888999999999284e-05, 3.830600000000184e-05, 3.827799999999923e-05, 3.831999999999794e-05, 3.757000000000066e-05, 3.7888999999999284e-05, 3.8444999999998064e-05, 3.802799999999898e-05, 3.8180999999998244e-05, 3.783400000000048e-05]</msg>
<status status="PASS" starttime="20201029 12:47:04.219" endtime="20201029 12:47:04.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.215" endtime="20201029 12:47:04.222"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:04.226" endtime="20201029 12:47:04.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.224" endtime="20201029 12:47:04.246"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.223" endtime="20201029 12:47:04.246"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.867" endtime="20201029 12:47:04.246"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.867" endtime="20201029 12:47:04.246"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.255" endtime="20201029 12:47:04.274"></status>
</kw>
<msg timestamp="20201029 12:47:04.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.253" endtime="20201029 12:47:04.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.275" endtime="20201029 12:47:04.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.278" endtime="20201029 12:47:04.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.251" endtime="20201029 12:47:04.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.249" endtime="20201029 12:47:04.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.287" endtime="20201029 12:47:04.576"></status>
</kw>
<msg timestamp="20201029 12:47:04.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024841917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024880819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:04.285" endtime="20201029 12:47:04.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024841917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024880819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:04.581" endtime="20201029 12:47:04.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.590" endtime="20201029 12:47:04.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.283" endtime="20201029 12:47:04.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.281" endtime="20201029 12:47:04.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:04.597" level="INFO">${RESULT} = [{'diff': 3.890199999999691e-05}, {'diff': 3.923599999999805e-05}, {'diff': 3.9124999999997495e-05}, {'diff': 3.94859999999983e-05}, {'diff': 3.9361000000001645e-05}, {'diff': 3.9374999999997745e-05},...</msg>
<status status="PASS" starttime="20201029 12:47:04.593" endtime="20201029 12:47:04.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:04.601" level="INFO">${ACCURACY} = {'diff': [3.890199999999691e-05, 3.923599999999805e-05, 3.9124999999997495e-05, 3.94859999999983e-05, 3.9361000000001645e-05, 3.9374999999997745e-05, 3.9125000000000965e-05, 3.8554999999999146e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:47:04.598" endtime="20201029 12:47:04.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.605" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 12:47:04.604" endtime="20201029 12:47:04.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.608" level="INFO">VALUE: [3.890199999999691e-05, 3.923599999999805e-05, 3.9124999999997495e-05, 3.94859999999983e-05, 3.9361000000001645e-05, 3.9374999999997745e-05, 3.9125000000000965e-05, 3.8554999999999146e-05, 3.9139000000000534e-05, 3.9054999999999646e-05, 3.8804999999999396e-05, 3.923600000000152e-05, 3.925000000000109e-05, 3.951400000000091e-05, 3.9361000000001645e-05, 3.919400000000281e-05, 3.905600000000259e-05, 3.8639000000000034e-05, 3.923599999999805e-05, 3.8917000000002894e-05, 3.919399999999934e-05, 3.8875000000000715e-05, 3.8639000000000034e-05, 3.958400000000223e-05, 3.954200000000005e-05, 3.901400000000041e-05, 3.8889000000000284e-05, 3.9111000000001395e-05, 3.9208999999998384e-05, 3.8944999999998564e-05, 3.9139000000000534e-05, 3.948600000000177e-05, 3.952800000000048e-05, 3.925000000000109e-05, 3.929200000000327e-05, 3.8860999999997675e-05, 3.9458999999998634e-05, 3.9027000000000506e-05, 3.9304999999999896e-05, 3.9041000000000076e-05, 3.8902999999999854e-05, 3.9027000000000506e-05, 3.890200000000038e-05, 3.9263000000001186e-05, 3.923600000000152e-05, 3.8861000000001145e-05, 3.8888999999996815e-05, 3.949999999999787e-05, 3.945799999999916e-05, 3.9082999999998785e-05]</msg>
<status status="PASS" starttime="20201029 12:47:04.606" endtime="20201029 12:47:04.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.602" endtime="20201029 12:47:04.610"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:04.614" endtime="20201029 12:47:04.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.612" endtime="20201029 12:47:04.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.611" endtime="20201029 12:47:04.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.247" endtime="20201029 12:47:04.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.247" endtime="20201029 12:47:04.635"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.643" endtime="20201029 12:47:04.659"></status>
</kw>
<msg timestamp="20201029 12:47:04.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.642" endtime="20201029 12:47:04.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.661" endtime="20201029 12:47:04.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.663" endtime="20201029 12:47:04.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.639" endtime="20201029 12:47:04.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.637" endtime="20201029 12:47:04.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.673" endtime="20201029 12:47:04.959"></status>
</kw>
<msg timestamp="20201029 12:47:04.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02217925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022219389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:04.672" endtime="20201029 12:47:04.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02217925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022219389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:04.964" endtime="20201029 12:47:04.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.972" endtime="20201029 12:47:04.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.669" endtime="20201029 12:47:04.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.667" endtime="20201029 12:47:04.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:04.979" level="INFO">${RESULT} = [{'diff': 4.0138999999998065e-05}, {'diff': 4.019400000000034e-05}, {'diff': 4.04859999999993e-05}, {'diff': 3.9889000000001285e-05}, {'diff': 4.054200000000105e-05}, {'diff': 4.0319000000000466e-05},...</msg>
<status status="PASS" starttime="20201029 12:47:04.975" endtime="20201029 12:47:04.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:04.984" level="INFO">${ACCURACY} = {'diff': [4.0138999999998065e-05, 4.019400000000034e-05, 4.04859999999993e-05, 3.9889000000001285e-05, 4.054200000000105e-05, 4.0319000000000466e-05, 4.020799999999991e-05, 3.991600000000095e-05, 4.00...</msg>
<status status="PASS" starttime="20201029 12:47:04.980" endtime="20201029 12:47:04.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.988" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 12:47:04.987" endtime="20201029 12:47:04.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.991" level="INFO">VALUE: [4.0138999999998065e-05, 4.019400000000034e-05, 4.04859999999993e-05, 3.9889000000001285e-05, 4.054200000000105e-05, 4.0319000000000466e-05, 4.020799999999991e-05, 3.991600000000095e-05, 4.004200000000055e-05, 4.0445000000000064e-05, 4.001399999999794e-05, 4.0374999999998745e-05, 4.0194999999999814e-05, 4.001399999999794e-05, 4.000000000000184e-05, 4.0430999999997025e-05, 3.9917000000000424e-05, 4.0139000000001535e-05, 4.0445000000000064e-05, 4.004200000000055e-05, 4.04859999999993e-05, 3.9818999999999966e-05, 3.9930999999999994e-05, 3.9653000000000604e-05, 4.015199999999816e-05, 3.990200000000138e-05, 4.018000000000077e-05, 4.0124999999998495e-05, 3.993000000000052e-05, 4.0389000000001785e-05, 3.973599999999855e-05, 4.040200000000188e-05, 4.026400000000166e-05, 4.0569000000000716e-05, 3.994400000000009e-05, 4.0346999999999605e-05, 3.991600000000095e-05, 3.9624999999997995e-05, 4.0569000000000716e-05, 3.9874999999998245e-05, 4.023599999999905e-05, 3.9818999999999966e-05, 3.997199999999923e-05, 4.050000000000234e-05, 4.0583000000000286e-05, 4.0388999999998315e-05, 3.9875000000001715e-05, 4.027799999999776e-05, 4.022199999999948e-05, 3.99859999999988e-05]</msg>
<status status="PASS" starttime="20201029 12:47:04.989" endtime="20201029 12:47:05.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.985" endtime="20201029 12:47:05.009"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:05.013" endtime="20201029 12:47:05.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.011" endtime="20201029 12:47:05.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.010" endtime="20201029 12:47:05.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.635" endtime="20201029 12:47:05.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.635" endtime="20201029 12:47:05.034"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.042" endtime="20201029 12:47:05.058"></status>
</kw>
<msg timestamp="20201029 12:47:05.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.041" endtime="20201029 12:47:05.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.060" endtime="20201029 12:47:05.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.062" endtime="20201029 12:47:05.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.038" endtime="20201029 12:47:05.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.036" endtime="20201029 12:47:05.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.071" endtime="20201029 12:47:05.358"></status>
</kw>
<msg timestamp="20201029 12:47:05.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022022917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:05.070" endtime="20201029 12:47:05.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022022917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:05.362" endtime="20201029 12:47:05.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.371" endtime="20201029 12:47:05.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.067" endtime="20201029 12:47:05.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.065" endtime="20201029 12:47:05.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:05.377" level="INFO">${RESULT} = [{'diff': 4.155599999999815e-05}, {'diff': 4.1458999999997165e-05}, {'diff': 4.0889000000002285e-05}, {'diff': 4.156999999999772e-05}, {'diff': 4.1361000000000175e-05}, {'diff': 4.0972999999999704e-05...</msg>
<status status="PASS" starttime="20201029 12:47:05.374" endtime="20201029 12:47:05.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:05.381" level="INFO">${ACCURACY} = {'diff': [4.155599999999815e-05, 4.1458999999997165e-05, 4.0889000000002285e-05, 4.156999999999772e-05, 4.1361000000000175e-05, 4.0972999999999704e-05, 4.0986999999999274e-05, 4.105599999999765e-05, 4...</msg>
<status status="PASS" starttime="20201029 12:47:05.378" endtime="20201029 12:47:05.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.386" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 12:47:05.385" endtime="20201029 12:47:05.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.388" level="INFO">VALUE: [4.155599999999815e-05, 4.1458999999997165e-05, 4.0889000000002285e-05, 4.156999999999772e-05, 4.1361000000000175e-05, 4.0972999999999704e-05, 4.0986999999999274e-05, 4.105599999999765e-05, 4.132000000000094e-05, 4.1082999999997316e-05, 4.141600000000245e-05, 4.1512999999999967e-05, 4.14860000000003e-05, 4.1361000000000175e-05, 4.1069000000001216e-05, 4.116599999999873e-05, 4.099999999999937e-05, 4.124999999999962e-05, 4.102799999999851e-05, 4.0860999999999675e-05, 4.0903000000001855e-05, 4.122200000000048e-05, 4.09859999999998e-05, 4.094400000000109e-05, 4.0819000000000966e-05, 4.1417000000001924e-05, 4.1374999999999745e-05, 4.142999999999855e-05, 4.0889000000002285e-05, 4.105600000000112e-05, 4.124999999999962e-05, 4.0819000000000966e-05, 4.120800000000091e-05, 4.0902999999998385e-05, 4.105600000000112e-05, 4.1431000000001494e-05, 4.0902999999998385e-05, 4.122200000000048e-05, 4.129199999999833e-05, 4.104199999999808e-05, 4.100000000000284e-05, 4.1222999999999954e-05, 4.09859999999998e-05, 4.132000000000094e-05, 4.059799999999933e-05, 4.0874999999999245e-05, 4.1402999999998885e-05, 4.102800000000198e-05, 4.1304999999998426e-05, 4.099999999999937e-05]</msg>
<status status="PASS" starttime="20201029 12:47:05.387" endtime="20201029 12:47:05.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.382" endtime="20201029 12:47:05.390"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:05.393" endtime="20201029 12:47:05.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.392" endtime="20201029 12:47:05.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.391" endtime="20201029 12:47:05.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.035" endtime="20201029 12:47:05.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.034" endtime="20201029 12:47:05.414"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.423" endtime="20201029 12:47:05.440"></status>
</kw>
<msg timestamp="20201029 12:47:05.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.421" endtime="20201029 12:47:05.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.442" endtime="20201029 12:47:05.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.444" endtime="20201029 12:47:05.446"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.419" endtime="20201029 12:47:05.446"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.416" endtime="20201029 12:47:05.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.453" endtime="20201029 12:47:05.740"></status>
</kw>
<msg timestamp="20201029 12:47:05.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023128792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023171319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:05.451" endtime="20201029 12:47:05.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023128792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023171319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:05.744" endtime="20201029 12:47:05.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.753" endtime="20201029 12:47:05.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.449" endtime="20201029 12:47:05.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.447" endtime="20201029 12:47:05.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:05.759" level="INFO">${RESULT} = [{'diff': 4.2527000000000537e-05}, {'diff': 4.1624999999999995e-05}, {'diff': 4.2166999999999205e-05}, {'diff': 4.19860000000008e-05}, {'diff': 4.1819000000001966e-05}, {'diff': 4.1875000000000245e-05...</msg>
<status status="PASS" starttime="20201029 12:47:05.756" endtime="20201029 12:47:05.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:05.763" level="INFO">${ACCURACY} = {'diff': [4.2527000000000537e-05, 4.1624999999999995e-05, 4.2166999999999205e-05, 4.19860000000008e-05, 4.1819000000001966e-05, 4.1875000000000245e-05, 4.220800000000191e-05, 4.241599999999998e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:47:05.760" endtime="20201029 12:47:05.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.768" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 12:47:05.767" endtime="20201029 12:47:05.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.770" level="INFO">VALUE: [4.2527000000000537e-05, 4.1624999999999995e-05, 4.2166999999999205e-05, 4.19860000000008e-05, 4.1819000000001966e-05, 4.1875000000000245e-05, 4.220800000000191e-05, 4.241599999999998e-05, 4.2375000000000745e-05, 4.223600000000105e-05, 4.2360999999997706e-05, 4.222199999999801e-05, 4.2082999999998316e-05, 4.202799999999951e-05, 4.226400000000019e-05, 4.2054999999999176e-05, 4.220799999999844e-05, 4.226400000000019e-05, 4.230600000000237e-05, 4.223600000000105e-05, 4.2389000000000315e-05, 4.2181000000002244e-05, 4.1903000000002855e-05, 4.1888999999999815e-05, 4.1847000000001106e-05, 4.1847000000001106e-05, 4.200000000000037e-05, 4.250000000000087e-05, 4.208400000000126e-05, 4.205599999999865e-05, 4.209800000000083e-05, 4.2416999999999455e-05, 4.208399999999779e-05, 4.234799999999761e-05, 4.1902999999999385e-05, 4.1902999999999385e-05, 4.191599999999948e-05, 4.1555000000002146e-05, 4.1944999999998095e-05, 4.2304999999999426e-05, 4.172199999999751e-05, 4.216599999999973e-05, 4.247200000000173e-05, 4.2111000000000925e-05, 4.24860000000013e-05, 4.190199999999991e-05, 4.225000000000062e-05, 4.1833000000001536e-05, 4.1582999999997816e-05, 4.2068999999998746e-05]</msg>
<status status="PASS" starttime="20201029 12:47:05.769" endtime="20201029 12:47:05.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.764" endtime="20201029 12:47:05.773"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:05.776" endtime="20201029 12:47:05.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.775" endtime="20201029 12:47:05.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.774" endtime="20201029 12:47:05.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.415" endtime="20201029 12:47:05.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.414" endtime="20201029 12:47:05.797"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.806" endtime="20201029 12:47:05.821"></status>
</kw>
<msg timestamp="20201029 12:47:05.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.804" endtime="20201029 12:47:05.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.823" endtime="20201029 12:47:05.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.825" endtime="20201029 12:47:05.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.802" endtime="20201029 12:47:05.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.799" endtime="20201029 12:47:05.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.834" endtime="20201029 12:47:06.119"></status>
</kw>
<msg timestamp="20201029 12:47:06.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021971583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022015236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:05.833" endtime="20201029 12:47:06.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021971583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022015236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:06.124" endtime="20201029 12:47:06.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.132" endtime="20201029 12:47:06.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.830" endtime="20201029 12:47:06.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.829" endtime="20201029 12:47:06.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:06.139" level="INFO">${RESULT} = [{'diff': 4.3653000000001135e-05}, {'diff': 4.3417000000000455e-05}, {'diff': 4.34999999999984e-05}, {'diff': 4.3318999999999996e-05}, {'diff': 4.29860000000018e-05}, {'diff': 4.348599999999883e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:06.135" endtime="20201029 12:47:06.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:06.144" level="INFO">${ACCURACY} = {'diff': [4.3653000000001135e-05, 4.3417000000000455e-05, 4.34999999999984e-05, 4.3318999999999996e-05, 4.29860000000018e-05, 4.348599999999883e-05, 4.272199999999851e-05, 4.2903000000000385e-05, 4.34...</msg>
<status status="PASS" starttime="20201029 12:47:06.140" endtime="20201029 12:47:06.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.150" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 12:47:06.148" endtime="20201029 12:47:06.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.154" level="INFO">VALUE: [4.3653000000001135e-05, 4.3417000000000455e-05, 4.34999999999984e-05, 4.3318999999999996e-05, 4.29860000000018e-05, 4.348599999999883e-05, 4.272199999999851e-05, 4.2903000000000385e-05, 4.344399999999665e-05, 4.2903000000000385e-05, 4.29860000000018e-05, 4.350000000000187e-05, 4.34860000000023e-05, 4.295799999999919e-05, 4.3346999999999136e-05, 4.29860000000018e-05, 4.3125000000001495e-05, 4.322199999999901e-05, 4.3180999999999775e-05, 4.283399999999854e-05, 4.355600000000015e-05, 4.324999999999815e-05, 4.259799999999786e-05, 4.259800000000133e-05, 4.302799999999704e-05, 4.302700000000104e-05, 4.33059999999999e-05, 4.347199999999926e-05, 4.3458999999999165e-05, 4.2832999999999066e-05, 4.2860999999998206e-05, 4.277700000000079e-05, 4.3305000000000426e-05, 4.3124999999998026e-05, 4.3318999999999996e-05, 4.29860000000018e-05, 4.3097000000002356e-05, 4.301399999999747e-05, 4.2804999999999926e-05, 4.3458999999999165e-05, 4.329099999999739e-05, 4.3360999999998706e-05, 4.2889000000000815e-05, 4.3375000000001745e-05, 4.3069000000003216e-05, 4.304200000000008e-05, 4.2930999999999525e-05, 4.295799999999919e-05, 4.345799999999969e-05, 4.356999999999972e-05]</msg>
<status status="PASS" starttime="20201029 12:47:06.152" endtime="20201029 12:47:06.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.145" endtime="20201029 12:47:06.155"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:06.159" endtime="20201029 12:47:06.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.157" endtime="20201029 12:47:06.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.156" endtime="20201029 12:47:06.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.798" endtime="20201029 12:47:06.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.797" endtime="20201029 12:47:06.179"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.188" endtime="20201029 12:47:06.204"></status>
</kw>
<msg timestamp="20201029 12:47:06.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.186" endtime="20201029 12:47:06.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.205" endtime="20201029 12:47:06.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.208" endtime="20201029 12:47:06.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.184" endtime="20201029 12:47:06.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.182" endtime="20201029 12:47:06.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.217" endtime="20201029 12:47:06.504"></status>
</kw>
<msg timestamp="20201029 12:47:06.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022147958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022191806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:06.215" endtime="20201029 12:47:06.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022147958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022191806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:06.508" endtime="20201029 12:47:06.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.517" endtime="20201029 12:47:06.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.213" endtime="20201029 12:47:06.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.211" endtime="20201029 12:47:06.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:06.523" level="INFO">${RESULT} = [{'diff': 4.384800000000258e-05}, {'diff': 4.445799999999722e-05}, {'diff': 4.4139000000002065e-05}, {'diff': 4.3819000000000496e-05}, {'diff': 4.4083000000000316e-05}, {'diff': 4.456899999999778e-05}...</msg>
<status status="PASS" starttime="20201029 12:47:06.520" endtime="20201029 12:47:06.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:06.528" level="INFO">${ACCURACY} = {'diff': [4.384800000000258e-05, 4.445799999999722e-05, 4.4139000000002065e-05, 4.3819000000000496e-05, 4.4083000000000316e-05, 4.456899999999778e-05, 4.397199999999976e-05, 4.394400000000062e-05, 4.3...</msg>
<status status="PASS" starttime="20201029 12:47:06.524" endtime="20201029 12:47:06.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.532" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 12:47:06.531" endtime="20201029 12:47:06.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.535" level="INFO">VALUE: [4.384800000000258e-05, 4.445799999999722e-05, 4.4139000000002065e-05, 4.3819000000000496e-05, 4.4083000000000316e-05, 4.456899999999778e-05, 4.397199999999976e-05, 4.394400000000062e-05, 4.397199999999976e-05, 4.4360999999999706e-05, 4.386199999999868e-05, 4.3582999999999816e-05, 4.4167000000001205e-05, 4.404200000000108e-05, 4.451399999999897e-05, 4.3638999999998096e-05, 4.41800000000013e-05, 4.380599999999693e-05, 4.426400000000219e-05, 4.3931000000000525e-05, 4.4181000000000775e-05, 4.4360999999999706e-05, 4.425000000000262e-05, 4.3888999999998346e-05, 4.3833000000000066e-05, 4.429200000000133e-05, 4.4597000000000386e-05, 4.3917000000000955e-05, 4.3667000000000705e-05, 4.3902999999997916e-05, 4.4124999999999026e-05, 4.4360999999999706e-05, 4.391599999999801e-05, 4.3917000000000955e-05, 4.3972999999999235e-05, 4.4012999999999e-05, 4.3833000000000066e-05, 4.3610999999998956e-05, 4.397199999999976e-05, 4.4597000000000386e-05, 4.393000000000105e-05, 4.452700000000254e-05, 4.454099999999864e-05, 4.450000000000287e-05, 4.41800000000013e-05, 4.3625000000001996e-05, 4.423599999999958e-05, 4.4403000000001885e-05, 4.4195000000000345e-05, 4.377800000000126e-05]</msg>
<status status="PASS" starttime="20201029 12:47:06.533" endtime="20201029 12:47:06.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.529" endtime="20201029 12:47:06.536"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:06.540" endtime="20201029 12:47:06.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.538" endtime="20201029 12:47:06.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.537" endtime="20201029 12:47:06.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.180" endtime="20201029 12:47:06.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.180" endtime="20201029 12:47:06.560"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.569" endtime="20201029 12:47:06.586"></status>
</kw>
<msg timestamp="20201029 12:47:06.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.567" endtime="20201029 12:47:06.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.588" endtime="20201029 12:47:06.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.590" endtime="20201029 12:47:06.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.565" endtime="20201029 12:47:06.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.563" endtime="20201029 12:47:06.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.599" endtime="20201029 12:47:06.885"></status>
</kw>
<msg timestamp="20201029 12:47:06.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022875111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02292, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 12:47:06.598" endtime="20201029 12:47:06.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022875111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02292, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 12:47:06.890" endtime="20201029 12:47:06.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.898" endtime="20201029 12:47:06.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.595" endtime="20201029 12:47:06.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.593" endtime="20201029 12:47:06.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:06.905" level="INFO">${RESULT} = [{'diff': 4.4888999999999346e-05}, {'diff': 4.480599999999793e-05}, {'diff': 4.494399999999815e-05}, {'diff': 4.5431000000002025e-05}, {'diff': 4.4930999999998056e-05}, {'diff': 4.5194999999997876e-05...</msg>
<status status="PASS" starttime="20201029 12:47:06.901" endtime="20201029 12:47:06.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:06.909" level="INFO">${ACCURACY} = {'diff': [4.4888999999999346e-05, 4.480599999999793e-05, 4.494399999999815e-05, 4.5431000000002025e-05, 4.4930999999998056e-05, 4.5194999999997876e-05, 4.502800000000251e-05, 4.5180999999998306e-05, 4...</msg>
<status status="PASS" starttime="20201029 12:47:06.906" endtime="20201029 12:47:06.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.913" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 12:47:06.912" endtime="20201029 12:47:06.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.916" level="INFO">VALUE: [4.4888999999999346e-05, 4.480599999999793e-05, 4.494399999999815e-05, 4.5431000000002025e-05, 4.4930999999998056e-05, 4.5194999999997876e-05, 4.502800000000251e-05, 4.5180999999998306e-05, 4.5167000000002205e-05, 4.5138999999999596e-05, 4.523600000000058e-05, 4.49999999999999e-05, 4.4667000000001705e-05, 4.482000000000097e-05, 4.552799999999954e-05, 4.504199999999861e-05, 4.463799999999962e-05, 4.476399999999922e-05, 4.502799999999904e-05, 4.5223000000000485e-05, 4.511099999999699e-05, 4.538800000000037e-05, 4.491599999999901e-05, 4.5097000000000886e-05, 4.505499999999871e-05, 4.494400000000162e-05, 4.479100000000236e-05, 4.477799999999879e-05, 4.4861000000000206e-05, 4.479099999999889e-05, 4.4638999999999096e-05, 4.5375000000000276e-05, 4.481899999999803e-05, 4.501399999999947e-05, 4.5388999999999846e-05, 4.5167000000002205e-05, 4.526399999999972e-05, 4.4916999999998486e-05, 4.5125000000000026e-05, 4.495799999999772e-05, 4.5333000000001566e-05, 4.5430999999998556e-05, 4.4931000000001525e-05, 4.459699999999692e-05, 4.5125000000000026e-05, 4.457000000000072e-05, 4.4610999999999956e-05, 4.526399999999972e-05, 4.483400000000054e-05, 4.4639000000002566e-05]</msg>
<status status="PASS" starttime="20201029 12:47:06.914" endtime="20201029 12:47:06.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.910" endtime="20201029 12:47:06.918"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:06.922" endtime="20201029 12:47:06.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.920" endtime="20201029 12:47:06.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.919" endtime="20201029 12:47:06.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.561" endtime="20201029 12:47:06.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.561" endtime="20201029 12:47:06.942"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.951" endtime="20201029 12:47:06.968"></status>
</kw>
<msg timestamp="20201029 12:47:06.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.949" endtime="20201029 12:47:06.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.969" endtime="20201029 12:47:06.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.972" endtime="20201029 12:47:06.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.947" endtime="20201029 12:47:06.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.945" endtime="20201029 12:47:06.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.981" endtime="20201029 12:47:07.265"></status>
</kw>
<msg timestamp="20201029 12:47:07.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021819181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021865319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:06.979" endtime="20201029 12:47:07.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021819181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021865319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:07.270" endtime="20201029 12:47:07.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.278" endtime="20201029 12:47:07.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.977" endtime="20201029 12:47:07.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.975" endtime="20201029 12:47:07.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:07.285" level="INFO">${RESULT} = [{'diff': 4.613800000000112e-05}, {'diff': 4.6153000000000166e-05}, {'diff': 4.601299999999753e-05}, {'diff': 4.595799999999872e-05}, {'diff': 4.626399999999725e-05}, {'diff': 4.617999999999983e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:07.281" endtime="20201029 12:47:07.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:07.290" level="INFO">${ACCURACY} = {'diff': [4.613800000000112e-05, 4.6153000000000166e-05, 4.601299999999753e-05, 4.595799999999872e-05, 4.626399999999725e-05, 4.617999999999983e-05, 4.65139999999975e-05, 4.649999999999793e-05, 4.6000...</msg>
<status status="PASS" starttime="20201029 12:47:07.286" endtime="20201029 12:47:07.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.294" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 12:47:07.293" endtime="20201029 12:47:07.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.297" level="INFO">VALUE: [4.613800000000112e-05, 4.6153000000000166e-05, 4.601299999999753e-05, 4.595799999999872e-05, 4.626399999999725e-05, 4.617999999999983e-05, 4.65139999999975e-05, 4.649999999999793e-05, 4.60000000000009e-05, 4.604100000000014e-05, 4.579099999999989e-05, 4.620800000000244e-05, 4.5889000000000346e-05, 4.594399999999915e-05, 4.5930999999999056e-05, 4.6389000000000846e-05, 4.636099999999824e-05, 4.58199999999985e-05, 4.559699999999792e-05, 4.601400000000047e-05, 4.6208999999998446e-05, 4.558299999999835e-05, 4.577799999999979e-05, 4.655599999999968e-05, 4.622199999999854e-05, 4.597199999999829e-05, 4.654200000000011e-05, 4.602800000000004e-05, 4.6237000000001055e-05, 4.559800000000086e-05, 4.5902999999999916e-05, 4.65000000000014e-05, 4.6403000000000416e-05, 4.626299999999778e-05, 4.592999999999958e-05, 4.581899999999903e-05, 4.597199999999829e-05, 4.645799999999922e-05, 4.632000000000247e-05, 4.636099999999824e-05, 4.604100000000014e-05, 4.629100000000039e-05, 4.630499999999996e-05, 4.620800000000244e-05, 4.579099999999989e-05, 4.624999999999768e-05, 4.622199999999854e-05, 4.63329999999991e-05, 4.622199999999854e-05, 4.654200000000011e-05]</msg>
<status status="PASS" starttime="20201029 12:47:07.295" endtime="20201029 12:47:07.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.291" endtime="20201029 12:47:07.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:07.302" endtime="20201029 12:47:07.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.300" endtime="20201029 12:47:07.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.299" endtime="20201029 12:47:07.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.943" endtime="20201029 12:47:07.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.943" endtime="20201029 12:47:07.322"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.331" endtime="20201029 12:47:07.348"></status>
</kw>
<msg timestamp="20201029 12:47:07.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.329" endtime="20201029 12:47:07.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.349" endtime="20201029 12:47:07.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.352" endtime="20201029 12:47:07.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.327" endtime="20201029 12:47:07.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.325" endtime="20201029 12:47:07.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.361" endtime="20201029 12:47:07.648"></status>
</kw>
<msg timestamp="20201029 12:47:07.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021962972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022009806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:07.359" endtime="20201029 12:47:07.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021962972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022009806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:07.652" endtime="20201029 12:47:07.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.661" endtime="20201029 12:47:07.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.357" endtime="20201029 12:47:07.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.355" endtime="20201029 12:47:07.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:07.667" level="INFO">${RESULT} = [{'diff': 4.683399999999907e-05}, {'diff': 4.7389000000001846e-05}, {'diff': 4.705499999999724e-05}, {'diff': 4.724999999999868e-05}, {'diff': 4.733299999999663e-05}, {'diff': 4.693000000000058e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:07.664" endtime="20201029 12:47:07.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:07.672" level="INFO">${ACCURACY} = {'diff': [4.683399999999907e-05, 4.7389000000001846e-05, 4.705499999999724e-05, 4.724999999999868e-05, 4.733299999999663e-05, 4.693000000000058e-05, 4.754100000000164e-05, 4.720799999999997e-05, 4.731...</msg>
<status status="PASS" starttime="20201029 12:47:07.668" endtime="20201029 12:47:07.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.676" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 12:47:07.675" endtime="20201029 12:47:07.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.678" level="INFO">VALUE: [4.683399999999907e-05, 4.7389000000001846e-05, 4.705499999999724e-05, 4.724999999999868e-05, 4.733299999999663e-05, 4.693000000000058e-05, 4.754100000000164e-05, 4.720799999999997e-05, 4.731900000000053e-05, 4.727800000000129e-05, 4.726399999999825e-05, 4.736099999999924e-05, 4.756900000000078e-05, 4.718000000000083e-05, 4.732e-05, 4.726399999999825e-05, 4.736099999999924e-05, 4.733399999999957e-05, 4.748599999999936e-05, 4.704200000000061e-05, 4.75139999999985e-05, 4.659699999999892e-05, 4.755600000000068e-05, 4.6931000000000056e-05, 4.724999999999868e-05, 4.7445000000000126e-05, 4.752799999999807e-05, 4.698599999999886e-05, 4.7181000000000306e-05, 4.679200000000036e-05, 4.73330000000001e-05, 4.71940000000004e-05, 4.659799999999839e-05, 4.738899999999838e-05, 4.663800000000162e-05, 4.704099999999767e-05, 4.754099999999817e-05, 4.680500000000046e-05, 4.706900000000028e-05, 4.744400000000065e-05, 4.694399999999668e-05, 4.747199999999979e-05, 4.756900000000078e-05, 4.722199999999954e-05, 4.655500000000021e-05, 4.7403000000001416e-05, 4.7125000000002026e-05, 4.711099999999899e-05, 4.6861000000002206e-05, 4.729200000000086e-05]</msg>
<status status="PASS" starttime="20201029 12:47:07.677" endtime="20201029 12:47:07.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.672" endtime="20201029 12:47:07.680"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:07.683" endtime="20201029 12:47:07.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.682" endtime="20201029 12:47:07.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.681" endtime="20201029 12:47:07.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.323" endtime="20201029 12:47:07.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.323" endtime="20201029 12:47:07.704"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.713" endtime="20201029 12:47:07.732"></status>
</kw>
<msg timestamp="20201029 12:47:07.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.711" endtime="20201029 12:47:07.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.734" endtime="20201029 12:47:07.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.737" endtime="20201029 12:47:07.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.709" endtime="20201029 12:47:07.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.706" endtime="20201029 12:47:07.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.745" endtime="20201029 12:47:08.031"></status>
</kw>
<msg timestamp="20201029 12:47:08.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025064208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02511225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:07.744" endtime="20201029 12:47:08.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025064208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02511225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:08.036" endtime="20201029 12:47:08.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.046" endtime="20201029 12:47:08.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.741" endtime="20201029 12:47:08.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.740" endtime="20201029 12:47:08.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:08.054" level="INFO">${RESULT} = [{'diff': 4.804199999999814e-05}, {'diff': 4.845800000000122e-05}, {'diff': 4.7903000000001916e-05}, {'diff': 4.813899999999913e-05}, {'diff': 4.836100000000024e-05}, {'diff': 4.8445000000001126e-05},...</msg>
<status status="PASS" starttime="20201029 12:47:08.050" endtime="20201029 12:47:08.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:08.059" level="INFO">${ACCURACY} = {'diff': [4.804199999999814e-05, 4.845800000000122e-05, 4.7903000000001916e-05, 4.813899999999913e-05, 4.836100000000024e-05, 4.8445000000001126e-05, 4.811099999999999e-05, 4.8417000000001986e-05, 4.8...</msg>
<status status="PASS" starttime="20201029 12:47:08.056" endtime="20201029 12:47:08.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.065" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 12:47:08.064" endtime="20201029 12:47:08.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.068" level="INFO">VALUE: [4.804199999999814e-05, 4.845800000000122e-05, 4.7903000000001916e-05, 4.813899999999913e-05, 4.836100000000024e-05, 4.8445000000001126e-05, 4.811099999999999e-05, 4.8417000000001986e-05, 4.813899999999913e-05, 4.836100000000024e-05, 4.786199999999921e-05, 4.783400000000007e-05, 4.811099999999999e-05, 4.754200000000111e-05, 4.758400000000329e-05, 4.8445000000001126e-05, 4.813899999999913e-05, 4.8013999999999e-05, 4.815200000000269e-05, 4.854099999999917e-05, 4.830499999999849e-05, 4.794400000000115e-05, 4.779099999999842e-05, 4.777799999999832e-05, 4.762499999999906e-05, 4.848600000000036e-05, 4.798599999999986e-05, 4.791600000000201e-05, 4.836100000000024e-05, 4.8167000000001736e-05, 4.787499999999931e-05, 4.7653000000001666e-05, 4.848600000000036e-05, 4.822200000000054e-05, 4.854200000000211e-05, 4.830600000000143e-05, 4.795800000000072e-05, 4.790199999999897e-05, 4.849999999999993e-05, 4.831999999999753e-05, 4.762499999999906e-05, 4.7945000000000626e-05, 4.756900000000078e-05, 4.840299999999895e-05, 4.8194999999997407e-05, 4.7959000000000196e-05, 4.787499999999931e-05, 4.83339999999971e-05, 4.8403000000002416e-05, 4.809700000000042e-05]</msg>
<status status="PASS" starttime="20201029 12:47:08.066" endtime="20201029 12:47:08.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.060" endtime="20201029 12:47:08.070"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:08.074" endtime="20201029 12:47:08.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.072" endtime="20201029 12:47:08.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.071" endtime="20201029 12:47:08.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.705" endtime="20201029 12:47:08.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.704" endtime="20201029 12:47:08.094"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.103" endtime="20201029 12:47:08.120"></status>
</kw>
<msg timestamp="20201029 12:47:08.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:08.101" endtime="20201029 12:47:08.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:08.121" endtime="20201029 12:47:08.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.124" endtime="20201029 12:47:08.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.099" endtime="20201029 12:47:08.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.097" endtime="20201029 12:47:08.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.133" endtime="20201029 12:47:08.419"></status>
</kw>
<msg timestamp="20201029 12:47:08.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022069417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022118694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:08.131" endtime="20201029 12:47:08.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022069417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022118694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:08.423" endtime="20201029 12:47:08.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.431" endtime="20201029 12:47:08.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.129" endtime="20201029 12:47:08.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.127" endtime="20201029 12:47:08.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:08.438" level="INFO">${RESULT} = [{'diff': 4.927700000000035e-05}, {'diff': 4.901300000000053e-05}, {'diff': 4.887500000000031e-05}, {'diff': 4.908300000000185e-05}, {'diff': 4.900000000000043e-05}, {'diff': 4.904099999999967e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:08.435" endtime="20201029 12:47:08.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:08.443" level="INFO">${ACCURACY} = {'diff': [4.927700000000035e-05, 4.901300000000053e-05, 4.887500000000031e-05, 4.908300000000185e-05, 4.900000000000043e-05, 4.904099999999967e-05, 4.954100000000017e-05, 4.938900000000038e-05, 4.9596...</msg>
<status status="PASS" starttime="20201029 12:47:08.439" endtime="20201029 12:47:08.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.447" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 12:47:08.446" endtime="20201029 12:47:08.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.450" level="INFO">VALUE: [4.927700000000035e-05, 4.901300000000053e-05, 4.887500000000031e-05, 4.908300000000185e-05, 4.900000000000043e-05, 4.904099999999967e-05, 4.954100000000017e-05, 4.938900000000038e-05, 4.959699999999845e-05, 4.917999999999936e-05, 4.861100000000049e-05, 4.911100000000099e-05, 4.862500000000006e-05, 4.943099999999909e-05, 4.945799999999875e-05, 4.8653000000002666e-05, 4.913900000000013e-05, 4.858300000000135e-05, 4.886100000000074e-05, 4.904200000000261e-05, 4.91529999999997e-05, 4.941699999999952e-05, 4.943099999999909e-05, 4.934700000000167e-05, 4.930600000000243e-05, 4.931900000000253e-05, 4.911099999999752e-05, 4.9195000000001876e-05, 4.887500000000031e-05, 4.906899999999881e-05, 4.887500000000031e-05, 4.9487000000000836e-05, 4.892999999999911e-05, 4.887500000000031e-05, 4.906899999999881e-05, 4.887500000000031e-05, 4.913900000000013e-05, 4.955499999999974e-05, 4.917999999999936e-05, 4.917999999999936e-05, 4.923600000000111e-05, 4.859700000000092e-05, 4.887500000000031e-05, 4.916699999999927e-05, 4.881900000000203e-05, 4.911100000000099e-05, 4.891699999999902e-05, 4.858299999999788e-05, 4.8903000000002916e-05, 4.890299999999945e-05]</msg>
<status status="PASS" starttime="20201029 12:47:08.448" endtime="20201029 12:47:08.451"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.444" endtime="20201029 12:47:08.451"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:08.455" endtime="20201029 12:47:08.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.453" endtime="20201029 12:47:08.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.452" endtime="20201029 12:47:08.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.095" endtime="20201029 12:47:08.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.094" endtime="20201029 12:47:08.475"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.484" endtime="20201029 12:47:08.501"></status>
</kw>
<msg timestamp="20201029 12:47:08.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:08.482" endtime="20201029 12:47:08.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:08.502" endtime="20201029 12:47:08.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.505" endtime="20201029 12:47:08.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.480" endtime="20201029 12:47:08.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.478" endtime="20201029 12:47:08.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.514" endtime="20201029 12:47:08.799"></status>
</kw>
<msg timestamp="20201029 12:47:08.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022089694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022140167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:08.512" endtime="20201029 12:47:08.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022089694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022140167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:08.803" endtime="20201029 12:47:08.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.812" endtime="20201029 12:47:08.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.510" endtime="20201029 12:47:08.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.508" endtime="20201029 12:47:08.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:08.818" level="INFO">${RESULT} = [{'diff': 5.0472999999998797e-05}, {'diff': 5.054200000000064e-05}, {'diff': 5.037499999999834e-05}, {'diff': 4.962499999999759e-05}, {'diff': 5.040300000000095e-05}, {'diff': 5.044499999999966e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:08.815" endtime="20201029 12:47:08.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:08.823" level="INFO">${ACCURACY} = {'diff': [5.0472999999998797e-05, 5.054200000000064e-05, 5.037499999999834e-05, 4.962499999999759e-05, 5.040300000000095e-05, 5.044499999999966e-05, 4.961199999999749e-05, 5.008300000000285e-05, 4.982...</msg>
<status status="PASS" starttime="20201029 12:47:08.819" endtime="20201029 12:47:08.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.827" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 12:47:08.826" endtime="20201029 12:47:08.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.830" level="INFO">VALUE: [5.0472999999998797e-05, 5.054200000000064e-05, 5.037499999999834e-05, 4.962499999999759e-05, 5.040300000000095e-05, 5.044499999999966e-05, 4.961199999999749e-05, 5.008300000000285e-05, 4.98200000000025e-05, 4.997199999999882e-05, 5.0014000000001e-05, 5.043100000000009e-05, 5.054199999999717e-05, 5.019499999999941e-05, 5.027800000000082e-05, 5.058299999999988e-05, 5.009799999999842e-05, 4.988900000000088e-05, 4.961099999999802e-05, 5.036099999999877e-05, 4.980599999999946e-05, 5.011200000000146e-05, 4.980499999999999e-05, 5.05270000000016e-05, 4.961100000000149e-05, 5.0138000000001653e-05, 5.016600000000079e-05, 5.0429999999997144e-05, 5.048599999999889e-05, 5.006899999999981e-05, 4.990300000000045e-05, 4.981899999999956e-05, 5.036099999999877e-05, 4.961099999999802e-05, 4.990300000000045e-05, 5.030500000000049e-05, 5.000000000000143e-05, 5.033299999999963e-05, 5.016700000000027e-05, 5.020899999999898e-05, 4.962500000000106e-05, 4.98200000000025e-05, 5.029200000000039e-05, 5.022199999999907e-05, 5.023599999999864e-05, 4.961100000000149e-05, 5.002800000000057e-05, 4.991700000000002e-05, 5.011099999999852e-05, 5.016700000000027e-05]</msg>
<status status="PASS" starttime="20201029 12:47:08.828" endtime="20201029 12:47:08.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.823" endtime="20201029 12:47:08.831"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:08.834" endtime="20201029 12:47:08.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.833" endtime="20201029 12:47:08.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.832" endtime="20201029 12:47:08.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.476" endtime="20201029 12:47:08.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.476" endtime="20201029 12:47:08.855"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.864" endtime="20201029 12:47:08.881"></status>
</kw>
<msg timestamp="20201029 12:47:08.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:08.862" endtime="20201029 12:47:08.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:08.883" endtime="20201029 12:47:08.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.885" endtime="20201029 12:47:08.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.860" endtime="20201029 12:47:08.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.858" endtime="20201029 12:47:08.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.894" endtime="20201029 12:47:09.179"></status>
</kw>
<msg timestamp="20201029 12:47:09.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022766083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022817361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:08.893" endtime="20201029 12:47:09.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022766083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022817361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:09.184" endtime="20201029 12:47:09.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.193" endtime="20201029 12:47:09.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.890" endtime="20201029 12:47:09.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.889" endtime="20201029 12:47:09.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:09.200" level="INFO">${RESULT} = [{'diff': 5.127800000000182e-05}, {'diff': 5.088900000000188e-05}, {'diff': 5.13340000000001e-05}, {'diff': 5.137499999999934e-05}, {'diff': 5.137499999999934e-05}, {'diff': 5.059699999999945e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:09.196" endtime="20201029 12:47:09.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:09.204" level="INFO">${ACCURACY} = {'diff': [5.127800000000182e-05, 5.088900000000188e-05, 5.13340000000001e-05, 5.137499999999934e-05, 5.137499999999934e-05, 5.059699999999945e-05, 5.086199999999874e-05, 5.086099999999927e-05, 5.05829...</msg>
<status status="PASS" starttime="20201029 12:47:09.201" endtime="20201029 12:47:09.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.208" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 12:47:09.207" endtime="20201029 12:47:09.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.211" level="INFO">VALUE: [5.127800000000182e-05, 5.088900000000188e-05, 5.13340000000001e-05, 5.137499999999934e-05, 5.137499999999934e-05, 5.059699999999945e-05, 5.086199999999874e-05, 5.086099999999927e-05, 5.058299999999988e-05, 5.055500000000074e-05, 5.08469999999997e-05, 5.122200000000007e-05, 5.1429999999998144e-05, 5.144400000000118e-05, 5.133300000000063e-05, 5.118100000000084e-05, 5.061100000000249e-05, 5.088899999999841e-05, 5.133300000000063e-05, 5.095800000000025e-05, 5.131899999999759e-05, 5.1014000000002e-05, 5.063900000000163e-05, 5.095800000000025e-05, 5.102800000000157e-05, 5.083300000000013e-05, 5.149999999999946e-05, 5.091699999999755e-05, 5.141699999999805e-05, 5.124999999999921e-05, 5.077799999999785e-05, 5.126399999999878e-05, 5.130599999999749e-05, 5.141700000000152e-05, 5.126399999999878e-05, 5.136099999999977e-05, 5.129199999999792e-05, 5.13340000000001e-05, 5.102699999999863e-05, 5.109800000000289e-05, 5.081900000000056e-05, 5.087500000000231e-05, 5.083300000000013e-05, 5.05270000000016e-05, 5.105499999999777e-05, 5.136099999999977e-05, 5.083300000000013e-05, 5.06530000000012e-05, 5.149999999999946e-05, 5.094400000000068e-05]</msg>
<status status="PASS" starttime="20201029 12:47:09.209" endtime="20201029 12:47:09.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.205" endtime="20201029 12:47:09.213"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:09.216" endtime="20201029 12:47:09.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.215" endtime="20201029 12:47:09.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.214" endtime="20201029 12:47:09.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.856" endtime="20201029 12:47:09.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.855" endtime="20201029 12:47:09.237"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.246" endtime="20201029 12:47:09.263"></status>
</kw>
<msg timestamp="20201029 12:47:09.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:09.244" endtime="20201029 12:47:09.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:09.264" endtime="20201029 12:47:09.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.267" endtime="20201029 12:47:09.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.242" endtime="20201029 12:47:09.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.240" endtime="20201029 12:47:09.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.276" endtime="20201029 12:47:09.561"></status>
</kw>
<msg timestamp="20201029 12:47:09.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021961472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022013736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:09.274" endtime="20201029 12:47:09.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021961472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022013736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:09.566" endtime="20201029 12:47:09.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.574" endtime="20201029 12:47:09.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.272" endtime="20201029 12:47:09.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.270" endtime="20201029 12:47:09.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:09.581" level="INFO">${RESULT} = [{'diff': 5.226399999999978e-05}, {'diff': 5.1985999999996924e-05}, {'diff': 5.183300000000113e-05}, {'diff': 5.158300000000088e-05}, {'diff': 5.234699999999773e-05}, {'diff': 5.229199999999892e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:09.577" endtime="20201029 12:47:09.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:09.586" level="INFO">${ACCURACY} = {'diff': [5.226399999999978e-05, 5.1985999999996924e-05, 5.183300000000113e-05, 5.158300000000088e-05, 5.234699999999773e-05, 5.229199999999892e-05, 5.255600000000221e-05, 5.262500000000059e-05, 5.205...</msg>
<status status="PASS" starttime="20201029 12:47:09.582" endtime="20201029 12:47:09.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.590" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 12:47:09.589" endtime="20201029 12:47:09.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.593" level="INFO">VALUE: [5.226399999999978e-05, 5.1985999999996924e-05, 5.183300000000113e-05, 5.158300000000088e-05, 5.234699999999773e-05, 5.229199999999892e-05, 5.255600000000221e-05, 5.262500000000059e-05, 5.205599999999824e-05, 5.255599999999874e-05, 5.195899999999726e-05, 5.245900000000123e-05, 5.257000000000178e-05, 5.20279999999991e-05, 5.182000000000103e-05, 5.243099999999862e-05, 5.23479999999972e-05, 5.21530000000027e-05, 5.234800000000067e-05, 5.250000000000046e-05, 5.187499999999984e-05, 5.2193999999998464e-05, 5.159700000000045e-05, 5.223600000000064e-05, 5.208300000000138e-05, 5.1971999999997354e-05, 5.1957999999997784e-05, 5.206900000000181e-05, 5.258300000000188e-05, 5.198600000000039e-05, 5.227800000000282e-05, 5.163899999999916e-05, 5.190300000000245e-05, 5.225000000000021e-05, 5.243099999999862e-05, 5.2235999999997174e-05, 5.212499999999662e-05, 5.202699999999963e-05, 5.204199999999867e-05, 5.201399999999953e-05, 5.198600000000039e-05, 5.194499999999769e-05, 5.23470000000012e-05, 5.257000000000178e-05, 5.193099999999812e-05, 5.201399999999953e-05, 5.231999999999806e-05, 5.190300000000245e-05, 5.188899999999941e-05, 5.202699999999963e-05]</msg>
<status status="PASS" starttime="20201029 12:47:09.591" endtime="20201029 12:47:09.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.587" endtime="20201029 12:47:09.594"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:09.598" endtime="20201029 12:47:09.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.596" endtime="20201029 12:47:09.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.595" endtime="20201029 12:47:09.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.238" endtime="20201029 12:47:09.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.238" endtime="20201029 12:47:09.618"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.627" endtime="20201029 12:47:09.644"></status>
</kw>
<msg timestamp="20201029 12:47:09.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:09.625" endtime="20201029 12:47:09.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:09.645" endtime="20201029 12:47:09.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.648" endtime="20201029 12:47:09.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.623" endtime="20201029 12:47:09.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.621" endtime="20201029 12:47:09.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.657" endtime="20201029 12:47:09.943"></status>
</kw>
<msg timestamp="20201029 12:47:09.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022323292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022376528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:09.655" endtime="20201029 12:47:09.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022323292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022376528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:09.947" endtime="20201029 12:47:09.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.955" endtime="20201029 12:47:09.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.653" endtime="20201029 12:47:09.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.651" endtime="20201029 12:47:09.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:09.962" level="INFO">${RESULT} = [{'diff': 5.3235999999998174e-05}, {'diff': 5.325000000000121e-05}, {'diff': 5.319500000000241e-05}, {'diff': 5.288900000000041e-05}, {'diff': 5.263900000000016e-05}, {'diff': 5.309800000000142e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:09.959" endtime="20201029 12:47:09.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:09.966" level="INFO">${ACCURACY} = {'diff': [5.3235999999998174e-05, 5.325000000000121e-05, 5.319500000000241e-05, 5.288900000000041e-05, 5.263900000000016e-05, 5.309800000000142e-05, 5.290299999999998e-05, 5.325000000000121e-05, 5.318...</msg>
<status status="PASS" starttime="20201029 12:47:09.963" endtime="20201029 12:47:09.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.970" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 12:47:09.969" endtime="20201029 12:47:09.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.973" level="INFO">VALUE: [5.3235999999998174e-05, 5.325000000000121e-05, 5.319500000000241e-05, 5.288900000000041e-05, 5.263900000000016e-05, 5.309800000000142e-05, 5.290299999999998e-05, 5.325000000000121e-05, 5.318099999999937e-05, 5.30280000000001e-05, 5.308299999999891e-05, 5.2651999999996785e-05, 5.276300000000081e-05, 5.3471999999998854e-05, 5.326400000000078e-05, 5.281899999999909e-05, 5.3179999999999894e-05, 5.311100000000152e-05, 5.348600000000189e-05, 5.277799999999985e-05, 5.312499999999762e-05, 5.308299999999891e-05, 5.3485999999998424e-05, 5.3207999999999034e-05, 5.341700000000005e-05, 5.301400000000053e-05, 5.294400000000268e-05, 5.294500000000216e-05, 5.355599999999974e-05, 5.3513999999997564e-05, 5.340299999999701e-05, 5.337499999999787e-05, 5.300000000000096e-05, 5.313900000000066e-05, 5.290299999999998e-05, 5.265299999999973e-05, 5.263899999999669e-05, 5.258400000000135e-05, 5.344500000000266e-05, 5.279199999999942e-05, 5.336199999999777e-05, 5.2971999999998354e-05, 5.2902000000000504e-05, 5.279099999999995e-05, 5.2929999999999644e-05, 5.3430000000000144e-05, 5.2902000000000504e-05, 5.33470000000022e-05, 5.290299999999998e-05, 5.306899999999934e-05]</msg>
<status status="PASS" starttime="20201029 12:47:09.972" endtime="20201029 12:47:09.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.967" endtime="20201029 12:47:09.974"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:09.978" endtime="20201029 12:47:09.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.976" endtime="20201029 12:47:09.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.975" endtime="20201029 12:47:09.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.619" endtime="20201029 12:47:09.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.619" endtime="20201029 12:47:09.999"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.008" endtime="20201029 12:47:10.025"></status>
</kw>
<msg timestamp="20201029 12:47:10.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:10.006" endtime="20201029 12:47:10.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:10.027" endtime="20201029 12:47:10.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.029" endtime="20201029 12:47:10.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.003" endtime="20201029 12:47:10.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.001" endtime="20201029 12:47:10.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.039" endtime="20201029 12:47:10.323"></status>
</kw>
<msg timestamp="20201029 12:47:10.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023159208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023213208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:10.037" endtime="20201029 12:47:10.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023159208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023213208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:10.327" endtime="20201029 12:47:10.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.335" endtime="20201029 12:47:10.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.034" endtime="20201029 12:47:10.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.033" endtime="20201029 12:47:10.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:10.342" level="INFO">${RESULT} = [{'diff': 5.3999999999998494e-05}, {'diff': 5.459699999999998e-05}, {'diff': 5.401400000000153e-05}, {'diff': 5.4263999999998314e-05}, {'diff': 5.361099999999855e-05}, {'diff': 5.358299999999941e-05},...</msg>
<status status="PASS" starttime="20201029 12:47:10.339" endtime="20201029 12:47:10.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:10.346" level="INFO">${ACCURACY} = {'diff': [5.3999999999998494e-05, 5.459699999999998e-05, 5.401400000000153e-05, 5.4263999999998314e-05, 5.361099999999855e-05, 5.358299999999941e-05, 5.461099999999955e-05, 5.434699999999973e-05, 5.45...</msg>
<status status="PASS" starttime="20201029 12:47:10.343" endtime="20201029 12:47:10.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.350" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 12:47:10.349" endtime="20201029 12:47:10.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.353" level="INFO">VALUE: [5.3999999999998494e-05, 5.459699999999998e-05, 5.401400000000153e-05, 5.4263999999998314e-05, 5.361099999999855e-05, 5.358299999999941e-05, 5.461099999999955e-05, 5.434699999999973e-05, 5.45280000000016e-05, 5.418100000000037e-05, 5.427800000000135e-05, 5.450000000000246e-05, 5.4221999999999604e-05, 5.356999999999931e-05, 5.430500000000102e-05, 5.38479999999987e-05, 5.444500000000019e-05, 5.437500000000234e-05, 5.440299999999801e-05, 5.3930000000000644e-05, 5.405500000000077e-05, 5.363900000000116e-05, 5.361199999999802e-05, 5.4387999999998965e-05, 5.3652000000001254e-05, 5.380500000000052e-05, 5.355500000000027e-05, 5.401400000000153e-05, 5.38609999999988e-05, 5.4485999999999424e-05, 5.406900000000034e-05, 5.411099999999905e-05, 5.4499999999998994e-05, 5.4180000000000894e-05, 5.359699999999898e-05, 5.4541999999997703e-05, 5.412500000000209e-05, 5.443100000000062e-05, 5.356899999999984e-05, 5.433300000000016e-05, 5.391700000000055e-05, 5.454200000000117e-05, 5.413900000000166e-05, 5.434699999999973e-05, 5.415300000000123e-05, 5.40419999999972e-05, 5.427699999999841e-05, 5.443100000000062e-05, 5.408399999999938e-05, 5.41670000000008e-05]</msg>
<status status="PASS" starttime="20201029 12:47:10.351" endtime="20201029 12:47:10.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.347" endtime="20201029 12:47:10.360"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:10.364" endtime="20201029 12:47:10.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.363" endtime="20201029 12:47:10.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.361" endtime="20201029 12:47:10.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.000" endtime="20201029 12:47:10.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.999" endtime="20201029 12:47:10.385"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.394" endtime="20201029 12:47:10.411"></status>
</kw>
<msg timestamp="20201029 12:47:10.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:10.393" endtime="20201029 12:47:10.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:10.413" endtime="20201029 12:47:10.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.416" endtime="20201029 12:47:10.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.390" endtime="20201029 12:47:10.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.388" endtime="20201029 12:47:10.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.425" endtime="20201029 12:47:10.710"></status>
</kw>
<msg timestamp="20201029 12:47:10.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022586417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022641792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:10.423" endtime="20201029 12:47:10.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022586417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022641792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:10.715" endtime="20201029 12:47:10.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.723" endtime="20201029 12:47:10.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.421" endtime="20201029 12:47:10.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.419" endtime="20201029 12:47:10.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:10.730" level="INFO">${RESULT} = [{'diff': 5.537499999999987e-05}, {'diff': 5.495900000000026e-05}, {'diff': 5.5041999999998203e-05}, {'diff': 5.552699999999966e-05}, {'diff': 5.512499999999962e-05}, {'diff': 5.488899999999894e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:10.727" endtime="20201029 12:47:10.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:10.735" level="INFO">${ACCURACY} = {'diff': [5.537499999999987e-05, 5.495900000000026e-05, 5.5041999999998203e-05, 5.552699999999966e-05, 5.512499999999962e-05, 5.488899999999894e-05, 5.555500000000227e-05, 5.5415999999999105e-05, 5.52...</msg>
<status status="PASS" starttime="20201029 12:47:10.731" endtime="20201029 12:47:10.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.740" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 12:47:10.739" endtime="20201029 12:47:10.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.743" level="INFO">VALUE: [5.537499999999987e-05, 5.495900000000026e-05, 5.5041999999998203e-05, 5.552699999999966e-05, 5.512499999999962e-05, 5.488899999999894e-05, 5.555500000000227e-05, 5.5415999999999105e-05, 5.5235999999996704e-05, 5.504200000000167e-05, 5.490300000000198e-05, 5.487499999999937e-05, 5.5027999999998634e-05, 5.5458000000001284e-05, 5.5263999999999314e-05, 5.5013999999999064e-05, 5.493100000000112e-05, 5.520899999999704e-05, 5.461099999999955e-05, 5.515299999999876e-05, 5.488899999999894e-05, 5.5527999999999134e-05, 5.491699999999808e-05, 5.5249999999999744e-05, 5.494500000000069e-05, 5.488899999999894e-05, 5.537499999999987e-05, 5.4693999999997495e-05, 5.5194000000001464e-05, 5.5013999999999064e-05, 5.487499999999937e-05, 5.459699999999998e-05, 5.512499999999962e-05, 5.5429999999998675e-05, 5.5222000000000604e-05, 5.513899999999919e-05, 5.4985999999999924e-05, 5.4944000000001214e-05, 5.502699999999916e-05, 5.462499999999912e-05, 5.533300000000116e-05, 5.5527999999999134e-05, 5.488899999999894e-05, 5.527800000000235e-05, 5.5486000000000424e-05, 5.5236000000000174e-05, 5.527800000000235e-05, 5.491699999999808e-05, 5.511100000000005e-05, 5.555600000000174e-05]</msg>
<status status="PASS" starttime="20201029 12:47:10.741" endtime="20201029 12:47:10.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.736" endtime="20201029 12:47:10.744"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:10.748" endtime="20201029 12:47:10.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.746" endtime="20201029 12:47:10.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.745" endtime="20201029 12:47:10.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.386" endtime="20201029 12:47:10.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.386" endtime="20201029 12:47:10.769"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.778" endtime="20201029 12:47:10.795"></status>
</kw>
<msg timestamp="20201029 12:47:10.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:10.776" endtime="20201029 12:47:10.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:10.796" endtime="20201029 12:47:10.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.799" endtime="20201029 12:47:10.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.774" endtime="20201029 12:47:10.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.771" endtime="20201029 12:47:10.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.808" endtime="20201029 12:47:11.121"></status>
</kw>
<msg timestamp="20201029 12:47:11.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022470667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022527028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:10.807" endtime="20201029 12:47:11.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022470667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022527028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:11.126" endtime="20201029 12:47:11.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.134" endtime="20201029 12:47:11.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.804" endtime="20201029 12:47:11.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.802" endtime="20201029 12:47:11.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:11.141" level="INFO">${RESULT} = [{'diff': 5.63610000000013e-05}, {'diff': 5.6235999999997704e-05}, {'diff': 5.633299999999869e-05}, {'diff': 5.593099999999865e-05}, {'diff': 5.587500000000037e-05}, {'diff': 5.657000000000231e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:11.137" endtime="20201029 12:47:11.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:11.145" level="INFO">${ACCURACY} = {'diff': [5.63610000000013e-05, 5.6235999999997704e-05, 5.633299999999869e-05, 5.593099999999865e-05, 5.587500000000037e-05, 5.657000000000231e-05, 5.644500000000219e-05, 5.604200000000267e-05, 5.6014...</msg>
<status status="PASS" starttime="20201029 12:47:11.142" endtime="20201029 12:47:11.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.149" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 12:47:11.148" endtime="20201029 12:47:11.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.152" level="INFO">VALUE: [5.63610000000013e-05, 5.6235999999997704e-05, 5.633299999999869e-05, 5.593099999999865e-05, 5.587500000000037e-05, 5.657000000000231e-05, 5.644500000000219e-05, 5.604200000000267e-05, 5.6014000000000064e-05, 5.584700000000123e-05, 5.608300000000191e-05, 5.6014000000000064e-05, 5.63610000000013e-05, 5.5986000000000924e-05, 5.584700000000123e-05, 5.643100000000262e-05, 5.633400000000163e-05, 5.6500000000000994e-05, 5.611100000000105e-05, 5.6402000000000535e-05, 5.6429999999999675e-05, 5.608400000000138e-05, 5.6179999999999425e-05, 5.630499999999955e-05, 5.616699999999933e-05, 5.6193999999998995e-05, 5.65549999999998e-05, 5.634700000000173e-05, 5.6041999999999204e-05, 5.559699999999751e-05, 5.6443999999999245e-05, 5.6221999999998135e-05, 5.593099999999865e-05, 5.556900000000184e-05, 5.5930000000002644e-05, 5.565299999999926e-05, 5.5791999999998954e-05, 5.643099999999915e-05, 5.583299999999819e-05, 5.5943999999998745e-05, 5.622299999999761e-05, 5.651299999999762e-05, 5.581999999999809e-05, 5.6055999999998773e-05, 5.584700000000123e-05, 5.5943999999998745e-05, 5.588899999999994e-05, 5.593100000000212e-05, 5.622300000000108e-05, 5.5527999999999134e-05]</msg>
<status status="PASS" starttime="20201029 12:47:11.150" endtime="20201029 12:47:11.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.146" endtime="20201029 12:47:11.153"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:11.157" endtime="20201029 12:47:11.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.155" endtime="20201029 12:47:11.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.154" endtime="20201029 12:47:11.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.770" endtime="20201029 12:47:11.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.769" endtime="20201029 12:47:11.177"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.186" endtime="20201029 12:47:11.206"></status>
</kw>
<msg timestamp="20201029 12:47:11.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.184" endtime="20201029 12:47:11.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.207" endtime="20201029 12:47:11.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.210" endtime="20201029 12:47:11.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.182" endtime="20201029 12:47:11.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.180" endtime="20201029 12:47:11.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.220" endtime="20201029 12:47:11.506"></status>
</kw>
<msg timestamp="20201029 12:47:11.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024989861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025047139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:11.218" endtime="20201029 12:47:11.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024989861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025047139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:11.510" endtime="20201029 12:47:11.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.518" endtime="20201029 12:47:11.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.215" endtime="20201029 12:47:11.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.213" endtime="20201029 12:47:11.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:11.525" level="INFO">${RESULT} = [{'diff': 5.7278000000000884e-05}, {'diff': 5.715300000000076e-05}, {'diff': 5.7222000000002604e-05}, {'diff': 5.690299999999704e-05}, {'diff': 5.7319999999999593e-05}, {'diff': 5.6930000000000175e-05...</msg>
<status status="PASS" starttime="20201029 12:47:11.522" endtime="20201029 12:47:11.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:11.529" level="INFO">${ACCURACY} = {'diff': [5.7278000000000884e-05, 5.715300000000076e-05, 5.7222000000002604e-05, 5.690299999999704e-05, 5.7319999999999593e-05, 5.6930000000000175e-05, 5.658399999999841e-05, 5.7014000000001064e-05, 5...</msg>
<status status="PASS" starttime="20201029 12:47:11.526" endtime="20201029 12:47:11.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.533" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 12:47:11.532" endtime="20201029 12:47:11.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.536" level="INFO">VALUE: [5.7278000000000884e-05, 5.715300000000076e-05, 5.7222000000002604e-05, 5.690299999999704e-05, 5.7319999999999593e-05, 5.6930000000000175e-05, 5.658399999999841e-05, 5.7014000000001064e-05, 5.708299999999944e-05, 5.6943999999999745e-05, 5.6999999999998024e-05, 5.731900000000012e-05, 5.751300000000209e-05, 5.6888000000001465e-05, 5.7264000000001314e-05, 5.706899999999987e-05, 5.663900000000069e-05, 5.7250000000001744e-05, 5.7193999999999995e-05, 5.7306000000000024e-05, 5.6971999999998885e-05, 5.743100000000015e-05, 5.716700000000033e-05, 5.7027999999997164e-05, 5.658400000000188e-05, 5.7249999999998274e-05, 5.740300000000101e-05, 5.743100000000015e-05, 5.691700000000008e-05, 5.684799999999823e-05, 5.712500000000162e-05, 5.7486000000002424e-05, 5.7235999999998705e-05, 5.693099999999965e-05, 5.740300000000101e-05, 5.7278000000000884e-05, 5.747299999999886e-05, 5.7000000000001494e-05, 5.658399999999841e-05, 5.709700000000248e-05, 5.6971999999998885e-05, 5.679100000000048e-05, 5.7514000000001564e-05, 5.6972000000002354e-05, 5.7180000000000425e-05, 5.730500000000055e-05, 5.7193999999999995e-05, 5.688900000000094e-05, 5.7485999999998955e-05, 5.7028000000000634e-05]</msg>
<status status="PASS" starttime="20201029 12:47:11.534" endtime="20201029 12:47:11.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.530" endtime="20201029 12:47:11.538"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:11.542" endtime="20201029 12:47:11.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.540" endtime="20201029 12:47:11.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.539" endtime="20201029 12:47:11.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.178" endtime="20201029 12:47:11.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.178" endtime="20201029 12:47:11.562"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.571" endtime="20201029 12:47:11.588"></status>
</kw>
<msg timestamp="20201029 12:47:11.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.570" endtime="20201029 12:47:11.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.589" endtime="20201029 12:47:11.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.592" endtime="20201029 12:47:11.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.567" endtime="20201029 12:47:11.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.565" endtime="20201029 12:47:11.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.601" endtime="20201029 12:47:11.887"></status>
</kw>
<msg timestamp="20201029 12:47:11.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022267583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022325417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:11.599" endtime="20201029 12:47:11.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022267583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022325417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:11.891" endtime="20201029 12:47:11.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.900" endtime="20201029 12:47:11.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.597" endtime="20201029 12:47:11.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.595" endtime="20201029 12:47:11.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:11.906" level="INFO">${RESULT} = [{'diff': 5.7833999999999663e-05}, {'diff': 5.815299999999829e-05}, {'diff': 5.838900000000244e-05}, {'diff': 5.812499999999915e-05}, {'diff': 5.843099999999768e-05}, {'diff': 5.797299999999936e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:11.903" endtime="20201029 12:47:11.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:11.911" level="INFO">${ACCURACY} = {'diff': [5.7833999999999663e-05, 5.815299999999829e-05, 5.838900000000244e-05, 5.812499999999915e-05, 5.843099999999768e-05, 5.797299999999936e-05, 5.8513999999999095e-05, 5.8056000000000774e-05, 5.8...</msg>
<status status="PASS" starttime="20201029 12:47:11.907" endtime="20201029 12:47:11.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.916" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 12:47:11.915" endtime="20201029 12:47:11.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.918" level="INFO">VALUE: [5.7833999999999663e-05, 5.815299999999829e-05, 5.838900000000244e-05, 5.812499999999915e-05, 5.843099999999768e-05, 5.797299999999936e-05, 5.8513999999999095e-05, 5.8056000000000774e-05, 5.819500000000047e-05, 5.8070000000000344e-05, 5.78619999999988e-05, 5.831900000000112e-05, 5.793100000000065e-05, 5.8278000000001884e-05, 5.781900000000062e-05, 5.827699999999894e-05, 5.8235999999999705e-05, 5.831899999999765e-05, 5.777700000000191e-05, 5.852699999999919e-05, 5.841699999999811e-05, 5.788899999999847e-05, 5.8222000000000135e-05, 5.811099999999958e-05, 5.8306000000001024e-05, 5.7999999999999025e-05, 5.791699999999761e-05, 5.8305999999997554e-05, 5.8541999999998234e-05, 5.8472000000000385e-05, 5.843100000000115e-05, 5.794500000000022e-05, 5.8235999999999705e-05, 5.788900000000194e-05, 5.8472000000000385e-05, 5.844499999999725e-05, 5.8083999999999913e-05, 5.806900000000087e-05, 5.7556000000000274e-05, 5.8194000000000995e-05, 5.816700000000133e-05, 5.8513999999999095e-05, 5.783300000000019e-05, 5.8151999999998816e-05, 5.826300000000284e-05, 5.8264000000002314e-05, 5.7958000000000315e-05, 5.809700000000001e-05, 5.8263999999998844e-05, 5.8194000000000995e-05]</msg>
<status status="PASS" starttime="20201029 12:47:11.917" endtime="20201029 12:47:11.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.912" endtime="20201029 12:47:11.920"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:11.923" endtime="20201029 12:47:11.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.922" endtime="20201029 12:47:11.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.921" endtime="20201029 12:47:11.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.563" endtime="20201029 12:47:11.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.563" endtime="20201029 12:47:11.944"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.953" endtime="20201029 12:47:11.969"></status>
</kw>
<msg timestamp="20201029 12:47:11.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.951" endtime="20201029 12:47:11.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.971" endtime="20201029 12:47:11.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.973" endtime="20201029 12:47:11.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.948" endtime="20201029 12:47:11.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.946" endtime="20201029 12:47:11.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.982" endtime="20201029 12:47:12.269"></status>
</kw>
<msg timestamp="20201029 12:47:12.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021882125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:11.981" endtime="20201029 12:47:12.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021882125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:12.273" endtime="20201029 12:47:12.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.282" endtime="20201029 12:47:12.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.978" endtime="20201029 12:47:12.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.977" endtime="20201029 12:47:12.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:12.288" level="INFO">${RESULT} = [{'diff': 5.9013999999999595e-05}, {'diff': 5.891699999999861e-05}, {'diff': 5.894500000000122e-05}, {'diff': 5.9514000000000095e-05}, {'diff': 5.958299999999847e-05}, {'diff': 5.912500000000015e-05},...</msg>
<status status="PASS" starttime="20201029 12:47:12.285" endtime="20201029 12:47:12.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:12.293" level="INFO">${ACCURACY} = {'diff': [5.9013999999999595e-05, 5.891699999999861e-05, 5.894500000000122e-05, 5.9514000000000095e-05, 5.958299999999847e-05, 5.912500000000015e-05, 5.897300000000036e-05, 5.920900000000104e-05, 5.86...</msg>
<status status="PASS" starttime="20201029 12:47:12.289" endtime="20201029 12:47:12.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.297" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 12:47:12.296" endtime="20201029 12:47:12.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.299" level="INFO">VALUE: [5.9013999999999595e-05, 5.891699999999861e-05, 5.894500000000122e-05, 5.9514000000000095e-05, 5.958299999999847e-05, 5.912500000000015e-05, 5.897300000000036e-05, 5.920900000000104e-05, 5.863899999999922e-05, 5.93750000000004e-05, 5.956900000000237e-05, 5.9471999999997915e-05, 5.9500000000000525e-05, 5.908299999999797e-05, 5.909699999999754e-05, 5.861100000000008e-05, 5.938899999999997e-05, 5.9486000000000955e-05, 5.9193999999998526e-05, 5.911099999999711e-05, 5.915300000000276e-05, 5.916699999999886e-05, 5.8791999999998484e-05, 5.886100000000033e-05, 5.916699999999886e-05, 5.9222000000001135e-05, 5.9000000000000025e-05, 5.9277999999999414e-05, 5.944499999999825e-05, 5.9334000000001164e-05, 5.9000000000000025e-05, 5.8806000000001524e-05, 5.9500000000000525e-05, 5.922300000000061e-05, 5.8972000000000885e-05, 5.8791999999998484e-05, 5.9485999999997485e-05, 5.934699999999779e-05, 5.95550000000028e-05, 5.9458000000001815e-05, 5.908300000000144e-05, 5.929099999999951e-05, 5.8943999999998276e-05, 5.858300000000094e-05, 5.9277999999999414e-05, 5.9263999999999845e-05, 5.9500000000000525e-05, 5.9027999999999164e-05, 5.9263999999999845e-05, 5.958300000000194e-05]</msg>
<status status="PASS" starttime="20201029 12:47:12.298" endtime="20201029 12:47:12.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.293" endtime="20201029 12:47:12.301"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:12.304" endtime="20201029 12:47:12.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.303" endtime="20201029 12:47:12.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.302" endtime="20201029 12:47:12.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.945" endtime="20201029 12:47:12.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.944" endtime="20201029 12:47:12.325"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.334" endtime="20201029 12:47:12.352"></status>
</kw>
<msg timestamp="20201029 12:47:12.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.332" endtime="20201029 12:47:12.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.353" endtime="20201029 12:47:12.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.356" endtime="20201029 12:47:12.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.330" endtime="20201029 12:47:12.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.328" endtime="20201029 12:47:12.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.365" endtime="20201029 12:47:12.650"></status>
</kw>
<msg timestamp="20201029 12:47:12.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022776472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022836778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:12.363" endtime="20201029 12:47:12.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022776472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022836778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:12.654" endtime="20201029 12:47:12.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.663" endtime="20201029 12:47:12.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.361" endtime="20201029 12:47:12.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.359" endtime="20201029 12:47:12.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:12.669" level="INFO">${RESULT} = [{'diff': 6.0305999999999554e-05}, {'diff': 5.9916000000000136e-05}, {'diff': 6.016699999999986e-05}, {'diff': 5.993100000000265e-05}, {'diff': 6.0485999999998485e-05}, {'diff': 6.012499999999768e-05}...</msg>
<status status="PASS" starttime="20201029 12:47:12.666" endtime="20201029 12:47:12.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:12.673" level="INFO">${ACCURACY} = {'diff': [6.0305999999999554e-05, 5.9916000000000136e-05, 6.016699999999986e-05, 5.993100000000265e-05, 6.0485999999998485e-05, 6.012499999999768e-05, 6.0569999999999374e-05, 6.03750000000014e-05, 5.9...</msg>
<status status="PASS" starttime="20201029 12:47:12.670" endtime="20201029 12:47:12.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.678" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 12:47:12.677" endtime="20201029 12:47:12.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.680" level="INFO">VALUE: [6.0305999999999554e-05, 5.9916000000000136e-05, 6.016699999999986e-05, 5.993100000000265e-05, 6.0485999999998485e-05, 6.012499999999768e-05, 6.0569999999999374e-05, 6.03750000000014e-05, 5.9888999999997e-05, 5.9834000000001664e-05, 6.0305999999999554e-05, 5.991699999999961e-05, 6.03750000000014e-05, 6.037499999999793e-05, 5.995899999999832e-05, 5.98750000000009e-05, 6.045899999999882e-05, 6.0443999999999776e-05, 6.0486000000001955e-05, 6.0278000000000415e-05, 6.031899999999965e-05, 5.9957999999998846e-05, 6.001299999999765e-05, 5.9888999999997e-05, 6.0277999999996945e-05, 6.0416000000000636e-05, 6.00689999999994e-05, 5.991699999999961e-05, 6.0443999999999776e-05, 6.043099999999968e-05, 5.991699999999961e-05, 5.959700000000151e-05, 6.0305999999999554e-05, 6.036100000000183e-05, 6.0320000000002594e-05, 6.015300000000029e-05, 6.016699999999986e-05, 5.9985999999997985e-05, 5.9569999999998374e-05, 6.012499999999768e-05, 5.963900000000022e-05, 6.023700000000118e-05, 5.994499999999875e-05, 5.995899999999832e-05, 6.0430000000000206e-05, 5.9902000000000566e-05, 5.984700000000176e-05, 6.020900000000204e-05, 5.9777999999999915e-05, 6.030499999999661e-05]</msg>
<status status="PASS" starttime="20201029 12:47:12.679" endtime="20201029 12:47:12.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.674" endtime="20201029 12:47:12.683"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:12.686" endtime="20201029 12:47:12.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.685" endtime="20201029 12:47:12.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.683" endtime="20201029 12:47:12.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.326" endtime="20201029 12:47:12.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.325" endtime="20201029 12:47:12.707"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.715" endtime="20201029 12:47:12.733"></status>
</kw>
<msg timestamp="20201029 12:47:12.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.714" endtime="20201029 12:47:12.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.734" endtime="20201029 12:47:12.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.737" endtime="20201029 12:47:12.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.711" endtime="20201029 12:47:12.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.709" endtime="20201029 12:47:12.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.746" endtime="20201029 12:47:13.035"></status>
</kw>
<msg timestamp="20201029 12:47:13.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021926014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021986806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:12.745" endtime="20201029 12:47:13.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021926014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021986806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:13.039" endtime="20201029 12:47:13.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.048" endtime="20201029 12:47:13.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.742" endtime="20201029 12:47:13.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.740" endtime="20201029 12:47:13.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:13.054" level="INFO">${RESULT} = [{'diff': 6.0792000000000485e-05}, {'diff': 6.083299999999972e-05}, {'diff': 6.12080000000001e-05}, {'diff': 6.148599999999949e-05}, {'diff': 6.15140000000021e-05}, {'diff': 6.123599999999924e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:13.051" endtime="20201029 12:47:13.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:13.059" level="INFO">${ACCURACY} = {'diff': [6.0792000000000485e-05, 6.083299999999972e-05, 6.12080000000001e-05, 6.148599999999949e-05, 6.15140000000021e-05, 6.123599999999924e-05, 6.118100000000043e-05, 6.113899999999825e-05, 6.09859...</msg>
<status status="PASS" starttime="20201029 12:47:13.055" endtime="20201029 12:47:13.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.064" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 12:47:13.063" endtime="20201029 12:47:13.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.066" level="INFO">VALUE: [6.0792000000000485e-05, 6.083299999999972e-05, 6.12080000000001e-05, 6.148599999999949e-05, 6.15140000000021e-05, 6.123599999999924e-05, 6.118100000000043e-05, 6.113899999999825e-05, 6.0985999999998985e-05, 6.129100000000151e-05, 6.0707999999999596e-05, 6.137499999999893e-05, 6.144500000000025e-05, 6.090300000000104e-05, 6.0944000000000276e-05, 6.0638000000001746e-05, 6.0999999999998555e-05, 6.0999999999998555e-05, 6.086099999999886e-05, 6.05689999999999e-05, 6.109699999999954e-05, 6.13889999999985e-05, 6.0778000000000915e-05, 6.134699999999979e-05, 6.109699999999954e-05, 6.111099999999911e-05, 6.134699999999979e-05, 6.0957999999999846e-05, 6.132000000000012e-05, 6.1028000000001165e-05, 6.1195e-05, 6.134699999999979e-05, 6.141700000000111e-05, 6.0999999999998555e-05, 6.147199999999992e-05, 6.158300000000047e-05, 6.148599999999949e-05, 6.151299999999915e-05, 6.14439999999973e-05, 6.094499999999975e-05, 6.10560000000003e-05, 6.148599999999949e-05, 6.155500000000133e-05, 6.14019999999986e-05, 6.104100000000126e-05, 6.147199999999992e-05, 6.0764000000001345e-05, 6.109699999999954e-05, 6.149999999999906e-05, 6.1000000000002025e-05]</msg>
<status status="PASS" starttime="20201029 12:47:13.065" endtime="20201029 12:47:13.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.060" endtime="20201029 12:47:13.067"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:13.071" endtime="20201029 12:47:13.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.069" endtime="20201029 12:47:13.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.068" endtime="20201029 12:47:13.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.708" endtime="20201029 12:47:13.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.707" endtime="20201029 12:47:13.092"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.100" endtime="20201029 12:47:13.117"></status>
</kw>
<msg timestamp="20201029 12:47:13.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.099" endtime="20201029 12:47:13.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.119" endtime="20201029 12:47:13.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.121" endtime="20201029 12:47:13.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.096" endtime="20201029 12:47:13.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.094" endtime="20201029 12:47:13.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.130" endtime="20201029 12:47:13.418"></status>
</kw>
<msg timestamp="20201029 12:47:13.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021975361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022037958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:13.129" endtime="20201029 12:47:13.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021975361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022037958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:13.422" endtime="20201029 12:47:13.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.430" endtime="20201029 12:47:13.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.126" endtime="20201029 12:47:13.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.125" endtime="20201029 12:47:13.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:13.437" level="INFO">${RESULT} = [{'diff': 6.259700000000104e-05}, {'diff': 6.209700000000054e-05}, {'diff': 6.245899999999735e-05}, {'diff': 6.248699999999996e-05}, {'diff': 6.242999999999874e-05}, {'diff': 6.216599999999892e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:13.434" endtime="20201029 12:47:13.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:13.441" level="INFO">${ACCURACY} = {'diff': [6.259700000000104e-05, 6.209700000000054e-05, 6.245899999999735e-05, 6.248699999999996e-05, 6.242999999999874e-05, 6.216599999999892e-05, 6.192999999999824e-05, 6.198599999999999e-05, 6.2374...</msg>
<status status="PASS" starttime="20201029 12:47:13.438" endtime="20201029 12:47:13.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.445" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 12:47:13.444" endtime="20201029 12:47:13.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.448" level="INFO">VALUE: [6.259700000000104e-05, 6.209700000000054e-05, 6.245899999999735e-05, 6.248699999999996e-05, 6.242999999999874e-05, 6.216599999999892e-05, 6.192999999999824e-05, 6.198599999999999e-05, 6.237499999999993e-05, 6.231900000000165e-05, 6.219400000000153e-05, 6.211100000000011e-05, 6.223599999999677e-05, 6.161099999999961e-05, 6.219399999999806e-05, 6.161099999999961e-05, 6.230599999999809e-05, 6.1888999999999e-05, 6.22499999999998e-05, 6.204200000000173e-05, 6.180600000000105e-05, 6.22080000000011e-05, 6.247200000000092e-05, 6.190299999999857e-05, 6.161099999999961e-05, 6.251399999999963e-05, 6.162499999999918e-05, 6.215299999999882e-05, 6.226399999999938e-05, 6.204100000000226e-05, 6.180600000000105e-05, 6.20140000000026e-05, 6.256899999999843e-05, 6.195800000000085e-05, 6.199999999999956e-05, 6.184700000000029e-05, 6.215200000000282e-05, 6.251399999999963e-05, 6.181899999999768e-05, 6.213899999999925e-05, 6.223600000000024e-05, 6.231899999999818e-05, 6.243100000000168e-05, 6.223600000000024e-05, 6.159700000000004e-05, 6.2195000000001e-05, 6.159700000000004e-05, 6.245900000000082e-05, 6.201399999999913e-05, 6.227799999999895e-05]</msg>
<status status="PASS" starttime="20201029 12:47:13.446" endtime="20201029 12:47:13.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.442" endtime="20201029 12:47:13.449"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:13.453" endtime="20201029 12:47:13.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.451" endtime="20201029 12:47:13.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.450" endtime="20201029 12:47:13.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.093" endtime="20201029 12:47:13.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.092" endtime="20201029 12:47:13.473"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.482" endtime="20201029 12:47:13.501"></status>
</kw>
<msg timestamp="20201029 12:47:13.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.481" endtime="20201029 12:47:13.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.502" endtime="20201029 12:47:13.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.505" endtime="20201029 12:47:13.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.478" endtime="20201029 12:47:13.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.476" endtime="20201029 12:47:13.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.514" endtime="20201029 12:47:13.798"></status>
</kw>
<msg timestamp="20201029 12:47:13.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022693083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022756194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:13.512" endtime="20201029 12:47:13.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022693083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022756194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:13.802" endtime="20201029 12:47:13.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.811" endtime="20201029 12:47:13.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.510" endtime="20201029 12:47:13.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.508" endtime="20201029 12:47:13.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:13.817" level="INFO">${RESULT} = [{'diff': 6.311100000000111e-05}, {'diff': 6.295800000000185e-05}, {'diff': 6.301400000000013e-05}, {'diff': 6.30279999999997e-05}, {'diff': 6.29439999999988e-05}, {'diff': 6.315299999999982e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:13.814" endtime="20201029 12:47:13.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:13.821" level="INFO">${ACCURACY} = {'diff': [6.311100000000111e-05, 6.295800000000185e-05, 6.301400000000013e-05, 6.30279999999997e-05, 6.29439999999988e-05, 6.315299999999982e-05, 6.291699999999914e-05, 6.342999999999974e-05, 6.280599...</msg>
<status status="PASS" starttime="20201029 12:47:13.818" endtime="20201029 12:47:13.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.826" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 12:47:13.825" endtime="20201029 12:47:13.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.828" level="INFO">VALUE: [6.311100000000111e-05, 6.295800000000185e-05, 6.301400000000013e-05, 6.30279999999997e-05, 6.29439999999988e-05, 6.315299999999982e-05, 6.291699999999914e-05, 6.342999999999974e-05, 6.280599999999859e-05, 6.279199999999902e-05, 6.34439999999993e-05, 6.290299999999957e-05, 6.356899999999943e-05, 6.256899999999843e-05, 6.280599999999859e-05, 6.259700000000104e-05, 6.33340000000017e-05, 6.334700000000179e-05, 6.350000000000106e-05, 6.348600000000149e-05, 6.297300000000089e-05, 6.354199999999977e-05, 6.348700000000096e-05, 6.28340000000012e-05, 6.348600000000149e-05, 6.286100000000086e-05, 6.350000000000106e-05, 6.354100000000029e-05, 6.263899999999975e-05, 6.337500000000093e-05, 6.292999999999924e-05, 6.355499999999986e-05, 6.301400000000013e-05, 6.283299999999825e-05, 6.345799999999888e-05, 6.340300000000007e-05, 6.341699999999964e-05, 6.297199999999795e-05, 6.34439999999993e-05, 6.286099999999739e-05, 6.27219999999977e-05, 6.348600000000149e-05, 6.315299999999982e-05, 6.354199999999977e-05, 6.297300000000089e-05, 6.340300000000007e-05, 6.347200000000192e-05, 6.286200000000033e-05, 6.279199999999902e-05, 6.329100000000004e-05]</msg>
<status status="PASS" starttime="20201029 12:47:13.827" endtime="20201029 12:47:13.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.822" endtime="20201029 12:47:13.831"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:13.834" endtime="20201029 12:47:13.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.833" endtime="20201029 12:47:13.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.831" endtime="20201029 12:47:13.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.474" endtime="20201029 12:47:13.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.474" endtime="20201029 12:47:13.855"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.863" endtime="20201029 12:47:13.881"></status>
</kw>
<msg timestamp="20201029 12:47:13.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.862" endtime="20201029 12:47:13.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.882" endtime="20201029 12:47:13.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.884" endtime="20201029 12:47:13.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.859" endtime="20201029 12:47:13.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.857" endtime="20201029 12:47:13.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.894" endtime="20201029 12:47:14.180"></status>
</kw>
<msg timestamp="20201029 12:47:14.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021966653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022030431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:13.892" endtime="20201029 12:47:14.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021966653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022030431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:14.185" endtime="20201029 12:47:14.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.194" endtime="20201029 12:47:14.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.889" endtime="20201029 12:47:14.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.888" endtime="20201029 12:47:14.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:14.201" level="INFO">${RESULT} = [{'diff': 6.377800000000045e-05}, {'diff': 6.445799999999988e-05}, {'diff': 6.411100000000211e-05}, {'diff': 6.393099999999971e-05}, {'diff': 6.391700000000014e-05}, {'diff': 6.365300000000032e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:14.198" endtime="20201029 12:47:14.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:14.207" level="INFO">${ACCURACY} = {'diff': [6.377800000000045e-05, 6.445799999999988e-05, 6.411100000000211e-05, 6.393099999999971e-05, 6.391700000000014e-05, 6.365300000000032e-05, 6.415300000000082e-05, 6.45280000000012e-05, 6.41940...</msg>
<status status="PASS" starttime="20201029 12:47:14.202" endtime="20201029 12:47:14.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.213" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 12:47:14.212" endtime="20201029 12:47:14.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.216" level="INFO">VALUE: [6.377800000000045e-05, 6.445799999999988e-05, 6.411100000000211e-05, 6.393099999999971e-05, 6.391700000000014e-05, 6.365300000000032e-05, 6.415300000000082e-05, 6.45280000000012e-05, 6.419400000000006e-05, 6.3582999999999e-05, 6.409699999999907e-05, 6.441700000000064e-05, 6.413899999999778e-05, 6.361099999999814e-05, 6.443100000000021e-05, 6.362500000000118e-05, 6.427800000000095e-05, 6.359699999999857e-05, 6.383299999999925e-05, 6.436099999999889e-05, 6.387499999999796e-05, 6.448600000000249e-05, 6.42500000000018e-05, 6.445899999999935e-05, 6.386099999999839e-05, 6.391600000000067e-05, 6.407000000000287e-05, 6.363800000000128e-05, 6.448599999999902e-05, 6.409699999999907e-05, 6.456900000000043e-05, 6.44159999999977e-05, 6.361099999999814e-05, 6.437499999999846e-05, 6.391600000000067e-05, 6.416700000000039e-05, 6.398600000000199e-05, 6.3889000000001e-05, 6.37500000000013e-05, 6.380599999999959e-05, 6.447199999999945e-05, 6.400000000000156e-05, 6.441700000000064e-05, 6.432000000000312e-05, 6.433399999999923e-05, 6.429200000000052e-05, 6.361100000000161e-05, 6.429200000000052e-05, 6.367999999999999e-05, 6.443100000000021e-05]</msg>
<status status="PASS" starttime="20201029 12:47:14.215" endtime="20201029 12:47:14.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.208" endtime="20201029 12:47:14.218"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:14.221" endtime="20201029 12:47:14.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.220" endtime="20201029 12:47:14.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.219" endtime="20201029 12:47:14.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.856" endtime="20201029 12:47:14.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.855" endtime="20201029 12:47:14.242"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.251" endtime="20201029 12:47:14.269"></status>
</kw>
<msg timestamp="20201029 12:47:14.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:14.249" endtime="20201029 12:47:14.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:14.270" endtime="20201029 12:47:14.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.273" endtime="20201029 12:47:14.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.246" endtime="20201029 12:47:14.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.244" endtime="20201029 12:47:14.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.282" endtime="20201029 12:47:14.569"></status>
</kw>
<msg timestamp="20201029 12:47:14.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022100417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022165806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:14.280" endtime="20201029 12:47:14.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022100417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022165806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:14.573" endtime="20201029 12:47:14.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.582" endtime="20201029 12:47:14.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.278" endtime="20201029 12:47:14.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.276" endtime="20201029 12:47:14.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:14.588" level="INFO">${RESULT} = [{'diff': 6.538899999999903e-05}, {'diff': 6.52220000000002e-05}, {'diff': 6.495899999999985e-05}, {'diff': 6.455599999999687e-05}, {'diff': 6.554200000000177e-05}, {'diff': 6.547200000000045e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:14.585" endtime="20201029 12:47:14.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:14.592" level="INFO">${ACCURACY} = {'diff': [6.538899999999903e-05, 6.52220000000002e-05, 6.495899999999985e-05, 6.455599999999687e-05, 6.554200000000177e-05, 6.547200000000045e-05, 6.522299999999967e-05, 6.484699999999982e-05, 6.54440...</msg>
<status status="PASS" starttime="20201029 12:47:14.589" endtime="20201029 12:47:14.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.597" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 12:47:14.596" endtime="20201029 12:47:14.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.599" level="INFO">VALUE: [6.538899999999903e-05, 6.52220000000002e-05, 6.495899999999985e-05, 6.455599999999687e-05, 6.554200000000177e-05, 6.547200000000045e-05, 6.522299999999967e-05, 6.484699999999982e-05, 6.54440000000013e-05, 6.530500000000161e-05, 6.487500000000243e-05, 6.501399999999866e-05, 6.524999999999934e-05, 6.556999999999744e-05, 6.537499999999946e-05, 6.506900000000093e-05, 6.498599999999952e-05, 6.462499999999871e-05, 6.497199999999995e-05, 6.4583e-05, 6.516699999999792e-05, 6.463899999999828e-05, 6.543100000000121e-05, 6.555599999999787e-05, 6.532000000000066e-05, 6.504200000000127e-05, 6.494499999999681e-05, 6.4889000000002e-05, 6.505499999999789e-05, 6.486200000000233e-05, 6.552699999999925e-05, 6.554100000000229e-05, 6.506900000000093e-05, 6.530499999999814e-05, 6.527700000000247e-05, 6.488899999999853e-05, 6.53890000000025e-05, 6.487499999999896e-05, 6.530500000000161e-05, 6.544499999999731e-05, 6.502799999999823e-05, 6.513899999999878e-05, 6.487499999999896e-05, 6.4583e-05, 6.55700000000009e-05, 6.544500000000078e-05, 6.498599999999952e-05, 6.52639999999989e-05, 6.47219999999997e-05, 6.511099999999964e-05]</msg>
<status status="PASS" starttime="20201029 12:47:14.598" endtime="20201029 12:47:14.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.593" endtime="20201029 12:47:14.600"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:14.604" endtime="20201029 12:47:14.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.603" endtime="20201029 12:47:14.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.601" endtime="20201029 12:47:14.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.243" endtime="20201029 12:47:14.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.242" endtime="20201029 12:47:14.625"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.633" endtime="20201029 12:47:14.654"></status>
</kw>
<msg timestamp="20201029 12:47:14.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:14.632" endtime="20201029 12:47:14.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:14.656" endtime="20201029 12:47:14.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.658" endtime="20201029 12:47:14.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.629" endtime="20201029 12:47:14.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.627" endtime="20201029 12:47:14.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.667" endtime="20201029 12:47:14.953"></status>
</kw>
<msg timestamp="20201029 12:47:14.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025023319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025089597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:14.666" endtime="20201029 12:47:14.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025023319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025089597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:14.958" endtime="20201029 12:47:14.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.966" endtime="20201029 12:47:14.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.663" endtime="20201029 12:47:14.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.662" endtime="20201029 12:47:14.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:14.973" level="INFO">${RESULT} = [{'diff': 6.627800000000295e-05}, {'diff': 6.613899999999978e-05}, {'diff': 6.588899999999953e-05}, {'diff': 6.648600000000102e-05}, {'diff': 6.648600000000102e-05}, {'diff': 6.598599999999705e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:14.969" endtime="20201029 12:47:14.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:14.977" level="INFO">${ACCURACY} = {'diff': [6.627800000000295e-05, 6.613899999999978e-05, 6.588899999999953e-05, 6.648600000000102e-05, 6.648600000000102e-05, 6.598599999999705e-05, 6.580599999999812e-05, 6.655600000000234e-05, 6.6570...</msg>
<status status="PASS" starttime="20201029 12:47:14.974" endtime="20201029 12:47:14.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.981" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 12:47:14.980" endtime="20201029 12:47:14.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.984" level="INFO">VALUE: [6.627800000000295e-05, 6.613899999999978e-05, 6.588899999999953e-05, 6.648600000000102e-05, 6.648600000000102e-05, 6.598599999999705e-05, 6.580599999999812e-05, 6.655600000000234e-05, 6.65700000000019e-05, 6.625000000000034e-05, 6.618099999999849e-05, 6.559800000000005e-05, 6.582000000000116e-05, 6.655599999999887e-05, 6.594500000000128e-05, 6.633399999999776e-05, 6.563900000000275e-05, 6.601399999999966e-05, 6.648599999999755e-05, 6.630499999999914e-05, 6.60830000000015e-05, 6.601399999999966e-05, 6.602799999999923e-05, 6.616700000000239e-05, 6.595800000000138e-05, 6.562499999999971e-05, 6.65419999999993e-05, 6.655600000000234e-05, 6.613899999999978e-05, 6.581900000000168e-05, 6.601399999999966e-05, 6.59029999999991e-05, 6.566700000000189e-05, 6.55969999999971e-05, 6.562499999999971e-05, 6.559700000000057e-05, 6.59029999999991e-05, 6.636099999999742e-05, 6.604200000000227e-05, 6.609700000000107e-05, 6.609800000000055e-05, 6.618099999999849e-05, 6.568100000000146e-05, 6.636100000000089e-05, 6.647200000000145e-05, 6.613800000000031e-05, 6.663900000000028e-05, 6.630499999999914e-05, 6.60969999999976e-05, 6.586099999999692e-05]</msg>
<status status="PASS" starttime="20201029 12:47:14.982" endtime="20201029 12:47:14.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.978" endtime="20201029 12:47:14.986"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:14.989" endtime="20201029 12:47:15.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.988" endtime="20201029 12:47:15.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.987" endtime="20201029 12:47:15.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.626" endtime="20201029 12:47:15.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.625" endtime="20201029 12:47:15.010"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.019" endtime="20201029 12:47:15.036"></status>
</kw>
<msg timestamp="20201029 12:47:15.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.017" endtime="20201029 12:47:15.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.037" endtime="20201029 12:47:15.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.040" endtime="20201029 12:47:15.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.015" endtime="20201029 12:47:15.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.013" endtime="20201029 12:47:15.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.049" endtime="20201029 12:47:15.335"></status>
</kw>
<msg timestamp="20201029 12:47:15.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022117306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022184694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:15.047" endtime="20201029 12:47:15.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022117306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022184694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:15.340" endtime="20201029 12:47:15.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.348" endtime="20201029 12:47:15.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.045" endtime="20201029 12:47:15.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.043" endtime="20201029 12:47:15.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:15.354" level="INFO">${RESULT} = [{'diff': 6.738800000000156e-05}, {'diff': 6.679100000000007e-05}, {'diff': 6.661100000000114e-05}, {'diff': 6.719399999999959e-05}, {'diff': 6.694399999999934e-05}, {'diff': 6.692999999999977e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:15.351" endtime="20201029 12:47:15.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:15.359" level="INFO">${ACCURACY} = {'diff': [6.738800000000156e-05, 6.679100000000007e-05, 6.661100000000114e-05, 6.719399999999959e-05, 6.694399999999934e-05, 6.692999999999977e-05, 6.733299999999928e-05, 6.715300000000035e-05, 6.7207...</msg>
<status status="PASS" starttime="20201029 12:47:15.355" endtime="20201029 12:47:15.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.364" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 12:47:15.363" endtime="20201029 12:47:15.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.366" level="INFO">VALUE: [6.738800000000156e-05, 6.679100000000007e-05, 6.661100000000114e-05, 6.719399999999959e-05, 6.694399999999934e-05, 6.692999999999977e-05, 6.733299999999928e-05, 6.715300000000035e-05, 6.720799999999916e-05, 6.697200000000195e-05, 6.679200000000302e-05, 6.731899999999971e-05, 6.697200000000195e-05, 6.659700000000157e-05, 6.709800000000155e-05, 6.718099999999949e-05, 6.680599999999912e-05, 6.727800000000048e-05, 6.731999999999919e-05, 6.713900000000078e-05, 6.691700000000314e-05, 6.69160000000002e-05, 6.679199999999955e-05, 6.662499999999724e-05, 6.687499999999749e-05, 6.683299999999878e-05, 6.719399999999959e-05, 6.694399999999934e-05, 6.687500000000096e-05, 6.720799999999916e-05, 6.662499999999724e-05, 6.734699999999885e-05, 6.737499999999799e-05, 6.749999999999812e-05, 6.695799999999891e-05, 6.712500000000121e-05, 6.751400000000116e-05, 6.74169999999967e-05, 6.697199999999848e-05, 6.705599999999937e-05, 6.684700000000182e-05, 6.747200000000245e-05, 6.750000000000159e-05, 6.713900000000078e-05, 6.659800000000105e-05, 6.662500000000071e-05, 6.69030000000001e-05, 6.661200000000062e-05, 6.74160000000007e-05, 6.744399999999984e-05]</msg>
<status status="PASS" starttime="20201029 12:47:15.365" endtime="20201029 12:47:15.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.360" endtime="20201029 12:47:15.372"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:15.376" endtime="20201029 12:47:15.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.374" endtime="20201029 12:47:15.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.373" endtime="20201029 12:47:15.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.011" endtime="20201029 12:47:15.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.011" endtime="20201029 12:47:15.396"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.405" endtime="20201029 12:47:15.422"></status>
</kw>
<msg timestamp="20201029 12:47:15.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.403" endtime="20201029 12:47:15.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.423" endtime="20201029 12:47:15.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.426" endtime="20201029 12:47:15.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.401" endtime="20201029 12:47:15.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.399" endtime="20201029 12:47:15.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.435" endtime="20201029 12:47:15.722"></status>
</kw>
<msg timestamp="20201029 12:47:15.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021903417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021971833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:15.433" endtime="20201029 12:47:15.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021903417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021971833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:15.726" endtime="20201029 12:47:15.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.734" endtime="20201029 12:47:15.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.431" endtime="20201029 12:47:15.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.429" endtime="20201029 12:47:15.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:15.741" level="INFO">${RESULT} = [{'diff': 6.841599999999823e-05}, {'diff': 6.849999999999912e-05}, {'diff': 6.836099999999942e-05}, {'diff': 6.777800000000098e-05}, {'diff': 6.762500000000171e-05}, {'diff': 6.826399999999844e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:15.738" endtime="20201029 12:47:15.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:15.745" level="INFO">${ACCURACY} = {'diff': [6.841599999999823e-05, 6.849999999999912e-05, 6.836099999999942e-05, 6.777800000000098e-05, 6.762500000000171e-05, 6.826399999999844e-05, 6.851399999999869e-05, 6.762500000000171e-05, 6.7902...</msg>
<status status="PASS" starttime="20201029 12:47:15.742" endtime="20201029 12:47:15.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.750" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 12:47:15.749" endtime="20201029 12:47:15.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.752" level="INFO">VALUE: [6.841599999999823e-05, 6.849999999999912e-05, 6.836099999999942e-05, 6.777800000000098e-05, 6.762500000000171e-05, 6.826399999999844e-05, 6.851399999999869e-05, 6.762500000000171e-05, 6.790299999999763e-05, 6.831899999999724e-05, 6.848600000000302e-05, 6.833300000000028e-05, 6.801400000000166e-05, 6.791700000000067e-05, 6.82640000000019e-05, 6.815299999999788e-05, 6.855600000000087e-05, 6.786200000000187e-05, 6.857000000000044e-05, 6.78480000000023e-05, 6.808300000000003e-05, 6.812500000000221e-05, 6.82909999999981e-05, 6.794400000000034e-05, 6.794399999999687e-05, 6.776399999999794e-05, 6.829100000000157e-05, 6.847199999999998e-05, 6.85559999999974e-05, 6.761100000000214e-05, 6.794400000000034e-05, 6.824999999999887e-05, 6.818100000000049e-05, 6.85420000000013e-05, 6.823600000000277e-05, 6.80420000000008e-05, 6.805600000000037e-05, 6.804199999999733e-05, 6.78619999999984e-05, 6.818099999999702e-05, 6.852799999999826e-05, 6.833399999999976e-05, 6.811199999999865e-05, 6.797199999999948e-05, 6.819400000000059e-05, 6.851299999999921e-05, 6.832000000000019e-05, 6.856900000000096e-05, 6.838900000000203e-05, 6.799999999999862e-05]</msg>
<status status="PASS" starttime="20201029 12:47:15.751" endtime="20201029 12:47:15.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.746" endtime="20201029 12:47:15.753"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:15.757" endtime="20201029 12:47:15.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.755" endtime="20201029 12:47:15.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.754" endtime="20201029 12:47:15.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.397" endtime="20201029 12:47:15.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.397" endtime="20201029 12:47:15.778"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.786" endtime="20201029 12:47:15.805"></status>
</kw>
<msg timestamp="20201029 12:47:15.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.785" endtime="20201029 12:47:15.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.807" endtime="20201029 12:47:15.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.809" endtime="20201029 12:47:15.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.782" endtime="20201029 12:47:15.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.780" endtime="20201029 12:47:15.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.818" endtime="20201029 12:47:16.104"></status>
</kw>
<msg timestamp="20201029 12:47:16.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023147417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023216569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:15.817" endtime="20201029 12:47:16.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023147417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023216569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.108" endtime="20201029 12:47:16.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.117" endtime="20201029 12:47:16.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.814" endtime="20201029 12:47:16.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.812" endtime="20201029 12:47:16.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:16.123" level="INFO">${RESULT} = [{'diff': 6.915199999999941e-05}, {'diff': 6.906900000000146e-05}, {'diff': 6.943000000000227e-05}, {'diff': 6.951399999999969e-05}, {'diff': 6.888899999999906e-05}, {'diff': 6.943000000000227e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:16.120" endtime="20201029 12:47:16.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:16.127" level="INFO">${ACCURACY} = {'diff': [6.915199999999941e-05, 6.906900000000146e-05, 6.943000000000227e-05, 6.951399999999969e-05, 6.888899999999906e-05, 6.943000000000227e-05, 6.866699999999795e-05, 6.863900000000228e-05, 6.9180...</msg>
<status status="PASS" starttime="20201029 12:47:16.124" endtime="20201029 12:47:16.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.132" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 12:47:16.131" endtime="20201029 12:47:16.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.134" level="INFO">VALUE: [6.915199999999941e-05, 6.906900000000146e-05, 6.943000000000227e-05, 6.951399999999969e-05, 6.888899999999906e-05, 6.943000000000227e-05, 6.866699999999795e-05, 6.863900000000228e-05, 6.918099999999802e-05, 6.954199999999883e-05, 6.898600000000005e-05, 6.936100000000042e-05, 6.898600000000005e-05, 6.940199999999966e-05, 6.862499999999924e-05, 6.890299999999863e-05, 6.955600000000187e-05, 6.895900000000038e-05, 6.911100000000017e-05, 6.932000000000119e-05, 6.937499999999999e-05, 6.933299999999781e-05, 6.912499999999974e-05, 6.913799999999984e-05, 6.913899999999931e-05, 6.883300000000078e-05, 6.886099999999992e-05, 6.890299999999863e-05, 6.924999999999987e-05, 6.927800000000248e-05, 6.936100000000042e-05, 6.915299999999888e-05, 6.887499999999949e-05, 6.863900000000228e-05, 6.90559999999979e-05, 6.908299999999756e-05, 6.951399999999969e-05, 6.94169999999987e-05, 6.926399999999944e-05, 6.919400000000159e-05, 6.922200000000073e-05, 6.933300000000128e-05, 6.879199999999808e-05, 6.882000000000069e-05, 6.90840000000005e-05, 6.897299999999995e-05, 6.90840000000005e-05, 6.940199999999966e-05, 6.926299999999996e-05, 6.884700000000035e-05]</msg>
<status status="PASS" starttime="20201029 12:47:16.133" endtime="20201029 12:47:16.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.128" endtime="20201029 12:47:16.136"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:16.140" endtime="20201029 12:47:16.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.139" endtime="20201029 12:47:16.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.137" endtime="20201029 12:47:16.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.779" endtime="20201029 12:47:16.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.778" endtime="20201029 12:47:16.161"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.169" endtime="20201029 12:47:16.188"></status>
</kw>
<msg timestamp="20201029 12:47:16.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.168" endtime="20201029 12:47:16.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.189" endtime="20201029 12:47:16.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.191" endtime="20201029 12:47:16.193"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.165" endtime="20201029 12:47:16.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.163" endtime="20201029 12:47:16.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.201" endtime="20201029 12:47:16.486"></status>
</kw>
<msg timestamp="20201029 12:47:16.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021899472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021969792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.199" endtime="20201029 12:47:16.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021899472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021969792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.490" endtime="20201029 12:47:16.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.499" endtime="20201029 12:47:16.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.196" endtime="20201029 12:47:16.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.195" endtime="20201029 12:47:16.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:16.505" level="INFO">${RESULT} = [{'diff': 7.031999999999872e-05}, {'diff': 7.040200000000066e-05}, {'diff': 7.030499999999967e-05}, {'diff': 7.006899999999899e-05}, {'diff': 7.038799999999762e-05}, {'diff': 7.031999999999872e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:16.502" endtime="20201029 12:47:16.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:16.510" level="INFO">${ACCURACY} = {'diff': [7.031999999999872e-05, 7.040200000000066e-05, 7.030499999999967e-05, 7.006899999999899e-05, 7.038799999999762e-05, 7.031999999999872e-05, 6.980500000000264e-05, 7.027699999999706e-05, 6.9957...</msg>
<status status="PASS" starttime="20201029 12:47:16.506" endtime="20201029 12:47:16.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.515" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 12:47:16.514" endtime="20201029 12:47:16.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.517" level="INFO">VALUE: [7.031999999999872e-05, 7.040200000000066e-05, 7.030499999999967e-05, 7.006899999999899e-05, 7.038799999999762e-05, 7.031999999999872e-05, 6.980500000000264e-05, 7.027699999999706e-05, 6.995799999999844e-05, 7.00420000000028e-05, 7.031900000000271e-05, 6.961100000000067e-05, 7.002799999999976e-05, 7.034700000000185e-05, 6.962500000000024e-05, 7.020799999999869e-05, 7.027800000000001e-05, 7.044499999999884e-05, 6.994499999999834e-05, 7.047299999999798e-05, 7.015299999999988e-05, 6.995899999999791e-05, 7.026400000000044e-05, 7.022199999999826e-05, 6.994500000000181e-05, 7.015200000000041e-05, 7.040300000000013e-05, 7.058299999999906e-05, 7.037500000000099e-05, 6.986100000000092e-05, 6.981899999999874e-05, 6.96109999999972e-05, 7.038900000000056e-05, 7.054100000000035e-05, 7.008299999999856e-05, 7.013900000000031e-05, 7.033299999999881e-05, 7.01109999999977e-05, 7.036099999999795e-05, 7.034700000000185e-05, 7.05559999999994e-05, 7.016699999999945e-05, 7.037500000000099e-05, 6.983399999999779e-05, 7.05559999999994e-05, 7.034799999999786e-05, 6.981999999999822e-05, 7.008299999999856e-05, 6.957000000000144e-05, 7.045800000000241e-05]</msg>
<status status="PASS" starttime="20201029 12:47:16.516" endtime="20201029 12:47:16.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.511" endtime="20201029 12:47:16.519"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:16.522" endtime="20201029 12:47:16.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.521" endtime="20201029 12:47:16.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.520" endtime="20201029 12:47:16.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.162" endtime="20201029 12:47:16.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.161" endtime="20201029 12:47:16.543"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.552" endtime="20201029 12:47:16.569"></status>
</kw>
<msg timestamp="20201029 12:47:16.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.550" endtime="20201029 12:47:16.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.571" endtime="20201029 12:47:16.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.573" endtime="20201029 12:47:16.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.548" endtime="20201029 12:47:16.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.545" endtime="20201029 12:47:16.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.582" endtime="20201029 12:47:16.869"></status>
</kw>
<msg timestamp="20201029 12:47:16.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021976819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022048014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.581" endtime="20201029 12:47:16.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021976819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022048014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.873" endtime="20201029 12:47:16.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.881" endtime="20201029 12:47:16.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.578" endtime="20201029 12:47:16.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.576" endtime="20201029 12:47:16.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:16.888" level="INFO">${RESULT} = [{'diff': 7.119499999999959e-05}, {'diff': 7.063900000000081e-05}, {'diff': 7.0584000000002e-05}, {'diff': 7.134800000000233e-05}, {'diff': 7.087499999999802e-05}, {'diff': 7.08620000000014e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:47:16.885" endtime="20201029 12:47:16.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:16.892" level="INFO">${ACCURACY} = {'diff': [7.119499999999959e-05, 7.063900000000081e-05, 7.0584000000002e-05, 7.134800000000233e-05, 7.087499999999802e-05, 7.08620000000014e-05, 7.05689999999995e-05, 7.120900000000263e-05, 7.12779999...</msg>
<status status="PASS" starttime="20201029 12:47:16.889" endtime="20201029 12:47:16.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.896" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 12:47:16.895" endtime="20201029 12:47:16.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.899" level="INFO">VALUE: [7.119499999999959e-05, 7.063900000000081e-05, 7.0584000000002e-05, 7.134800000000233e-05, 7.087499999999802e-05, 7.08620000000014e-05, 7.05689999999995e-05, 7.120900000000263e-05, 7.127799999999754e-05, 7.148599999999908e-05, 7.12910000000011e-05, 7.061100000000167e-05, 7.151399999999822e-05, 7.098599999999858e-05, 7.116699999999698e-05, 7.065300000000038e-05, 7.100000000000162e-05, 7.155500000000092e-05, 7.126400000000144e-05, 7.133299999999981e-05, 7.081899999999974e-05, 7.145899999999941e-05, 7.131999999999972e-05, 7.147199999999951e-05, 7.083399999999879e-05, 7.083399999999879e-05, 7.09170000000002e-05, 7.09300000000003e-05, 7.127799999999754e-05, 7.149999999999865e-05, 7.059699999999863e-05, 7.131999999999972e-05, 7.094399999999987e-05, 7.087500000000149e-05, 7.097200000000248e-05, 7.119400000000012e-05, 7.138899999999809e-05, 7.112499999999827e-05, 7.063900000000081e-05, 7.116700000000045e-05, 7.080500000000017e-05, 7.080500000000017e-05, 7.101400000000119e-05, 7.133299999999981e-05, 7.122199999999926e-05, 7.095899999999891e-05, 7.087500000000149e-05, 7.118100000000002e-05, 7.116699999999698e-05, 7.06109999999982e-05]</msg>
<status status="PASS" starttime="20201029 12:47:16.898" endtime="20201029 12:47:16.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.893" endtime="20201029 12:47:16.900"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:16.904" endtime="20201029 12:47:16.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.902" endtime="20201029 12:47:16.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.901" endtime="20201029 12:47:16.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.544" endtime="20201029 12:47:16.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.543" endtime="20201029 12:47:16.925"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.933" endtime="20201029 12:47:16.951"></status>
</kw>
<msg timestamp="20201029 12:47:16.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.932" endtime="20201029 12:47:16.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.952" endtime="20201029 12:47:16.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.955" endtime="20201029 12:47:16.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.929" endtime="20201029 12:47:16.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.927" endtime="20201029 12:47:16.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.964" endtime="20201029 12:47:17.249"></status>
</kw>
<msg timestamp="20201029 12:47:17.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022755903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022828292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.962" endtime="20201029 12:47:17.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022755903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022828292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.253" endtime="20201029 12:47:17.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.261" endtime="20201029 12:47:17.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.960" endtime="20201029 12:47:17.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.958" endtime="20201029 12:47:17.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:17.268" level="INFO">${RESULT} = [{'diff': 7.238899999999909e-05}, {'diff': 7.223599999999983e-05}, {'diff': 7.219500000000059e-05}, {'diff': 7.254099999999888e-05}, {'diff': 7.205500000000142e-05}, {'diff': 7.207000000000047e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:17.265" endtime="20201029 12:47:17.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:17.272" level="INFO">${ACCURACY} = {'diff': [7.238899999999909e-05, 7.223599999999983e-05, 7.219500000000059e-05, 7.254099999999888e-05, 7.205500000000142e-05, 7.207000000000047e-05, 7.22629999999995e-05, 7.25699999999975e-05, 7.194399...</msg>
<status status="PASS" starttime="20201029 12:47:17.269" endtime="20201029 12:47:17.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.276" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 12:47:17.275" endtime="20201029 12:47:17.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.279" level="INFO">VALUE: [7.238899999999909e-05, 7.223599999999983e-05, 7.219500000000059e-05, 7.254099999999888e-05, 7.205500000000142e-05, 7.207000000000047e-05, 7.22629999999995e-05, 7.25699999999975e-05, 7.19439999999974e-05, 7.21109999999997e-05, 7.194400000000087e-05, 7.22910000000021e-05, 7.181900000000074e-05, 7.187499999999902e-05, 7.186099999999945e-05, 7.183299999999684e-05, 7.248600000000008e-05, 7.201399999999872e-05, 7.236099999999995e-05, 7.166600000000148e-05, 7.19170000000012e-05, 7.230599999999768e-05, 7.232000000000072e-05, 7.163899999999834e-05, 7.237499999999952e-05, 7.195899999999991e-05, 7.229200000000158e-05, 7.229200000000158e-05, 7.220900000000016e-05, 7.165199999999844e-05, 7.188800000000259e-05, 7.161100000000267e-05, 7.15690000000005e-05, 7.190300000000163e-05, 7.23049999999982e-05, 7.184699999999988e-05, 7.201399999999872e-05, 7.205499999999795e-05, 7.186100000000292e-05, 7.212499999999927e-05, 7.245800000000094e-05, 7.215299999999841e-05, 7.249999999999965e-05, 7.244500000000084e-05, 7.22499999999994e-05, 7.222299999999973e-05, 7.237499999999952e-05, 7.200000000000262e-05, 7.15690000000005e-05, 7.233300000000081e-05]</msg>
<status status="PASS" starttime="20201029 12:47:17.278" endtime="20201029 12:47:17.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.273" endtime="20201029 12:47:17.281"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:17.285" endtime="20201029 12:47:17.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.283" endtime="20201029 12:47:17.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.282" endtime="20201029 12:47:17.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.925" endtime="20201029 12:47:17.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.925" endtime="20201029 12:47:17.306"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.315" endtime="20201029 12:47:17.332"></status>
</kw>
<msg timestamp="20201029 12:47:17.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.314" endtime="20201029 12:47:17.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.334" endtime="20201029 12:47:17.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.336" endtime="20201029 12:47:17.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.311" endtime="20201029 12:47:17.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.308" endtime="20201029 12:47:17.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.345" endtime="20201029 12:47:17.630"></status>
</kw>
<msg timestamp="20201029 12:47:17.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023011444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023084889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.344" endtime="20201029 12:47:17.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023011444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023084889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.634" endtime="20201029 12:47:17.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.642" endtime="20201029 12:47:17.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.341" endtime="20201029 12:47:17.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.339" endtime="20201029 12:47:17.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:17.649" level="INFO">${RESULT} = [{'diff': 7.344500000000184e-05}, {'diff': 7.279200000000208e-05}, {'diff': 7.284700000000088e-05}, {'diff': 7.334699999999791e-05}, {'diff': 7.302699999999981e-05}, {'diff': 7.333399999999782e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:17.646" endtime="20201029 12:47:17.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:17.654" level="INFO">${ACCURACY} = {'diff': [7.344500000000184e-05, 7.279200000000208e-05, 7.284700000000088e-05, 7.334699999999791e-05, 7.302699999999981e-05, 7.333399999999782e-05, 7.344500000000184e-05, 7.344500000000184e-05, 7.3277...</msg>
<status status="PASS" starttime="20201029 12:47:17.650" endtime="20201029 12:47:17.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.658" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 12:47:17.657" endtime="20201029 12:47:17.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.661" level="INFO">VALUE: [7.344500000000184e-05, 7.279200000000208e-05, 7.284700000000088e-05, 7.334699999999791e-05, 7.302699999999981e-05, 7.333399999999782e-05, 7.344500000000184e-05, 7.344500000000184e-05, 7.327700000000006e-05, 7.282000000000122e-05, 7.315199999999994e-05, 7.31110000000007e-05, 7.315300000000288e-05, 7.356899999999902e-05, 7.294400000000187e-05, 7.326399999999997e-05, 7.341699999999923e-05, 7.320800000000169e-05, 7.351400000000022e-05, 7.295799999999797e-05, 7.305599999999843e-05, 7.329200000000258e-05, 7.336100000000095e-05, 7.347200000000151e-05, 7.34309999999988e-05, 7.327799999999954e-05, 7.3069999999998e-05, 7.347199999999804e-05, 7.343100000000227e-05, 7.315300000000288e-05, 7.293100000000177e-05, 7.312500000000027e-05, 7.282000000000122e-05, 7.284700000000088e-05, 7.354199999999936e-05, 7.336099999999748e-05, 7.288900000000306e-05, 7.281900000000174e-05, 7.262499999999977e-05, 7.262500000000324e-05, 7.313899999999984e-05, 7.286100000000045e-05, 7.350000000000065e-05, 7.330599999999868e-05, 7.259700000000063e-05, 7.309700000000113e-05, 7.288899999999959e-05, 7.308300000000156e-05, 7.298600000000058e-05, 7.291699999999873e-05]</msg>
<status status="PASS" starttime="20201029 12:47:17.659" endtime="20201029 12:47:17.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.655" endtime="20201029 12:47:17.662"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:17.666" endtime="20201029 12:47:17.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.664" endtime="20201029 12:47:17.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.663" endtime="20201029 12:47:17.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.307" endtime="20201029 12:47:17.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.306" endtime="20201029 12:47:17.686"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.695" endtime="20201029 12:47:17.714"></status>
</kw>
<msg timestamp="20201029 12:47:17.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.693" endtime="20201029 12:47:17.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.715" endtime="20201029 12:47:17.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.718" endtime="20201029 12:47:17.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.691" endtime="20201029 12:47:17.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.689" endtime="20201029 12:47:17.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.726" endtime="20201029 12:47:18.014"></status>
</kw>
<msg timestamp="20201029 12:47:18.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022178458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022252861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.725" endtime="20201029 12:47:18.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022178458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022252861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:18.019" endtime="20201029 12:47:18.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.027" endtime="20201029 12:47:18.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.722" endtime="20201029 12:47:18.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.721" endtime="20201029 12:47:18.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:18.033" level="INFO">${RESULT} = [{'diff': 7.44029999999972e-05}, {'diff': 7.388900000000059e-05}, {'diff': 7.401400000000072e-05}, {'diff': 7.441700000000023e-05}, {'diff': 7.4069999999999e-05}, {'diff': 7.408300000000256e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:47:18.030" endtime="20201029 12:47:18.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:18.037" level="INFO">${ACCURACY} = {'diff': [7.44029999999972e-05, 7.388900000000059e-05, 7.401400000000072e-05, 7.441700000000023e-05, 7.4069999999999e-05, 7.408300000000256e-05, 7.39170000000032e-05, 7.376400000000047e-05, 7.41530000...</msg>
<status status="PASS" starttime="20201029 12:47:18.034" endtime="20201029 12:47:18.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.042" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 12:47:18.041" endtime="20201029 12:47:18.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.044" level="INFO">VALUE: [7.44029999999972e-05, 7.388900000000059e-05, 7.401400000000072e-05, 7.441700000000023e-05, 7.4069999999999e-05, 7.408300000000256e-05, 7.39170000000032e-05, 7.376400000000047e-05, 7.415300000000041e-05, 7.449999999999818e-05, 7.381999999999875e-05, 7.455599999999993e-05, 7.452800000000079e-05, 7.42769999999976e-05, 7.361099999999773e-05, 7.431899999999977e-05, 7.420799999999922e-05, 7.379100000000013e-05, 7.438900000000109e-05, 7.440300000000066e-05, 7.392999999999983e-05, 7.386100000000145e-05, 7.438899999999762e-05, 7.397199999999854e-05, 7.420799999999922e-05, 7.423600000000183e-05, 7.426400000000097e-05, 7.434700000000238e-05, 7.377800000000004e-05, 7.405499999999995e-05, 7.387500000000102e-05, 7.441700000000023e-05, 7.430599999999968e-05, 7.390300000000016e-05, 7.416600000000051e-05, 7.422300000000173e-05, 7.380500000000317e-05, 7.379100000000013e-05, 7.418100000000302e-05, 7.427700000000106e-05, 7.418000000000008e-05, 7.386100000000145e-05, 7.429200000000011e-05, 7.433299999999934e-05, 7.411099999999823e-05, 7.441700000000023e-05, 7.40829999999991e-05, 7.363900000000034e-05, 7.388900000000059e-05, 7.452699999999784e-05]</msg>
<status status="PASS" starttime="20201029 12:47:18.043" endtime="20201029 12:47:18.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.038" endtime="20201029 12:47:18.046"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:18.049" endtime="20201029 12:47:18.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.048" endtime="20201029 12:47:18.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.047" endtime="20201029 12:47:18.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.687" endtime="20201029 12:47:18.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.687" endtime="20201029 12:47:18.070"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.081" endtime="20201029 12:47:18.103"></status>
</kw>
<msg timestamp="20201029 12:47:18.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.079" endtime="20201029 12:47:18.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.105" endtime="20201029 12:47:18.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.107" endtime="20201029 12:47:18.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.076" endtime="20201029 12:47:18.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.073" endtime="20201029 12:47:18.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.116" endtime="20201029 12:47:18.401"></status>
</kw>
<msg timestamp="20201029 12:47:18.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029164028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029238806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:18.115" endtime="20201029 12:47:18.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029164028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029238806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:18.406" endtime="20201029 12:47:18.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.414" endtime="20201029 12:47:18.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.112" endtime="20201029 12:47:18.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.110" endtime="20201029 12:47:18.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:18.421" level="INFO">${RESULT} = [{'diff': 7.477799999999757e-05}, {'diff': 7.541699999999776e-05}, {'diff': 7.491700000000073e-05}, {'diff': 7.532000000000025e-05}, {'diff': 7.551399999999875e-05}, {'diff': 7.501399999999825e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:18.417" endtime="20201029 12:47:18.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:18.425" level="INFO">${ACCURACY} = {'diff': [7.477799999999757e-05, 7.541699999999776e-05, 7.491700000000073e-05, 7.532000000000025e-05, 7.551399999999875e-05, 7.501399999999825e-05, 7.524999999999893e-05, 7.498600000000258e-05, 7.5305...</msg>
<status status="PASS" starttime="20201029 12:47:18.422" endtime="20201029 12:47:18.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.429" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 12:47:18.428" endtime="20201029 12:47:18.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.432" level="INFO">VALUE: [7.477799999999757e-05, 7.541699999999776e-05, 7.491700000000073e-05, 7.532000000000025e-05, 7.551399999999875e-05, 7.501399999999825e-05, 7.524999999999893e-05, 7.498600000000258e-05, 7.530599999999721e-05, 7.522299999999926e-05, 7.504199999999739e-05, 7.509799999999914e-05, 7.537499999999905e-05, 7.49440000000004e-05, 7.552699999999885e-05, 7.529099999999816e-05, 7.49440000000004e-05, 7.491600000000126e-05, 7.524999999999893e-05, 7.551400000000222e-05, 7.488899999999812e-05, 7.465300000000091e-05, 7.45829999999996e-05, 7.469499999999962e-05, 7.499999999999868e-05, 7.463899999999787e-05, 7.505600000000043e-05, 7.498600000000605e-05, 7.50969999999962e-05, 7.512499999999533e-05, 7.50839999999961e-05, 7.465300000000091e-05, 7.526400000000544e-05, 7.50839999999961e-05, 7.456899999999655e-05, 7.504099999999791e-05, 7.562499999999583e-05, 7.524999999999893e-05, 7.527800000000501e-05, 7.52639999999985e-05, 7.53890000000021e-05, 7.465300000000091e-05, 7.518100000000055e-05, 7.522200000000673e-05, 7.519500000000012e-05, 7.516700000000098e-05, 7.522199999999979e-05, 7.483300000000331e-05, 7.483400000000279e-05, 7.511099999999576e-05]</msg>
<status status="PASS" starttime="20201029 12:47:18.430" endtime="20201029 12:47:18.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.425" endtime="20201029 12:47:18.434"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:18.437" endtime="20201029 12:47:18.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.436" endtime="20201029 12:47:18.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.435" endtime="20201029 12:47:18.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.071" endtime="20201029 12:47:18.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.071" endtime="20201029 12:47:18.458"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.467" endtime="20201029 12:47:18.484"></status>
</kw>
<msg timestamp="20201029 12:47:18.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.465" endtime="20201029 12:47:18.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.486" endtime="20201029 12:47:18.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.488" endtime="20201029 12:47:18.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.463" endtime="20201029 12:47:18.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.460" endtime="20201029 12:47:18.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.497" endtime="20201029 12:47:18.783"></status>
</kw>
<msg timestamp="20201029 12:47:18.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021936083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022012208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:18.496" endtime="20201029 12:47:18.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021936083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022012208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:18.787" endtime="20201029 12:47:18.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.795" endtime="20201029 12:47:18.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.493" endtime="20201029 12:47:18.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.491" endtime="20201029 12:47:18.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:18.802" level="INFO">${RESULT} = [{'diff': 7.61249999999998e-05}, {'diff': 7.593000000000183e-05}, {'diff': 7.638899999999962e-05}, {'diff': 7.630499999999873e-05}, {'diff': 7.586100000000345e-05}, {'diff': 7.563899999999887e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:18.799" endtime="20201029 12:47:18.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:18.807" level="INFO">${ACCURACY} = {'diff': [7.61249999999998e-05, 7.593000000000183e-05, 7.638899999999962e-05, 7.630499999999873e-05, 7.586100000000345e-05, 7.563899999999887e-05, 7.623600000000036e-05, 7.561099999999973e-05, 7.60409...</msg>
<status status="PASS" starttime="20201029 12:47:18.803" endtime="20201029 12:47:18.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.812" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 12:47:18.811" endtime="20201029 12:47:18.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.814" level="INFO">VALUE: [7.61249999999998e-05, 7.593000000000183e-05, 7.638899999999962e-05, 7.630499999999873e-05, 7.586100000000345e-05, 7.563899999999887e-05, 7.623600000000036e-05, 7.561099999999973e-05, 7.604099999999892e-05, 7.573599999999986e-05, 7.616700000000198e-05, 7.623600000000036e-05, 7.613899999999937e-05, 7.629199999999864e-05, 7.598600000000011e-05, 7.629199999999864e-05, 7.583400000000032e-05, 7.636100000000048e-05, 7.629200000000211e-05, 7.597300000000001e-05, 7.656899999999855e-05, 7.598600000000011e-05, 7.594500000000087e-05, 7.626300000000003e-05, 7.622199999999732e-05, 7.55830000000006e-05, 7.648600000000061e-05, 7.583299999999737e-05, 7.636100000000048e-05, 7.636100000000048e-05, 7.591699999999826e-05, 7.584700000000041e-05, 7.601399999999925e-05, 7.654199999999889e-05, 7.633299999999787e-05, 7.637500000000005e-05, 7.59440000000014e-05, 7.600000000000315e-05, 7.613899999999937e-05, 7.633400000000082e-05, 7.580599999999771e-05, 7.620900000000069e-05, 7.624999999999993e-05, 7.598600000000011e-05, 7.611199999999971e-05, 7.623600000000036e-05, 7.599999999999968e-05, 7.62769999999996e-05, 7.565200000000244e-05, 7.605599999999796e-05]</msg>
<status status="PASS" starttime="20201029 12:47:18.813" endtime="20201029 12:47:18.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.808" endtime="20201029 12:47:18.815"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:18.819" endtime="20201029 12:47:18.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.818" endtime="20201029 12:47:18.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.816" endtime="20201029 12:47:18.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.459" endtime="20201029 12:47:18.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.458" endtime="20201029 12:47:18.840"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.848" endtime="20201029 12:47:18.866"></status>
</kw>
<msg timestamp="20201029 12:47:18.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.847" endtime="20201029 12:47:18.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.868" endtime="20201029 12:47:18.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.870" endtime="20201029 12:47:18.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.844" endtime="20201029 12:47:18.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.842" endtime="20201029 12:47:18.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.879" endtime="20201029 12:47:19.168"></status>
</kw>
<msg timestamp="20201029 12:47:19.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02237975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022456681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:18.878" endtime="20201029 12:47:19.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02237975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022456681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:19.172" endtime="20201029 12:47:19.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.180" endtime="20201029 12:47:19.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.875" endtime="20201029 12:47:19.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.873" endtime="20201029 12:47:19.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:19.187" level="INFO">${RESULT} = [{'diff': 7.693099999999883e-05}, {'diff': 7.716699999999951e-05}, {'diff': 7.700000000000068e-05}, {'diff': 7.72640000000005e-05}, {'diff': 7.752800000000032e-05}, {'diff': 7.730599999999921e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:19.184" endtime="20201029 12:47:19.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:19.191" level="INFO">${ACCURACY} = {'diff': [7.693099999999883e-05, 7.716699999999951e-05, 7.700000000000068e-05, 7.72640000000005e-05, 7.752800000000032e-05, 7.730599999999921e-05, 7.719500000000212e-05, 7.688900000000012e-05, 7.67779...</msg>
<status status="PASS" starttime="20201029 12:47:19.188" endtime="20201029 12:47:19.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.196" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 12:47:19.195" endtime="20201029 12:47:19.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.198" level="INFO">VALUE: [7.693099999999883e-05, 7.716699999999951e-05, 7.700000000000068e-05, 7.72640000000005e-05, 7.752800000000032e-05, 7.730599999999921e-05, 7.719500000000212e-05, 7.688900000000012e-05, 7.677799999999957e-05, 7.658400000000107e-05, 7.684699999999794e-05, 7.715200000000047e-05, 7.748600000000161e-05, 7.716600000000004e-05, 7.661100000000073e-05, 7.695900000000144e-05, 7.724999999999746e-05, 7.7457999999999e-05, 7.709700000000166e-05, 7.747199999999857e-05, 7.719399999999918e-05, 7.72640000000005e-05, 7.69579999999985e-05, 7.704099999999992e-05, 7.705599999999896e-05, 7.70839999999981e-05, 7.704199999999939e-05, 7.745900000000194e-05, 7.716699999999951e-05, 7.718099999999908e-05, 7.74030000000002e-05, 7.683299999999837e-05, 7.698700000000058e-05, 7.66250000000003e-05, 7.702700000000035e-05, 7.69579999999985e-05, 7.740200000000072e-05, 7.698600000000111e-05, 7.694399999999893e-05, 7.755499999999999e-05, 7.719399999999918e-05, 7.708299999999862e-05, 7.697199999999807e-05, 7.722200000000179e-05, 7.700000000000068e-05, 7.741699999999976e-05, 7.74030000000002e-05, 7.679199999999914e-05, 7.72640000000005e-05, 7.704199999999939e-05]</msg>
<status status="PASS" starttime="20201029 12:47:19.197" endtime="20201029 12:47:19.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.192" endtime="20201029 12:47:19.200"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:19.203" endtime="20201029 12:47:19.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.202" endtime="20201029 12:47:19.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.200" endtime="20201029 12:47:19.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.841" endtime="20201029 12:47:19.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.840" endtime="20201029 12:47:19.224"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.233" endtime="20201029 12:47:19.251"></status>
</kw>
<msg timestamp="20201029 12:47:19.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.231" endtime="20201029 12:47:19.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.253" endtime="20201029 12:47:19.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.255" endtime="20201029 12:47:19.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.229" endtime="20201029 12:47:19.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.226" endtime="20201029 12:47:19.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.264" endtime="20201029 12:47:19.551"></status>
</kw>
<msg timestamp="20201029 12:47:19.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023054528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023133, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:47:19.263" endtime="20201029 12:47:19.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023054528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023133, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:47:19.555" endtime="20201029 12:47:19.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.564" endtime="20201029 12:47:19.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.260" endtime="20201029 12:47:19.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.258" endtime="20201029 12:47:19.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:19.570" level="INFO">${RESULT} = [{'diff': 7.847199999999957e-05}, {'diff': 7.837499999999858e-05}, {'diff': 7.816600000000104e-05}, {'diff': 7.793099999999983e-05}, {'diff': 7.779200000000014e-05}, {'diff': 7.779200000000014e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:19.567" endtime="20201029 12:47:19.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:19.574" level="INFO">${ACCURACY} = {'diff': [7.847199999999957e-05, 7.837499999999858e-05, 7.816600000000104e-05, 7.793099999999983e-05, 7.779200000000014e-05, 7.779200000000014e-05, 7.75969999999987e-05, 7.804200000000039e-05, 7.83060...</msg>
<status status="PASS" starttime="20201029 12:47:19.571" endtime="20201029 12:47:19.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.579" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 12:47:19.578" endtime="20201029 12:47:19.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.581" level="INFO">VALUE: [7.847199999999957e-05, 7.837499999999858e-05, 7.816600000000104e-05, 7.793099999999983e-05, 7.779200000000014e-05, 7.779200000000014e-05, 7.75969999999987e-05, 7.804200000000039e-05, 7.830600000000021e-05, 7.781999999999928e-05, 7.827800000000107e-05, 7.763900000000087e-05, 7.788900000000112e-05, 7.847299999999904e-05, 7.863900000000187e-05, 7.843100000000033e-05, 7.81250000000018e-05, 7.762499999999783e-05, 7.818000000000061e-05, 7.851400000000175e-05, 7.838900000000162e-05, 7.806900000000006e-05, 7.78189999999998e-05, 7.793099999999983e-05, 7.834700000000291e-05, 7.793099999999983e-05, 7.75969999999987e-05, 7.78189999999998e-05, 7.805599999999996e-05, 7.819499999999965e-05, 7.816700000000051e-05, 7.834699999999944e-05, 7.832000000000325e-05, 7.845899999999947e-05, 7.762499999999783e-05, 7.788900000000112e-05, 7.805599999999996e-05, 7.843100000000033e-05, 7.787500000000155e-05, 7.822200000000279e-05, 7.759700000000216e-05, 7.763900000000087e-05, 7.786099999999851e-05, 7.851399999999828e-05, 7.855600000000046e-05, 7.815299999999747e-05, 7.852799999999785e-05, 7.820799999999975e-05, 7.806900000000006e-05, 7.793099999999983e-05]</msg>
<status status="PASS" starttime="20201029 12:47:19.580" endtime="20201029 12:47:19.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.575" endtime="20201029 12:47:19.584"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:19.587" endtime="20201029 12:47:19.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.586" endtime="20201029 12:47:19.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.584" endtime="20201029 12:47:19.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.225" endtime="20201029 12:47:19.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.224" endtime="20201029 12:47:19.608"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.616" endtime="20201029 12:47:19.634"></status>
</kw>
<msg timestamp="20201029 12:47:19.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.615" endtime="20201029 12:47:19.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.636" endtime="20201029 12:47:19.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.638" endtime="20201029 12:47:19.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.612" endtime="20201029 12:47:19.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.610" endtime="20201029 12:47:19.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.647" endtime="20201029 12:47:19.933"></status>
</kw>
<msg timestamp="20201029 12:47:19.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022267417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022346681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:19.646" endtime="20201029 12:47:19.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022267417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022346681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:19.937" endtime="20201029 12:47:19.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.945" endtime="20201029 12:47:19.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.643" endtime="20201029 12:47:19.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.642" endtime="20201029 12:47:19.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:19.952" level="INFO">${RESULT} = [{'diff': 7.926399999999903e-05}, {'diff': 7.92909999999987e-05}, {'diff': 7.9458000000001e-05}, {'diff': 7.954099999999895e-05}, {'diff': 7.934700000000044e-05}, {'diff': 7.947200000000057e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:47:19.949" endtime="20201029 12:47:19.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:19.957" level="INFO">${ACCURACY} = {'diff': [7.926399999999903e-05, 7.92909999999987e-05, 7.9458000000001e-05, 7.954099999999895e-05, 7.934700000000044e-05, 7.947200000000057e-05, 7.905499999999802e-05, 7.858300000000012e-05, 7.9306000...</msg>
<status status="PASS" starttime="20201029 12:47:19.953" endtime="20201029 12:47:19.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.961" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 12:47:19.960" endtime="20201029 12:47:19.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.964" level="INFO">VALUE: [7.926399999999903e-05, 7.92909999999987e-05, 7.9458000000001e-05, 7.954099999999895e-05, 7.934700000000044e-05, 7.947200000000057e-05, 7.905499999999802e-05, 7.858300000000012e-05, 7.930600000000121e-05, 7.873599999999939e-05, 7.886099999999951e-05, 7.916700000000151e-05, 7.888899999999865e-05, 7.900000000000268e-05, 7.905600000000096e-05, 7.879199999999767e-05, 7.85969999999997e-05, 7.919500000000065e-05, 7.91389999999989e-05, 7.863900000000187e-05, 7.92779999999986e-05, 7.947300000000004e-05, 7.863799999999893e-05, 7.894399999999746e-05, 7.886099999999951e-05, 7.941599999999882e-05, 7.905500000000149e-05, 7.85969999999997e-05, 7.858300000000012e-05, 7.925000000000293e-05, 7.920800000000075e-05, 7.912499999999933e-05, 7.923599999999989e-05, 7.955599999999799e-05, 7.94450000000009e-05, 7.911099999999976e-05, 7.936100000000001e-05, 7.880600000000071e-05, 7.949999999999971e-05, 7.938899999999915e-05, 7.933400000000035e-05, 7.937499999999958e-05, 7.899999999999921e-05, 7.916599999999857e-05, 7.884699999999994e-05, 7.92909999999987e-05, 7.861099999999926e-05, 7.892999999999789e-05, 7.894400000000093e-05, 7.880600000000071e-05]</msg>
<status status="PASS" starttime="20201029 12:47:19.963" endtime="20201029 12:47:19.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.958" endtime="20201029 12:47:19.965"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:19.969" endtime="20201029 12:47:19.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.967" endtime="20201029 12:47:19.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.966" endtime="20201029 12:47:19.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.609" endtime="20201029 12:47:19.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.608" endtime="20201029 12:47:19.990"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.998" endtime="20201029 12:47:20.017"></status>
</kw>
<msg timestamp="20201029 12:47:20.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.997" endtime="20201029 12:47:20.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.018" endtime="20201029 12:47:20.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.021" endtime="20201029 12:47:20.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.994" endtime="20201029 12:47:20.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.992" endtime="20201029 12:47:20.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.030" endtime="20201029 12:47:20.317"></status>
</kw>
<msg timestamp="20201029 12:47:20.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022209639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022290181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.028" endtime="20201029 12:47:20.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022209639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022290181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.321" endtime="20201029 12:47:20.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.329" endtime="20201029 12:47:20.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.025" endtime="20201029 12:47:20.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.024" endtime="20201029 12:47:20.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:20.336" level="INFO">${RESULT} = [{'diff': 8.054199999999942e-05}, {'diff': 8.037499999999712e-05}, {'diff': 7.998599999999717e-05}, {'diff': 8.02909999999997e-05}, {'diff': 7.993000000000236e-05}, {'diff': 7.983300000000138e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:20.333" endtime="20201029 12:47:20.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:20.340" level="INFO">${ACCURACY} = {'diff': [8.054199999999942e-05, 8.037499999999712e-05, 7.998599999999717e-05, 8.02909999999997e-05, 7.993000000000236e-05, 7.983300000000138e-05, 7.962499999999983e-05, 8.029199999999917e-05, 8.05279...</msg>
<status status="PASS" starttime="20201029 12:47:20.337" endtime="20201029 12:47:20.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.345" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 12:47:20.344" endtime="20201029 12:47:20.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.348" level="INFO">VALUE: [8.054199999999942e-05, 8.037499999999712e-05, 7.998599999999717e-05, 8.02909999999997e-05, 7.993000000000236e-05, 7.983300000000138e-05, 7.962499999999983e-05, 8.029199999999917e-05, 8.052799999999985e-05, 8.034700000000145e-05, 8.01389999999999e-05, 8.037500000000058e-05, 7.965299999999897e-05, 8.052799999999985e-05, 8.055600000000246e-05, 7.966699999999854e-05, 8.041599999999982e-05, 7.990299999999922e-05, 7.993100000000183e-05, 8.00840000000011e-05, 8.037500000000058e-05, 8.012500000000033e-05, 8.038800000000068e-05, 8.008299999999816e-05, 8.051400000000028e-05, 7.994399999999846e-05, 8.047200000000157e-05, 7.980500000000224e-05, 7.997200000000107e-05, 7.980499999999877e-05, 8.019399999999871e-05, 8.004199999999892e-05, 7.997300000000054e-05, 7.961100000000026e-05, 8.043099999999886e-05, 8.051400000000028e-05, 7.988899999999965e-05, 8.056999999999856e-05, 8.049999999999724e-05, 7.99030000000027e-05, 8.022199999999785e-05, 7.994399999999846e-05, 8.011100000000076e-05, 8.051400000000028e-05, 8.023599999999742e-05, 8.002799999999935e-05, 8.004100000000292e-05, 8.029199999999917e-05, 8.030500000000274e-05, 8.006900000000206e-05]</msg>
<status status="PASS" starttime="20201029 12:47:20.346" endtime="20201029 12:47:20.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.341" endtime="20201029 12:47:20.349"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:20.353" endtime="20201029 12:47:20.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.351" endtime="20201029 12:47:20.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.350" endtime="20201029 12:47:20.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.990" endtime="20201029 12:47:20.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.990" endtime="20201029 12:47:20.374"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.383" endtime="20201029 12:47:20.401"></status>
</kw>
<msg timestamp="20201029 12:47:20.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.381" endtime="20201029 12:47:20.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.403" endtime="20201029 12:47:20.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.405" endtime="20201029 12:47:20.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.379" endtime="20201029 12:47:20.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.376" endtime="20201029 12:47:20.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.415" endtime="20201029 12:47:20.700"></status>
</kw>
<msg timestamp="20201029 12:47:20.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022929722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023010792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.413" endtime="20201029 12:47:20.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022929722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023010792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.704" endtime="20201029 12:47:20.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.713" endtime="20201029 12:47:20.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.410" endtime="20201029 12:47:20.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.409" endtime="20201029 12:47:20.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:20.719" level="INFO">${RESULT} = [{'diff': 8.106999999999906e-05}, {'diff': 8.138899999999769e-05}, {'diff': 8.125000000000146e-05}, {'diff': 8.138900000000115e-05}, {'diff': 8.14170000000003e-05}, {'diff': 8.104099999999698e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:20.716" endtime="20201029 12:47:20.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:20.723" level="INFO">${ACCURACY} = {'diff': [8.106999999999906e-05, 8.138899999999769e-05, 8.125000000000146e-05, 8.138900000000115e-05, 8.14170000000003e-05, 8.104099999999698e-05, 8.116600000000057e-05, 8.07910000000002e-05, 8.098600...</msg>
<status status="PASS" starttime="20201029 12:47:20.720" endtime="20201029 12:47:20.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.728" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 12:47:20.727" endtime="20201029 12:47:20.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.730" level="INFO">VALUE: [8.106999999999906e-05, 8.138899999999769e-05, 8.125000000000146e-05, 8.138900000000115e-05, 8.14170000000003e-05, 8.104099999999698e-05, 8.116600000000057e-05, 8.07910000000002e-05, 8.098600000000164e-05, 8.054099999999995e-05, 8.062499999999737e-05, 8.101400000000078e-05, 8.093099999999936e-05, 8.130500000000027e-05, 8.143099999999986e-05, 8.095799999999903e-05, 8.081899999999934e-05, 8.120799999999928e-05, 8.14170000000003e-05, 8.152800000000085e-05, 8.143099999999986e-05, 8.10979999999982e-05, 8.091599999999685e-05, 8.092999999999989e-05, 8.08329999999989e-05, 8.140200000000125e-05, 8.101299999999784e-05, 8.154099999999748e-05, 8.084699999999848e-05, 8.095799999999903e-05, 8.126400000000103e-05, 8.101400000000078e-05, 8.130599999999974e-05, 8.144399999999996e-05, 8.130500000000027e-05, 8.088900000000065e-05, 8.130599999999974e-05, 8.131999999999931e-05, 8.120800000000275e-05, 8.148599999999867e-05, 8.108399999999863e-05, 8.149999999999824e-05, 8.116700000000004e-05, 8.09450000000024e-05, 8.098700000000111e-05, 8.083399999999838e-05, 8.118000000000014e-05, 8.127700000000113e-05, 8.131899999999984e-05, 8.119399999999971e-05]</msg>
<status status="PASS" starttime="20201029 12:47:20.729" endtime="20201029 12:47:20.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.724" endtime="20201029 12:47:20.733"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:20.736" endtime="20201029 12:47:20.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.735" endtime="20201029 12:47:20.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.734" endtime="20201029 12:47:20.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.375" endtime="20201029 12:47:20.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.374" endtime="20201029 12:47:20.757"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.766" endtime="20201029 12:47:20.784"></status>
</kw>
<msg timestamp="20201029 12:47:20.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.764" endtime="20201029 12:47:20.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.786" endtime="20201029 12:47:20.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.788" endtime="20201029 12:47:20.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.762" endtime="20201029 12:47:20.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.760" endtime="20201029 12:47:20.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.797" endtime="20201029 12:47:21.084"></status>
</kw>
<msg timestamp="20201029 12:47:21.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021961458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022043417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.795" endtime="20201029 12:47:21.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021961458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022043417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.088" endtime="20201029 12:47:21.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.096" endtime="20201029 12:47:21.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.793" endtime="20201029 12:47:21.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.791" endtime="20201029 12:47:21.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:21.103" level="INFO">${RESULT} = [{'diff': 8.19589999999995e-05}, {'diff': 8.198600000000264e-05}, {'diff': 8.181900000000034e-05}, {'diff': 8.156999999999956e-05}, {'diff': 8.181900000000034e-05}, {'diff': 8.229099999999823e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:21.100" endtime="20201029 12:47:21.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:21.108" level="INFO">${ACCURACY} = {'diff': [8.19589999999995e-05, 8.198600000000264e-05, 8.181900000000034e-05, 8.156999999999956e-05, 8.181900000000034e-05, 8.229099999999823e-05, 8.198599999999917e-05, 8.2152999999998e-05, 8.2430000...</msg>
<status status="PASS" starttime="20201029 12:47:21.104" endtime="20201029 12:47:21.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.113" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 12:47:21.111" endtime="20201029 12:47:21.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.115" level="INFO">VALUE: [8.19589999999995e-05, 8.198600000000264e-05, 8.181900000000034e-05, 8.156999999999956e-05, 8.181900000000034e-05, 8.229099999999823e-05, 8.198599999999917e-05, 8.2152999999998e-05, 8.243000000000139e-05, 8.242999999999792e-05, 8.230500000000127e-05, 8.181899999999687e-05, 8.227799999999813e-05, 8.165300000000097e-05, 8.236099999999955e-05, 8.236099999999955e-05, 8.238900000000215e-05, 8.199999999999874e-05, 8.168000000000064e-05, 8.190200000000175e-05, 8.19589999999995e-05, 8.233400000000335e-05, 8.226299999999909e-05, 8.220899999999975e-05, 8.211199999999877e-05, 8.256900000000109e-05, 8.201299999999884e-05, 8.251400000000228e-05, 8.236099999999955e-05, 8.198599999999917e-05, 8.255499999999805e-05, 8.19719999999996e-05, 8.223599999999942e-05, 8.231900000000084e-05, 8.26109999999998e-05, 8.179200000000067e-05, 8.179200000000067e-05, 8.245800000000053e-05, 8.213899999999844e-05, 8.177799999999763e-05, 8.248599999999967e-05, 8.24170000000013e-05, 8.208399999999963e-05, 8.198600000000264e-05, 8.190300000000122e-05, 8.188900000000165e-05, 8.248599999999967e-05, 8.238900000000215e-05, 8.254099999999848e-05, 8.212500000000234e-05]</msg>
<status status="PASS" starttime="20201029 12:47:21.114" endtime="20201029 12:47:21.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.109" endtime="20201029 12:47:21.116"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:21.120" endtime="20201029 12:47:21.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.118" endtime="20201029 12:47:21.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.117" endtime="20201029 12:47:21.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.758" endtime="20201029 12:47:21.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.758" endtime="20201029 12:47:21.141"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.149" endtime="20201029 12:47:21.167"></status>
</kw>
<msg timestamp="20201029 12:47:21.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.148" endtime="20201029 12:47:21.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.168" endtime="20201029 12:47:21.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.171" endtime="20201029 12:47:21.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.145" endtime="20201029 12:47:21.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.143" endtime="20201029 12:47:21.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.182" endtime="20201029 12:47:21.469"></status>
</kw>
<msg timestamp="20201029 12:47:21.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022036153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022119319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.180" endtime="20201029 12:47:21.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022036153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022119319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.473" endtime="20201029 12:47:21.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.482" endtime="20201029 12:47:21.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.177" endtime="20201029 12:47:21.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.174" endtime="20201029 12:47:21.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:21.488" level="INFO">${RESULT} = [{'diff': 8.31659999999991e-05}, {'diff': 8.29309999999979e-05}, {'diff': 8.345799999999806e-05}, {'diff': 8.281899999999787e-05}, {'diff': 8.28330000000009e-05}, {'diff': 8.338899999999969e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:47:21.485" endtime="20201029 12:47:21.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:21.492" level="INFO">${ACCURACY} = {'diff': [8.31659999999991e-05, 8.29309999999979e-05, 8.345799999999806e-05, 8.281899999999787e-05, 8.28330000000009e-05, 8.338899999999969e-05, 8.344399999999849e-05, 8.2846999999997e-05, 8.338899999...</msg>
<status status="PASS" starttime="20201029 12:47:21.489" endtime="20201029 12:47:21.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.497" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 12:47:21.496" endtime="20201029 12:47:21.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.499" level="INFO">VALUE: [8.31659999999991e-05, 8.29309999999979e-05, 8.345799999999806e-05, 8.281899999999787e-05, 8.28330000000009e-05, 8.338899999999969e-05, 8.344399999999849e-05, 8.2846999999997e-05, 8.338899999999969e-05, 8.288899999999919e-05, 8.25979999999997e-05, 8.28330000000009e-05, 8.338899999999969e-05, 8.319399999999824e-05, 8.297300000000007e-05, 8.327799999999913e-05, 8.301299999999984e-05, 8.351399999999981e-05, 8.28049999999983e-05, 8.294400000000146e-05, 8.302699999999941e-05, 8.347199999999763e-05, 8.284700000000048e-05, 8.291600000000232e-05, 8.351399999999981e-05, 8.318100000000161e-05, 8.343000000000239e-05, 8.350000000000024e-05, 8.309700000000073e-05, 8.294400000000146e-05, 8.338899999999969e-05, 8.266699999999808e-05, 8.312499999999987e-05, 8.334700000000098e-05, 8.29309999999979e-05, 8.294500000000093e-05, 8.330600000000174e-05, 8.350000000000024e-05, 8.345799999999806e-05, 8.263799999999946e-05, 8.298600000000017e-05, 8.337500000000012e-05, 8.327699999999966e-05, 8.291600000000232e-05, 8.350000000000024e-05, 8.288899999999919e-05, 8.288899999999919e-05, 8.352799999999938e-05, 8.334700000000098e-05, 8.332000000000131e-05]</msg>
<status status="PASS" starttime="20201029 12:47:21.498" endtime="20201029 12:47:21.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.493" endtime="20201029 12:47:21.501"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:21.504" endtime="20201029 12:47:21.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.503" endtime="20201029 12:47:21.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.502" endtime="20201029 12:47:21.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.141" endtime="20201029 12:47:21.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.141" endtime="20201029 12:47:21.525"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.534" endtime="20201029 12:47:21.556"></status>
</kw>
<msg timestamp="20201029 12:47:21.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.532" endtime="20201029 12:47:21.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.557" endtime="20201029 12:47:21.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.560" endtime="20201029 12:47:21.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.530" endtime="20201029 12:47:21.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.527" endtime="20201029 12:47:21.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.569" endtime="20201029 12:47:21.854"></status>
</kw>
<msg timestamp="20201029 12:47:21.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025442472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025526222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.567" endtime="20201029 12:47:21.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025442472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025526222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.858" endtime="20201029 12:47:21.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.866" endtime="20201029 12:47:21.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.565" endtime="20201029 12:47:21.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.563" endtime="20201029 12:47:21.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:21.873" level="INFO">${RESULT} = [{'diff': 8.375000000000049e-05}, {'diff': 8.427800000000013e-05}, {'diff': 8.422200000000185e-05}, {'diff': 8.39859999999977e-05}, {'diff': 8.413899999999697e-05}, {'diff': 8.447199999999863e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:21.870" endtime="20201029 12:47:21.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:21.877" level="INFO">${ACCURACY} = {'diff': [8.375000000000049e-05, 8.427800000000013e-05, 8.422200000000185e-05, 8.39859999999977e-05, 8.413899999999697e-05, 8.447199999999863e-05, 8.433299999999894e-05, 8.420799999999881e-05, 8.41669...</msg>
<status status="PASS" starttime="20201029 12:47:21.874" endtime="20201029 12:47:21.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.882" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 12:47:21.881" endtime="20201029 12:47:21.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.884" level="INFO">VALUE: [8.375000000000049e-05, 8.427800000000013e-05, 8.422200000000185e-05, 8.39859999999977e-05, 8.413899999999697e-05, 8.447199999999863e-05, 8.433299999999894e-05, 8.420799999999881e-05, 8.416699999999958e-05, 8.438900000000069e-05, 8.419499999999872e-05, 8.386099999999758e-05, 8.39170000000028e-05, 8.36110000000008e-05, 8.451400000000081e-05, 8.381900000000234e-05, 8.422200000000185e-05, 8.419399999999924e-05, 8.391600000000332e-05, 8.363899999999994e-05, 8.445799999999906e-05, 8.363899999999994e-05, 8.390299999999976e-05, 8.394399999999899e-05, 8.408299999999869e-05, 8.456899999999962e-05, 8.388900000000019e-05, 8.388900000000019e-05, 8.359700000000123e-05, 8.43469999999985e-05, 8.436099999999808e-05, 8.39859999999977e-05, 8.426400000000056e-05, 8.413799999999749e-05, 8.384799999999748e-05, 8.44309999999994e-05, 8.358300000000166e-05, 8.399999999999727e-05, 8.436099999999808e-05, 8.399999999999727e-05, 8.409700000000173e-05, 8.399999999999727e-05, 8.416699999999958e-05, 8.401399999999684e-05, 8.388900000000019e-05, 8.426400000000056e-05, 8.411099999999783e-05, 8.401400000000031e-05, 8.359700000000123e-05, 8.41110000000013e-05]</msg>
<status status="PASS" starttime="20201029 12:47:21.883" endtime="20201029 12:47:21.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.878" endtime="20201029 12:47:21.886"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:21.890" endtime="20201029 12:47:21.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.888" endtime="20201029 12:47:21.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.887" endtime="20201029 12:47:21.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.526" endtime="20201029 12:47:21.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.525" endtime="20201029 12:47:21.911"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.919" endtime="20201029 12:47:21.938"></status>
</kw>
<msg timestamp="20201029 12:47:21.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.918" endtime="20201029 12:47:21.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.939" endtime="20201029 12:47:21.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.941" endtime="20201029 12:47:21.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.915" endtime="20201029 12:47:21.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.913" endtime="20201029 12:47:21.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.950" endtime="20201029 12:47:22.236"></status>
</kw>
<msg timestamp="20201029 12:47:22.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021872806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021957778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.949" endtime="20201029 12:47:22.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021872806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021957778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.240" endtime="20201029 12:47:22.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.249" endtime="20201029 12:47:22.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.946" endtime="20201029 12:47:22.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.945" endtime="20201029 12:47:22.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:22.255" level="INFO">${RESULT} = [{'diff': 8.497199999999913e-05}, {'diff': 8.525000000000199e-05}, {'diff': 8.499999999999827e-05}, {'diff': 8.512500000000187e-05}, {'diff': 8.487500000000162e-05}, {'diff': 8.51249999999984e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:22.252" endtime="20201029 12:47:22.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:22.260" level="INFO">${ACCURACY} = {'diff': [8.497199999999913e-05, 8.525000000000199e-05, 8.499999999999827e-05, 8.512500000000187e-05, 8.487500000000162e-05, 8.51249999999984e-05, 8.511099999999883e-05, 8.513900000000144e-05, 8.48889...</msg>
<status status="PASS" starttime="20201029 12:47:22.256" endtime="20201029 12:47:22.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.265" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 12:47:22.264" endtime="20201029 12:47:22.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.267" level="INFO">VALUE: [8.497199999999913e-05, 8.525000000000199e-05, 8.499999999999827e-05, 8.512500000000187e-05, 8.487500000000162e-05, 8.51249999999984e-05, 8.511099999999883e-05, 8.513900000000144e-05, 8.488899999999772e-05, 8.542999999999745e-05, 8.54859999999992e-05, 8.459699999999876e-05, 8.526400000000156e-05, 8.504200000000045e-05, 8.497199999999913e-05, 8.518100000000015e-05, 8.509699999999926e-05, 8.533399999999941e-05, 8.462500000000137e-05, 8.54310000000004e-05, 8.491700000000033e-05, 8.481999999999934e-05, 8.46660000000006e-05, 8.543000000000092e-05, 8.524999999999852e-05, 8.518000000000067e-05, 8.512500000000187e-05, 8.536099999999908e-05, 8.502800000000088e-05, 8.5153000000001e-05, 8.512500000000187e-05, 8.486099999999858e-05, 8.49309999999999e-05, 8.487500000000162e-05, 8.516700000000058e-05, 8.552800000000138e-05, 8.512500000000187e-05, 8.555600000000052e-05, 8.519499999999972e-05, 8.49309999999999e-05, 8.53050000000008e-05, 8.522200000000285e-05, 8.487500000000162e-05, 8.523599999999895e-05, 8.523599999999895e-05, 8.500000000000174e-05, 8.458299999999919e-05, 8.51110000000023e-05, 8.544400000000049e-05, 8.523599999999895e-05]</msg>
<status status="PASS" starttime="20201029 12:47:22.266" endtime="20201029 12:47:22.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.261" endtime="20201029 12:47:22.269"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:22.272" endtime="20201029 12:47:22.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.271" endtime="20201029 12:47:22.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.270" endtime="20201029 12:47:22.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.911" endtime="20201029 12:47:22.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.911" endtime="20201029 12:47:22.293"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.302" endtime="20201029 12:47:22.320"></status>
</kw>
<msg timestamp="20201029 12:47:22.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.300" endtime="20201029 12:47:22.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.321" endtime="20201029 12:47:22.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.323" endtime="20201029 12:47:22.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.297" endtime="20201029 12:47:22.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.295" endtime="20201029 12:47:22.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.333" endtime="20201029 12:47:22.622"></status>
</kw>
<msg timestamp="20201029 12:47:22.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021989056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022075472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.331" endtime="20201029 12:47:22.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021989056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022075472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.626" endtime="20201029 12:47:22.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.635" endtime="20201029 12:47:22.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.328" endtime="20201029 12:47:22.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.327" endtime="20201029 12:47:22.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:22.641" level="INFO">${RESULT} = [{'diff': 8.641599999999888e-05}, {'diff': 8.611099999999983e-05}, {'diff': 8.591699999999786e-05}, {'diff': 8.605600000000102e-05}, {'diff': 8.651399999999934e-05}, {'diff': 8.657000000000109e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:22.638" endtime="20201029 12:47:22.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:22.645" level="INFO">${ACCURACY} = {'diff': [8.641599999999888e-05, 8.611099999999983e-05, 8.591699999999786e-05, 8.605600000000102e-05, 8.651399999999934e-05, 8.657000000000109e-05, 8.622200000000038e-05, 8.605599999999755e-05, 8.5596...</msg>
<status status="PASS" starttime="20201029 12:47:22.642" endtime="20201029 12:47:22.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.650" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 12:47:22.649" endtime="20201029 12:47:22.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.652" level="INFO">VALUE: [8.641599999999888e-05, 8.611099999999983e-05, 8.591699999999786e-05, 8.605600000000102e-05, 8.651399999999934e-05, 8.657000000000109e-05, 8.622200000000038e-05, 8.605599999999755e-05, 8.559699999999976e-05, 8.64860000000002e-05, 8.609799999999973e-05, 8.608299999999722e-05, 8.62370000000029e-05, 8.61799999999982e-05, 8.594400000000099e-05, 8.61660000000021e-05, 8.622200000000038e-05, 8.624999999999952e-05, 8.555500000000105e-05, 8.58050000000013e-05, 8.599999999999927e-05, 8.590299999999829e-05, 8.561099999999933e-05, 8.595900000000004e-05, 8.655600000000152e-05, 8.579199999999773e-05, 8.637499999999965e-05, 8.619500000000072e-05, 8.608400000000016e-05, 8.630499999999833e-05, 8.590299999999829e-05, 8.618000000000167e-05, 8.604200000000145e-05, 8.661100000000033e-05, 8.5847e-05, 8.62920000000017e-05, 8.599999999999927e-05, 8.551399999999834e-05, 8.586099999999958e-05, 8.631900000000137e-05, 8.604199999999798e-05, 8.590300000000176e-05, 8.583300000000044e-05, 8.608400000000016e-05, 8.633300000000094e-05, 8.643099999999793e-05, 8.59310000000009e-05, 8.561099999999933e-05, 8.591700000000133e-05, 8.579199999999773e-05]</msg>
<status status="PASS" starttime="20201029 12:47:22.651" endtime="20201029 12:47:22.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.646" endtime="20201029 12:47:22.654"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:22.657" endtime="20201029 12:47:22.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.656" endtime="20201029 12:47:22.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.655" endtime="20201029 12:47:22.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.294" endtime="20201029 12:47:22.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.293" endtime="20201029 12:47:22.678"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.687" endtime="20201029 12:47:22.706"></status>
</kw>
<msg timestamp="20201029 12:47:22.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.685" endtime="20201029 12:47:22.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.707" endtime="20201029 12:47:22.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.710" endtime="20201029 12:47:22.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.683" endtime="20201029 12:47:22.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.681" endtime="20201029 12:47:22.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.719" endtime="20201029 12:47:23.007"></status>
</kw>
<msg timestamp="20201029 12:47:23.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023162542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023249653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.717" endtime="20201029 12:47:23.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023162542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023249653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.011" endtime="20201029 12:47:23.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.019" endtime="20201029 12:47:23.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.715" endtime="20201029 12:47:23.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.713" endtime="20201029 12:47:23.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:23.026" level="INFO">${RESULT} = [{'diff': 8.711099999999736e-05}, {'diff': 8.724999999999705e-05}, {'diff': 8.738900000000022e-05}, {'diff': 8.66249999999999e-05}, {'diff': 8.745899999999807e-05}, {'diff': 8.741599999999988e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:23.023" endtime="20201029 12:47:23.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:23.030" level="INFO">${ACCURACY} = {'diff': [8.711099999999736e-05, 8.724999999999705e-05, 8.738900000000022e-05, 8.66249999999999e-05, 8.745899999999807e-05, 8.741599999999988e-05, 8.694399999999852e-05, 8.730499999999933e-05, 8.68049...</msg>
<status status="PASS" starttime="20201029 12:47:23.027" endtime="20201029 12:47:23.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.034" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 12:47:23.033" endtime="20201029 12:47:23.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.037" level="INFO">VALUE: [8.711099999999736e-05, 8.724999999999705e-05, 8.738900000000022e-05, 8.66249999999999e-05, 8.745899999999807e-05, 8.741599999999988e-05, 8.694399999999852e-05, 8.730499999999933e-05, 8.680499999999883e-05, 8.731999999999837e-05, 8.718000000000267e-05, 8.71799999999992e-05, 8.697200000000113e-05, 8.701399999999984e-05, 8.661099999999686e-05, 8.71799999999992e-05, 8.718100000000215e-05, 8.716700000000258e-05, 8.66249999999999e-05, 8.701300000000037e-05, 8.706999999999812e-05, 8.690299999999929e-05, 8.727799999999966e-05, 8.691700000000233e-05, 8.691599999999938e-05, 8.704199999999898e-05, 8.679099999999926e-05, 8.709700000000126e-05, 8.729099999999976e-05, 8.733299999999847e-05, 8.693000000000242e-05, 8.73050000000028e-05, 8.71669999999991e-05, 8.659700000000076e-05, 8.723599999999748e-05, 8.709699999999779e-05, 8.72920000000027e-05, 8.681999999999787e-05, 8.67920000000022e-05, 8.659700000000076e-05, 8.688899999999972e-05, 8.744500000000197e-05, 8.741700000000283e-05, 8.705500000000255e-05, 8.708400000000116e-05, 8.729099999999976e-05, 8.706899999999865e-05, 8.750000000000077e-05, 8.744399999999902e-05, 8.680499999999883e-05]</msg>
<status status="PASS" starttime="20201029 12:47:23.035" endtime="20201029 12:47:23.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.031" endtime="20201029 12:47:23.039"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:23.043" endtime="20201029 12:47:23.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.041" endtime="20201029 12:47:23.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.040" endtime="20201029 12:47:23.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.679" endtime="20201029 12:47:23.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.679" endtime="20201029 12:47:23.063"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.072" endtime="20201029 12:47:23.090"></status>
</kw>
<msg timestamp="20201029 12:47:23.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.070" endtime="20201029 12:47:23.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.091" endtime="20201029 12:47:23.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.094" endtime="20201029 12:47:23.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.068" endtime="20201029 12:47:23.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.066" endtime="20201029 12:47:23.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.103" endtime="20201029 12:47:23.388"></status>
</kw>
<msg timestamp="20201029 12:47:23.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022183222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022271236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.101" endtime="20201029 12:47:23.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022183222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022271236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.393" endtime="20201029 12:47:23.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.402" endtime="20201029 12:47:23.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.099" endtime="20201029 12:47:23.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.097" endtime="20201029 12:47:23.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:23.408" level="INFO">${RESULT} = [{'diff': 8.801400000000084e-05}, {'diff': 8.837500000000165e-05}, {'diff': 8.840300000000079e-05}, {'diff': 8.838900000000122e-05}, {'diff': 8.81389999999975e-05}, {'diff': 8.831999999999937e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:23.405" endtime="20201029 12:47:23.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:23.413" level="INFO">${ACCURACY} = {'diff': [8.801400000000084e-05, 8.837500000000165e-05, 8.840300000000079e-05, 8.838900000000122e-05, 8.81389999999975e-05, 8.831999999999937e-05, 8.852800000000091e-05, 8.843099999999993e-05, 8.76660...</msg>
<status status="PASS" starttime="20201029 12:47:23.409" endtime="20201029 12:47:23.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.418" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 12:47:23.417" endtime="20201029 12:47:23.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.420" level="INFO">VALUE: [8.801400000000084e-05, 8.837500000000165e-05, 8.840300000000079e-05, 8.838900000000122e-05, 8.81389999999975e-05, 8.831999999999937e-05, 8.852800000000091e-05, 8.843099999999993e-05, 8.766600000000013e-05, 8.840300000000079e-05, 8.822200000000238e-05, 8.792999999999995e-05, 8.84999999999983e-05, 8.784699999999854e-05, 8.827800000000066e-05, 8.827800000000066e-05, 8.838899999999775e-05, 8.829199999999676e-05, 8.776400000000059e-05, 8.786100000000158e-05, 8.806999999999912e-05, 8.795800000000256e-05, 8.797200000000213e-05, 8.836099999999861e-05, 8.808399999999869e-05, 8.840200000000131e-05, 8.765300000000004e-05, 8.781999999999887e-05, 8.855600000000005e-05, 8.836099999999861e-05, 8.792999999999995e-05, 8.779100000000026e-05, 8.816600000000063e-05, 8.84860000000022e-05, 8.836100000000208e-05, 8.830500000000033e-05, 8.812499999999793e-05, 8.823599999999848e-05, 8.833299999999947e-05, 8.83059999999998e-05, 8.776400000000059e-05, 8.786099999999811e-05, 8.827800000000066e-05, 8.843099999999993e-05, 8.795900000000204e-05, 8.836100000000208e-05, 8.856900000000015e-05, 8.788799999999777e-05, 8.791699999999986e-05, 8.787500000000115e-05]</msg>
<status status="PASS" starttime="20201029 12:47:23.419" endtime="20201029 12:47:23.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.414" endtime="20201029 12:47:23.422"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:23.425" endtime="20201029 12:47:23.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.424" endtime="20201029 12:47:23.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.423" endtime="20201029 12:47:23.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.064" endtime="20201029 12:47:23.446"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.064" endtime="20201029 12:47:23.446"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.455" endtime="20201029 12:47:23.473"></status>
</kw>
<msg timestamp="20201029 12:47:23.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.453" endtime="20201029 12:47:23.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.475" endtime="20201029 12:47:23.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.477" endtime="20201029 12:47:23.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.450" endtime="20201029 12:47:23.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.448" endtime="20201029 12:47:23.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.486" endtime="20201029 12:47:23.773"></status>
</kw>
<msg timestamp="20201029 12:47:23.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021925222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022014819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.485" endtime="20201029 12:47:23.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021925222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022014819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.777" endtime="20201029 12:47:23.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.786" endtime="20201029 12:47:23.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.482" endtime="20201029 12:47:23.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.480" endtime="20201029 12:47:23.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:23.792" level="INFO">${RESULT} = [{'diff': 8.959700000000029e-05}, {'diff': 8.905600000000055e-05}, {'diff': 8.91800000000012e-05}, {'diff': 8.897199999999966e-05}, {'diff': 8.879100000000126e-05}, {'diff': 8.88190000000004e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:23.789" endtime="20201029 12:47:23.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:23.796" level="INFO">${ACCURACY} = {'diff': [8.959700000000029e-05, 8.905600000000055e-05, 8.91800000000012e-05, 8.897199999999966e-05, 8.879100000000126e-05, 8.88190000000004e-05, 8.933300000000047e-05, 8.924999999999905e-05, 8.934700...</msg>
<status status="PASS" starttime="20201029 12:47:23.793" endtime="20201029 12:47:23.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.801" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 12:47:23.800" endtime="20201029 12:47:23.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.803" level="INFO">VALUE: [8.959700000000029e-05, 8.905600000000055e-05, 8.91800000000012e-05, 8.897199999999966e-05, 8.879100000000126e-05, 8.88190000000004e-05, 8.933300000000047e-05, 8.924999999999905e-05, 8.934700000000004e-05, 8.945800000000059e-05, 8.901400000000184e-05, 8.891699999999739e-05, 8.924999999999905e-05, 8.884699999999954e-05, 8.89999999999988e-05, 8.94860000000032e-05, 8.94999999999993e-05, 8.904200000000098e-05, 8.918100000000068e-05, 8.93190000000009e-05, 8.926399999999862e-05, 8.945800000000059e-05, 8.938899999999875e-05, 8.865300000000104e-05, 8.936099999999961e-05, 8.945800000000059e-05, 8.934700000000004e-05, 8.88190000000004e-05, 8.88190000000004e-05, 8.891699999999739e-05, 8.922199999999991e-05, 8.858299999999972e-05, 8.879200000000073e-05, 8.887500000000215e-05, 8.893099999999696e-05, 8.920899999999982e-05, 8.948599999999973e-05, 8.905500000000108e-05, 8.91389999999985e-05, 8.86250000000019e-05, 8.906900000000065e-05, 8.897199999999966e-05, 8.877700000000169e-05, 8.941699999999789e-05, 8.883299999999997e-05, 8.926399999999862e-05, 8.890300000000129e-05, 8.941700000000136e-05, 8.861099999999886e-05, 8.936099999999961e-05]</msg>
<status status="PASS" starttime="20201029 12:47:23.802" endtime="20201029 12:47:23.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.797" endtime="20201029 12:47:23.805"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:23.808" endtime="20201029 12:47:23.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.807" endtime="20201029 12:47:23.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.806" endtime="20201029 12:47:23.829"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.447" endtime="20201029 12:47:23.829"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.446" endtime="20201029 12:47:23.829"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.838" endtime="20201029 12:47:23.857"></status>
</kw>
<msg timestamp="20201029 12:47:23.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.836" endtime="20201029 12:47:23.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.859" endtime="20201029 12:47:23.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.861" endtime="20201029 12:47:23.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.834" endtime="20201029 12:47:23.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.831" endtime="20201029 12:47:23.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.870" endtime="20201029 12:47:24.156"></status>
</kw>
<msg timestamp="20201029 12:47:24.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022890819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022980583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.869" endtime="20201029 12:47:24.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022890819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022980583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.160" endtime="20201029 12:47:24.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.169" endtime="20201029 12:47:24.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.866" endtime="20201029 12:47:24.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.864" endtime="20201029 12:47:24.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:24.175" level="INFO">${RESULT} = [{'diff': 8.976399999999912e-05}, {'diff': 9.052699999999997e-05}, {'diff': 9.054099999999954e-05}, {'diff': 8.993099999999796e-05}, {'diff': 9.041699999999889e-05}, {'diff': 9.01670000000021e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:24.172" endtime="20201029 12:47:24.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:24.180" level="INFO">${ACCURACY} = {'diff': [8.976399999999912e-05, 9.052699999999997e-05, 9.054099999999954e-05, 8.993099999999796e-05, 9.041699999999889e-05, 9.01670000000021e-05, 9.022200000000091e-05, 8.986100000000011e-05, 8.99860...</msg>
<status status="PASS" starttime="20201029 12:47:24.176" endtime="20201029 12:47:24.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.185" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 12:47:24.184" endtime="20201029 12:47:24.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.188" level="INFO">VALUE: [8.976399999999912e-05, 9.052699999999997e-05, 9.054099999999954e-05, 8.993099999999796e-05, 9.041699999999889e-05, 9.01670000000021e-05, 9.022200000000091e-05, 8.986100000000011e-05, 8.998600000000023e-05, 8.9638999999999e-05, 8.959699999999682e-05, 9.062500000000043e-05, 8.962499999999943e-05, 8.99999999999998e-05, 8.987499999999968e-05, 8.991700000000186e-05, 9.044499999999803e-05, 9.05000000000003e-05, 9.037500000000018e-05, 9.002699999999947e-05, 9.026399999999962e-05, 9.043100000000193e-05, 8.961099999999986e-05, 8.992999999999848e-05, 9.037500000000018e-05, 8.983300000000097e-05, 9.03190000000019e-05, 8.997200000000066e-05, 8.977799999999869e-05, 9.033400000000094e-05, 9.008400000000069e-05, 8.99999999999998e-05, 9.004199999999851e-05, 9.043100000000193e-05, 8.983400000000044e-05, 8.961099999999986e-05, 9.025000000000005e-05, 8.9638999999999e-05, 9.052699999999997e-05, 8.977800000000216e-05, 8.983300000000097e-05, 9.051399999999987e-05, 9.01670000000021e-05, 9.038899999999975e-05, 8.962499999999943e-05, 9.037500000000018e-05, 9.041700000000236e-05, 9.036100000000061e-05, 9.020900000000082e-05, 8.995900000000057e-05]</msg>
<status status="PASS" starttime="20201029 12:47:24.187" endtime="20201029 12:47:24.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.181" endtime="20201029 12:47:24.191"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:24.194" endtime="20201029 12:47:24.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.193" endtime="20201029 12:47:24.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.192" endtime="20201029 12:47:24.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.830" endtime="20201029 12:47:24.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.829" endtime="20201029 12:47:24.215"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.224" endtime="20201029 12:47:24.242"></status>
</kw>
<msg timestamp="20201029 12:47:24.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.222" endtime="20201029 12:47:24.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.244" endtime="20201029 12:47:24.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.246" endtime="20201029 12:47:24.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.219" endtime="20201029 12:47:24.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.217" endtime="20201029 12:47:24.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.255" endtime="20201029 12:47:24.542"></status>
</kw>
<msg timestamp="20201029 12:47:24.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021993528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022084819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.254" endtime="20201029 12:47:24.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021993528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022084819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.546" endtime="20201029 12:47:24.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.555" endtime="20201029 12:47:24.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.251" endtime="20201029 12:47:24.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.250" endtime="20201029 12:47:24.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:24.562" level="INFO">${RESULT} = [{'diff': 9.129100000000029e-05}, {'diff': 9.1026999999997e-05}, {'diff': 9.125000000000105e-05}, {'diff': 9.111099999999789e-05}, {'diff': 9.092999999999948e-05}, {'diff': 9.090299999999982e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:24.558" endtime="20201029 12:47:24.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:24.567" level="INFO">${ACCURACY} = {'diff': [9.129100000000029e-05, 9.1026999999997e-05, 9.125000000000105e-05, 9.111099999999789e-05, 9.092999999999948e-05, 9.090299999999982e-05, 9.077799999999969e-05, 9.155599999999958e-05, 9.133299...</msg>
<status status="PASS" starttime="20201029 12:47:24.563" endtime="20201029 12:47:24.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.571" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 12:47:24.570" endtime="20201029 12:47:24.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.574" level="INFO">VALUE: [9.129100000000029e-05, 9.1026999999997e-05, 9.125000000000105e-05, 9.111099999999789e-05, 9.092999999999948e-05, 9.090299999999982e-05, 9.077799999999969e-05, 9.155599999999958e-05, 9.1332999999999e-05, 9.145799999999912e-05, 9.088900000000025e-05, 9.058299999999825e-05, 9.115300000000007e-05, 9.0639e-05, 9.088900000000025e-05, 9.102799999999994e-05, 9.120899999999835e-05, 9.065299999999957e-05, 9.080500000000283e-05, 9.144400000000302e-05, 9.091599999999991e-05, 9.081899999999893e-05, 9.118100000000268e-05, 9.081899999999893e-05, 9.152800000000044e-05, 9.08329999999985e-05, 9.084699999999807e-05, 9.149999999999783e-05, 9.082000000000187e-05, 9.149999999999783e-05, 9.118100000000268e-05, 9.059700000000129e-05, 9.149999999999783e-05, 9.082000000000187e-05, 9.061100000000086e-05, 9.087500000000068e-05, 9.058400000000119e-05, 9.11520000000006e-05, 9.088900000000025e-05, 9.131899999999943e-05, 9.127800000000019e-05, 9.130499999999986e-05, 9.105599999999908e-05, 9.122200000000191e-05, 9.11529999999966e-05, 9.129199999999976e-05, 9.119500000000225e-05, 9.08199999999984e-05, 9.123599999999801e-05, 9.154100000000054e-05]</msg>
<status status="PASS" starttime="20201029 12:47:24.573" endtime="20201029 12:47:24.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.568" endtime="20201029 12:47:24.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:24.579" endtime="20201029 12:47:24.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.578" endtime="20201029 12:47:24.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.576" endtime="20201029 12:47:24.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.216" endtime="20201029 12:47:24.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.215" endtime="20201029 12:47:24.600"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.609" endtime="20201029 12:47:24.629"></status>
</kw>
<msg timestamp="20201029 12:47:24.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.607" endtime="20201029 12:47:24.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.631" endtime="20201029 12:47:24.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.634" endtime="20201029 12:47:24.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.605" endtime="20201029 12:47:24.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.602" endtime="20201029 12:47:24.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.645" endtime="20201029 12:47:24.933"></status>
</kw>
<msg timestamp="20201029 12:47:24.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022947278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023039458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.644" endtime="20201029 12:47:24.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022947278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023039458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.938" endtime="20201029 12:47:24.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.946" endtime="20201029 12:47:24.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.640" endtime="20201029 12:47:24.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.638" endtime="20201029 12:47:24.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:24.953" level="INFO">${RESULT} = [{'diff': 9.217999999999726e-05}, {'diff': 9.180500000000036e-05}, {'diff': 9.244400000000055e-05}, {'diff': 9.158300000000272e-05}, {'diff': 9.1639000000001e-05}, {'diff': 9.223600000000248e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:24.950" endtime="20201029 12:47:24.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:24.957" level="INFO">${ACCURACY} = {'diff': [9.217999999999726e-05, 9.180500000000036e-05, 9.244400000000055e-05, 9.158300000000272e-05, 9.1639000000001e-05, 9.223600000000248e-05, 9.194400000000005e-05, 9.211100000000236e-05, 9.191700...</msg>
<status status="PASS" starttime="20201029 12:47:24.954" endtime="20201029 12:47:24.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.962" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 12:47:24.961" endtime="20201029 12:47:24.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.965" level="INFO">VALUE: [9.217999999999726e-05, 9.180500000000036e-05, 9.244400000000055e-05, 9.158300000000272e-05, 9.1639000000001e-05, 9.223600000000248e-05, 9.194400000000005e-05, 9.211100000000236e-05, 9.191700000000039e-05, 9.21390000000015e-05, 9.236099999999914e-05, 9.212499999999846e-05, 9.251400000000187e-05, 9.212500000000193e-05, 9.218100000000021e-05, 9.179200000000026e-05, 9.230600000000033e-05, 9.18329999999995e-05, 9.204100000000104e-05, 9.206900000000018e-05, 9.205499999999714e-05, 9.236099999999914e-05, 9.206900000000018e-05, 9.21940000000003e-05, 9.209699999999932e-05, 9.193099999999996e-05, 9.234699999999957e-05, 9.158299999999925e-05, 9.186099999999864e-05, 9.162500000000143e-05, 9.220900000000282e-05, 9.23199999999999e-05, 9.241699999999742e-05, 9.248599999999926e-05, 9.204099999999757e-05, 9.24719999999997e-05, 9.208299999999975e-05, 9.21659999999977e-05, 9.258300000000025e-05, 9.240300000000132e-05, 9.177800000000069e-05, 9.163899999999753e-05, 9.198599999999876e-05, 9.193099999999996e-05, 9.208299999999975e-05, 9.202800000000094e-05, 9.21390000000015e-05, 9.208399999999922e-05, 9.23199999999999e-05, 9.227800000000119e-05]</msg>
<status status="PASS" starttime="20201029 12:47:24.963" endtime="20201029 12:47:24.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.958" endtime="20201029 12:47:24.966"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:24.970" endtime="20201029 12:47:24.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.968" endtime="20201029 12:47:24.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.967" endtime="20201029 12:47:24.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.601" endtime="20201029 12:47:24.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.600" endtime="20201029 12:47:24.991"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.000" endtime="20201029 12:47:25.022"></status>
</kw>
<msg timestamp="20201029 12:47:25.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.998" endtime="20201029 12:47:25.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.024" endtime="20201029 12:47:25.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.026" endtime="20201029 12:47:25.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.995" endtime="20201029 12:47:25.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.993" endtime="20201029 12:47:25.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.036" endtime="20201029 12:47:25.324"></status>
</kw>
<msg timestamp="20201029 12:47:25.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025630361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025723514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.034" endtime="20201029 12:47:25.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025630361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025723514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.328" endtime="20201029 12:47:25.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.337" endtime="20201029 12:47:25.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.031" endtime="20201029 12:47:25.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.030" endtime="20201029 12:47:25.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:25.344" level="INFO">${RESULT} = [{'diff': 9.31529999999986e-05}, {'diff': 9.293000000000148e-05}, {'diff': 9.311199999999936e-05}, {'diff': 9.322299999999992e-05}, {'diff': 9.323600000000001e-05}, {'diff': 9.31529999999986e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:25.340" endtime="20201029 12:47:25.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:25.348" level="INFO">${ACCURACY} = {'diff': [9.31529999999986e-05, 9.293000000000148e-05, 9.311199999999936e-05, 9.322299999999992e-05, 9.323600000000001e-05, 9.31529999999986e-05, 9.35139999999994e-05, 9.320800000000087e-05, 9.2639000...</msg>
<status status="PASS" starttime="20201029 12:47:25.345" endtime="20201029 12:47:25.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.353" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 12:47:25.352" endtime="20201029 12:47:25.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.355" level="INFO">VALUE: [9.31529999999986e-05, 9.293000000000148e-05, 9.311199999999936e-05, 9.322299999999992e-05, 9.323600000000001e-05, 9.31529999999986e-05, 9.35139999999994e-05, 9.320800000000087e-05, 9.2639000000002e-05, 9.341599999999894e-05, 9.336199999999961e-05, 9.281900000000093e-05, 9.294400000000105e-05, 9.34859999999968e-05, 9.318100000000121e-05, 9.3333000000001e-05, 9.31529999999986e-05, 9.338899999999928e-05, 9.287500000000268e-05, 9.261099999999939e-05, 9.266700000000114e-05, 9.319500000000078e-05, 9.312499999999946e-05, 9.31940000000013e-05, 9.345799999999765e-05, 9.323600000000001e-05, 9.322200000000044e-05, 9.349999999999983e-05, 9.309700000000032e-05, 9.3333000000001e-05, 9.31940000000013e-05, 9.316700000000164e-05, 9.334700000000057e-05, 9.286099999999964e-05, 9.352799999999897e-05, 9.357000000000115e-05, 9.279200000000126e-05, 9.311099999999989e-05, 9.306900000000118e-05, 9.273599999999951e-05, 9.286099999999964e-05, 9.355499999999864e-05, 9.337499999999971e-05, 9.347199999999722e-05, 9.349999999999983e-05, 9.340299999999885e-05, 9.311099999999989e-05, 9.284700000000007e-05, 9.323600000000001e-05, 9.309700000000032e-05]</msg>
<status status="PASS" starttime="20201029 12:47:25.354" endtime="20201029 12:47:25.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.349" endtime="20201029 12:47:25.357"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:25.361" endtime="20201029 12:47:25.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.360" endtime="20201029 12:47:25.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.358" endtime="20201029 12:47:25.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.992" endtime="20201029 12:47:25.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.991" endtime="20201029 12:47:25.382"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.391" endtime="20201029 12:47:25.410"></status>
</kw>
<msg timestamp="20201029 12:47:25.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.390" endtime="20201029 12:47:25.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.411" endtime="20201029 12:47:25.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.414" endtime="20201029 12:47:25.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.387" endtime="20201029 12:47:25.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.385" endtime="20201029 12:47:25.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.424" endtime="20201029 12:47:25.710"></status>
</kw>
<msg timestamp="20201029 12:47:25.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022489069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022583222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.422" endtime="20201029 12:47:25.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022489069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022583222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.715" endtime="20201029 12:47:25.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.723" endtime="20201029 12:47:25.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.420" endtime="20201029 12:47:25.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.418" endtime="20201029 12:47:25.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:25.730" level="INFO">${RESULT} = [{'diff': 9.41529999999996e-05}, {'diff': 9.430499999999939e-05}, {'diff': 9.416699999999917e-05}, {'diff': 9.388899999999978e-05}, {'diff': 9.443100000000246e-05}, {'diff': 9.408300000000175e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:25.727" endtime="20201029 12:47:25.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:25.735" level="INFO">${ACCURACY} = {'diff': [9.41529999999996e-05, 9.430499999999939e-05, 9.416699999999917e-05, 9.388899999999978e-05, 9.443100000000246e-05, 9.408300000000175e-05, 9.41529999999996e-05, 9.366700000000214e-05, 9.387500...</msg>
<status status="PASS" starttime="20201029 12:47:25.731" endtime="20201029 12:47:25.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.740" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 12:47:25.739" endtime="20201029 12:47:25.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.742" level="INFO">VALUE: [9.41529999999996e-05, 9.430499999999939e-05, 9.416699999999917e-05, 9.388899999999978e-05, 9.443100000000246e-05, 9.408300000000175e-05, 9.41529999999996e-05, 9.366700000000214e-05, 9.387500000000021e-05, 9.418099999999874e-05, 9.419499999999831e-05, 9.359800000000029e-05, 9.431900000000243e-05, 9.431899999999896e-05, 9.408300000000175e-05, 9.386100000000064e-05, 9.394399999999858e-05, 9.363899999999953e-05, 9.430500000000286e-05, 9.441699999999942e-05, 9.393100000000196e-05, 9.391699999999892e-05, 9.429199999999929e-05, 9.416699999999917e-05, 9.359700000000082e-05, 9.412500000000046e-05, 9.363899999999953e-05, 9.436099999999767e-05, 9.412500000000046e-05, 9.383299999999803e-05, 9.383299999999803e-05, 9.434700000000157e-05, 9.454100000000007e-05, 9.430500000000286e-05, 9.405500000000261e-05, 9.40139999999999e-05, 9.379199999999879e-05, 9.41529999999996e-05, 9.395799999999815e-05, 9.384700000000107e-05, 9.404199999999904e-05, 9.391699999999892e-05, 9.405600000000208e-05, 9.393100000000196e-05, 9.436100000000114e-05, 9.367999999999876e-05, 9.394499999999806e-05, 9.387500000000021e-05, 9.409699999999785e-05, 9.408300000000175e-05]</msg>
<status status="PASS" starttime="20201029 12:47:25.741" endtime="20201029 12:47:25.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.736" endtime="20201029 12:47:25.768"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:25.772" endtime="20201029 12:47:25.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.771" endtime="20201029 12:47:25.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.769" endtime="20201029 12:47:25.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.383" endtime="20201029 12:47:25.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.382" endtime="20201029 12:47:25.793"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.802" endtime="20201029 12:47:25.820"></status>
</kw>
<msg timestamp="20201029 12:47:25.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.800" endtime="20201029 12:47:25.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.822" endtime="20201029 12:47:25.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.824" endtime="20201029 12:47:25.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.798" endtime="20201029 12:47:25.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.795" endtime="20201029 12:47:25.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.834" endtime="20201029 12:47:26.121"></status>
</kw>
<msg timestamp="20201029 12:47:26.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022437889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022532861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.832" endtime="20201029 12:47:26.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022437889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022532861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.126" endtime="20201029 12:47:26.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.134" endtime="20201029 12:47:26.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.830" endtime="20201029 12:47:26.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.828" endtime="20201029 12:47:26.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:26.141" level="INFO">${RESULT} = [{'diff': 9.49720000000022e-05}, {'diff': 9.554200000000054e-05}, {'diff': 9.51660000000007e-05}, {'diff': 9.513899999999756e-05}, {'diff': 9.502800000000047e-05}, {'diff': 9.498600000000176e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:26.138" endtime="20201029 12:47:26.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:26.146" level="INFO">${ACCURACY} = {'diff': [9.49720000000022e-05, 9.554200000000054e-05, 9.51660000000007e-05, 9.513899999999756e-05, 9.502800000000047e-05, 9.498600000000176e-05, 9.494500000000253e-05, 9.526400000000115e-05, 9.497199...</msg>
<status status="PASS" starttime="20201029 12:47:26.142" endtime="20201029 12:47:26.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.150" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 12:47:26.149" endtime="20201029 12:47:26.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.153" level="INFO">VALUE: [9.49720000000022e-05, 9.554200000000054e-05, 9.51660000000007e-05, 9.513899999999756e-05, 9.502800000000047e-05, 9.498600000000176e-05, 9.494500000000253e-05, 9.526400000000115e-05, 9.497199999999872e-05, 9.531899999999996e-05, 9.529100000000082e-05, 9.500000000000133e-05, 9.499999999999786e-05, 9.481899999999946e-05, 9.527800000000072e-05, 9.484700000000207e-05, 9.552800000000097e-05, 9.456900000000268e-05, 9.550000000000183e-05, 9.538899999999781e-05, 9.530599999999986e-05, 9.543099999999999e-05, 9.48339999999985e-05, 9.549999999999836e-05, 9.516700000000017e-05, 9.463900000000053e-05, 9.515200000000112e-05, 9.54019999999979e-05, 9.48880000000013e-05, 9.491600000000044e-05, 9.519399999999983e-05, 9.455499999999964e-05, 9.490300000000035e-05, 9.466699999999967e-05, 9.543000000000051e-05, 9.557000000000315e-05, 9.480599999999936e-05, 9.493099999999949e-05, 9.459699999999835e-05, 9.520899999999888e-05, 9.508400000000222e-05, 9.534800000000204e-05, 9.524999999999811e-05, 9.458399999999825e-05, 9.472299999999795e-05, 9.518000000000026e-05, 9.555500000000064e-05, 9.511100000000189e-05, 9.54019999999979e-05, 9.481899999999946e-05]</msg>
<status status="PASS" starttime="20201029 12:47:26.151" endtime="20201029 12:47:26.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.146" endtime="20201029 12:47:26.154"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:26.158" endtime="20201029 12:47:26.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.156" endtime="20201029 12:47:26.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.155" endtime="20201029 12:47:26.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.794" endtime="20201029 12:47:26.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.793" endtime="20201029 12:47:26.179"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.188" endtime="20201029 12:47:26.208"></status>
</kw>
<msg timestamp="20201029 12:47:26.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.186" endtime="20201029 12:47:26.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.209" endtime="20201029 12:47:26.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.212" endtime="20201029 12:47:26.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.183" endtime="20201029 12:47:26.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.181" endtime="20201029 12:47:26.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.221" endtime="20201029 12:47:26.508"></status>
</kw>
<msg timestamp="20201029 12:47:26.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023342889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023439139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.220" endtime="20201029 12:47:26.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023342889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023439139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.512" endtime="20201029 12:47:26.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.521" endtime="20201029 12:47:26.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.217" endtime="20201029 12:47:26.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.215" endtime="20201029 12:47:26.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:26.528" level="INFO">${RESULT} = [{'diff': 9.625000000000258e-05}, {'diff': 9.562500000000196e-05}, {'diff': 9.565299999999763e-05}, {'diff': 9.604200000000104e-05}, {'diff': 9.652699999999903e-05}, {'diff': 9.654199999999807e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:26.524" endtime="20201029 12:47:26.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:26.532" level="INFO">${ACCURACY} = {'diff': [9.625000000000258e-05, 9.562500000000196e-05, 9.565299999999763e-05, 9.604200000000104e-05, 9.652699999999903e-05, 9.654199999999807e-05, 9.606900000000071e-05, 9.623599999999954e-05, 9.6250...</msg>
<status status="PASS" starttime="20201029 12:47:26.529" endtime="20201029 12:47:26.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.537" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 12:47:26.536" endtime="20201029 12:47:26.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.539" level="INFO">VALUE: [9.625000000000258e-05, 9.562500000000196e-05, 9.565299999999763e-05, 9.604200000000104e-05, 9.652699999999903e-05, 9.654199999999807e-05, 9.606900000000071e-05, 9.623599999999954e-05, 9.625000000000258e-05, 9.626400000000215e-05, 9.633300000000053e-05, 9.613900000000203e-05, 9.562500000000196e-05, 9.622199999999997e-05, 9.587499999999874e-05, 9.640299999999838e-05, 9.597199999999972e-05, 9.64859999999998e-05, 9.558399999999925e-05, 9.563899999999806e-05, 9.622300000000292e-05, 9.584799999999907e-05, 9.605500000000114e-05, 9.644500000000056e-05, 9.644400000000108e-05, 9.626400000000215e-05, 9.648600000000326e-05, 9.626399999999868e-05, 9.575000000000208e-05, 9.597199999999972e-05, 9.590300000000135e-05, 9.604199999999757e-05, 9.577800000000122e-05, 9.645800000000065e-05, 9.590300000000135e-05, 9.56530000000011e-05, 9.637499999999924e-05, 9.581999999999993e-05, 9.609699999999985e-05, 9.648699999999927e-05, 9.644400000000108e-05, 9.6027000000002e-05, 9.595800000000015e-05, 9.630500000000139e-05, 9.629099999999835e-05, 9.588899999999831e-05, 9.65140000000024e-05, 9.655599999999764e-05, 9.618100000000074e-05, 9.604199999999757e-05]</msg>
<status status="PASS" starttime="20201029 12:47:26.538" endtime="20201029 12:47:26.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.533" endtime="20201029 12:47:26.542"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:26.545" endtime="20201029 12:47:26.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.544" endtime="20201029 12:47:26.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.543" endtime="20201029 12:47:26.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.180" endtime="20201029 12:47:26.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.179" endtime="20201029 12:47:26.566"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.575" endtime="20201029 12:47:26.594"></status>
</kw>
<msg timestamp="20201029 12:47:26.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.574" endtime="20201029 12:47:26.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.596" endtime="20201029 12:47:26.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.599" endtime="20201029 12:47:26.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.571" endtime="20201029 12:47:26.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.569" endtime="20201029 12:47:26.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.608" endtime="20201029 12:47:26.894"></status>
</kw>
<msg timestamp="20201029 12:47:26.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022389347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022486014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.606" endtime="20201029 12:47:26.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022389347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022486014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.898" endtime="20201029 12:47:26.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.907" endtime="20201029 12:47:26.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.604" endtime="20201029 12:47:26.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.602" endtime="20201029 12:47:26.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:26.914" level="INFO">${RESULT} = [{'diff': 9.66669999999982e-05}, {'diff': 9.722200000000097e-05}, {'diff': 9.738899999999981e-05}, {'diff': 9.691699999999845e-05}, {'diff': 9.693000000000201e-05}, {'diff': 9.723700000000002e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:26.910" endtime="20201029 12:47:26.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:26.919" level="INFO">${ACCURACY} = {'diff': [9.66669999999982e-05, 9.722200000000097e-05, 9.738899999999981e-05, 9.691699999999845e-05, 9.693000000000201e-05, 9.723700000000002e-05, 9.726300000000021e-05, 9.742999999999905e-05, 9.73750...</msg>
<status status="PASS" starttime="20201029 12:47:26.915" endtime="20201029 12:47:26.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.924" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 12:47:26.923" endtime="20201029 12:47:26.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.926" level="INFO">VALUE: [9.66669999999982e-05, 9.722200000000097e-05, 9.738899999999981e-05, 9.691699999999845e-05, 9.693000000000201e-05, 9.723700000000002e-05, 9.726300000000021e-05, 9.742999999999905e-05, 9.737500000000024e-05, 9.698599999999682e-05, 9.711100000000042e-05, 9.709700000000085e-05, 9.699999999999986e-05, 9.708299999999781e-05, 9.726399999999968e-05, 9.750000000000036e-05, 9.699999999999986e-05, 9.662500000000296e-05, 9.709700000000085e-05, 9.694500000000106e-05, 9.75140000000034e-05, 9.712499999999999e-05, 9.683300000000103e-05, 9.72080000000014e-05, 9.745899999999766e-05, 9.737499999999677e-05, 9.738899999999981e-05, 9.715199999999966e-05, 9.694399999999812e-05, 9.73609999999972e-05, 9.708300000000128e-05, 9.661099999999992e-05, 9.662499999999949e-05, 9.705600000000161e-05, 9.659699999999688e-05, 9.720900000000088e-05, 9.66669999999982e-05, 9.684699999999713e-05, 9.694500000000106e-05, 9.67920000000018e-05, 9.693099999999802e-05, 9.686199999999964e-05, 9.725000000000011e-05, 9.718000000000226e-05, 9.693000000000201e-05, 9.734699999999763e-05, 9.692999999999855e-05, 9.75279999999995e-05, 9.694400000000158e-05, 9.751399999999993e-05]</msg>
<status status="PASS" starttime="20201029 12:47:26.925" endtime="20201029 12:47:26.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.920" endtime="20201029 12:47:26.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:26.931" endtime="20201029 12:47:26.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.930" endtime="20201029 12:47:26.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.929" endtime="20201029 12:47:26.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.567" endtime="20201029 12:47:26.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.566" endtime="20201029 12:47:26.952"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.961" endtime="20201029 12:47:26.980"></status>
</kw>
<msg timestamp="20201029 12:47:26.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.959" endtime="20201029 12:47:26.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.982" endtime="20201029 12:47:26.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.984" endtime="20201029 12:47:26.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.957" endtime="20201029 12:47:26.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.955" endtime="20201029 12:47:26.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.994" endtime="20201029 12:47:27.282"></status>
</kw>
<msg timestamp="20201029 12:47:27.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022518583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022616653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.992" endtime="20201029 12:47:27.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022518583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022616653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:27.287" endtime="20201029 12:47:27.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.295" endtime="20201029 12:47:27.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.989" endtime="20201029 12:47:27.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.988" endtime="20201029 12:47:27.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:27.302" level="INFO">${RESULT} = [{'diff': 9.807000000000218e-05}, {'diff': 9.844499999999909e-05}, {'diff': 9.756999999999821e-05}, {'diff': 9.838900000000081e-05}, {'diff': 9.833299999999906e-05}, {'diff': 9.80410000000001e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:27.299" endtime="20201029 12:47:27.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:27.307" level="INFO">${ACCURACY} = {'diff': [9.807000000000218e-05, 9.844499999999909e-05, 9.756999999999821e-05, 9.838900000000081e-05, 9.833299999999906e-05, 9.80410000000001e-05, 9.844399999999962e-05, 9.844399999999962e-05, 9.75970...</msg>
<status status="PASS" starttime="20201029 12:47:27.303" endtime="20201029 12:47:27.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.311" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 12:47:27.310" endtime="20201029 12:47:27.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.314" level="INFO">VALUE: [9.807000000000218e-05, 9.844499999999909e-05, 9.756999999999821e-05, 9.838900000000081e-05, 9.833299999999906e-05, 9.80410000000001e-05, 9.844399999999962e-05, 9.844399999999962e-05, 9.759700000000135e-05, 9.79860000000013e-05, 9.85280000000005e-05, 9.813900000000056e-05, 9.790299999999988e-05, 9.763900000000006e-05, 9.784699999999813e-05, 9.805599999999914e-05, 9.779199999999932e-05, 9.758399999999778e-05, 9.824999999999764e-05, 9.783299999999856e-05, 9.805499999999967e-05, 9.805499999999967e-05, 9.844399999999962e-05, 9.816600000000023e-05, 9.81799999999998e-05, 9.805499999999967e-05, 9.818099999999927e-05, 9.82080000000024e-05, 9.825000000000111e-05, 9.819500000000231e-05, 9.822200000000197e-05, 9.81669999999997e-05, 9.805599999999914e-05, 9.823599999999807e-05, 9.783399999999803e-05, 9.779199999999932e-05, 9.783399999999803e-05, 9.787500000000074e-05, 9.805499999999967e-05, 9.781899999999899e-05, 9.812500000000099e-05, 9.808300000000228e-05, 9.756899999999874e-05, 9.787500000000074e-05, 9.829199999999982e-05, 9.826299999999774e-05, 9.777799999999975e-05, 9.791699999999945e-05, 9.850000000000136e-05, 9.84020000000009e-05]</msg>
<status status="PASS" starttime="20201029 12:47:27.312" endtime="20201029 12:47:27.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.308" endtime="20201029 12:47:27.315"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:27.319" endtime="20201029 12:47:27.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.318" endtime="20201029 12:47:27.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.316" endtime="20201029 12:47:27.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.953" endtime="20201029 12:47:27.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.952" endtime="20201029 12:47:27.340"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.349" endtime="20201029 12:47:27.369"></status>
</kw>
<msg timestamp="20201029 12:47:27.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.347" endtime="20201029 12:47:27.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.370" endtime="20201029 12:47:27.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.373" endtime="20201029 12:47:27.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.345" endtime="20201029 12:47:27.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.343" endtime="20201029 12:47:27.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.382" endtime="20201029 12:47:27.670"></status>
</kw>
<msg timestamp="20201029 12:47:27.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023328931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023428069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:27.381" endtime="20201029 12:47:27.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023328931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023428069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:27.674" endtime="20201029 12:47:27.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.683" endtime="20201029 12:47:27.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.378" endtime="20201029 12:47:27.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.376" endtime="20201029 12:47:27.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:27.689" level="INFO">${RESULT} = [{'diff': 9.913799999999862e-05}, {'diff': 9.894400000000012e-05}, {'diff': 9.945800000000019e-05}, {'diff': 9.898599999999882e-05}, {'diff': 9.916600000000123e-05}, {'diff': 9.880499999999695e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:27.686" endtime="20201029 12:47:27.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:27.694" level="INFO">${ACCURACY} = {'diff': [9.913799999999862e-05, 9.894400000000012e-05, 9.945800000000019e-05, 9.898599999999882e-05, 9.916600000000123e-05, 9.880499999999695e-05, 9.909699999999938e-05, 9.938900000000181e-05, 9.9333...</msg>
<status status="PASS" starttime="20201029 12:47:27.690" endtime="20201029 12:47:27.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.698" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 12:47:27.697" endtime="20201029 12:47:27.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.701" level="INFO">VALUE: [9.913799999999862e-05, 9.894400000000012e-05, 9.945800000000019e-05, 9.898599999999882e-05, 9.916600000000123e-05, 9.880499999999695e-05, 9.909699999999938e-05, 9.938900000000181e-05, 9.933300000000006e-05, 9.919499999999984e-05, 9.944500000000009e-05, 9.924999999999864e-05, 9.891700000000045e-05, 9.933399999999953e-05, 9.909800000000232e-05, 9.940299999999791e-05, 9.93060000000004e-05, 9.890299999999741e-05, 9.951399999999846e-05, 9.947199999999976e-05, 9.952699999999856e-05, 9.881899999999999e-05, 9.879100000000085e-05, 9.890299999999741e-05, 9.865300000000063e-05, 9.948599999999932e-05, 9.940300000000138e-05, 9.918100000000027e-05, 9.93609999999992e-05, 9.927800000000125e-05, 9.89999999999984e-05, 9.888899999999784e-05, 9.937500000000224e-05, 9.902699999999806e-05, 9.936100000000267e-05, 9.929100000000135e-05, 9.89020000000014e-05, 9.926399999999821e-05, 9.851399999999746e-05, 9.911099999999895e-05, 9.855599999999964e-05, 9.933300000000006e-05, 9.905600000000014e-05, 9.957000000000021e-05, 9.865300000000063e-05, 9.891699999999698e-05, 9.911099999999895e-05, 9.955600000000064e-05, 9.888900000000131e-05, 9.879200000000032e-05]</msg>
<status status="PASS" starttime="20201029 12:47:27.699" endtime="20201029 12:47:27.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.695" endtime="20201029 12:47:27.703"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:27.707" endtime="20201029 12:47:27.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.705" endtime="20201029 12:47:27.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.704" endtime="20201029 12:47:27.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.341" endtime="20201029 12:47:27.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.340" endtime="20201029 12:47:27.728"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.737" endtime="20201029 12:47:27.757"></status>
</kw>
<msg timestamp="20201029 12:47:27.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.735" endtime="20201029 12:47:27.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.758" endtime="20201029 12:47:27.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.761" endtime="20201029 12:47:27.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.732" endtime="20201029 12:47:27.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.730" endtime="20201029 12:47:27.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.771" endtime="20201029 12:47:28.056"></status>
</kw>
<msg timestamp="20201029 12:47:28.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022715139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022815222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:27.769" endtime="20201029 12:47:28.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022715139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022815222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.061" endtime="20201029 12:47:28.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.069" endtime="20201029 12:47:28.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.766" endtime="20201029 12:47:28.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.764" endtime="20201029 12:47:28.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:28.076" level="INFO">${RESULT} = [{'diff': 0.00010008300000000081}, {'diff': 0.0001002220000000005}, {'diff': 0.00010009700000000038}, {'diff': 9.987499999999927e-05}, {'diff': 9.995800000000069e-05}, {'diff': 0.00010008400000000028}...</msg>
<status status="PASS" starttime="20201029 12:47:28.073" endtime="20201029 12:47:28.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:28.081" level="INFO">${ACCURACY} = {'diff': [0.00010008300000000081, 0.0001002220000000005, 0.00010009700000000038, 9.987499999999927e-05, 9.995800000000069e-05, 0.00010008400000000028, 0.00010040299999999891, 9.991700000000145e-05, 0....</msg>
<status status="PASS" starttime="20201029 12:47:28.077" endtime="20201029 12:47:28.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.086" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 12:47:28.085" endtime="20201029 12:47:28.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.088" level="INFO">VALUE: [0.00010008300000000081, 0.0001002220000000005, 0.00010009700000000038, 9.987499999999927e-05, 9.995800000000069e-05, 0.00010008400000000028, 0.00010040299999999891, 9.991700000000145e-05, 0.0001005419999999986, 0.00010020900000000041, 0.00010038799999999987, 0.00010041699999999848, 0.00010001400000000243, 9.981899999999752e-05, 0.00010022199999999704, 0.00010038899999999934, 0.00010031900000000149, 9.988899999999884e-05, 9.995800000000069e-05, 9.980599999999742e-05, 0.00010037500000000324, 0.00010004200000000157, 0.00010011099999999995, 9.988899999999884e-05, 0.00010055599999999817, 9.957000000000021e-05, 0.00010012499999999952, 0.00010030499999999845, 0.0001001939999999979, 0.00010023600000000008, 9.987499999999927e-05, 0.00010033300000000106, 9.997200000000026e-05, 0.00010041699999999848, 9.987500000000274e-05, 0.00010032000000000096, 0.00010008300000000081, 0.00010037499999999977, 0.00010005600000000114, 9.995900000000016e-05, 0.0001000419999999981, 9.979200000000132e-05, 0.00010057000000000121, 0.00010027799999999878, 0.00010055600000000164, 9.99159999999985e-05, 0.00010026400000000268, 0.00010015300000000213, 9.965299999999816e-05, 0.00010024999999999964]</msg>
<status status="PASS" starttime="20201029 12:47:28.087" endtime="20201029 12:47:28.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.082" endtime="20201029 12:47:28.090"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:28.094" endtime="20201029 12:47:28.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.092" endtime="20201029 12:47:28.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.091" endtime="20201029 12:47:28.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.729" endtime="20201029 12:47:28.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.728" endtime="20201029 12:47:28.114"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.123" endtime="20201029 12:47:28.143"></status>
</kw>
<msg timestamp="20201029 12:47:28.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.122" endtime="20201029 12:47:28.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.145" endtime="20201029 12:47:28.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.148" endtime="20201029 12:47:28.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.119" endtime="20201029 12:47:28.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.117" endtime="20201029 12:47:28.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.157" endtime="20201029 12:47:28.445"></status>
</kw>
<msg timestamp="20201029 12:47:28.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022927361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023028625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.155" endtime="20201029 12:47:28.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022927361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023028625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.449" endtime="20201029 12:47:28.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.458" endtime="20201029 12:47:28.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.153" endtime="20201029 12:47:28.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.151" endtime="20201029 12:47:28.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:28.465" level="INFO">${RESULT} = [{'diff': 0.00010126400000000021}, {'diff': 0.00010095799999999822}, {'diff': 0.00010156999999999874}, {'diff': 0.00010126400000000021}, {'diff': 0.00010122199999999804}, {'diff': 0.000101389000000000...</msg>
<status status="PASS" starttime="20201029 12:47:28.461" endtime="20201029 12:47:28.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:28.470" level="INFO">${ACCURACY} = {'diff': [0.00010126400000000021, 0.00010095799999999822, 0.00010156999999999874, 0.00010126400000000021, 0.00010122199999999804, 0.00010138900000000034, 0.0001009159999999995, 0.00010140299999999991,...</msg>
<status status="PASS" starttime="20201029 12:47:28.466" endtime="20201029 12:47:28.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.474" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 12:47:28.473" endtime="20201029 12:47:28.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.477" level="INFO">VALUE: [0.00010126400000000021, 0.00010095799999999822, 0.00010156999999999874, 0.00010126400000000021, 0.00010122199999999804, 0.00010138900000000034, 0.0001009159999999995, 0.00010140299999999991, 0.00010107000000000171, 0.00010143099999999905, 0.00010152700000000056, 0.00010119400000000237, 0.00010156900000000274, 0.00010116699999999923, 0.00010124999999999718, 0.00010084700000000113, 0.00010133299999999859, 0.00010091700000000245, 0.00010152800000000003, 0.00010090299999999941, 0.00010109700000000138, 0.0001010000000000004, 0.00010123700000000055, 0.00010127700000000031, 0.0001009870000000003, 0.00010088899999999984, 0.00010108299999999834, 0.00010140200000000044, 0.00010106899999999877, 0.00010058300000000131, 0.00010117999999999933, 0.00010152800000000003, 0.0001012220000000015, 0.00010122199999999804, 0.0001008480000000006, 0.00010145899999999819, 0.00010147200000000176, 0.0001008060000000019, 0.00010134699999999816, 0.0001008060000000019, 0.00010107000000000171, 0.0001015000000000009, 0.00010131900000000249, 0.00010154100000000013, 0.00010125000000000065, 0.00010142999999999958, 0.00010148599999999786, 0.00010108299999999834, 0.00010080499999999895, 0.00010062500000000002]</msg>
<status status="PASS" starttime="20201029 12:47:28.476" endtime="20201029 12:47:28.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.471" endtime="20201029 12:47:28.478"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:28.482" endtime="20201029 12:47:28.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.481" endtime="20201029 12:47:28.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.479" endtime="20201029 12:47:28.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.115" endtime="20201029 12:47:28.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.115" endtime="20201029 12:47:28.503"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.512" endtime="20201029 12:47:28.535"></status>
</kw>
<msg timestamp="20201029 12:47:28.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.510" endtime="20201029 12:47:28.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.536" endtime="20201029 12:47:28.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.539" endtime="20201029 12:47:28.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.508" endtime="20201029 12:47:28.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.505" endtime="20201029 12:47:28.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.552" endtime="20201029 12:47:28.838"></status>
</kw>
<msg timestamp="20201029 12:47:28.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0262175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026319403, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:28.551" endtime="20201029 12:47:28.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0262175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026319403, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:28.842" endtime="20201029 12:47:28.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.851" endtime="20201029 12:47:28.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.548" endtime="20201029 12:47:28.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.545" endtime="20201029 12:47:28.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:28.857" level="INFO">${RESULT} = [{'diff': 0.00010190300000000041}, {'diff': 0.00010255600000000017}, {'diff': 0.0001025420000000006}, {'diff': 0.00010212500000000152}, {'diff': 0.00010234700000000263}, {'diff': 0.0001022770000000013...</msg>
<status status="PASS" starttime="20201029 12:47:28.854" endtime="20201029 12:47:28.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:28.861" level="INFO">${ACCURACY} = {'diff': [0.00010190300000000041, 0.00010255600000000017, 0.0001025420000000006, 0.00010212500000000152, 0.00010234700000000263, 0.00010227700000000131, 0.00010252800000000103, 0.00010197199999999879,...</msg>
<status status="PASS" starttime="20201029 12:47:28.858" endtime="20201029 12:47:28.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.865" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 12:47:28.864" endtime="20201029 12:47:28.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.868" level="INFO">VALUE: [0.00010190300000000041, 0.00010255600000000017, 0.0001025420000000006, 0.00010212500000000152, 0.00010234700000000263, 0.00010227700000000131, 0.00010252800000000103, 0.00010197199999999879, 0.000101722000000002, 0.00010229100000000088, 0.00010230500000000045, 0.00010190299999999694, 0.00010209699999999891, 0.00010198599999999836, 0.00010156899999999927, 0.00010179199999999985, 0.00010219499999999937, 0.0001023610000000022, 0.00010188900000000084, 0.00010161100000000145, 0.00010245799999999972, 0.00010227800000000078, 0.00010184700000000213, 0.00010215199999999772, 0.00010231900000000002, 0.00010193099999999955, 0.00010230500000000045, 0.00010179199999999985, 0.00010229199999999689, 0.00010215299999999719, 0.00010243100000000005, 0.00010227800000000078, 0.0001021809999999998, 0.00010184700000000213, 0.00010255600000000017, 0.00010202800000000053, 0.00010229100000000088, 0.00010247299999999876, 0.00010159699999999841, 0.00010183299999999909, 0.00010248600000000233, 0.00010183299999999909, 0.00010209699999999891, 0.00010241700000000048, 0.0001020000000000014, 0.00010216699999999676, 0.00010208299999999934, 0.00010159700000000188, 0.00010241700000000048, 0.00010229199999999689]</msg>
<status status="PASS" starttime="20201029 12:47:28.867" endtime="20201029 12:47:28.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.862" endtime="20201029 12:47:28.870"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:28.874" endtime="20201029 12:47:28.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.872" endtime="20201029 12:47:28.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.871" endtime="20201029 12:47:28.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.504" endtime="20201029 12:47:28.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.503" endtime="20201029 12:47:28.894"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.903" endtime="20201029 12:47:28.922"></status>
</kw>
<msg timestamp="20201029 12:47:28.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.902" endtime="20201029 12:47:28.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.924" endtime="20201029 12:47:28.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.926" endtime="20201029 12:47:28.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.899" endtime="20201029 12:47:28.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.897" endtime="20201029 12:47:28.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.935" endtime="20201029 12:47:29.221"></status>
</kw>
<msg timestamp="20201029 12:47:29.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021987333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022090514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.934" endtime="20201029 12:47:29.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021987333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022090514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:29.225" endtime="20201029 12:47:29.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.233" endtime="20201029 12:47:29.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.931" endtime="20201029 12:47:29.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.930" endtime="20201029 12:47:29.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:29.240" level="INFO">${RESULT} = [{'diff': 0.00010318099999999733}, {'diff': 0.0001030139999999985}, {'diff': 0.00010341700000000148}, {'diff': 0.00010319500000000037}, {'diff': 0.0001030559999999972}, {'diff': 0.0001025550000000007}...</msg>
<status status="PASS" starttime="20201029 12:47:29.237" endtime="20201029 12:47:29.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:29.245" level="INFO">${ACCURACY} = {'diff': [0.00010318099999999733, 0.0001030139999999985, 0.00010341700000000148, 0.00010319500000000037, 0.0001030559999999972, 0.0001025550000000007, 0.0001033879999999994, 0.00010333300000000059, 0....</msg>
<status status="PASS" starttime="20201029 12:47:29.241" endtime="20201029 12:47:29.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.249" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 12:47:29.248" endtime="20201029 12:47:29.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.251" level="INFO">VALUE: [0.00010318099999999733, 0.0001030139999999985, 0.00010341700000000148, 0.00010319500000000037, 0.0001030559999999972, 0.0001025550000000007, 0.0001033879999999994, 0.00010333300000000059, 0.00010340300000000191, 0.00010320800000000047, 0.00010283300000000009, 0.00010295800000000022, 0.00010297299999999926, 0.00010297199999999979, 0.00010333300000000059, 0.00010280600000000042, 0.00010355600000000117, 0.00010288899999999837, 0.00010312499999999905, 0.0001030139999999985, 0.00010308399999999981, 0.00010284799999999913, 0.00010345800000000072, 0.0001027359999999991, 0.00010306900000000077, 0.00010342999999999811, 0.0001033749999999993, 0.00010336099999999973, 0.00010261099999999898, 0.00010290300000000141, 0.00010283300000000009, 0.00010287500000000227, 0.00010352800000000204, 0.00010258400000000278, 0.00010340299999999844, 0.00010290300000000141, 0.00010282, 0.00010311099999999948, 0.00010263899999999812, 0.0001030550000000012, 0.00010352699999999909, 0.00010356900000000127, 0.0001035689999999978, 0.00010336099999999973, 0.00010338899999999887, 0.00010324999999999918, 0.00010259699999999941, 0.00010343100000000105, 0.00010279200000000085, 0.00010338899999999887]</msg>
<status status="PASS" starttime="20201029 12:47:29.250" endtime="20201029 12:47:29.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.245" endtime="20201029 12:47:29.253"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:29.256" endtime="20201029 12:47:29.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.255" endtime="20201029 12:47:29.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.254" endtime="20201029 12:47:29.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.895" endtime="20201029 12:47:29.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.895" endtime="20201029 12:47:29.277"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.286" endtime="20201029 12:47:29.306"></status>
</kw>
<msg timestamp="20201029 12:47:29.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.284" endtime="20201029 12:47:29.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.307" endtime="20201029 12:47:29.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.310" endtime="20201029 12:47:29.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.282" endtime="20201029 12:47:29.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.280" endtime="20201029 12:47:29.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.319" endtime="20201029 12:47:29.606"></status>
</kw>
<msg timestamp="20201029 12:47:29.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022292625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022397, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:47:29.317" endtime="20201029 12:47:29.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022292625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022397, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:47:29.610" endtime="20201029 12:47:29.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.618" endtime="20201029 12:47:29.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.315" endtime="20201029 12:47:29.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.313" endtime="20201029 12:47:29.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:29.625" level="INFO">${RESULT} = [{'diff': 0.0001043750000000003}, {'diff': 0.00010395799999999775}, {'diff': 0.00010398600000000036}, {'diff': 0.0001038749999999998}, {'diff': 0.00010419500000000137}, {'diff': 0.00010440299999999944...</msg>
<status status="PASS" starttime="20201029 12:47:29.622" endtime="20201029 12:47:29.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:29.629" level="INFO">${ACCURACY} = {'diff': [0.0001043750000000003, 0.00010395799999999775, 0.00010398600000000036, 0.0001038749999999998, 0.00010419500000000137, 0.00010440299999999944, 0.0001045559999999987, 0.00010390299999999894, 0...</msg>
<status status="PASS" starttime="20201029 12:47:29.626" endtime="20201029 12:47:29.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.633" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 12:47:29.632" endtime="20201029 12:47:29.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.636" level="INFO">VALUE: [0.0001043750000000003, 0.00010395799999999775, 0.00010398600000000036, 0.0001038749999999998, 0.00010419500000000137, 0.00010440299999999944, 0.0001045559999999987, 0.00010390299999999894, 0.00010430499999999898, 0.0001035689999999978, 0.00010366599999999879, 0.00010411099999999701, 0.0001045689999999988, 0.00010394400000000165, 0.00010463900000000012, 0.00010386100000000023, 0.00010383299999999762, 0.00010390299999999894, 0.00010402799999999907, 0.00010384700000000066, 0.00010434700000000116, 0.00010391699999999851, 0.00010419500000000137, 0.00010430599999999846, 0.00010384700000000066, 0.00010419399999999843, 0.00010390299999999894, 0.00010433300000000159, 0.00010383300000000109, 0.00010381899999999805, 0.00010394399999999818, 0.00010358300000000084, 0.00010388899999999937, 0.00010405499999999873, 0.00010450000000000043, 0.00010406999999999778, 0.00010409799999999692, 0.00010411100000000048, 0.00010397300000000026, 0.00010455499999999923, 0.00010426399999999975, 0.0001038749999999998, 0.00010409700000000091, 0.00010449999999999696, 0.0001045559999999987, 0.00010409700000000091, 0.00010448599999999739, 0.00010415299999999919, 0.00010391699999999851, 0.0001043750000000003]</msg>
<status status="PASS" starttime="20201029 12:47:29.634" endtime="20201029 12:47:29.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.630" endtime="20201029 12:47:29.637"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:29.641" endtime="20201029 12:47:29.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.639" endtime="20201029 12:47:29.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.638" endtime="20201029 12:47:29.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.278" endtime="20201029 12:47:29.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.278" endtime="20201029 12:47:29.661"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.670" endtime="20201029 12:47:29.690"></status>
</kw>
<msg timestamp="20201029 12:47:29.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.668" endtime="20201029 12:47:29.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.692" endtime="20201029 12:47:29.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.694" endtime="20201029 12:47:29.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.666" endtime="20201029 12:47:29.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.664" endtime="20201029 12:47:29.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.703" endtime="20201029 12:47:29.989"></status>
</kw>
<msg timestamp="20201029 12:47:29.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022904681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023010292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:29.702" endtime="20201029 12:47:29.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022904681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023010292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:29.993" endtime="20201029 12:47:30.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.001" endtime="20201029 12:47:30.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.699" endtime="20201029 12:47:30.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.697" endtime="20201029 12:47:30.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:30.008" level="INFO">${RESULT} = [{'diff': 0.00010561100000000198}, {'diff': 0.00010452799999999957}, {'diff': 0.00010541600000000054}, {'diff': 0.00010500000000000093}, {'diff': 0.00010513900000000062}, {'diff': 0.000105430000000000...</msg>
<status status="PASS" starttime="20201029 12:47:30.005" endtime="20201029 12:47:30.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:30.012" level="INFO">${ACCURACY} = {'diff': [0.00010561100000000198, 0.00010452799999999957, 0.00010541600000000054, 0.00010500000000000093, 0.00010513900000000062, 0.00010543000000000011, 0.00010555500000000023, 0.00010548599999999839...</msg>
<status status="PASS" starttime="20201029 12:47:30.009" endtime="20201029 12:47:30.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.017" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 12:47:30.016" endtime="20201029 12:47:30.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.019" level="INFO">VALUE: [0.00010561100000000198, 0.00010452799999999957, 0.00010541600000000054, 0.00010500000000000093, 0.00010513900000000062, 0.00010543000000000011, 0.00010555500000000023, 0.00010548599999999839, 0.00010511099999999801, 0.0001045420000000026, 0.00010490299999999994, 0.00010483299999999862, 0.00010548599999999839, 0.00010481999999999853, 0.00010523699999999761, 0.00010537499999999783, 0.00010518099999999933, 0.0001051949999999989, 0.00010491600000000004, 0.00010498600000000136, 0.00010523599999999814, 0.0001045689999999988, 0.00010492999999999961, 0.00010505499999999973, 0.00010515300000000019, 0.00010556999999999928, 0.00010488900000000037, 0.00010506999999999878, 0.00010531999999999903, 0.0001048750000000008, 0.00010490200000000047, 0.00010502800000000007, 0.00010500000000000093, 0.0001053750000000013, 0.00010519399999999943, 0.00010516600000000029, 0.00010493000000000308, 0.00010543000000000011, 0.00010537499999999783, 0.00010543000000000011, 0.00010495799999999875, 0.00010545799999999925, 0.00010500000000000093, 0.00010494499999999865, 0.00010502800000000007, 0.00010491699999999951, 0.00010533400000000206, 0.00010548700000000133, 0.0001048750000000008, 0.00010462500000000055]</msg>
<status status="PASS" starttime="20201029 12:47:30.018" endtime="20201029 12:47:30.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.013" endtime="20201029 12:47:30.021"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:30.025" endtime="20201029 12:47:30.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.023" endtime="20201029 12:47:30.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.022" endtime="20201029 12:47:30.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.662" endtime="20201029 12:47:30.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.662" endtime="20201029 12:47:30.046"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.054" endtime="20201029 12:47:30.074"></status>
</kw>
<msg timestamp="20201029 12:47:30.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:30.053" endtime="20201029 12:47:30.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:30.075" endtime="20201029 12:47:30.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.078" endtime="20201029 12:47:30.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.050" endtime="20201029 12:47:30.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.048" endtime="20201029 12:47:30.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.087" endtime="20201029 12:47:30.374"></status>
</kw>
<msg timestamp="20201029 12:47:30.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021973278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022079375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:30.085" endtime="20201029 12:47:30.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021973278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022079375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:30.378" endtime="20201029 12:47:30.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.386" endtime="20201029 12:47:30.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.083" endtime="20201029 12:47:30.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.081" endtime="20201029 12:47:30.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:30.392" level="INFO">${RESULT} = [{'diff': 0.00010609699999999944}, {'diff': 0.00010647199999999982}, {'diff': 0.00010645800000000025}, {'diff': 0.00010649999999999896}, {'diff': 0.00010630600000000046}, {'diff': 0.000106014000000001...</msg>
<status status="PASS" starttime="20201029 12:47:30.389" endtime="20201029 12:47:30.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:30.397" level="INFO">${ACCURACY} = {'diff': [0.00010609699999999944, 0.00010647199999999982, 0.00010645800000000025, 0.00010649999999999896, 0.00010630600000000046, 0.0001060140000000015, 0.00010613899999999815, 0.0001065560000000007, ...</msg>
<status status="PASS" starttime="20201029 12:47:30.393" endtime="20201029 12:47:30.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.402" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 12:47:30.401" endtime="20201029 12:47:30.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.405" level="INFO">VALUE: [0.00010609699999999944, 0.00010647199999999982, 0.00010645800000000025, 0.00010649999999999896, 0.00010630600000000046, 0.0001060140000000015, 0.00010613899999999815, 0.0001065560000000007, 0.00010622300000000251, 0.00010623699999999861, 0.0001065690000000008, 0.00010644399999999721, 0.00010580500000000048, 0.0001065690000000008, 0.00010622199999999957, 0.00010580500000000048, 0.00010590300000000094, 0.00010612500000000205, 0.00010604200000000064, 0.00010591700000000051, 0.00010606999999999978, 0.00010629200000000089, 0.0001062499999999987, 0.00010647299999999929, 0.00010598599999999889, 0.00010633300000000012, 0.0001060690000000003, 0.00010594400000000018, 0.00010579099999999744, 0.00010655500000000123, 0.00010640300000000144, 0.00010623599999999914, 0.0001060690000000003, 0.00010591700000000051, 0.000106514000000002, 0.00010598599999999889, 0.00010580599999999996, 0.00010640300000000144, 0.00010580599999999996, 0.00010602800000000107, 0.0001063750000000023, 0.00010619400000000043, 0.000106208, 0.00010561100000000198, 0.00010601399999999803, 0.00010630500000000098, 0.00010593000000000061, 0.00010568099999999983, 0.00010598599999999889, 0.00010595799999999975]</msg>
<status status="PASS" starttime="20201029 12:47:30.404" endtime="20201029 12:47:30.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.398" endtime="20201029 12:47:30.406"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:30.410" endtime="20201029 12:47:30.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.408" endtime="20201029 12:47:30.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.407" endtime="20201029 12:47:30.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.046" endtime="20201029 12:47:30.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.046" endtime="20201029 12:47:30.431"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.439" endtime="20201029 12:47:30.459"></status>
</kw>
<msg timestamp="20201029 12:47:30.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:30.438" endtime="20201029 12:47:30.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:30.460" endtime="20201029 12:47:30.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.463" endtime="20201029 12:47:30.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.435" endtime="20201029 12:47:30.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.433" endtime="20201029 12:47:30.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.472" endtime="20201029 12:47:30.759"></status>
</kw>
<msg timestamp="20201029 12:47:30.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022333917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022441514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:30.470" endtime="20201029 12:47:30.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022333917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022441514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:30.763" endtime="20201029 12:47:30.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.771" endtime="20201029 12:47:30.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.467" endtime="20201029 12:47:30.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.466" endtime="20201029 12:47:30.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:30.778" level="INFO">${RESULT} = [{'diff': 0.00010759700000000094}, {'diff': 0.00010729200000000189}, {'diff': 0.00010680600000000096}, {'diff': 0.000107208999999997}, {'diff': 0.00010720900000000047}, {'diff': 0.00010741699999999854...</msg>
<status status="PASS" starttime="20201029 12:47:30.774" endtime="20201029 12:47:30.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:30.782" level="INFO">${ACCURACY} = {'diff': [0.00010759700000000094, 0.00010729200000000189, 0.00010680600000000096, 0.000107208999999997, 0.00010720900000000047, 0.00010741699999999854, 0.00010659699999999994, 0.00010695800000000075, ...</msg>
<status status="PASS" starttime="20201029 12:47:30.778" endtime="20201029 12:47:30.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.786" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 12:47:30.785" endtime="20201029 12:47:30.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.788" level="INFO">VALUE: [0.00010759700000000094, 0.00010729200000000189, 0.00010680600000000096, 0.000107208999999997, 0.00010720900000000047, 0.00010741699999999854, 0.00010659699999999994, 0.00010695800000000075, 0.00010742999999999864, 0.0001070690000000013, 0.00010699999999999946, 0.00010694400000000118, 0.0001072499999999997, 0.00010659699999999994, 0.00010697200000000032, 0.00010744500000000115, 0.00010662499999999908, 0.00010687499999999933, 0.000107208999999997, 0.00010712499999999958, 0.00010730599999999799, 0.00010707000000000078, 0.00010743000000000211, 0.00010655499999999776, 0.00010729099999999894, 0.00010695800000000075, 0.00010679100000000191, 0.00010702800000000207, 0.00010745799999999778, 0.00010691700000000151, 0.00010665299999999822, 0.00010744500000000115, 0.00010722200000000057, 0.00010677799999999835, 0.00010658399999999985, 0.00010722300000000004, 0.00010705500000000173, 0.00010716699999999829, 0.0001072629999999998, 0.00010666599999999832, 0.00010691599999999857, 0.00010709700000000044, 0.00010719399999999796, 0.0001070279999999986, 0.00010686099999999976, 0.00010698600000000336, 0.000107208000000001, 0.00010743100000000158, 0.00010759800000000042, 0.00010743100000000158]</msg>
<status status="PASS" starttime="20201029 12:47:30.787" endtime="20201029 12:47:30.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.782" endtime="20201029 12:47:30.795"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:30.799" endtime="20201029 12:47:30.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.797" endtime="20201029 12:47:30.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.796" endtime="20201029 12:47:30.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.431" endtime="20201029 12:47:30.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.431" endtime="20201029 12:47:30.820"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.828" endtime="20201029 12:47:30.848"></status>
</kw>
<msg timestamp="20201029 12:47:30.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:30.827" endtime="20201029 12:47:30.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:30.850" endtime="20201029 12:47:30.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.852" endtime="20201029 12:47:30.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.824" endtime="20201029 12:47:30.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.822" endtime="20201029 12:47:30.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.862" endtime="20201029 12:47:31.147"></status>
</kw>
<msg timestamp="20201029 12:47:31.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022973681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023081417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:30.860" endtime="20201029 12:47:31.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022973681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023081417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:31.152" endtime="20201029 12:47:31.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.160" endtime="20201029 12:47:31.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.857" endtime="20201029 12:47:31.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.856" endtime="20201029 12:47:31.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:31.167" level="INFO">${RESULT} = [{'diff': 0.00010773600000000064}, {'diff': 0.00010836200000000074}, {'diff': 0.000107902}, {'diff': 0.00010830499999999951}, {'diff': 0.00010827700000000037}, {'diff': 0.00010816700000000276}, {'diff...</msg>
<status status="PASS" starttime="20201029 12:47:31.163" endtime="20201029 12:47:31.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:31.171" level="INFO">${ACCURACY} = {'diff': [0.00010773600000000064, 0.00010836200000000074, 0.000107902, 0.00010830499999999951, 0.00010827700000000037, 0.00010816700000000276, 0.00010811100000000101, 0.00010834700000000169, 0.0001079...</msg>
<status status="PASS" starttime="20201029 12:47:31.168" endtime="20201029 12:47:31.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.176" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 12:47:31.175" endtime="20201029 12:47:31.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.178" level="INFO">VALUE: [0.00010773600000000064, 0.00010836200000000074, 0.000107902, 0.00010830499999999951, 0.00010827700000000037, 0.00010816700000000276, 0.00010811100000000101, 0.00010834700000000169, 0.00010795800000000175, 0.0001082500000000007, 0.00010780600000000196, 0.00010790299999999947, 0.00010843099999999911, 0.00010761099999999704, 0.00010841600000000007, 0.00010762500000000008, 0.00010836100000000126, 0.00010783300000000162, 0.00010848600000000139, 0.00010798600000000089, 0.00010820799999999853, 0.00010813900000000015, 0.00010845799999999878, 0.00010826400000000028, 0.00010793100000000208, 0.00010832000000000203, 0.00010798600000000089, 0.00010816700000000276, 0.00010784700000000119, 0.00010812500000000058, 0.00010840299999999997, 0.00010784800000000067, 0.00010844399999999921, 0.00010829099999999994, 0.00010779099999999944, 0.00010836099999999779, 0.00010842999999999964, 0.0001085280000000001, 0.00010811099999999754, 0.00010812500000000058, 0.00010837500000000083, 0.00010837500000000083, 0.00010763899999999965, 0.00010800000000000046, 0.00010840299999999997, 0.00010801400000000003, 0.00010791699999999904, 0.0001078479999999972, 0.00010826399999999681, 0.00010848599999999792]</msg>
<status status="PASS" starttime="20201029 12:47:31.177" endtime="20201029 12:47:31.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.172" endtime="20201029 12:47:31.180"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:31.184" endtime="20201029 12:47:31.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.183" endtime="20201029 12:47:31.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.181" endtime="20201029 12:47:31.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.821" endtime="20201029 12:47:31.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.820" endtime="20201029 12:47:31.205"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.214" endtime="20201029 12:47:31.234"></status>
</kw>
<msg timestamp="20201029 12:47:31.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.212" endtime="20201029 12:47:31.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.236" endtime="20201029 12:47:31.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.238" endtime="20201029 12:47:31.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.210" endtime="20201029 12:47:31.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.207" endtime="20201029 12:47:31.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.248" endtime="20201029 12:47:31.559"></status>
</kw>
<msg timestamp="20201029 12:47:31.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022747181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022856, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:47:31.246" endtime="20201029 12:47:31.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022747181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022856, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:47:31.564" endtime="20201029 12:47:31.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.572" endtime="20201029 12:47:31.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.243" endtime="20201029 12:47:31.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.242" endtime="20201029 12:47:31.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:31.579" level="INFO">${RESULT} = [{'diff': 0.00010881899999999958}, {'diff': 0.00010949999999999849}, {'diff': 0.00010880599999999949}, {'diff': 0.00010961099999999904}, {'diff': 0.00010881999999999906}, {'diff': 0.000109013000000001...</msg>
<status status="PASS" starttime="20201029 12:47:31.576" endtime="20201029 12:47:31.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:31.584" level="INFO">${ACCURACY} = {'diff': [0.00010881899999999958, 0.00010949999999999849, 0.00010880599999999949, 0.00010961099999999904, 0.00010881999999999906, 0.00010901300000000155, 0.00010951399999999806, 0.00010887499999999786...</msg>
<status status="PASS" starttime="20201029 12:47:31.580" endtime="20201029 12:47:31.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.589" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 12:47:31.588" endtime="20201029 12:47:31.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.591" level="INFO">VALUE: [0.00010881899999999958, 0.00010949999999999849, 0.00010880599999999949, 0.00010961099999999904, 0.00010881999999999906, 0.00010901300000000155, 0.00010951399999999806, 0.00010887499999999786, 0.00010895799999999928, 0.00010897199999999885, 0.00010938899999999793, 0.00010894399999999971, 0.00010929200000000042, 0.00010948599999999892, 0.00010877800000000035, 0.00010924999999999824, 0.00010894500000000265, 0.00010922200000000257, 0.00010937499999999836, 0.00010915300000000072, 0.00010905500000000026, 0.00010934800000000217, 0.00010879100000000044, 0.0001092219999999991, 0.00010905500000000026, 0.00010886100000000176, 0.00010891700000000004, 0.00010901400000000103, 0.00010934699999999922, 0.00010891700000000004, 0.00010923600000000214, 0.00010884699999999872, 0.00010920900000000247, 0.00010918099999999986, 0.00010886099999999829, 0.00010937500000000183, 0.00010891600000000057, 0.00010901300000000155, 0.00010888799999999796, 0.00010959700000000294, 0.00010880599999999949, 0.00010948599999999892, 0.00010887499999999786, 0.00010883299999999915, 0.00010943100000000011, 0.00010945799999999978, 0.00010911200000000149, 0.00010944500000000315, 0.00010934699999999922, 0.00010909799999999845]</msg>
<status status="PASS" starttime="20201029 12:47:31.590" endtime="20201029 12:47:31.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.585" endtime="20201029 12:47:31.593"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:31.596" endtime="20201029 12:47:31.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.595" endtime="20201029 12:47:31.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.594" endtime="20201029 12:47:31.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.206" endtime="20201029 12:47:31.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.205" endtime="20201029 12:47:31.617"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.626" endtime="20201029 12:47:31.646"></status>
</kw>
<msg timestamp="20201029 12:47:31.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.625" endtime="20201029 12:47:31.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.648" endtime="20201029 12:47:31.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.651" endtime="20201029 12:47:31.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.622" endtime="20201029 12:47:31.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.620" endtime="20201029 12:47:31.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.660" endtime="20201029 12:47:31.948"></status>
</kw>
<msg timestamp="20201029 12:47:31.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022630889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022741333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:31.658" endtime="20201029 12:47:31.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022630889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022741333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:31.952" endtime="20201029 12:47:31.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.960" endtime="20201029 12:47:31.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.656" endtime="20201029 12:47:31.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.654" endtime="20201029 12:47:31.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:31.967" level="INFO">${RESULT} = [{'diff': 0.00011044399999999774}, {'diff': 0.00011011099999999954}, {'diff': 0.00011001399999999856}, {'diff': 0.00010990300000000147}, {'diff': 0.00010994400000000071}, {'diff': 0.000109652999999997...</msg>
<status status="PASS" starttime="20201029 12:47:31.964" endtime="20201029 12:47:31.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:31.971" level="INFO">${ACCURACY} = {'diff': [0.00011044399999999774, 0.00011011099999999954, 0.00011001399999999856, 0.00010990300000000147, 0.00010994400000000071, 0.00010965299999999775, 0.00010994500000000018, 0.00011023599999999967...</msg>
<status status="PASS" starttime="20201029 12:47:31.968" endtime="20201029 12:47:31.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.976" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 12:47:31.975" endtime="20201029 12:47:31.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.979" level="INFO">VALUE: [0.00011044399999999774, 0.00011011099999999954, 0.00011001399999999856, 0.00010990300000000147, 0.00010994400000000071, 0.00010965299999999775, 0.00010994500000000018, 0.00011023599999999967, 0.00010997199999999985, 0.00010994500000000018, 0.00010993000000000114, 0.00011022299999999957, 0.00010987500000000233, 0.00010965300000000122, 0.00011038899999999893, 0.00010992999999999767, 0.00011030500000000151, 0.00010988899999999843, 0.0001105280000000021, 0.00010959699999999947, 0.0001095419999999972, 0.00010984699999999972, 0.00011023700000000261, 0.00011013899999999868, 0.00010999999999999899, 0.00010990300000000147, 0.00011013900000000215, 0.00011055600000000124, 0.00011015199999999878, 0.00011051299999999958, 0.00010977799999999788, 0.00011001400000000203, 0.00010993000000000114, 0.0001102220000000001, 0.00011009699999999997, 0.00011009699999999997, 0.00011033300000000065, 0.00011051400000000253, 0.00011005599999999727, 0.00011012500000000258, 0.00011012499999999911, 0.00011049999999999949, 0.00011044500000000068, 0.00011052799999999863, 0.00011009699999999997, 0.00011009699999999997, 0.00010981900000000058, 0.00010980500000000101, 0.00011011099999999954, 0.00010961099999999904]</msg>
<status status="PASS" starttime="20201029 12:47:31.977" endtime="20201029 12:47:31.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.972" endtime="20201029 12:47:31.980"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:31.984" endtime="20201029 12:47:32.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.982" endtime="20201029 12:47:32.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.981" endtime="20201029 12:47:32.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.618" endtime="20201029 12:47:32.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.617" endtime="20201029 12:47:32.004"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.013" endtime="20201029 12:47:32.037"></status>
</kw>
<msg timestamp="20201029 12:47:32.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:32.012" endtime="20201029 12:47:32.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:32.039" endtime="20201029 12:47:32.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.042" endtime="20201029 12:47:32.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.009" endtime="20201029 12:47:32.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.007" endtime="20201029 12:47:32.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.051" endtime="20201029 12:47:32.334"></status>
</kw>
<msg timestamp="20201029 12:47:32.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025733875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025845278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:32.049" endtime="20201029 12:47:32.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025733875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025845278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:32.339" endtime="20201029 12:47:32.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.347" endtime="20201029 12:47:32.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.047" endtime="20201029 12:47:32.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.045" endtime="20201029 12:47:32.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:32.354" level="INFO">${RESULT} = [{'diff': 0.0001114029999999995}, {'diff': 0.00011093099999999814}, {'diff': 0.00011081900000000158}, {'diff': 0.00011109700000000097}, {'diff': 0.0001114159999999996}, {'diff': 0.00011115199999999978...</msg>
<status status="PASS" starttime="20201029 12:47:32.350" endtime="20201029 12:47:32.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:32.358" level="INFO">${ACCURACY} = {'diff': [0.0001114029999999995, 0.00011093099999999814, 0.00011081900000000158, 0.00011109700000000097, 0.0001114159999999996, 0.00011115199999999978, 0.00011095799999999781, 0.00011069499999999746, ...</msg>
<status status="PASS" starttime="20201029 12:47:32.355" endtime="20201029 12:47:32.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.362" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 12:47:32.361" endtime="20201029 12:47:32.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.365" level="INFO">VALUE: [0.0001114029999999995, 0.00011093099999999814, 0.00011081900000000158, 0.00011109700000000097, 0.0001114159999999996, 0.00011115199999999978, 0.00011095799999999781, 0.00011069499999999746, 0.00011131899999999861, 0.00011088899999999943, 0.00011105599999999827, 0.00011065299999999875, 0.00011079199999999845, 0.00011055600000000124, 0.00011083400000000063, 0.00011133399999999766, 0.00011105599999999827, 0.00011094400000000171, 0.00011082000000000106, 0.00011147200000000135, 0.00011099999999999999, 0.00011130599999999852, 0.00011098600000000042, 0.00011065299999999875, 0.00011059700000000047, 0.00011104200000000217, 0.0001110419999999987, 0.00011061100000000004, 0.0001115419999999992, 0.00011062499999999961, 0.00011097199999999738, 0.00011087499999999986, 0.00011081900000000158, 0.0001114159999999996, 0.00011092999999999867, 0.00011094399999999824, 0.00011133300000000165, 0.00011118000000000239, 0.00011099999999999999, 0.00011151400000000006, 0.00011123600000000067, 0.0001105830000000009, 0.0001112220000000011, 0.00011151400000000006, 0.00011108400000000088, 0.0001105419999999982, 0.00011119499999999796, 0.00011091600000000257, 0.00011102699999999965, 0.00011086099999999682]</msg>
<status status="PASS" starttime="20201029 12:47:32.363" endtime="20201029 12:47:32.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.359" endtime="20201029 12:47:32.367"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:32.371" endtime="20201029 12:47:32.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.369" endtime="20201029 12:47:32.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.368" endtime="20201029 12:47:32.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.005" endtime="20201029 12:47:32.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.005" endtime="20201029 12:47:32.392"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.401" endtime="20201029 12:47:32.421"></status>
</kw>
<msg timestamp="20201029 12:47:32.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:32.399" endtime="20201029 12:47:32.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:32.423" endtime="20201029 12:47:32.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.425" endtime="20201029 12:47:32.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.396" endtime="20201029 12:47:32.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.394" endtime="20201029 12:47:32.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.435" endtime="20201029 12:47:32.720"></status>
</kw>
<msg timestamp="20201029 12:47:32.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022558667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022671, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:47:32.433" endtime="20201029 12:47:32.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022558667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022671, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:47:32.725" endtime="20201029 12:47:32.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.733" endtime="20201029 12:47:32.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.430" endtime="20201029 12:47:32.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.429" endtime="20201029 12:47:32.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:32.740" level="INFO">${RESULT} = [{'diff': 0.00011233299999999918}, {'diff': 0.00011162500000000061}, {'diff': 0.00011229100000000047}, {'diff': 0.00011201400000000056}, {'diff': 0.00011237500000000136}, {'diff': 0.000112430999999999...</msg>
<status status="PASS" starttime="20201029 12:47:32.737" endtime="20201029 12:47:32.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:32.745" level="INFO">${ACCURACY} = {'diff': [0.00011233299999999918, 0.00011162500000000061, 0.00011229100000000047, 0.00011201400000000056, 0.00011237500000000136, 0.00011243099999999964, 0.00011245799999999931, 0.0001125700000000028,...</msg>
<status status="PASS" starttime="20201029 12:47:32.741" endtime="20201029 12:47:32.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.750" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 12:47:32.749" endtime="20201029 12:47:32.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.752" level="INFO">VALUE: [0.00011233299999999918, 0.00011162500000000061, 0.00011229100000000047, 0.00011201400000000056, 0.00011237500000000136, 0.00011243099999999964, 0.00011245799999999931, 0.0001125700000000028, 0.00011256999999999934, 0.00011252800000000063, 0.00011236099999999832, 0.00011205599999999927, 0.00011209800000000145, 0.00011156999999999834, 0.00011220799999999906, 0.00011223600000000167, 0.0001120549999999998, 0.0001117770000000004, 0.00011200000000000099, 0.00011226400000000081, 0.00011238800000000146, 0.00011197199999999838, 0.00011199999999999752, 0.00011236099999999832, 0.00011180599999999902, 0.00011206999999999884, 0.00011243099999999964, 0.0001125420000000002, 0.00011245799999999931, 0.00011197200000000185, 0.000112290999999997, 0.00011181899999999911, 0.00011197199999999838, 0.00011184699999999825, 0.00011161100000000104, 0.00011211099999999807, 0.00011209800000000145, 0.00011191699999999957, 0.00011241700000000007, 0.00011195899999999828, 0.00011236099999999832, 0.00011251400000000106, 0.00011226400000000081, 0.00011195900000000175, 0.00011179099999999997, 0.00011216599999999688, 0.00011183299999999868, 0.00011241599999999713, 0.00011187500000000086, 0.0001115830000000019]</msg>
<status status="PASS" starttime="20201029 12:47:32.751" endtime="20201029 12:47:32.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.746" endtime="20201029 12:47:32.753"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:32.757" endtime="20201029 12:47:32.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.756" endtime="20201029 12:47:32.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.754" endtime="20201029 12:47:32.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.393" endtime="20201029 12:47:32.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.392" endtime="20201029 12:47:32.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.219" endtime="20201029 12:47:32.778"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:54.151" endtime="20201029 12:47:32.779" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:46:14.104" endtime="20201029 12:47:32.782"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.836" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:47:32.844" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:47:34.008" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:47:32.835" endtime="20201029 12:47:34.009"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.011" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:47:34.010" endtime="20201029 12:47:34.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.834" endtime="20201029 12:47:34.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:34.014" endtime="20201029 12:47:34.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.013" endtime="20201029 12:47:34.200"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.212" endtime="20201029 12:47:34.227"></status>
</kw>
<msg timestamp="20201029 12:47:34.228" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.211" endtime="20201029 12:47:34.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.231" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.229" endtime="20201029 12:47:34.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.234" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:34.232" endtime="20201029 12:47:34.234"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:34.208" endtime="20201029 12:47:34.235"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:34.206" endtime="20201029 12:47:34.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.205" endtime="20201029 12:47:34.236"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:34.240" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:34.239" endtime="20201029 12:47:34.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.237" endtime="20201029 12:47:34.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.204" endtime="20201029 12:47:34.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.203" endtime="20201029 12:47:34.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.241" endtime="20201029 12:47:34.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.202" endtime="20201029 12:47:34.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.244" endtime="20201029 12:47:34.246"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.201" endtime="20201029 12:47:34.246"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.832" endtime="20201029 12:47:34.247"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:34.253" endtime="20201029 12:47:34.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.251" endtime="20201029 12:47:34.273"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.287" endtime="20201029 12:47:34.301"></status>
</kw>
<msg timestamp="20201029 12:47:34.301" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.285" endtime="20201029 12:47:34.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.304" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.302" endtime="20201029 12:47:34.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.308" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:34.305" endtime="20201029 12:47:34.308"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:34.282" endtime="20201029 12:47:34.309"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:34.280" endtime="20201029 12:47:34.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.279" endtime="20201029 12:47:34.310"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:34.314" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:34.313" endtime="20201029 12:47:34.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.311" endtime="20201029 12:47:34.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.278" endtime="20201029 12:47:34.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.277" endtime="20201029 12:47:34.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.316" endtime="20201029 12:47:34.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.275" endtime="20201029 12:47:34.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.274" endtime="20201029 12:47:34.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.250" endtime="20201029 12:47:34.318"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.327" endtime="20201029 12:47:40.450"></status>
</kw>
<msg timestamp="20201029 12:47:40.451" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.325" endtime="20201029 12:47:40.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.456" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:40.453" endtime="20201029 12:47:40.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.459" endtime="20201029 12:47:40.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.323" endtime="20201029 12:47:40.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.321" endtime="20201029 12:47:40.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:40.470" level="INFO">${RESULT} = {'bg-timer-count': 0, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:47:40.466" endtime="20201029 12:47:40.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.480" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:47:40.478" endtime="20201029 12:47:40.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.485" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:47:40.482" endtime="20201029 12:47:40.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.472" endtime="20201029 12:47:40.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.490" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:47:40.489" endtime="20201029 12:47:40.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.492" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:47:40.491" endtime="20201029 12:47:40.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.487" endtime="20201029 12:47:40.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.497" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:47:40.496" endtime="20201029 12:47:40.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.499" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 12:47:40.498" endtime="20201029 12:47:40.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.494" endtime="20201029 12:47:40.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.507" endtime="20201029 12:47:40.809"></status>
</kw>
<msg timestamp="20201029 12:47:40.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064315319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164336639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:40.505" endtime="20201029 12:47:40.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064315319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164336639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:40.813" endtime="20201029 12:47:40.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.822" endtime="20201029 12:47:40.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.503" endtime="20201029 12:47:40.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.501" endtime="20201029 12:47:40.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:47:40.828" level="INFO">${FILTERED} = [{'diff': 0.10002132000000001}, {'diff': 0.10000538800000003}, {'diff': 0.10000676399999997}, {'diff': 0.10000676400000003}, {'diff': 0.10000684700000007}, {'diff': 0.10000674999999992}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201029 12:47:40.825" endtime="20201029 12:47:40.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:40.833" level="INFO">${RESULT} = {'diff': [0.10002132000000001, 0.10000538800000003, 0.10000676399999997, 0.10000676400000003, 0.10000684700000007, 0.10000674999999992, 0.10000669500000003, 0.10000669499999992, 0.10000679199999996, 0...</msg>
<status status="PASS" starttime="20201029 12:47:40.830" endtime="20201029 12:47:40.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.837" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:47:40.836" endtime="20201029 12:47:40.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.839" level="INFO">VALUE: [0.10002132000000001, 0.10000538800000003, 0.10000676399999997, 0.10000676400000003, 0.10000684700000007, 0.10000674999999992, 0.10000669500000003, 0.10000669499999992, 0.10000679199999996, 0.10000672300000002, 0.10000670900000008, 0.10000670900000008, 0.10000679200000007, 0.10000672200000005, 0.100006708, 0.10000679099999998, 0.10000680499999981, 0.10000672200000005, 0.100006708, 0.10000672200000027, 0.10000672199999983, 0.10000670900000008, 0.10000680600000011, 0.10000672199999983, 0.100006708, 0.10000672200000027, 0.10000672199999983, 0.10000672200000027, 0.10000672199999983, 0.10000672199999983, 0.1000067360000001, 0.10000669500000026, 0.10000679199999984, 0.10000679200000029, 0.10000681899999986, 0.100006708, 0.10000676400000019, 0.10000668099999999, 0.1000067360000001, 0.10000672300000035, 0.10000670900000053, 0.10000675000000037, 0.10000670800000044, 0.10000670800000044, 0.10000680499999959, 0.10000672199999983, 0.1000067360000001, 0.10000670899999964, 0.10000680600000056, 0.10000672199999983, 0.10000675000000037]</msg>
<status status="PASS" starttime="20201029 12:47:40.838" endtime="20201029 12:47:40.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.833" endtime="20201029 12:47:40.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.319" endtime="20201029 12:47:40.841"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:34.247" endtime="20201029 12:47:40.842" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:40.849" endtime="20201029 12:47:40.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.847" endtime="20201029 12:47:40.869"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.883" endtime="20201029 12:47:40.899"></status>
</kw>
<msg timestamp="20201029 12:47:40.900" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:40.881" endtime="20201029 12:47:40.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.904" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:40.901" endtime="20201029 12:47:40.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.912" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:40.908" endtime="20201029 12:47:40.912"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:40.879" endtime="20201029 12:47:40.916"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:40.876" endtime="20201029 12:47:40.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.874" endtime="20201029 12:47:40.918"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:40.922" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:40.922" endtime="20201029 12:47:40.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.919" endtime="20201029 12:47:40.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.873" endtime="20201029 12:47:40.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.872" endtime="20201029 12:47:40.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.924" endtime="20201029 12:47:40.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.871" endtime="20201029 12:47:40.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.869" endtime="20201029 12:47:40.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.846" endtime="20201029 12:47:40.927"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.935" endtime="20201029 12:47:47.058"></status>
</kw>
<msg timestamp="20201029 12:47:47.060" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:40.934" endtime="20201029 12:47:47.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.065" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:47.062" endtime="20201029 12:47:47.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.067" endtime="20201029 12:47:47.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.931" endtime="20201029 12:47:47.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.929" endtime="20201029 12:47:47.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:47.079" level="INFO">${RESULT} = {'bg-timer-count': 5, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:47:47.075" endtime="20201029 12:47:47.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.088" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:47:47.086" endtime="20201029 12:47:47.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.093" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:47:47.091" endtime="20201029 12:47:47.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.081" endtime="20201029 12:47:47.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.106" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:47:47.101" endtime="20201029 12:47:47.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.111" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:47:47.108" endtime="20201029 12:47:47.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.096" endtime="20201029 12:47:47.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.121" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:47:47.119" endtime="20201029 12:47:47.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.126" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 12:47:47.123" endtime="20201029 12:47:47.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.114" endtime="20201029 12:47:47.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.142" endtime="20201029 12:47:47.439"></status>
</kw>
<msg timestamp="20201029 12:47:47.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077083278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.177114042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:47.138" endtime="20201029 12:47:47.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077083278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.177114042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:47.443" endtime="20201029 12:47:47.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.451" endtime="20201029 12:47:47.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.133" endtime="20201029 12:47:47.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.129" endtime="20201029 12:47:47.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:47:47.458" level="INFO">${FILTERED} = [{'diff': 0.100030764}, {'diff': 0.09999575}, {'diff': 0.100006708}, {'diff': 0.10000694400000004}, {'diff': 0.10000783400000002}, {'diff': 0.10000556999999999}, {'diff': 0.10000695800000003}, {'diff'...</msg>
<status status="PASS" starttime="20201029 12:47:47.455" endtime="20201029 12:47:47.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:47.463" level="INFO">${RESULT} = {'diff': [0.100030764, 0.09999575, 0.100006708, 0.10000694400000004, 0.10000783400000002, 0.10000556999999999, 0.10000695800000003, 0.10000682000000005, 0.10000783299999993, 0.10000573599999996, 0.100...</msg>
<status status="PASS" starttime="20201029 12:47:47.459" endtime="20201029 12:47:47.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.468" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:47:47.466" endtime="20201029 12:47:47.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.470" level="INFO">VALUE: [0.100030764, 0.09999575, 0.100006708, 0.10000694400000004, 0.10000783400000002, 0.10000556999999999, 0.10000695800000003, 0.10000682000000005, 0.10000783299999993, 0.10000573599999996, 0.10000780500000017, 5.410000001315751e-07, 4.729999998343004e-07, 0.10000822200000004, 0.10000575, 0.10000776399999989, 0.10000573600000018, 0.1000077370000001, 0.10000584700000004, 0.10000773599999979, 0.10000575000000023, 0.10000775000000006, 0.10000581900000016, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.420000004363601e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 5.419999995481817e-07, 5.409999994654413e-07, 4.7199999997360464e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.409999994654413e-07]</msg>
<status status="PASS" starttime="20201029 12:47:47.469" endtime="20201029 12:47:47.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.463" endtime="20201029 12:47:47.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.928" endtime="20201029 12:47:47.477"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:40.843" endtime="20201029 12:47:47.477" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:47.484" endtime="20201029 12:47:47.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.482" endtime="20201029 12:47:47.504"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.517" endtime="20201029 12:47:47.531"></status>
</kw>
<msg timestamp="20201029 12:47:47.532" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:47.516" endtime="20201029 12:47:47.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.535" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:47.533" endtime="20201029 12:47:47.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.538" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:47.536" endtime="20201029 12:47:47.538"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:47.513" endtime="20201029 12:47:47.539"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:47.511" endtime="20201029 12:47:47.539"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.510" endtime="20201029 12:47:47.540"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:47.543" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:47.543" endtime="20201029 12:47:47.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.540" endtime="20201029 12:47:47.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.509" endtime="20201029 12:47:47.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.508" endtime="20201029 12:47:47.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.545" endtime="20201029 12:47:47.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.506" endtime="20201029 12:47:47.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.505" endtime="20201029 12:47:47.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.481" endtime="20201029 12:47:47.548"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.558" endtime="20201029 12:47:53.681"></status>
</kw>
<msg timestamp="20201029 12:47:53.682" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:47.555" endtime="20201029 12:47:53.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.688" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:53.684" endtime="20201029 12:47:53.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.690" endtime="20201029 12:47:53.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.552" endtime="20201029 12:47:53.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.550" endtime="20201029 12:47:53.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:53.702" level="INFO">${RESULT} = {'bg-timer-count': 10, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:47:53.698" endtime="20201029 12:47:53.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.711" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:47:53.709" endtime="20201029 12:47:53.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.716" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:47:53.714" endtime="20201029 12:47:53.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.704" endtime="20201029 12:47:53.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.723" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:47:53.722" endtime="20201029 12:47:53.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.725" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:47:53.724" endtime="20201029 12:47:53.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.719" endtime="20201029 12:47:53.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.730" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:47:53.729" endtime="20201029 12:47:53.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.732" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 12:47:53.731" endtime="20201029 12:47:53.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.727" endtime="20201029 12:47:53.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.740" endtime="20201029 12:47:54.036"></status>
</kw>
<msg timestamp="20201029 12:47:54.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064432153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164468069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:53.738" endtime="20201029 12:47:54.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064432153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164468069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:54.040" endtime="20201029 12:47:54.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.049" endtime="20201029 12:47:54.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.736" endtime="20201029 12:47:54.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.734" endtime="20201029 12:47:54.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:47:54.055" level="INFO">${FILTERED} = [{'diff': 0.10003591599999999}, {'diff': 0.09999086099999999}, {'diff': 0.10000765299999997}, {'diff': 0.10000562499999999}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': ...</msg>
<status status="PASS" starttime="20201029 12:47:54.052" endtime="20201029 12:47:54.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:54.063" level="INFO">${RESULT} = {'diff': [0.10003591599999999, 0.09999086099999999, 0.10000765299999997, 0.10000562499999999, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000000205528e-07, 4.7199999997360464e-07, 5.42000000103...</msg>
<status status="PASS" starttime="20201029 12:47:54.056" endtime="20201029 12:47:54.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.067" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:47:54.066" endtime="20201029 12:47:54.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.070" level="INFO">VALUE: [0.10003591599999999, 0.09999086099999999, 0.10000765299999997, 0.10000562499999999, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000000205528e-07, 4.7199999997360464e-07, 5.420000001032932e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.409999999095305e-07, 4.73000000056345e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 0.10000820799999977, 0.10000581900000016, 0.1000078339999999, 0.10000573599999996, 0.10000775000000006, 0.10000575000000023, 0.10000775000000006, 0.10000573599999996, 0.1000078339999999, 0.10000573599999996, 0.10000783300000027, 0.10000573599999996, 0.10000783299999982, 0.10000575000000023, 0.10000773600000024, 0.10000583299999999, 0.10000773599999935, 0.10000582000000069, 0.10000783299999938, 0.10000573599999996, 0.10000783400000035, 0.10000573599999996, 0.10000783300000027, 0.10000575000000023, 0.10000774999999962]</msg>
<status status="PASS" starttime="20201029 12:47:54.068" endtime="20201029 12:47:54.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.064" endtime="20201029 12:47:54.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.549" endtime="20201029 12:47:54.072"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:47.479" endtime="20201029 12:47:54.072" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:54.079" endtime="20201029 12:47:54.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.077" endtime="20201029 12:47:54.099"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.112" endtime="20201029 12:47:54.126"></status>
</kw>
<msg timestamp="20201029 12:47:54.127" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:54.110" endtime="20201029 12:47:54.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.130" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:54.128" endtime="20201029 12:47:54.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.133" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:54.131" endtime="20201029 12:47:54.133"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:54.108" endtime="20201029 12:47:54.134"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:54.105" endtime="20201029 12:47:54.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.104" endtime="20201029 12:47:54.135"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:54.140" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:54.139" endtime="20201029 12:47:54.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.135" endtime="20201029 12:47:54.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.103" endtime="20201029 12:47:54.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.102" endtime="20201029 12:47:54.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.142" endtime="20201029 12:47:54.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.101" endtime="20201029 12:47:54.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.099" endtime="20201029 12:47:54.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.076" endtime="20201029 12:47:54.145"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.154" endtime="20201029 12:48:00.278"></status>
</kw>
<msg timestamp="20201029 12:48:00.279" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:54.153" endtime="20201029 12:48:00.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.287" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:00.282" endtime="20201029 12:48:00.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.290" endtime="20201029 12:48:00.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.150" endtime="20201029 12:48:00.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.147" endtime="20201029 12:48:00.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:00.302" level="INFO">${RESULT} = {'bg-timer-count': 15, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:48:00.297" endtime="20201029 12:48:00.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.312" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:00.308" endtime="20201029 12:48:00.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.322" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:48:00.319" endtime="20201029 12:48:00.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.304" endtime="20201029 12:48:00.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.343" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:00.337" endtime="20201029 12:48:00.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.348" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:48:00.345" endtime="20201029 12:48:00.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.331" endtime="20201029 12:48:00.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.361" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:48:00.359" endtime="20201029 12:48:00.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.366" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 12:48:00.364" endtime="20201029 12:48:00.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.353" endtime="20201029 12:48:00.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.381" endtime="20201029 12:48:00.677"></status>
</kw>
<msg timestamp="20201029 12:48:00.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066125333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166164514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:00.378" endtime="20201029 12:48:00.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066125333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166164514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:00.681" endtime="20201029 12:48:00.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.689" endtime="20201029 12:48:00.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.373" endtime="20201029 12:48:00.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.369" endtime="20201029 12:48:00.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:48:00.696" level="INFO">${FILTERED} = [{'diff': 0.10003918100000002}, {'diff': 0.099987097}, {'diff': 0.10000766699999997}, {'diff': 0.10000586099999997}, {'diff': 0.100007611}, {'diff': 0.10000570900000005}, {'diff': 0.100007014}, {'diff...</msg>
<status status="PASS" starttime="20201029 12:48:00.693" endtime="20201029 12:48:00.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:00.700" level="INFO">${RESULT} = {'diff': [0.10003918100000002, 0.099987097, 0.10000766699999997, 0.10000586099999997, 0.100007611, 0.10000570900000005, 0.100007014, 0.10000773600000001, 0.10000679200000007, 0.10000666700000005, 0.10...</msg>
<status status="PASS" starttime="20201029 12:48:00.697" endtime="20201029 12:48:00.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.704" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:48:00.703" endtime="20201029 12:48:00.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.706" level="INFO">VALUE: [0.10003918100000002, 0.099987097, 0.10000766699999997, 0.10000586099999997, 0.100007611, 0.10000570900000005, 0.100007014, 0.10000773600000001, 0.10000679200000007, 0.10000666700000005, 0.10000677699999994, 0.10000662500000002, 0.10000688899999988, 0.10000663899999984, 0.10000679199999984, 0.10000663900000006, 0.10000687500000005, 0.10000670900000008, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.409999999095305e-07, 4.73000000056345e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 0.10000713800000005, 0.10000679200000029, 0.10000674999999992, 0.10000679099999976, 0.10000663899999962, 0.1000068190000003, 0.10000665199999981, 0.10000680600000011, 0.10000663900000006, 0.10000680500000048, 0.1000066670000006, 0.10000679200000029, 0.10000665299999945, 0.10000680599999967, 0.10000666699999972, 0.10000687500000005, 0.10000727799999964, 0.1000066799999999, 0.1000067919999994]</msg>
<status status="PASS" starttime="20201029 12:48:00.705" endtime="20201029 12:48:00.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.701" endtime="20201029 12:48:00.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.146" endtime="20201029 12:48:00.708"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:54.074" endtime="20201029 12:48:00.709" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:00.715" endtime="20201029 12:48:00.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.713" endtime="20201029 12:48:00.735"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.749" endtime="20201029 12:48:00.762"></status>
</kw>
<msg timestamp="20201029 12:48:00.762" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:00.747" endtime="20201029 12:48:00.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.765" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:00.763" endtime="20201029 12:48:00.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.768" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:00.766" endtime="20201029 12:48:00.768"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:00.744" endtime="20201029 12:48:00.769"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:00.741" endtime="20201029 12:48:00.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.740" endtime="20201029 12:48:00.769"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:00.773" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:00.772" endtime="20201029 12:48:00.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.770" endtime="20201029 12:48:00.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.739" endtime="20201029 12:48:00.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.739" endtime="20201029 12:48:00.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.775" endtime="20201029 12:48:00.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.737" endtime="20201029 12:48:00.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.735" endtime="20201029 12:48:00.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.712" endtime="20201029 12:48:00.778"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.786" endtime="20201029 12:48:06.904"></status>
</kw>
<msg timestamp="20201029 12:48:06.904" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:00.784" endtime="20201029 12:48:06.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.907" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:06.905" endtime="20201029 12:48:06.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.908" endtime="20201029 12:48:06.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.782" endtime="20201029 12:48:06.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.780" endtime="20201029 12:48:06.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:06.913" level="INFO">${RESULT} = {'bg-timer-count': 20, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:48:06.911" endtime="20201029 12:48:06.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.918" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:06.917" endtime="20201029 12:48:06.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.920" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:48:06.919" endtime="20201029 12:48:06.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.914" endtime="20201029 12:48:06.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.924" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:06.923" endtime="20201029 12:48:06.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.926" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:48:06.926" endtime="20201029 12:48:06.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.921" endtime="20201029 12:48:06.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.931" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:48:06.930" endtime="20201029 12:48:06.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.933" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 12:48:06.932" endtime="20201029 12:48:06.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.928" endtime="20201029 12:48:06.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.942" endtime="20201029 12:48:07.253"></status>
</kw>
<msg timestamp="20201029 12:48:07.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061296306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161368597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:06.940" endtime="20201029 12:48:07.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061296306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161368597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:07.258" endtime="20201029 12:48:07.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.266" endtime="20201029 12:48:07.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.938" endtime="20201029 12:48:07.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.935" endtime="20201029 12:48:07.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:48:07.272" level="INFO">${FILTERED} = [{'diff': 0.10007229100000001}, {'diff': 0.099955028}, {'diff': 0.100004653}, {'diff': 0.10000787500000002}, {'diff': 0.10000568100000001}, {'diff': 0.10000784699999998}, {'diff': 5.419999999922709e-0...</msg>
<status status="PASS" starttime="20201029 12:48:07.269" endtime="20201029 12:48:07.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:07.276" level="INFO">${RESULT} = {'diff': [0.10007229100000001, 0.099955028, 0.100004653, 0.10000787500000002, 0.10000568100000001, 0.10000784699999998, 5.419999999922709e-07, 5.410000000205528e-07, 5.410000000205528e-07, 5.419999999...</msg>
<status status="PASS" starttime="20201029 12:48:07.273" endtime="20201029 12:48:07.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.281" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:48:07.280" endtime="20201029 12:48:07.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.283" level="INFO">VALUE: [0.10007229100000001, 0.099955028, 0.100004653, 0.10000787500000002, 0.10000568100000001, 0.10000784699999998, 5.419999999922709e-07, 5.410000000205528e-07, 5.410000000205528e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.729999996122558e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.419999999922709e-07, 4.73000000056345e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.420000004363601e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:48:07.282" endtime="20201029 12:48:07.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.277" endtime="20201029 12:48:07.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.778" endtime="20201029 12:48:07.285"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 12:48:00.710" endtime="20201029 12:48:07.285" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:07.293" endtime="20201029 12:48:07.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.290" endtime="20201029 12:48:07.313"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.329" endtime="20201029 12:48:07.344"></status>
</kw>
<msg timestamp="20201029 12:48:07.345" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:07.327" endtime="20201029 12:48:07.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.348" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:07.347" endtime="20201029 12:48:07.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.353" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:07.350" endtime="20201029 12:48:07.353"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:07.322" endtime="20201029 12:48:07.354"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:07.320" endtime="20201029 12:48:07.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.318" endtime="20201029 12:48:07.355"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:07.359" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:07.358" endtime="20201029 12:48:07.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.356" endtime="20201029 12:48:07.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.317" endtime="20201029 12:48:07.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.316" endtime="20201029 12:48:07.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.361" endtime="20201029 12:48:07.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.315" endtime="20201029 12:48:07.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.313" endtime="20201029 12:48:07.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.289" endtime="20201029 12:48:07.363"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.371" endtime="20201029 12:48:13.493"></status>
</kw>
<msg timestamp="20201029 12:48:13.494" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:07.370" endtime="20201029 12:48:13.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.499" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:13.496" endtime="20201029 12:48:13.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.502" endtime="20201029 12:48:13.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.367" endtime="20201029 12:48:13.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.365" endtime="20201029 12:48:13.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:13.512" level="INFO">${RESULT} = {'bg-timer-count': 25, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:48:13.508" endtime="20201029 12:48:13.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.523" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:13.519" endtime="20201029 12:48:13.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.527" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:48:13.525" endtime="20201029 12:48:13.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.514" endtime="20201029 12:48:13.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.536" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:13.535" endtime="20201029 12:48:13.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.538" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:48:13.537" endtime="20201029 12:48:13.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.530" endtime="20201029 12:48:13.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.542" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:48:13.541" endtime="20201029 12:48:13.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.544" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 12:48:13.543" endtime="20201029 12:48:13.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.539" endtime="20201029 12:48:13.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.551" endtime="20201029 12:48:13.846"></status>
</kw>
<msg timestamp="20201029 12:48:13.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069080681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.169169181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:13.550" endtime="20201029 12:48:13.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069080681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.169169181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:13.851" endtime="20201029 12:48:13.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.859" endtime="20201029 12:48:13.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.547" endtime="20201029 12:48:13.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.546" endtime="20201029 12:48:13.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:48:13.865" level="INFO">${FILTERED} = [{'diff': 0.1000885}, {'diff': 0.10002736100000001}, {'diff': 0.099916597}, {'diff': 0.10000773600000001}, {'diff': 0.10000675000000003}, {'diff': 0.10000573599999996}, {'diff': 0.10000672200000005}, ...</msg>
<status status="PASS" starttime="20201029 12:48:13.862" endtime="20201029 12:48:13.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:13.870" level="INFO">${RESULT} = {'diff': [0.1000885, 0.10002736100000001, 0.099916597, 0.10000773600000001, 0.10000675000000003, 0.10000573599999996, 0.10000672200000005, 0.10000772199999997, 0.10000683399999999, 0.10000572299999999...</msg>
<status status="PASS" starttime="20201029 12:48:13.866" endtime="20201029 12:48:13.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.874" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:48:13.873" endtime="20201029 12:48:13.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.876" level="INFO">VALUE: [0.1000885, 0.10002736100000001, 0.099916597, 0.10000773600000001, 0.10000675000000003, 0.10000573599999996, 0.10000672200000005, 0.10000772199999997, 0.10000683399999999, 0.10000572299999999, 0.10000673599999987, 0.10000772199999997, 0.10000681900000008, 0.10000674999999992, 0.10000670900000008, 0.10000681900000008, 0.10000572199999991, 0.10000684800000004, 0.10000772299999983, 0.10000677800000002, 5.419999999922709e-07, 4.7199999997360464e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7200000041769385e-07, 5.409999999095305e-07, 4.73000000056345e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201029 12:48:13.875" endtime="20201029 12:48:13.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.871" endtime="20201029 12:48:13.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.364" endtime="20201029 12:48:13.878"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 12:48:07.287" endtime="20201029 12:48:13.879" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:47:32.792" endtime="20201029 12:48:13.885"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 12:45:30.497" endtime="20201029 12:48:13.917"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
